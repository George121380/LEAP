{"Wash clothes": [{"usage_description": "", "cdl": "behavior load_washing_machine(clothes:item, washing_machine:item):\n    body:\n        achieve inside(clothes, washing_machine)\n        # Place the clothes inside the washing machine\n", "source_sub_task": "2. Wash the clothes in the washing machine."}, {"usage_description": "", "cdl": "behavior start_washing_machine(washing_machine:item):\n    body:\n        achieve closed(washing_machine)\n        # Close the washing machine door\n        achieve is_on(washing_machine)\n        # Turn on the washing machine\n", "source_sub_task": "2. Wash the clothes in the washing machine."}, {"usage_description": "", "cdl": "behavior wash_clothes_in_machine(clothes: item, washing_machine: item):\n    body:\n        achieve inside(clothes, washing_machine)\n", "source_sub_task": "2. Wash the clothes in the washing machine."}, {"usage_description": "", "cdl": "behavior start_washing_machine(washing_machine: item):\n    body:\n        achieve closed(washing_machine)\n        achieve is_on(washing_machine)\n", "source_sub_task": "2. Wash the clothes in the washing machine."}, {"usage_description": "", "cdl": "behavior transfer_clothes(clothes:item, wm:item):\n    body:\n        achieve inside(clothes, wm)\n", "source_sub_task": "2. Wash the clothes in the washing machine."}, {"usage_description": "", "cdl": "behavior start_washing_machine(wm:item):\n    body:\n        achieve closed(wm)\n        achieve is_on(wm)\n", "source_sub_task": "2. Wash the clothes in the washing machine."}, {"usage_description": "", "cdl": "behavior load_clothes_into_washing_machine(clothes:item, washing_machine:item):\n    body:\n        achieve inside(clothes, washing_machine)\n", "source_sub_task": "2. Wash the clothes in the washing machine."}, {"usage_description": "", "cdl": "behavior start_washing_machine(washing_machine:item):\n    body:\n        achieve closed(washing_machine) # Close the washing machine door\n        achieve is_on(washing_machine) # Turn on the washing machine\n", "source_sub_task": "2. Wash the clothes in the washing machine."}], "Cook some food": [{"usage_description": "", "cdl": "behavior gather_vegetable(vegetable:item):\n    body:\n        achieve_once inhand(vegetable)\n", "source_sub_task": "1. Find and gather the vegetables."}, {"usage_description": "", "cdl": "behavior clean_vegetables(food_vegetable:item):\n    body:\n        bind sink: item where:\n            is_sink(sink)\n        achieve_once inside(food_vegetable, sink)\n        if exists faucet: item: is_faucet(faucet) and close(faucet, sink):\n            bind faucet: item where:\n                is_faucet(faucet) and close(faucet, sink)\n            achieve_once is_on(faucet)\n            wash(food_vegetable)\n            achieve_once is_off(faucet)\n        else:\n            wash(food_vegetable)\n", "source_sub_task": "2. Wash the vegetables."}, {"usage_description": "", "cdl": "behavior put_vegetables_in_pot(vegetables: item, pot: item):\n    body:\n        achieve inside(vegetables, pot)\n", "source_sub_task": "3. Put the vegetables in a pot."}, {"usage_description": "", "cdl": "behavior boil_vegetables(pot:item, stove:item):\n    body:\n        achieve inside(pot, stove)\n        achieve is_on(stove)\n", "source_sub_task": "4. Boil the vegetables on the stove."}, {"usage_description": "", "cdl": "behavior place_pot_on_stove(pot: item, stove: item):\n    body:\n        achieve on(pot, stove)\n        ", "source_sub_task": "4. Boil the vegetables on the stove."}, {"usage_description": "", "cdl": "behavior turn_on_stove(stove: item):\n    body:\n        achieve is_on(stove)\n", "source_sub_task": "4. Boil the vegetables on the stove."}, {"usage_description": "", "cdl": "behavior gather_items(veggie:item, pot:item):\n    body:\n        achieve_once inhand(veggie)\n        achieve_once inhand(pot)\n", "source_sub_task": "1. Gather the vegetables and a suitable pot."}, {"usage_description": "", "cdl": "behavior place_vegetables_in_pot(vegetables:item, pot:item):\n    body:\n        achieve inside(vegetables, pot)\n", "source_sub_task": "2. Place the vegetables in a pot."}, {"usage_description": "", "cdl": "behavior boil_vegetables(vegetables: item, stove: item, pot: item):\n    body:\n        achieve inside(vegetables, pot)\n        achieve close_char(char, stove)\n        achieve is_on(stove)\n", "source_sub_task": "3. Boil the vegetables on the stove."}, {"usage_description": "", "cdl": "behavior put_food_in_pot(food:item, pot:item): \n    body: \n        achieve inside(food, pot)\n", "source_sub_task": "2. Put the vegetables in a pot."}, {"usage_description": "", "cdl": "behavior boil_vegetables_on_stove(stove:item, pot:item):\n    body:\n        achieve is_on(stove)\n        # Ensure the stove is turned on\n", "source_sub_task": "3. Boil the vegetables on the stove."}], "Listen to music": [{"usage_description": "", "cdl": "behavior turn_on_cd_player(cd_player:item):\n    body:\n        assert has_switch(cd_player)\n        achieve is_on(cd_player)\n", "source_sub_task": "2. Turn on the CD player."}], "Prepare a reading space": [{"usage_description": "", "cdl": "behavior find_book():\n    body:\n        foreach book: item:\n            if is_book(book) and not visited(book):\n                observe(book, \"Check if this is the book\")\n", "source_sub_task": "1. Find the book."}, {"usage_description": "", "cdl": "behavior find_book():\n    body:\n        foreach book: item:\n            if is_book(book) and not visited(book):\n                observe(book, \"Check if this is the book\")\n", "source_sub_task": "1. Find the book."}, {"usage_description": "", "cdl": "behavior find_book():\n    body:\n        foreach book: item:\n            if is_book(book) and not visited(book):\n                observe(book, \"Check if this is the book\")\n", "source_sub_task": "1. Find the book."}, {"usage_description": "", "cdl": "behavior put_book_on_table(book: item, table: item):\n    body:\n        achieve on(book, table)\n", "source_sub_task": "2. Put the book on the coffee table in the home office."}], "Change TV channel": [{"usage_description": "", "cdl": "behavior turn_tv_on_or_off(tv:item, remote:item):\n    body:\n        if is_off(tv):\n            touch(remote)\n            achieve is_on(tv)\n        else:\n            touch(remote)\n            achieve is_off(tv)\n", "source_sub_task": "2. Use the remote control to turn the TV on or off and change channels."}, {"usage_description": "", "cdl": "behavior change_channel(tv:item, remote:item):\n    body:\n        touch(remote)\n        observe(tv, \"Check current channel\")\n", "source_sub_task": "2. Use the remote control to turn the TV on or off and change channels."}, {"usage_description": "", "cdl": "behavior turn_tv_on_or_off(tv:item, remote:item):\n    body:\n        if is_off(tv):\n            touch(remote)\n            achieve is_on(tv)\n        else:\n            touch(remote)\n            achieve is_off(tv)\n", "source_sub_task": "2. Use the remote control to turn the TV on or off and change channels."}, {"usage_description": "", "cdl": "behavior change_channel(tv:item, remote:item):\n    body:\n        touch(remote)\n        observe(tv, \"Check current channel\")\n", "source_sub_task": "2. Use the remote control to turn the TV on or off and change channels."}, {"usage_description": "", "cdl": "behavior turn_tv_on_or_off(tv:item, remote:item):\n    body:\n        if is_off(tv):\n            touch(remote)\n            achieve is_on(tv)\n        else:\n            touch(remote)\n            achieve is_off(tv)\n", "source_sub_task": "2. Use the remote control to turn the TV on or off and change channels."}, {"usage_description": "", "cdl": "behavior change_channel(tv:item, remote:item):\n    body:\n        touch(remote)\n        observe(tv, \"Check current channel\")\n", "source_sub_task": "2. Use the remote control to turn the TV on or off and change channels."}, {"usage_description": "", "cdl": "behavior turn_tv_on_or_off(tv:item, remote:item):\n    body:\n        if is_off(tv):\n            touch(remote)\n            achieve is_on(tv)\n        else:\n            touch(remote)\n            achieve is_off(tv)\n", "source_sub_task": "2. Use the remote control to turn the TV on or off and change channels."}, {"usage_description": "", "cdl": "behavior change_channel(tv:item, remote:item):\n    body:\n        touch(remote)\n        observe(tv, \"Check current channel\")\n", "source_sub_task": "2. Use the remote control to turn the TV on or off and change channels."}, {"usage_description": "", "cdl": "behavior turn_tv_on_or_off(tv:item, remote:item):\n    body:\n        if is_off(tv):\n            touch(remote)\n            achieve is_on(tv)\n        else:\n            touch(remote)\n            achieve is_off(tv)\n", "source_sub_task": "2. Use the remote control to turn the TV on or off and change channels."}, {"usage_description": "", "cdl": "behavior change_channel(tv:item, remote:item):\n    body:\n        touch(remote)\n        observe(tv, \"Check current channel\")\n", "source_sub_task": "2. Use the remote control to turn the TV on or off and change channels."}, {"usage_description": "", "cdl": "behavior turn_tv_on_or_off(tv:item, remote:item):\n    body:\n        if is_off(tv):\n            touch(remote)\n            achieve is_on(tv)\n        else:\n            touch(remote)\n            achieve is_off(tv)\n", "source_sub_task": "2. Use the remote control to turn the TV on or off and change channels."}, {"usage_description": "", "cdl": "behavior change_channel(tv:item, remote:item):\n    body:\n        touch(remote)\n        observe(tv, \"Check current channel\")\n", "source_sub_task": "2. Use the remote control to turn the TV on or off and change channels."}], "Turn on light": [{"usage_description": "", "cdl": "behavior locate_light_switch_in_bathroom(bathroom:item):\n    body:\n        if exists switch:item : close(switch, bathroom) and is_light(switch):\n            # Check if there is a light switch within the bathroom\n            bind switch: item where:\n                close(switch, bathroom) and is_light(switch)\n            achieve visited(switch)\n\n        else:\n            # If no light switch is known, observe the bathroom to locate the switch\n            observe(bathroom,\"Find the light switch in the bathroom\")\n", "source_sub_task": "2. Locate the light switch in the bathroom."}, {"usage_description": "", "cdl": "behavior turn_on_light_switch(light_switch:item):\n    body:\n        achieve is_on(light_switch)\n", "source_sub_task": "3. Turn on the light switch."}, {"usage_description": "", "cdl": "behavior turn_on_light_switch(light_switch:item):\n    body:\n        achieve is_on(light_switch)\n", "source_sub_task": "3. Turn on the light switch."}, {"usage_description": "", "cdl": "behavior turn_on_light_switch(switch:item):\n    body:\n        achieve is_on(switch) # Ensure the light switch is turned on\n", "source_sub_task": "3. Turn on the light switch in the bathroom."}], "Drink": [{"usage_description": "", "cdl": "behavior fill_cup_with_water(char: character, cup: item, faucet: item):\n    body:\n        achieve_once close_char(char, faucet)\n        assert close(cup, faucet)\n        assert grabbable(cup)\n        move(cup)\n", "source_sub_task": "3. Fill the cup with water from the faucet."}, {"usage_description": "", "cdl": "behavior move_cup_to_faucet(cup:item, faucet:item):\n    body:\n        achieve close(cup, faucet)\n", "source_sub_task": "3. Fill the cup with water from the faucet."}, {"usage_description": "", "cdl": "behavior fill_cup_with_water(cup:item, faucet:item):\n    body:\n        if has_faucet(faucet):\n            bind f: item where:\n                is_faucet(f)\n            achieve close(cup, f)\n            achieve_once is_on(f)\n            achieve recipient(cup)\n            achieve_once is_off(f)\n", "source_sub_task": "3. Fill the cup with water from the faucet."}], "Prepare dinner": [{"usage_description": "", "cdl": "behavior find_rice():\n    body:\n        foreach item: item:\n            if is_food_rice(item) and not visited(item):\n                observe(item, \"Check if this is rice\")\n", "source_sub_task": "1. Find the rice and necessary cooking equipment."}, {"usage_description": "", "cdl": "behavior find_cooking_equipment():\n    body:\n        foreach item: item:\n            if (is_pot(item) or is_stove(item)) and not visited(item):\n                observe(item, \"Check if this is the needed cooking equipment\")\n", "source_sub_task": "1. Find the rice and necessary cooking equipment."}, {"usage_description": "", "cdl": "behavior find_rice():\n    body:\n        foreach item: item:\n            if is_food_rice(item) and not visited(item):\n                observe(item, \"Check if this is rice\")\n", "source_sub_task": "1. Find the rice and necessary cooking equipment."}, {"usage_description": "", "cdl": "behavior find_cooking_equipment():\n    body:\n        foreach item: item:\n            if (is_pot(item) or is_stove(item)) and not visited(item):\n                observe(item, \"Check if this is the needed cooking equipment\")\n", "source_sub_task": "1. Find the rice and necessary cooking equipment."}, {"usage_description": "", "cdl": "behavior find_rice():\n    body:\n        foreach item: item:\n            if is_food_rice(item) and not visited(item):\n                observe(item, \"Check if this is rice\")\n", "source_sub_task": "1. Find the rice and necessary cooking equipment."}, {"usage_description": "", "cdl": "behavior find_cooking_equipment():\n    body:\n        foreach item: item:\n            if (is_pot(item) or is_stove(item)) and not visited(item):\n                observe(item, \"Check if this is the needed cooking equipment\")\n", "source_sub_task": "1. Find the rice and necessary cooking equipment."}, {"usage_description": "", "cdl": "behavior clean_rice(rice: item, sink: item):\n    body:\n        achieve_once inside(rice, sink)\n        if has_faucet(sink):\n            bind faucet: item where:\n                is_faucet(faucet) and close(faucet, sink)\n            achieve_once is_on(faucet)\n        wash(rice)\n        if has_faucet(sink):\n            bind faucet: item where:\n                is_faucet(faucet) and close(faucet, sink)\n            achieve_once is_off(faucet)\n", "source_sub_task": "2. Measure and wash the rice."}, {"usage_description": "", "cdl": "behavior observe_items_near_sink(sink:item):\n    body:\n        foreach o: item:\n            if is_food_rice(o) and close(o, sink):\n                observe(o, \"Check if this is rice\")\n", "source_sub_task": "3. Cook the rice."}, {"usage_description": "", "cdl": "behavior wash_food_in_sink(food:item, sink:item):\n    body:\n        achieve_once inside(food, sink)\n        if exists faucet: item: is_faucet(faucet) and close(faucet, sink):\n            bind faucet: item where:\n                is_faucet(faucet) and close(faucet, sink)\n            achieve_once is_on(faucet)\n        wash(food)\n        if exists faucet: item: is_faucet(faucet) and close(faucet, sink):\n            bind faucet: item where:\n                is_faucet(faucet) and close(faucet, sink)\n            achieve_once is_off(faucet)\n", "source_sub_task": "3. Cook the rice."}, {"usage_description": "", "cdl": "behavior cook_rice_with_stove(rice:item, pot:item, stove:item):\n    body:\n        achieve inside(rice, pot)\n        achieve close(pot, stove)\n        achieve is_on(stove)\n", "source_sub_task": "3. Cook the rice."}], "Make coffee": [{"usage_description": "", "cdl": "behavior gather_materials(counter:item):\n    body:\n        foreach item:item:\n            # Ensure all required materials are on the kitchen counter\n            if is_food_food(item) or is_coffee_filter(item) or is_water(item):\n                achieve on(item, counter)\n", "source_sub_task": "1. Gather all necessary materials (coffee grounds, filter, water)."}]}