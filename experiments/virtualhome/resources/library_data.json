{
    "behavior_data": {
        "Clean the bathroom": [
            {
                "usage_description": "",
                "cdl": "behavior clean_sink(sink:item):\n    body:\n        achieve clean(sink)\n        # Ensure that the sink is clean\n",
                "source_sub_task": "2. Clean the bathroom sink thoroughly.",
                "functions": []
            }
        ],
        "Listen to music": [
            {
                "usage_description": "",
                "cdl": "behavior locate_remote_control(remote:item):\n    body:\n        achieve close_char(char, remote)\n        # Character should be close to the remote control\n",
                "source_sub_task": "1. Locate the remote control for the DVD player.",
                "functions": [
                    "def is_remote_control_1(x: item):\n    # Check if the item is a remote control\n    return is_remote_control(x)\n"
                ]
            },
            {
                "usage_description": "",
                "cdl": "behavior locate_remote_control(remote:item):\n    body:\n        observe(remote, \"Check where the remote control is located\")\n",
                "source_sub_task": "1. Locate the remote control for the DVD player.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior turn_on_dvd_player_with_remote(remote_control:item, dvd_player:item):\n    body:\n        # Achieve the state where the DVD player is on\n        achieve is_on(dvd_player)\n",
                "source_sub_task": "2. Use the remote control to turn on the DVD player.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior locate_remote(remote:item):\n    body:\n        if exists r: item : is_remote_control_1(r):\n            # If we have already found the remote control in known information\n            bind r: item where:\n                is_remote_control_1(r)\n            achieve close_char(char, r)\n\n        else:\n            # Check all unvisited items that might be a remote control\n            foreach r: item:\n                if is_remote_control_1(r) and not visited(r):\n                    observe(r, \"Check if it is the remote control for the DVD player\") \n",
                "source_sub_task": "1. Locate the remote control for the DVD player.",
                "functions": []
            }
        ],
        "Wash dishes with dishwasher": [
            {
                "usage_description": "",
                "cdl": "behavior load_dishwasher(o:item, dishwasher:item):\n    body:\n        achieve inside(o, dishwasher)\n        # Place the item inside the dishwasher\n",
                "source_sub_task": "1. Load the bowls and plates into the dishwasher.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior start_dishwasher(dishwasher:item):\n    body:\n        achieve is_on(dishwasher) # Turn on the dishwasher\n",
                "source_sub_task": "2. Start the dishwasher.",
                "functions": []
            }
        ],
        "Change TV channel": [
            {
                "usage_description": "",
                "cdl": "behavior locate_tv_remote(remote:item):\n    body:\n        observe(remote, \"Check the location of the remote control\")\n        # Use observation to locate the remote control for the TV\n",
                "source_sub_task": "1. Locate the remote control for the TV.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior use_remote_to_turn_on_tv(remote_control:item, television:item):\n    body:\n        assert is_remote_control_1(remote_control)\n        assert is_television(television)\n        achieve has_switch(remote_control)\n        # Ensure the remote control has a switch to turn on the TV\n        achieve inhand(remote_control)\n        # Temporarily achieve holding the remote control to use it\n\n        observe(television, \"Check if the TV is OFF or ON\")\n        # Observe the television to determine its current state\n\n        achieve is_on(television)\n        # Achieve the state of the TV being on\n",
                "source_sub_task": "2. Use the remote control to turn on the TV.",
                "functions": []
            }
        ]
    },
    "function_name_mapping": {
        "is_bathroom_sink": "is_bathroom_sink_1",
        "is_remote_control": "is_remote_control_1"
    },
    "function_name_counts": {
        "is_bathroom_sink": 2,
        "is_remote_control": 2
    }
}