Goal Representation,Debug Result,Action,Add Info,LLM Answer,Plan
k1,"missed actions: walk_executor(coffe_maker_290);open_executor(coffe_maker_290);walk_executor(cup_2063
);grab_executor(cup_2063);walk_executor(coffe_maker_290);putin_executor(cup_2063, coffe_maker_290);c
lose_executor(coffe_maker_290);switchon_executor(coffe_maker_290);walk_executor(fridge_289);switchof
f_executor(fridge_289);open_executor(fridge_289);walk_executor(milk_2043);grab_executor(milk_2043);w
alk_executor(cup_2063);putin_executor(milk_2043, cup_2063);walk_executor(food_sugar_2039);grab_execu
tor(food_sugar_2039);walk_executor(cup_2063);putin_executor(food_sugar_2039, cup_2063);",,,,
"Reset goals: The sub-goals are: 
['1. Brew a cup of coffee using the coffee maker.', '2. Add milk and sugar to the brewed coffee.']",,,,,
" 
def has_coffee_filter(coffee_maker: item):
    # Function to check if the coffee maker has a coffee filter
    symbol has_filter = exists filter: item : is_coffee_filter(filter) and inside(filter, coffee_mak
er)
    return has_filter

def has_water_in_reservoir(coffee_maker: item):
    # Function to check if there is water in the coffee makers reservoir
    symbol has_water_reservoir = exists reservoir: item : is_cup(reservoir) and inside(reservoir, co
ffee_maker) and has_water(reservoir)
    return has_water_reservoir

behavior place_cup(coffee_maker: item, cup: item):
    body:
        achieve on(cup, coffee_maker)

behavior start_brewing(coffee_maker: item):
    body:
        achieve is_on(coffee_maker)  # Turn on the coffee maker to start brewing

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select a coffee maker
        
        if not has_coffee_filter(coffee_maker):
            observe(coffee_maker, ""Check if there is a coffee filter in the coffee maker"")
            # Observe if the coffee maker has a coffee filter

        if not has_water_in_reservoir(coffee_maker):
            observe(coffee_maker, ""Check if theres water in the coffee makers reservoir"")
            # Observe if there is water in the coffee makers reservoir

        bind cup: item where:
            is_cup(cup)
        # Select a cup to brew coffee into

        place_cup(coffee_maker, cup)
        start_brewing(coffee_maker)
",From function reset_goal,,,,
,,,,"Record from func query_human in agent.py
Question: Can you tell me how to brew a cup of coffee using the coffee maker.
Answer: To brew a cup of coffee using the coffee maker, find coffee beans, grind them, put the groun
ds into the coffee maker, turn on the coffee maker, and pour the coffee into a cup.
",
,,,,"Record from func query_human in agent.py
Question: Can you tell me how to add milk and sugar to the brewed coffee.
Answer: I don't know.
",
"Reset goals: The sub-goals are: 
['1. Brew coffee using the coffee maker.', '2. Add milk and sugar to the brewed coffee.']",,,,,
" 
def has_water_and_clean_filter(coffee_maker:item):
    # Check if the coffee maker has water and a clean filter
    symbol has_filter=exists f: item : is_coffee_filter(f) and clean(f)
    symbol has_water_and_filter=has_water(coffee_maker) and has_filter
    return has_water_and_filter

behavior brew_coffee(coffee_maker:item):
    body:
        assert has_water_and_clean_filter(coffee_maker) # Ensure water and clean filter are provided
        achieve is_on(coffee_maker) # Turn on the coffee maker

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select a coffee maker
        if not has_water_and_clean_filter(coffee_maker):
            observe(coffee_maker,""Check if it has water and a clean filter"")
            # Observe coffee maker for water and filter status

        brew_coffee(coffee_maker)
",From function reset_goal,,,,
"Reset goals: The sub-goals are: 
['1. Brew a cup of coffee using the coffee maker.', '2. Add milk to the brewed coffee.', '3. Add sug
ar to the coffee with milk.']",,,,,
" 
behavior brew_coffee(coffe_maker:item):
    body:
        achieve plugged(coffe_maker)
        achieve clean(coffe_maker)
        achieve has_water(coffe_maker)
        achieve closed(coffe_maker)
        achieve is_on(coffe_maker)
        # Ensure the coffee maker is plugged in, clean, has water, is closed and turned on

behavior __goal__():
    body:
        bind coffe_maker: item where:
            is_coffe_maker(coffe_maker)
        brew_coffee(coffe_maker)
        # Locate the coffee maker and initiate the brewing process
",From function reset_goal,,,,
,,,,,"(CrowControllerApplier<walk_executor(coffe_maker_290)>, CrowControllerApplier<switchon_executor(coff
e_maker_290)>)"
,,walk_executor(coffe_maker_290),"Find remote_control_2052. Find napkin_2005. Find knife_2050. Find cutting_board_2051. Find cup_2063.
 Find cup_2064. Find oil_2079. Find fryingpan_2083. Find tray_296. Find drawing_239. Find drawing_23
8. Find drawing_240. Find drawing_241. Find drawing_242. Find drawing_243. Robot is inside dining_ro
om_201. Robot is close remote_control_2052. Robot is close coffe_maker_290. Robot is close kitchen_c
ounter_230. Grabbing remote_control_2052 by right hand. Robot is on couch_352. ",,
k1,"missed actions: open_executor(coffe_maker_290);walk_executor(cup_2063);grab_executor(cup_2063);walk_
executor(coffe_maker_290);putin_executor(cup_2063, coffe_maker_290);close_executor(coffe_maker_290);
switchon_executor(coffe_maker_290);walk_executor(milk_2043);grab_executor(milk_2043);walk_executor(c
up_2063);putin_executor(milk_2043, cup_2063);walk_executor(food_sugar_2039);grab_executor(food_sugar
_2039);walk_executor(cup_2063);putin_executor(food_sugar_2039, cup_2063);",,,,
,,switchon_executor(coffe_maker_290),"Find pillow_406. Find mat_401. Find drawing_174. Find cat_2055. Find clothes_jacket_2047. Find pillo
w_405. Find drawing_400. Find hairbrush_2002. Find vacuum_cleaner_2070. Robot is inside dining_room_
201. Robot is close remote_control_2052. Robot is close coffe_maker_290. Robot is close kitchen_coun
ter_230. Robot is on couch_352. ",,
k1,"missed actions: switchoff_executor(coffe_maker_290);open_executor(coffe_maker_290);walk_executor(cup
_2063);grab_executor(cup_2063);walk_executor(coffe_maker_290);putin_executor(cup_2063, coffe_maker_2
90);close_executor(coffe_maker_290);switchon_executor(coffe_maker_290);walk_executor(milk_2043);grab
_executor(milk_2043);walk_executor(cup_2063);putin_executor(milk_2043, cup_2063);walk_executor(food_
sugar_2039);grab_executor(food_sugar_2039);walk_executor(cup_2063);putin_executor(food_sugar_2039, c
up_2063);",,,,
,,,"Human Instruction: The coffee maker needs to be filled with water, checked if it is clean, plugged i
n, and closed before switching it on for brewing coffee. Ensure these conditions are met.

The actions you have taken:
Action 1: Walk to coffe_maker_290. -> effect: Find remote_control_2052. Find napkin_2005. Find knife
_2050. Find cutting_board_2051. Find cup_2063. Find cup_2064. Find oil_2079. Find fryingpan_2083. Fi
nd tray_296. Find drawing_239. Find drawing_238. Find drawing_240. Find drawing_241. Find drawing_24
2. Find drawing_243. Robot is inside dining_room_201. Robot is close remote_control_2052. Robot is c
lose coffe_maker_290. Robot is close kitchen_counter_230. Grabbing remote_control_2052 by right hand
. Robot is on couch_352. 
Action 2: Switch on coffe_maker_290. -> effect: Find pillow_406. Find mat_401. Find drawing_174. Fin
d cat_2055. Find clothes_jacket_2047. Find pillow_405. Find drawing_400. Find hairbrush_2002. Find v
acuum_cleaner_2070. Robot is inside dining_room_201. Robot is close remote_control_2052. Robot is cl
ose coffe_maker_290. Robot is close kitchen_counter_230. Robot is on couch_352. 
",,
" 
def has_water_and_clean(coffee_maker:item):
    # Function to check if the coffee maker is filled with water and is clean
    symbol has_water_and_clean=has_water(coffee_maker) and clean(coffee_maker)
    return has_water_and_clean

behavior fill_with_water(coffee_maker:item):
    body:
        achieve has_water(coffee_maker)

behavior clean_coffee_maker(coffee_maker:item):
    body:
        achieve clean(coffee_maker)

behavior plug_in(coffee_maker:item):
    body:
        achieve plugged(coffee_maker)

behavior ensure_closed(coffee_maker:item):
    body:
        achieve closed(coffee_maker)

behavior brew_coffee(coffee_maker:item):
    body:
        achieve is_on(coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        if not has_water_and_clean(coffee_maker):
            fill_with_water(coffee_maker)
            clean_coffee_maker(coffee_maker)
        plug_in(coffee_maker)
        ensure_closed(coffee_maker)
        brew_coffee(coffee_maker)
",From function reset_sub_goal,,,,
,,,,,"(CrowControllerApplier<walk_executor(faucet_232)>, CrowControllerApplier<switchon_executor(faucet_23
2)>, CrowControllerApplier<switchoff_executor(faucet_232)>)"
,,walk_executor(faucet_232),"Robot is inside dining_room_201. Robot is close remote_control_2052. Robot is close kitchen_counter_
230. Robot is close faucet_232. Robot is on couch_352. Robot is no longer close coffe_maker_290.",,
k1,"missed actions: walk_executor(coffe_maker_290);switchoff_executor(coffe_maker_290);open_executor(cof
fe_maker_290);walk_executor(cup_2063);grab_executor(cup_2063);walk_executor(coffe_maker_290);putin_e
xecutor(cup_2063, coffe_maker_290);close_executor(coffe_maker_290);switchon_executor(coffe_maker_290
);walk_executor(milk_2043);grab_executor(milk_2043);walk_executor(cup_2063);putin_executor(milk_2043
, cup_2063);walk_executor(food_sugar_2039);grab_executor(food_sugar_2039);walk_executor(cup_2063);pu
tin_executor(food_sugar_2039, cup_2063);",,,,
,,switchon_executor(faucet_232),"Robot is inside dining_room_201. Robot is close remote_control_2052. Robot is close kitchen_counter_
230. Robot is close faucet_232. Robot is on couch_352. ",,
k1,"missed actions: walk_executor(coffe_maker_290);switchoff_executor(coffe_maker_290);open_executor(cof
fe_maker_290);walk_executor(cup_2063);grab_executor(cup_2063);walk_executor(coffe_maker_290);putin_e
xecutor(cup_2063, coffe_maker_290);close_executor(coffe_maker_290);switchon_executor(coffe_maker_290
);walk_executor(milk_2043);grab_executor(milk_2043);walk_executor(cup_2063);putin_executor(milk_2043
, cup_2063);walk_executor(food_sugar_2039);grab_executor(food_sugar_2039);walk_executor(cup_2063);pu
tin_executor(food_sugar_2039, cup_2063);",,,,
,,switchoff_executor(faucet_232),"Robot is inside dining_room_201. Robot is close remote_control_2052. Robot is close kitchen_counter_
230. Robot is close faucet_232. Robot is on couch_352. ",,
k1,"missed actions: walk_executor(coffe_maker_290);switchoff_executor(coffe_maker_290);open_executor(cof
fe_maker_290);walk_executor(cup_2063);grab_executor(cup_2063);walk_executor(coffe_maker_290);putin_e
xecutor(cup_2063, coffe_maker_290);close_executor(coffe_maker_290);switchon_executor(coffe_maker_290
);walk_executor(milk_2043);grab_executor(milk_2043);walk_executor(cup_2063);putin_executor(milk_2043
, cup_2063);walk_executor(food_sugar_2039);grab_executor(food_sugar_2039);walk_executor(cup_2063);pu
tin_executor(food_sugar_2039, cup_2063);",,,,
,,,"Human Instruction: The coffee maker needs to be filled with water, checked for cleanliness, plugged 
in, and ensured to be closed before turning it on. Currently, the coffee maker was turned on without
 having these prerequisites verified or completed. Ensure these steps are done before attempting to 
brew coffee.

The actions you have taken:
Action 1: Walk to coffe_maker_290. -> effect: Find remote_control_2052. Find napkin_2005. Find knife
_2050. Find cutting_board_2051. Find cup_2063. Find cup_2064. Find oil_2079. Find fryingpan_2083. Fi
nd tray_296. Find drawing_239. Find drawing_238. Find drawing_240. Find drawing_241. Find drawing_24
2. Find drawing_243. Robot is inside dining_room_201. Robot is close remote_control_2052. Robot is c
lose coffe_maker_290. Robot is close kitchen_counter_230. Grabbing remote_control_2052 by right hand
. Robot is on couch_352. 
Action 2: Switch on coffe_maker_290. -> effect: Find pillow_406. Find mat_401. Find drawing_174. Fin
d cat_2055. Find clothes_jacket_2047. Find pillow_405. Find drawing_400. Find hairbrush_2002. Find v
acuum_cleaner_2070. Robot is inside dining_room_201. Robot is close remote_control_2052. Robot is cl
ose coffe_maker_290. Robot is close kitchen_counter_230. Robot is on couch_352. 
Action 3: Walk to faucet_232. -> effect: Robot is inside dining_room_201. Robot is close remote_cont
rol_2052. Robot is close kitchen_counter_230. Robot is close faucet_232. Robot is on couch_352. Robo
t is no longer close coffe_maker_290.
Action 4: Switch on faucet_232. -> effect: Robot is inside dining_room_201. Robot is close remote_co
ntrol_2052. Robot is close kitchen_counter_230. Robot is close faucet_232. Robot is on couch_352. 
Action 5: Switch off faucet_232. -> effect: Robot is inside dining_room_201. Robot is close remote_c
ontrol_2052. Robot is close kitchen_counter_230. Robot is close faucet_232. Robot is on couch_352. 
",,
" 
def is_requirements_met(coffee_maker:item):
    symbol requirements_met=plugged(coffee_maker) and clean(coffee_maker) and closed(coffee_maker) a
nd has_water(coffee_maker)
    return requirements_met

def fetch_unvisited_coffee_maker():
    symbol unvisited_coffee_maker=exists coffee_maker:item : is_coffe_maker(coffee_maker) and not vi
sited(coffee_maker)
    return unvisited_coffee_maker

behavior prepare_coffee_with_coffee_maker(coffee_maker:item):
    body:
        achieve clean(coffee_maker)
        # Ensure the coffee maker is clean
        achieve plugged(coffee_maker)
        # Ensure the coffee maker is plugged in
        achieve closed(coffee_maker)
        # Ensure the coffee maker is closed
        achieve has_water(coffee_maker)
        # Ensure the coffee maker is filled with water
        achieve is_on(coffee_maker)
        # Turn on the coffee maker to brew coffee

behavior __goal__():
    body:
        if exists coffee_maker: item : is_coffe_maker(coffee_maker) and is_requirements_met(coffee_m
aker):
            bind coffee_maker: item where:
                is_coffe_maker(coffee_maker) and is_requirements_met(coffee_maker)
            achieve close_char(char, coffee_maker)
            prepare_coffee_with_coffee_maker(coffee_maker)
            
        else:
            foreach coffee_maker: item:
                if is_coffe_maker(coffee_maker) and not visited(coffee_maker):
                    observe(coffee_maker, ""Inspect the coffee maker to verify if it meets all requir
ements"") 
",From function reset_sub_goal,,,,
,,,,,"(CrowControllerApplier<walk_executor(coffe_maker_290)>, CrowControllerApplier<switchoff_executor(cof
fe_maker_290)>, CrowControllerApplier<open_executor(coffe_maker_290)>, CrowControllerApplier<obs(cof
fe_maker_290, Inspect the coffee maker to verify if it meets all requirements)>)"
,,walk_executor(coffe_maker_290),"Robot is inside dining_room_201. Robot is close remote_control_2052. Robot is close kitchen_counter_
230. Robot is close coffe_maker_290. Robot is on couch_352. Robot is no longer close faucet_232.",,
k1,"missed actions: switchoff_executor(coffe_maker_290);open_executor(coffe_maker_290);walk_executor(cup
_2063);grab_executor(cup_2063);walk_executor(coffe_maker_290);putin_executor(cup_2063, coffe_maker_2
90);close_executor(coffe_maker_290);switchon_executor(coffe_maker_290);walk_executor(milk_2043);grab
_executor(milk_2043);walk_executor(cup_2063);putin_executor(milk_2043, cup_2063);walk_executor(food_
sugar_2039);grab_executor(food_sugar_2039);walk_executor(cup_2063);putin_executor(food_sugar_2039, c
up_2063);",,,,
,,switchoff_executor(coffe_maker_290),"Robot is inside dining_room_201. Robot is close remote_control_2052. Robot is close kitchen_counter_
230. Robot is close coffe_maker_290. Robot is on couch_352. ",,
k1,"missed actions: open_executor(coffe_maker_290);walk_executor(cup_2063);grab_executor(cup_2063);walk_
executor(coffe_maker_290);putin_executor(cup_2063, coffe_maker_290);close_executor(coffe_maker_290);
switchon_executor(coffe_maker_290);walk_executor(milk_2043);grab_executor(milk_2043);walk_executor(c
up_2063);putin_executor(milk_2043, cup_2063);walk_executor(food_sugar_2039);grab_executor(food_sugar
_2039);walk_executor(cup_2063);putin_executor(food_sugar_2039, cup_2063);",,,,
,,open_executor(coffe_maker_290),"Robot is inside dining_room_201. Robot is close remote_control_2052. Robot is close kitchen_counter_
230. Robot is close coffe_maker_290. Robot is on couch_352. ",,
k1,"missed actions: walk_executor(cup_2063);grab_executor(cup_2063);walk_executor(coffe_maker_290);putin
_executor(cup_2063, coffe_maker_290);close_executor(coffe_maker_290);switchon_executor(coffe_maker_2
90);walk_executor(milk_2043);grab_executor(milk_2043);walk_executor(cup_2063);putin_executor(milk_20
43, cup_2063);walk_executor(food_sugar_2039);grab_executor(food_sugar_2039);walk_executor(cup_2063);
putin_executor(food_sugar_2039, cup_2063);",,,,
,,"obs(coffe_maker_290, Inspect the coffee maker to verify if it meets all requirements)","Get this information:  coffe_maker_290 is close to stovefan_288. coffe_maker_290 is close to toaster
_292. coffe_maker_290 is close to cupboard_229. coffe_maker_290 is close to kitchen_counter_230. cof
fe_maker_290 is close to oven_295. coffe_maker_290 is close to tray_296. coffe_maker_290 is close to
 faucet_232. coffe_maker_290 is close to sink_231. coffe_maker_290 is close to shower_36. coffe_make
r_290 is close to floor_204. coffe_maker_290 is close to wall_11. coffe_maker_290 is close to wall_1
5. coffe_maker_290 is close to wall_211. coffe_maker_290 is close to wall_212. coffe_maker_290 is cl
ose to wall_215. coffe_maker_290 is close to ceiling_221. coffe_maker_290 is close to character_65. 
coffe_maker_290 is on kitchen_counter_230. coffe_maker_290 is facing drawing_238. coffe_maker_290 is
 facing drawing_239. coffe_maker_290 is facing drawing_240. coffe_maker_290 is facing drawing_241. c
offe_maker_290 is facing drawing_242. coffe_maker_290 is facing drawing_243. coffe_maker_290 is insi
de dining_room_201. coffe_maker_290 is OFF. coffe_maker_290 is OPEN. coffe_maker_290 is PLUGGED_IN. 
coffe_maker_290 is CLEAN.",,
k1,"missed actions: walk_executor(cup_2063);grab_executor(cup_2063);walk_executor(coffe_maker_290);putin
_executor(cup_2063, coffe_maker_290);close_executor(coffe_maker_290);switchon_executor(coffe_maker_2
90);walk_executor(milk_2043);grab_executor(milk_2043);walk_executor(cup_2063);putin_executor(milk_20
43, cup_2063);walk_executor(food_sugar_2039);grab_executor(food_sugar_2039);walk_executor(cup_2063);
putin_executor(food_sugar_2039, cup_2063);",,,,
" 
def has_milk(cup:item):
    # Check if there is milk inside the specified cup
    symbol has_milk_item=exists o: item : is_milk(o) and inside(o, cup)
    return has_milk_item

behavior add_milk_to_coffee(cup:item, milk:item):
    body:
        assert grabbable(milk)
        achieve inside(milk, cup)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and drinkable(cup) and surfaces(cup)
        # Select a cup that is drinkable and has a surface to put milk into

        if not has_milk(cup):
            # If the cup does not have milk, add milk to it
            bind milk: item where:
                is_milk(milk)
            add_milk_to_coffee(cup, milk)
",From function reset_sub_goal,,,,
" 
def has_milk_nearby(cup:item):
    # Function to check if there is milk close to a cup
    symbol has_milk=exists o: item : is_milk(o) and close(o, cup)
    return has_milk

behavior add_milk_to_cup(cup:item, milk:item):
    body:
        achieve inside(milk, cup) # Add milk to the cup

behavior __goal__():
    body:
        bind coffe_maker: item where:
            is_coffe_maker(coffe_maker)
        # Locate the coffee maker
        assert has_switch(coffe_maker)
        # Ensure the coffee maker has a switch
        assert plugged(coffe_maker)
        assert clean(coffe_maker)
        assert closed(coffe_maker)
        assert is_off(coffe_maker)
        # Ensure the coffee maker is correctly set up

        bind cup: item where:
            is_cup(cup) and close(cup, coffe_maker)
        # Select a cup close to the coffee maker

        if not has_milk_nearby(cup):
            # If milk is not close to the cup, explore to find milk
            foreach milk: item:
                if is_milk(milk) and not visited(milk):
                    observe(milk,""Check is there milk close to the cup"")
                    # Observe where the milk is located in relation to the cup

        if has_milk_nearby(cup):
            # If milk is close to the cup, perform actions
            bind milk: item where:
                is_milk(milk) and close(milk, cup)
            # Select milk close to the cup
            add_milk_to_cup(cup, milk) # Add milk to the brewed coffee in the cup
",From function reset_sub_goal,,,,
,,,,"Record from func query_human in agent.py
Question: Can you teach me how to ""2. add milk to the brewed coffee."" ?
Answer: I don't know.
",
"
behavior add_milk_to_coffee(cup:item, milk:item):
    body:
        achieve inside(milk, cup)
        # Pour the milk into the cup containing coffee

behavior __goal__():
    body:
        bind coffe_maker_290: item where:
            is_coffe_maker(coffe_maker_290)

        bind cup: item where:
            is_cup(cup) and inside(cup, coffe_maker_290)
        # Select the cup containing the coffee made by the coffee maker

        bind milk: item where:
            is_milk(milk)
        # Select the milk to be added to the coffee

        add_milk_to_coffee(cup, milk)
        # Add milk to the brewed coffee
",From function reset_sub_goal,,,,
" 
behavior add_milk_to_brewed_coffee(coffee:item, milk:item):
    body:
        achieve inside(milk, coffee) # Add milk to the brewed coffee

behavior __goal__():
    body:
        bind brewed_coffee: item where:
            is_cup(brewed_coffee) and close_char(char, brewed_coffee)
        # Select the brewed coffee cup
        
        bind milk: item where:
            is_milk(milk)
        # Select the milk

        add_milk_to_brewed_coffee(brewed_coffee, milk)
",From function reset_sub_goal,,,,
" 
behavior add_milk_to_coffee(cup_with_coffee:item, milk:item):
    body:
        achieve_once inhand(milk)
        achieve close_char(char, cup_with_coffee)
        achieve_once open(milk)
        achieve inhand(milk)
        achieve inside(milk, cup_with_coffee)

behavior __goal__():
    body:
        bind cup_with_coffee: item where:
            is_cup(cup_with_coffee) and has_water(cup_with_coffee)
        
        bind milk: item where:
            is_milk(milk)
        
        add_milk_to_coffee(cup_with_coffee, milk)
",From function reset_sub_goal,,,,
" 
behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind cup: item where:
            is_cup(cup) and close(cup, coffee_maker)
        # Select a cup that is close to the coffee maker

        achieve inside(milk, cup)
        # Pour the milk into the cup of brewed coffee
",From function reset_sub_goal,,,,
k1,"missed actions: walk_executor(cup_2063);grab_executor(cup_2063);walk_executor(coffe_maker_290);putin
_executor(cup_2063, coffe_maker_290);close_executor(coffe_maker_290);switchon_executor(coffe_maker_2
90);walk_executor(milk_2043);grab_executor(milk_2043);walk_executor(cup_2063);putin_executor(milk_20
43, cup_2063);walk_executor(food_sugar_2039);grab_executor(food_sugar_2039);walk_executor(cup_2063);
putin_executor(food_sugar_2039, cup_2063);",,,,
k1,"missed actions: walk_executor(cup_2063);grab_executor(cup_2063);walk_executor(coffe_maker_290);putin
_executor(cup_2063, coffe_maker_290);close_executor(coffe_maker_290);switchon_executor(coffe_maker_2
90);walk_executor(milk_2043);grab_executor(milk_2043);walk_executor(cup_2063);putin_executor(milk_20
43, cup_2063);walk_executor(food_sugar_2039);grab_executor(food_sugar_2039);walk_executor(cup_2063);
putin_executor(food_sugar_2039, cup_2063);",,,,
