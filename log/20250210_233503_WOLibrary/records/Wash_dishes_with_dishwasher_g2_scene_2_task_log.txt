From agent.py
Reset goals: The sub-goals are: 
['1. Put the cleaning solution in the dishwasher.', '2. Wash the bowls and plates with the dishwasher.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2098_around_kitchen_counter_128(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cleaning_solution,kitchen_counter_instance)
        else:
            exp(cleaning_solution,kitchen_counter_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_cleaning_solution_in_dishwasher(dishwasher:item, solution:item):
    body:
        achieve_once inside(solution, dishwasher)
        # Put the cleaning solution inside the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher
        bind solution: item where:
            is_cleaning_solution(solution)
        # Select a cleaning solution
        put_cleaning_solution_in_dishwasher(dishwasher, solution)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior put_cleaning_solution_in_dishwasher(dishwasher:item, solution:item):
    body:
        achieve_once inside(solution, dishwasher)
        # Put the cleaning solution inside the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher
        bind solution: item where:
            is_cleaning_solution(solution)
        # Select a cleaning solution
        put_cleaning_solution_in_dishwasher(dishwasher, solution)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(cleaning_solution_2098, kitchen_counter_128)walk_executor(dishwasher_143)open_executor(dishwasher_143)walk_executor(cleaning_solution_2098)grab_executor(cleaning_solution_2098)walk_executor(dishwasher_143)putin_executor(cleaning_solution_2098, dishwasher_143)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(cleaning_solution_2098, kitchen_counter_128)
Fail to find cleaning_solution_2098 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(cleaning_solution_2098, cupboard_130)walk_executor(dishwasher_143)open_executor(dishwasher_143)walk_executor(cleaning_solution_2098)grab_executor(cleaning_solution_2098)walk_executor(dishwasher_143)putin_executor(cleaning_solution_2098, dishwasher_143)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, pot_54, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(cleaning_solution_2098, cupboard_130)
Fail to find cleaning_solution_2098 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_301)exp(cleaning_solution_2098, wallshelf_301)walk_executor(dishwasher_143)open_executor(dishwasher_143)walk_executor(cleaning_solution_2098)grab_executor(cleaning_solution_2098)walk_executor(dishwasher_143)putin_executor(cleaning_solution_2098, dishwasher_143)
##############################
From agent.py
walk_executor(wallshelf_301)
Robot find: towel_rack_299, towel_rack_300, drawing_296, Robot is close to the wallshelf_301. 
##############################
From agent.py
exp(cleaning_solution_2098, wallshelf_301)
Fail to find cleaning_solution_2098 around wallshelf_301. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_187)exp(cleaning_solution_2098, wallshelf_187)walk_executor(dishwasher_143)open_executor(dishwasher_143)walk_executor(cleaning_solution_2098)grab_executor(cleaning_solution_2098)walk_executor(dishwasher_143)putin_executor(cleaning_solution_2098, dishwasher_143)
##############################
From agent.py
walk_executor(wallshelf_187)
Robot find: Robot is close to the wallshelf_187. 
##############################
From agent.py
exp(cleaning_solution_2098, wallshelf_187)
Fail to find cleaning_solution_2098 around wallshelf_187. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_190)exp(cleaning_solution_2098, wallshelf_190)walk_executor(dishwasher_143)open_executor(dishwasher_143)walk_executor(cleaning_solution_2098)grab_executor(cleaning_solution_2098)walk_executor(dishwasher_143)putin_executor(cleaning_solution_2098, dishwasher_143)
##############################
From agent.py
walk_executor(wallshelf_190)
Robot find: Robot is close to the wallshelf_190. 
##############################
From agent.py
exp(cleaning_solution_2098, wallshelf_190)
Fail to find cleaning_solution_2098 around wallshelf_190. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)exp(cleaning_solution_2098, sink_133)walk_executor(dishwasher_143)open_executor(dishwasher_143)walk_executor(cleaning_solution_2098)grab_executor(cleaning_solution_2098)walk_executor(dishwasher_143)putin_executor(cleaning_solution_2098, dishwasher_143)
##############################
From agent.py
walk_executor(sink_133)
Robot find: after_shave_2029, cleaning_solution_2098, juice_2034, Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
exp(cleaning_solution_2098, sink_133)
Find cleaning_solution_2098. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)open_executor(dishwasher_143)walk_executor(cleaning_solution_2098)grab_executor(cleaning_solution_2098)walk_executor(dishwasher_143)putin_executor(cleaning_solution_2098, dishwasher_143)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
walk_executor(cleaning_solution_2098)
Robot find: Robot is close to the cleaning_solution_2098. Robot is close to the sink_133. 
##############################
From agent.py
grab_executor(cleaning_solution_2098)
Robot find: Robot is close to the cleaning_solution_2098. Robot is close to the sink_133. Grabbing cleaning_solution_2098 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the cleaning_solution_2098. Robot is close to the knife_2036. Robot is close to the dishwasher_143. 
##############################
From agent.py
putin_executor(cleaning_solution_2098, dishwasher_143)
Robot find: Robot is close to the cleaning_solution_2098. Robot is close to the knife_2036. Robot is close to the dishwasher_143. cleaning_solution_2098 is inside dishwasher_143. cleaning_solution_2098 is close dishwasher_143. dishwasher_143 is close cleaning_solution_2098. cleaning_solution_2098 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_cupboard_131(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(plate,cupboard_instance)
        else:
            exp(plate,cupboard_instance)
    eff:
        unknown[plate]=False
        close[plate,cupboard_instance]=True
        close[cupboard_instance,plate]=True
    

behavior find_bowl_2097_around_stove_2090(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(bowl,stove_instance)
        else:
            exp(bowl,stove_instance)
    eff:
        unknown[bowl]=False
        close[bowl,stove_instance]=True
        close[stove_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and id[sink]==231
        # Select sink with ID 231
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher
        foreach o: item:
        # Load all plates and cups from the sink into the dishwasher
            if (is_plate(o) or is_bowl(o)) and inside(o, sink):
                load_dishwasher(o, dishwasher)
        start_dishwasher(dishwasher) # Start the dishwasher

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_cutting_board_2080(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind cutting_board_instance:item where:
            is_cutting_board(cutting_board_instance) and id[cutting_board_instance]==2080
        achieve close_char(char,cutting_board_instance)
        if can_open(cutting_board_instance):
            achieve_once open(cutting_board_instance)
            exp(plate,cutting_board_instance)
        else:
            exp(plate,cutting_board_instance)
    eff:
        unknown[plate]=False
        close[plate,cutting_board_instance]=True
        close[cutting_board_instance,plate]=True
    

behavior find_bowl_2095_around_cupboard_131(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

#exp_behavior_end

#goal_representation

behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher
        bind sink: item where:
            is_sink(sink) and id[sink]==231
        # Select the sink with ID 231
        foreach o: item:
        # Load all plates and bowls from the sink into the dishwasher
            if (is_plate(o) or is_bowl(o)) and inside(o, sink):
                load_dishwasher(o, dishwasher)
        start_dishwasher(dishwasher) # Start the dishwasher

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Error record: list index out of range
##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
['walk_executor(kitchen_counter_128)', 'walk_executor(cupboard_130)', 'walk_executor(wallshelf_301)', 'walk_executor(wallshelf_187)', 'walk_executor(wallshelf_190)', 'walk_executor(sink_133)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'walk_executor(cleaning_solution_2098)', 'grab_executor(cleaning_solution_2098)', 'walk_executor(dishwasher_143)', 'putin_executor(cleaning_solution_2098, dishwasher_143)']
Time info:
Time consume: 147 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 1
goal correct times: 0
action_num: 12

Task complete rate:
Keystate: k1 - Requires: 0 steps
Keystate: k2 - Requires: 18 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
