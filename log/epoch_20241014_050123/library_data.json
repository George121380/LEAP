{
    "behavior_data": {
        "Clean the bathroom": [
            {
                "usage_description": "",
                "cdl": "behavior fill_sink_with_water(sink:item):\n    body:\n        if exists faucet:item: is_faucet(faucet) and close(faucet, sink):\n            bind faucet: item where:\n                is_faucet(faucet) and close(faucet, sink)\n            achieve_once is_on(faucet)\n            achieve has_water(sink)\n            achieve_once is_off(faucet)\n        else:\n            achieve has_water(sink)\n",
                "source_sub_task": "1. Fill the sink with water.",
                "functions": [
                    "def is_bathroom_sink_1(sink:item):\n    # Determine whether the sink is located in the bathroom\n    symbol in_bathroom=exists room: item : is_bathroom(room) and inside(sink, room)\n    return in_bathroom\n"
                ]
            }
        ],
        "Listen to music": [
            {
                "usage_description": "",
                "cdl": "behavior turn_on_dvd_player(remote_control:item, dvd_player:item):\n    body:\n        achieve_once inhand(remote_control)\n        achieve is_on(dvd_player)\n",
                "source_sub_task": "2. Turn on the DVD player using the remote control.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior turn_on_cd_player(cd_player:item):\n    body:\n        achieve is_on(cd_player)\n",
                "source_sub_task": "2. Turn on the CD player.",
                "functions": []
            }
        ],
        "Wash dishes with dishwasher": [
            {
                "usage_description": "",
                "cdl": "behavior put_soap_in_dishwasher(soap:item, dishwasher:item):\n    body:\n        achieve inside(soap, dishwasher)\n",
                "source_sub_task": "1. Put dish soap in the dishwasher.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior load_dishwasher(o:item, dishwasher:item):\n    body:\n        achieve inside(o, dishwasher)\n        # Place the item inside the dishwasher\n",
                "source_sub_task": "1. Load the bowls and plates into the dishwasher.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior start_the_dishwasher(dishwasher:item):\n    body:\n        achieve closed(dishwasher)\n        achieve is_on(dishwasher)\n",
                "source_sub_task": "2. Start the dishwasher to wash the bowls and plates.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior wash_forks_by_hand(fork:item):\n    body:\n        wash(fork) # Wash the fork by hand\n",
                "source_sub_task": "3. Wash the forks by hand.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior load_dishwasher(o:item, dishwasher:item):\n    body:\n        achieve inside(o, dishwasher)\n        # Place the item inside the dishwasher\n",
                "source_sub_task": "1. Load the bowls and plates into the dishwasher.",
                "functions": []
            }
        ],
        "Change TV channel": [
            {
                "usage_description": "",
                "cdl": "behavior turn_on_tv(remote_control:item, television:item):\n    body:\n        achieve inhand(remote_control)\n        achieve close_char(char, television)\n        achieve is_on(television)\n",
                "source_sub_task": "2. Use the remote control to turn on the TV.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior sit_on_couch(couch:item):\n    body:\n        achieve on_char(char, couch) \n        # Sit on the couch\n",
                "source_sub_task": "1. Sit on the couch.",
                "functions": []
            }
        ],
        "Make coffee": [
            {
                "usage_description": "",
                "cdl": "behavior place_coffee_filter_in_coffee_maker(coffee_filter:item, coffee_maker:item):\n    body:\n        achieve on(coffee_filter, coffee_maker)\n        # Place the coffee filter inside the coffee maker\n",
                "source_sub_task": "1. Place a coffee filter in the coffee maker.",
                "functions": []
            }
        ],
        "Cook some food": [
            {
                "usage_description": "",
                "cdl": "behavior identify_cutting_surface():\n    body:\n        foreach item: item:\n            if surfaces(item) and not visited(item):\n                observe(item, \"Check if it is a cutting board\")\n                # Observe to determine if the item can be used as a cutting surface\n",
                "source_sub_task": "1. Identify the cutting board or surface for slicing.",
                "functions": [
                    "def has_cutting_surface_1(item:item):\n    # Function to check if an item can be used as a cutting surface\n    symbol is_a_cutting_surface=is_cutting_board(item)\n    return is_a_cutting_surface\n"
                ]
            },
            {
                "usage_description": "",
                "cdl": "behavior place_chicken_on_slicing_surface(chicken:item, surface:item):\n    body:\n        achieve on(chicken, surface)\n",
                "source_sub_task": "2. Place the chicken on the slicing surface.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior place_vegetables_in_pot(vegetable: item, pot: item):\n    body:\n        achieve inside(vegetable, pot)\n        # Place the vegetable inside the pot\n",
                "source_sub_task": "1. Put the vegetables in a pot.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior boil_vegetables_in_pot_on_stove(stove:item, pot:item):\n    body:\n        achieve on(pot, stove)\n        # Place the pot on the stove\n\n        if has_plug(stove):\n            # If the stove has a plug, ensure it is plugged in\n            achieve plugged(stove)\n\n        achieve is_on(stove)\n        # Turn on the stove to start boiling\n",
                "source_sub_task": "2. Boil the vegetables on the stove.",
                "functions": []
            }
        ],
        "Prepare breakfast": [
            {
                "usage_description": "",
                "cdl": "behavior slice_bread(bread: item, cutting_board: item, knife: item):\n    body:\n        assert grabbable(bread)\n        assert grabbable(knife)\n        assert cuttable(bread)\n        achieve_once inhand(knife)\n        achieve on(bread, cutting_board)\n        achieve cut(bread)\n",
                "source_sub_task": "1. Slice the bread.",
                "functions": []
            }
        ],
        "Pet cat": [
            {
                "usage_description": "",
                "cdl": "behavior find_cat(cat:item):\n    body:\n        achieve visited(cat)\n",
                "source_sub_task": "1. Locate the cat within the household environment.",
                "functions": [
                    "def in_house_1(cat:item):\n    # Function to check if the cat is inside the house\n    symbol in_house=exists room: item : inside(cat, room)\n    return in_house\n",
                    "def is_cat_found_1():\n    # Function to check if the cat has been found\n    symbol found=exists cat: item : is_cat(cat) and visited(cat)\n    return found\n"
                ]
            },
            {
                "usage_description": "",
                "cdl": "behavior touch_cat(cat:item):\n    body:\n        achieve facing_char(char, cat)\n        # Ensure the character is facing the cat to touch it\n        touch(cat)\n",
                "source_sub_task": "2. Touch the cat once found.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior place_cat_in_sink(cat: item, sink: item):\n    body:\n        achieve inside(cat, sink)\n        # Place the cat inside the specified sink\n",
                "source_sub_task": "2. Place the cat in the sink.",
                "functions": []
            }
        ],
        "Wash clothes": [
            {
                "usage_description": "",
                "cdl": "behavior handwash_underwear_with_soap(soap:item, clothes:item):\n    body:\n        achieve_once inhand(clothes)\n        achieve_once inhand(soap)\n        wash(clothes) # Key step to wash clothes with soap\n",
                "source_sub_task": "1. Hand wash the underwear with soap.",
                "functions": [
                    "def has_soap_1(soap:item, clothes:item):\n    symbol is_categorized_soap = is_soap(soap)\n    symbol is_categorized_clothes = is_clothes_underwear(clothes)\n    return is_categorized_soap and is_categorized_clothes\n"
                ]
            },
            {
                "usage_description": "",
                "cdl": "behavior add_detergent(detergent: item, washing_machine: item):\n    body:\n        achieve inside(detergent, washing_machine)\n        # Add detergent into the washing machine\n",
                "source_sub_task": "3. Add some detergent for a thorough clean.",
                "functions": []
            }
        ],
        "Iron clothes": [
            {
                "usage_description": "",
                "cdl": "behavior identify_pants_to_iron():\n    body:\n        foreach pants: item:\n            if is_clothes_pants(pants) and not visited(pants):\n                observe(pants, \"Identify the pair of pants for ironing\")\n",
                "source_sub_task": "1. Identify the pair of pants to be ironed.",
                "functions": []
            }
        ],
        "Prepare dinner": [
            {
                "usage_description": "",
                "cdl": "behavior preheat_oven(oven:item):\n    body:\n        achieve is_on(oven)\n",
                "source_sub_task": "1. Preheat the oven.",
                "functions": []
            }
        ],
        "make up bed": [
            {
                "usage_description": "",
                "cdl": "behavior fill_glass_with_water(glass:item, sink:item):\n    body:\n        achieve_once inhand(glass)\n        # Ensure the glass is held temporarily\n        \n        achieve has_water(glass)\n        # Fill the glass with water\n",
                "source_sub_task": "1. Find a glass or cup and fill it with water.",
                "functions": []
            }
        ],
        "Prepare a reading space": [
            {
                "usage_description": "",
                "cdl": "behavior put_book_on_table(book:item, table:item):\n    body:\n        achieve on(book, table)\n        # Place the book on the table\n",
                "source_sub_task": "2. Put the book on the table in the bedroom.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior turn_on_light_in_bedroom(light:item):\n    body:\n        achieve is_on(light)\n",
                "source_sub_task": "3. Turn on the light in the bedroom.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior find_book_and_place_on_table(book:item, table:item):\n    body:\n        achieve on(book, table)\n",
                "source_sub_task": "1. Find the book and put it on the coffee table in home office.",
                "functions": [
                    "def is_in_home_office_1(table:item):\n    # This function checks if a table is inside the home office\n    symbol is_in_home_office=exists home_office: item : is_home_office(home_office) and inside(table, home_office)\n    return is_in_home_office\n"
                ]
            },
            {
                "usage_description": "",
                "cdl": "behavior place_spectacles_on_table(spectacles:item, table:item):\n    body:\n        achieve on(spectacles, table)\n",
                "source_sub_task": "2. Place the spectacles on the coffee table in the home office.",
                "functions": []
            }
        ],
        "Put groceries in Fridge": [
            {
                "usage_description": "",
                "cdl": "behavior put_items_on_table(milk:item, eggs:item, table:item):\n    body:\n        achieve on(milk, table)\n        achieve on(eggs, table)\n",
                "source_sub_task": "1. Put milk and eggs on the table in the dining room.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior throw_away_all_items_from_fridge(fridge:item, trashcan:item):\n    body:\n        foreach item: item:\n            if inside(item, fridge) and not is_trashcan(item):\n                achieve inside(item, trashcan)\n",
                "source_sub_task": "2. Remove all items from the fridge and throw them into the trashcan.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior place_item_on_table(item: item, table: item):\n    # Define the behavior to place an item on a table\n    body:\n        achieve on(item, table)\n        # Place the specified item on the specified table\n",
                "source_sub_task": "2. Place milk, turkey, egg, fish, and chicken on the table in the dining room.",
                "functions": [
                    "def in_dining_room_1(table: item):\n    # Function to check if a table is in the dining room\n    symbol in_dining_room=exists room: item : is_dining_room(room) and inside(table, room)\n    return in_dining_room\n"
                ]
            },
            {
                "usage_description": "",
                "cdl": "behavior cut_chicken(chicken:item, surface:item):\n    body:\n        place_chicken_on_slicing_surface(chicken, surface)\n        achieve cut(chicken)\n",
                "source_sub_task": "1. Cut the chicken into pieces.",
                "functions": []
            }
        ],
        "Write an email": [
            {
                "usage_description": "",
                "cdl": "behavior turn_on_computer(computer:item):\n    body:\n        achieve is_on(computer)\n",
                "source_sub_task": "1. Turn on the computer in the home office.",
                "functions": []
            }
        ],
        "Drink": [
            {
                "usage_description": "",
                "cdl": "behavior pour_milk_into_cup(milk:item, cup:item):\n    body:\n        achieve inside(milk, cup)\n        # Pour milk into the cup\n",
                "source_sub_task": "1. Find a cup and pour milk into it.",
                "functions": []
            }
        ]
    },
    "function_name_mapping": {
        "is_bathroom_sink": "is_bathroom_sink_1",
        "is_on_surface": "is_on_surface_1",
        "is_cd_player": "is_cd_player_1",
        "has_cutting_surface": "has_cutting_surface_1",
        "in_house": "in_house_1",
        "is_cat_found": "is_cat_found_1",
        "has_soap": "has_soap_1",
        "has_book": "has_book_1",
        "is_in_home_office": "is_in_home_office_1",
        "has_table_in_dining_room": "has_table_in_dining_room_1",
        "in_dining_room": "in_dining_room_1"
    },
    "function_name_counts": {
        "is_bathroom_sink": 2,
        "is_on_surface": 2,
        "is_cd_player": 2,
        "has_cutting_surface": 2,
        "in_house": 2,
        "is_cat_found": 2,
        "has_soap": 2,
        "has_book": 2,
        "is_in_home_office": 2,
        "has_table_in_dining_room": 2,
        "in_dining_room": 2
    }
}