Clean the bathroom:
behavior fill_sink_with_water(sink:item):
    body:
        if exists faucet:item: is_faucet(faucet) and close(faucet, sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            achieve has_water(sink)
            achieve_once is_off(faucet)
        else:
            achieve has_water(sink)


Listen to music:
behavior turn_on_dvd_player(remote_control:item, dvd_player:item):
    body:
        achieve_once inhand(remote_control)
        achieve is_on(dvd_player)


behavior turn_on_cd_player(cd_player:item):
    body:
        achieve is_on(cd_player)


Wash dishes with dishwasher:
behavior put_soap_in_dishwasher(soap:item, dishwasher:item):
    body:
        achieve inside(soap, dishwasher)


behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve inside(o, dishwasher)
        # Place the item inside the dishwasher


behavior start_the_dishwasher(dishwasher:item):
    body:
        achieve closed(dishwasher)
        achieve is_on(dishwasher)


behavior wash_forks_by_hand(fork:item):
    body:
        wash(fork) # Wash the fork by hand


behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve inside(o, dishwasher)
        # Place the item inside the dishwasher


Change TV channel:
behavior turn_on_tv(remote_control:item, television:item):
    body:
        achieve inhand(remote_control)
        achieve close_char(char, television)
        achieve is_on(television)


behavior sit_on_couch(couch:item):
    body:
        achieve on_char(char, couch) 
        # Sit on the couch


Make coffee:
behavior place_coffee_filter_in_coffee_maker(coffee_filter:item, coffee_maker:item):
    body:
        achieve on(coffee_filter, coffee_maker)
        # Place the coffee filter inside the coffee maker


Cook some food:
behavior identify_cutting_surface():
    body:
        foreach item: item:
            if surfaces(item) and not visited(item):
                observe(item, "Check if it is a cutting board")
                # Observe to determine if the item can be used as a cutting surface


behavior place_chicken_on_slicing_surface(chicken:item, surface:item):
    body:
        achieve on(chicken, surface)


behavior place_vegetables_in_pot(vegetable: item, pot: item):
    body:
        achieve inside(vegetable, pot)
        # Place the vegetable inside the pot


behavior boil_vegetables_in_pot_on_stove(stove:item, pot:item):
    body:
        achieve on(pot, stove)
        # Place the pot on the stove

        if has_plug(stove):
            # If the stove has a plug, ensure it is plugged in
            achieve plugged(stove)

        achieve is_on(stove)
        # Turn on the stove to start boiling


Prepare breakfast:
behavior slice_bread(bread: item, cutting_board: item, knife: item):
    body:
        assert grabbable(bread)
        assert grabbable(knife)
        assert cuttable(bread)
        achieve_once inhand(knife)
        achieve on(bread, cutting_board)
        achieve cut(bread)


Pet cat:
behavior find_cat(cat:item):
    body:
        achieve visited(cat)


behavior touch_cat(cat:item):
    body:
        achieve facing_char(char, cat)
        # Ensure the character is facing the cat to touch it
        touch(cat)


behavior place_cat_in_sink(cat: item, sink: item):
    body:
        achieve inside(cat, sink)
        # Place the cat inside the specified sink


Wash clothes:
behavior handwash_underwear_with_soap(soap:item, clothes:item):
    body:
        achieve_once inhand(clothes)
        achieve_once inhand(soap)
        wash(clothes) # Key step to wash clothes with soap


behavior add_detergent(detergent: item, washing_machine: item):
    body:
        achieve inside(detergent, washing_machine)
        # Add detergent into the washing machine


Iron clothes:
behavior identify_pants_to_iron():
    body:
        foreach pants: item:
            if is_clothes_pants(pants) and not visited(pants):
                observe(pants, "Identify the pair of pants for ironing")


Prepare dinner:
behavior preheat_oven(oven:item):
    body:
        achieve is_on(oven)


make up bed:
behavior fill_glass_with_water(glass:item, sink:item):
    body:
        achieve_once inhand(glass)
        # Ensure the glass is held temporarily
        
        achieve has_water(glass)
        # Fill the glass with water


Prepare a reading space:
behavior put_book_on_table(book:item, table:item):
    body:
        achieve on(book, table)
        # Place the book on the table


behavior turn_on_light_in_bedroom(light:item):
    body:
        achieve is_on(light)


behavior find_book_and_place_on_table(book:item, table:item):
    body:
        achieve on(book, table)


behavior place_spectacles_on_table(spectacles:item, table:item):
    body:
        achieve on(spectacles, table)


Put groceries in Fridge:
behavior put_items_on_table(milk:item, eggs:item, table:item):
    body:
        achieve on(milk, table)
        achieve on(eggs, table)


behavior throw_away_all_items_from_fridge(fridge:item, trashcan:item):
    body:
        foreach item: item:
            if inside(item, fridge) and not is_trashcan(item):
                achieve inside(item, trashcan)


behavior place_item_on_table(item: item, table: item):
    # Define the behavior to place an item on a table
    body:
        achieve on(item, table)
        # Place the specified item on the specified table


behavior cut_chicken(chicken:item, surface:item):
    body:
        place_chicken_on_slicing_surface(chicken, surface)
        achieve cut(chicken)


Write an email:
behavior turn_on_computer(computer:item):
    body:
        achieve is_on(computer)


Drink:
behavior pour_milk_into_cup(milk:item, cup:item):
    body:
        achieve inside(milk, cup)
        # Pour milk into the cup


