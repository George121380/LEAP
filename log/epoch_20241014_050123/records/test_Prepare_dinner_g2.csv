Goal Representation,Debug Result,Action,Add Info,LLM Answer,Plan
cdl_dataset/dataset/Prepare_dinner/g2.txt,k1,"missed actions: walk_executor(stove_2065);open_executor(stove_2065);walk_executor(fridge_289);switch
off_executor(fridge_289);open_executor(fridge_289);walk_executor(food_onion_2032);grab_executor(food
_onion_2032);walk_executor(stove_2065);putin_executor(food_onion_2032, stove_2065);walk_executor(foo
d_chicken_2017);grab_executor(food_chicken_2017);walk_executor(stove_2065);putin_executor(food_chick
en_2017, stove_2065);close_executor(stove_2065);switchon_executor(stove_2065);",missed action num: 462,,
"Reset goals: The sub-goals are: 
['1. Preheat the oven.', '2. Prepare the chicken and onions for roasting.', '3. Roast the chicken wi
th onion in the oven.', '4. Serve or store the roasted chicken and onion as desired.']",,,,,
" 
behavior preheat_oven(oven:item):
    body:
        achieve is_on(oven)

behavior __goal__():
    body:
        bind oven: item where:
            is_oven(oven)
        # Select the oven instance
        preheat_oven(oven)
        # This behavior will preheat the oven by achieving that it is on
",From function reset_goal,,,,
,,,,,"(CrowControllerApplier<walk_executor(stove_2065)>, CrowControllerApplier<switchon_executor(stove_206
5)>)"
,,walk_executor(stove_2065),"Find napkin_2005. Find knife_2050. Find cutting_board_2051. Find cup_2063. Find cup_2064. Find pot_2
069. Find oil_2079. Find fryingpan_2083. Find tray_296. Find drawing_239. Find drawing_238. Find dra
wing_240. Find drawing_241. Find drawing_242. Find drawing_243. Robot is inside dining_room_201. Rob
ot is close stove_2065. Robot is close kitchen_counter_230. Robot is no longer inside bathroom_1.",,
cdl_dataset/dataset/Prepare_dinner/g2.txt,k1,"missed actions: open_executor(stove_2065);walk_executor(fridge_289);switchoff_executor(fridge_289);o
pen_executor(fridge_289);walk_executor(food_onion_2032);grab_executor(food_onion_2032);walk_executor
(stove_2065);putin_executor(food_onion_2032, stove_2065);walk_executor(food_chicken_2017);grab_execu
tor(food_chicken_2017);walk_executor(stove_2065);putin_executor(food_chicken_2017, stove_2065);close
_executor(stove_2065);switchon_executor(stove_2065);",missed action num: 436,,
,,switchon_executor(stove_2065),"Find drawing_174. Robot is inside dining_room_201. Robot is close stove_2065. Robot is close kitchen
_counter_230. ",,
cdl_dataset/dataset/Prepare_dinner/g2.txt,k1,"missed actions: switchoff_executor(stove_2065);open_executor(stove_2065);walk_executor(fridge_289);s
witchoff_executor(fridge_289);open_executor(fridge_289);walk_executor(food_onion_2032);grab_executor
(food_onion_2032);walk_executor(stove_2065);putin_executor(food_onion_2032, stove_2065);walk_executo
r(food_chicken_2017);grab_executor(food_chicken_2017);walk_executor(stove_2065);putin_executor(food_
chicken_2017, stove_2065);close_executor(stove_2065);switchon_executor(stove_2065);",missed action num: 467,,
" 
behavior prepare_items_for_roasting(chicken:item, onion:item, cutting_board:item, knife:item, tray:i
tem):
    body:
        # Place items on the cutting surface (cutting board)
        achieve on(chicken, cutting_board)
        achieve on(onion, cutting_board)
    
        # Cut the chicken and onion
        achieve cut(chicken)
        achieve cut(onion)
        
        # Transfer the cut items to the tray
        achieve on(chicken, tray)
        achieve on(onion, tray)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select a chicken
        
        bind onion: item where:
            is_food_onion(onion)
        # Select an onion
        
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board
        
        bind knife: item where:
            is_knife(knife)
        # Select a knife

        bind tray: item where:
            is_tray(tray)
        # Select a tray

        prepare_items_for_roasting(chicken, onion, cutting_board, knife, tray)
",From function reset_sub_goal,,,,
"behavior wash_and_cut_onion(onion:item, cutting_surface:item, knife:item):
    body:
        achieve_once inhand(knife)
        # Achieve knife in hand once
        
        achieve close_char(char, onion)
        # Approach the onion
        
        wash(onion)
        # Wash the onion using water
        
        achieve cut(onion)
        # Cut the onion using the knife

behavior prepare_chicken_for_roasting(chicken:item, surface:item):
    body:
        achieve close_char(char, chicken)
        # Approach the chicken

        place_chicken_on_slicing_surface(chicken, surface)
        # Place the chicken on a slicing surface ready for roasting

behavior __goal__():
    body:
        bind knife: item where:
            is_knife(knife)
        # Select a knife

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting surface (cutting board)

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select a chicken for roasting

        bind onion: item where:
            is_food_onion(onion)
        # Select an onion
        
        wash_and_cut_onion(onion, cutting_board, knife)
        prepare_chicken_for_roasting(chicken, cutting_board)",From function reset_sub_goal,,,,
" 
def is_open(sink:item):
    # Function to check if a sink if open
    symbol check_open=exists o: item : open(sink)
    return check_open

def is_food_on_table(table: item):
    # Function to check if there is food on a specified table
    symbol has_food_on_table=exists o: item : is_food(o) and on(o, table)
    return has_food_on_table

behavior prepare_chicken_and_onions(chicken:item, onion:item, knife:item, cutting_board:item):
    body:
        achieve clean(chicken)
        achieve cut(onion)
        achieve cut(chicken)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Bind item categorized as chicken
        
        bind onion: item where:
            is_food_onion(onion)
        # Bind item categorized as onion
        
        bind knife: item where:
            is_knife(knife)
        # Bind item categorized as knife

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Bind item categorized as cutting board
        
        prepare_chicken_and_onions(chicken, onion, knife, cutting_board)
",From function reset_sub_goal,,,,
" 
behavior prepare_chicken_and_onions(chicken:item, onion:item, tray:item):
    body:
        achieve cut(onion)
        achieve on(chicken, tray)
        achieve on(onion, tray)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        bind onion: item where:
            is_food_onion(onion)
        bind tray: item where:
            is_tray(tray)
        prepare_chicken_and_onions(chicken, onion, tray)
",From function reset_sub_goal,,,,
cdl_dataset/dataset/Prepare_dinner/g2.txt,k1,"missed actions: switchoff_executor(stove_2065);open_executor(stove_2065);walk_executor(fridge_289);s
witchoff_executor(fridge_289);open_executor(fridge_289);walk_executor(food_onion_2032);grab_executor
(food_onion_2032);walk_executor(stove_2065);putin_executor(food_onion_2032, stove_2065);walk_executo
r(food_chicken_2017);grab_executor(food_chicken_2017);walk_executor(stove_2065);putin_executor(food_
chicken_2017, stove_2065);close_executor(stove_2065);switchon_executor(stove_2065);",missed action num: 467,,
cdl_dataset/dataset/Prepare_dinner/g2.txt,k1,"missed actions: switchoff_executor(stove_2065);open_executor(stove_2065);walk_executor(fridge_289);s
witchoff_executor(fridge_289);open_executor(fridge_289);walk_executor(food_onion_2032);grab_executor
(food_onion_2032);walk_executor(stove_2065);putin_executor(food_onion_2032, stove_2065);walk_executo
r(food_chicken_2017);grab_executor(food_chicken_2017);walk_executor(stove_2065);putin_executor(food_
chicken_2017, stove_2065);close_executor(stove_2065);switchon_executor(stove_2065);",missed action num: 467,,
