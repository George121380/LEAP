[
    {
        "task_name": "Turn on light",
        "source_sub_task": "Turn on the lights in the bedroom, then turn on the lights in the bathroom.",
        "cdl": " \nbehavior turn_on_light(room:item):\n    body:\n        bind light: item where:\n            is_light(light) and inside(light, room)\n        achieve is_on(light)\n\nbehavior __goal__():\n    body:\n        bind bedroom: item where:\n            is_bedroom(bedroom)\n        bind bathroom: item where:\n            is_bathroom(bathroom)\n        turn_on_light(bedroom)\n        turn_on_light(bathroom)\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "1. Find the basket that contains clothes.",
        "cdl": " \ndef has_clothes_in_basket(basket: item):\n    # Check if there are clothes in the specified basket\n    symbol has_clothes=exists o: item : is_clothes(o) and inside(o, basket)\n    return has_clothes\n\nbehavior __goal__():\n    body:\n        if exists basket: item : is_basket_for_clothes(basket) and has_clothes_in_basket(basket):\n            # Check if there is a basket with clothes based on the available information\n            bind basket: item where:\n                is_basket_for_clothes(basket) and has_clothes_in_basket(basket) \n            # Select a basket that has clothes in it\n            achieve close_char(char, basket) \n            # Move the character closer to the basket with clothes\n\n        else: \n           # If no basket with clothes is found, initiate exploration to locate one\n            foreach basket: item:\n                if is_basket_for_clothes(basket) and not visited(basket):\n                    observe(basket, \"Check if there are any clothes in the basket\")\n                    # Observe whether each basket has any clothes\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "2. Place all clothes from the basket into the washing machine and start the wash cycle.",
        "cdl": " \nbehavior place_clothes_in_washing_machine(clothes:item, washing_machine:item):\n    body:\n        achieve inside(clothes, washing_machine) # Place clothes inside the washing machine\n\nbehavior start_wash_cycle(washing_machine:item):\n    body:\n        achieve closed(washing_machine) # Close the washing machine\n        achieve is_on(washing_machine) # Start the washing cycle by turning on the washing machine\n\nbehavior __goal__():\n    body:\n        bind basket: item where:\n            is_basket_for_clothes(basket)\n        \n        bind clothes_pants: item where:\n            is_clothes_pants(clothes_pants) and inside(clothes_pants, basket)\n        \n        bind clothes_shirt: item where:\n            is_clothes_shirt(clothes_shirt) and inside(clothes_shirt, basket)\n        \n        bind clothes_socks: item where:\n            is_clothes_socks(clothes_socks) and inside(clothes_socks, basket)\n        \n        bind clothes_skirt: item where:\n            is_clothes_skirt(clothes_skirt) and inside(clothes_skirt, basket)\n\n        bind washing_machine: item where:\n            is_washing_machine(washing_machine)\n\n        place_clothes_in_washing_machine(clothes_pants, washing_machine)\n        place_clothes_in_washing_machine(clothes_shirt, washing_machine)\n        place_clothes_in_washing_machine(clothes_socks, washing_machine)\n        place_clothes_in_washing_machine(clothes_skirt, washing_machine)\n        \n        start_wash_cycle(washing_machine)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "Get a cup of water.",
        "cdl": " \nbehavior position_cup_under_faucet(cup:item, faucet:item):\n    body:\n        achieve close(cup, faucet)\n        # Position the cup directly under the faucet\n\nbehavior fill_cup_with_water(cup:item, faucet:item):\n    body:\n        achieve_once is_on(faucet)\n        # Turn the faucet on temporarily\n        achieve has_water(cup)\n        # Ensure the cup is filled with water\n        achieve_once is_off(faucet)\n        # Turn the faucet off once the cup is filled\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup) and id[cup]==2063\n        # Select the cup with ID 2063\n        bind faucet: item where:\n            is_faucet(faucet)\n        # Select the faucet\n        position_cup_under_faucet(cup, faucet)\n        fill_cup_with_water(cup, faucet)\n"
    }
]