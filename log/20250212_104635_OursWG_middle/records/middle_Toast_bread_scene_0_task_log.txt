From agent.py
Reset goals: The sub-goals are: 
['1. Slice the bread.  ', '2. Toast the sliced bread.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2050_around_kitchen_counter_230(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(knife,kitchen_counter_instance)
        else:
            exp(knife,kitchen_counter_instance)
    eff:
        unknown[knife]=False
        close[knife,kitchen_counter_instance]=True
        close[kitchen_counter_instance,knife]=True
    

behavior find_food_bread_2012_around_kitchen_counter_230(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_bread,kitchen_counter_instance)
        else:
            exp(food_bread,kitchen_counter_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_bread]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_bread_on_board(bread:item, board:item):
    body:
        achieve_once on(bread, board)

behavior cut_bread(bread:item, knife:item):
    body:
        achieve_once cut(bread)

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        place_bread_on_board(bread, cutting_board)
        cut_bread(bread, knife)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior place_bread_on_board(bread:item, board:item):
    body:
        achieve_once on(bread, board)

behavior cut_bread(bread:item, knife:item):
    body:
        achieve_once cut(bread)

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        place_bread_on_board(bread, cutting_board)
        cut_bread(bread, knife)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)exp(food_bread_2012, kitchen_counter_230)walk_executor(food_bread_2012)grab_executor(food_bread_2012)walk_executor(cutting_board_2051)put_executor(food_bread_2012, cutting_board_2051)walk_executor(kitchen_counter_230)exp(knife_2050, kitchen_counter_230)walk_executor(knife_2050)grab_executor(knife_2050)walk_executor(food_bread_2012)cut_executor(food_bread_2012)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the kitchen_counter_230. 
##############################
From agent.py
exp(food_bread_2012, kitchen_counter_230)
Fail to find food_bread_2012 around kitchen_counter_230. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_bread_2012, fridge_289)walk_executor(food_bread_2012)grab_executor(food_bread_2012)walk_executor(cutting_board_2051)put_executor(food_bread_2012, cutting_board_2051)walk_executor(knife_2050)grab_executor(knife_2050)walk_executor(food_bread_2012)cut_executor(food_bread_2012)
##############################
From agent.py
walk_executor(fridge_289)
Robot find: Robot is close to the fridge_289. 
##############################
From agent.py
switchoff_executor(fridge_289)
Robot find: Robot is close to the fridge_289. fridge_289 is turned off. 
##############################
From agent.py
open_executor(fridge_289)
Robot find: sauce_2078, food_steak_2008, food_apple_2009, food_bacon_2010, food_banana_2011, food_bread_2012, food_cake_2013, food_carrot_2014, food_cereal_2015, food_cheese_2016, food_chicken_2017, food_dessert_2018, food_donut_2019, food_egg_2020, food_fish_2021, food_food_2022, food_fruit_2023, food_hamburger_2024, food_ice_cream_2025, food_jam_2026, food_kiwi_2027, food_lemon_2028, food_noodles_2029, food_oatmeal_2030, food_orange_2031, food_onion_2032, food_peanut_butter_2033, food_pizza_2034, food_potato_2035, food_rice_2036, food_salt_2037, food_snack_2038, food_sugar_2039, food_turkey_2040, food_vegetable_2041, dry_pasta_2042, milk_2043, Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. fridge_289 is opened. 
##############################
From agent.py
exp(food_bread_2012, fridge_289)
Find food_bread_2012. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_bread_2012)walk_executor(cutting_board_2051)put_executor(food_bread_2012, cutting_board_2051)walk_executor(knife_2050)grab_executor(knife_2050)walk_executor(food_bread_2012)cut_executor(food_bread_2012)
##############################
From agent.py
grab_executor(food_bread_2012)
Robot find: Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. Grabbing food_bread_2012 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2051)
Robot find: Robot is close to the food_bread_2012. Robot is close to the cutting_board_2051. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
put_executor(food_bread_2012, cutting_board_2051)
Robot find: Robot is close to the food_bread_2012. Robot is close to the cutting_board_2051. Robot is close to the kitchen_counter_230. cutting_board_2051 is close food_bread_2012. food_bread_2012 is close cutting_board_2051. food_bread_2012 is on cutting_board_2051. food_bread_2012 released by right hand. 
##############################
From agent.py
walk_executor(knife_2050)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the knife_2050. 
##############################
From agent.py
grab_executor(knife_2050)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the knife_2050. Grabbing knife_2050 by right hand. 
##############################
From agent.py
walk_executor(food_bread_2012)
Robot find: Robot is close to the knife_2050. Robot is close to the cutting_board_2051. Robot is close to the food_bread_2012. 
##############################
From agent.py
cut_executor(food_bread_2012)
Robot find: Robot is close to the knife_2050. Robot is close to the cutting_board_2051. Robot is close to the food_bread_2012. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2071_around_cupboard_229(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==229
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
behavior toast_bread(sliced_bread:item, toaster:item):
    body:
        achieve_once inside(sliced_bread, toaster)
        # Place the sliced bread inside the toaster
        achieve is_on(toaster)
        # Turn on the toaster

behavior __goal__():
    body:
        bind sliced_bread: item where:
            is_food_bread(sliced_bread) and cut(sliced_bread)
        # Select the bread already sliced

        bind toaster: item where:
            is_toaster(toaster)
        # Select a toaster

        toast_bread(sliced_bread, toaster)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior toast_bread(sliced_bread:item, toaster:item):
    body:
        achieve_once inside(sliced_bread, toaster)
        # Place the sliced bread inside the toaster
        achieve is_on(toaster)
        # Turn on the toaster

behavior __goal__():
    body:
        bind sliced_bread: item where:
            is_food_bread(sliced_bread) and cut(sliced_bread)
        # Select the bread already sliced

        bind toaster: item where:
            is_toaster(toaster)
        # Select a toaster

        toast_bread(sliced_bread, toaster)

##############################
From agent.py-> find a plan in act()
walk_executor(toaster_292)open_executor(toaster_292)walk_executor(food_bread_2012)grab_executor(food_bread_2012)walk_executor(toaster_292)putin_executor(food_bread_2012, toaster_292)close_executor(toaster_292)switchon_executor(toaster_292)
##############################
From agent.py
walk_executor(toaster_292)
Robot find: Robot is close to the knife_2050. Robot is close to the toaster_292. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
open_executor(toaster_292)
Robot find: Robot is close to the knife_2050. Robot is close to the toaster_292. Robot is close to the kitchen_counter_230. toaster_292 is opened. 
##############################
From agent.py
walk_executor(food_bread_2012)
Robot find: Robot is close to the knife_2050. Robot is close to the cutting_board_2051. Robot is close to the food_bread_2012. 
##############################
From agent.py
grab_executor(food_bread_2012)
Robot find: Robot is close to the knife_2050. Robot is close to the cutting_board_2051. Robot is close to the food_bread_2012. Grabbing food_bread_2012 by left hand. 
##############################
From agent.py
walk_executor(toaster_292)
Robot find: Robot is close to the knife_2050. Robot is close to the food_bread_2012. Robot is close to the toaster_292. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
putin_executor(food_bread_2012, toaster_292)
Robot find: Robot is close to the knife_2050. Robot is close to the food_bread_2012. Robot is close to the toaster_292. Robot is close to the kitchen_counter_230. toaster_292 is close food_bread_2012. food_bread_2012 is close toaster_292. food_bread_2012 is inside toaster_292. food_bread_2012 released by left hand. 
##############################
From agent.py
close_executor(toaster_292)
Robot find: Robot is close to the knife_2050. Robot is close to the toaster_292. Robot is close to the kitchen_counter_230. toaster_292 is closed. 
##############################
From agent.py
switchon_executor(toaster_292)
Robot find: Robot is close to the knife_2050. Robot is close to the toaster_292. Robot is close to the kitchen_counter_230. toaster_292 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Slice and toast bread.
Action History:
['walk_executor(kitchen_counter_230)', 'walk_executor(fridge_289)', 'switchoff_executor(fridge_289)', 'open_executor(fridge_289)', 'grab_executor(food_bread_2012)', 'walk_executor(cutting_board_2051)', 'put_executor(food_bread_2012, cutting_board_2051)', 'walk_executor(knife_2050)', 'grab_executor(knife_2050)', 'walk_executor(food_bread_2012)', 'cut_executor(food_bread_2012)', 'walk_executor(toaster_292)', 'open_executor(toaster_292)', 'walk_executor(food_bread_2012)', 'grab_executor(food_bread_2012)', 'walk_executor(toaster_292)', 'putin_executor(food_bread_2012, toaster_292)', 'close_executor(toaster_292)', 'switchon_executor(toaster_292)']
Time info:
Time consume: 96 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 59
goal generate times: 2
goal correct times: 0
action_num: 19

Task complete rate:
1
Scene_id: 0
##############################
