[
    {
        "task_name": "Cook some food",
        "source_sub_task": "Slice some chicken.",
        "cdl": " \nbehavior place_chicken_on_board(chicken:item, board:item):\n    body:\n        achieve_once on(chicken, board)\n\nbehavior cut_the_chicken(chicken:item, knife:item):\n    body:\n        achieve_once cut(chicken)\n\nbehavior __goal__():\n    body:\n        bind chicken: item where:\n            is_food_chicken(chicken)\n\n        bind knife: item where:\n            is_knife(knife)\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n\n        place_chicken_on_board(chicken, cutting_board)\n        cut_the_chicken(chicken, knife)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "1. Find a cup.",
        "cdl": "\nbehavior search_for_cup(cup:item):\n    body:\n        achieve_once visited(cup)\n\nbehavior __goal__():\n    body:\n        foreach cup: item:\n            if is_cup(cup) and not visited(cup):\n                search_for_cup(cup)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "2. Fill the cup with water.",
        "cdl": " \nbehavior fill_cup_with_water(cup:item):\n    body:\n        achieve has_water(cup)\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup)\n        fill_cup_with_water(cup)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "3. Place the cup in the freezer.",
        "cdl": " \nbehavior place_cup_in_freezer(cup:item, freezer:item):\n    body:\n        achieve_once inside(cup, freezer)\n\nbehavior close_the_freezer_door(freezer:item):\n    body:\n        achieve_once closed(freezer)\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup) and has_water(cup)\n        # Select the cup with water\n\n        bind freezer: item where:\n            is_fridge(freezer) or is_freezer(freezer)\n        # Select a freezer (inside a fridge or standalone)\n\n        place_cup_in_freezer(cup, freezer)\n        close_the_freezer_door(freezer)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "Slice the chicken.",
        "cdl": " \nbehavior place_chicken_on_board(chicken:item, board:item):\n    body:\n        achieve_once on(chicken, board)\n\nbehavior cut_the_chicken(chicken:item, knife:item):\n    body:\n        achieve_once cut(chicken)\n\nbehavior __goal__():\n    body:\n        bind chicken: item where:\n            is_food_chicken(chicken)\n\n        bind knife: item where:\n            is_knife(knife)\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n\n        place_chicken_on_board(chicken, cutting_board)\n        cut_the_chicken(chicken, knife)\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "Boil some rice in a pot.",
        "cdl": " \nbehavior place_rice_in_pot(rice:item, pot:item):\n    body:\n        achieve_once inside(rice, pot)\n\nbehavior fill_pot_with_water(pot:item):\n    body:\n        achieve has_water(pot)\n\nbehavior place_pot_on_stove(pot:item, stove:item):\n    body:\n        achieve_once on(pot, stove)\n\nbehavior turn_on_stove(stove:item):\n    body:\n        achieve is_on(stove)\n\nbehavior __goal__():\n    body:\n        bind rice: item where:\n            is_food_rice(rice)\n\n        bind pot: item where:\n            is_pot(pot)\n\n        bind stove: item where:\n            is_stove(stove)\n\n        place_rice_in_pot(rice, pot)\n        fill_pot_with_water(pot)\n        place_pot_on_stove(pot, stove)\n        turn_on_stove(stove)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "Boil some water using a pot.",
        "cdl": "\nbehavior fill_pot_with_water(pot:item):\n    body:\n        achieve has_water(pot)\n\nbehavior place_pot_on_stove(pot:item, stove:item):\n    body:\n        achieve_once on(pot, stove)\n\nbehavior turn_on_stove(stove:item):\n    body:\n        achieve is_on(stove)\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot)\n\n        bind stove: item where:\n            is_stove(stove)\n\n        fill_pot_with_water(pot)\n        place_pot_on_stove(pot, stove)\n        turn_on_stove(stove)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "Get a cup of water.",
        "cdl": " \nbehavior find_cup(cup:item):\n    body:\n        achieve_once visited(cup)\n\nbehavior fill_cup_with_water(cup:item):\n    body:\n        achieve has_water(cup)\n\nbehavior __goal__():\n    body:\n        foreach cup: item:\n            if is_cup(cup) and not visited(cup):\n                find_cup(cup)\n\n        bind cup: item where:\n            is_cup(cup) and visited(cup)\n\n        fill_cup_with_water(cup)\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "Boil some rice in a pot.",
        "cdl": " \nbehavior place_rice_in_pot(rice:item, pot:item):\n    body:\n        achieve_once inside(rice, pot)\n\nbehavior fill_pot_with_water(pot:item):\n    body:\n        achieve has_water(pot)\n\nbehavior place_pot_on_stove(pot:item, stove:item):\n    body:\n        achieve_once on(pot, stove)\n\nbehavior turn_on_stove(stove:item):\n    body:\n        achieve is_on(stove)\n\nbehavior __goal__():\n    body:\n        bind rice: item where:\n            is_food_rice(rice)\n\n        bind pot: item where:\n            is_pot(pot)\n\n        bind stove: item where:\n            is_stove(stove)\n\n        place_rice_in_pot(rice, pot)\n        fill_pot_with_water(pot)\n        place_pot_on_stove(pot, stove)\n        turn_on_stove(stove)\n "
    },
    {
        "task_name": "Prepare breakfast",
        "source_sub_task": "Boil the egg.",
        "cdl": " \nbehavior place_egg_in_pot(egg:item, pot:item):\n    body:\n        achieve_once inside(egg, pot)\n\nbehavior fill_pot_with_water(pot:item):\n    body:\n        achieve has_water(pot)\n\nbehavior place_pot_on_stove(pot:item, stove:item):\n    body:\n        achieve_once on(pot, stove)\n\nbehavior turn_on_stove(stove:item):\n    body:\n        achieve is_on(stove)\n\nbehavior __goal__():\n    body:\n        bind egg: item where:\n            is_food_egg(egg)\n\n        bind pot: item where:\n            is_pot(pot)\n\n        bind stove: item where:\n            is_stove(stove)\n\n        place_egg_in_pot(egg, pot)\n        fill_pot_with_water(pot)\n        place_pot_on_stove(pot, stove)\n        turn_on_stove(stove)\n"
    },
    {
        "task_name": "Prepare breakfast",
        "source_sub_task": "Boil the egg.",
        "cdl": "behavior place_egg_in_pot(egg:item, pot:item):\n    body:\n        achieve_once inside(egg, pot)\n\nbehavior fill_pot_with_water(pot:item):\n    body:\n        achieve has_water(pot)\n\nbehavior place_pot_on_stove(pot:item, stove:item):\n    body:\n        achieve_once on(pot, stove)\n\nbehavior turn_on_stove(stove:item):\n    body:\n        achieve is_on(stove)\n\nbehavior __goal__():\n    body:\n        bind egg: item where:\n            is_food_egg(egg)\n\n        bind pot: item where:\n            is_pot(pot)\n\n        bind stove: item where:\n            is_stove(stove)\n\n        place_egg_in_pot(egg, pot)\n        fill_pot_with_water(pot)\n        place_pot_on_stove(pot, stove)\n        turn_on_stove(stove)"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "Use a pot to boil some water.",
        "cdl": "behavior fill_pot_with_water(pot:item):\n    body:\n        achieve has_water(pot)\n\nbehavior place_pot_on_stove(pot:item, stove:item):\n    body:\n        achieve_once on(pot, stove)\n\nbehavior turn_on_stove(stove:item):\n    body:\n        achieve is_on(stove)\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot)\n\n        bind stove: item where:\n            is_stove(stove)\n\n        fill_pot_with_water(pot)\n        place_pot_on_stove(pot, stove)\n        turn_on_stove(stove)"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "1. Find a frying pan, put it on the stove, turn on the stove, and add some oil.",
        "cdl": " \nbehavior find_frying_pan(pan:item):\n    body:\n        achieve_once visited(pan)\n\nbehavior place_pan_on_stove(pan:item, stove:item):\n    body:\n        achieve_once on(pan, stove)\n\nbehavior add_oil_to_pan(pan:item, oil:item):\n    body:\n        achieve_once inside(oil, pan)\n\nbehavior turn_on_stove(stove:item):\n    body:\n        achieve is_on(stove)\n\nbehavior __goal__():\n    body:\n        bind pan: item where:\n            is_fryingpan(pan)\n\n        bind stove: item where:\n            is_stove(stove)\n\n        bind oil: item where:\n            is_oil(oil)\n\n        find_frying_pan(pan)\n        place_pan_on_stove(pan, stove)\n        add_oil_to_pan(pan, oil)\n        turn_on_stove(stove)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "Fry the bananas in the pan.",
        "cdl": " \nbehavior fry_bananas(banana:item, fryingpan:item):\n    body:\n        achieve_once inside(banana, fryingpan) # Put the banana slices into the frying pan\n\nbehavior __goal__():\n    body:\n        bind stove: item where:\n            is_stove(stove)\n        # Select the correct stove\n\n        bind banana: item where:\n            is_food_banana(banana) and cut(banana)\n        # Select the cut banana\n\n        bind fryingpan: item where:\n            is_fryingpan(fryingpan) and on(fryingpan, stove)\n        # Select a frying pan that is on the stove\n\n        bind oil: item where:\n            is_oil(oil) and inside(oil, fryingpan)\n        # Ensure the frying pan has oil inside using the correct bind for oil\n\n        fry_bananas(banana, fryingpan) # Fry the banana slices in the frying pan\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "1. Peel and cut the potatoes into the desired shape.",
        "cdl": " \nbehavior peel_and_cut_potatoes(potato:item, knife:item, cutting_board:item):\n    body:\n        achieve_once on(potato, cutting_board) # Place the potato on the cutting board\n        achieve_once cut(potato) # Cut the potato\n\nbehavior __goal__():\n    body:\n        bind potato: item where:\n            is_food_potato(potato)\n        \n        bind knife: item where:\n            is_knife(knife)\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n\n        peel_and_cut_potatoes(potato, knife, cutting_board)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "1. Turn on the stove and add oil to the frying pan.",
        "cdl": " \nbehavior find_frying_pan(pan:item):\n    body:\n        achieve_once visited(pan)\n\nbehavior place_pan_on_stove(pan:item, stove:item):\n    body:\n        achieve_once on(pan, stove)\n\nbehavior add_oil_to_pan(oil:item, pan:item):\n    body:\n        achieve_once inside(oil, pan)\n\nbehavior turn_on_stove(stove:item):\n    body:\n        achieve is_on(stove)\n\nbehavior __goal__():\n    body:\n        bind pan: item where:\n            is_fryingpan(pan)\n\n        bind stove: item where:\n            is_stove(stove)\n\n        bind oil: item where:\n            is_oil(oil)\n\n        find_frying_pan(pan)\n        place_pan_on_stove(pan, stove)\n        add_oil_to_pan(oil, pan)\n        turn_on_stove(stove)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "2. Put the potato pieces in the frying pan.",
        "cdl": " \nbehavior place_potato_pieces_in_pan(potato:item, pan:item):\n    body:\n        achieve_once inside(potato, pan)\n\nbehavior __goal__():\n    body:\n        bind stove: item where:\n            is_stove(stove) and is_on(stove)\n        # Select the stove that is on\n\n        bind potato: item where:\n            is_food_potato(potato) and cut(potato)\n        # Select the cut potato\n\n        bind fryingpan: item where:\n            is_fryingpan(fryingpan) and on(fryingpan, stove)\n        # Select a frying pan that is on the stove\n        \n        place_potato_pieces_in_pan(potato, fryingpan)\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "Cook the bacon with the frying pan.",
        "cdl": "\nbehavior find_frying_pan(pan:item):\n    body:\n        achieve_once visited(pan)\n\nbehavior place_pan_on_stove(pan:item, stove:item):\n    body:\n        achieve_once on(pan, stove)\n\nbehavior turn_on_stove(stove:item):\n    body:\n        achieve is_on(stove)\n\nbehavior add_oil_to_pan(pan:item, oil:item):\n    body:\n        achieve_once inside(oil, pan)\n\nbehavior place_bacon_in_pan(bacon:item, pan:item):\n    body:\n        achieve_once inside(bacon, pan)\n\nbehavior __goal__():\n    body:\n        bind pan: item where:\n            is_fryingpan(pan)\n\n        bind stove: item where:\n            is_stove(stove)\n\n        bind oil: item where:\n            is_oil(oil)\n\n        bind bacon: item where:\n            is_food_bacon(bacon)\n\n        find_frying_pan(pan)\n        place_pan_on_stove(pan, stove)\n        add_oil_to_pan(pan, oil)\n        turn_on_stove(stove)\n        place_bacon_in_pan(bacon, pan)\n"
    },
    {
        "task_name": "Prepare breakfast",
        "source_sub_task": "Slice and toast the bread.",
        "cdl": " \nbehavior slice_bread(bread:item, knife:item, cutting_board:item):\n    body:\n        achieve_once on(bread, cutting_board) # Place the bread on the cutting board\n        achieve_once cut(bread) # Slice the bread\n\nbehavior toast_bread(bread:item, toaster:item):\n    body:\n        achieve_once inside(bread, toaster) # Place the sliced bread inside the toaster\n        achieve is_on(toaster) # Turn on the toaster\n\nbehavior __goal__():\n    body:\n        bind bread: item where:\n            is_food_bread(bread)\n\n        bind knife: item where:\n            is_knife(knife)\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n\n        bind toaster: item where:\n            is_toaster(toaster)\n\n        slice_bread(bread, knife, cutting_board)\n        toast_bread(bread, toaster)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "1. Peel and slice the bananas.",
        "cdl": " \nbehavior peel_bananas(banana:item):\n    body:\n        achieve_once visited(banana) # Assume visiting the banana represents peeling\n\nbehavior slice_bananas(banana:item, knife:item, cutting_board:item):\n    body:\n        achieve_once on(banana, cutting_board) # Place the banana on the cutting board\n        achieve_once cut(banana) # Slice the banana\n\nbehavior __goal__():\n    body:\n        bind banana: item where:\n            is_food_banana(banana)\n        # Select a banana to peel and slice\n\n        bind knife: item where:\n            is_knife(knife)\n        # Select a knife for slicing\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select a cutting board\n\n        peel_bananas(banana)\n        slice_bananas(banana, knife, cutting_board)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "2. Heat oil in a frying pan.",
        "cdl": " \nbehavior find_frying_pan(pan:item):\n    body:\n        achieve_once visited(pan)\n\nbehavior place_pan_on_stove(pan:item, stove:item):\n    body:\n        achieve_once on(pan, stove)\n\nbehavior turn_on_stove(stove:item):\n    body:\n        achieve is_on(stove)\n\nbehavior add_oil_to_pan(oil:item, pan:item):\n    body:\n        achieve_once inside(oil, pan)\n\nbehavior __goal__():\n    body:\n        bind pan: item where:\n            is_fryingpan(pan)\n\n        bind stove: item where:\n            is_stove(stove)\n\n        bind oil: item where:\n            is_oil(oil)\n\n        find_frying_pan(pan)\n        place_pan_on_stove(pan, stove)\n        add_oil_to_pan(oil, pan)\n        turn_on_stove(stove)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "3. Fry the banana slices in the hot oil until golden brown.",
        "cdl": " \nbehavior fry_banana_slices(banana:item, fryingpan:item):\n    body:\n        achieve_once inside(banana, fryingpan) # Place the banana slices inside the frying pan\n\nbehavior __goal__():\n    body:\n        bind stove: item where:\n            is_stove(stove)\n        # Select the stove\n\n        bind banana: item where:\n            is_food_banana(banana) and cut(banana)\n        # Select the cut banana\n\n        bind fryingpan: item where:\n            is_fryingpan(fryingpan) and on(fryingpan, stove)\n        # Select a frying pan that is on the stove\n\n        bind oil: item where:\n            is_oil(oil) and inside(oil, fryingpan)\n        # Ensure the frying pan has oil inside using the correct bind for oil\n\n        fry_banana_slices(banana, fryingpan) # Fry the banana slices in the frying pan\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "Cook the bacon using the frying pan.",
        "cdl": " \nbehavior find_frying_pan(pan:item):\n    body:\n        achieve_once visited(pan)\n\nbehavior place_pan_on_stove(pan:item, stove:item):\n    body:\n        achieve_once on(pan, stove)\n\nbehavior turn_on_stove(stove:item):\n    body:\n        achieve is_on(stove)\n\nbehavior add_oil_to_pan(pan:item, oil:item):\n    body:\n        achieve_once inside(oil, pan)\n\nbehavior place_bacon_in_pan(bacon:item, pan:item):\n    body:\n        achieve_once inside(bacon, pan)\n\nbehavior __goal__():\n    body:\n        bind pan: item where:\n            is_fryingpan(pan)\n\n        bind stove: item where:\n            is_stove(stove)\n\n        bind oil: item where:\n            is_oil(oil)\n\n        bind bacon: item where:\n            is_food_bacon(bacon)\n\n        find_frying_pan(pan)\n        place_pan_on_stove(pan, stove)\n        add_oil_to_pan(pan, oil)\n        turn_on_stove(stove)\n        place_bacon_in_pan(bacon, pan)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "1. Find the potatoes and wash them.  ",
        "cdl": " \nbehavior find_and_clean_potatoes(potato:item):\n    body:\n        achieve_once visited(potato)\n        # Visit the potato to find it\n\n        achieve clean(potato)\n        # Clean the potato\n\nbehavior __goal__():\n    body:\n        foreach potato: item:\n            if is_food_potato(potato) and (not visited(potato) or dirty(potato)):\n                find_and_clean_potatoes(potato)\n\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "2. Cut the potatoes into sticks.  ",
        "cdl": "behavior place_potato_on_board(potato: item, board: item):\n    body:\n        achieve_once on(potato, board)\n\nbehavior cut_the_potato(potato: item, knife: item):\n    body:\n        achieve_once cut(potato)\n\nbehavior __goal__():\n    body:\n        bind potato: item where:\n            is_food_potato(potato) and clean(potato)\n\n        bind knife: item where:\n            is_knife(knife)\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n\n        place_potato_on_board(potato, cutting_board)\n        cut_the_potato(potato, knife)"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "1. Find a frying pan and put it on the stove.",
        "cdl": "behavior find_frying_pan(pan:item):\n    body:\n        achieve_once visited(pan)\n\nbehavior place_pan_on_stove(pan:item, stove:item):\n    body:\n        achieve_once on(pan, stove)\n\nbehavior __goal__():\n    body:\n        bind pan: item where:\n            is_fryingpan(pan)\n\n        bind stove: item where:\n            is_stove(stove)\n\n        find_frying_pan(pan)\n        place_pan_on_stove(pan, stove)"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "2. Turn on the stove and add some oil.",
        "cdl": " \nbehavior turn_on_stove(stove:item):\n    body:\n        achieve is_on(stove)\n\nbehavior add_oil_to_pan(oil:item, pan:item):\n    body:\n        achieve_once inside(oil, pan)\n\nbehavior __goal__():\n    body:\n        bind stove: item where:\n            is_stove(stove)\n\n        bind oil: item where:\n            is_oil(oil)\n\n        bind pan: item where:\n            is_fryingpan(pan) and on(pan, stove)\n\n        turn_on_stove(stove)\n        add_oil_to_pan(oil, pan)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "3. Put the potato pieces in the frying pan.",
        "cdl": " \nbehavior place_potato_pieces_in_pan(potato:item, pan:item):\n    body:\n        achieve_once inside(potato, pan)\n\nbehavior __goal__():\n    body:\n        bind stove: item where:\n            is_stove(stove) and is_on(stove)\n        # Select the stove that is on\n\n        bind potato: item where:\n            is_food_potato(potato) and cut(potato)\n        # Select the cut potato\n\n        bind fryingpan: item where:\n            is_fryingpan(fryingpan) and on(fryingpan, stove)\n        # Select a frying pan that is on the stove\n        \n        place_potato_pieces_in_pan(potato, fryingpan)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "2. Slice the kiwi and add it to the cup.",
        "cdl": " \nbehavior slice_kiwi(kiwi:item, knife:item, cutting_board:item):\n    body:\n        achieve_once on(kiwi, cutting_board)\n        achieve_once cut(kiwi)\n\nbehavior add_sliced_kiwi_to_cup(kiwi:item, cup:item):\n    body:\n        achieve_once inside(kiwi, cup)\n\nbehavior __goal__():\n    body:\n        bind kiwi: item where:\n            is_food_kiwi(kiwi)\n\n        bind knife: item where:\n            is_knife(knife)\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n\n        bind cup: item where:\n            is_cup(cup) and has_water(cup)\n\n        slice_kiwi(kiwi, knife, cutting_board)\n        add_sliced_kiwi_to_cup(kiwi, cup)\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "1. Find the pizza and hamburger.",
        "cdl": " \ndef is_food_item_observed(food_item:item):\n    # Function to check if the food item (pizza or hamburger) has been observed\n    symbol observed=visited(food_item)\n    return observed\n\nbehavior search_for_food(food_item:item):\n    body:\n        achieve_once visited(food_item)\n        # Visit the food item to find it\n\nbehavior __goal__():\n    body:\n        foreach food_item: item:\n            if (is_food_pizza(food_item) or is_food_hamburger(food_item)) and not is_food_item_observed(food_item):\n                # Check all unvisited food items that are either pizza or hamburger\n                search_for_food(food_item)\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "2. Place the pizza and hamburger on a plate.",
        "cdl": " \nbehavior place_food_on_plate(food:item, plate:item):\n    body:\n        achieve_once on(food, plate)\n\nbehavior __goal__():\n    body:\n        bind pizza: item where:\n            is_food_pizza(pizza)\n\n        bind hamburger: item where:\n            is_food_hamburger(hamburger)\n\n        bind plate: item where:\n            is_plate(plate)\n\n        place_food_on_plate(pizza, plate)\n        place_food_on_plate(hamburger, plate)\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "3. Heat the plate with the pizza and hamburger in the microwave.",
        "cdl": " \nbehavior heat_plate_with_food(microwave:item, plate:item):\n    body:\n        achieve_once inside(plate, microwave)\n        # Place the plate with the food inside the microwave\n        achieve_once closed(microwave)\n        # Close the microwave door\n        achieve is_on(microwave)\n        # Turn on the microwave to heat the food\n\nbehavior __goal__():\n    body:\n        bind microwave: item where:\n            is_microwave(microwave)\n        # Select the microwave\n\n        bind plate: item where:\n            is_plate(plate)\n        # Select the plate with the food\n\n        heat_plate_with_food(microwave, plate)\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "4. Put the plate on a table in the dining room.",
        "cdl": " \nbehavior place_plate_on_table(plate:item, table:item):\n    body:\n        achieve_once on(plate, table)\n\nbehavior __goal__():\n    body:\n        bind plate: item where:\n            is_plate(plate) and id[plate]==2105\n\n        bind dining_room: item where:\n            is_dining_room(dining_room)\n\n        bind table: item where:\n            is_table(table) and inside(table, dining_room)\n\n        place_plate_on_table(plate, table)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "1. Find a cup and fill it with milk.  ",
        "cdl": " \nbehavior find_cup(cup:item):\n    body:\n        achieve_once visited(cup)\n\nbehavior fill_cup_with_milk(cup:item, milk:item):\n    body:\n        achieve_once inside(milk, cup)\n\nbehavior __goal__():\n    body:\n        foreach cup: item:\n            if is_cup(cup) and not visited(cup):\n                find_cup(cup)\n        \n        bind cup: item where:\n            is_cup(cup) and visited(cup)\n        \n        bind milk: item where:\n            is_milk(milk)\n\n        fill_cup_with_milk(cup, milk)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "2. Heat the cup of milk in the microwave.",
        "cdl": " \nbehavior heat_cup_of_milk_in_microwave(cup:item, microwave:item):\n    body:\n        achieve_once inside(cup, microwave)\n        # Place the cup inside the microwave\n        achieve_once closed(microwave)\n        # Close the microwave door\n        achieve is_on(microwave)\n        # Turn on the microwave to heat the milk\n\ndef cup_contains_milk(cup:item):\n    # Function to check if the cup contains milk\n    symbol contains_milk = exists milk: item : (is_milk(milk) and inside(milk, cup))\n    return contains_milk\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup) and cup_contains_milk(cup)\n        # Select the cup containing milk\n\n        bind microwave: item where:\n            is_microwave(microwave)\n        # Select the microwave\n\n        heat_cup_of_milk_in_microwave(cup, microwave)\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "1. Find a frying pan.",
        "cdl": " \nbehavior find_frying_pan(pan:item):\n    body:\n        achieve_once visited(pan)\n\nbehavior __goal__():\n    body:\n        foreach pan: item:\n            if is_fryingpan(pan) and not visited(pan):\n                find_frying_pan(pan)\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "2. Cook the bacon using the frying pan.",
        "cdl": " \nbehavior find_frying_pan(pan:item):\n    body:\n        achieve_once visited(pan)\n\nbehavior place_pan_on_stove(pan:item, stove:item):\n    body:\n        achieve_once on(pan, stove)\n\nbehavior turn_on_stove(stove:item):\n    body:\n        achieve is_on(stove)\n\nbehavior add_oil_to_pan(pan:item, oil:item):\n    body:\n        achieve_once inside(oil, pan)\n\nbehavior place_bacon_in_pan(bacon:item, pan:item):\n    body:\n        achieve_once inside(bacon, pan)\n\nbehavior __goal__():\n    body:\n        bind pan: item where:\n            is_fryingpan(pan)\n\n        bind stove: item where:\n            is_stove(stove)\n\n        bind oil: item where:\n            is_oil(oil)\n\n        bind bacon: item where:\n            is_food_bacon(bacon)\n\n        find_frying_pan(pan)\n        place_pan_on_stove(pan, stove)\n        add_oil_to_pan(pan, oil)\n        turn_on_stove(stove)\n        place_bacon_in_pan(bacon, pan)\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "1. Find the pizza and hamburger.",
        "cdl": " \ndef is_food_item_observed(food_item:item):\n    # Function to check if the food item (pizza or hamburger) has been observed\n    symbol observed=visited(food_item)\n    return observed\n\nbehavior search_for_food(food_item:item):\n    body:\n        achieve_once visited(food_item)\n        # Visit the food item to find it\n\nbehavior __goal__():\n    body:\n        foreach food_item: item:\n            if (is_food_pizza(food_item) or is_food_hamburger(food_item)) and not is_food_item_observed(food_item):\n                # Check all unvisited food items that are either pizza or hamburger\n                search_for_food(food_item)\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "2. Put the pizza and hamburger on a plate.",
        "cdl": "behavior place_food_on_plate(food:item, plate:item):\n    body:\n        achieve_once on(food, plate)\n\nbehavior __goal__():\n    body:\n        bind pizza: item where:\n            is_food_pizza(pizza)\n\n        bind hamburger: item where:\n            is_food_hamburger(hamburger)\n\n        bind plate: item where:\n            is_plate(plate)\n\n        place_food_on_plate(pizza, plate)\n        place_food_on_plate(hamburger, plate)"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "3. Heat the plate with the pizza and hamburger in the microwave.",
        "cdl": " \nbehavior heat_plate_with_food(microwave:item, plate:item):\n    body:\n        achieve_once inside(plate, microwave)\n        # Place the plate with the food inside the microwave\n        achieve_once closed(microwave)\n        # Close the microwave door\n        achieve is_on(microwave)\n        # Turn on the microwave to heat the food\n\nbehavior __goal__():\n    body:\n        bind microwave: item where:\n            is_microwave(microwave)\n        # Select the microwave\n\n        bind plate: item where:\n            is_plate(plate)\n        # Select the plate with the food\n\n        heat_plate_with_food(microwave, plate)\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "4. Put the plate on a table in the dining room.",
        "cdl": " \nbehavior place_plate_on_table(plate:item, table:item):\n    body:\n        achieve_once on(plate, table)\n\nbehavior __goal__():\n    body:\n        bind plate: item where:\n            is_plate(plate) and id[plate]==1000\n        # Select plate with ID 1000\n\n        bind dining_room: item where:\n            is_dining_room(dining_room)\n        # Select the dining room\n\n        bind table: item where:\n            is_table(table) and inside(table, dining_room)\n        # Select a table inside the dining room\n\n        place_plate_on_table(plate, table)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "1. Find a cup and fill it with water.",
        "cdl": " \nbehavior find_a_cup(cup:item):\n    body:\n        achieve_once visited(cup)\n\nbehavior fill_cup_with_water(cup:item, faucet:item):\n    body:\n        achieve_once close_char(char, faucet)\n        # Approach the faucet to fill the cup\n        achieve is_on(faucet) # Ensure faucet is on\n        achieve has_water(cup)\n        # Fill the cup with water\n\nbehavior __goal__():\n    body:\n        foreach cup: item:\n            if is_cup(cup) and not visited(cup):\n                find_a_cup(cup)\n        \n        bind cup: item where:\n            is_cup(cup) and visited(cup)\n        # Select the visited cup\n\n        bind faucet: item where:\n            is_faucet(faucet)\n        # Select a faucet\n\n        fill_cup_with_water(cup, faucet)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "1. Find a cup.",
        "cdl": "behavior search_for_cup(cup:item):\n    body:\n        achieve_once visited(cup)\n\nbehavior __goal__():\n    body:\n        foreach cup: item:\n            if is_cup(cup) and not visited(cup):\n                search_for_cup(cup)"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "2. Fill the cup with milk.",
        "cdl": "\nbehavior find_cup(cup:item):\n    body:\n        achieve_once visited(cup)\n\nbehavior fill_cup_with_milk(cup:item, milk:item):\n    body:\n        achieve_once inside(milk, cup)\n\nbehavior __goal__():\n    body:\n        foreach cup: item:\n            if is_cup(cup) and not visited(cup):\n                find_cup(cup)\n\n        bind cup: item where:\n            is_cup(cup) and visited(cup)\n        \n        bind milk: item where:\n            is_milk(milk)\n\n        fill_cup_with_milk(cup, milk)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "3. Heat the cup of milk using the microwave.",
        "cdl": "behavior heat_cup_of_milk_in_microwave(cup:item, microwave:item):\n    body:\n        achieve_once inside(cup, microwave)\n        # Place the cup inside the microwave\n        achieve_once closed(microwave)\n        # Close the microwave door\n        achieve is_on(microwave)\n        # Turn on the microwave to heat the milk\n\ndef cup_contains_milk(cup:item):\n    # Function to check if the cup contains milk\n    symbol contains_milk = exists milk: item : (is_milk(milk) and inside(milk, cup))\n    return contains_milk\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup) and cup_contains_milk(cup)\n        # Select the cup containing milk\n\n        bind microwave: item where:\n            is_microwave(microwave)\n        # Select the microwave\n\n        heat_cup_of_milk_in_microwave(cup, microwave)"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "1. Find a pot.",
        "cdl": " \nbehavior search_for_pot(pot:item):\n    body:\n        achieve_once visited(pot)\n\nbehavior __goal__():\n    body:\n        foreach pot: item:\n            if is_pot(pot) and not visited(pot):\n                search_for_pot(pot)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "2. Fill the pot with water and place it on the stove.",
        "cdl": " \nbehavior fill_pot_with_water(pot:item, faucet:item):\n    body:\n        achieve_once close_char(char, faucet)\n        # Approach the faucet to fill the pot\n        achieve is_on(faucet) # Ensure faucet is on\n        achieve has_water(pot)\n        # Fill the pot with water\n\nbehavior place_pot_on_stove(pot:item, stove:item):\n    body:\n        achieve_once on(pot, stove)\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot) and id[pot]==54\n        # Select the specific pot with ID 54\n        \n        bind faucet: item where:\n            is_faucet(faucet)\n\n        bind stove: item where:\n            is_stove(stove) and id[stove]==2090\n        # Select the specific stove with ID 2090\n        \n        fill_pot_with_water(pot, faucet)\n        place_pot_on_stove(pot, stove)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "1. Clean the vegetables.  ",
        "cdl": " \nbehavior clean_vegetables(vegetable:item):\n    body:\n        achieve clean(vegetable)\n\nbehavior __goal__():\n    body:\n        foreach vegetable: item:\n            if is_food_vegetable(vegetable) and dirty(vegetable):\n                clean_vegetables(vegetable)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "2. Put the cleaned vegetables in the pot.  ",
        "cdl": " \nbehavior place_vegetables_in_pot(vegetables:item, pot:item):\n    body:\n        achieve_once inside(vegetables, pot)\n\nbehavior ensure_pot_has_water(pot:item, faucet:item):\n    body:\n        achieve_once close_char(char, faucet) # Approach the faucet to fill the pot\n        achieve is_on(faucet) # Ensure faucet is on\n        achieve has_water(pot) # Fill the pot with water\n\nbehavior place_pot_on_stove(pot:item, stove:item):\n    body:\n        achieve_once on(pot, stove)\n\nbehavior turn_on_stove(stove:item):\n    body:\n        achieve is_on(stove)\n\nbehavior __goal__():\n    body:\n        bind vegetables: item where:\n            is_food_vegetable(vegetables) and clean(vegetables)\n\n        bind pot: item where:\n            is_pot(pot)\n\n        bind stove: item where:\n            is_stove(stove)\n\n        bind faucet: item where:\n            is_faucet(faucet)\n\n        ensure_pot_has_water(pot, faucet)\n        place_vegetables_in_pot(vegetables, pot)\n        place_pot_on_stove(pot, stove)\n        turn_on_stove(stove)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "3. Turn on the stove to boil the vegetables.",
        "cdl": "\nbehavior ensure_pot_has_water(pot:item, faucet:item):\n    body:\n        achieve_once close_char(char, faucet)\n        # Approach the faucet to fill the pot\n        achieve is_on(faucet) # Ensure the faucet is on\n        achieve has_water(pot)\n        # Fill the pot with water\n\nbehavior place_pot_on_stove(pot:item, stove:item):\n    body:\n        achieve_once on(pot, stove)\n\nbehavior turn_on_stove(stove:item):\n    body:\n        achieve is_on(stove)\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot)\n\n        bind stove: item where:\n            is_stove(stove)\n\n        bind faucet: item where:\n            is_faucet(faucet)\n\n        ensure_pot_has_water(pot, faucet)\n        place_pot_on_stove(pot, stove)\n        turn_on_stove(stove)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "1. Find a cup and fill it with milk.  ",
        "cdl": "behavior find_cup(cup:item):\n    body:\n        achieve_once visited(cup)\n\nbehavior fill_cup_with_milk(cup:item, milk:item):\n    body:\n        achieve_once inside(milk, cup)\n\nbehavior __goal__():\n    body:\n        foreach cup: item:\n            if is_cup(cup) and not visited(cup):\n                find_cup(cup)\n\n        bind cup: item where:\n            is_cup(cup) and visited(cup)\n\n        bind milk: item where:\n            is_milk(milk)\n\n        fill_cup_with_milk(cup, milk)"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "2. Heat the cup of milk in the microwave.",
        "cdl": "behavior heat_cup_of_milk_in_microwave(cup:item, microwave:item):\n    body:\n        achieve_once inside(cup, microwave)\n        # Place the cup inside the microwave\n        achieve_once closed(microwave)\n        # Close the microwave door\n        achieve is_on(microwave)\n        # Turn on the microwave to heat the milk\n\ndef cup_contains_milk(cup:item):\n    # Function to check if the cup contains milk\n    symbol contains_milk = exists milk: item : (is_milk(milk) and inside(milk, cup))\n    return contains_milk\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup) and cup_contains_milk(cup)\n        # Select the cup containing milk\n\n        bind microwave: item where:\n            is_microwave(microwave)\n        # Select the microwave\n\n        heat_cup_of_milk_in_microwave(cup, microwave)"
    },
    {
        "task_name": "Prepare breakfast",
        "source_sub_task": "Slice the bread and toast it.",
        "cdl": " \nbehavior slice_bread(bread:item, knife:item, cutting_board:item):\n    body:\n        achieve_once on(bread, cutting_board)\n        # Place the bread on the cutting board\n        achieve_once cut(bread)\n        # Slice the bread\n\nbehavior toast_bread(bread:item, toaster:item):\n    body:\n        achieve_once inside(bread, toaster)\n        # Place the sliced bread inside the toaster\n        achieve is_on(toaster)\n        # Turn on the toaster\n\nbehavior __goal__():\n    body:\n        bind bread: item where:\n            is_food_bread(bread)\n\n        bind knife: item where:\n            is_knife(knife)\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n\n        bind toaster: item where:\n            is_toaster(toaster)\n\n        slice_bread(bread, knife, cutting_board)\n        toast_bread(bread, toaster)\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "1. Find the pizza and hamburger.",
        "cdl": " \ndef is_food_item_observed(food_item:item):\n    # Function to check if the food item (pizza or hamburger) has been observed\n    symbol observed=visited(food_item)\n    return observed\n\nbehavior search_for_food(food_item:item):\n    body:\n        achieve_once visited(food_item)\n        # Visit the food item to find it\n\nbehavior __goal__():\n    body:\n        foreach food_item: item:\n            if (is_food_pizza(food_item) or is_food_hamburger(food_item)) and not is_food_item_observed(food_item):\n                # Check all unvisited food items that are either pizza or hamburger\n                search_for_food(food_item)\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "2. Place the pizza and hamburger on a plate.",
        "cdl": "behavior place_food_on_plate(food:item, plate:item):\n    body:\n        achieve_once on(food, plate)\n\nbehavior __goal__():\n    body:\n        bind pizza: item where:\n            is_food_pizza(pizza)\n\n        bind hamburger: item where:\n            is_food_hamburger(hamburger)\n\n        bind plate: item where:\n            is_plate(plate)\n\n        place_food_on_plate(pizza, plate)\n        place_food_on_plate(hamburger, plate)"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "3. Heat the plate in the microwave.",
        "cdl": " \nbehavior heat_plate_with_food(microwave:item, plate:item):\n    body:\n        achieve_once inside(plate, microwave)\n        # Place the plate with the food inside the microwave\n        achieve_once closed(microwave)\n        # Close the microwave door\n        achieve is_on(microwave)\n        # Turn on the microwave to heat the food\n\nbehavior __goal__():\n    body:\n        bind microwave: item where:\n            is_microwave(microwave)\n        # Select the microwave\n\n        bind plate: item where:\n            is_plate(plate)\n        # Select the plate with the food\n\n        heat_plate_with_food(microwave, plate)\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "4. Put the plate with pizza and hamburger on a table in the dining room.",
        "cdl": "behavior place_plate_on_table(plate:item, table:item):\n    body:\n        achieve_once on(plate, table)\n\nbehavior __goal__():\n    body:\n        bind plate: item where:\n            is_plate(plate)\n\n        bind dining_room: item where:\n            is_dining_room(dining_room)\n\n        bind table: item where:\n            is_table(table) and inside(table, dining_room)\n\n        place_plate_on_table(plate, table)"
    },
    {
        "task_name": "Prepare breakfast",
        "source_sub_task": "1. Slice the bread.  ",
        "cdl": " \nbehavior place_bread_on_board(bread:item, board:item):\n    body:\n        achieve_once on(bread, board)\n\nbehavior cut_bread(bread:item, knife:item):\n    body:\n        achieve_once cut(bread)\n\nbehavior __goal__():\n    body:\n        bind bread: item where:\n            is_food_bread(bread)\n\n        bind knife: item where:\n            is_knife(knife)\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n\n        place_bread_on_board(bread, cutting_board)\n        cut_bread(bread, knife)\n"
    },
    {
        "task_name": "Prepare breakfast",
        "source_sub_task": "2. Toast the sliced bread.",
        "cdl": "behavior toast_bread(sliced_bread:item, toaster:item):\n    body:\n        achieve_once inside(sliced_bread, toaster)\n        # Place the sliced bread inside the toaster\n        achieve is_on(toaster)\n        # Turn on the toaster\n\nbehavior __goal__():\n    body:\n        bind sliced_bread: item where:\n            is_food_bread(sliced_bread) and cut(sliced_bread)\n        # Select the bread already sliced\n\n        bind toaster: item where:\n            is_toaster(toaster)\n        # Select a toaster\n\n        toast_bread(sliced_bread, toaster)\n"
    }
]