From agent.py
Reset goals: The sub-goals are: 
['Boil some rice by pot.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_rice_2036_around_kitchen_counter_230(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_rice,kitchen_counter_instance)
        else:
            exp(food_rice,kitchen_counter_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_rice]=True
    

behavior find_pot_2069_around_kitchen_counter_230(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(pot,kitchen_counter_instance)
        else:
            exp(pot,kitchen_counter_instance)
    eff:
        unknown[pot]=False
        close[pot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,pot]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot(pot:item, water_source:item):
    body:
        achieve has_water(pot)
        # Fill the pot with water from the specified water source

behavior place_on_stove(pot:item, stove:item):
    body:
        achieve on(pot, stove)
        # Place the pot on the stove

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)
        # Turn on the stove to start boiling

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select an item categorized as rice

        bind pot: item where:
            is_pot(pot)
        # Select an item categorized as a pot

        bind water_source: item where:
            is_sink(water_source)
        # Select a sink as the water source

        bind stove: item where:
            is_stove(stove)
        # Select an appliance categorized as a stove

        achieve_inside(rice, pot)
        # Place the rice inside the pot

        fill_pot(pot, water_source)
        # Fill the pot with water

        place_on_stove(pot, stove)
        # Place the pot with rice and water on the stove

        turn_on_stove(stove)
        # Turn on the stove to begin boiling the rice

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

'Function achieve_inside not found. Note that recursive function calls are not supported in the current version.'
##############################
