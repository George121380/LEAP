From agent.py
Reset goals: The sub-goals are: 
['1. Identify the basket with clothes in it.', '2. Place the clothes from the basket into the washing machine.', '3. Add soap to the washing machine.', '4. Run the washing machine to wash the clothes.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2079_around_basket_for_clothes_2040(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_scarf,basket_for_clothes_instance)
        else:
            exp(clothes_scarf,basket_for_clothes_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_scarf]=True
    

behavior find_clothes_dress_2075_around_basket_for_clothes_2040(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_dress,basket_for_clothes_instance)
        else:
            exp(clothes_dress,basket_for_clothes_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_dress]=True
    

behavior find_clothes_gloves_2077_around_basket_for_clothes_2040(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_gloves,basket_for_clothes_instance)
        else:
            exp(clothes_gloves,basket_for_clothes_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_gloves]=True
    

behavior find_clothes_jacket_2078_around_basket_for_clothes_2040(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_jacket,basket_for_clothes_instance)
        else:
            exp(clothes_jacket,basket_for_clothes_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_jacket]=True
    

behavior find_clothes_hat_2076_around_basket_for_clothes_2040(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_hat,basket_for_clothes_instance)
        else:
            exp(clothes_hat,basket_for_clothes_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_hat]=True
    

behavior find_clothes_shirt_2114_around_basket_for_clothes_2040(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_shirt,basket_for_clothes_instance)
        else:
            exp(clothes_shirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_shirt]=True
    

behavior find_clothes_socks_2115_around_basket_for_clothes_2040(clothes_socks:item):
    goal: not unknown(clothes_socks)
    body:
        assert is_clothes_socks(clothes_socks)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_socks,basket_for_clothes_instance)
        else:
            exp(clothes_socks,basket_for_clothes_instance)
    eff:
        unknown[clothes_socks]=False
        close[clothes_socks,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_socks]=True
    

behavior find_clothes_pants_2113_around_basket_for_clothes_2040(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_pants,basket_for_clothes_instance)
        else:
            exp(clothes_pants,basket_for_clothes_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_pants]=True
    

behavior find_clothes_skirt_2116_around_basket_for_clothes_2040(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

behavior find_clothes_underwear_2022_around_basket_for_clothes_2040(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_underwear,basket_for_clothes_instance)
        else:
            exp(clothes_underwear,basket_for_clothes_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_underwear]=True
    

#exp_behavior_end

#goal_representation
 
def has_clothes_in_basket(basket:item):
    # Function to check if there are clothes in the specified basket
    symbol has_clothes = exists o: item : (is_clothes(o) and inside(o, basket))
    return has_clothes

behavior __goal__():
    body:
        if exists basket: item : (is_basket_for_clothes(basket) and has_clothes_in_basket(basket)):
            # Check if there is a basket with clothes based on the available information
            bind basket: item where:
                is_basket_for_clothes(basket) and has_clothes_in_basket(basket) # The condition has_clothes_in_basket can only be used when you are certain that there are clothes in the basket
            # Select a basket that has clothes in it
            achieve close_char(char, basket) 
            # Move the character closer to the basket with clothes

        else: 
           # If no basket with clothes is found, initiate exploration to locate one
            foreach basket: item:
                if is_basket_for_clothes(basket) and not visited(basket):
                    observe(basket,"Check is there any clothes in the basket")
                    # Observe whether each basket has any clothes

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_clothes_in_basket(basket:item):
    # Function to check if there are clothes in the specified basket
    symbol has_clothes = exists o: item : (is_clothes(o) and inside(o, basket))
    return has_clothes

behavior __goal__():
    body:
        if exists basket: item : (is_basket_for_clothes(basket) and has_clothes_in_basket(basket)):
            # Check if there is a basket with clothes based on the available information
            bind basket: item where:
                is_basket_for_clothes(basket) and has_clothes_in_basket(basket) # The condition has_clothes_in_basket can only be used when you are certain that there are clothes in the basket
            # Select a basket that has clothes in it
            achieve close_char(char, basket) 
            # Move the character closer to the basket with clothes

        else: 
           # If no basket with clothes is found, initiate exploration to locate one
            foreach basket: item:
                if is_basket_for_clothes(basket) and not visited(basket):
                    observe(basket,"Check is there any clothes in the basket")
                    # Observe whether each basket has any clothes

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)obs(basket_for_clothes_2040, Check is there any clothes in the basket)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Robot find: clothes_pants_2113, clothes_shirt_2114, clothes_socks_2115, clothes_skirt_2116, Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. 
##############################
From agent.py
obs(basket_for_clothes_2040, Check is there any clothes in the basket)
Get this information:  clothes_skirt_2116 is inside basket_for_clothes_2040. basket_for_clothes_2040 is inside bathroom_265. clothes_socks_2115 is inside basket_for_clothes_2040. basket_for_clothes_2040 is close to clothes_pants_2113. basket_for_clothes_2040 is close to clothes_shirt_2114. basket_for_clothes_2040 is close to clothes_socks_2115. basket_for_clothes_2040 is close to clothes_skirt_2116. basket_for_clothes_2040 is close to bathtub_297. basket_for_clothes_2040 is close to window_287. basket_for_clothes_2040 is close to character_219. clothes_pants_2113 is inside basket_for_clothes_2040. clothes_shirt_2114 is inside basket_for_clothes_2040. basket_for_clothes_2040 is OPEN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2079_around_ceilinglamp_185(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind ceilinglamp_instance:item where:
            is_ceilinglamp(ceilinglamp_instance) and id[ceilinglamp_instance]==185
        achieve close_char(char,ceilinglamp_instance)
        if can_open(ceilinglamp_instance):
            achieve_once open(ceilinglamp_instance)
            exp(clothes_scarf,ceilinglamp_instance)
        else:
            exp(clothes_scarf,ceilinglamp_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,ceilinglamp_instance]=True
        close[ceilinglamp_instance,clothes_scarf]=True
    

behavior find_clothes_dress_2075_around_ceilinglamp_185(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind ceilinglamp_instance:item where:
            is_ceilinglamp(ceilinglamp_instance) and id[ceilinglamp_instance]==185
        achieve close_char(char,ceilinglamp_instance)
        if can_open(ceilinglamp_instance):
            achieve_once open(ceilinglamp_instance)
            exp(clothes_dress,ceilinglamp_instance)
        else:
            exp(clothes_dress,ceilinglamp_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,ceilinglamp_instance]=True
        close[ceilinglamp_instance,clothes_dress]=True
    

behavior find_clothes_gloves_2077_around_washing_machine_2041(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

behavior find_clothes_jacket_2078_around_washing_machine_2041(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

behavior find_clothes_hat_2076_around_wallshelf_301(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==301
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(clothes_hat,wallshelf_instance)
        else:
            exp(clothes_hat,wallshelf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,wallshelf_instance]=True
        close[wallshelf_instance,clothes_hat]=True
    

behavior find_clothes_underwear_2022_around_washing_machine_2041(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_underwear,washing_machine_instance)
        else:
            exp(clothes_underwear,washing_machine_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,washing_machine_instance]=True
        close[washing_machine_instance,clothes_underwear]=True
    

behavior find_pajamas_2039_around_washing_machine_2041(pajamas:item):
    goal: not unknown(pajamas)
    body:
        assert is_pajamas(pajamas)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(pajamas,washing_machine_instance)
        else:
            exp(pajamas,washing_machine_instance)
    eff:
        unknown[pajamas]=False
        close[pajamas,washing_machine_instance]=True
        close[washing_machine_instance,pajamas]=True
    

#exp_behavior_end

#goal_representation
 
def get_clothes_from_basket(basket:item):
    # Function to check if there are clothes in a specified basket
    symbol has_clothes= exists c: item : (is_clothes(c) and inside(c, basket))
    return has_clothes

behavior put_clothes_in_washing_machine(c:item, washing_machine:item):
    body:
        achieve_once inside(c, washing_machine)
        # Place the clothes inside the washing machine

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket)
        # Select the basket for clothes
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        if get_clothes_from_basket(basket):
            foreach c: item:
                if is_clothes(c) and inside(c, basket):
                    put_clothes_in_washing_machine(c, washing_machine)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def get_clothes_from_basket(basket:item):
    # Function to check if there are clothes in a specified basket
    symbol has_clothes= exists c: item : (is_clothes(c) and inside(c, basket))
    return has_clothes

behavior put_clothes_in_washing_machine(c:item, washing_machine:item):
    body:
        achieve_once inside(c, washing_machine)
        # Place the clothes inside the washing machine

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket)
        # Select the basket for clothes
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        if get_clothes_from_basket(basket):
            foreach c: item:
                if is_clothes(c) and inside(c, basket):
                    put_clothes_in_washing_machine(c, washing_machine)

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2041)open_executor(washing_machine_2041)walk_executor(clothes_pants_2113)grab_executor(clothes_pants_2113)walk_executor(washing_machine_2041)putin_executor(clothes_pants_2113, washing_machine_2041)walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)walk_executor(washing_machine_2041)putin_executor(clothes_shirt_2114, washing_machine_2041)walk_executor(clothes_socks_2115)grab_executor(clothes_socks_2115)walk_executor(washing_machine_2041)putin_executor(clothes_socks_2115, washing_machine_2041)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(washing_machine_2041)putin_executor(clothes_skirt_2116, washing_machine_2041)
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. 
##############################
From agent.py
open_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. washing_machine_2041 is opened. 
##############################
From agent.py
walk_executor(clothes_pants_2113)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_pants_2113. 
##############################
From agent.py
grab_executor(clothes_pants_2113)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_pants_2113. Grabbing clothes_pants_2113 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot find: Robot is close to the clothes_pants_2113. Robot is close to the washing_machine_2041. 
##############################
From agent.py
putin_executor(clothes_pants_2113, washing_machine_2041)
Robot find: Robot is close to the clothes_pants_2113. Robot is close to the washing_machine_2041. washing_machine_2041 is close clothes_pants_2113. clothes_pants_2113 is close washing_machine_2041. clothes_pants_2113 is inside washing_machine_2041. clothes_pants_2113 released by right hand. 
##############################
From agent.py
walk_executor(clothes_shirt_2114)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_shirt_2114. 
##############################
From agent.py
grab_executor(clothes_shirt_2114)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_shirt_2114. Grabbing clothes_shirt_2114 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the clothes_pants_2113. Robot is close to the washing_machine_2041. 
##############################
From agent.py
putin_executor(clothes_shirt_2114, washing_machine_2041)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the clothes_pants_2113. Robot is close to the washing_machine_2041. washing_machine_2041 is close clothes_shirt_2114. clothes_shirt_2114 is close washing_machine_2041. clothes_shirt_2114 is inside washing_machine_2041. clothes_shirt_2114 released by right hand. 
##############################
From agent.py
walk_executor(clothes_socks_2115)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_socks_2115. 
##############################
From agent.py
grab_executor(clothes_socks_2115)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_socks_2115. Grabbing clothes_socks_2115 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot find: Robot is close to the clothes_socks_2115. Robot is close to the clothes_pants_2113. Robot is close to the washing_machine_2041. Robot is close to the clothes_shirt_2114. 
##############################
From agent.py
putin_executor(clothes_socks_2115, washing_machine_2041)
Robot find: Robot is close to the clothes_socks_2115. Robot is close to the clothes_pants_2113. Robot is close to the washing_machine_2041. Robot is close to the clothes_shirt_2114. washing_machine_2041 is close clothes_socks_2115. clothes_socks_2115 is inside washing_machine_2041. clothes_socks_2115 is close washing_machine_2041. clothes_socks_2115 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2116)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_skirt_2116. 
##############################
From agent.py
grab_executor(clothes_skirt_2116)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_skirt_2116. Grabbing clothes_skirt_2116 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the clothes_pants_2113. Robot is close to the washing_machine_2041. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. 
##############################
From agent.py
putin_executor(clothes_skirt_2116, washing_machine_2041)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the clothes_pants_2113. Robot is close to the washing_machine_2041. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. clothes_skirt_2116 is inside washing_machine_2041. washing_machine_2041 is close clothes_skirt_2116. clothes_skirt_2116 is close washing_machine_2041. clothes_skirt_2116 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2038_around_wallshelf_301(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==301
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(soap,wallshelf_instance)
        else:
            exp(soap,wallshelf_instance)
    eff:
        unknown[soap]=False
        close[soap,wallshelf_instance]=True
        close[wallshelf_instance,soap]=True
    

behavior find_detergent_2108_around_wallshelf_301(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==301
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(detergent,wallshelf_instance)
        else:
            exp(detergent,wallshelf_instance)
    eff:
        unknown[detergent]=False
        close[detergent,wallshelf_instance]=True
        close[wallshelf_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior add_soap_to_washing_machine(soap:item, washing_machine:item):
    body:
        achieve_once inside(soap, washing_machine)

behavior __goal__():
    body:
        bind soap: item where:
            is_soap(soap)
        # Select a soap
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and open(washing_machine)
        # Select an open washing machine
        add_soap_to_washing_machine(soap, washing_machine)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior add_soap_to_washing_machine(soap:item, washing_machine:item):
    body:
        achieve_once inside(soap, washing_machine)

behavior __goal__():
    body:
        bind soap: item where:
            is_soap(soap)
        # Select a soap
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and open(washing_machine)
        # Select an open washing machine
        add_soap_to_washing_machine(soap, washing_machine)

##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_301)exp(soap_2037, wallshelf_301)walk_executor(soap_2037)grab_executor(soap_2037)walk_executor(washing_machine_2041)putin_executor(soap_2037, washing_machine_2041)
##############################
From agent.py
walk_executor(wallshelf_301)
Robot find: towel_rack_299, towel_rack_300, drawing_296, Robot is close to the wallshelf_301. 
##############################
From agent.py
exp(soap_2037, wallshelf_301)
Fail to find soap_2037 around wallshelf_301. 
##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_cabinet_305)open_executor(bathroom_cabinet_305)exp(soap_2037, bathroom_cabinet_305)walk_executor(soap_2037)grab_executor(soap_2037)walk_executor(washing_machine_2041)putin_executor(soap_2037, washing_machine_2041)
##############################
From agent.py
walk_executor(bathroom_cabinet_305)
Robot find: towel_rack_298, Robot is close to the bathroom_cabinet_305. 
##############################
From agent.py
open_executor(bathroom_cabinet_305)
Robot find: soap_2038, Robot is close to the bathroom_cabinet_305. Robot is close to the soap_2038. bathroom_cabinet_305 is opened. 
##############################
From agent.py
exp(soap_2037, bathroom_cabinet_305)
Fail to find soap_2037 around bathroom_cabinet_305. 
##############################
From agent.py-> find a plan in act()
grab_executor(soap_2038)walk_executor(washing_machine_2041)putin_executor(soap_2038, washing_machine_2041)
##############################
From agent.py
grab_executor(soap_2038)
Robot find: Robot is close to the bathroom_cabinet_305. Robot is close to the soap_2038. Grabbing soap_2038 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot find: Robot is close to the soap_2038. Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the washing_machine_2041. 
##############################
From agent.py
putin_executor(soap_2038, washing_machine_2041)
Robot find: Robot is close to the soap_2038. Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the washing_machine_2041. soap_2038 is close washing_machine_2041. washing_machine_2041 is close soap_2038. soap_2038 is inside washing_machine_2041. soap_2038 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_kitchen_counter_129(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(detergent,kitchen_counter_instance)
        else:
            exp(detergent,kitchen_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,kitchen_counter_instance]=True
        close[kitchen_counter_instance,detergent]=True
    

behavior find_soap_2038_around_bench_124(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==124
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(soap,bench_instance)
        else:
            exp(soap,bench_instance)
    eff:
        unknown[soap]=False
        close[soap,bench_instance]=True
        close[bench_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve_once closed(washing_machine) # Ensure the washing machine is closed before starting it
        achieve_once is_on(washing_machine) # Turn on the washing machine to start the washing cycle

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        
        run_washing_machine(washing_machine)
        # Execute the behavior to run the washing machine

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve_once closed(washing_machine) # Ensure the washing machine is closed before starting it
        achieve_once is_on(washing_machine) # Turn on the washing machine to start the washing cycle

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        
        run_washing_machine(washing_machine)
        # Execute the behavior to run the washing machine

##############################
From agent.py-> find a plan in act()
close_executor(washing_machine_2041)plugin_executor(washing_machine_2041)switchon_executor(washing_machine_2041)
##############################
From agent.py
close_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. washing_machine_2041 is closed. 
##############################
From agent.py
plugin_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. washing_machine_2041 is plugged in. 
##############################
From agent.py
switchon_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. washing_machine_2041 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Wash all the clothes in the basket for clothes by adding soap to the washing machine and running it.
Action History:
['walk_executor(basket_for_clothes_2040)', 'walk_executor(washing_machine_2041)', 'open_executor(washing_machine_2041)', 'walk_executor(clothes_pants_2113)', 'grab_executor(clothes_pants_2113)', 'walk_executor(washing_machine_2041)', 'putin_executor(clothes_pants_2113, washing_machine_2041)', 'walk_executor(clothes_shirt_2114)', 'grab_executor(clothes_shirt_2114)', 'walk_executor(washing_machine_2041)', 'putin_executor(clothes_shirt_2114, washing_machine_2041)', 'walk_executor(clothes_socks_2115)', 'grab_executor(clothes_socks_2115)', 'walk_executor(washing_machine_2041)', 'putin_executor(clothes_socks_2115, washing_machine_2041)', 'walk_executor(clothes_skirt_2116)', 'grab_executor(clothes_skirt_2116)', 'walk_executor(washing_machine_2041)', 'putin_executor(clothes_skirt_2116, washing_machine_2041)', 'walk_executor(wallshelf_301)', 'walk_executor(bathroom_cabinet_305)', 'open_executor(bathroom_cabinet_305)', 'grab_executor(soap_2038)', 'walk_executor(washing_machine_2041)', 'putin_executor(soap_2038, washing_machine_2041)', 'close_executor(washing_machine_2041)', 'plugin_executor(washing_machine_2041)', 'switchon_executor(washing_machine_2041)']
Time info:
Time consume: 147 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 4
goal correct times: 0
action_num: 28

Task complete rate:
1
Scene_id: 2
##############################
