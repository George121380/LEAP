From agent.py
Reset goals: The sub-goals are: 
['Turn on the computer in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_keyboard_415_around_table_107(keyboard:item):
    goal: not unknown(keyboard)
    body:
        assert is_keyboard(keyboard)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==107
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(keyboard,table_instance)
        else:
            exp(keyboard,table_instance)
    eff:
        unknown[keyboard]=False
        close[keyboard,table_instance]=True
        close[table_instance,keyboard]=True
    

behavior find_mouse_413_around_table_107(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==107
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(mouse,table_instance)
        else:
            exp(mouse,table_instance)
    eff:
        unknown[mouse]=False
        close[mouse,table_instance]=True
        close[table_instance,mouse]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind computer: item where:
            is_computer(computer)
        # Select the computer in the home office
        
        achieve is_on(computer)
        # Achieve the state where the computer is turned on
#goal_representation_end

##############################
From agent.py->reset_goal
behavior __goal__():
    body:
        bind computer: item where:
            is_computer(computer)
        # Select the computer in the home office
        
        achieve is_on(computer)
        # Achieve the state where the computer is turned on
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you tell me how to turn on the computer in the home office.
Answer: Need to replan: No  
Guidance: Get close to the computer in the home office, and turn on the computer.

##############################
From agent.py-> find a plan in act()
walk_executor(computer_170)switchon_executor(computer_170)
##############################
From agent.py
walk_executor(computer_170)
Find mouse_166. Find chair_103. Find keyboard_168. Find hanger_112. Find hanger_115. Find hanger_113. Robot is inside bedroom_67. Robot is close computer_170. Robot is no longer inside bathroom_1.
##############################
From agent.py
switchon_executor(computer_170)
Robot is inside bedroom_67. Robot is close computer_170. 
##############################
From evaluation.py
cdl_dataset/dataset/Write_an_email/g1.txt
Checking k1
missed actions: walk_executor(computer_417);switchon_executor(computer_417);
missed action num: 2
##############################
From evaluation.py
cdl_dataset/dataset/Write_an_email/g1.txt
Checking k1
missed actions: walk_executor(computer_417);switchon_executor(computer_417);
missed action num: 2
##############################
