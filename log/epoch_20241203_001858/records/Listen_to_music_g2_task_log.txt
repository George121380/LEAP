From agent.py
Reset goals: The sub-goals are: 
['Turn on the DVD player with the remote control.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_dvd_player_2061_around_tvstand_353(dvd_player:item):
    goal: not unknown(dvd_player)
    body:
        assert is_dvd_player(dvd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==353
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(dvd_player,tvstand_instance)
        else:
            exp(dvd_player,tvstand_instance)
    eff:
        unknown[dvd_player]=False
        close[dvd_player,tvstand_instance]=True
        close[tvstand_instance,dvd_player]=True
    

behavior find_remote_control_2052_around_table_107(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==107
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(remote_control,table_instance)
        else:
            exp(remote_control,table_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,table_instance]=True
        close[table_instance,remote_control]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        # Select the DVD player

        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select the remote control

        achieve close_char(char, dvd_player) 
        # Move the character closer to the DVD player

        achieve close_char(char, remote_control) 
        # Move the character closer to the remote control

        achieve is_on(dvd_player)
        # Turn on the DVD player with the remote control

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        # Select the DVD player

        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select the remote control

        achieve close_char(char, dvd_player) 
        # Move the character closer to the DVD player

        achieve close_char(char, remote_control) 
        # Move the character closer to the remote control

        achieve is_on(dvd_player)
        # Turn on the DVD player with the remote control

##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you tell me how to turn on the dvd player with the remote control.
Answer: Need to replan: No  
Guidance: You can turn on the DVD player by touching the remote control.

##############################
From agent.py
Reset goals: The sub-goals are: 
['Turn on the DVD player using the remote control.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_dvd_player_2061_around_tvstand_353(dvd_player:item):
    goal: not unknown(dvd_player)
    body:
        assert is_dvd_player(dvd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==353
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(dvd_player,tvstand_instance)
        else:
            exp(dvd_player,tvstand_instance)
    eff:
        unknown[dvd_player]=False
        close[dvd_player,tvstand_instance]=True
        close[tvstand_instance,dvd_player]=True
    

behavior find_remote_control_2052_around_table_107(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==107
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(remote_control,table_instance)
        else:
            exp(remote_control,table_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,table_instance]=True
        close[table_instance,remote_control]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        # Bind the DVD player and the remote control instances
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        bind remote_control: item where:
            is_remote_control(remote_control)
        
        # Ensure the character is close to the remote control
        achieve close_char(char, remote_control)
        
        # Observe if the remote control is functioning or needs other actions
        observe(remote_control,"Check if remote control can turn on the DVD player")
        
        # Achieve the DVD player being on
        achieve is_on(dvd_player)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior __goal__():
    body:
        # Bind the DVD player and the remote control instances
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        bind remote_control: item where:
            is_remote_control(remote_control)
        
        # Ensure the character is close to the remote control
        achieve close_char(char, remote_control)
        
        # Observe if the remote control is functioning or needs other actions
        observe(remote_control,"Check if remote control can turn on the DVD player")
        
        # Achieve the DVD player being on
        achieve is_on(dvd_player)

##############################
From agent.py
Reset goals: The sub-goals are: 
['Turn on the DVD player using the remote control.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_dvd_player_2061_around_tvstand_353(dvd_player:item):
    goal: not unknown(dvd_player)
    body:
        assert is_dvd_player(dvd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==353
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(dvd_player,tvstand_instance)
        else:
            exp(dvd_player,tvstand_instance)
    eff:
        unknown[dvd_player]=False
        close[dvd_player,tvstand_instance]=True
        close[tvstand_instance,dvd_player]=True
    

behavior find_remote_control_2052_around_table_107(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==107
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(remote_control,table_instance)
        else:
            exp(remote_control,table_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,table_instance]=True
        close[table_instance,remote_control]=True
    

#exp_behavior_end

#goal_representation
 
behavior turn_on_dvd_player(remote_control:item, dvd_player:item):
    body:
        achieve is_on(dvd_player)

behavior __goal__():
    body:
        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select the remote control for the DVD player

        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        # Select the DVD player

        turn_on_dvd_player(remote_control, dvd_player)
        # Turn on the DVD player using the remote control

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior turn_on_dvd_player(remote_control:item, dvd_player:item):
    body:
        achieve is_on(dvd_player)

behavior __goal__():
    body:
        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select the remote control for the DVD player

        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        # Select the DVD player

        turn_on_dvd_player(remote_control, dvd_player)
        # Turn on the DVD player using the remote control

##############################
From agent.py-> find a plan in act()
walk_executor(tvstand_353)exp(dvd_player_2061, tvstand_353)walk_executor(dvd_player_2061)plugin_executor(dvd_player_2061)close_executor(dvd_player_2061)switchon_executor(dvd_player_2061)
##############################
From agent.py
walk_executor(tvstand_353)
Find dvd_player_2061. Find mat_401. Find drawing_400. Robot is inside home_office_319. Robot is close tvstand_353. Robot is close floor_324. Robot is no longer inside bathroom_1.
##############################
From agent.py
exp(dvd_player_2061, tvstand_353)
Find dvd_player_2061. 
##############################
From agent.py-> find a plan in act()
walk_executor(dvd_player_2061)plugin_executor(dvd_player_2061)switchon_executor(dvd_player_2061)
##############################
From agent.py
walk_executor(dvd_player_2061)
Robot is inside home_office_319. Robot is close tvstand_353. Robot is close dvd_player_2061. Robot is no longer close floor_324.
##############################
From agent.py
plugin_executor(dvd_player_2061)
Robot is inside home_office_319. Robot is close tvstand_353. Robot is close dvd_player_2061. 
##############################
From agent.py
switchon_executor(dvd_player_2061)
Robot is inside home_office_319. Robot is close tvstand_353. Robot is close dvd_player_2061. 
##############################
From agent.py
Human Instruction: You need to turn on the DVD player using the remote control. The actions currently performed involve turning on the DVD player directly, not utilizing a remote control, which is required to complete the sub-task.

The actions you have taken:
Action 1: Walk to tvstand_353.
Action 2: look for dvd_player_2061 around tvstand_353.
Action 3: Walk to dvd_player_2061.
Action 4: Plug in dvd_player_2061.
Action 5: Switch on dvd_player_2061.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_phone_247_around_table_107(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==107
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(phone,table_instance)
        else:
            exp(phone,table_instance)
    eff:
        unknown[phone]=False
        close[phone,table_instance]=True
        close[table_instance,phone]=True
    

#exp_behavior_end

#goal_representation
 
behavior turn_on_dvd_player_with_remote(dvd_player: item, remote_control: item):
    body:
        achieve is_on(dvd_player)

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
            # Select the DVD player
        
        bind remote_control: item where:
            is_remote_control(remote_control)
            # Select the remote control

        achieve_once inhand(remote_control)
        # Temporarily hold the remote control

        turn_on_dvd_player_with_remote(dvd_player, remote_control)
        # Turn on the DVD player using the remote control

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior turn_on_dvd_player_with_remote(dvd_player: item, remote_control: item):
    body:
        achieve is_on(dvd_player)

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
            # Select the DVD player
        
        bind remote_control: item where:
            is_remote_control(remote_control)
            # Select the remote control

        achieve_once inhand(remote_control)
        # Temporarily hold the remote control

        turn_on_dvd_player_with_remote(dvd_player, remote_control)
        # Turn on the DVD player using the remote control

##############################
From agent.py-> find a plan in act()
walk_executor(remote_control_2052)grab_executor(remote_control_2052)
##############################
From agent.py
walk_executor(remote_control_2052)
Robot is inside home_office_319. Robot is close couch_352. Robot is close remote_control_2052. Robot is no longer close tvstand_353.Robot is no longer close dvd_player_2061.
##############################
From agent.py
grab_executor(remote_control_2052)
Robot is inside home_office_319. Robot is close couch_352. Robot is close remote_control_2052. Grabbing remote_control_2052 by right hand. 
##############################
From agent.py
Human Instruction: You need to turn on the DVD player using the remote control. While you have grabbed the remote control, you have not yet used it to turn on the DVD player.

The actions you have taken:
Action 1: Walk to tvstand_353.
Action 2: look for dvd_player_2061 around tvstand_353.
Action 3: Walk to dvd_player_2061.
Action 4: Plug in dvd_player_2061.
Action 5: Switch on dvd_player_2061.
Action 6: Walk to remote_control_2052.
Action 7: Grab remote_control_2052.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind dvdp: item where:
            is_dvd_player(dvdp)
        # Select the DVD player

        bind remote: item where:
            is_remote_control(remote)
        # Select the remote control
        
        achieve is_on(dvdp)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior __goal__():
    body:
        bind dvdp: item where:
            is_dvd_player(dvdp)
        # Select the DVD player

        bind remote: item where:
            is_remote_control(remote)
        # Select the remote control
        
        achieve is_on(dvdp)

##############################
From agent.py
Reset goals: The sub-goals are: 
['Use the remote control to turn on the DVD player.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cd_player_2060_around_wallshelf_235(cd_player:item):
    goal: not unknown(cd_player)
    body:
        assert is_cd_player(cd_player)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==235
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(cd_player,wallshelf_instance)
        else:
            exp(cd_player,wallshelf_instance)
    eff:
        unknown[cd_player]=False
        close[cd_player,wallshelf_instance]=True
        close[wallshelf_instance,cd_player]=True
    

#exp_behavior_end

#goal_representation
 
behavior turn_on_dvd_player_with_remote(remote_control:item, dvd_player:item):
    body:
        achieve_once inhand(remote_control)
        # Make sure the remote control is in hand only once
        achieve is_on(dvd_player)
        # Achieve turning on the DVD player

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        # Select the DVD player

        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select the remote control

        turn_on_dvd_player_with_remote(remote_control, dvd_player)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior turn_on_dvd_player_with_remote(remote_control:item, dvd_player:item):
    body:
        achieve_once inhand(remote_control)
        # Make sure the remote control is in hand only once
        achieve is_on(dvd_player)
        # Achieve turning on the DVD player

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        # Select the DVD player

        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select the remote control

        turn_on_dvd_player_with_remote(remote_control, dvd_player)

##############################
From agent.py
Reset goals: The sub-goals are: 
['Turn on the DVD player using the remote control.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cd_player_2060_around_wallshelf_234(cd_player:item):
    goal: not unknown(cd_player)
    body:
        assert is_cd_player(cd_player)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==234
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(cd_player,wallshelf_instance)
        else:
            exp(cd_player,wallshelf_instance)
    eff:
        unknown[cd_player]=False
        close[cd_player,wallshelf_instance]=True
        close[wallshelf_instance,cd_player]=True
    

behavior find_cd_2075_around_wallshelf_234(cd:item):
    goal: not unknown(cd)
    body:
        assert is_cd(cd)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==234
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(cd,wallshelf_instance)
        else:
            exp(cd,wallshelf_instance)
    eff:
        unknown[cd]=False
        close[cd,wallshelf_instance]=True
        close[wallshelf_instance,cd]=True
    

#exp_behavior_end

#goal_representation
 
behavior turn_on_dvd_player_with_remote(dvd_player:item, remote_control:item):
    body:
        achieve is_on(dvd_player)
        # Turn the DVD player on

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
            # Select the DVD player

        bind remote_control: item where:
            is_remote_control(remote_control)
            # Select the remote control

        turn_on_dvd_player_with_remote(dvd_player, remote_control)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior turn_on_dvd_player_with_remote(dvd_player:item, remote_control:item):
    body:
        achieve is_on(dvd_player)
        # Turn the DVD player on

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
            # Select the DVD player

        bind remote_control: item where:
            is_remote_control(remote_control)
            # Select the remote control

        turn_on_dvd_player_with_remote(dvd_player, remote_control)

##############################
From agent.py
Reset goals: The sub-goals are: 
['Turn on the DVD player using the remote control.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_dvd_player_with_remote(dvd_player: item, remote_control: item):
    body:
        achieve_once inhand(remote_control)
        # Temporarily achieve the condition that the remote control is in hand
        achieve is_on(dvd_player)
        # Ensure the DVD player is turned on

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        # Select the DVD player
        
        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select the remote control

        assert plugged(dvd_player)
        assert close_char(char, dvd_player)
        # Assert that the DVD player is plugged in and the character is close to it

        turn_on_dvd_player_with_remote(dvd_player, remote_control)
        # Turn on the DVD player using the remote control

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior turn_on_dvd_player_with_remote(dvd_player: item, remote_control: item):
    body:
        achieve_once inhand(remote_control)
        # Temporarily achieve the condition that the remote control is in hand
        achieve is_on(dvd_player)
        # Ensure the DVD player is turned on

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        # Select the DVD player
        
        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select the remote control

        assert plugged(dvd_player)
        assert close_char(char, dvd_player)
        # Assert that the DVD player is plugged in and the character is close to it

        turn_on_dvd_player_with_remote(dvd_player, remote_control)
        # Turn on the DVD player using the remote control

##############################
From agent.py
Reset goals: The sub-goals are: 
['Turn on the DVD player using the remote control.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cd_player_2060_around_tvstand_225(cd_player:item):
    goal: not unknown(cd_player)
    body:
        assert is_cd_player(cd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==225
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(cd_player,tvstand_instance)
        else:
            exp(cd_player,tvstand_instance)
    eff:
        unknown[cd_player]=False
        close[cd_player,tvstand_instance]=True
        close[tvstand_instance,cd_player]=True
    

behavior find_cd_2075_around_tvstand_353(cd:item):
    goal: not unknown(cd)
    body:
        assert is_cd(cd)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==353
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(cd,tvstand_instance)
        else:
            exp(cd,tvstand_instance)
    eff:
        unknown[cd]=False
        close[cd,tvstand_instance]=True
        close[tvstand_instance,cd]=True
    

#exp_behavior_end

#goal_representation
 
behavior turn_on_dvd_player_with_remote(dvd_player: item, remote: item):
    body:
        achieve_once inhand(remote)
        # Hold the remote once to perform actions

        assert is_dvd_player(dvd_player) and is_remote_control(remote)
        # Ensure correct item types

        achieve is_on(dvd_player)
        # Ensure the DVD player is turned on
       
behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        # Select the DVD player

        bind remote: item where:
            is_remote_control(remote)
        # Select the remote control

        turn_on_dvd_player_with_remote(dvd_player, remote)
        # Execute behavior to turn on the DVD player with the remote

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior turn_on_dvd_player_with_remote(dvd_player: item, remote: item):
    body:
        achieve_once inhand(remote)
        # Hold the remote once to perform actions

        assert is_dvd_player(dvd_player) and is_remote_control(remote)
        # Ensure correct item types

        achieve is_on(dvd_player)
        # Ensure the DVD player is turned on
       
behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        # Select the DVD player

        bind remote: item where:
            is_remote_control(remote)
        # Select the remote control

        turn_on_dvd_player_with_remote(dvd_player, remote)
        # Execute behavior to turn on the DVD player with the remote

##############################
From agent.py
Reset goals: The sub-goals are: 
['Turn on the DVD player using the remote control.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cd_player_2060_around_wallshelf_234(cd_player:item):
    goal: not unknown(cd_player)
    body:
        assert is_cd_player(cd_player)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==234
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(cd_player,wallshelf_instance)
        else:
            exp(cd_player,wallshelf_instance)
    eff:
        unknown[cd_player]=False
        close[cd_player,wallshelf_instance]=True
        close[wallshelf_instance,cd_player]=True
    

behavior find_cd_2075_around_tvstand_353(cd:item):
    goal: not unknown(cd)
    body:
        assert is_cd(cd)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==353
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(cd,tvstand_instance)
        else:
            exp(cd,tvstand_instance)
    eff:
        unknown[cd]=False
        close[cd,tvstand_instance]=True
        close[tvstand_instance,cd]=True
    

#exp_behavior_end

#goal_representation
 
def has_remote_control(dvd_player:item):
    # Function to check if the DVD player has a remote control close by
    symbol has_remote=exists remote: item : is_remote_control(remote) and close(remote, dvd_player)
    return has_remote

behavior turn_on_dvd_player_with_remote(dvd_player:item, remote_control:item):
    body:
        assert is_dvd_player(dvd_player)
        assert is_remote_control(remote_control)
        achieve_once inhand(remote_control) # Temporarily hold the remote control
        achieve is_on(dvd_player) # Ensure the DVD player is turned on

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        # Select the DVD player

        if has_remote_control(dvd_player):
            bind remote_control: item where:
                is_remote_control(remote_control) and close(remote_control, dvd_player)
            # Select the remote control close to the DVD player

            turn_on_dvd_player_with_remote(dvd_player, remote_control)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_remote_control(dvd_player:item):
    # Function to check if the DVD player has a remote control close by
    symbol has_remote=exists remote: item : is_remote_control(remote) and close(remote, dvd_player)
    return has_remote

behavior turn_on_dvd_player_with_remote(dvd_player:item, remote_control:item):
    body:
        assert is_dvd_player(dvd_player)
        assert is_remote_control(remote_control)
        achieve_once inhand(remote_control) # Temporarily hold the remote control
        achieve is_on(dvd_player) # Ensure the DVD player is turned on

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        # Select the DVD player

        if has_remote_control(dvd_player):
            bind remote_control: item where:
                is_remote_control(remote_control) and close(remote_control, dvd_player)
            # Select the remote control close to the DVD player

            turn_on_dvd_player_with_remote(dvd_player, remote_control)

##############################
From agent.py
Reset goals: The sub-goals are: 
['Turn on the DVD player with the remote control.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cd_player_2060_around_wallshelf_35(cd_player:item):
    goal: not unknown(cd_player)
    body:
        assert is_cd_player(cd_player)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==35
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(cd_player,wallshelf_instance)
        else:
            exp(cd_player,wallshelf_instance)
    eff:
        unknown[cd_player]=False
        close[cd_player,wallshelf_instance]=True
        close[wallshelf_instance,cd_player]=True
    

behavior find_cd_2075_around_bookshelf_101(cd:item):
    goal: not unknown(cd)
    body:
        assert is_cd(cd)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==101
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(cd,bookshelf_instance)
        else:
            exp(cd,bookshelf_instance)
    eff:
        unknown[cd]=False
        close[cd,bookshelf_instance]=True
        close[bookshelf_instance,cd]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        # Select the DVD player

        bind remote: item where:
            is_remote_control(remote)
        # Select the remote control

        assert plugged(dvd_player)
        # Ensure that the DVD player is plugged in

        assert_hold inhand(remote)
        # Ensure the remote control is in hand

        achieve is_on(dvd_player)
        # Achieve the goal of turning on the DVD player with the remote

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        # Select the DVD player

        bind remote: item where:
            is_remote_control(remote)
        # Select the remote control

        assert plugged(dvd_player)
        # Ensure that the DVD player is plugged in

        assert_hold inhand(remote)
        # Ensure the remote control is in hand

        achieve is_on(dvd_player)
        # Achieve the goal of turning on the DVD player with the remote

##############################
From agent.py
Reset goals: The sub-goals are: 
['Use the remote control to turn on the DVD player.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cd_player_2060_around_wallshelf_235(cd_player:item):
    goal: not unknown(cd_player)
    body:
        assert is_cd_player(cd_player)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==235
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(cd_player,wallshelf_instance)
        else:
            exp(cd_player,wallshelf_instance)
    eff:
        unknown[cd_player]=False
        close[cd_player,wallshelf_instance]=True
        close[wallshelf_instance,cd_player]=True
    

behavior find_cd_2075_around_tvstand_353(cd:item):
    goal: not unknown(cd)
    body:
        assert is_cd(cd)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==353
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(cd,tvstand_instance)
        else:
            exp(cd,tvstand_instance)
    eff:
        unknown[cd]=False
        close[cd,tvstand_instance]=True
        close[tvstand_instance,cd]=True
    

#exp_behavior_end

#goal_representation
 
def holding_remote_control():
    symbol is_holding_remote_control = exists rc: item : is_remote_control(rc) and achieve_once inhand(rc)
    return is_holding_remote_control 

def is_turned_on():
    symbol is_turned_on = exists dvdp: item : is_dvd_player(dvdp) and is_on(dvdp)
    return is_turned_on

behavior turn_on_dvd_player(rc:item, dvdp:item):
    body:
        achieve is_on(dvdp)

behavior __goal__():
    body:
        if holding_remote_control():
            bind rc: item where:
                is_remote_control(rc) 
            bind dvdp: item where:
                is_dvd_player(dvdp)
            if not is_turned_on():
                turn_on_dvd_player(rc, dvdp)

#goal_representation_end

##############################
