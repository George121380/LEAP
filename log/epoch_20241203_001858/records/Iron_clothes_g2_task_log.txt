From agent.py
Reset goals: The sub-goals are: 
['Iron the pair of pants.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_pants_2085_around_closetdrawer_154(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==154
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_pants,closetdrawer_instance)
        else:
            exp(clothes_pants,closetdrawer_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_pants]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind pants: item where:
            is_clothes_pants(pants)
        # Select the pants to iron
        
        bind iron: item where:
            is_iron(iron)
        # Select the iron
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        
        achieve plugged(iron)
        # Plug in the iron
        
        achieve is_on(iron)
        # Turn on the iron
        
        achieve inside(pants, ironing_board)
        # Place the pants on the ironing board
        
        achieve clean(pants)
        # Ensure the pants are clean

        achieve unplugged(iron)
        # Unplug the iron

        achieve is_off(iron)
        # Turn off the iron
#goal_representation_end

##############################
From agent.py->reset_goal
behavior __goal__():
    body:
        bind pants: item where:
            is_clothes_pants(pants)
        # Select the pants to iron
        
        bind iron: item where:
            is_iron(iron)
        # Select the iron
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        
        achieve plugged(iron)
        # Plug in the iron
        
        achieve is_on(iron)
        # Turn on the iron
        
        achieve inside(pants, ironing_board)
        # Place the pants on the ironing board
        
        achieve clean(pants)
        # Ensure the pants are clean

        achieve unplugged(iron)
        # Unplug the iron

        achieve is_off(iron)
        # Turn off the iron
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you tell me how to iron the pair of pants.
Answer: Need to replan: Yes  
Guidance: Put the pants on the ironing board. Turn on the iron. Then put the iron on the pants, push and pull it on the pants.

##############################
From agent.py
Reset goals: The sub-goals are: 
['Iron the pair of pants.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_pants_2085_around_closetdrawer_154(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==154
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_pants,closetdrawer_instance)
        else:
            exp(clothes_pants,closetdrawer_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_pants]=True
    

#exp_behavior_end

#goal_representation
 
def is_ironing_ready(ironing_board: item, iron: item, pants: item):
    symbol ready_to_iron = is_ironing_board(ironing_board) and is_iron(iron) and is_clothes_pants(pants)
    return ready_to_iron

behavior iron_pants(ironing_board: item, iron: item, pants: item):
    body:
        achieve plugged(iron)
        achieve is_on(iron)
        achieve on(pants, ironing_board)

behavior __goal__():
    body:
        bind pants: item where:
            is_clothes_pants(pants)
        # Select the pants that need ironing
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board
        
        bind iron: item where:
            is_iron(iron)
        # Select an iron

        if is_ironing_ready(ironing_board, iron, pants):
            iron_pants(ironing_board, iron, pants)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_ironing_ready(ironing_board: item, iron: item, pants: item):
    symbol ready_to_iron = is_ironing_board(ironing_board) and is_iron(iron) and is_clothes_pants(pants)
    return ready_to_iron

behavior iron_pants(ironing_board: item, iron: item, pants: item):
    body:
        achieve plugged(iron)
        achieve is_on(iron)
        achieve on(pants, ironing_board)

behavior __goal__():
    body:
        bind pants: item where:
            is_clothes_pants(pants)
        # Select the pants that need ironing
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board
        
        bind iron: item where:
            is_iron(iron)
        # Select an iron

        if is_ironing_ready(ironing_board, iron, pants):
            iron_pants(ironing_board, iron, pants)

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)walk_executor(closetdrawer_154)exp(clothes_pants_2085, closetdrawer_154)walk_executor(clothes_pants_2085)grab_executor(clothes_pants_2085)walk_executor(ironing_board_2074)put_executor(clothes_pants_2085, ironing_board_2074)
##############################
From agent.py
walk_executor(ironing_board_2074)
Find iron_2089. Robot is inside bathroom_1. Robot is close ironing_board_2074. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g2.txt
Checking k1
missed actions: walk_executor(clothes_pants_2085);wash_executor(clothes_pants_2085);
missed action num: 2
##############################
From agent.py
exp(iron_2089, ironing_board_2074)
Find iron_2089. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)walk_executor(closetdrawer_154)exp(clothes_pants_2085, closetdrawer_154)walk_executor(clothes_pants_2085)grab_executor(clothes_pants_2085)walk_executor(ironing_board_2074)put_executor(clothes_pants_2085, ironing_board_2074)
##############################
From agent.py
walk_executor(iron_2089)
Robot is inside bathroom_1. Robot is close ironing_board_2074. Robot is close iron_2089. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g2.txt
Checking k1
missed actions: walk_executor(clothes_pants_2085);wash_executor(clothes_pants_2085);
missed action num: 2
##############################
From agent.py
plugin_executor(iron_2089)
Robot is inside bathroom_1. Robot is close ironing_board_2074. Robot is close iron_2089. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g2.txt
Checking k1
missed actions: walk_executor(clothes_pants_2085);wash_executor(clothes_pants_2085);
missed action num: 2
##############################
From agent.py
switchon_executor(iron_2089)
Robot is inside bathroom_1. Robot is close ironing_board_2074. Robot is close iron_2089. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g2.txt
Checking k1
missed actions: walk_executor(clothes_pants_2085);wash_executor(clothes_pants_2085);
missed action num: 2
##############################
From agent.py
walk_executor(closetdrawer_154)
Find hanger_128. Find hanger_110. Find hanger_140. Find hanger_132. Find hanger_113. Find mat_173. Find hanger_142. Find hanger_124. Find hanger_130. Find hanger_134. Find hanger_136. Find hanger_138. Find hanger_141. Find hanger_109. Find hanger_126. Find hanger_111. Find hanger_114. Find hanger_112. Find hanger_115. Robot is inside bedroom_67. Robot is close closetdrawer_160. Robot is close closetdrawer_154. Robot is close dresser_123. Robot is no longer inside bathroom_1.Robot is no longer close iron_2089.Robot is no longer close ironing_board_2074.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g2.txt
Checking k1
missed actions: walk_executor(clothes_pants_2085);wash_executor(clothes_pants_2085);
missed action num: 2
##############################
From agent.py
exp(clothes_pants_2085, closetdrawer_154)
Failed to find clothes_pants_2085 around closetdrawer_154. 
##############################
From agent.py-> find a plan in act()
exp(clothes_pants_2085, closetdrawer_154)walk_executor(clothes_pants_2085)grab_executor(clothes_pants_2085)walk_executor(ironing_board_2074)put_executor(clothes_pants_2085, ironing_board_2074)
##############################
From agent.py
exp(clothes_pants_2085, closetdrawer_154)
Failed to find clothes_pants_2085 around closetdrawer_154. 
##############################
From agent.py-> find a plan in act()
exp(clothes_pants_2085, closetdrawer_154)walk_executor(clothes_pants_2085)grab_executor(clothes_pants_2085)walk_executor(ironing_board_2074)put_executor(clothes_pants_2085, ironing_board_2074)
##############################
From agent.py
exp(clothes_pants_2085, closetdrawer_154)
Failed to find clothes_pants_2085 around closetdrawer_154. 
##############################
From agent.py-> find a plan in act()
exp(clothes_pants_2085, closetdrawer_154)walk_executor(clothes_pants_2085)grab_executor(clothes_pants_2085)walk_executor(ironing_board_2074)put_executor(clothes_pants_2085, ironing_board_2074)
##############################
From agent.py
exp(clothes_pants_2085, closetdrawer_154)
Failed to find clothes_pants_2085 around closetdrawer_154. 
##############################
From agent.py-> find a plan in act()
exp(clothes_pants_2085, closetdrawer_154)walk_executor(clothes_pants_2085)grab_executor(clothes_pants_2085)walk_executor(ironing_board_2074)put_executor(clothes_pants_2085, ironing_board_2074)
##############################
From agent.py
exp(clothes_pants_2085, closetdrawer_154)
Failed to find clothes_pants_2085 around closetdrawer_154. 
##############################
From agent.py-> find a plan in act()
exp(clothes_pants_2085, closetdrawer_154)walk_executor(clothes_pants_2085)grab_executor(clothes_pants_2085)walk_executor(ironing_board_2074)put_executor(clothes_pants_2085, ironing_board_2074)
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_pants_2085 ?
Answer: The target item, clothes_pants_2085, is located inside the basket_for_clothes_2006, which is situated in bathroom_1. Please go to bathroom_1, find the basket labeled basket_for_clothes_2006, and retrieve the clothes_pants_2085 from inside it.

##############################
From agent.py
Human Instruction: The target item, clothes_pants_2085, is located inside the basket_for_clothes_2006, which is situated in bathroom_1. Please go to bathroom_1, find the basket labeled basket_for_clothes_2006, and retrieve the clothes_pants_2085 from inside it.

The actions you have taken:
Action 1: Walk to ironing_board_2074.
Action 2: look for iron_2089 around ironing_board_2074.
Action 3: Walk to iron_2089.
Action 4: Plug in iron_2089.
Action 5: Switch on iron_2089.
Action 6: Walk to closetdrawer_154.
Action 7: look for clothes_pants_2085 around closetdrawer_154.
Action 8: look for clothes_pants_2085 around closetdrawer_154.
Action 9: look for clothes_pants_2085 around closetdrawer_154.
Action 10: look for clothes_pants_2085 around closetdrawer_154.
Action 11: look for clothes_pants_2085 around closetdrawer_154.

##############################
From agent.py
exp(clothes_pants_2085, closetdrawer_154)
Failed to find clothes_pants_2085 around closetdrawer_154. 
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2007)open_executor(washing_machine_2007)exp(clothes_pants_2085, washing_machine_2007)walk_executor(clothes_pants_2085)grab_executor(clothes_pants_2085)walk_executor(ironing_board_2074)put_executor(clothes_pants_2085, ironing_board_2074)
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot is inside bathroom_1. Robot is close washing_machine_2007. Robot is no longer inside bedroom_67.Robot is no longer close closetdrawer_160.Robot is no longer close closetdrawer_154.Robot is no longer close dresser_123.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g2.txt
Checking k1
missed actions: walk_executor(clothes_pants_2085);wash_executor(clothes_pants_2085);
missed action num: 2
##############################
From agent.py
open_executor(washing_machine_2007)
Robot is inside bathroom_1. Robot is close washing_machine_2007. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g2.txt
Checking k1
missed actions: walk_executor(clothes_pants_2085);wash_executor(clothes_pants_2085);
missed action num: 2
##############################
From agent.py
exp(clothes_pants_2085, washing_machine_2007)
Failed to find clothes_pants_2085 around washing_machine_2007. 
##############################
From agent.py-> find a plan in act()
exp(clothes_pants_2085, washing_machine_2007)walk_executor(clothes_pants_2085)grab_executor(clothes_pants_2085)walk_executor(ironing_board_2074)put_executor(clothes_pants_2085, ironing_board_2074)
##############################
From agent.py
exp(clothes_pants_2085, washing_machine_2007)
Failed to find clothes_pants_2085 around washing_machine_2007. 
##############################
From agent.py-> find a plan in act()
exp(clothes_pants_2085, washing_machine_2007)walk_executor(clothes_pants_2085)grab_executor(clothes_pants_2085)walk_executor(ironing_board_2074)put_executor(clothes_pants_2085, ironing_board_2074)
##############################
From agent.py
exp(clothes_pants_2085, washing_machine_2007)
Failed to find clothes_pants_2085 around washing_machine_2007. 
##############################
From agent.py-> find a plan in act()
walk_executor(shower_36)exp(clothes_pants_2085, shower_36)walk_executor(clothes_pants_2085)grab_executor(clothes_pants_2085)walk_executor(ironing_board_2074)put_executor(clothes_pants_2085, ironing_board_2074)
##############################
From agent.py
walk_executor(shower_36)
Find basket_for_clothes_2006. Robot is inside bathroom_1. Robot is close shower_36. Robot is no longer close washing_machine_2007.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g2.txt
Checking k1
missed actions: walk_executor(clothes_pants_2085);wash_executor(clothes_pants_2085);
missed action num: 2
##############################
From agent.py
exp(clothes_pants_2085, shower_36)
Failed to find clothes_pants_2085 around shower_36. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)exp(clothes_pants_2085, basket_for_clothes_2006)walk_executor(clothes_pants_2085)grab_executor(clothes_pants_2085)walk_executor(ironing_board_2074)put_executor(clothes_pants_2085, ironing_board_2074)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Find clothes_pants_2085. Find clothes_shirt_2086. Find clothes_socks_2087. Find clothes_skirt_2088. Find towel_rack_33. Find towel_rack_32. Find towel_rack_34. Find mat_22. Find towel_rack_31. Robot is inside bathroom_1. Robot is close clothes_pants_2085. Robot is close clothes_shirt_2086. Robot is close clothes_socks_2087. Robot is close clothes_skirt_2088. Robot is close basket_for_clothes_2006. Robot is no longer close shower_36.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g2.txt
Checking k1
missed actions: wash_executor(clothes_pants_2085);
missed action num: 1
##############################
From agent.py
exp(clothes_pants_2085, basket_for_clothes_2006)
Find clothes_pants_2085. 
##############################
From agent.py-> find a plan in act()
grab_executor(clothes_pants_2085)walk_executor(ironing_board_2074)put_executor(clothes_pants_2085, ironing_board_2074)
##############################
From agent.py
grab_executor(clothes_pants_2085)
Robot is inside bathroom_1. Robot is close clothes_pants_2085. Robot is close clothes_shirt_2086. Robot is close clothes_socks_2087. Robot is close clothes_skirt_2088. Robot is close basket_for_clothes_2006. Grabbing clothes_pants_2085 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g2.txt
Checking k1
missed actions: wash_executor(clothes_pants_2085);
missed action num: 1
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot is inside bathroom_1. Robot is close clothes_pants_2085. Robot is close ironing_board_2074. Robot is no longer close clothes_shirt_2086.Robot is no longer close clothes_socks_2087.Robot is no longer close clothes_skirt_2088.Robot is no longer close basket_for_clothes_2006.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g2.txt
Checking k1
missed actions: wash_executor(clothes_pants_2085);
missed action num: 1
##############################
From agent.py
put_executor(clothes_pants_2085, ironing_board_2074)
Robot is inside bathroom_1. Robot is close clothes_pants_2085. Robot is close ironing_board_2074. clothes_pants_2085 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g2.txt
Checking k1
missed actions: wash_executor(clothes_pants_2085);
missed action num: 1
##############################
From agent.py
Human Instruction: You need to use the iron on the pants to complete the ironing process.

The actions you have taken:
Action 1: Walk to ironing_board_2074.
Action 2: look for iron_2089 around ironing_board_2074.
Action 3: Walk to iron_2089.
Action 4: Plug in iron_2089.
Action 5: Switch on iron_2089.
Action 6: Walk to closetdrawer_154.
Action 7: look for clothes_pants_2085 around closetdrawer_154.
Action 8: look for clothes_pants_2085 around closetdrawer_154.
Action 9: look for clothes_pants_2085 around closetdrawer_154.
Action 10: look for clothes_pants_2085 around closetdrawer_154.
Action 11: look for clothes_pants_2085 around closetdrawer_154.
Action 12: look for clothes_pants_2085 around closetdrawer_154.
Action 13: Walk to washing_machine_2007.
Action 14: Open washing_machine_2007.
Action 15: look for clothes_pants_2085 around washing_machine_2007.
Action 16: look for clothes_pants_2085 around washing_machine_2007.
Action 17: look for clothes_pants_2085 around washing_machine_2007.
Action 18: Walk to shower_36.
Action 19: look for clothes_pants_2085 around shower_36.
Action 20: Walk to basket_for_clothes_2006.
Action 21: look for clothes_pants_2085 around basket_for_clothes_2006.
Action 22: Grab clothes_pants_2085.
Action 23: Walk to ironing_board_2074.
Action 24: Put clothes_pants_2085 on ironing_board_2074.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior iron_pants(iron:item, pants:item, board:item):
    body:
        achieve on(pants, board)
        # Ensure the pants are on the ironing board
        
        achieve is_on(iron)
        # Ensure the iron is turned on

behavior __goal__():
    body:
        bind pants: item where:
            is_clothes_pants(pants)
        # Select the pants to be ironed

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind board: item where:
            is_ironing_board(board)
        # Select the ironing board
        
        iron_pants(iron, pants, board)
        # Perform the ironing of the pants placed on the ironing board with the iron
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior iron_pants(iron:item, pants:item, board:item):
    body:
        achieve on(pants, board)
        # Ensure the pants are on the ironing board
        
        achieve is_on(iron)
        # Ensure the iron is turned on

behavior __goal__():
    body:
        bind pants: item where:
            is_clothes_pants(pants)
        # Select the pants to be ironed

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind board: item where:
            is_ironing_board(board)
        # Select the ironing board
        
        iron_pants(iron, pants, board)
        # Perform the ironing of the pants placed on the ironing board with the iron
##############################
From agent.py
Reset goals: The sub-goals are: 
['Iron the pair of pants.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2048_around_hanger_141(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==141
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(clothes_scarf,hanger_instance)
        else:
            exp(clothes_scarf,hanger_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,hanger_instance]=True
        close[hanger_instance,clothes_scarf]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_pants(pants:item, ironing_board:item, iron:item):
    body:
        achieve is_on(iron)
        # Ensure the iron is turned on

        achieve on(pants, ironing_board)
        # Ensure the pants are on the ironing board

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind pants: item where:
            is_clothes_pants(pants)
        # Select the pair of pants

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_pants(pants, ironing_board, iron)
        # Perform the ironing task to complete the subtask goal

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior iron_pants(pants:item, ironing_board:item, iron:item):
    body:
        achieve is_on(iron)
        # Ensure the iron is turned on

        achieve on(pants, ironing_board)
        # Ensure the pants are on the ironing board

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind pants: item where:
            is_clothes_pants(pants)
        # Select the pair of pants

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_pants(pants, ironing_board, iron)
        # Perform the ironing task to complete the subtask goal

##############################
From agent.py
Reset goals: The sub-goals are: 
['Iron the pair of pants.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_dress_2044_around_hanger_141(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==141
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(clothes_dress,hanger_instance)
        else:
            exp(clothes_dress,hanger_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,hanger_instance]=True
        close[hanger_instance,clothes_dress]=True
    

behavior find_clothes_gloves_2046_around_closetdrawer_154(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==154
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_gloves,closetdrawer_instance)
        else:
            exp(clothes_gloves,closetdrawer_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_gloves]=True
    

behavior find_clothes_underwear_2049_around_closetdrawer_154(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==154
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_underwear,closetdrawer_instance)
        else:
            exp(clothes_underwear,closetdrawer_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_underwear]=True
    

#exp_behavior_end

#goal_representation
Python
behavior __goal__():
    body:
        bind pants: item where:
            is_clothes_pants(pants)
        # Select the pair of pants

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        achieve on(pants, ironing_board)
        # Ensure the pants are on the ironing board

        achieve is_on(iron)
        # Ensure the iron is turned on

        achieve clean(pants)
        # Ensure the pants are ironed neatly

#goal_representation_end

##############################
