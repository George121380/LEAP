From agent.py
Reset goals: The sub-goals are: 
['Slice and toast the bread.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_bread_2012_around_kitchen_counter_230(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_bread,kitchen_counter_instance)
        else:
            exp(food_bread,kitchen_counter_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_bread]=True
    

behavior find_knife_2050_around_kitchen_counter_230(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(knife,kitchen_counter_instance)
        else:
            exp(knife,kitchen_counter_instance)
    eff:
        unknown[knife]=False
        close[knife,kitchen_counter_instance]=True
        close[kitchen_counter_instance,knife]=True
    

behavior find_cutting_board_2051_around_kitchen_counter_230(cutting_board:item):
    goal: not unknown(cutting_board)
    body:
        assert is_cutting_board(cutting_board)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cutting_board,kitchen_counter_instance)
        else:
            exp(cutting_board,kitchen_counter_instance)
    eff:
        unknown[cutting_board]=False
        close[cutting_board,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cutting_board]=True
    

#exp_behavior_end

#goal_representation
 
behavior slice_bread(bread:item, cutting_board:item, knife:item): 
    body: 
        achieve close_char(char, cutting_board) 
        achieve_once inhand(knife) 
        achieve cut(bread)

behavior toast_bread(bread:item, toaster:item): 
    body: 
        achieve inside(bread, toaster) 
        achieve is_on(toaster)

behavior __goal__(): 
    body: 
        bind bread: item where: 
            is_food_bread(bread) 
        # Select the bread

        bind cutting_board: item where: 
            is_cutting_board(cutting_board) 
        # Select the cutting board

        bind knife: item where: 
            is_knife(knife) 
        # Select the knife

        bind toaster: item where: 
            is_toaster(toaster)
        # Select the toaster

        slice_bread(bread, cutting_board, knife) 
        toast_bread(bread, toaster)
 
#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior slice_bread(bread:item, cutting_board:item, knife:item): 
    body: 
        achieve close_char(char, cutting_board) 
        achieve_once inhand(knife) 
        achieve cut(bread)

behavior toast_bread(bread:item, toaster:item): 
    body: 
        achieve inside(bread, toaster) 
        achieve is_on(toaster)

behavior __goal__(): 
    body: 
        bind bread: item where: 
            is_food_bread(bread) 
        # Select the bread

        bind cutting_board: item where: 
            is_cutting_board(cutting_board) 
        # Select the cutting board

        bind knife: item where: 
            is_knife(knife) 
        # Select the knife

        bind toaster: item where: 
            is_toaster(toaster)
        # Select the toaster

        slice_bread(bread, cutting_board, knife) 
        toast_bread(bread, toaster)
 
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you tell me how to slice and toast the bread.
Answer: Need to replan: No  
Guidance: Cut the bread and put it in the toaster. Turn on the toaster.

##############################
From agent.py
Reset goals: The sub-goals are: 
['Slice the bread and toast it.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_bread_2012_around_kitchen_counter_230(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_bread,kitchen_counter_instance)
        else:
            exp(food_bread,kitchen_counter_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_bread]=True
    

behavior find_knife_2050_around_kitchen_counter_230(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(knife,kitchen_counter_instance)
        else:
            exp(knife,kitchen_counter_instance)
    eff:
        unknown[knife]=False
        close[knife,kitchen_counter_instance]=True
        close[kitchen_counter_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
def is_toaster_nearby(bread:item, toaster:item):
    # Determine whether the toaster is close to the bread for slicing and toasting
    symbol nearby = close(bread, toaster)
    return nearby

behavior slice_bread(bread:item):
    body:
        achieve cut(bread) 
        # Slice the bread

behavior toast_bread(bread:item, toaster:item):
    body:
        achieve inside(bread, toaster)
        # Place the bread inside the toaster
        achieve is_on(toaster)
        # Turn on the toaster to toast the bread

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)
        # Select the bread to be sliced and toasted

        bind toaster: item where:
            is_toaster(toaster)
        # Select a toaster

        if is_toaster_nearby(bread, toaster):
            slice_bread(bread)
            toast_bread(bread, toaster)
        else:
            achieve close_char(char, toaster)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_toaster_nearby(bread:item, toaster:item):
    # Determine whether the toaster is close to the bread for slicing and toasting
    symbol nearby = close(bread, toaster)
    return nearby

behavior slice_bread(bread:item):
    body:
        achieve cut(bread) 
        # Slice the bread

behavior toast_bread(bread:item, toaster:item):
    body:
        achieve inside(bread, toaster)
        # Place the bread inside the toaster
        achieve is_on(toaster)
        # Turn on the toaster to toast the bread

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)
        # Select the bread to be sliced and toasted

        bind toaster: item where:
            is_toaster(toaster)
        # Select a toaster

        if is_toaster_nearby(bread, toaster):
            slice_bread(bread)
            toast_bread(bread, toaster)
        else:
            achieve close_char(char, toaster)

##############################
From agent.py-> find a plan in act()
walk_executor(toaster_292)
##############################
From agent.py
walk_executor(toaster_292)
Find tray_296. Find pot_2069. Find cup_2063. Find knife_2050. Find napkin_2005. Find cup_2064. Find cutting_board_2051. Find oil_2079. Find fryingpan_2083. Find drawing_239. Find drawing_238. Find drawing_240. Find drawing_241. Find drawing_242. Find drawing_243. Robot is inside dining_room_201. Robot is close toaster_292. Robot is close kitchen_counter_230. Robot is no longer inside bathroom_1.
##############################
From agent.py
Human Instruction: You need to slice the bread and then place it inside the toaster to toast it.

The actions you have taken:
Action 1: Walk to toaster_292.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_bread_2012_around_kitchen_counter_230(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_bread,kitchen_counter_instance)
        else:
            exp(food_bread,kitchen_counter_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_bread]=True
    

#exp_behavior_end

#goal_representation
 
behavior slice_bread(bread:item, knife:item):
    body:
        achieve cut(bread)
        # Achieve the state where the bread is sliced

behavior toast_bread(bread:item, toaster:item):
    body:
        achieve inside(bread, toaster)
        # Achieve the state where the bread is inside the toaster
        achieve is_on(toaster)
        # Achieve the state where the toaster is turned on

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)
        # Select the bread item

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        bind toaster: item where:
            is_toaster(toaster)
        # Select a toaster

        slice_bread(bread, knife)
        toast_bread(bread, toaster)
 
#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior slice_bread(bread:item, knife:item):
    body:
        achieve cut(bread)
        # Achieve the state where the bread is sliced

behavior toast_bread(bread:item, toaster:item):
    body:
        achieve inside(bread, toaster)
        # Achieve the state where the bread is inside the toaster
        achieve is_on(toaster)
        # Achieve the state where the toaster is turned on

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)
        # Select the bread item

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        bind toaster: item where:
            is_toaster(toaster)
        # Select a toaster

        slice_bread(bread, knife)
        toast_bread(bread, toaster)
 
##############################
From agent.py-> find a plan in act()
exp(food_bread_2012, kitchen_counter_230)walk_executor(food_bread_2012)grab_executor(food_bread_2012)walk_executor(cutting_board_2051)put_executor(food_bread_2012, cutting_board_2051)walk_executor(knife_2050)grab_executor(knife_2050)walk_executor(food_bread_2012)cut_executor(food_bread_2012)grab_executor(food_bread_2012)walk_executor(toaster_292)putin_executor(food_bread_2012, toaster_292)switchon_executor(toaster_292)
##############################
From agent.py
exp(food_bread_2012, kitchen_counter_230)
Failed to find food_bread_2012 around kitchen_counter_230. 
##############################
From agent.py-> find a plan in act()
exp(food_bread_2012, kitchen_counter_230)walk_executor(food_bread_2012)grab_executor(food_bread_2012)walk_executor(cutting_board_2051)put_executor(food_bread_2012, cutting_board_2051)walk_executor(knife_2050)grab_executor(knife_2050)walk_executor(food_bread_2012)cut_executor(food_bread_2012)grab_executor(food_bread_2012)walk_executor(toaster_292)putin_executor(food_bread_2012, toaster_292)switchon_executor(toaster_292)
##############################
From agent.py
exp(food_bread_2012, kitchen_counter_230)
Failed to find food_bread_2012 around kitchen_counter_230. 
##############################
From agent.py-> find a plan in act()
exp(food_bread_2012, kitchen_counter_230)walk_executor(food_bread_2012)grab_executor(food_bread_2012)walk_executor(cutting_board_2051)put_executor(food_bread_2012, cutting_board_2051)walk_executor(knife_2050)grab_executor(knife_2050)walk_executor(food_bread_2012)cut_executor(food_bread_2012)grab_executor(food_bread_2012)walk_executor(toaster_292)putin_executor(food_bread_2012, toaster_292)switchon_executor(toaster_292)
##############################
From agent.py
exp(food_bread_2012, kitchen_counter_230)
Failed to find food_bread_2012 around kitchen_counter_230. 
##############################
From agent.py-> find a plan in act()
exp(food_bread_2012, kitchen_counter_230)walk_executor(food_bread_2012)grab_executor(food_bread_2012)walk_executor(cutting_board_2051)put_executor(food_bread_2012, cutting_board_2051)walk_executor(knife_2050)grab_executor(knife_2050)walk_executor(food_bread_2012)cut_executor(food_bread_2012)grab_executor(food_bread_2012)walk_executor(toaster_292)putin_executor(food_bread_2012, toaster_292)switchon_executor(toaster_292)
##############################
From agent.py
exp(food_bread_2012, kitchen_counter_230)
Failed to find food_bread_2012 around kitchen_counter_230. 
##############################
From agent.py-> find a plan in act()
exp(food_bread_2012, kitchen_counter_230)walk_executor(food_bread_2012)grab_executor(food_bread_2012)walk_executor(cutting_board_2051)put_executor(food_bread_2012, cutting_board_2051)walk_executor(knife_2050)grab_executor(knife_2050)walk_executor(food_bread_2012)cut_executor(food_bread_2012)grab_executor(food_bread_2012)walk_executor(toaster_292)putin_executor(food_bread_2012, toaster_292)switchon_executor(toaster_292)
##############################
From agent.py
exp(food_bread_2012, kitchen_counter_230)
Failed to find food_bread_2012 around kitchen_counter_230. 
##############################
From agent.py-> find a plan in act()
exp(food_bread_2012, kitchen_counter_230)walk_executor(food_bread_2012)grab_executor(food_bread_2012)walk_executor(cutting_board_2051)put_executor(food_bread_2012, cutting_board_2051)walk_executor(knife_2050)grab_executor(knife_2050)walk_executor(food_bread_2012)cut_executor(food_bread_2012)grab_executor(food_bread_2012)walk_executor(toaster_292)putin_executor(food_bread_2012, toaster_292)switchon_executor(toaster_292)
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find food_bread_2012 ?
Answer: Locate the item "food_bread_2012" inside "fridge_289," which is situated in "dining_room_201." Ensure to search inside the fridge to find the bread.

##############################
From agent.py
Human Instruction: You need to slice the bread and then place it inside the toaster to toast it.
Locate the item "food_bread_2012" inside "fridge_289," which is situated in "dining_room_201." Ensure to search inside the fridge to find the bread.

The actions you have taken:
Action 1: Walk to toaster_292.
Action 2: look for food_bread_2012 around kitchen_counter_230.
Action 3: look for food_bread_2012 around kitchen_counter_230.
Action 4: look for food_bread_2012 around kitchen_counter_230.
Action 5: look for food_bread_2012 around kitchen_counter_230.
Action 6: look for food_bread_2012 around kitchen_counter_230.

##############################
From agent.py
exp(food_bread_2012, kitchen_counter_230)
Failed to find food_bread_2012 around kitchen_counter_230. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_bread_2012, fridge_289)walk_executor(food_bread_2012)grab_executor(food_bread_2012)walk_executor(cutting_board_2051)put_executor(food_bread_2012, cutting_board_2051)walk_executor(knife_2050)grab_executor(knife_2050)walk_executor(food_bread_2012)cut_executor(food_bread_2012)grab_executor(food_bread_2012)walk_executor(toaster_292)putin_executor(food_bread_2012, toaster_292)switchon_executor(toaster_292)
##############################
From agent.py
walk_executor(fridge_289)
Find sauce_2078. Find food_steak_2008. Find food_apple_2009. Find food_bacon_2010. Find food_banana_2011. Find food_bread_2012. Find food_cake_2013. Find food_carrot_2014. Find food_cereal_2015. Find food_cheese_2016. Find food_chicken_2017. Find food_dessert_2018. Find food_donut_2019. Find food_egg_2020. Find food_fish_2021. Find food_food_2022. Find food_fruit_2023. Find food_hamburger_2024. Find food_ice_cream_2025. Find food_jam_2026. Find food_kiwi_2027. Find food_lemon_2028. Find food_noodles_2029. Find food_oatmeal_2030. Find food_orange_2031. Find food_onion_2032. Find food_peanut_butter_2033. Find food_pizza_2034. Find food_potato_2035. Find food_rice_2036. Find food_salt_2037. Find food_snack_2038. Find food_sugar_2039. Find food_turkey_2040. Find food_vegetable_2041. Find dry_pasta_2042. Find milk_2043. Robot is inside dining_room_201. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. Robot is no longer close toaster_292.Robot is no longer close kitchen_counter_230.
##############################
From agent.py
switchoff_executor(fridge_289)
Find mat_22. Robot is inside dining_room_201. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. 
##############################
From agent.py
open_executor(fridge_289)
Robot is inside dining_room_201. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. 
##############################
From agent.py
exp(food_bread_2012, fridge_289)
Find food_bread_2012. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_bread_2012)walk_executor(cutting_board_2051)put_executor(food_bread_2012, cutting_board_2051)walk_executor(knife_2050)grab_executor(knife_2050)walk_executor(food_bread_2012)cut_executor(food_bread_2012)grab_executor(food_bread_2012)walk_executor(toaster_292)putin_executor(food_bread_2012, toaster_292)switchon_executor(toaster_292)
##############################
From agent.py
grab_executor(food_bread_2012)
Robot is inside dining_room_201. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. Grabbing food_bread_2012 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2051)
Robot is inside dining_room_201. Robot is close food_bread_2012. Robot is close cutting_board_2051. Robot is close kitchen_counter_230. Robot is no longer close sauce_2078.Robot is no longer close fridge_289.Robot is no longer close floor_202.Robot is no longer close floor_203.Robot is no longer close food_steak_2008.Robot is no longer close food_apple_2009.Robot is no longer close food_bacon_2010.Robot is no longer close food_banana_2011.Robot is no longer close food_cake_2013.Robot is no longer close food_carrot_2014.Robot is no longer close food_cereal_2015.Robot is no longer close food_cheese_2016.Robot is no longer close food_chicken_2017.Robot is no longer close food_dessert_2018.Robot is no longer close food_donut_2019.Robot is no longer close food_egg_2020.Robot is no longer close food_fish_2021.Robot is no longer close food_food_2022.Robot is no longer close food_fruit_2023.Robot is no longer close food_hamburger_2024.Robot is no longer close food_ice_cream_2025.Robot is no longer close food_jam_2026.Robot is no longer close food_kiwi_2027.Robot is no longer close food_lemon_2028.Robot is no longer close food_noodles_2029.Robot is no longer close food_oatmeal_2030.Robot is no longer close food_orange_2031.Robot is no longer close food_onion_2032.Robot is no longer close food_peanut_butter_2033.Robot is no longer close food_pizza_2034.Robot is no longer close food_potato_2035.Robot is no longer close food_rice_2036.Robot is no longer close food_salt_2037.Robot is no longer close food_snack_2038.Robot is no longer close food_sugar_2039.Robot is no longer close food_turkey_2040.Robot is no longer close food_vegetable_2041.Robot is no longer close dry_pasta_2042.Robot is no longer close milk_2043.
##############################
From agent.py
put_executor(food_bread_2012, cutting_board_2051)
Robot is inside dining_room_201. Robot is close food_bread_2012. Robot is close cutting_board_2051. Robot is close kitchen_counter_230. food_bread_2012 released by right hand. 
##############################
From agent.py
walk_executor(knife_2050)
Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is close knife_2050. Robot is no longer close cutting_board_2051.Robot is no longer close food_bread_2012.
##############################
From agent.py
grab_executor(knife_2050)
Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is close knife_2050. Grabbing knife_2050 by right hand. 
##############################
From agent.py
walk_executor(food_bread_2012)
Robot is inside dining_room_201. Robot is close knife_2050. Robot is close cutting_board_2051. Robot is close food_bread_2012. Robot is no longer close kitchen_counter_230.
##############################
From agent.py
cut_executor(food_bread_2012)
Robot is inside dining_room_201. Robot is close knife_2050. Robot is close cutting_board_2051. Robot is close food_bread_2012. 
##############################
From agent.py
grab_executor(food_bread_2012)
Robot is inside dining_room_201. Robot is close knife_2050. Robot is close cutting_board_2051. Robot is close food_bread_2012. Grabbing food_bread_2012 by left hand. 
##############################
From agent.py
walk_executor(toaster_292)
Robot is inside dining_room_201. Robot is close knife_2050. Robot is close food_bread_2012. Robot is close toaster_292. Robot is close kitchen_counter_230. Robot is no longer close cutting_board_2051.
##############################
From agent.py
putin_executor(food_bread_2012, toaster_292)
Robot is inside dining_room_201. Robot is close knife_2050. Robot is close food_bread_2012. Robot is close toaster_292. Robot is close kitchen_counter_230. food_bread_2012 released by left hand. 
##############################
From agent.py
switchon_executor(toaster_292)
Robot is inside dining_room_201. Robot is close knife_2050. Robot is close food_bread_2012. Robot is close toaster_292. Robot is close kitchen_counter_230. 
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_breakfast/g1.txt
Checking k1
missed actions: 
missed action num: 0
##############################
