From agent.py
Reset goals: The sub-goals are: 
['1. Find a cup of milk.', '2. Heat the cup of milk using the microwave.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2074_around_fridge_140(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_cup_2089_around_kitchen_counter_132(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

#exp_behavior_end

#goal_representation
behavior find_milk_cup(cup:item):
    body:
        achieve_once visited(cup)

behavior __goal__():
    body:
        foreach cup: item:
            if is_cup(cup) and not visited(cup):
                find_milk_cup(cup)

        bind cup: item where:
            is_cup(cup) and visited(cup)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior find_milk_cup(cup:item):
    body:
        achieve_once visited(cup)

behavior __goal__():
    body:
        foreach cup: item:
            if is_cup(cup) and not visited(cup):
                find_milk_cup(cup)

        bind cup: item where:
            is_cup(cup) and visited(cup)
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(cup_2087, kitchen_counter_132)walk_executor(cup_2087)obs(cup_2087, look around this place)walk_executor(kitchen_counter_132)exp(cup_2088, kitchen_counter_132)walk_executor(cup_2088)obs(cup_2088, look around this place)walk_executor(kitchen_counter_132)exp(cup_2089, kitchen_counter_132)walk_executor(cup_2089)obs(cup_2089, look around this place)walk_executor(kitchen_counter_132)exp(cup_2006, kitchen_counter_132)walk_executor(cup_2006)obs(cup_2006, look around this place)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: pot_54, Robot is close to the kitchen_counter_132. 
##############################
From agent.py
exp(cup_2087, kitchen_counter_132)
Fail to find cup_2087 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(cup_2087, cupboard_131)walk_executor(cup_2087)obs(cup_2087, look around this place)walk_executor(cupboard_131)exp(cup_2088, cupboard_131)walk_executor(cup_2088)obs(cup_2088, look around this place)walk_executor(cupboard_131)exp(cup_2089, cupboard_131)walk_executor(cup_2089)obs(cup_2089, look around this place)walk_executor(cupboard_131)exp(cup_2006, cupboard_131)walk_executor(cup_2006)obs(cup_2006, look around this place)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(cup_2087, cupboard_131)
Fail to find cup_2087 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(cup_2087, cupboard_130)walk_executor(cup_2087)obs(cup_2087, look around this place)walk_executor(cupboard_130)exp(cup_2088, cupboard_130)walk_executor(cup_2088)obs(cup_2088, look around this place)walk_executor(cupboard_130)exp(cup_2089, cupboard_130)walk_executor(cup_2089)obs(cup_2089, look around this place)walk_executor(cupboard_130)exp(cup_2006, cupboard_130)walk_executor(cup_2006)obs(cup_2006, look around this place)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(cup_2087, cupboard_130)
Fail to find cup_2087 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(cup_2087, dishwasher_143)walk_executor(cup_2087)obs(cup_2087, look around this place)walk_executor(dishwasher_143)exp(cup_2088, dishwasher_143)walk_executor(cup_2088)obs(cup_2088, look around this place)walk_executor(dishwasher_143)exp(cup_2089, dishwasher_143)walk_executor(cup_2089)obs(cup_2089, look around this place)walk_executor(dishwasher_143)exp(cup_2006, dishwasher_143)walk_executor(cup_2006)obs(cup_2006, look around this place)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(cup_2087, dishwasher_143)
Fail to find cup_2087 around dishwasher_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(microwave_149)open_executor(microwave_149)exp(cup_2087, microwave_149)walk_executor(cup_2087)obs(cup_2087, look around this place)walk_executor(microwave_149)exp(cup_2088, microwave_149)walk_executor(cup_2088)obs(cup_2088, look around this place)walk_executor(microwave_149)exp(cup_2089, microwave_149)walk_executor(cup_2089)obs(cup_2089, look around this place)walk_executor(microwave_149)exp(cup_2006, microwave_149)walk_executor(cup_2006)obs(cup_2006, look around this place)
##############################
From agent.py
walk_executor(microwave_149)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. 
##############################
From agent.py
open_executor(microwave_149)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. microwave_149 is opened. 
##############################
From agent.py
exp(cup_2087, microwave_149)
Fail to find cup_2087 around microwave_149. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(cup_2087, fridge_140)walk_executor(cup_2087)obs(cup_2087, look around this place)walk_executor(fridge_140)exp(cup_2088, fridge_140)walk_executor(cup_2088)obs(cup_2088, look around this place)walk_executor(fridge_140)exp(cup_2089, fridge_140)walk_executor(cup_2089)obs(cup_2089, look around this place)walk_executor(fridge_140)exp(cup_2006, fridge_140)walk_executor(cup_2006)obs(cup_2006, look around this place)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2087 ?
Answer: Locate dining_room_1. Inside, find table_123. cup_2087 is on top of table_123.
Re-decompose: None

##############################
From agent.py
Human Instruction: Locate dining_room_1. Inside, find table_123. cup_2087 is on top of table_123.

The actions you have taken:
Action 1: Walk to kitchen_counter_132.
Action 2: look for cup_2087 around kitchen_counter_132.
Action 3: Walk to cupboard_131.
Action 4: Open cupboard_131.
Action 5: look for cup_2087 around cupboard_131.
Action 6: Walk to cupboard_130.
Action 7: look for cup_2087 around cupboard_130.
Action 8: Walk to dishwasher_143.
Action 9: Open dishwasher_143.
Action 10: look for cup_2087 around dishwasher_143.
Action 11: Walk to microwave_149.
Action 12: Open microwave_149.
Action 13: look for cup_2087 around microwave_149.
Action 14: Walk to fridge_140.
Action 15: Switch off fridge_140.
Action 16: Open fridge_140.

##############################
From agent.py
exp(cup_2087, fridge_140)
Fail to find cup_2087 around fridge_140. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(cup_2087, table_123)walk_executor(cup_2087)obs(cup_2087, look around this place)walk_executor(table_123)exp(cup_2088, table_123)walk_executor(cup_2088)obs(cup_2088, look around this place)walk_executor(table_123)exp(cup_2089, table_123)walk_executor(cup_2089)obs(cup_2089, look around this place)walk_executor(table_123)exp(cup_2006, table_123)walk_executor(cup_2006)obs(cup_2006, look around this place)
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, cup_2006, laptop_2015, cup_2087, bowl_2095, fork_2103, drawing_118, Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
exp(cup_2087, table_123)
Find cup_2087. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2087)obs(cup_2087, look around this place)walk_executor(cup_2088)obs(cup_2088, look around this place)walk_executor(table_123)exp(cup_2089, table_123)walk_executor(cup_2089)obs(cup_2089, look around this place)walk_executor(cup_2006)obs(cup_2006, look around this place)
##############################
From agent.py
walk_executor(cup_2087)
Robot find: Robot is close to the table_123. Robot is close to the cup_2087. 
##############################
From agent.py
obs(cup_2087, look around this place)
Get this information:  cup_2087 is inside dining_room_1. cup_2087 is close to table_123. cup_2087 is close to character_219. cup_2087 is on table_123.
##############################
From agent.py
walk_executor(cup_2088)
Robot find: Robot is close to the table_123. Robot is close to the cup_2088. 
##############################
From agent.py
obs(cup_2088, look around this place)
Get this information:  cup_2088 is on table_123. cup_2088 is close to table_123. cup_2088 is close to character_219. cup_2088 is inside dining_room_1.
##############################
From agent.py
walk_executor(table_123)
Robot find: Robot is close to the table_123. Robot is close to the mat_114. 
##############################
From agent.py
exp(cup_2089, table_123)
Fail to find cup_2089 around table_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(cutting_board_2080)exp(cup_2089, cutting_board_2080)walk_executor(cup_2089)obs(cup_2089, look around this place)walk_executor(cup_2006)obs(cup_2006, look around this place)
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(cup_2089, cutting_board_2080)
Fail to find cup_2089 around cutting_board_2080. 
##############################
From agent.py-> find a plan in act()
walk_executor(stove_2090)open_executor(stove_2090)exp(cup_2089, stove_2090)walk_executor(cup_2089)obs(cup_2089, look around this place)walk_executor(cup_2006)obs(cup_2006, look around this place)
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
open_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is opened. 
##############################
From agent.py
exp(cup_2089, stove_2090)
Fail to find cup_2089 around stove_2090. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_127)exp(cup_2089, table_127)walk_executor(cup_2089)obs(cup_2089, look around this place)walk_executor(cup_2006)obs(cup_2006, look around this place)
##############################
From agent.py
walk_executor(table_127)
Robot find: mat_115, fork_2104, console_2027, crayon_2030, bowl_2096, bowl_2097, napkin_2014, plate_2105, Robot is close to the mat_115. Robot is close to the table_127. 
##############################
From agent.py
exp(cup_2089, table_127)
Fail to find cup_2089 around table_127. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_193)exp(cup_2089, table_193)walk_executor(cup_2089)obs(cup_2089, look around this place)walk_executor(cup_2006)obs(cup_2006, look around this place)
##############################
From agent.py
walk_executor(table_193)
Robot find: dvd_player_2000, pillow_195, laser_pointer_2025, mat_201, mouse_2112, chair_2119, oil_2005, keyboard_2111, drawing_196, Robot is close to the table_193. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2089 ?
Answer: Robot, please proceed to dining_room_1. Locate bookshelf_137. You'll find cup_2089 placed on bookshelf_137. The cup is close to the structure of the bookshelf itself, making it easily identifiable once you locate the correct shelf.
Re-decompose: None

##############################
From agent.py
Human Instruction: Locate dining_room_1. Inside, find table_123. cup_2087 is on top of table_123.
Robot, please proceed to dining_room_1. Locate bookshelf_137. You'll find cup_2089 placed on bookshelf_137. The cup is close to the structure of the bookshelf itself, making it easily identifiable once you locate the correct shelf.

The actions you have taken:
Action 1: Walk to kitchen_counter_132.
Action 2: look for cup_2087 around kitchen_counter_132.
Action 3: Walk to cupboard_131.
Action 4: Open cupboard_131.
Action 5: look for cup_2087 around cupboard_131.
Action 6: Walk to cupboard_130.
Action 7: look for cup_2087 around cupboard_130.
Action 8: Walk to dishwasher_143.
Action 9: Open dishwasher_143.
Action 10: look for cup_2087 around dishwasher_143.
Action 11: Walk to microwave_149.
Action 12: Open microwave_149.
Action 13: look for cup_2087 around microwave_149.
Action 14: Walk to fridge_140.
Action 15: Switch off fridge_140.
Action 16: Open fridge_140.
Action 17: look for cup_2087 around fridge_140.
Action 18: Walk to table_123.
Action 19: look for cup_2087 around table_123.
Action 20: Walk to cup_2087.
Action 21: Observe around cup_2087 with the question of look around this place.
Action 22: Walk to cup_2088.
Action 23: Observe around cup_2088 with the question of look around this place.
Action 24: Walk to table_123.
Action 25: look for cup_2089 around table_123.
Action 26: Walk to cutting_board_2080.
Action 27: look for cup_2089 around cutting_board_2080.
Action 28: Walk to stove_2090.
Action 29: Open stove_2090.
Action 30: look for cup_2089 around stove_2090.
Action 31: Walk to table_127.
Action 32: look for cup_2089 around table_127.
Action 33: Walk to table_193.

##############################
From agent.py
exp(cup_2089, table_193)
Fail to find cup_2089 around table_193. 
##############################
From agent.py-> find a plan in act()
walk_executor(dvd_player_2000)exp(cup_2089, dvd_player_2000)walk_executor(cup_2089)obs(cup_2089, look around this place)walk_executor(cup_2006)obs(cup_2006, look around this place)
##############################
From agent.py
walk_executor(dvd_player_2000)
Robot find: video_game_controller_2019, stereo_2007, Robot is close to the table_193. Robot is close to the dvd_player_2000. 
##############################
From agent.py
exp(cup_2089, dvd_player_2000)
Fail to find cup_2089 around dvd_player_2000. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_137)open_executor(bookshelf_137)exp(cup_2089, bookshelf_137)walk_executor(cup_2089)obs(cup_2089, look around this place)walk_executor(cup_2006)obs(cup_2006, look around this place)
##############################
From agent.py
walk_executor(bookshelf_137)
Robot find: cup_2089, book_2092, Robot is close to the bookshelf_137. 
##############################
From agent.py
open_executor(bookshelf_137)
Robot find: Robot is close to the bookshelf_137. Robot is close to the photoframe_102. bookshelf_137 is opened. 
##############################
From agent.py
exp(cup_2089, bookshelf_137)
Find cup_2089. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2089)obs(cup_2089, look around this place)walk_executor(cup_2006)obs(cup_2006, look around this place)
##############################
From agent.py
walk_executor(cup_2089)
Robot find: Robot is close to the bookshelf_137. Robot is close to the cup_2089. 
##############################
From agent.py
obs(cup_2089, look around this place)
Get this information:  cup_2089 is inside dining_room_1. cup_2089 is close to bookshelf_137. cup_2089 is close to character_219. cup_2089 is on bookshelf_137.
##############################
From agent.py
walk_executor(cup_2006)
Robot find: Robot is close to the table_123. Robot is close to the cup_2006. 
##############################
From agent.py
obs(cup_2006, look around this place)
Get this information:  cup_2006 is close to table_123. cup_2006 is close to character_219. cup_2006 is inside dining_room_1. cup_2006 is on table_123. cup_2006 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_needle_2012_around_homework_2011(needle:item):
    goal: not unknown(needle)
    body:
        assert is_needle(needle)
        bind homework_instance:item where:
            is_homework(homework_instance) and id[homework_instance]==2011
        achieve close_char(char,homework_instance)
        if can_open(homework_instance):
            achieve_once open(homework_instance)
            exp(needle,homework_instance)
        else:
            exp(needle,homework_instance)
    eff:
        unknown[needle]=False
        close[needle,homework_instance]=True
        close[homework_instance,needle]=True
    

behavior find_alcohol_2002_around_bookshelf_188(alcohol:item):
    goal: not unknown(alcohol)
    body:
        assert is_alcohol(alcohol)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==188
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(alcohol,bookshelf_instance)
        else:
            exp(alcohol,bookshelf_instance)
    eff:
        unknown[alcohol]=False
        close[alcohol,bookshelf_instance]=True
        close[bookshelf_instance,alcohol]=True
    

behavior find_phone_47_around_bookshelf_260(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==260
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(phone,bookshelf_instance)
        else:
            exp(phone,bookshelf_instance)
    eff:
        unknown[phone]=False
        close[phone,bookshelf_instance]=True
        close[bookshelf_instance,phone]=True
    

behavior find_clothes_pants_2113_around_basket_for_clothes_2040(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_pants,basket_for_clothes_instance)
        else:
            exp(clothes_pants,basket_for_clothes_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_pants]=True
    

#exp_behavior_end

#goal_representation
 
behavior heat_milk_in_microwave(cup:item, microwave:item):
    body:
        achieve_once inside(cup, microwave)
        # Put the cup of milk inside the microwave
        achieve_once closed(microwave)
        # Close the microwave door
        achieve_once is_on(microwave)
        # Turn on the microwave to heat the milk

behavior __goal__():
    body:
        bind cup_of_milk: item where:
            is_cup(cup_of_milk) and is_milk(cup_of_milk)
        # Select the cup containing milk that has already been found

        bind microwave: item where:
            is_microwave(microwave)
        # Select a microwave

        heat_milk_in_microwave(cup_of_milk, microwave)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_needle_2012_around_homework_2011(needle:item):
    goal: not unknown(needle)
    body:
        assert is_needle(needle)
        bind homework_instance:item where:
            is_homework(homework_instance) and id[homework_instance]==2011
        achieve close_char(char,homework_instance)
        if can_open(homework_instance):
            achieve_once open(homework_instance)
            exp(needle,homework_instance)
        else:
            exp(needle,homework_instance)
    eff:
        unknown[needle]=False
        close[needle,homework_instance]=True
        close[homework_instance,needle]=True
    

behavior find_chair_374_around_desk_375(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==375
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

behavior find_soap_2038_around_bathroom_counter_306(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_milk_in_microwave(milk:item, microwave:item):
    body:
        achieve_once inside(milk, microwave)

behavior heat_milk(microwave:item):
    body:
        achieve_once closed(microwave) # Ensure the microwave door is closed
        achieve is_on(microwave) # Turn on the microwave to heat the milk

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk) and is_cup(milk)
        # Select the cup of milk

        bind microwave: item where:
            is_microwave(microwave)
        # Select the microwave

        place_milk_in_microwave(milk, microwave)
        heat_milk(microwave)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_needle_2024_around_drawing_118(needle:item):
    goal: not unknown(needle)
    body:
        assert is_needle(needle)
        bind drawing_instance:item where:
            is_drawing(drawing_instance) and id[drawing_instance]==118
        achieve close_char(char,drawing_instance)
        if can_open(drawing_instance):
            achieve_once open(drawing_instance)
            exp(needle,drawing_instance)
        else:
            exp(needle,drawing_instance)
    eff:
        unknown[needle]=False
        close[needle,drawing_instance]=True
        close[drawing_instance,needle]=True
    

behavior find_phone_47_around_powersocket_218(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind powersocket_instance:item where:
            is_powersocket(powersocket_instance) and id[powersocket_instance]==218
        achieve close_char(char,powersocket_instance)
        if can_open(powersocket_instance):
            achieve_once open(powersocket_instance)
            exp(phone,powersocket_instance)
        else:
            exp(phone,powersocket_instance)
    eff:
        unknown[phone]=False
        close[phone,powersocket_instance]=True
        close[powersocket_instance,phone]=True
    

behavior find_alcohol_2002_around_oil_2102(alcohol:item):
    goal: not unknown(alcohol)
    body:
        assert is_alcohol(alcohol)
        bind oil_instance:item where:
            is_oil(oil_instance) and id[oil_instance]==2102
        achieve close_char(char,oil_instance)
        if can_open(oil_instance):
            achieve_once open(oil_instance)
            exp(alcohol,oil_instance)
        else:
            exp(alcohol,oil_instance)
    eff:
        unknown[alcohol]=False
        close[alcohol,oil_instance]=True
        close[oil_instance,alcohol]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_milk_in_microwave(cup:item, microwave:item):
    body:
        achieve_once inside(cup, microwave)

behavior heat_milk_in_microwave(microwave:item):
    body:
        achieve_once closed(microwave)
        achieve_once is_on(microwave)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup]==2089
        # Select the cup with ID 2089

        bind microwave: item where:
            is_microwave(microwave)

        place_milk_in_microwave(cup, microwave)
        heat_milk_in_microwave(microwave)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior place_milk_in_microwave(cup:item, microwave:item):
    body:
        achieve_once inside(cup, microwave)

behavior heat_milk_in_microwave(microwave:item):
    body:
        achieve_once closed(microwave)
        achieve_once is_on(microwave)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup]==2089
        # Select the cup with ID 2089

        bind microwave: item where:
            is_microwave(microwave)

        place_milk_in_microwave(cup, microwave)
        heat_milk_in_microwave(microwave)

##############################
From agent.py-> find a plan in act()
walk_executor(cup_2089)grab_executor(cup_2089)walk_executor(microwave_149)putin_executor(cup_2089, microwave_149)close_executor(microwave_149)switchon_executor(microwave_149)
##############################
From agent.py
walk_executor(cup_2089)
Robot find: Robot is close to the cup_2089. Robot is close to the bookshelf_137. 
##############################
From agent.py
grab_executor(cup_2089)
Robot find: Robot is close to the cup_2089. Robot is close to the bookshelf_137. Grabbing cup_2089 by right hand. 
##############################
From agent.py
walk_executor(microwave_149)
Robot find: Robot is close to the cup_2089. Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. 
##############################
From agent.py
putin_executor(cup_2089, microwave_149)
Robot find: Robot is close to the cup_2089. Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. cup_2089 is inside microwave_149. microwave_149 is close cup_2089. cup_2089 is close microwave_149. cup_2089 released by right hand. 
##############################
From agent.py
close_executor(microwave_149)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. microwave_149 is closed. 
##############################
From agent.py
switchon_executor(microwave_149)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. microwave_149 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Get a cup of milk and heat it by microwave.
Action History:
['walk_executor(kitchen_counter_132)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(cupboard_130)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'walk_executor(microwave_149)', 'open_executor(microwave_149)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'walk_executor(table_123)', 'walk_executor(cup_2087)', 'walk_executor(cup_2088)', 'walk_executor(table_123)', 'walk_executor(cutting_board_2080)', 'walk_executor(stove_2090)', 'open_executor(stove_2090)', 'walk_executor(table_127)', 'walk_executor(table_193)', 'walk_executor(dvd_player_2000)', 'walk_executor(bookshelf_137)', 'open_executor(bookshelf_137)', 'walk_executor(cup_2089)', 'walk_executor(cup_2006)', 'walk_executor(cup_2089)', 'grab_executor(cup_2089)', 'walk_executor(microwave_149)', 'putin_executor(cup_2089, microwave_149)', 'close_executor(microwave_149)', 'switchon_executor(microwave_149)']
Time info:
Time consume: 229 seconds
Exp_helper query times: 2
Guidance query times: 0
library scale: 12
goal generate times: 4
goal correct times: 0
action_num: 31

Task complete rate:
Keystate: k1 - Requires: 4 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
