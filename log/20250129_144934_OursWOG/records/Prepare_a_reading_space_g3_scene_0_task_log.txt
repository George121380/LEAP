From agent.py
Reset goals: The sub-goals are: 
['1. Find the book.', '2. Put the book on the coffee table in the home office.', '3. Open the window in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2066_around_bookshelf_101(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==101
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_book(book:item):
    body:
        observe(book, "Locate the book")

behavior __goal__():
    body:
        foreach book: item:
            if is_book(book) and not visited(book):
                find_book(book)
 
#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_book(book:item):
    body:
        observe(book, "Locate the book")

behavior __goal__():
    body:
        foreach book: item:
            if is_book(book) and not visited(book):
                find_book(book)
 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_101)open_executor(bookshelf_101)exp(book_2066, bookshelf_101)walk_executor(book_2066)open_executor(book_2066)obs(book_2066, Locate the book)walk_executor(bookshelf_101)exp(book_2067, bookshelf_101)walk_executor(book_2067)open_executor(book_2067)obs(book_2067, Locate the book)
##############################
From agent.py
walk_executor(bookshelf_101)
Find drawing_176. Find drawing_174. Robot is inside the bedroom_67. Robot is close to the floor_72. Robot is close to the photoframe_185. Robot is close to the bookshelf_101. Robot is no longer inside bathroom_1.
##############################
From agent.py
open_executor(bookshelf_101)
Find towel_rack_31. Find towel_rack_32. Robot is inside the bedroom_67. Robot is close to the floor_72. Robot is close to the photoframe_185. Robot is close to the bookshelf_101. 
##############################
From agent.py
exp(book_2066, bookshelf_101)
Fail to find book_2066 around bookshelf_101. 
##############################
From agent.py-> find a plan in act()
walk_executor(ceilinglamp_96)exp(book_2066, ceilinglamp_96)walk_executor(book_2066)open_executor(book_2066)obs(book_2066, Locate the book)walk_executor(ceilinglamp_96)exp(book_2067, ceilinglamp_96)walk_executor(book_2067)open_executor(book_2067)obs(book_2067, Locate the book)
##############################
From agent.py
walk_executor(ceilinglamp_96)
Find drawing_175. Robot is inside the bedroom_67. Robot is close to the ceilinglamp_96. Robot is no longer close floor_72.Robot is no longer close photoframe_185.Robot is no longer close bookshelf_101.
##############################
From agent.py
exp(book_2066, ceilinglamp_96)
Fail to find book_2066 around ceilinglamp_96. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_233)open_executor(bookshelf_233)exp(book_2066, bookshelf_233)walk_executor(book_2066)open_executor(book_2066)obs(book_2066, Locate the book)walk_executor(bookshelf_233)exp(book_2067, bookshelf_233)walk_executor(book_2067)open_executor(book_2067)obs(book_2067, Locate the book)
##############################
From agent.py
walk_executor(bookshelf_233)
Robot is inside the dining_room_201. Robot is close to the bookshelf_233. Robot is close to the floor_207. Robot is no longer inside bedroom_67.Robot is no longer close ceilinglamp_96.
##############################
From agent.py
open_executor(bookshelf_233)
Find mouse_166. Find keyboard_168. Find chair_103. Robot is inside the dining_room_201. Robot is close to the bookshelf_233. Robot is close to the floor_207. 
##############################
From agent.py
exp(book_2066, bookshelf_233)
Fail to find book_2066 around bookshelf_233. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_354)open_executor(bookshelf_354)exp(book_2066, bookshelf_354)walk_executor(book_2066)open_executor(book_2066)obs(book_2066, Locate the book)walk_executor(bookshelf_354)exp(book_2067, bookshelf_354)walk_executor(book_2067)open_executor(book_2067)obs(book_2067, Locate the book)
##############################
From agent.py
walk_executor(bookshelf_354)
Find book_2066. Find drawing_402. Find book_2067. Find drawing_403. Find drawing_404. Robot is inside the home_office_319. Robot is close to the floor_320. Robot is close to the bookshelf_354. Robot is close to the photoframe_430. Robot is no longer inside dining_room_201.Robot is no longer close bookshelf_233.Robot is no longer close floor_207.
##############################
From agent.py
open_executor(bookshelf_354)
Find hanger_361. Find spectacles_2082. Find hanger_372. Find cat_2055. Find clothes_jacket_2047. Find chair_356. Find phone_2077. Find mouse_413. Find hanger_375. Find pencil_2001. Find pillow_405. Find hanger_367. Find pillow_406. Find drawing_241. Find remote_control_2052. Find hanger_359. Find dvd_player_2061. Find drawing_400. Find hanger_365. Find hanger_376. Find keyboard_415. Find hairbrush_2002. Find vacuum_cleaner_2070. Find drawing_242. Find headset_2062. Find drawing_243. Find mat_401. Find hanger_363. Find hanger_374. Find headset_2076. Find hanger_369. Robot is inside the home_office_319. Robot is close to the floor_320. Robot is close to the bookshelf_354. Robot is close to the photoframe_430. 
##############################
From agent.py
exp(book_2066, bookshelf_354)
Find book_2066. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2066)open_executor(book_2066)obs(book_2066, Locate the book)walk_executor(book_2067)open_executor(book_2067)obs(book_2067, Locate the book)
##############################
From agent.py
walk_executor(book_2066)
Robot is inside the home_office_319. Robot is close to the bookshelf_354. Robot is close to the book_2066. Robot is no longer close floor_320.Robot is no longer close photoframe_430.
##############################
From agent.py
open_executor(book_2066)
Robot is inside the home_office_319. Robot is close to the bookshelf_354. Robot is close to the book_2066. 
##############################
From agent.py
obs(book_2066, Locate the book)
Get this information:  book_2066 is on bookshelf_354. book_2066 is inside home_office_319. book_2066 is close to bookshelf_354. book_2066 is close to character_65. book_2066 is OPEN.
##############################
From agent.py
walk_executor(book_2067)
Robot is inside the home_office_319. Robot is close to the bookshelf_354. Robot is close to the book_2067. Robot is no longer close book_2066.
##############################
From agent.py
open_executor(book_2067)
Robot is inside the home_office_319. Robot is close to the bookshelf_354. Robot is close to the book_2067. 
##############################
From agent.py
obs(book_2067, Locate the book)
Get this information:  book_2067 is on bookshelf_354. book_2067 is inside home_office_319. book_2067 is close to bookshelf_354. book_2067 is close to character_65. book_2067 is OPEN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_106_around_table_107(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==107
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(chair,table_instance)
        else:
            exp(chair,table_instance)
    eff:
        unknown[chair]=False
        close[chair,table_instance]=True
        close[table_instance,chair]=True
    

behavior find_tray_296_around_toaster_292(tray:item):
    goal: not unknown(tray)
    body:
        assert is_tray(tray)
        bind toaster_instance:item where:
            is_toaster(toaster_instance) and id[toaster_instance]==292
        achieve close_char(char,toaster_instance)
        if can_open(toaster_instance):
            achieve_once open(toaster_instance)
            exp(tray,toaster_instance)
        else:
            exp(tray,toaster_instance)
    eff:
        unknown[tray]=False
        close[tray,toaster_instance]=True
        close[toaster_instance,tray]=True
    

#exp_behavior_end

#goal_representation
def is_in_home_office(coffee_table: item):
    # Function to check if a coffee table is in the home office
    symbol is_home_office = exists room: item : is_home_office(room) and inside(coffee_table, room)
    return is_home_office

behavior place_book_on_coffee_table(book:item, coffee_table:item):
    body:
        achieve on(book, coffee_table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select the located book to be placed

        bind coffee_table: item where:
            is_coffee_table(coffee_table) and is_in_home_office(coffee_table)
        # Select a coffee table that is in the home office

        place_book_on_coffee_table(book, coffee_table)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
def is_in_home_office(coffee_table: item):
    # Function to check if a coffee table is in the home office
    symbol is_home_office = exists room: item : is_home_office(room) and inside(coffee_table, room)
    return is_home_office

behavior place_book_on_coffee_table(book:item, coffee_table:item):
    body:
        achieve on(book, coffee_table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select the located book to be placed

        bind coffee_table: item where:
            is_coffee_table(coffee_table) and is_in_home_office(coffee_table)
        # Select a coffee table that is in the home office

        place_book_on_coffee_table(book, coffee_table)
##############################
From agent.py-> find a plan in act()
walk_executor(book_2066)grab_executor(book_2066)walk_executor(coffee_table_2068)put_executor(book_2066, coffee_table_2068)
##############################
From agent.py
walk_executor(book_2066)
Robot is inside the home_office_319. Robot is close to the bookshelf_354. Robot is close to the book_2066. Robot is no longer close book_2067.
##############################
From agent.py
grab_executor(book_2066)
Robot is inside the home_office_319. Robot is close to the bookshelf_354. Robot is close to the book_2066. Grabbing book_2066 by right hand. 
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot is inside the home_office_319. Robot is close to the book_2066. Robot is close to the coffee_table_2068. Robot is no longer close bookshelf_354.
##############################
From agent.py
put_executor(book_2066, coffee_table_2068)
Robot is inside the home_office_319. Robot is close to the book_2066. Robot is close to the coffee_table_2068. book_2066 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior open_window_in_home_office(window:item, office:item):
    body:
        achieve open(window)

behavior __goal__():
    body:
        bind window: item where:
            is_window(window) and inside(window, home_office)
        # Bind the window inside the home office

        bind home_office: item where:
            is_home_office(home_office)
        # Bind the home office

        open_window_in_home_office(window, home_office)
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: home_office; available variables: [Variable<window: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation
 
behavior open_window_in_home_office(window:item, office:item):
    body:
        achieve open(window)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Bind the home office

        bind window: item where:
            is_window(window) and inside(window, home_office)
        # Bind the window inside the home office

        open_window_in_home_office(window, home_office)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior open_window_in_home_office(window:item, office:item):
    body:
        achieve open(window)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Bind the home office

        bind window: item where:
            is_window(window) and inside(window, home_office)
        # Bind the window inside the home office

        open_window_in_home_office(window, home_office)

##############################
From agent.py-> find a plan in act()
walk_executor(window_348)open_executor(window_348)
##############################
From agent.py
walk_executor(window_348)
Robot is inside the home_office_319. Robot is close to the window_348. Robot is no longer close book_2066.Robot is no longer close coffee_table_2068.
##############################
From agent.py
open_executor(window_348)
Robot is inside the home_office_319. Robot is close to the window_348. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Find a book and put it on the coffe table in home office. Then open the window in the home office.
Action History:
['walk_executor(bookshelf_101)', 'open_executor(bookshelf_101)', 'walk_executor(ceilinglamp_96)', 'walk_executor(bookshelf_233)', 'open_executor(bookshelf_233)', 'walk_executor(bookshelf_354)', 'open_executor(bookshelf_354)', 'walk_executor(book_2066)', 'open_executor(book_2066)', 'walk_executor(book_2067)', 'open_executor(book_2067)', 'walk_executor(book_2066)', 'grab_executor(book_2066)', 'walk_executor(coffee_table_2068)', 'put_executor(book_2066, coffee_table_2068)', 'walk_executor(window_348)', 'open_executor(window_348)']
Time info:
Time consume: 130 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 42
goal generate times: 3
goal correct times: 1

Task complete rate:
Keystate: k1 - Requires: 4 steps
Keystate: k2 - Requires: 0 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
