From agent.py
Reset goals: The sub-goals are: 
['1. Find the book and put it on the coffee table in the home office.', '2. Prepare a cup of hot milk and put it on the coffee table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2067_around_bookshelf_101(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==101
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
def in_home_office(location: item):
    # Function to check if a location is in the home office
    symbol is_home_office=exists room: item : is_home_office(room) and inside(location, room)
    return is_home_office

behavior find_and_place_book_on_table(book: item, table: item):
    body:
        achieve on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select a book

        bind table: item where:
            is_coffee_table(table) and in_home_office(table)
        # Select a coffee table in the home office

        find_and_place_book_on_table(book, table)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def in_home_office(location: item):
    # Function to check if a location is in the home office
    symbol is_home_office=exists room: item : is_home_office(room) and inside(location, room)
    return is_home_office

behavior find_and_place_book_on_table(book: item, table: item):
    body:
        achieve on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select a book

        bind table: item where:
            is_coffee_table(table) and in_home_office(table)
        # Select a coffee table in the home office

        find_and_place_book_on_table(book, table)

##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_101)open_executor(bookshelf_101)exp(book_2066, bookshelf_101)walk_executor(book_2066)grab_executor(book_2066)walk_executor(coffee_table_2068)put_executor(book_2066, coffee_table_2068)
##############################
From agent.py
walk_executor(bookshelf_101)
Find drawing_176. Find drawing_174. Robot is inside the bedroom_67. Robot is close to the floor_72. Robot is close to the photoframe_185. Robot is close to the bookshelf_101. Robot is no longer inside bathroom_1.
##############################
From agent.py
open_executor(bookshelf_101)
Find towel_rack_31. Find towel_rack_32. Robot is inside the bedroom_67. Robot is close to the floor_72. Robot is close to the photoframe_185. Robot is close to the bookshelf_101. 
##############################
From agent.py
exp(book_2066, bookshelf_101)
Fail to find book_2066 around bookshelf_101. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_233)open_executor(bookshelf_233)exp(book_2066, bookshelf_233)walk_executor(book_2066)grab_executor(book_2066)walk_executor(coffee_table_2068)put_executor(book_2066, coffee_table_2068)
##############################
From agent.py
walk_executor(bookshelf_233)
Robot is inside the dining_room_201. Robot is close to the bookshelf_233. Robot is close to the floor_207. Robot is no longer inside bedroom_67.Robot is no longer close floor_72.Robot is no longer close photoframe_185.Robot is no longer close bookshelf_101.
##############################
From agent.py
open_executor(bookshelf_233)
Find mouse_166. Find keyboard_168. Find chair_103. Robot is inside the dining_room_201. Robot is close to the bookshelf_233. Robot is close to the floor_207. 
##############################
From agent.py
exp(book_2066, bookshelf_233)
Fail to find book_2066 around bookshelf_233. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_354)open_executor(bookshelf_354)exp(book_2066, bookshelf_354)walk_executor(book_2066)grab_executor(book_2066)walk_executor(coffee_table_2068)put_executor(book_2066, coffee_table_2068)
##############################
From agent.py
walk_executor(bookshelf_354)
Find book_2066. Find drawing_402. Find book_2067. Find drawing_403. Find drawing_404. Robot is inside the home_office_319. Robot is close to the floor_320. Robot is close to the bookshelf_354. Robot is close to the photoframe_430. Robot is no longer inside dining_room_201.Robot is no longer close bookshelf_233.Robot is no longer close floor_207.
##############################
From agent.py
open_executor(bookshelf_354)
Find hanger_361. Find spectacles_2082. Find hanger_372. Find cat_2055. Find clothes_jacket_2047. Find chair_356. Find phone_2077. Find mouse_413. Find hanger_375. Find pencil_2001. Find pillow_405. Find hanger_367. Find pillow_406. Find drawing_241. Find remote_control_2052. Find hanger_359. Find dvd_player_2061. Find drawing_400. Find hanger_365. Find hanger_376. Find keyboard_415. Find hairbrush_2002. Find vacuum_cleaner_2070. Find drawing_242. Find headset_2062. Find drawing_243. Find mat_401. Find hanger_363. Find hanger_374. Find headset_2076. Find hanger_369. Robot is inside the home_office_319. Robot is close to the floor_320. Robot is close to the bookshelf_354. Robot is close to the photoframe_430. 
##############################
From agent.py
exp(book_2066, bookshelf_354)
Find book_2066. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2066)grab_executor(book_2066)walk_executor(coffee_table_2068)put_executor(book_2066, coffee_table_2068)
##############################
From agent.py
walk_executor(book_2066)
Robot is inside the home_office_319. Robot is close to the bookshelf_354. Robot is close to the book_2066. Robot is no longer close floor_320.Robot is no longer close photoframe_430.
##############################
From agent.py
grab_executor(book_2066)
Robot is inside the home_office_319. Robot is close to the bookshelf_354. Robot is close to the book_2066. Grabbing book_2066 by right hand. 
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot is inside the home_office_319. Robot is close to the book_2066. Robot is close to the coffee_table_2068. Robot is no longer close bookshelf_354.
##############################
From agent.py
put_executor(book_2066, coffee_table_2068)
Robot is inside the home_office_319. Robot is close to the book_2066. Robot is close to the coffee_table_2068. book_2066 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2043_around_fridge_289(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_cup_2064_around_stove_2065(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2065
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(cup,stove_instance)
        else:
            exp(cup,stove_instance)
    eff:
        unknown[cup]=False
        close[cup,stove_instance]=True
        close[stove_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
def is_in_home_office(table: item):
    # Function to check if a table is in the home office
    symbol is_home_office = exists room: item : is_home_office(room) and inside(table, room)
    return is_home_office

behavior prepare_hot_milk(cup: item):
    body:
        achieve has_water(cup) # Simulate that the cup contains liquid (milk)
        # In an actual scenario, this would be replaced with a behavior 
        # ensuring the milk is heated and ready

behavior place_on_table(cup: item, table: item):
    body:
        achieve on(cup, table)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup to be used for preparing hot milk and placing
        
        bind table: item where:
            is_coffee_table(table) and is_in_home_office(table)
        # Select the coffee table that is in the home office
        
        prepare_hot_milk(cup)
        
        place_on_table(cup, table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_in_home_office(table: item):
    # Function to check if a table is in the home office
    symbol is_home_office = exists room: item : is_home_office(room) and inside(table, room)
    return is_home_office

behavior prepare_hot_milk(cup: item):
    body:
        achieve has_water(cup) # Simulate that the cup contains liquid (milk)
        # In an actual scenario, this would be replaced with a behavior 
        # ensuring the milk is heated and ready

behavior place_on_table(cup: item, table: item):
    body:
        achieve on(cup, table)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup to be used for preparing hot milk and placing
        
        bind table: item where:
            is_coffee_table(table) and is_in_home_office(table)
        # Select the coffee table that is in the home office
        
        prepare_hot_milk(cup)
        
        place_on_table(cup, table)

##############################
From agent.py-> find a plan in act()
walk_executor(stove_2065)open_executor(stove_2065)exp(cup_2063, stove_2065)walk_executor(cup_2063)grab_executor(cup_2063)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(coffee_table_2068)put_executor(cup_2063, coffee_table_2068)
##############################
From agent.py
walk_executor(stove_2065)
Find cutting_board_2051. Find pot_2069. Find knife_2050. Find napkin_2005. Find drawing_238. Find drawing_239. Find drawing_240. Find cup_2064. Find cup_2063. Find oil_2079. Find fryingpan_2083. Find tray_296. Robot is inside the dining_room_201. Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. Robot is no longer inside home_office_319.Robot is no longer close book_2066.Robot is no longer close coffee_table_2068.
##############################
From agent.py
open_executor(stove_2065)
Robot is inside the dining_room_201. Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
exp(cup_2063, stove_2065)
Find cup_2063. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2063)grab_executor(cup_2063)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(coffee_table_2068)put_executor(cup_2063, coffee_table_2068)
##############################
From agent.py
walk_executor(cup_2063)
Robot is inside the dining_room_201. Robot is close to the kitchen_counter_230. Robot is close to the cup_2063. Robot is no longer close stove_2065.
##############################
From agent.py
grab_executor(cup_2063)
Robot is inside the dining_room_201. Robot is close to the kitchen_counter_230. Robot is close to the cup_2063. Grabbing cup_2063 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Find towel_rack_34. Find basket_for_clothes_2006. Robot is inside the bathroom_1. Robot is close to the cup_2063. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. Robot is no longer inside dining_room_201.Robot is no longer close kitchen_counter_230.
##############################
From agent.py
switchon_executor(faucet_43)
Robot is inside the bathroom_1. Robot is close to the cup_2063. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot is inside the bathroom_1. Robot is close to the cup_2063. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot is inside the home_office_319. Robot is close to the cup_2063. Robot is close to the coffee_table_2068. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_41.Robot is no longer close faucet_43.
##############################
From agent.py
put_executor(cup_2063, coffee_table_2068)
Robot is inside the home_office_319. Robot is close to the cup_2063. Robot is close to the coffee_table_2068. cup_2063 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to fill the cup with milk from the faucet and ensure it is heated, as it currently only contains water. Then, place the hot milk on the coffee table in the home office.
##############################
From agent.py
Human Instruction: You need to fill the cup with milk from the faucet and ensure it is heated, as it currently only contains water. Then, place the hot milk on the coffee table in the home office.

The actions you have taken:
Action 1: Walk to bookshelf_101.
Action 2: Open bookshelf_101.
Action 3: look for book_2066 around bookshelf_101.
Action 4: Walk to bookshelf_233.
Action 5: Open bookshelf_233.
Action 6: look for book_2066 around bookshelf_233.
Action 7: Walk to bookshelf_354.
Action 8: Open bookshelf_354.
Action 9: look for book_2066 around bookshelf_354.
Action 10: Walk to book_2066.
Action 11: Grab book_2066.
Action 12: Walk to coffee_table_2068.
Action 13: Put book_2066 on coffee_table_2068.
Action 14: Walk to stove_2065.
Action 15: Open stove_2065.
Action 16: look for cup_2063 around stove_2065.
Action 17: Walk to cup_2063.
Action 18: Grab cup_2063.
Action 19: Walk to faucet_43.
Action 20: Switch on faucet_43.
Action 21: Switch off faucet_43.
Action 22: Walk to coffee_table_2068.
Action 23: Put cup_2063 on coffee_table_2068.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2043_around_fridge_289(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

#exp_behavior_end

#goal_representation
 
def has_faucet(sink: item):
    # Function to determine if a sink has a faucet nearby
    symbol has_faucet = exists faucet: item : is_faucet(faucet) and close(faucet, sink)
    return has_faucet

behavior fill_cup_with_milk_and_heat(cup: item, stove: item, sink: item):
    body:
        achieve_once inhand(cup)
        # Temporarily hold the cup to carry it
        
        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            # Turn on the faucet to fill the cup if the sink has a faucet
        
        achieve has_water(cup) # Fill the cup with water which will be turned into milk
        
        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_off(faucet)
            # Turn off the faucet
        
        achieve inside(cup, stove) # Put the cup on the stove to heat the milk
        achieve is_on(stove) # Turn on the stove to heat the milk

behavior place_on_coffee_table(item: item, coffee_table: item):
    body:
        achieve on(item, coffee_table)
        # Place the item on the coffee table

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup] == 2063
        # Select cup 2063

        bind stove: item where:
            is_stove(stove) and id[stove] == 2065
        # Select stove 2065

        bind sink: item where:
            is_sink(sink) and id[sink] == 43
        # Select sink 43

        bind coffee_table: item where:
            is_coffee_table(coffee_table) and id[coffee_table] == 2068
        # Select coffee table 2068

        fill_cup_with_milk_and_heat(cup, stove, sink)
        place_on_coffee_table(cup, coffee_table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2043_around_fridge_289(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

#exp_behavior_end

#goal_representation
 
def is_in_home_office(table: item):
    # Function to check if a table is in the home office
    symbol is_home_office = exists room: item : is_home_office(room) and inside(table, room)
    return is_home_office

behavior fill_cup_with_hot_milk(cup: item):
    body:
        # Assume the faucet provides milk instead of water
        achieve has_water(cup) 
        # Simulating the preparation of a cup of hot milk We assume the cup will be heated according to instructions
        achieve clean(cup)

behavior place_on_table(item: item, table: item):
    body:
        achieve on(item, table)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup for preparing hot milk
        
        bind table: item where:
            is_coffee_table(table) and is_in_home_office(table)
        # Select the coffee table in the home office
        
        fill_cup_with_hot_milk(cup)        
        place_on_table(cup, table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_in_home_office(table: item):
    # Function to check if a table is in the home office
    symbol is_home_office = exists room: item : is_home_office(room) and inside(table, room)
    return is_home_office

behavior fill_cup_with_hot_milk(cup: item):
    body:
        # Assume the faucet provides milk instead of water
        achieve has_water(cup) 
        # Simulating the preparation of a cup of hot milk We assume the cup will be heated according to instructions
        achieve clean(cup)

behavior place_on_table(item: item, table: item):
    body:
        achieve on(item, table)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup for preparing hot milk
        
        bind table: item where:
            is_coffee_table(table) and is_in_home_office(table)
        # Select the coffee table in the home office
        
        fill_cup_with_hot_milk(cup)        
        place_on_table(cup, table)

##############################
From agent.py-> find a plan in act()
wash_executor(cup_2063)
##############################
From agent.py
wash_executor(cup_2063)
Robot is inside the home_office_319. Robot is close to the cup_2063. Robot is close to the coffee_table_2068. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to fill the cup with milk and ensure it is heated, as it currently only contains water. After preparing the hot milk, place the cup on the coffee table in the home office.
##############################
From agent.py
Human Instruction: You need to fill the cup with milk and ensure it is heated, as it currently only contains water. After preparing the hot milk, place the cup on the coffee table in the home office.

The actions you have taken:
Action 1: Walk to bookshelf_101.
Action 2: Open bookshelf_101.
Action 3: look for book_2066 around bookshelf_101.
Action 4: Walk to bookshelf_233.
Action 5: Open bookshelf_233.
Action 6: look for book_2066 around bookshelf_233.
Action 7: Walk to bookshelf_354.
Action 8: Open bookshelf_354.
Action 9: look for book_2066 around bookshelf_354.
Action 10: Walk to book_2066.
Action 11: Grab book_2066.
Action 12: Walk to coffee_table_2068.
Action 13: Put book_2066 on coffee_table_2068.
Action 14: Walk to stove_2065.
Action 15: Open stove_2065.
Action 16: look for cup_2063 around stove_2065.
Action 17: Walk to cup_2063.
Action 18: Grab cup_2063.
Action 19: Walk to faucet_43.
Action 20: Switch on faucet_43.
Action 21: Switch off faucet_43.
Action 22: Walk to coffee_table_2068.
Action 23: Put cup_2063 on coffee_table_2068.
Action 24: Wash cup_2063.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2043_around_fridge_289(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

#exp_behavior_end

#goal_representation
 
def is_in_home_office(table: item):
    # Function to check if a table is in the home office
    symbol is_home_office = exists room: item : is_home_office(room) and inside(table, room)
    return is_home_office

behavior fill_cup_with_hot_milk(cup: item):
    body:
        achieve clean(cup)
        achieve inside(milk, cup)
        # Assume milk is an instance of milk
        achieve is_on(stove)
        # To heat the milk

behavior place_on_table(cup: item, table: item):
    body:
        achieve on(cup, table)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup to fill it with hot milk and place
        
        bind table: item where:
            is_coffee_table(table) and is_in_home_office(table)
        # Select the coffee table in the home office
        
        bind stove: item where:
            is_stove(stove)
        # Select a stove for heating the milk
        
        fill_cup_with_hot_milk(cup)
        
        place_on_table(cup, table)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: milk; available variables: [Variable<cup: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_milk_2043_around_fridge_289(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

#goal_representation
 
def is_in_home_office(table: item):
    # Function to check if a table is in the home office
    symbol is_home_office = exists room: item : is_home_office(room) and inside(table, room)
    return is_home_office

behavior fill_cup_with_hot_milk(cup: item, milk: item, stove: item):
    body:
        achieve clean(cup)
        achieve inside(milk, cup)
        # Assume milk is an instance of milk
        achieve is_on(stove)
        # To heat the milk

behavior place_on_table(cup: item, table: item):
    body:
        achieve on(cup, table)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select milk to fill the cup

        bind cup: item where:
            is_cup(cup)
        # Select a cup to fill it with hot milk and place
        
        bind table: item where:
            is_coffee_table(table) and is_in_home_office(table)
        # Select the coffee table in the home office
        
        bind stove: item where:
            is_stove(stove)
        # Select a stove for heating the milk
        
        fill_cup_with_hot_milk(cup, milk, stove)
        
        place_on_table(cup, table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_in_home_office(table: item):
    # Function to check if a table is in the home office
    symbol is_home_office = exists room: item : is_home_office(room) and inside(table, room)
    return is_home_office

behavior fill_cup_with_hot_milk(cup: item, milk: item, stove: item):
    body:
        achieve clean(cup)
        achieve inside(milk, cup)
        # Assume milk is an instance of milk
        achieve is_on(stove)
        # To heat the milk

behavior place_on_table(cup: item, table: item):
    body:
        achieve on(cup, table)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select milk to fill the cup

        bind cup: item where:
            is_cup(cup)
        # Select a cup to fill it with hot milk and place
        
        bind table: item where:
            is_coffee_table(table) and is_in_home_office(table)
        # Select the coffee table in the home office
        
        bind stove: item where:
            is_stove(stove)
        # Select a stove for heating the milk
        
        fill_cup_with_hot_milk(cup, milk, stove)
        
        place_on_table(cup, table)

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(milk_2043, fridge_289)walk_executor(milk_2043)grab_executor(milk_2043)walk_executor(cup_2063)putin_executor(milk_2043, cup_2063)walk_executor(stove_2065)close_executor(stove_2065)switchon_executor(stove_2065)
##############################
From agent.py
walk_executor(fridge_289)
Find sauce_2078. Find food_steak_2008. Find food_apple_2009. Find food_bacon_2010. Find food_banana_2011. Find food_bread_2012. Find food_cake_2013. Find food_carrot_2014. Find food_cereal_2015. Find food_cheese_2016. Find food_chicken_2017. Find food_dessert_2018. Find food_donut_2019. Find food_egg_2020. Find food_fish_2021. Find food_food_2022. Find food_fruit_2023. Find food_hamburger_2024. Find food_ice_cream_2025. Find food_jam_2026. Find food_kiwi_2027. Find food_lemon_2028. Find food_noodles_2029. Find food_oatmeal_2030. Find food_orange_2031. Find food_onion_2032. Find food_peanut_butter_2033. Find food_pizza_2034. Find food_potato_2035. Find food_rice_2036. Find food_salt_2037. Find food_snack_2038. Find food_sugar_2039. Find food_turkey_2040. Find food_vegetable_2041. Find dry_pasta_2042. Find milk_2043. Robot is inside the dining_room_201. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the floor_202. Robot is close to the floor_203. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. Robot is no longer inside home_office_319.Robot is no longer close coffee_table_2068.Robot is no longer close cup_2063.
##############################
From agent.py
switchoff_executor(fridge_289)
Find mat_22. Robot is inside the dining_room_201. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the floor_202. Robot is close to the floor_203. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. 
##############################
From agent.py
open_executor(fridge_289)
Robot is inside the dining_room_201. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the floor_202. Robot is close to the floor_203. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. 
##############################
From agent.py
exp(milk_2043, fridge_289)
Find milk_2043. 
##############################
From agent.py-> find a plan in act()
grab_executor(milk_2043)walk_executor(cup_2063)putin_executor(milk_2043, cup_2063)walk_executor(stove_2065)close_executor(stove_2065)switchon_executor(stove_2065)
##############################
From agent.py
grab_executor(milk_2043)
Robot is inside the dining_room_201. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the floor_202. Robot is close to the floor_203. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. Grabbing milk_2043 by right hand. 
##############################
From agent.py
walk_executor(cup_2063)
Robot is inside the bathroom_1. Robot is close to the milk_2043. Robot is close to the coffee_table_2068. Robot is close to the cup_2063. Robot is no longer inside dining_room_201.Robot is no longer close sauce_2078.Robot is no longer close fridge_289.Robot is no longer close floor_202.Robot is no longer close floor_203.Robot is no longer close food_steak_2008.Robot is no longer close food_apple_2009.Robot is no longer close food_bacon_2010.Robot is no longer close food_banana_2011.Robot is no longer close food_bread_2012.Robot is no longer close food_cake_2013.Robot is no longer close food_carrot_2014.Robot is no longer close food_cereal_2015.Robot is no longer close food_cheese_2016.Robot is no longer close food_chicken_2017.Robot is no longer close food_dessert_2018.Robot is no longer close food_donut_2019.Robot is no longer close food_egg_2020.Robot is no longer close food_fish_2021.Robot is no longer close food_food_2022.Robot is no longer close food_fruit_2023.Robot is no longer close food_hamburger_2024.Robot is no longer close food_ice_cream_2025.Robot is no longer close food_jam_2026.Robot is no longer close food_kiwi_2027.Robot is no longer close food_lemon_2028.Robot is no longer close food_noodles_2029.Robot is no longer close food_oatmeal_2030.Robot is no longer close food_orange_2031.Robot is no longer close food_onion_2032.Robot is no longer close food_peanut_butter_2033.Robot is no longer close food_pizza_2034.Robot is no longer close food_potato_2035.Robot is no longer close food_rice_2036.Robot is no longer close food_salt_2037.Robot is no longer close food_snack_2038.Robot is no longer close food_sugar_2039.Robot is no longer close food_turkey_2040.Robot is no longer close food_vegetable_2041.Robot is no longer close dry_pasta_2042.
##############################
From agent.py
putin_executor(milk_2043, cup_2063)
Robot is inside the bathroom_1. Robot is close to the milk_2043. Robot is close to the coffee_table_2068. Robot is close to the cup_2063. milk_2043 released by right hand. 
##############################
From agent.py
walk_executor(stove_2065)
Robot is inside the dining_room_201. Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. Robot is no longer inside bathroom_1.Robot is no longer close milk_2043.Robot is no longer close coffee_table_2068.Robot is no longer close cup_2063.
##############################
From agent.py
close_executor(stove_2065)
Robot is inside the dining_room_201. Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
switchon_executor(stove_2065)
Robot is inside the dining_room_201. Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to heat the milk before placing the cup with hot milk on the coffee table in the home office.
##############################
Task Summary:
Task Goal:
Find the book and put it on the coffe table in home office. Then prepare a cup of hot milk, put it on the table.
Action History:
['walk_executor(bookshelf_101)', 'open_executor(bookshelf_101)', 'walk_executor(bookshelf_233)', 'open_executor(bookshelf_233)', 'walk_executor(bookshelf_354)', 'open_executor(bookshelf_354)', 'walk_executor(book_2066)', 'grab_executor(book_2066)', 'walk_executor(coffee_table_2068)', 'put_executor(book_2066, coffee_table_2068)', 'walk_executor(stove_2065)', 'open_executor(stove_2065)', 'walk_executor(cup_2063)', 'grab_executor(cup_2063)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'switchoff_executor(faucet_43)', 'walk_executor(coffee_table_2068)', 'put_executor(cup_2063, coffee_table_2068)', 'wash_executor(cup_2063)', 'walk_executor(fridge_289)', 'switchoff_executor(fridge_289)', 'open_executor(fridge_289)', 'grab_executor(milk_2043)', 'walk_executor(cup_2063)', 'putin_executor(milk_2043, cup_2063)', 'walk_executor(stove_2065)', 'close_executor(stove_2065)', 'switchon_executor(stove_2065)']
Time info:
Time consume: 238 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 15
goal generate times: 5
goal correct times: 1

Task complete rate:
Keystate: k1 - Requires: 4 steps
Keystate: k2 - Requires: 9 steps
Keystate: k3 - Requires: 4 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
