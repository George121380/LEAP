From agent.py
Reset goals: The sub-goals are: 
['Cut the chicken into pieces, then put it back in the fridge.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2017_around_fridge_289(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_knife_2050_around_kitchen_counter_230(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(knife,kitchen_counter_instance)
        else:
            exp(knife,kitchen_counter_instance)
    eff:
        unknown[knife]=False
        close[knife,kitchen_counter_instance]=True
        close[kitchen_counter_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
def is_in_kitchen(fridge: item):
    # Function to check if a fridge is in the kitchen
    symbol is_kitchen = exists room: item : is_kitchen(room) and inside(fridge, room)
    return is_kitchen

behavior cut_chicken(chicken: item):
    body:
        achieve cut(chicken)
        # Ensure the chicken is cut

behavior store_in_fridge(chicken: item, fridge: item):
    body:
        achieve inside(chicken, fridge)
        # Place the chicken inside the fridge

behavior close_the_fridge_door(fridge: item):
    body:
        achieve closed(fridge)
        # Close the fridge door

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken that needs to be cut and stored

        bind fridge: item where:
            is_fridge(fridge) and is_in_kitchen(fridge)
        # Select a fridge in the kitchen
        
        cut_chicken(chicken)
        store_in_fridge(chicken, fridge)
        close_the_fridge_door(fridge)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2017_around_fridge_289(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_knife_2050_around_kitchen_counter_230(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(knife,kitchen_counter_instance)
        else:
            exp(knife,kitchen_counter_instance)
    eff:
        unknown[knife]=False
        close[knife,kitchen_counter_instance]=True
        close[kitchen_counter_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior cut_chicken(chicken:item):
    body:
        achieve cut(chicken)

behavior store_in_fridge(chicken:item, fridge:item):
    body:
        achieve inside(chicken, fridge)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select an item classified as chicken
        
        bind fridge: item where:
            is_fridge(fridge)
        # Select a fridge

        cut_chicken(chicken)
        store_in_fridge(chicken, fridge)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2017_around_fridge_289(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_knife_2050_around_kitchen_counter_230(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(knife,kitchen_counter_instance)
        else:
            exp(knife,kitchen_counter_instance)
    eff:
        unknown[knife]=False
        close[knife,kitchen_counter_instance]=True
        close[kitchen_counter_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
def is_in_fridge(chicken:item, fridge:item):
    # Function to check if the chicken is in the fridge
    symbol is_in_fridge=exists o: item : is_food_chicken(o) and inside(o, fridge)
    return is_in_fridge

behavior cut_chicken(chicken:item):
    body:
        achieve cut(chicken)

behavior store_in_fridge(chicken:item, fridge:item):
    body:
        achieve inside(chicken, fridge)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken to be cut and stored

        bind fridge: item where:
            is_fridge(fridge)
        # Select the refrigerator

        cut_chicken(chicken)
        store_in_fridge(chicken, fridge)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['Cut the chicken into pieces and put them back into the fridge.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2017_around_fridge_289(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_knife_2050_around_kitchen_counter_230(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(knife,kitchen_counter_instance)
        else:
            exp(knife,kitchen_counter_instance)
    eff:
        unknown[knife]=False
        close[knife,kitchen_counter_instance]=True
        close[kitchen_counter_instance,knife]=True
    

#exp_behavior_end

#goal_representation

behavior cut_chicken(chicken:item):
    body:
        achieve cut(chicken)

behavior put_in_fridge(chicken:item, fridge:item):
    body:
        achieve inside(chicken, fridge)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken to be cut into pieces

        bind fridge: item where:
            is_fridge(fridge)
        # Select a fridge to store the chicken

        cut_chicken(chicken)
        put_in_fridge(chicken, fridge)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2017_around_fridge_289(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_knife_2050_around_kitchen_counter_230(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(knife,kitchen_counter_instance)
        else:
            exp(knife,kitchen_counter_instance)
    eff:
        unknown[knife]=False
        close[knife,kitchen_counter_instance]=True
        close[kitchen_counter_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior cut_chicken(chicken:item):
    body:
        achieve cut(chicken)

behavior store_in_fridge(chicken:item, fridge:item):
    body:
        achieve inside(chicken, fridge)
        # Ensure the chicken is placed inside the fridge

behavior close_the_fridge(fridge:item):
    body:
        achieve closed(fridge)
        # Ensure the fridge door is closed

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken item
        
        bind fridge: item where:
            is_fridge(fridge)
        # Select the fridge in the environment

        cut_chicken(chicken) 
        # Cut the chicken into pieces

        store_in_fridge(chicken, fridge)
        # Store the pieces of chicken in the fridge

        close_the_fridge(fridge)
        # Ensure the fridge door is closed afterwards

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2017_around_fridge_289(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_knife_2050_around_kitchen_counter_230(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(knife,kitchen_counter_instance)
        else:
            exp(knife,kitchen_counter_instance)
    eff:
        unknown[knife]=False
        close[knife,kitchen_counter_instance]=True
        close[kitchen_counter_instance,knife]=True
    

behavior find_cutting_board_2051_around_kitchen_counter_230(cutting_board:item):
    goal: not unknown(cutting_board)
    body:
        assert is_cutting_board(cutting_board)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cutting_board,kitchen_counter_instance)
        else:
            exp(cutting_board,kitchen_counter_instance)
    eff:
        unknown[cutting_board]=False
        close[cutting_board,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cutting_board]=True
    

#exp_behavior_end

#goal_representation
 
behavior cut_chicken(chicken:item):
    body:
        achieve cut(chicken)
        # Ensure the chicken is cut into pieces

behavior store_chicken_in_fridge(chicken:item, fridge:item):
    body:
        achieve inside(chicken, fridge)
        # Place the chicken pieces inside the fridge

behavior close_fridge(fridge:item):
    body:
        achieve closed(fridge)
        # Ensure the fridge door is closed

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken item to be cut and stored
        
        bind fridge: item where:
            is_fridge(fridge)
        # Select a fridge to store the chicken pieces
        
        cut_chicken(chicken)
        store_chicken_in_fridge(chicken, fridge)
        close_fridge(fridge)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior cut_chicken(chicken:item):
    body:
        achieve cut(chicken)
        # Ensure the chicken is cut into pieces

behavior store_chicken_in_fridge(chicken:item, fridge:item):
    body:
        achieve inside(chicken, fridge)
        # Place the chicken pieces inside the fridge

behavior close_fridge(fridge:item):
    body:
        achieve closed(fridge)
        # Ensure the fridge door is closed

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken item to be cut and stored
        
        bind fridge: item where:
            is_fridge(fridge)
        # Select a fridge to store the chicken pieces
        
        cut_chicken(chicken)
        store_chicken_in_fridge(chicken, fridge)
        close_fridge(fridge)

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_chicken_2017, fridge_289)walk_executor(kitchen_counter_230)exp(cutting_board_2051, kitchen_counter_230)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(cutting_board_2051)put_executor(food_chicken_2017, cutting_board_2051)walk_executor(kitchen_counter_230)exp(knife_2050, kitchen_counter_230)walk_executor(knife_2050)grab_executor(knife_2050)walk_executor(food_chicken_2017)cut_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(fridge_289)putin_executor(food_chicken_2017, fridge_289)close_executor(fridge_289)
##############################
From agent.py
walk_executor(fridge_289)
Find sauce_2078. Find food_steak_2008. Find food_apple_2009. Find food_bacon_2010. Find food_banana_2011. Find food_bread_2012. Find food_cake_2013. Find food_carrot_2014. Find food_cereal_2015. Find food_cheese_2016. Find food_chicken_2017. Find food_dessert_2018. Find food_donut_2019. Find food_egg_2020. Find food_fish_2021. Find food_food_2022. Find food_fruit_2023. Find food_hamburger_2024. Find food_ice_cream_2025. Find food_jam_2026. Find food_kiwi_2027. Find food_lemon_2028. Find food_noodles_2029. Find food_oatmeal_2030. Find food_orange_2031. Find food_onion_2032. Find food_peanut_butter_2033. Find food_pizza_2034. Find food_potato_2035. Find food_rice_2036. Find food_salt_2037. Find food_snack_2038. Find food_sugar_2039. Find food_turkey_2040. Find food_vegetable_2041. Find dry_pasta_2042. Find milk_2043. Find drawing_239. Find drawing_240. Robot is inside the dining_room_201. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the floor_202. Robot is close to the floor_203. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. Robot is no longer inside bathroom_1.
##############################
From agent.py
switchoff_executor(fridge_289)
Find mat_22. Find drawing_174. Robot is inside the dining_room_201. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the floor_202. Robot is close to the floor_203. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. 
##############################
From agent.py
open_executor(fridge_289)
Robot is inside the dining_room_201. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the floor_202. Robot is close to the floor_203. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. 
##############################
From agent.py
exp(food_chicken_2017, fridge_289)
Find food_chicken_2017. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)exp(cutting_board_2051, kitchen_counter_230)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(cutting_board_2051)put_executor(food_chicken_2017, cutting_board_2051)walk_executor(kitchen_counter_230)exp(knife_2050, kitchen_counter_230)walk_executor(knife_2050)grab_executor(knife_2050)walk_executor(food_chicken_2017)cut_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(fridge_289)putin_executor(food_chicken_2017, fridge_289)close_executor(fridge_289)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Find cutting_board_2051. Find pot_2069. Find knife_2050. Find napkin_2005. Find drawing_238. Find drawing_241. Find drawing_242. Find drawing_243. Find cup_2064. Find cup_2063. Find oil_2079. Find fryingpan_2083. Find tray_296. Robot is inside the dining_room_201. Robot is close to the kitchen_counter_230. Robot is no longer close sauce_2078.Robot is no longer close fridge_289.Robot is no longer close floor_202.Robot is no longer close floor_203.Robot is no longer close food_steak_2008.Robot is no longer close food_apple_2009.Robot is no longer close food_bacon_2010.Robot is no longer close food_banana_2011.Robot is no longer close food_bread_2012.Robot is no longer close food_cake_2013.Robot is no longer close food_carrot_2014.Robot is no longer close food_cereal_2015.Robot is no longer close food_cheese_2016.Robot is no longer close food_chicken_2017.Robot is no longer close food_dessert_2018.Robot is no longer close food_donut_2019.Robot is no longer close food_egg_2020.Robot is no longer close food_fish_2021.Robot is no longer close food_food_2022.Robot is no longer close food_fruit_2023.Robot is no longer close food_hamburger_2024.Robot is no longer close food_ice_cream_2025.Robot is no longer close food_jam_2026.Robot is no longer close food_kiwi_2027.Robot is no longer close food_lemon_2028.Robot is no longer close food_noodles_2029.Robot is no longer close food_oatmeal_2030.Robot is no longer close food_orange_2031.Robot is no longer close food_onion_2032.Robot is no longer close food_peanut_butter_2033.Robot is no longer close food_pizza_2034.Robot is no longer close food_potato_2035.Robot is no longer close food_rice_2036.Robot is no longer close food_salt_2037.Robot is no longer close food_snack_2038.Robot is no longer close food_sugar_2039.Robot is no longer close food_turkey_2040.Robot is no longer close food_vegetable_2041.Robot is no longer close dry_pasta_2042.Robot is no longer close milk_2043.
##############################
From agent.py
exp(cutting_board_2051, kitchen_counter_230)
Find cutting_board_2051. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(cutting_board_2051)put_executor(food_chicken_2017, cutting_board_2051)walk_executor(knife_2050)grab_executor(knife_2050)walk_executor(food_chicken_2017)cut_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(fridge_289)putin_executor(food_chicken_2017, fridge_289)close_executor(fridge_289)
##############################
From agent.py
walk_executor(food_chicken_2017)
Robot is inside the dining_room_201. Robot is close to the fridge_289. Robot is close to the food_chicken_2017. Robot is no longer close kitchen_counter_230.
##############################
From agent.py
grab_executor(food_chicken_2017)
Robot is inside the dining_room_201. Robot is close to the fridge_289. Robot is close to the food_chicken_2017. Grabbing food_chicken_2017 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2051)
Robot is inside the dining_room_201. Robot is close to the food_chicken_2017. Robot is close to the cutting_board_2051. Robot is close to the kitchen_counter_230. Robot is no longer close fridge_289.
##############################
From agent.py
put_executor(food_chicken_2017, cutting_board_2051)
Robot is inside the dining_room_201. Robot is close to the food_chicken_2017. Robot is close to the cutting_board_2051. Robot is close to the kitchen_counter_230. food_chicken_2017 released by right hand. 
##############################
From agent.py
walk_executor(knife_2050)
Robot is inside the dining_room_201. Robot is close to the kitchen_counter_230. Robot is close to the knife_2050. Robot is no longer close food_chicken_2017.Robot is no longer close cutting_board_2051.
##############################
From agent.py
grab_executor(knife_2050)
Robot is inside the dining_room_201. Robot is close to the kitchen_counter_230. Robot is close to the knife_2050. Grabbing knife_2050 by right hand. 
##############################
From agent.py
walk_executor(food_chicken_2017)
Robot is inside the dining_room_201. Robot is close to the knife_2050. Robot is close to the food_chicken_2017. Robot is close to the cutting_board_2051. Robot is no longer close kitchen_counter_230.
##############################
From agent.py
cut_executor(food_chicken_2017)
Robot is inside the dining_room_201. Robot is close to the knife_2050. Robot is close to the food_chicken_2017. Robot is close to the cutting_board_2051. 
##############################
From agent.py
grab_executor(food_chicken_2017)
Robot is inside the dining_room_201. Robot is close to the knife_2050. Robot is close to the food_chicken_2017. Robot is close to the cutting_board_2051. Grabbing food_chicken_2017 by left hand. 
##############################
From agent.py
walk_executor(fridge_289)
Robot is inside the dining_room_201. Robot is close to the knife_2050. Robot is close to the food_chicken_2017. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the floor_202. Robot is close to the floor_203. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. Robot is no longer close cutting_board_2051.
##############################
From agent.py
putin_executor(food_chicken_2017, fridge_289)
Robot is inside the dining_room_201. Robot is close to the knife_2050. Robot is close to the food_chicken_2017. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the floor_202. Robot is close to the floor_203. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. food_chicken_2017 released by left hand. 
##############################
From agent.py
close_executor(fridge_289)
Robot is inside the dining_room_201. Robot is close to the knife_2050. Robot is close to the food_chicken_2017. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the floor_202. Robot is close to the floor_203. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Cut the chicken into pieces, then put back to the fridge.
Action History:
['walk_executor(fridge_289)', 'switchoff_executor(fridge_289)', 'open_executor(fridge_289)', 'walk_executor(kitchen_counter_230)', 'walk_executor(food_chicken_2017)', 'grab_executor(food_chicken_2017)', 'walk_executor(cutting_board_2051)', 'put_executor(food_chicken_2017, cutting_board_2051)', 'walk_executor(knife_2050)', 'grab_executor(knife_2050)', 'walk_executor(food_chicken_2017)', 'cut_executor(food_chicken_2017)', 'grab_executor(food_chicken_2017)', 'walk_executor(fridge_289)', 'putin_executor(food_chicken_2017, fridge_289)', 'close_executor(fridge_289)']
Time info:
Time consume: 131 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 7
goal generate times: 6
goal correct times: 0

Task complete rate:
1
Scene_id: 0
##############################
