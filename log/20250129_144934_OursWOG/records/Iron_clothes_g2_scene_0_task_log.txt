From agent.py
Reset goals: The sub-goals are: 
['1. Find the shirt that needs to be hand washed.', '2. Hand wash the shirt properly using soap and water.', "3. Iron the shirt once it's dry."]
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2086_around_closetdrawer_154(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==154
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior locate_shirt(shirt:item):
    body:
        observe(shirt, "Locate the shirt that needs to be hand washed")

behavior __goal__():
    body:
        foreach shirt: item:
            if is_clothes_shirt(shirt) and not visited(shirt):
                locate_shirt(shirt)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior locate_shirt(shirt:item):
    body:
        observe(shirt, "Locate the shirt that needs to be hand washed")

behavior __goal__():
    body:
        foreach shirt: item:
            if is_clothes_shirt(shirt) and not visited(shirt):
                locate_shirt(shirt)

##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_154)exp(clothes_shirt_2086, closetdrawer_154)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Locate the shirt that needs to be hand washed)
##############################
From agent.py
walk_executor(closetdrawer_154)
Find hanger_109. Find hanger_110. Find hanger_132. Find hanger_140. Find hanger_141. Find hanger_124. Find hanger_115. Find hanger_134. Find mat_173. Find hanger_136. Find hanger_128. Find hanger_130. Find hanger_138. Find hanger_142. Find hanger_126. Find hanger_111. Find hanger_113. Find hanger_114. Find hanger_112. Robot is inside the bedroom_67. Robot is close to the closetdrawer_160. Robot is close to the closetdrawer_154. Robot is close to the dresser_123. Robot is no longer inside bathroom_1.
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_154)
Fail to find clothes_shirt_2086 around closetdrawer_154. 
##############################
From agent.py-> find a plan in act()
walk_executor(hanger_114)exp(clothes_shirt_2086, hanger_114)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Locate the shirt that needs to be hand washed)
##############################
From agent.py
walk_executor(hanger_114)
Robot is inside the bedroom_67. Robot is close to the hanger_114. Robot is close to the dresser_108. Robot is no longer close closetdrawer_160.Robot is no longer close closetdrawer_154.Robot is no longer close dresser_123.
##############################
From agent.py
exp(clothes_shirt_2086, hanger_114)
Fail to find clothes_shirt_2086 around hanger_114. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the shirt.', '2. Iron the shirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2073_around_washing_machine_2007(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(cleaning_solution,washing_machine_instance)
        else:
            exp(cleaning_solution,washing_machine_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,washing_machine_instance]=True
        close[washing_machine_instance,cleaning_solution]=True
    

behavior find_soap_2054_around_washing_machine_2007(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(soap,washing_machine_instance)
        else:
            exp(soap,washing_machine_instance)
    eff:
        unknown[soap]=False
        close[soap,washing_machine_instance]=True
        close[washing_machine_instance,soap]=True
    

behavior find_basket_for_clothes_2006_around_washing_machine_2007(basket_for_clothes:item):
    goal: not unknown(basket_for_clothes)
    body:
        assert is_basket_for_clothes(basket_for_clothes)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(basket_for_clothes,washing_machine_instance)
        else:
            exp(basket_for_clothes,washing_machine_instance)
    eff:
        unknown[basket_for_clothes]=False
        close[basket_for_clothes,washing_machine_instance]=True
        close[washing_machine_instance,basket_for_clothes]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_shirt_for_wash(shirt:item):
    body:
        achieve clean(shirt)
        # Hand wash the shirt to clean it

behavior look_for_shirt():
    body:
        foreach location: item:
            # Check all possible locations for the shirt if not yet found
            if is_hanger(location) or is_closetdrawer(location) and not visited(location):
                observe(location, "Check if clothes_shirt_2086 is around")

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt]==2086
        # Assume youve found the shirt with ID 2086

        if not visited(shirt):
            # If the shirt is not found yet, look for it
            look_for_shirt()

        prepare_shirt_for_wash(shirt)
        # Once found, prepare the shirt for washing

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2073_around_washing_machine_2007(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(cleaning_solution,washing_machine_instance)
        else:
            exp(cleaning_solution,washing_machine_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,washing_machine_instance]=True
        close[washing_machine_instance,cleaning_solution]=True
    

behavior find_basket_for_clothes_2006_around_washing_machine_2007(basket_for_clothes:item):
    goal: not unknown(basket_for_clothes)
    body:
        assert is_basket_for_clothes(basket_for_clothes)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(basket_for_clothes,washing_machine_instance)
        else:
            exp(basket_for_clothes,washing_machine_instance)
    eff:
        unknown[basket_for_clothes]=False
        close[basket_for_clothes,washing_machine_instance]=True
        close[washing_machine_instance,basket_for_clothes]=True
    

behavior find_hanger_124_around_hanger_124(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==124
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(hanger,hanger_instance)
        else:
            exp(hanger,hanger_instance)
    eff:
        unknown[hanger]=False
        close[hanger,hanger_instance]=True
        close[hanger_instance,hanger]=True
    

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_clothes_shirt_2086_around_hanger_130(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==130
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(clothes_shirt,hanger_instance)
        else:
            exp(clothes_shirt,hanger_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,hanger_instance]=True
        close[hanger_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
 
def is_shirt_found(shirt: item):
    # Function to check if clothes shirt has been found
    symbol found=visited(shirt)
    return found

behavior wash_shirt(shirt:item):
    body:
        wash(shirt)
        achieve clean(shirt)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[clothes_shirt]==2086
        # Select the shirt to be washed

        if not is_shirt_found(shirt):
            # If shirt has not been found yet, ensure it is located
            foreach location_n: item where:
                (is_closetdrawer(location_n) or is_hanger(location_n)) and not visited(location_n):
                    observe(location_n, "Check is clothes_shirt_2086 present")
        
        wash_shirt(shirt)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('WHERE', 'where') at line 5856, column 38.
Expected one of: 
	* COLON

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_soap_2053_around_shower_36(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==36
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(soap,shower_instance)
        else:
            exp(soap,shower_instance)
    eff:
        unknown[soap]=False
        close[soap,shower_instance]=True
        close[shower_instance,soap]=True
    

behavior find_basket_for_clothes_2006_around_washing_machine_2007(basket_for_clothes:item):
    goal: not unknown(basket_for_clothes)
    body:
        assert is_basket_for_clothes(basket_for_clothes)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(basket_for_clothes,washing_machine_instance)
        else:
            exp(basket_for_clothes,washing_machine_instance)
    eff:
        unknown[basket_for_clothes]=False
        close[basket_for_clothes,washing_machine_instance]=True
        close[washing_machine_instance,basket_for_clothes]=True
    

#goal_representation
 
def is_shirt_found(shirt: item):
    # Function to check if clothes shirt has been found
    symbol found = visited(shirt)
    return found

behavior wash_shirt(shirt:item):
    body:
        wash(shirt)
        achieve clean(shirt)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select the shirt to be washed

        if not is_shirt_found(shirt):
            # If shirt has not been found yet, ensure it is located
            foreach location_n: item:
                if (is_closetdrawer(location_n) or is_hanger(location_n)) and not visited(location_n):
                    observe(location_n, "Check is clothes_shirt_2086 present")
        
        wash_shirt(shirt)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_basket_for_clothes_2006_around_washing_machine_2007(basket_for_clothes:item):
    goal: not unknown(basket_for_clothes)
    body:
        assert is_basket_for_clothes(basket_for_clothes)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(basket_for_clothes,washing_machine_instance)
        else:
            exp(basket_for_clothes,washing_machine_instance)
    eff:
        unknown[basket_for_clothes]=False
        close[basket_for_clothes,washing_machine_instance]=True
        close[washing_machine_instance,basket_for_clothes]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_shirt(shirt:item):
    body:
        achieve clean(shirt)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt]==2086
        # Select the shirt with ID 2086

        hand_wash_shirt(clothes_shirt)
        # Execute the hand wash behavior for the shirt

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the shirt.', '2. Iron the shirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2073_around_washing_machine_2007(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(cleaning_solution,washing_machine_instance)
        else:
            exp(cleaning_solution,washing_machine_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,washing_machine_instance]=True
        close[washing_machine_instance,cleaning_solution]=True
    

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_clothes_shirt_2086_around_hanger_130(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==130
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(clothes_shirt,hanger_instance)
        else:
            exp(clothes_shirt,hanger_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,hanger_instance]=True
        close[hanger_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
 
def find_shirt(shirt:item):
    body:
        observe(shirt, "Locate the shirt and check if its dirty")

behavior wash_shirt_by_hand(shirt:item):
    body:
        wash(shirt)
        # Ensure the shirt is washed by hand

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt]==2086
        # Select the shirt with ID 2086
        
        if not visited(shirt):
            # If the shirt has not been found or its state is unknown
            find_shirt(shirt)
        
        wash_shirt_by_hand(shirt)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('COLON', ':') at line 5803, column 9.
Expected one of: 
	* EQUAL
	* PERCENT
	* STAR
	* __ANON_5
	* FLOORDIV
	* SLASH
	* GREATER_EQ
	* __ANON_1
	* __ANON_8
	* COMMA
	* __ANON_3
	* MINUS
	* PLUS
	* __ANON_0
	* CIRCUMFLEX
	* NOT_EQ
	* LESSTHAN
	* RSHIFT
	* AT
	* SEMICOLON
	* __ANON_2
	* __ANON_4
	* AMPERSAND
	* AND
	* LSHIFT
	* IF
	* MORETHAN
	* OR
	* __ANON_6
	* LESS_EQ
	* __ANON_7
	* VBAR
	* DOUBLE_EQUAL
	* _NEWLINE

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_cleaning_solution_2073_around_washing_machine_2007(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(cleaning_solution,washing_machine_instance)
        else:
            exp(cleaning_solution,washing_machine_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,washing_machine_instance]=True
        close[washing_machine_instance,cleaning_solution]=True
    

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_clothes_shirt_2086_around_hanger_130(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==130
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(clothes_shirt,hanger_instance)
        else:
            exp(clothes_shirt,hanger_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,hanger_instance]=True
        close[hanger_instance,clothes_shirt]=True
    

#goal_representation
 
def find_shirt(shirt:item):
    # Function to locate the shirt and check if its dirty
    observe(shirt, "Locate the shirt and check if its dirty")

behavior wash_shirt_by_hand(shirt:item):
    body:
        wash(shirt)
        # Ensure the shirt is washed by hand

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt]==2086
        # Select the shirt with ID 2086
        
        if not visited(shirt):
            # If the shirt has not been found or its state is unknown
            find_shirt(shirt)
        
        wash_shirt_by_hand(shirt)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Behavior body statements are not allowed in the current mode: SymbolicExecutionMode.DERIVED
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_basket_for_clothes_2006_around_washing_machine_2007(basket_for_clothes:item):
    goal: not unknown(basket_for_clothes)
    body:
        assert is_basket_for_clothes(basket_for_clothes)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(basket_for_clothes,washing_machine_instance)
        else:
            exp(basket_for_clothes,washing_machine_instance)
    eff:
        unknown[basket_for_clothes]=False
        close[basket_for_clothes,washing_machine_instance]=True
        close[washing_machine_instance,basket_for_clothes]=True
    

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_clothes_shirt_2086_around_hanger_130(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==130
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(clothes_shirt,hanger_instance)
        else:
            exp(clothes_shirt,hanger_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,hanger_instance]=True
        close[hanger_instance,clothes_shirt]=True
    

#goal_representation
 
def has_shirt_shirt(shirt:item):
    # Function to check if the item is the specific shirt with ID 2086
    return is_clothes_shirt(shirt) and id[shirt] == 2086

behavior find_shirt(shirt:item):
    body:
        observe(shirt, "Locate the shirt and check if its dirty")
        # Locate the shirt and determine its state

behavior wash_shirt_by_hand(shirt:item):
    body:
        wash(shirt)
        # Ensure the shirt is washed by hand

behavior __goal__():
    body:
        if exists shirt: item : has_shirt_shirt(shirt):
            bind shirt: item where:
                has_shirt_shirt(shirt)
            if not visited(shirt):
                find_shirt(shirt)
            wash_shirt_by_hand(shirt)
        else:
            foreach shirt: item:
                if is_clothes_shirt(shirt) and not visited(shirt):
                    observe(shirt, "Locate the shirt with ID 2086")
                    if id[shirt] == 2086:
                        wash_shirt_by_hand(shirt)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_shirt_shirt(shirt:item):
    # Function to check if the item is the specific shirt with ID 2086
    return is_clothes_shirt(shirt) and id[shirt] == 2086

behavior find_shirt(shirt:item):
    body:
        observe(shirt, "Locate the shirt and check if its dirty")
        # Locate the shirt and determine its state

behavior wash_shirt_by_hand(shirt:item):
    body:
        wash(shirt)
        # Ensure the shirt is washed by hand

behavior __goal__():
    body:
        if exists shirt: item : has_shirt_shirt(shirt):
            bind shirt: item where:
                has_shirt_shirt(shirt)
            if not visited(shirt):
                find_shirt(shirt)
            wash_shirt_by_hand(shirt)
        else:
            foreach shirt: item:
                if is_clothes_shirt(shirt) and not visited(shirt):
                    observe(shirt, "Locate the shirt with ID 2086")
                    if id[shirt] == 2086:
                        wash_shirt_by_hand(shirt)

##############################
From agent.py-> find a plan in act()
walk_executor(hanger_130)exp(clothes_shirt_2086, hanger_130)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Locate the shirt and check if its dirty)wash_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(hanger_130)
Robot is inside the bedroom_67. Robot is close to the hanger_130. Robot is close to the dresser_123. Robot is no longer close hanger_114.Robot is no longer close dresser_108.
##############################
From agent.py
exp(clothes_shirt_2086, hanger_130)
Fail to find clothes_shirt_2086 around hanger_130. 
##############################
Task Summary:
Task Goal:
Hand wash a shirt and iron this shirt.
Action History:
['walk_executor(closetdrawer_154)', 'walk_executor(hanger_114)', 'walk_executor(hanger_130)']
Time info:
Time consume: 137 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 42
goal generate times: 5
goal correct times: 2

Task complete rate:
Keystate: k1 - Requires: 5 steps
Keystate: k2 - Requires: 10 steps
Action Completion Rate: 0.0
Scene_id: 0
##############################
