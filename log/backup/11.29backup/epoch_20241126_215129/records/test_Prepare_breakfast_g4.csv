Goal Representation,Debug Result,Action,Add Info,LLM Answer,Plan
"Reset goals: The sub-goals are: 
['1. Boil the pasta and cook the chicken until done.', '2. Combine the cooked pasta and chicken.', '
3. Put the chicken pasta on a plate.']",,,,,
Goal representation,"
behavior boil_pasta(pasta:item, pot:item, stove:item):
    body:
        achieve has_water(pot)
        achieve inside(pasta, pot)
        achieve on(pot, stove)
        achieve is_on(stove)

behavior cook_chicken(chicken:item, fryingpan:item, stove:item):
    body:
        achieve inside(chicken, fryingpan)
        achieve on(fryingpan, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta)
        bind chicken: item where:
            is_food_chicken(chicken)
        bind pot: item where:
            is_pot(pot)
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        bind stove: item where:
            is_stove(stove)
        
        boil_pasta(pasta, pot, stove)
        cook_chicken(chicken, fryingpan, stove)
",,,,
"
behavior boil_pasta(pasta:item, pot:item, stove:item):
    body:
        achieve has_water(pot)
        achieve inside(pasta, pot)
        achieve on(pot, stove)
        achieve is_on(stove)

behavior cook_chicken(chicken:item, fryingpan:item, stove:item):
    body:
        achieve inside(chicken, fryingpan)
        achieve on(fryingpan, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta)
        bind chicken: item where:
            is_food_chicken(chicken)
        bind pot: item where:
            is_pot(pot)
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        bind stove: item where:
            is_stove(stove)
        
        boil_pasta(pasta, pot, stove)
        cook_chicken(chicken, fryingpan, stove)
",From function reset_goal,,,,
,,,,"Record from func query_LLM_human in agent.py
Question: Can you tell me how to boil the pasta and cook the chicken until done.
Answer: Need to replan: No  
Guidance: Boil some pasta. Cook some chicken.
",
,,,,"Record from func query_LLM_human in agent.py
Question: Can you tell me how to combine the cooked pasta and chicken.
Answer: Need to replan: Yes  
Guidance: Boil some pasta. Cook some chicken. Then put them on a plate.
",
,,,,"Record from func query_LLM_human in agent.py
Question: Can you tell me how to put the chicken pasta on a plate.
Answer: Need to replan: No  
Guidance: Put the cooked pasta and chicken on a plate.
",
"Reset goals: The sub-goals are: 
['1. Cook the chicken and pasta.', '2. Combine the chicken and pasta on a plate.']",,,,,
Goal representation," 
behavior cook_chicken(chicken:item, frypan:item, stove:item):
    body:
        achieve inside(chicken, frypan)
        # Place the chicken inside the frypan
        achieve on(frypan, stove)
        # Put frypan on the stove
        achieve is_on(stove)
        # Turn on the stove to cook the chicken

behavior cook_pasta(pasta:item, pot:item, stove:item):
    body:
        achieve inside(pasta, pot)
        # Place the pasta inside the pot
        achieve has_water(pot)
        # Ensure the pot has water
        achieve on(pot, stove)
        # Put the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to cook the pasta

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select chicken instance
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select dry pasta instance
        bind frypan: item where:
            is_fryingpan(frypan)
        # Select a frypan instance
        bind pot: item where:
            is_pot(pot)
        # Select a pot instance
        bind stove: item where:
            is_stove(stove)
        # Select the stove instance
        cook_chicken(chicken, frypan, stove)
        cook_pasta(pasta, pot, stove)
",,,,
" 
behavior cook_chicken(chicken:item, frypan:item, stove:item):
    body:
        achieve inside(chicken, frypan)
        # Place the chicken inside the frypan
        achieve on(frypan, stove)
        # Put frypan on the stove
        achieve is_on(stove)
        # Turn on the stove to cook the chicken

behavior cook_pasta(pasta:item, pot:item, stove:item):
    body:
        achieve inside(pasta, pot)
        # Place the pasta inside the pot
        achieve has_water(pot)
        # Ensure the pot has water
        achieve on(pot, stove)
        # Put the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to cook the pasta

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select chicken instance
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select dry pasta instance
        bind frypan: item where:
            is_fryingpan(frypan)
        # Select a frypan instance
        bind pot: item where:
            is_pot(pot)
        # Select a pot instance
        bind stove: item where:
            is_stove(stove)
        # Select the stove instance
        cook_chicken(chicken, frypan, stove)
        cook_pasta(pasta, pot, stove)
",From function reset_goal,,,,
"Reset goals: The sub-goals are: 
['1. Boil the pasta and cook the chicken.', '2. Combine the chicken and pasta, then put it in a plat
e.']",,,,,
Goal representation,"def has_water_in_pot(pot:item):
    # Function to check if the pot has water
    symbol has_water=has_water(pot)
    return has_water

behavior boil_pasta(pasta:item, pot:item, stove:item):
    body:
        achieve inside(pasta, pot)
        # Place the pasta inside the pot
        
        if not has_water_in_pot(pot):
            # Ensure that there is water in the pot
            achieve has_water(pot)
        
        achieve on(pot, stove)
        # Put the pot on the stove
        
        achieve is_on(stove)
        # Turn on the stove

behavior cook_chicken(chicken:item, stove:item, fryingpan:item):
    body:
        achieve inside(chicken, fryingpan)
        # Place the chicken into the frying pan
        
        achieve on(fryingpan, stove)
        # Place the frying pan on the stove

        achieve is_on(stove)
        # Turn on the stove
    
behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select dry pasta

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select a piece of chicken

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        boil_pasta(pasta, pot, stove)
        cook_chicken(chicken, stove, fryingpan)",,,,
"def has_water_in_pot(pot:item):
    # Function to check if the pot has water
    symbol has_water=has_water(pot)
    return has_water

behavior boil_pasta(pasta:item, pot:item, stove:item):
    body:
        achieve inside(pasta, pot)
        # Place the pasta inside the pot
        
        if not has_water_in_pot(pot):
            # Ensure that there is water in the pot
            achieve has_water(pot)
        
        achieve on(pot, stove)
        # Put the pot on the stove
        
        achieve is_on(stove)
        # Turn on the stove

behavior cook_chicken(chicken:item, stove:item, fryingpan:item):
    body:
        achieve inside(chicken, fryingpan)
        # Place the chicken into the frying pan
        
        achieve on(fryingpan, stove)
        # Place the frying pan on the stove

        achieve is_on(stove)
        # Turn on the stove
    
behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select dry pasta

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select a piece of chicken

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        boil_pasta(pasta, pot, stove)
        cook_chicken(chicken, stove, fryingpan)",From function reset_goal,,,,
cdl_dataset/dataset/Prepare_breakfast/g4.txt,k1,"missed actions: walk_executor(pot_2069);grab_executor(pot_2069);walk_executor(faucet_43);switchon_ex
ecutor(faucet_43);switchoff_executor(faucet_43);walk_executor(pot_2069);open_executor(pot_2069);walk
_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);walk_executor(dry_pas
ta_2042);grab_executor(dry_pasta_2042);walk_executor(pot_2069);putin_executor(dry_pasta_2042, pot_20
69);walk_executor(stove_2065);put_executor(pot_2069, stove_2065);switchon_executor(stove_2065);",missed action num: 17,,
cdl_dataset/dataset/Prepare_breakfast/g4.txt,k2,"missed actions: walk_executor(oil_2079);grab_executor(oil_2079);walk_executor(fryingpan_2083);putin_
executor(oil_2079, fryingpan_2083);walk_executor(fridge_289);switchoff_executor(fridge_289);open_exe
cutor(fridge_289);walk_executor(food_chicken_2017);grab_executor(food_chicken_2017);walk_executor(fr
yingpan_2083);putin_executor(food_chicken_2017, fryingpan_2083);grab_executor(fryingpan_2083);walk_e
xecutor(stove_2065);put_executor(fryingpan_2083, stove_2065);switchon_executor(stove_2065);",missed action num: 15,,
cdl_dataset/dataset/Prepare_breakfast/g4.txt,k1,"missed actions: walk_executor(pot_2069);grab_executor(pot_2069);walk_executor(faucet_43);switchon_ex
ecutor(faucet_43);switchoff_executor(faucet_43);walk_executor(pot_2069);open_executor(pot_2069);walk
_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);walk_executor(dry_pas
ta_2042);grab_executor(dry_pasta_2042);walk_executor(pot_2069);putin_executor(dry_pasta_2042, pot_20
69);walk_executor(stove_2065);put_executor(pot_2069, stove_2065);switchon_executor(stove_2065);",missed action num: 17,,
cdl_dataset/dataset/Prepare_breakfast/g4.txt,k2,"missed actions: walk_executor(oil_2079);grab_executor(oil_2079);walk_executor(fryingpan_2083);putin_
executor(oil_2079, fryingpan_2083);walk_executor(fridge_289);switchoff_executor(fridge_289);open_exe
cutor(fridge_289);walk_executor(food_chicken_2017);grab_executor(food_chicken_2017);walk_executor(fr
yingpan_2083);putin_executor(food_chicken_2017, fryingpan_2083);grab_executor(fryingpan_2083);walk_e
xecutor(stove_2065);put_executor(fryingpan_2083, stove_2065);switchon_executor(stove_2065);",missed action num: 15,,
cdl_dataset/dataset/Prepare_breakfast/g4.txt,k3,"missed actions: walk_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);w
alk_executor(dry_pasta_2042);grab_executor(dry_pasta_2042);walk_executor(plate_1000);putin_executor(
dry_pasta_2042, plate_1000);walk_executor(food_chicken_2017);grab_executor(food_chicken_2017);walk_e
xecutor(plate_1000);putin_executor(food_chicken_2017, plate_1000);",missed action num: 11,,
cdl_dataset/dataset/Prepare_breakfast/g4.txt,k4,"missed actions: walk_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);w
alk_executor(dry_pasta_2042);grab_executor(dry_pasta_2042);walk_executor(plate_1000);put_executor(dr
y_pasta_2042, plate_1000);walk_executor(food_chicken_2017);grab_executor(food_chicken_2017);walk_exe
cutor(plate_1000);put_executor(food_chicken_2017, plate_1000);",missed action num: 11,,
