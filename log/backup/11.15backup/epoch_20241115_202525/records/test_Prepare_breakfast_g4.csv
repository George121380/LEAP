Goal Representation,Debug Result,Action,Add Info,LLM Answer,Plan
"Reset goals: The sub-goals are: 
['1. Find and prepare the chicken and pasta by cooking them.', '2. Mix the cooked chicken and pasta 
together.', '3. Put the chicken pasta on a plate.']",,,,,
" 
behavior prepare_chicken(chicken:item, stove:item, fryingpan:item):
    body:
        achieve inside(chicken, fryingpan)
        # Place the chicken inside the frying pan

        achieve on(fryingpan, stove)
        # Place the frying pan with chicken on the stove

        achieve is_on(stove)
        # Turn the stove on to cook the chicken

behavior prepare_pasta(dry_pasta:item, pot:item, stove:item):
    body:
        achieve has_water(pot)
        # Fill the pot with water

        achieve inside(dry_pasta, pot)
        # Place the pasta inside the pot

        achieve on(pot, stove)
        # Place the pot with pasta on the stove

        achieve is_on(stove)
        # Turn the stove on to cook the pasta

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind dry_pasta: item where:
            is_dry_pasta(dry_pasta)

        bind stove: item where:
            is_stove(stove)

        bind fryingpan: item where:
            is_fryingpan(fryingpan)

        bind pot: item where:
            is_pot(pot)

        prepare_chicken(chicken, stove, fryingpan)
        # Prepare the chicken

        prepare_pasta(dry_pasta, pot, stove)
        # Prepare the pasta
",From function reset_goal,,,,
"Reset goals: The sub-goals are: 
['1. Find the necessary ingredients for chicken pasta.', '2. Cook the chicken and pasta together.', 
'3. Put the chicken pasta on a plate.']",,,,,
" 
def has_ingredient_in_kitchen(ingredient:item):
    # Function to check if an ingredient is in the kitchen
    symbol has_ingredient=exists room: item : is_kitchen(room) and inside(ingredient, room)
    return has_ingredient

def is_common_ingredient(ingredient:item):
    # Function to determine if an item is a common ingredient for chicken pasta
    symbol common_ingredient=(
        is_food_chicken(ingredient) or 
        is_dry_pasta(ingredient) or 
        is_food_onion(ingredient) or 
        is_sauce(ingredient)
    )
    return common_ingredient

behavior __goal__():
    body:
        foreach ingredient: item:
            # Check all ingredients in the scene
            if is_common_ingredient(ingredient):
                # Check if the item is a common ingredient for chicken pasta
                if has_ingredient_in_kitchen(ingredient):
                    # Check if the ingredient is in the kitchen
                    achieve visited(ingredient)
                else:
                    observe(ingredient, ""Verify if the ingredient is present for the recipe"")
",From function reset_goal,,,,
"Reset goals: The sub-goals are: 
['1. Cook the pasta and the chicken separately.', '2. Mix the cooked pasta and chicken together.', '
3. Put the chicken pasta on a plate.']",,,,,
"
behavior cook_pasta(pasta:item, pot:item, stove:item):
    body:
        achieve inside(pasta, pot)
        # Place the pasta inside the pot

        achieve has_water(pot)
        # Ensure the pot has water inside

        achieve on(pot, stove)
        # Place the pot on the stove

        achieve is_on(stove)
        # Turn on the stove to cook the pasta

behavior cook_chicken(chicken:item, fryingpan:item, stove:item):
    body:
        achieve on(chicken, fryingpan)
        # Place the chicken in the frying pan

        achieve on(fryingpan, stove)
        # Place the frying pan on the stove

        achieve is_on(stove)
        # Turn on the stove to cook the chicken

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove)
        # Select a stove
        
        bind pot: item where:
            is_pot(pot)
        # Select a pot for cooking pasta
        
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan for cooking chicken
        
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select dry pasta to cook
        
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select chicken for cooking
        
        cook_pasta(pasta, pot, stove)
        cook_chicken(chicken, fryingpan, stove)
",From function reset_goal,,,,
cdl_dataset/dataset/Prepare_breakfast/g4.txt,k1,"missed actions: walk_executor(pot_2069);grab_executor(pot_2069);walk_executor(faucet_43);switchon_ex
ecutor(faucet_43);switchoff_executor(faucet_43);walk_executor(pot_2069);open_executor(pot_2069);walk
_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);walk_executor(dry_pas
ta_2042);grab_executor(dry_pasta_2042);walk_executor(pot_2069);putin_executor(dry_pasta_2042, pot_20
69);walk_executor(stove_2065);put_executor(pot_2069, stove_2065);switchon_executor(stove_2065);",missed action num: 17,,
cdl_dataset/dataset/Prepare_breakfast/g4.txt,k2,"missed actions: walk_executor(oil_2079);grab_executor(oil_2079);walk_executor(fryingpan_2083);putin_
executor(oil_2079, fryingpan_2083);walk_executor(fridge_289);switchoff_executor(fridge_289);open_exe
cutor(fridge_289);walk_executor(food_chicken_2017);grab_executor(food_chicken_2017);walk_executor(fr
yingpan_2083);putin_executor(food_chicken_2017, fryingpan_2083);grab_executor(fryingpan_2083);walk_e
xecutor(stove_2065);put_executor(fryingpan_2083, stove_2065);switchon_executor(stove_2065);",missed action num: 15,,
cdl_dataset/dataset/Prepare_breakfast/g4.txt,k1,"missed actions: walk_executor(pot_2069);grab_executor(pot_2069);walk_executor(faucet_43);switchon_ex
ecutor(faucet_43);switchoff_executor(faucet_43);walk_executor(pot_2069);open_executor(pot_2069);walk
_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);walk_executor(dry_pas
ta_2042);grab_executor(dry_pasta_2042);walk_executor(pot_2069);putin_executor(dry_pasta_2042, pot_20
69);walk_executor(stove_2065);put_executor(pot_2069, stove_2065);switchon_executor(stove_2065);",missed action num: 17,,
cdl_dataset/dataset/Prepare_breakfast/g4.txt,k2,"missed actions: walk_executor(oil_2079);grab_executor(oil_2079);walk_executor(fryingpan_2083);putin_
executor(oil_2079, fryingpan_2083);walk_executor(fridge_289);switchoff_executor(fridge_289);open_exe
cutor(fridge_289);walk_executor(food_chicken_2017);grab_executor(food_chicken_2017);walk_executor(fr
yingpan_2083);putin_executor(food_chicken_2017, fryingpan_2083);grab_executor(fryingpan_2083);walk_e
xecutor(stove_2065);put_executor(fryingpan_2083, stove_2065);switchon_executor(stove_2065);",missed action num: 15,,
cdl_dataset/dataset/Prepare_breakfast/g4.txt,k3,"missed actions: walk_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);w
alk_executor(dry_pasta_2042);grab_executor(dry_pasta_2042);walk_executor(plate_1000);putin_executor(
dry_pasta_2042, plate_1000);walk_executor(food_chicken_2017);grab_executor(food_chicken_2017);walk_e
xecutor(plate_1000);putin_executor(food_chicken_2017, plate_1000);",missed action num: 11,,
