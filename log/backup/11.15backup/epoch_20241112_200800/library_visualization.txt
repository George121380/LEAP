Clean the bathroom:
behavior fill_sink_with_water(sink:item):
    body:
        achieve has_water(sink)


Listen to music:
behavior check_proximity(remote_control:item, dvd_player:item):
    body:
        observe(remote_control, "Check if the remote control is close to the DVD player")


behavior move_remote(remote_control:item, dvd_player:item):
    body:
        achieve close(remote_control, dvd_player)


behavior turn_on_dvd(dvd_player:item):
    body:
        achieve is_on(dvd_player)


behavior turn_on_cd_player(cd_player: item):
    body:
        if has_switch_cd_1(cd_player):
            achieve is_on(cd_player)


Wash dishes with dishwasher:
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve inside(o, dishwasher)
        # Place the item inside the dishwasher


behavior start_dishwasher(dishwasher:item):
    body:
        achieve closed(dishwasher) # Close the dishwasher door
        achieve is_on(dishwasher) # Turn on the dishwasher


behavior find_plates():
    body:
        foreach o: item:
            if is_plate(o) and not visited(o):
                observe(o, "Check if the plate needs washing")


behavior load_plates_into_dishwasher(plate:item, dishwasher:item):
    body:
        achieve inside(plate, dishwasher)


behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve inside(o, dishwasher)
        # Place the item inside the dishwasher


Change TV channel:
behavior turn_on_tv(remote_control:item, television:item):
    body:
        achieve is_on(television)


behavior sit_on_couch(couch:item):
    body:
        achieve on_char(char, couch)


behavior grab_item(item: item):
    body:
        if not is_within_reach_1(item):
            achieve close_char(char, item)
        achieve_once inhand(item)


behavior activate_device(device:item, remote_control:item):
    body:
        if has_switch(device):
            achieve_once close_char(char, device)
            achieve is_on(device)


Make coffee:
behavior add_milk_or_sugar_to_coffee(cup:item, milk:item, sugar:item):
    body:
        if is_milk(milk):
            achieve inside(milk, cup)
        if is_food_sugar(sugar):
            achieve inside(sugar, cup)


Cook some food:
behavior wash_vegetable(vegetable:item):
    body:
        achieve clean(vegetable) 
        # The goal is to ensure the vegetable is clean


behavior put_vegetables_in_pot(vegetable:item, pot:item):
    body:
        achieve inside(vegetable, pot)
        # Place the vegetable inside the pot


behavior start_boiling(pot:item, stove:item):
    body:
        achieve on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to start boiling the vegetables


behavior transfer_vegetables_to_bowl(boiled_vegetables: item, bowl: item):
    body:
        achieve inside(boiled_vegetables, bowl)
        # Transfer the boiled vegetables from the pot to the bowl


behavior place_vegetables_in_pot(vegetable:item, pot:item):
    body:
        achieve inside(vegetable, pot) # Place the vegetable inside the pot


behavior boil_pot_on_stove(pot:item, stove:item):
    body:
        achieve on(pot, stove)
        # Ensure that the pot is placed on the stove

        if has_stovefan_1(stove):
            bind stovefan: item where:
                is_stovefan(stovefan) and close(stove, stovefan)
            achieve_once is_on(stovefan)
            # If the stove has a stovefan, turn it on

        achieve is_on(stove)
        # Turn on the stove to boil the vegetables


behavior clean_vegetables(vegetable:item, sink:item):
    body:
        achieve_once inside(vegetable, sink)
        # Ensure the vegetable is inside the sink for washing

        if exists faucet: item: is_faucet(faucet) and close(faucet, sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            # If the sink has a faucet close by, turn it on

        wash(vegetable)
        # Wash the vegetable

        if exists faucet: item: is_faucet(faucet) and close(faucet, sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_off(faucet)
            # If the sink has a faucet close by, turn it off after washing


behavior add_vegetables_to_pot(vegetables:item, pot:item):
    body:
        achieve inside(vegetables, pot)


behavior start_boiling(pot:item, stove:item):
    body:
        achieve on(pot, stove)
        achieve is_on(stove)


behavior store_pot_in_fridge(pot:item, fridge:item):
    body:
        achieve inside(pot, fridge) # Place the pot inside the fridge
        achieve closed(fridge) # Close the fridge door


Prepare breakfast:
behavior cook_chicken_and_pasta(chicken:item, pasta:item, pot:item, stove:item):
    body:
        achieve inside(chicken, pot) 
        achieve inside(pasta, pot) 
        achieve is_on(stove)


behavior transfer_pasta_contents(pasta:item, plate:item):
    body:
        achieve on(pasta, plate) 
        # Transfer the pasta onto the plate


behavior remove_pot_from_plate(pot:item, plate:item):
    body:
        move(pot) 
        # Move the pot off the plate


Pet cat:
behavior cut_chicken(chicken:item):
    body:
        assert on_cutting_board_1(chicken)
        achieve cut(chicken)


behavior place_on_cutting_board(chicken:item, board:item):
    body:
        achieve on(chicken, board)


