Goal Representation,Debug Result,Action,Add Info,LLM Answer,Plan
"Reset goals: The sub-goals are: 
['1. Assess the bathroom sink to determine areas that need cleaning.', '2. Clean the bathroom sink t
horoughly using appropriate cleaning products and tools.']",,,,,
"
def find_areas_to_clean(sink:item):
    # Check if there are any specific areas on the sink that need cleaning
    symbol dirty_areas=exists area: item : close(area, sink) and dirty(area) or dirty(sink)
    return dirty_areas

behavior __goal__():
    body:
        if exists sink: item : is_sink(sink) and find_areas_to_clean(sink):
            # If there are already known dirty areas on the sink, move closer to inspect further
            bind sink: item where:
                is_sink(sink) and find_areas_to_clean(sink)
            observe(sink, ""Inspect sink for specific areas that need cleaning"")
        
        else:
            # Check all sinks in the scene that have not been visited
            foreach sink: item:
                if is_sink(sink) and not visited(sink):
                    observe(sink, ""Determine areas that need cleaning on this sink"")

",From function reset_goal,,,,
,,,,,"(CrowControllerApplier<walk_executor(sink_42)>, CrowControllerApplier<obs(sink_42, Inspect sink for 
specific areas that need cleaning)>)"
,,walk_executor(sink_42),"Find cleaning_solution_2073. Find detergent_2084. Find towel_rack_31. Find soap_2053. Find basket_fo
r_clothes_2006. Find towel_rack_34. Find towel_rack_32. Robot is inside bathroom_1. Robot is close b
athroom_counter_41. Robot is close sink_42. ",,
,,"obs(sink_42, Inspect sink for specific areas that need cleaning)","Get this information:  cleaning_solution_2073 is on sink_42. detergent_2084 is on sink_42. sink_42 i
s close to floor_2. sink_42 is close to floor_3. sink_42 is close to detergent_2084. sink_42 is clos
e to soap_2053. sink_42 is close to floor_4. sink_42 is close to bathroom_cabinet_40. sink_42 is clo
se to bathroom_counter_41. sink_42 is close to wall_9. sink_42 is close to faucet_43. sink_42 is clo
se to wall_12. sink_42 is close to basket_for_clothes_2006. sink_42 is close to washing_machine_2007
. sink_42 is close to cleaning_solution_2073. sink_42 is close to character_65. soap_2053 is on sink
_42. sink_42 is inside bathroom_1. sink_42 is inside bathroom_counter_41. sink_42 is DIRTY.",,
,,,,,"(CrowControllerApplier<obs(sink_42, Inspect sink for specific areas that need cleaning)>,)"
,,"obs(sink_42, Inspect sink for specific areas that need cleaning)","Get this information:  cleaning_solution_2073 is on sink_42. detergent_2084 is on sink_42. sink_42 i
s close to floor_2. sink_42 is close to floor_3. sink_42 is close to detergent_2084. sink_42 is clos
e to soap_2053. sink_42 is close to floor_4. sink_42 is close to bathroom_cabinet_40. sink_42 is clo
se to bathroom_counter_41. sink_42 is close to wall_9. sink_42 is close to faucet_43. sink_42 is clo
se to wall_12. sink_42 is close to basket_for_clothes_2006. sink_42 is close to washing_machine_2007
. sink_42 is close to cleaning_solution_2073. sink_42 is close to character_65. soap_2053 is on sink
_42. sink_42 is inside bathroom_1. sink_42 is inside bathroom_counter_41. sink_42 is DIRTY.",,
"
behavior clean_sink(sink:item, cleaning_solution:item, detergent:item, towel:item):
    body:
        achieve is_off(cleaning_solution) # Ensure cleaning solution is not active
        achieve clean(sink) # The sink should be cleaned
        
        # Clean using the designated detergent
        achieve_once inhand(detergent)
        scrub(sink)
        
        # Rinse the sink after scrubbing
        achieve has_water(sink)
        rinse(sink)
        
        # Use the towel to dry the sink
        achieve_once inhand(towel)
        scrub(sink)

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and id[sink] == 42
        # Select sink with ID 42
        
        bind cleaning_solution: item where:
            is_cleaning_solution(cleaning_solution) and on(cleaning_solution, sink)
        # Select the cleaning solution on the sink
        
        bind detergent: item where:
            is_detergent(detergent) and on(detergent, sink)
        # Select the detergent on the sink
        
        bind towel_rack: item where:
            is_towel_rack(towel_rack)
        # Select the towel rack
        
        bind towel: item where:
            is_towel(towel) and on(towel, towel_rack)
        # Select a towel on the towel rack
        
        clean_sink(sink, cleaning_solution, detergent, towel)
",From function reset_sub_goal,,,,
" 
behavior clean_sink_thoroughly(sink:item, cleaning_solution:item, detergent:item):
    body:
        achieve_once inhand(cleaning_solution)
        achieve_once inhand(detergent)
        scrub(sink)
        rinse(sink)

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and id[sink] == 42 and dirty(sink)
        # Select sink with ID 42 that is dirty

        bind cleaning_solution: item where:
            is_cleaning_solution(cleaning_solution) and on(cleaning_solution, sink)
        # Select cleaning solution on the sink

        bind detergent: item where:
            is_detergent(detergent) and on(detergent, sink)
        # Select detergent on the sink

        clean_sink_thoroughly(sink, cleaning_solution, detergent)
",From function reset_sub_goal,,,,
,,,,,"(CrowControllerApplier<walk_executor(cleaning_solution_2073)>, CrowControllerApplier<grab_executor(c
leaning_solution_2073)>, CrowControllerApplier<walk_executor(detergent_2084)>, CrowControllerApplier
<grab_executor(detergent_2084)>, CrowControllerApplier<walk_executor(basket_for_clothes_2006)>, Crow
ControllerApplier<put_executor(cleaning_solution_2073, basket_for_clothes_2006)>, CrowControllerAppl
ier<walk_executor(sink_42)>, CrowControllerApplier<scrub_executor(sink_42)>, CrowControllerApplier<r
inse_executor(sink_42)>)"
,,walk_executor(cleaning_solution_2073),"Robot is inside bathroom_1. Robot is close sink_42. Robot is close cleaning_solution_2073. Robot is 
no longer close bathroom_counter_41.",,
,,grab_executor(cleaning_solution_2073),"Robot is inside bathroom_1. Robot is close sink_42. Robot is close cleaning_solution_2073. Grabbing 
cleaning_solution_2073 by right hand. ",,
,,walk_executor(detergent_2084),"Robot is inside bathroom_1. Robot is close sink_42. Robot is close cleaning_solution_2073. Robot is 
close detergent_2084. ",,
,,grab_executor(detergent_2084),"Robot is inside bathroom_1. Robot is close sink_42. Robot is close cleaning_solution_2073. Robot is 
close detergent_2084. Grabbing detergent_2084 by left hand. ",,
,,walk_executor(basket_for_clothes_2006),"Find clothes_pants_2085. Find clothes_shirt_2086. Find clothes_socks_2087. Find clothes_skirt_2088. 
Find towel_rack_33. Find mat_22. Robot is inside bathroom_1. Robot is close cleaning_solution_2073. 
Robot is close detergent_2084. Robot is close clothes_pants_2085. Robot is close clothes_shirt_2086.
 Robot is close clothes_socks_2087. Robot is close clothes_skirt_2088. Robot is close basket_for_clo
thes_2006. Robot is no longer close sink_42.",,
,,"put_executor(cleaning_solution_2073, basket_for_clothes_2006)","Robot is inside bathroom_1. Robot is close cleaning_solution_2073. Robot is close detergent_2084. Ro
bot is close clothes_pants_2085. Robot is close clothes_shirt_2086. Robot is close clothes_socks_208
7. Robot is close clothes_skirt_2088. Robot is close basket_for_clothes_2006. cleaning_solution_2073
 released by right hand. ",,
,,walk_executor(sink_42),"Robot is inside bathroom_1. Robot is close detergent_2084. Robot is close bathroom_counter_41. Robot
 is close sink_42. Robot is no longer close clothes_pants_2085.Robot is no longer close clothes_shir
t_2086.Robot is no longer close clothes_socks_2087.Robot is no longer close clothes_skirt_2088.Robot
 is no longer close basket_for_clothes_2006.Robot is no longer close cleaning_solution_2073.",,
,,scrub_executor(sink_42),"Robot is inside bathroom_1. Robot is close detergent_2084. Robot is close bathroom_counter_41. Robot
 is close sink_42. ",,
