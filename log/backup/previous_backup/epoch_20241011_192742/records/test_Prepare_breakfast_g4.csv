Goal Representation,Debug Result,Action,Add Info,LLM Answer,Plan
cdl_dataset/dataset/Prepare_breakfast/g4.txt,k1,"missed actions: walk_executor(pot_2069);grab_executor(pot_2069);walk_executor(faucet_43);switchon_ex
ecutor(faucet_43);switchoff_executor(faucet_43);walk_executor(pot_2069);open_executor(pot_2069);walk
_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);walk_executor(dry_pas
ta_2042);grab_executor(dry_pasta_2042);walk_executor(pot_2069);putin_executor(dry_pasta_2042, pot_20
69);walk_executor(stove_2065);put_executor(pot_2069, stove_2065);switchon_executor(stove_2065);",missed action num: 479,,
cdl_dataset/dataset/Prepare_breakfast/g4.txt,k2,"missed actions: walk_executor(oil_2079);grab_executor(oil_2079);walk_executor(fryingpan_2083);putin_
executor(oil_2079, fryingpan_2083);walk_executor(fridge_289);switchoff_executor(fridge_289);open_exe
cutor(fridge_289);walk_executor(food_chicken_2017);grab_executor(food_chicken_2017);walk_executor(fr
yingpan_2083);putin_executor(food_chicken_2017, fryingpan_2083);grab_executor(fryingpan_2083);walk_e
xecutor(stove_2065);put_executor(fryingpan_2083, stove_2065);switchon_executor(stove_2065);",missed action num: 475,,
cdl_dataset/dataset/Prepare_breakfast/g4.txt,k3,"missed actions: walk_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);w
alk_executor(dry_pasta_2042);grab_executor(dry_pasta_2042);walk_executor(plate_1000);putin_executor(
dry_pasta_2042, plate_1000);walk_executor(food_chicken_2017);grab_executor(food_chicken_2017);walk_e
xecutor(plate_1000);putin_executor(food_chicken_2017, plate_1000);",missed action num: 350,,
"Reset goals: The sub-goals are: 
['1. Prepare and cook the chicken.', '2. Cook the pasta.', '3. Combine the cooked chicken and pasta.
', '4. Put the chicken pasta on a plate.']",,,,,
" 
def is_heated(fryingpan:item):
    # Check if the frying pan is heated
    symbol heated=exists stove: item : is_stove(stove) and on(fryingpan, stove) and is_on(stove)
    return heated

behavior clean_chicken(chicken:item):
    body:
        achieve clean(chicken)
        # Ensure the chicken is clean before cooking

behavior heat_frying_pan(fryingpan:item, stove:item):
    body:
        achieve on(fryingpan, stove) 
        achieve is_on(stove)
        # Place the frying pan on the stove and turn on the stove

behavior cook_chicken(chicken:item, fryingpan:item):
    body:
        achieve inside(chicken, fryingpan)
        # Cook the chicken by placing it inside the heated frying pan

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select a chicken to prepare
        
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan for cooking
        
        bind stove: item where:
            is_stove(stove) 
        
        clean_chicken(chicken)
        
        if not is_heated(fryingpan):
            heat_frying_pan(fryingpan, stove)
        
        cook_chicken(chicken, fryingpan)
",From function reset_goal,,,,
,,,,,"(CrowControllerApplier<walk_executor(fridge_289)>, CrowControllerApplier<switchoff_executor(fridge_2
89)>, CrowControllerApplier<open_executor(fridge_289)>, CrowControllerApplier<exp(food_chicken_2017,
 fridge_289)>, CrowControllerApplier<walk_executor(food_chicken_2017)>, CrowControllerApplier<wash_e
xecutor(food_chicken_2017)>, CrowControllerApplier<walk_executor(kitchen_counter_230)>, CrowControll
erApplier<exp(fryingpan_2083, kitchen_counter_230)>, CrowControllerApplier<walk_executor(fryingpan_2
083)>, CrowControllerApplier<grab_executor(fryingpan_2083)>, CrowControllerApplier<walk_executor(sto
ve_2065)>, CrowControllerApplier<put_executor(fryingpan_2083, stove_2065)>, CrowControllerApplier<sw
itchon_executor(stove_2065)>, CrowControllerApplier<walk_executor(food_chicken_2017)>, CrowControlle
rApplier<grab_executor(food_chicken_2017)>, CrowControllerApplier<walk_executor(fryingpan_2083)>, Cr
owControllerApplier<putin_executor(food_chicken_2017, fryingpan_2083)>)"
"
def is_unplugged(stove:item):
    # Determine whether the stove is unplugged
    symbol unplug_stove=unplugged(stove)
    return unplug_stove

def is_clean(fryingpan:item):
    # Determine whether the frying pan is clean
    symbol clean_pan=clean(fryingpan)
    return clean_pan

def is_creamy(oil:item):
    # Determine whether the oil is creamy
    symbol creamy=cream(oil)
    return creamy

behavior plug_in_stove(stove:item):
    body:
        achieve plugged(stove)

behavior clean_fryingpan(fryingpan:item):
    body:
        wash(fryingpan)

behavior add_oil_creamy(fryingpan:item, oil:item):
    body:
        achieve inside(oil, fryingpan)

behavior heat_chicken(fryingpan:item, stove:item, chicken:item):
    body:
        achieve is_on(stove)
        achieve inside(chicken, fryingpan)

behavior observe_chicken(chicken:item):
    body:
        observe(chicken, ""Check if the chicken is cooked"")

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove)
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        bind chicken: item where:
            is_food_chicken(chicken)
        bind oil: item where:
            is_oil(oil)
        
        if is_unplugged(stove):
            plug_in_stove(stove)

        if not is_clean(fryingpan):
            clean_fryingpan(fryingpan)

        if is_creamy(oil):
            add_oil_creamy(fryingpan, oil)

        heat_chicken(fryingpan, stove, chicken)
        observe_chicken(chicken)
",From function reset_sub_goal,,,,
cdl_dataset/dataset/Prepare_breakfast/g4.txt,k1,"missed actions: walk_executor(pot_2069);grab_executor(pot_2069);walk_executor(faucet_43);switchon_ex
ecutor(faucet_43);switchoff_executor(faucet_43);walk_executor(pot_2069);open_executor(pot_2069);walk
_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);walk_executor(dry_pas
ta_2042);grab_executor(dry_pasta_2042);walk_executor(pot_2069);putin_executor(dry_pasta_2042, pot_20
69);walk_executor(stove_2065);put_executor(pot_2069, stove_2065);switchon_executor(stove_2065);",missed action num: 479,,
cdl_dataset/dataset/Prepare_breakfast/g4.txt,k2,"missed actions: walk_executor(oil_2079);grab_executor(oil_2079);walk_executor(fryingpan_2083);putin_
executor(oil_2079, fryingpan_2083);walk_executor(fridge_289);switchoff_executor(fridge_289);open_exe
cutor(fridge_289);walk_executor(food_chicken_2017);grab_executor(food_chicken_2017);walk_executor(fr
yingpan_2083);putin_executor(food_chicken_2017, fryingpan_2083);grab_executor(fryingpan_2083);walk_e
xecutor(stove_2065);put_executor(fryingpan_2083, stove_2065);switchon_executor(stove_2065);",missed action num: 475,,
"Reset goals: The sub-goals are: 
['1. Cook the chicken and pasta together.', '2. Put the chicken pasta onto a plate.']",,,,,
" 
def has_stove(pot:item):
    # Determine whether this pot is on a stove
    symbol has_stove=exists stove:item: is_stove(stove) and on(pot, stove)
    return has_stove

behavior cook_chicken_and_pasta(chicken:item, dry_pasta:item, pot:item):
    body:
        achieve inside(chicken, pot)
        achieve inside(dry_pasta, pot)
        if has_stove(pot):
            bind stove: item where:
                is_stove(stove) and on(pot, stove)
            achieve_once is_on(stove)
            # If the pot is on a stove, turn it on to cook
            # No explicit keyword to cook, assume natural cooking upon turning stove on
    
behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select a chicken item
        bind dry_pasta: item where:
            is_dry_pasta(dry_pasta)
        # Select a dry pasta item
        bind pot: item where:
            is_pot(pot)
        # Select a pot
        cook_chicken_and_pasta(chicken, dry_pasta, pot)
",From function reset_goal,,,,
,,,,,"(CrowControllerApplier<walk_executor(kitchen_counter_230)>, CrowControllerApplier<exp(pot_2069, kitc
hen_counter_230)>, CrowControllerApplier<exp(food_chicken_2017, kitchen_counter_230)>, CrowControlle
rApplier<walk_executor(pot_2069)>, CrowControllerApplier<open_executor(pot_2069)>, CrowControllerApp
lier<walk_executor(food_chicken_2017)>, CrowControllerApplier<grab_executor(food_chicken_2017)>, Cro
wControllerApplier<walk_executor(pot_2069)>, CrowControllerApplier<putin_executor(food_chicken_2017,
 pot_2069)>, CrowControllerApplier<walk_executor(kitchen_counter_230)>, CrowControllerApplier<exp(dr
y_pasta_2042, kitchen_counter_230)>, CrowControllerApplier<walk_executor(dry_pasta_2042)>, CrowContr
ollerApplier<grab_executor(dry_pasta_2042)>, CrowControllerApplier<walk_executor(pot_2069)>, CrowCon
trollerApplier<putin_executor(dry_pasta_2042, pot_2069)>)"
" 
behavior cook_chicken_and_pasta(chicken:item, pasta:item, pot:item, stove:item):
    body:
        achieve inside(chicken, pot) 
        achieve inside(pasta, pot)
        achieve on(pot, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        
        bind pasta: item where:
            is_dry_pasta(pasta)
        
        bind pot: item where:
            is_pot(pot)
        
        bind stove: item where:
            is_stove(stove)

        assert close_char(char, stove)
        cook_chicken_and_pasta(chicken, pasta, pot, stove)
",From function reset_sub_goal,,,,
cdl_dataset/dataset/Prepare_breakfast/g4.txt,k1,"missed actions: walk_executor(pot_2069);grab_executor(pot_2069);walk_executor(faucet_43);switchon_ex
ecutor(faucet_43);switchoff_executor(faucet_43);walk_executor(pot_2069);open_executor(pot_2069);walk
_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);walk_executor(dry_pas
ta_2042);grab_executor(dry_pasta_2042);walk_executor(pot_2069);putin_executor(dry_pasta_2042, pot_20
69);walk_executor(stove_2065);put_executor(pot_2069, stove_2065);switchon_executor(stove_2065);",missed action num: 479,,
cdl_dataset/dataset/Prepare_breakfast/g4.txt,k2,"missed actions: walk_executor(oil_2079);grab_executor(oil_2079);walk_executor(fryingpan_2083);putin_
executor(oil_2079, fryingpan_2083);walk_executor(fridge_289);switchoff_executor(fridge_289);open_exe
cutor(fridge_289);walk_executor(food_chicken_2017);grab_executor(food_chicken_2017);walk_executor(fr
yingpan_2083);putin_executor(food_chicken_2017, fryingpan_2083);grab_executor(fryingpan_2083);walk_e
xecutor(stove_2065);put_executor(fryingpan_2083, stove_2065);switchon_executor(stove_2065);",missed action num: 475,,
"Reset goals: The sub-goals are: 
['1. Prepare and cook the chicken and pasta.', '2. Combine and finish the chicken pasta dish.', '3. 
Put the chicken pasta onto a plate.']",,,,,
