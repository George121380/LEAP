Goal Representation,Debug Result,Action,Add Info,LLM Answer,Plan
cdl_dataset/dataset/Prepare_breakfast/g2.txt,k1,"missed actions: walk_executor(oil_2079);grab_executor(oil_2079);walk_executor(fryingpan_2083);putin_
executor(oil_2079, fryingpan_2083);walk_executor(fridge_289);switchoff_executor(fridge_289);open_exe
cutor(fridge_289);walk_executor(food_egg_2020);grab_executor(food_egg_2020);walk_executor(fryingpan_
2083);putin_executor(food_egg_2020, fryingpan_2083);grab_executor(fryingpan_2083);walk_executor(stov
e_2065);put_executor(fryingpan_2083, stove_2065);switchon_executor(stove_2065);",missed action num: 463,,
"Reset goals: The sub-goals are: 
['1. Crack the eggs into a bowl and beat them.', '2. Heat the frying pan on the stove.', '3. Pour th
e beaten eggs into the frying pan and scramble them.']",,,,,
"
behavior crack_and_beat_eggs():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl
        
        foreach egg: item:
        # Process all items that are food eggs
            if is_food_egg(egg):
                achieve_once inhand(egg) # Temporarily hold the egg
                achieve inside(egg, bowl) # Crack the egg into the bowl
        
        # Assume theres already a method or automatic procedure to beat the eggs

behavior __goal__():
    body:
        crack_and_beat_eggs()
",From function reset_goal,,,,
,,,,,"(CrowControllerApplier<walk_executor(kitchen_counter_230)>, CrowControllerApplier<exp(food_egg_2020,
 kitchen_counter_230)>, CrowControllerApplier<walk_executor(food_egg_2020)>, CrowControllerApplier<g
rab_executor(food_egg_2020)>, CrowControllerApplier<walk_executor(kitchen_counter_230)>, CrowControl
lerApplier<exp(bowl_2071, kitchen_counter_230)>, CrowControllerApplier<walk_executor(bowl_2071)>, Cr
owControllerApplier<putin_executor(food_egg_2020, bowl_2071)>)"
" 
def has_eggs(egg:item, bowl:item):
    # Function to check if an egg is in the bowl
    symbol has_egg=inside(egg, bowl)
    return has_egg

behavior crack_egg_into_bowl(egg:item, bowl:item):
    body:
        achieve inside(egg, bowl) # Crack the egg into the bowl

behavior beat_eggs_in_bowl(bowl:item):
    body:
        achieve visited(bowl) # Beat the eggs in the bowl

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select an egg
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl
        crack_egg_into_bowl(egg, bowl)
        beat_eggs_in_bowl(bowl)
",From function reset_sub_goal,,,,
cdl_dataset/dataset/Prepare_breakfast/g2.txt,k1,"missed actions: walk_executor(oil_2079);grab_executor(oil_2079);walk_executor(fryingpan_2083);putin_
executor(oil_2079, fryingpan_2083);walk_executor(fridge_289);switchoff_executor(fridge_289);open_exe
cutor(fridge_289);walk_executor(food_egg_2020);grab_executor(food_egg_2020);walk_executor(fryingpan_
2083);putin_executor(food_egg_2020, fryingpan_2083);grab_executor(fryingpan_2083);walk_executor(stov
e_2065);put_executor(fryingpan_2083, stove_2065);switchon_executor(stove_2065);",missed action num: 463,,
,,,,,"(CrowControllerApplier<walk_executor(coffee_table_2068)>, CrowControllerApplier<exp(bowl_2071, coffe
e_table_2068)>, CrowControllerApplier<walk_executor(kitchen_counter_230)>, CrowControllerApplier<exp
(food_egg_2020, kitchen_counter_230)>, CrowControllerApplier<walk_executor(food_egg_2020)>, CrowCont
rollerApplier<grab_executor(food_egg_2020)>, CrowControllerApplier<walk_executor(bowl_2071)>, CrowCo
ntrollerApplier<putin_executor(food_egg_2020, bowl_2071)>, CrowControllerApplier<obs(bowl_2071, look
 around this place)>)"
" 
behavior crack_eggs_into_bowl(eggs:item, bowl:item):
    body:
        achieve inside(eggs, bowl)
        # Crack the eggs into the bowl

behavior beat_eggs(bowl:item):
    body:
        # Assuming the bowl with eggs is already in hand, beat them
        # As beating eggs involve continuous interaction, achieve_once inhand is not needed here 
        # Only need to perform action on standing state
        observe(bowl, ""Check the state of the eggs in the bowl and make sure they are ready to be be
aten"")

behavior __goal__():
    body:
        # Initially select items and locations as available
        bind eggs: item where:
            is_food_egg(eggs)
        bind bowl: item where:
            is_bowl(bowl)
        # Perform the cracking of eggs into the bowl
        crack_eggs_into_bowl(eggs, bowl)
        # Beat the eggs once they are in the bowl
        beat_eggs(bowl)
",From function reset_sub_goal,,,,
cdl_dataset/dataset/Prepare_breakfast/g2.txt,k1,"missed actions: walk_executor(oil_2079);grab_executor(oil_2079);walk_executor(fryingpan_2083);putin_
executor(oil_2079, fryingpan_2083);walk_executor(fridge_289);switchoff_executor(fridge_289);open_exe
cutor(fridge_289);walk_executor(food_egg_2020);grab_executor(food_egg_2020);walk_executor(fryingpan_
2083);putin_executor(food_egg_2020, fryingpan_2083);grab_executor(fryingpan_2083);walk_executor(stov
e_2065);put_executor(fryingpan_2083, stove_2065);switchon_executor(stove_2065);",missed action num: 463,,
,,,,,"(CrowControllerApplier<walk_executor(table_226)>, CrowControllerApplier<exp(bowl_2071, table_226)>, 
CrowControllerApplier<walk_executor(fridge_289)>, CrowControllerApplier<switchoff_executor(fridge_28
9)>, CrowControllerApplier<open_executor(fridge_289)>, CrowControllerApplier<exp(food_egg_2020, frid
ge_289)>, CrowControllerApplier<walk_executor(food_egg_2020)>, CrowControllerApplier<grab_executor(f
ood_egg_2020)>, CrowControllerApplier<walk_executor(bowl_2071)>, CrowControllerApplier<putin_executo
r(food_egg_2020, bowl_2071)>, CrowControllerApplier<obs(bowl_2071, Check the state of the eggs in th
e bowl and make sure they are ready to be beaten)>)"
" 
def has_bowlandegg(bowl:item):
    # Determine if there is an egg in the specified bowl
    symbol has_egg=exists o: item : is_food_egg(o) and inside(o, bowl)
    return has_egg

behavior crack_egg_into_bowl(egg:item, bowl:item):
    body:
        achieve inside(egg, bowl)
        # Crack the egg so that its inside the bowl

behavior beat_eggs_in_bowl(bowl:item):
    body:
        if has_bowlandegg(bowl):
            observe(bowl, ""Check items in the bowl for beating"")

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select an egg

        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl

        crack_egg_into_bowl(egg, bowl)
        beat_eggs_in_bowl(bowl)
",From function reset_sub_goal,,,,
cdl_dataset/dataset/Prepare_breakfast/g2.txt,k1,"missed actions: walk_executor(oil_2079);grab_executor(oil_2079);walk_executor(fryingpan_2083);putin_
executor(oil_2079, fryingpan_2083);walk_executor(fridge_289);switchoff_executor(fridge_289);open_exe
cutor(fridge_289);walk_executor(food_egg_2020);grab_executor(food_egg_2020);walk_executor(fryingpan_
2083);putin_executor(food_egg_2020, fryingpan_2083);grab_executor(fryingpan_2083);walk_executor(stov
e_2065);put_executor(fryingpan_2083, stove_2065);switchon_executor(stove_2065);",missed action num: 463,,
,,,,,"(CrowControllerApplier<walk_executor(kitchen_counter_230)>, CrowControllerApplier<exp(bowl_2071, kit
chen_counter_230)>, CrowControllerApplier<walk_executor(fridge_289)>, CrowControllerApplier<switchof
f_executor(fridge_289)>, CrowControllerApplier<open_executor(fridge_289)>, CrowControllerApplier<exp
(food_egg_2020, fridge_289)>, CrowControllerApplier<walk_executor(food_egg_2020)>, CrowControllerApp
lier<grab_executor(food_egg_2020)>, CrowControllerApplier<walk_executor(bowl_2071)>, CrowControllerA
pplier<putin_executor(food_egg_2020, bowl_2071)>, CrowControllerApplier<obs(bowl_2071, Check items i
n the bowl for beating)>)"
" 
def has_eggs_in_bowl(bowl:item):
    # Function to check if there are eggs in the specified bowl
    symbol has_eggs=exists o: item : is_food_egg(o) and inside(o, bowl)
    return has_eggs

behavior crack_and_beat_eggs(bowl:item):
    body:
        foreach egg: item:
            if is_food_egg(egg) and not inside(egg, bowl):
                achieve_once inhand(egg)
                achieve inside(egg, bowl)
                # Crack each egg into the bowl
        # Beat the eggs that are inside the bowl

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl object
        
        if not has_eggs_in_bowl(bowl):
            # If the eggs are not currently in the bowl, begin process of cracking and beating them
            crack_and_beat_eggs(bowl)
",From function reset_sub_goal,,,,
cdl_dataset/dataset/Prepare_breakfast/g2.txt,k1,"missed actions: walk_executor(oil_2079);grab_executor(oil_2079);walk_executor(fryingpan_2083);putin_
executor(oil_2079, fryingpan_2083);walk_executor(fridge_289);switchoff_executor(fridge_289);open_exe
cutor(fridge_289);walk_executor(food_egg_2020);grab_executor(food_egg_2020);walk_executor(fryingpan_
2083);putin_executor(food_egg_2020, fryingpan_2083);grab_executor(fryingpan_2083);walk_executor(stov
e_2065);put_executor(fryingpan_2083, stove_2065);switchon_executor(stove_2065);",missed action num: 463,,
,,,,,"(CrowControllerApplier<walk_executor(fridge_289)>, CrowControllerApplier<switchoff_executor(fridge_2
89)>, CrowControllerApplier<open_executor(fridge_289)>, CrowControllerApplier<exp(food_egg_2020, fri
dge_289)>, CrowControllerApplier<walk_executor(food_egg_2020)>, CrowControllerApplier<grab_executor(
food_egg_2020)>, CrowControllerApplier<walk_executor(kitchen_counter_230)>, CrowControllerApplier<ex
p(bowl_2071, kitchen_counter_230)>, CrowControllerApplier<walk_executor(bowl_2071)>, CrowControllerA
pplier<putin_executor(food_egg_2020, bowl_2071)>)"
" 
behavior crack_and_beat_eggs(eggs:item, bowl:item):
    body:
        achieve inside(eggs, bowl)
        # Place eggs into the bowl

        achieve cut(eggs)
        # This simulates cracking the eggs into the bowl

        achieve dirty(bowl)
        # Simulate mixing or beating eggs to dirty the bowl

behavior __goal__():
    body:
        bind eggs: item where:
            is_food_egg(eggs)
        # Select eggs

        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl

        crack_and_beat_eggs(eggs, bowl)
        # Crack and beat the eggs into the bowl
",From function reset_sub_goal,,,,
cdl_dataset/dataset/Prepare_breakfast/g2.txt,k1,"missed actions: walk_executor(oil_2079);grab_executor(oil_2079);walk_executor(fryingpan_2083);putin_
executor(oil_2079, fryingpan_2083);walk_executor(fridge_289);switchoff_executor(fridge_289);open_exe
cutor(fridge_289);walk_executor(food_egg_2020);grab_executor(food_egg_2020);walk_executor(fryingpan_
2083);putin_executor(food_egg_2020, fryingpan_2083);grab_executor(fryingpan_2083);walk_executor(stov
e_2065);put_executor(fryingpan_2083, stove_2065);switchon_executor(stove_2065);",missed action num: 463,,
"Reset goals: The sub-goals are: 
['1. Crack the eggs into a bowl and beat them.', '2. Heat a frying pan on the stove and add some oil
.', '3. Pour the beaten eggs into the frying pan and scramble them until cooked.']",,,,,
" 
behavior crack_and_beat_eggs(egg:item, bowl:item):
    body:
        achieve inside(egg, bowl)
        # Ensure the egg is placed inside the bowl
        achieve clean(egg)
        # Ensure the egg is in a clean state before cracking
        # Additional logic to crack the egg will be handled by the algorithm

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select an egg item
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl
        crack_and_beat_eggs(egg, bowl)
",From function reset_goal,,,,
,,,,,"(CrowControllerApplier<walk_executor(kitchen_counter_230)>, CrowControllerApplier<exp(bowl_2071, kit
chen_counter_230)>, CrowControllerApplier<walk_executor(cupboard_229)>, CrowControllerApplier<open_e
xecutor(cupboard_229)>, CrowControllerApplier<exp(food_egg_2020, cupboard_229)>, CrowControllerAppli
er<walk_executor(food_egg_2020)>, CrowControllerApplier<grab_executor(food_egg_2020)>, CrowControlle
rApplier<walk_executor(bowl_2071)>, CrowControllerApplier<putin_executor(food_egg_2020, bowl_2071)>,
 CrowControllerApplier<walk_executor(food_egg_2020)>, CrowControllerApplier<wash_executor(food_egg_2
020)>)"
" 
def is_kitchen_counter(x: item):
    # Function to check if an item is a known kitchen counter
    return is_kitchen_counter(x)

behavior beat_eggs(eggs:item, bowl:item):
    # Beat the eggs in the bowl
    body:
        achieve inside(eggs, bowl)
        # Ensure eggs are inside the bowl
        achieve cut(eggs)
        # Beat or cut the eggs to scramble them

behavior __goal__():
    body:
        bind eggs: item where:
            is_food_egg(eggs)
        # Bind the eggs

        bind bowl: item where:
            is_bowl(bowl)
        # Bind a bowl

        beat_eggs(eggs, bowl)
        # Beat the eggs into the bowl
",From function reset_sub_goal,,,,
cdl_dataset/dataset/Prepare_breakfast/g2.txt,k1,"missed actions: walk_executor(oil_2079);grab_executor(oil_2079);walk_executor(fryingpan_2083);putin_
executor(oil_2079, fryingpan_2083);walk_executor(fridge_289);switchoff_executor(fridge_289);open_exe
cutor(fridge_289);walk_executor(food_egg_2020);grab_executor(food_egg_2020);walk_executor(fryingpan_
2083);putin_executor(food_egg_2020, fryingpan_2083);grab_executor(fryingpan_2083);walk_executor(stov
e_2065);put_executor(fryingpan_2083, stove_2065);switchon_executor(stove_2065);",missed action num: 463,,
"Reset goals: The sub-goals are: 
['1. Crack the eggs into a bowl and beat them.', '2. Heat the frying pan on the stove.', '3. Pour th
e beaten eggs into the frying pan and scramble them until cooked.']",,,,,
" 
def has_eggs_in_bowl(bowl:item):
    # Function to check if there are eggs in a specified bowl
    symbol has_eggs=exists o: item : is_food_egg(o) and inside(o, bowl)
    return has_eggs

behavior crack_eggs_into_bowl(egg:item, bowl:item):
    body:
        achieve inside(egg, bowl)
        # Place the cracked egg in the bowl

behavior beat_eggs(bowl:item):
    body:
        achieve is_off(bowl)
        # Complete the beating process with eggs inside the bowl (closure of behavior)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl
        
        bind egg1: item where:
            is_food_egg(egg1)
        # Select the first egg
        
        crack_eggs_into_bowl(egg1, bowl)
        beat_eggs(bowl)
",From function reset_goal,,,,
"Reset goals: The sub-goals are: 
['1. Crack the eggs into a bowl and beat them.', '2. Heat the frying pan with some oil or butter.', 
'3. Pour the beaten eggs into the heated frying pan and scramble them until cooked.']",,,,,
" 
def has_eggs_in_fridge(fridge:item):
    # Function to check if there are eggs inside a fridge
    symbol has_eggs=exists o: item : is_food_egg(o) and inside(o, fridge)
    return has_eggs

behavior get_eggs_from_fridge(fridge:item, bowl:item):
    body:
        foreach egg: item:
            if is_food_egg(egg) and inside(egg, fridge):
                achieve_once inhand(egg)
                achieve inside(egg, bowl)

behavior beat_eggs(bowl:item):
    body:
        achieve cut(bowl) # Assuming cut is used to beat the contents

behavior __goal__():
    body:
        bind fridge: item where:
            is_fridge(fridge)
        bind bowl: item where:
            is_bowl(bowl)
        
        if has_eggs_in_fridge(fridge):
            get_eggs_from_fridge(fridge, bowl)
            beat_eggs(bowl)
        else:
            observe(fridge, ""Check is there any food egg inside fridge"")
",From function reset_goal,,,,
cdl_dataset/dataset/Prepare_breakfast/g2.txt,k1,"missed actions: walk_executor(oil_2079);grab_executor(oil_2079);walk_executor(fryingpan_2083);putin_
executor(oil_2079, fryingpan_2083);walk_executor(fridge_289);switchoff_executor(fridge_289);open_exe
cutor(fridge_289);walk_executor(food_egg_2020);grab_executor(food_egg_2020);walk_executor(fryingpan_
2083);putin_executor(food_egg_2020, fryingpan_2083);grab_executor(fryingpan_2083);walk_executor(stov
e_2065);put_executor(fryingpan_2083, stove_2065);switchon_executor(stove_2065);",missed action num: 463,,
cdl_dataset/dataset/Prepare_breakfast/g2.txt,k1,"missed actions: walk_executor(oil_2079);grab_executor(oil_2079);walk_executor(fryingpan_2083);putin_
executor(oil_2079, fryingpan_2083);walk_executor(fridge_289);switchoff_executor(fridge_289);open_exe
cutor(fridge_289);walk_executor(food_egg_2020);grab_executor(food_egg_2020);walk_executor(fryingpan_
2083);putin_executor(food_egg_2020, fryingpan_2083);grab_executor(fryingpan_2083);walk_executor(stov
e_2065);put_executor(fryingpan_2083, stove_2065);switchon_executor(stove_2065);",missed action num: 463,,
