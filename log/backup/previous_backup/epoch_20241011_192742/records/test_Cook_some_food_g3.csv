Goal Representation,Debug Result,Action,Add Info,LLM Answer,Plan
cdl_dataset/dataset/Cook_some_food/g3.txt,k1,"missed actions: walk_executor(pot_2069);open_executor(pot_2069);walk_executor(fridge_289);switchoff_
executor(fridge_289);open_executor(fridge_289);walk_executor(food_vegetable_2041);grab_executor(food
_vegetable_2041);walk_executor(pot_2069);putin_executor(food_vegetable_2041, pot_2069);grab_executor
(pot_2069);walk_executor(stove_2065);put_executor(pot_2069, stove_2065);switchon_executor(stove_2065
);",missed action num: 386,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k2,"missed actions: walk_executor(pot_2069);open_executor(pot_2069);walk_executor(fridge_289);switchoff_
executor(fridge_289);open_executor(fridge_289);walk_executor(food_vegetable_2041);grab_executor(food
_vegetable_2041);walk_executor(pot_2069);putin_executor(food_vegetable_2041, pot_2069);walk_executor
(stove_2065);open_executor(stove_2065);walk_executor(pot_2069);grab_executor(pot_2069);walk_executor
(stove_2065);putin_executor(pot_2069, stove_2065);close_executor(stove_2065);switchon_executor(stove
_2065);",missed action num: 491,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k3,"missed actions: walk_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);w
alk_executor(food_vegetable_2041);grab_executor(food_vegetable_2041);walk_executor(bowl_2071);putin_
executor(food_vegetable_2041, bowl_2071);",missed action num: 225,,
"Reset goals: The sub-goals are: 
['1. Wash all the vegetables.', '2. Put the vegetables in a pot and boil them on the stove.', '3. Co
ol the boiled vegetables in a bowl.']",,,,,
" 
def is_vegetable(x:item):
    # Function to determine if an item is a vegetable
    return is_food_vegetable(x)

def has_faucet(sink:item):
    # Determine if the sink has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet,sink)
    return has_faucet

behavior wash_vegetable(vegetable:item, sink:item):
    body:
        achieve_once inside(vegetable, sink)
        # Ensure the vegetable is placed inside the sink

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet,sink)
            achieve_once is_on(faucet)
            # If the sink has a faucet, turn it on to wash the vegetable

        wash(vegetable) # This is the key step of the behavior, for cleaning the vegetable
        
        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet,sink)
            achieve_once is_off(faucet)
            # If the sink has a faucet, turn it off after washing

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink)
        # Select a sink for washing
        
        foreach vegetable: item:
            if is_vegetable(vegetable) and dirty(vegetable):
                wash_vegetable(vegetable, sink)
",From function reset_goal,,,,
"Reset goals: The sub-goals are: 
['1. Wash all the vegetables.', '2. Put the washed vegetables in a pot and boil them on the stove.',
 '3. Transfer the boiled vegetables to a bowl and cool them.']",,,,,
"
behavior wash_vegetable(vegetable:item, sink:item, faucet:item):
    body:
        achieve inside(vegetable, sink)
        if is_faucet(faucet) and close(faucet, sink):
            achieve_once is_on(faucet)
            wash(vegetable)
            achieve_once is_off(faucet)
        else:
            wash(vegetable)

behavior __goal__():
    body:
        foreach vegetable: item:
            if is_food_vegetable(vegetable) and dirty(vegetable):
                bind sink: item where:
                    is_sink(sink)
                bind faucet: item where:
                    is_faucet(faucet) and close(faucet, sink)
                wash_vegetable(vegetable, sink, faucet)
",From function reset_goal,,,,
"Reset goals: The sub-goals are: 
['1. Wash all the vegetables.', '2. Put the vegetables in a pot and boil them on the stove.', '3. Co
ol the boiled vegetables in a bowl.']",,,,,
" 
behavior wash_vegetable(vegetable:item):
    body:
        achieve clean(vegetable)
        # Achieve the state where the vegetable is clean

behavior __goal__():
    body:
        foreach vegetable: item:
            # Focus on vegetables that need to be washed
            if is_food_vegetable(vegetable) and dirty(vegetable):
                # If the vegetable is identified as dirty
                wash_vegetable(vegetable)
",From function reset_goal,,,,
"Reset goals: The sub-goals are: 
['1. Wash all the vegetables.', '2. Put the washed vegetables in a pot and boil them on the stove.',
 '3. Cool the boiled vegetables in a bowl.']",,,,,
" 
def is_washable_vegetable(obj: item):
    # Check if the item is a washable vegetable
    symbol is_vegetable= is_food_vegetable(obj)
    return is_vegetable

def has_faucet(sink:item):
    # Determine whether this sink has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet,sink)
    return has_faucet

behavior wash_vegetable(vegetable:item, sink:item):
    body:
        achieve inside(vegetable, sink)
        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            wash(vegetable)
            achieve_once is_off(faucet)
        else:
            wash(vegetable)

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink)
        
        foreach vegetable: item:
            if is_washable_vegetable(vegetable) and dirty(vegetable):
                wash_vegetable(vegetable, sink)
",From function reset_goal,,,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k1,"missed actions: walk_executor(pot_2069);open_executor(pot_2069);walk_executor(fridge_289);switchoff_
executor(fridge_289);open_executor(fridge_289);walk_executor(food_vegetable_2041);grab_executor(food
_vegetable_2041);walk_executor(pot_2069);putin_executor(food_vegetable_2041, pot_2069);grab_executor
(pot_2069);walk_executor(stove_2065);put_executor(pot_2069, stove_2065);switchon_executor(stove_2065
);",missed action num: 386,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k2,"missed actions: walk_executor(pot_2069);open_executor(pot_2069);walk_executor(fridge_289);switchoff_
executor(fridge_289);open_executor(fridge_289);walk_executor(food_vegetable_2041);grab_executor(food
_vegetable_2041);walk_executor(pot_2069);putin_executor(food_vegetable_2041, pot_2069);walk_executor
(stove_2065);open_executor(stove_2065);walk_executor(pot_2069);grab_executor(pot_2069);walk_executor
(stove_2065);putin_executor(pot_2069, stove_2065);close_executor(stove_2065);switchon_executor(stove
_2065);",missed action num: 491,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k1,"missed actions: walk_executor(pot_2069);open_executor(pot_2069);walk_executor(fridge_289);switchoff_
executor(fridge_289);open_executor(fridge_289);walk_executor(food_vegetable_2041);grab_executor(food
_vegetable_2041);walk_executor(pot_2069);putin_executor(food_vegetable_2041, pot_2069);grab_executor
(pot_2069);walk_executor(stove_2065);put_executor(pot_2069, stove_2065);switchon_executor(stove_2065
);",missed action num: 386,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k2,"missed actions: walk_executor(pot_2069);open_executor(pot_2069);walk_executor(fridge_289);switchoff_
executor(fridge_289);open_executor(fridge_289);walk_executor(food_vegetable_2041);grab_executor(food
_vegetable_2041);walk_executor(pot_2069);putin_executor(food_vegetable_2041, pot_2069);walk_executor
(stove_2065);open_executor(stove_2065);walk_executor(pot_2069);grab_executor(pot_2069);walk_executor
(stove_2065);putin_executor(pot_2069, stove_2065);close_executor(stove_2065);switchon_executor(stove
_2065);",missed action num: 491,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k3,"missed actions: walk_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);w
alk_executor(food_vegetable_2041);grab_executor(food_vegetable_2041);walk_executor(bowl_2071);putin_
executor(food_vegetable_2041, bowl_2071);",missed action num: 225,,
