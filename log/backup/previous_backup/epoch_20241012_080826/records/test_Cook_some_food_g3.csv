Goal Representation,Debug Result,Action,Add Info,LLM Answer,Plan
cdl_dataset/dataset/Cook_some_food/g3.txt,k1,"missed actions: walk_executor(pot_2069);open_executor(pot_2069);walk_executor(fridge_289);switchoff_
executor(fridge_289);open_executor(fridge_289);walk_executor(food_vegetable_2041);grab_executor(food
_vegetable_2041);walk_executor(pot_2069);putin_executor(food_vegetable_2041, pot_2069);grab_executor
(pot_2069);walk_executor(stove_2065);put_executor(pot_2069, stove_2065);switchon_executor(stove_2065
);",missed action num: 386,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k2,"missed actions: walk_executor(pot_2069);open_executor(pot_2069);walk_executor(fridge_289);switchoff_
executor(fridge_289);open_executor(fridge_289);walk_executor(food_vegetable_2041);grab_executor(food
_vegetable_2041);walk_executor(pot_2069);putin_executor(food_vegetable_2041, pot_2069);walk_executor
(stove_2065);open_executor(stove_2065);walk_executor(pot_2069);grab_executor(pot_2069);walk_executor
(stove_2065);putin_executor(pot_2069, stove_2065);close_executor(stove_2065);switchon_executor(stove
_2065);",missed action num: 491,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k3,"missed actions: walk_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);w
alk_executor(food_vegetable_2041);grab_executor(food_vegetable_2041);walk_executor(bowl_2071);putin_
executor(food_vegetable_2041, bowl_2071);",missed action num: 225,,
"Reset goals: The sub-goals are: 
['1. Wash all the vegetables.', '2. Put the vegetables in a pot and boil them on the stove.', '3. Co
ol the boiled vegetables in a bowl.']",,,,,
" 
def is_food_vegetable_in_hand():
    # Check if the vegetable is currently in hand
    symbol vegetable_in_hand = exists vegetable: item : is_food_vegetable(vegetable) and inhand(vege
table)
    return vegetable_in_hand

behavior wash_vegetable(vegetable:item, sink:item):
    body:
        achieve inside(vegetable, sink)
        if exists faucet: item : is_faucet(faucet) and close(faucet, sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            wash(vegetable)
            achieve_once is_off(faucet)
        else:
            wash(vegetable)

behavior __goal__():
    body:
        foreach vegetable: item:
            if is_food_vegetable(vegetable) and dirty(vegetable):
                bind sink: item where:
                    is_sink(sink)
                wash_vegetable(vegetable, sink)

",From function reset_goal,,,,
"Reset goals: The sub-goals are: 
['1. Wash all the vegetables.', '2. Put the washed vegetables in a pot and boil them on the stove.',
 '3. Transfer the boiled vegetables to a bowl to cool.']",,,,,
" 
def is_food_vegetable_instance(item: item):
    # Check if an item is a food vegetable
    return is_food_vegetable(item)

behavior wash_all_vegetables(vegetable: item):
    body:
        bind sink: item where:
            is_sink(sink)
        # Determine the sink to use for washing the vegetables

        achieve inside(vegetable, sink)
        # Ensure the vegetable is placed inside the sink

        if exists faucet: item : is_faucet(faucet) and close(faucet, sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            # Turn on the faucet if present for cleaning

        wash(vegetable)
        # The action of washing the vegetable

        if exists faucet: item : is_faucet(faucet) and close(faucet, sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_off(faucet)
            # Turn off the faucet after cleaning

behavior __goal__():
    body:
        foreach vegetable: item:
            if is_food_vegetable(vegetable) and dirty(vegetable):
                wash_all_vegetables(vegetable)
",From function reset_goal,,,,
"Reset goals: The sub-goals are: 
['1. Wash all the vegetables.', '2. Put the vegetables in a pot and boil them on the stove.', '3. Co
ol the vegetables in a bowl.']",,,,,
"
behavior clean_vegetables(vegetable:item, sink:item, faucet:item):
    body:
        achieve_once inside(vegetable, sink)
        # Ensure the vegetable is placed inside the sink first

        if is_faucet(faucet) and close(faucet, sink):
            achieve_once is_on(faucet)
            # Turn on the faucet if available

        wash(vegetable)
        # Wash the vegetable thoroughly

        if is_faucet(faucet) and close(faucet, sink):
            achieve_once is_off(faucet)
            # Turn off the faucet after washing

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink)
        # Select a sink to wash vegetables

        bind faucet: item where:
            is_faucet(faucet)
        # Bind a faucet for use in cleaning

        foreach vegetable: item:
            if is_food_vegetable(vegetable) and dirty(vegetable):
                clean_vegetables(vegetable, sink, faucet)
        # Wash all dirty vegetables
",From function reset_goal,,,,
"Reset goals: The sub-goals are: 
['1. Wash all the vegetables.', '2. Put the washed vegetables in a pot and boil them on the stove.',
 '3. Cool the boiled vegetables in a bowl.']",,,,,
" 
behavior wash_all_vegetables():
    body:
        foreach vegetable: item:
            if is_food_vegetable(vegetable) and dirty(vegetable):
                wash(vegetable)
                # Wash each vegetable that is classified as food and is dirty
                
behavior __goal__():
    body:
        wash_all_vegetables()
",From function reset_goal,,,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k1,"missed actions: walk_executor(pot_2069);open_executor(pot_2069);walk_executor(fridge_289);switchoff_
executor(fridge_289);open_executor(fridge_289);walk_executor(food_vegetable_2041);grab_executor(food
_vegetable_2041);walk_executor(pot_2069);putin_executor(food_vegetable_2041, pot_2069);grab_executor
(pot_2069);walk_executor(stove_2065);put_executor(pot_2069, stove_2065);switchon_executor(stove_2065
);",missed action num: 386,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k2,"missed actions: walk_executor(pot_2069);open_executor(pot_2069);walk_executor(fridge_289);switchoff_
executor(fridge_289);open_executor(fridge_289);walk_executor(food_vegetable_2041);grab_executor(food
_vegetable_2041);walk_executor(pot_2069);putin_executor(food_vegetable_2041, pot_2069);walk_executor
(stove_2065);open_executor(stove_2065);walk_executor(pot_2069);grab_executor(pot_2069);walk_executor
(stove_2065);putin_executor(pot_2069, stove_2065);close_executor(stove_2065);switchon_executor(stove
_2065);",missed action num: 491,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k1,"missed actions: walk_executor(pot_2069);open_executor(pot_2069);walk_executor(fridge_289);switchoff_
executor(fridge_289);open_executor(fridge_289);walk_executor(food_vegetable_2041);grab_executor(food
_vegetable_2041);walk_executor(pot_2069);putin_executor(food_vegetable_2041, pot_2069);grab_executor
(pot_2069);walk_executor(stove_2065);put_executor(pot_2069, stove_2065);switchon_executor(stove_2065
);",missed action num: 386,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k2,"missed actions: walk_executor(pot_2069);open_executor(pot_2069);walk_executor(fridge_289);switchoff_
executor(fridge_289);open_executor(fridge_289);walk_executor(food_vegetable_2041);grab_executor(food
_vegetable_2041);walk_executor(pot_2069);putin_executor(food_vegetable_2041, pot_2069);walk_executor
(stove_2065);open_executor(stove_2065);walk_executor(pot_2069);grab_executor(pot_2069);walk_executor
(stove_2065);putin_executor(pot_2069, stove_2065);close_executor(stove_2065);switchon_executor(stove
_2065);",missed action num: 491,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k3,"missed actions: walk_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);w
alk_executor(food_vegetable_2041);grab_executor(food_vegetable_2041);walk_executor(bowl_2071);putin_
executor(food_vegetable_2041, bowl_2071);",missed action num: 225,,
