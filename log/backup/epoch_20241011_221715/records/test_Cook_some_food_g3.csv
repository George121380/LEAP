Goal Representation,Debug Result,Action,Add Info,LLM Answer,Plan
cdl_dataset/dataset/Cook_some_food/g3.txt,k1,"missed actions: walk_executor(pot_2069);open_executor(pot_2069);walk_executor(fridge_289);switchoff_
executor(fridge_289);open_executor(fridge_289);walk_executor(food_vegetable_2041);grab_executor(food
_vegetable_2041);walk_executor(pot_2069);putin_executor(food_vegetable_2041, pot_2069);grab_executor
(pot_2069);walk_executor(stove_2065);put_executor(pot_2069, stove_2065);switchon_executor(stove_2065
);",missed action num: 386,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k2,"missed actions: walk_executor(pot_2069);open_executor(pot_2069);walk_executor(fridge_289);switchoff_
executor(fridge_289);open_executor(fridge_289);walk_executor(food_vegetable_2041);grab_executor(food
_vegetable_2041);walk_executor(pot_2069);putin_executor(food_vegetable_2041, pot_2069);walk_executor
(stove_2065);open_executor(stove_2065);walk_executor(pot_2069);grab_executor(pot_2069);walk_executor
(stove_2065);putin_executor(pot_2069, stove_2065);close_executor(stove_2065);switchon_executor(stove
_2065);",missed action num: 491,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k3,"missed actions: walk_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);w
alk_executor(food_vegetable_2041);grab_executor(food_vegetable_2041);walk_executor(bowl_2071);putin_
executor(food_vegetable_2041, bowl_2071);",missed action num: 225,,
"Reset goals: The sub-goals are: 
['1. Wash all the vegetables.', '2. Put the vegetables in a pot and boil them on the stove.', '3. Co
ol the boiled vegetables in a bowl.']",,,,,
"behavior wash_vegetable(vegetable:item, sink:item):
    body:
        achieve_once inside(vegetable, sink)
        # Place the vegetable inside the sink for washing

        if exists faucet:item: is_faucet(faucet) and close(faucet, sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            # Turn on the faucet if available for washing the vegetable

        wash(vegetable)
        # Perform the washing action on the vegetable

        if exists faucet:item: is_faucet(faucet) and close(faucet, sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_off(faucet)
            # Turn off the faucet after washing the vegetable

behavior __goal__():
    body:
        foreach vegetable: item:
            if is_food_vegetable(vegetable) and dirty(vegetable):
                # Identify all dirty vegetables to wash
                bind sink: item where:
                    is_sink(sink)
                # Select a sink for washing vegetables
                wash_vegetable(vegetable, sink)
                # Execute the washing behavior on the identified vegetable",From function reset_goal,,,,
"Reset goals: The sub-goals are: 
['1. Wash all the vegetables.', '2. Put the vegetables in a pot and boil them on the stove.', '3. Co
ol the boiled vegetables in a bowl.']",,,,,
" 
behavior wash_vegetable(vegetable:item):
    body:
        achieve clean(vegetable)
        # Achieve the state where the vegetable is clean

behavior __goal__():
    body:
        foreach vegetable: item:
            # Iterate over all items that are vegetables
            if is_food_vegetable(vegetable):
                achieve dirty(vegetable)
                # Check that the vegetable is currently dirty
                wash_vegetable(vegetable)
                # Wash the vegetable to clean it
",From function reset_goal,,,,
"Reset goals: The sub-goals are: 
['1. Wash all the vegetables.', '2. Put the vegetables in a pot and boil them on the stove.', '3. Co
ol the boiled vegetables in a bowl.']",,,,,
"
def has_food_on_vegetable(vegetable:item):
    # Function to determine if a specified item is a vegetable
    symbol is_veggie=exists v: item : is_food_vegetable(v) and v==vegetable
    return is_veggie

behavior wash_vegetable(vegetable:item):
    # Define behavior to wash the vegetable
    body:
        wash(vegetable)

behavior __goal__():
    body:
        foreach vegetable: item:
            if is_food_vegetable(vegetable) and dirty(vegetable):
                # For every vegetable that is dirty, perform actions to wash it
                wash_vegetable(vegetable)
",From function reset_goal,,,,
"Reset goals: The sub-goals are: 
['1. Wash all the vegetables thoroughly.', '2. Put the washed vegetables in a pot.', '3. Boil the ve
getables on the stove.', '4. Cool the boiled vegetables in a bowl.']",,,,,
" 
def has_faucet(sink:item):
    # Determine whether this sink has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet,sink)
    return has_faucet

behavior clean_vegetable(vegetable:item, sink:item):
    # Define the behavior for cleaning vegetables in the sink
    body:
        achieve_once inside(vegetable, sink)
        # Place the vegetable inside the sink

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet,sink)
            achieve_once is_on(faucet)
            # If the sink has a faucet, turn it on to clean

        wash(vegetable) # Main step for cleaning the vegetable
        
        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet,sink)
            achieve_once is_off(faucet)
            # Turn off faucet after cleaning

behavior __goal__():
    # Main goal to clean all vegetables
    body:
        bind sink: item where:
            is_sink(sink)
        # Bind a sink for cleaning

        foreach vegetable: item:
            if is_food_vegetable(vegetable) and dirty(vegetable):
                # Check for dirty vegetables
                clean_vegetable(vegetable, sink)
",From function reset_goal,,,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k1,"missed actions: walk_executor(pot_2069);open_executor(pot_2069);walk_executor(fridge_289);switchoff_
executor(fridge_289);open_executor(fridge_289);walk_executor(food_vegetable_2041);grab_executor(food
_vegetable_2041);walk_executor(pot_2069);putin_executor(food_vegetable_2041, pot_2069);grab_executor
(pot_2069);walk_executor(stove_2065);put_executor(pot_2069, stove_2065);switchon_executor(stove_2065
);",missed action num: 386,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k2,"missed actions: walk_executor(pot_2069);open_executor(pot_2069);walk_executor(fridge_289);switchoff_
executor(fridge_289);open_executor(fridge_289);walk_executor(food_vegetable_2041);grab_executor(food
_vegetable_2041);walk_executor(pot_2069);putin_executor(food_vegetable_2041, pot_2069);walk_executor
(stove_2065);open_executor(stove_2065);walk_executor(pot_2069);grab_executor(pot_2069);walk_executor
(stove_2065);putin_executor(pot_2069, stove_2065);close_executor(stove_2065);switchon_executor(stove
_2065);",missed action num: 491,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k1,"missed actions: walk_executor(pot_2069);open_executor(pot_2069);walk_executor(fridge_289);switchoff_
executor(fridge_289);open_executor(fridge_289);walk_executor(food_vegetable_2041);grab_executor(food
_vegetable_2041);walk_executor(pot_2069);putin_executor(food_vegetable_2041, pot_2069);grab_executor
(pot_2069);walk_executor(stove_2065);put_executor(pot_2069, stove_2065);switchon_executor(stove_2065
);",missed action num: 386,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k2,"missed actions: walk_executor(pot_2069);open_executor(pot_2069);walk_executor(fridge_289);switchoff_
executor(fridge_289);open_executor(fridge_289);walk_executor(food_vegetable_2041);grab_executor(food
_vegetable_2041);walk_executor(pot_2069);putin_executor(food_vegetable_2041, pot_2069);walk_executor
(stove_2065);open_executor(stove_2065);walk_executor(pot_2069);grab_executor(pot_2069);walk_executor
(stove_2065);putin_executor(pot_2069, stove_2065);close_executor(stove_2065);switchon_executor(stove
_2065);",missed action num: 491,,
cdl_dataset/dataset/Cook_some_food/g3.txt,k3,"missed actions: walk_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);w
alk_executor(food_vegetable_2041);grab_executor(food_vegetable_2041);walk_executor(bowl_2071);putin_
executor(food_vegetable_2041, bowl_2071);",missed action num: 225,,
