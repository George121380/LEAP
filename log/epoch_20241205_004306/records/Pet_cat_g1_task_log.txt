From agent.py
Reset goals: The sub-goals are: 
['1. Locate the cat.', '2. Touch the cat.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cat_2032_around_couch_269(cat:item):
    goal: not unknown(cat)
    body:
        assert is_cat(cat)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==269
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(cat,couch_instance)
        else:
            exp(cat,couch_instance)
    eff:
        unknown[cat]=False
        close[cat,couch_instance]=True
        close[couch_instance,cat]=True
    

#exp_behavior_end

#goal_representation
 
def is_cat_found(cat:item):
    # Function to check if the cat has been located
    symbol cat_found=exists c: item : is_cat(c) and visited(c)
    return cat_found

behavior __goal__():
    body:
        if exists cat: item : is_cat(cat) and visited(cat):
            # If the cat has already been located, move the character closer to it
            bind cat: item where:
                is_cat(cat) and visited(cat)
            achieve close_char(char, cat)
        
        else:
            # Observe all potential cat locations that have not been visited
            foreach potential_cat_location: item:
                if is_cat(potential_cat_location) and not visited(potential_cat_location):
                    observe(potential_cat_location, "Check if the cat is at this location")

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_cat_found(cat:item):
    # Function to check if the cat has been located
    symbol cat_found=exists c: item : is_cat(c) and visited(c)
    return cat_found

behavior __goal__():
    body:
        if exists cat: item : is_cat(cat) and visited(cat):
            # If the cat has already been located, move the character closer to it
            bind cat: item where:
                is_cat(cat) and visited(cat)
            achieve close_char(char, cat)
        
        else:
            # Observe all potential cat locations that have not been visited
            foreach potential_cat_location: item:
                if is_cat(potential_cat_location) and not visited(potential_cat_location):
                    observe(potential_cat_location, "Check if the cat is at this location")

##############################
From agent.py-> find a plan in act()
walk_executor(couch_269)exp(cat_2127, couch_269)walk_executor(cat_2127)obs(cat_2127, Check if the cat is at this location)walk_executor(couch_269)exp(cat_2032, couch_269)walk_executor(cat_2032)obs(cat_2032, Check if the cat is at this location)walk_executor(couch_269)exp(cat_2069, couch_269)walk_executor(cat_2069)obs(cat_2069, Check if the cat is at this location)
##############################
From agent.py
walk_executor(couch_269)
Find brush_2002. Find drawing_288. Find pillow_287. Find shoes_2033. Find phone_2017. Find pillow_286. Robot is inside home_office_241. Robot is close couch_269. Robot is no longer inside dining_room_41.
##############################
From agent.py
exp(cat_2127, couch_269)
Failed to find cat_2127 around couch_269. 
##############################
From agent.py-> find a plan in act()
walk_executor(couch_198)exp(cat_2127, couch_198)walk_executor(cat_2127)obs(cat_2127, Check if the cat is at this location)walk_executor(couch_198)exp(cat_2032, couch_198)walk_executor(cat_2032)obs(cat_2032, Check if the cat is at this location)walk_executor(cat_2069)obs(cat_2069, Check if the cat is at this location)
##############################
From agent.py
walk_executor(couch_198)
Find cat_2127. Find clothes_jacket_2119. Find phone_2016. Find mat_203. Find chair_2003. Find rag_2052. Find instrument_guitar_2028. Robot is inside bedroom_162. Robot is close couch_198. Robot is no longer inside home_office_241.Robot is no longer close couch_269.
##############################
From agent.py
exp(cat_2127, couch_198)
Find cat_2127. 
##############################
From agent.py-> find a plan in act()
walk_executor(cat_2127)obs(cat_2127, Check if the cat is at this location)walk_executor(couch_198)exp(cat_2032, couch_198)walk_executor(cat_2032)obs(cat_2032, Check if the cat is at this location)walk_executor(cat_2069)obs(cat_2069, Check if the cat is at this location)
##############################
From agent.py
walk_executor(cat_2127)
Robot is inside bedroom_162. Robot is close couch_198. Robot is close cat_2127. 
##############################
From agent.py
obs(cat_2127, Check if the cat is at this location)
Get this information:  cat_2127 is on couch_198. cat_2127 is close to couch_198. cat_2127 is close to character_240. cat_2127 is inside bedroom_162.
##############################
From agent.py
walk_executor(couch_198)
Robot is inside bedroom_162. Robot is close couch_198. Robot is no longer close cat_2127.
##############################
From agent.py
exp(cat_2032, couch_198)
Failed to find cat_2032 around couch_198. 
##############################
From agent.py-> find a plan in act()
walk_executor(cat_2127)
##############################
From agent.py
walk_executor(cat_2127)
Robot is inside bedroom_162. Robot is close couch_198. Robot is close cat_2127. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cat_2127_around_curtain_204(cat:item):
    goal: not unknown(cat)
    body:
        assert is_cat(cat)
        bind curtain_instance:item where:
            is_curtain(curtain_instance) and id[curtain_instance]==204
        achieve close_char(char,curtain_instance)
        if can_open(curtain_instance):
            achieve_once open(curtain_instance)
            exp(cat,curtain_instance)
        else:
            exp(cat,curtain_instance)
    eff:
        unknown[cat]=False
        close[cat,curtain_instance]=True
        close[curtain_instance,cat]=True
    

#exp_behavior_end

#goal_representation
 
behavior touch_the_cat(cat:item):
    body:
        achieve close_char(char, cat)
        touch(cat)

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat) and id[cat]==2127
        # Select the cat with ID 2127
        touch_the_cat(cat)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior touch_the_cat(cat:item):
    body:
        achieve close_char(char, cat)
        touch(cat)

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat) and id[cat]==2127
        # Select the cat with ID 2127
        touch_the_cat(cat)

##############################
From agent.py-> find a plan in act()
touch_executor(cat_2127)
##############################
From agent.py
touch_executor(cat_2127)
Robot is inside bedroom_162. Robot is close couch_198. Robot is close cat_2127. 
##############################
