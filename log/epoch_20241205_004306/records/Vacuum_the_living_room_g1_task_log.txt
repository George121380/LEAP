From agent.py
Reset goals: The sub-goals are: 
['Vacuum the floor.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2139_around_kitchen_counter_119(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(vacuum_cleaner,kitchen_counter_instance)
        else:
            exp(vacuum_cleaner,kitchen_counter_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,kitchen_counter_instance]=True
        close[kitchen_counter_instance,vacuum_cleaner]=True
    

behavior find_mat_32_around_table_270(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==270
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(mat,table_instance)
        else:
            exp(mat,table_instance)
    eff:
        unknown[mat]=False
        close[mat,table_instance]=True
        close[table_instance,mat]=True
    

#exp_behavior_end

#goal_representation

behavior vacuum_floor(vacuum:item, floor:item):
    body:
        achieve_once inhand(vacuum)
        achieve plugged(vacuum)
        achieve is_on(vacuum)
        achieve clean(floor)

behavior __goal__():
    body:
        bind vacuum: item where:
            is_vacuum_cleaner(vacuum)
        bind floor: item where:
            is_floor(floor)
        vacuum_floor(vacuum, floor)

#goal_representation_end

##############################
From agent.py->reset_goal

behavior vacuum_floor(vacuum:item, floor:item):
    body:
        achieve_once inhand(vacuum)
        achieve plugged(vacuum)
        achieve is_on(vacuum)
        achieve clean(floor)

behavior __goal__():
    body:
        bind vacuum: item where:
            is_vacuum_cleaner(vacuum)
        bind floor: item where:
            is_floor(floor)
        vacuum_floor(vacuum, floor)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(vacuum_cleaner_2139, kitchen_counter_119)walk_executor(vacuum_cleaner_2139)grab_executor(vacuum_cleaner_2139)plugin_executor(vacuum_cleaner_2139)switchon_executor(vacuum_cleaner_2139)walk_executor(floor_10)wash_executor(floor_10)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Find pot_2138. Find tray_128. Find bowl_2141. Find plate_2152. Find cutting_board_2123. Find food_salt_2041. Find fork_2150. Find bowl_2140. Find bowl_2142. Find pot_78. Find fork_2151. Robot is inside dining_room_41. Robot is close kitchen_counter_119. 
##############################
From agent.py
exp(vacuum_cleaner_2139, kitchen_counter_119)
Failed to find vacuum_cleaner_2139 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2079)open_executor(washing_machine_2079)exp(vacuum_cleaner_2139, washing_machine_2079)walk_executor(vacuum_cleaner_2139)grab_executor(vacuum_cleaner_2139)plugin_executor(vacuum_cleaner_2139)switchon_executor(vacuum_cleaner_2139)walk_executor(floor_10)wash_executor(floor_10)
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close washing_machine_2079. Robot is no longer close kitchen_counter_119.
##############################
From agent.py
open_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close washing_machine_2079. 
##############################
From agent.py
exp(vacuum_cleaner_2139, washing_machine_2079)
Failed to find vacuum_cleaner_2139 around washing_machine_2079. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_129)open_executor(dishwasher_129)exp(vacuum_cleaner_2139, dishwasher_129)walk_executor(vacuum_cleaner_2139)grab_executor(vacuum_cleaner_2139)plugin_executor(vacuum_cleaner_2139)switchon_executor(vacuum_cleaner_2139)walk_executor(floor_10)wash_executor(floor_10)
##############################
From agent.py
walk_executor(dishwasher_129)
Find detergent_2011. Find measuring_cup_2012. Robot is inside dining_room_41. Robot is close dishwasher_129. Robot is close detergent_2011. Robot is close measuring_cup_2012. Robot is no longer close washing_machine_2079.
##############################
From agent.py
open_executor(dishwasher_129)
Robot is inside dining_room_41. Robot is close dishwasher_129. Robot is close detergent_2011. Robot is close measuring_cup_2012. 
##############################
From agent.py
exp(vacuum_cleaner_2139, dishwasher_129)
Failed to find vacuum_cleaner_2139 around dishwasher_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(trashcan_99)exp(vacuum_cleaner_2139, trashcan_99)walk_executor(vacuum_cleaner_2139)grab_executor(vacuum_cleaner_2139)plugin_executor(vacuum_cleaner_2139)switchon_executor(vacuum_cleaner_2139)walk_executor(floor_10)wash_executor(floor_10)
##############################
From agent.py
walk_executor(trashcan_99)
Find food_orange_2061. Find food_onion_2009. Find glue_2045. Find vacuum_cleaner_2139. Robot is inside dining_room_41. Robot is close trashcan_99. Robot is close food_orange_2061. Robot is close floor_51. Robot is close food_onion_2009. Robot is close glue_2045. Robot is no longer close dishwasher_129.Robot is no longer close detergent_2011.Robot is no longer close measuring_cup_2012.
##############################
From agent.py
exp(vacuum_cleaner_2139, trashcan_99)
Find vacuum_cleaner_2139. 
##############################
From agent.py-> find a plan in act()
walk_executor(vacuum_cleaner_2139)grab_executor(vacuum_cleaner_2139)plugin_executor(vacuum_cleaner_2139)switchon_executor(vacuum_cleaner_2139)walk_executor(floor_10)wash_executor(floor_10)
##############################
From agent.py
walk_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is no longer close trashcan_99.Robot is no longer close food_orange_2061.Robot is no longer close floor_51.Robot is no longer close food_onion_2009.Robot is no longer close glue_2045.
##############################
From agent.py
grab_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close char. Grabbing vacuum_cleaner_2139 by right hand. 
##############################
From agent.py
plugin_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close char. 
##############################
From agent.py
switchon_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close char. 
##############################
From agent.py
walk_executor(floor_10)
Robot is inside bathroom_1. Robot is close vacuum_cleaner_2139. Robot is close floor_10. Robot is no longer inside dining_room_41.Robot is no longer close char.
##############################
From agent.py
wash_executor(floor_10)
Robot is inside bathroom_1. Robot is close vacuum_cleaner_2139. Robot is close floor_10. 
##############################
From agent.py
Human Instruction: The vacuuming task was not completed correctly. The robot washed the floor instead of vacuuming it. The robot needs to use the vacuum_cleaner_2139 to vacuum the floor_51 in the dining room and ensure it is clean as per the goal representation for vacuuming.

The actions you have taken:
Action 1: Walk to kitchen_counter_119.
Action 2: look for vacuum_cleaner_2139 around kitchen_counter_119.
Action 3: Walk to washing_machine_2079.
Action 4: Open washing_machine_2079.
Action 5: look for vacuum_cleaner_2139 around washing_machine_2079.
Action 6: Walk to dishwasher_129.
Action 7: Open dishwasher_129.
Action 8: look for vacuum_cleaner_2139 around dishwasher_129.
Action 9: Walk to trashcan_99.
Action 10: look for vacuum_cleaner_2139 around trashcan_99.
Action 11: Walk to vacuum_cleaner_2139.
Action 12: Grab vacuum_cleaner_2139.
Action 13: Plug in vacuum_cleaner_2139.
Action 14: Switch on vacuum_cleaner_2139.
Action 15: Walk to floor_10.
Action 16: Wash floor_10.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_brush_2002_around_cupboard_118(brush:item):
    goal: not unknown(brush)
    body:
        assert is_brush(brush)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(brush,cupboard_instance)
        else:
            exp(brush,cupboard_instance)
    eff:
        unknown[brush]=False
        close[brush,cupboard_instance]=True
        close[cupboard_instance,brush]=True
    

#exp_behavior_end

#goal_representation
 
behavior clean_with_vacuum_cleaner(vacuum:item, floor:item):
    body:
        achieve plugged(vacuum) # Ensure the vacuum is plugged in
        achieve is_on(vacuum) # Ensure the vacuum is turned on
        achieve clean(floor) # Ensure the floor is clean after vacuuming

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner) and id[vacuum_cleaner] == 2139
        # Select the vacuum cleaner with ID 2139
        
        bind floor: item where:
            is_floor(floor) and id[floor] == 51
        # Select the floor with ID 51
        
        clean_with_vacuum_cleaner(vacuum_cleaner, floor)


#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior clean_with_vacuum_cleaner(vacuum:item, floor:item):
    body:
        achieve plugged(vacuum) # Ensure the vacuum is plugged in
        achieve is_on(vacuum) # Ensure the vacuum is turned on
        achieve clean(floor) # Ensure the floor is clean after vacuuming

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner) and id[vacuum_cleaner] == 2139
        # Select the vacuum cleaner with ID 2139
        
        bind floor: item where:
            is_floor(floor) and id[floor] == 51
        # Select the floor with ID 51
        
        clean_with_vacuum_cleaner(vacuum_cleaner, floor)


##############################
From agent.py-> find a plan in act()
walk_executor(floor_51)wash_executor(floor_51)
##############################
From agent.py
walk_executor(floor_51)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. Robot is no longer inside bathroom_1.Robot is no longer close floor_10.
##############################
From agent.py
wash_executor(floor_51)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
Human Instruction: You need to vacuum the floor_51 using vacuum_cleaner_2139. The robot washed the floor instead of vacuuming it. Make sure the vacuum cleaner is plugged in and switched on, then vacuum the floor to ensure it is clean.

The actions you have taken:
Action 1: Walk to kitchen_counter_119.
Action 2: look for vacuum_cleaner_2139 around kitchen_counter_119.
Action 3: Walk to washing_machine_2079.
Action 4: Open washing_machine_2079.
Action 5: look for vacuum_cleaner_2139 around washing_machine_2079.
Action 6: Walk to dishwasher_129.
Action 7: Open dishwasher_129.
Action 8: look for vacuum_cleaner_2139 around dishwasher_129.
Action 9: Walk to trashcan_99.
Action 10: look for vacuum_cleaner_2139 around trashcan_99.
Action 11: Walk to vacuum_cleaner_2139.
Action 12: Grab vacuum_cleaner_2139.
Action 13: Plug in vacuum_cleaner_2139.
Action 14: Switch on vacuum_cleaner_2139.
Action 15: Walk to floor_10.
Action 16: Wash floor_10.
Action 17: Walk to floor_51.
Action 18: Wash floor_51.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2143_around_bathroom_cabinet_17(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_vacuum_cleaner(vacuum_cleaner:item):
    body:
        achieve is_on(vacuum_cleaner)
        achieve plugged(vacuum_cleaner)

behavior clean_floor(floor:item, vacuum_cleaner:item):
    body:
        achieve clean(floor) # Use vacuum cleaner to clean the floor

behavior __goal__():
    body:
        bind floor: item where:
            is_floor(floor) and id[floor]==51
        # Select the floor with ID 51
        
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner) and id[vacuum_cleaner]==2139
        # Select the vacuum cleaner with ID 2139
        
        prepare_vacuum_cleaner(vacuum_cleaner)
        clean_floor(floor, vacuum_cleaner)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2143_around_cupboard_118(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cleaning_solution,cupboard_instance)
        else:
            exp(cleaning_solution,cupboard_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,cupboard_instance]=True
        close[cupboard_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior vacuum_floor_with_vacuum_cleaner(floor: item, vacuum_cleaner: item):
    body:
        achieve plugged(vacuum_cleaner)
        achieve is_on(vacuum_cleaner)
        achieve clean(floor)

behavior __goal__():
    body:
        bind floor: item where:
            is_floor(floor) and id[floor] == 51
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner) and id[vacuum_cleaner] == 2139
        vacuum_floor_with_vacuum_cleaner(floor, vacuum_cleaner)

#goal_representation_end

##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "vacuum the floor." ?
Answer: Turn on the vacuum cleaner. Hold the vacuum cleaner. Push and pull the vacuum cleaner.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_brush_2002_around_bathroom_cabinet_17(brush:item):
    goal: not unknown(brush)
    body:
        assert is_brush(brush)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(brush,bathroom_cabinet_instance)
        else:
            exp(brush,bathroom_cabinet_instance)
    eff:
        unknown[brush]=False
        close[brush,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,brush]=True
    

behavior find_cleaning_solution_2143_around_bathroom_cabinet_17(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior ensure_vacuum_cleaner_ready(vacuum_cleaner:item):
    body:
        achieve plugged(vacuum_cleaner)
        achieve is_on(vacuum_cleaner)

behavior vacuum_floor(vacuum_cleaner:item, floor:item):
    body:
        achieve inside_char(char, floor)
        # Move to the floor that needs vacuuming
        achieve clean(floor)

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner) and id[vacuum_cleaner] == 2139
        # Select the specific vacuum cleaner
        bind floor: item where:
            is_floor(floor) and id[floor] == 51
        # Select the specific floor
        ensure_vacuum_cleaner_ready(vacuum_cleaner)
        vacuum_floor(vacuum_cleaner, floor)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2143_around_bathroom_cabinet_17(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

behavior find_mat_32_around_table_199(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==199
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(mat,table_instance)
        else:
            exp(mat,table_instance)
    eff:
        unknown[mat]=False
        close[mat,table_instance]=True
        close[table_instance,mat]=True
    

#exp_behavior_end

#goal_representation

behavior clean_floor_with_vacuum(floor:item, vacuum_cleaner:item):
    body:
        achieve plugged(vacuum_cleaner)
        achieve is_on(vacuum_cleaner)
        achieve clean(floor)

behavior __goal__():
    body:
        bind floor: item where:
            is_floor(floor) and id[floor] == 51
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner) and id[vacuum_cleaner] == 2139
        clean_floor_with_vacuum(floor, vacuum_cleaner)

#goal_representation_end

##############################
From agent.py
Reset goals: The sub-goals are: 
['Turn on the vacuum cleaner, hold it, and vacuum the floor by pushing and pulling it.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2143_around_bathroom_cabinet_17(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior turn_on_vacuum(vacuum_cleaner:item):
    body:
        achieve plugged(vacuum_cleaner)
        achieve is_on(vacuum_cleaner)
        # Ensure the vacuum is plugged in and turned on

behavior vacuum_floor(floor:item, vacuum_cleaner:item):
    body:
        achieve_once inhand(vacuum_cleaner)
        achieve clean(floor)
        # Hold vacuum cleaner and clean the floor

behavior close_vacuum(vacuum_cleaner:item):
    body:
        achieve unplugged(vacuum_cleaner)
        achieve is_off(vacuum_cleaner)
        # Ensure the vacuum is unplugged and turned off after use

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner) and id[vacuum_cleaner]==2139
        # Identify the vacuum cleaner with ID 2139

        bind floor: item where:
            is_floor(floor) and id[floor]==51
        # Identify the floor with ID 51

        turn_on_vacuum(vacuum_cleaner)
        vacuum_floor(floor, vacuum_cleaner)
        close_vacuum(vacuum_cleaner)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior turn_on_vacuum(vacuum_cleaner:item):
    body:
        achieve plugged(vacuum_cleaner)
        achieve is_on(vacuum_cleaner)
        # Ensure the vacuum is plugged in and turned on

behavior vacuum_floor(floor:item, vacuum_cleaner:item):
    body:
        achieve_once inhand(vacuum_cleaner)
        achieve clean(floor)
        # Hold vacuum cleaner and clean the floor

behavior close_vacuum(vacuum_cleaner:item):
    body:
        achieve unplugged(vacuum_cleaner)
        achieve is_off(vacuum_cleaner)
        # Ensure the vacuum is unplugged and turned off after use

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner) and id[vacuum_cleaner]==2139
        # Identify the vacuum cleaner with ID 2139

        bind floor: item where:
            is_floor(floor) and id[floor]==51
        # Identify the floor with ID 51

        turn_on_vacuum(vacuum_cleaner)
        vacuum_floor(floor, vacuum_cleaner)
        close_vacuum(vacuum_cleaner)

##############################
From agent.py-> find a plan in act()
switchoff_executor(vacuum_cleaner_2139)plugout_executor(vacuum_cleaner_2139)
##############################
From agent.py
switchoff_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
plugout_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
Human Instruction: You need to vacuum the floor_51 using the vacuum_cleaner_2139. Ensure that you hold the vacuum cleaner and use it to clean the floor by pushing and pulling it. The actions taken so far involved washing the floor instead of vacuuming it.

Human Guidance: Turn on the vacuum cleaner. Hold the vacuum cleaner. Push and pull the vacuum cleaner.
The actions you have taken:
Action 1: Walk to kitchen_counter_119.
Action 2: look for vacuum_cleaner_2139 around kitchen_counter_119.
Action 3: Walk to washing_machine_2079.
Action 4: Open washing_machine_2079.
Action 5: look for vacuum_cleaner_2139 around washing_machine_2079.
Action 6: Walk to dishwasher_129.
Action 7: Open dishwasher_129.
Action 8: look for vacuum_cleaner_2139 around dishwasher_129.
Action 9: Walk to trashcan_99.
Action 10: look for vacuum_cleaner_2139 around trashcan_99.
Action 11: Walk to vacuum_cleaner_2139.
Action 12: Grab vacuum_cleaner_2139.
Action 13: Plug in vacuum_cleaner_2139.
Action 14: Switch on vacuum_cleaner_2139.
Action 15: Walk to floor_10.
Action 16: Wash floor_10.
Action 17: Walk to floor_51.
Action 18: Wash floor_51.
Action 19: Switch off vacuum_cleaner_2139.
Action 20: Plug out vacuum_cleaner_2139.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_blow_dryer_2057_around_bathroom_cabinet_17(blow_dryer:item):
    goal: not unknown(blow_dryer)
    body:
        assert is_blow_dryer(blow_dryer)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(blow_dryer,bathroom_cabinet_instance)
        else:
            exp(blow_dryer,bathroom_cabinet_instance)
    eff:
        unknown[blow_dryer]=False
        close[blow_dryer,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,blow_dryer]=True
    

behavior find_mat_102_around_bathroom_cabinet_17(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(mat,bathroom_cabinet_instance)
        else:
            exp(mat,bathroom_cabinet_instance)
    eff:
        unknown[mat]=False
        close[mat,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,mat]=True
    

#exp_behavior_end

#goal_representation
 
behavior vacuum_the_floor(vacuum_cleaner:item, floor:item):
    body:
        achieve plugged(vacuum_cleaner)
        achieve is_on(vacuum_cleaner)
        achieve_once inhand(vacuum_cleaner)
        achieve clean(floor)

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner) and id[vacuum_cleaner] == 2139
        # Select vacuum cleaner with ID 2139
        
        bind floor: item where:
            is_floor(floor) and id[floor] == 51
        # Select floor with ID 51

        vacuum_the_floor(vacuum_cleaner, floor)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior vacuum_the_floor(vacuum_cleaner:item, floor:item):
    body:
        achieve plugged(vacuum_cleaner)
        achieve is_on(vacuum_cleaner)
        achieve_once inhand(vacuum_cleaner)
        achieve clean(floor)

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner) and id[vacuum_cleaner] == 2139
        # Select vacuum cleaner with ID 2139
        
        bind floor: item where:
            is_floor(floor) and id[floor] == 51
        # Select floor with ID 51

        vacuum_the_floor(vacuum_cleaner, floor)

##############################
From agent.py-> find a plan in act()
plugin_executor(vacuum_cleaner_2139)switchon_executor(vacuum_cleaner_2139)
##############################
From agent.py
plugin_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
switchon_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
Human Instruction: You need to ensure that the vacuum cleaner is being used to vacuum the floor by pushing and pulling it. Currently, the floor has been washed but not vacuumed according to the instructions.

Human Guidance: Turn on the vacuum cleaner. Hold the vacuum cleaner. Push and pull the vacuum cleaner.
The actions you have taken:
Action 1: Walk to kitchen_counter_119.
Action 2: look for vacuum_cleaner_2139 around kitchen_counter_119.
Action 3: Walk to washing_machine_2079.
Action 4: Open washing_machine_2079.
Action 5: look for vacuum_cleaner_2139 around washing_machine_2079.
Action 6: Walk to dishwasher_129.
Action 7: Open dishwasher_129.
Action 8: look for vacuum_cleaner_2139 around dishwasher_129.
Action 9: Walk to trashcan_99.
Action 10: look for vacuum_cleaner_2139 around trashcan_99.
Action 11: Walk to vacuum_cleaner_2139.
Action 12: Grab vacuum_cleaner_2139.
Action 13: Plug in vacuum_cleaner_2139.
Action 14: Switch on vacuum_cleaner_2139.
Action 15: Walk to floor_10.
Action 16: Wash floor_10.
Action 17: Walk to floor_51.
Action 18: Wash floor_51.
Action 19: Switch off vacuum_cleaner_2139.
Action 20: Plug out vacuum_cleaner_2139.
Action 21: Plug in vacuum_cleaner_2139.
Action 22: Switch on vacuum_cleaner_2139.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2143_around_bathroom_cabinet_17(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

behavior find_brush_2002_around_bathroom_cabinet_17(brush:item):
    goal: not unknown(brush)
    body:
        assert is_brush(brush)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(brush,bathroom_cabinet_instance)
        else:
            exp(brush,bathroom_cabinet_instance)
    eff:
        unknown[brush]=False
        close[brush,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,brush]=True
    

#exp_behavior_end

#goal_representation
 
def floor_should_be_vacuumed(floor:item):
    # Function to check if a floor needs vacuuming
    symbol should_be_vacuumed = not clean(floor) and not dirty(floor)
    return should_be_vacuumed

def can_vacuum_floor(floor:item):
    # Check if the floor is prepared for vacuuming
    symbol can_vacuum=not has_water(floor)
    return can_vacuum

behavior vacuum_floor(floor:item, vacuum:item):
    body:
        achieve close_char(char, floor)
        achieve can_vacuum_floor(floor)
        achieve_once inhand(vacuum)
        achieve plugged(vacuum)
        achieve is_on(vacuum)
        achieve clean(floor)

behavior __goal__():
    body:
        bind vacuum: item where:
            is_vacuum_cleaner(vacuum)
        # Initialize the vacuum
        bind floor: item where:
            is_floor(floor) and floor_should_be_vacuumed(floor)
        # Select floors that need vacuuming
        vacuum_floor(floor, vacuum)
        # Vacuum the floor

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_blow_dryer_2057_around_bathroom_cabinet_17(blow_dryer:item):
    goal: not unknown(blow_dryer)
    body:
        assert is_blow_dryer(blow_dryer)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(blow_dryer,bathroom_cabinet_instance)
        else:
            exp(blow_dryer,bathroom_cabinet_instance)
    eff:
        unknown[blow_dryer]=False
        close[blow_dryer,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,blow_dryer]=True
    

behavior find_brush_2002_around_bathroom_cabinet_17(brush:item):
    goal: not unknown(brush)
    body:
        assert is_brush(brush)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(brush,bathroom_cabinet_instance)
        else:
            exp(brush,bathroom_cabinet_instance)
    eff:
        unknown[brush]=False
        close[brush,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,brush]=True
    

#exp_behavior_end

#goal_representation
 
behavior operate_vacuum_cleaner(vacuum_cleaner: item, floor: item):
    body:
        achieve plugged(vacuum_cleaner)
        # Ensure the vacuum cleaner is plugged in

        achieve is_on(vacuum_cleaner)
        # Ensure the vacuum cleaner is turned on

        achieve_once inhand(vacuum_cleaner)
        # Temporarily hold the vacuum cleaner to operate it
        
        push(vacuum_cleaner)
        # Push the vacuum cleaner on the floor
        
        pull(vacuum_cleaner)
        # Pull the vacuum cleaner on the floor

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner)
        # Select the vacuum cleaner

        foreach floor: item:
            if is_floor(floor):
                operate_vacuum_cleaner(vacuum_cleaner, floor)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior operate_vacuum_cleaner(vacuum_cleaner: item, floor: item):
    body:
        achieve plugged(vacuum_cleaner)
        # Ensure the vacuum cleaner is plugged in

        achieve is_on(vacuum_cleaner)
        # Ensure the vacuum cleaner is turned on

        achieve_once inhand(vacuum_cleaner)
        # Temporarily hold the vacuum cleaner to operate it
        
        push(vacuum_cleaner)
        # Push the vacuum cleaner on the floor
        
        pull(vacuum_cleaner)
        # Pull the vacuum cleaner on the floor

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner)
        # Select the vacuum cleaner

        foreach floor: item:
            if is_floor(floor):
                operate_vacuum_cleaner(vacuum_cleaner, floor)

##############################
From agent.py-> find a plan in act()
push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is close floor_51. 
##############################
From evaluation.py
cdl_dataset/dataset/Vacuum_the_living_room/g1.txt
Checking k1
missed actions: 
missed action num: 0
##############################
