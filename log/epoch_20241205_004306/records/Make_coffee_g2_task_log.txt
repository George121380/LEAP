From agent.py
Reset goals: The sub-goals are: 
['1. Use the coffee maker to make a cup of coffee.', '2. Add milk and sugar to the coffee.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2134_around_kitchen_counter_119(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

behavior find_cup_2133_around_kitchen_counter_119(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

behavior find_coffee_filter_2053_around_cupboard_118(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(coffee_filter,cupboard_instance)
        else:
            exp(coffee_filter,cupboard_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,cupboard_instance]=True
        close[cupboard_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
def is_coffee_maker_ready(coffee_maker:item):
    # Function to check if the coffee maker is on and has water
    symbol ready = is_on(coffee_maker) and has_water(coffee_maker)
    return ready

behavior make_coffee(coffee_maker:item, cup:item):
    body:
        achieve on(cup, coffee_maker)
        # Place the cup under the coffee maker

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select a coffee maker

        if not is_coffee_maker_ready(coffee_maker):
            observe(coffee_maker, "Check if the coffee maker is on and has water")

        bind cup: item where:
            is_cup(cup)
        # Select a cup
        
        make_coffee(coffee_maker, cup) # Make a cup of coffee using the coffee maker

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_coffee_maker_ready(coffee_maker:item):
    # Function to check if the coffee maker is on and has water
    symbol ready = is_on(coffee_maker) and has_water(coffee_maker)
    return ready

behavior make_coffee(coffee_maker:item, cup:item):
    body:
        achieve on(cup, coffee_maker)
        # Place the cup under the coffee maker

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select a coffee maker

        if not is_coffee_maker_ready(coffee_maker):
            observe(coffee_maker, "Check if the coffee maker is on and has water")

        bind cup: item where:
            is_cup(cup)
        # Select a cup
        
        make_coffee(coffee_maker, cup) # Make a cup of coffee using the coffee maker

##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)open_executor(coffe_maker_130)obs(coffe_maker_130, Check if the coffee maker is on and has water)walk_executor(kitchen_counter_119)exp(cup_2132, kitchen_counter_119)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)
##############################
From agent.py
walk_executor(coffe_maker_130)
Find coffee_filter_2065. Find tray_128. Find spectacles_2153. Find fryingpan_2154. Find pot_78. Robot is inside dining_room_41. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
From agent.py
open_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
From agent.py
obs(coffe_maker_130, Check if the coffee maker is on and has water)
Get this information:  coffee_filter_2065 is inside coffe_maker_130. coffe_maker_130 is inside dining_room_41. coffe_maker_130 is on kitchen_counter_122. coffe_maker_130 is close to dishwasher_129. coffe_maker_130 is close to trashcan_99. coffe_maker_130 is close to wall_68. coffe_maker_130 is close to toaster_132. coffe_maker_130 is close to microwave_135. coffe_maker_130 is close to walllamp_139. coffe_maker_130 is close to coffee_filter_2065. coffe_maker_130 is close to floor_51. coffe_maker_130 is close to cupboard_118. coffe_maker_130 is close to kitchen_counter_122. coffe_maker_130 is close to ceiling_60. coffe_maker_130 is close to character_240. coffe_maker_130 is OFF. coffe_maker_130 is CLEAN. coffe_maker_130 is PLUGGED_IN. coffe_maker_130 is OPEN.
##############################
From agent.py
walk_executor(kitchen_counter_119)
Find pot_2138. Find bowl_2141. Find plate_2152. Find cutting_board_2123. Find food_salt_2041. Find fork_2150. Find bowl_2140. Find bowl_2142. Find fork_2151. Robot is inside dining_room_41. Robot is close kitchen_counter_119. Robot is no longer close coffee_filter_2065.Robot is no longer close kitchen_counter_122.Robot is no longer close coffe_maker_130.
##############################
From agent.py
exp(cup_2132, kitchen_counter_119)
Failed to find cup_2132 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)obs(coffe_maker_130, Check if the coffee maker is on and has water)walk_executor(cupboard_118)open_executor(cupboard_118)exp(cup_2132, cupboard_118)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. Robot is no longer close kitchen_counter_119.
##############################
From agent.py
obs(coffe_maker_130, Check if the coffee maker is on and has water)
Get this information:  coffee_filter_2065 is inside coffe_maker_130. coffe_maker_130 is inside dining_room_41. coffe_maker_130 is on kitchen_counter_122. coffe_maker_130 is close to dishwasher_129. coffe_maker_130 is close to trashcan_99. coffe_maker_130 is close to wall_68. coffe_maker_130 is close to toaster_132. coffe_maker_130 is close to microwave_135. coffe_maker_130 is close to walllamp_139. coffe_maker_130 is close to coffee_filter_2065. coffe_maker_130 is close to floor_51. coffe_maker_130 is close to cupboard_118. coffe_maker_130 is close to kitchen_counter_122. coffe_maker_130 is close to ceiling_60. coffe_maker_130 is close to character_240. coffe_maker_130 is OFF. coffe_maker_130 is CLEAN. coffe_maker_130 is PLUGGED_IN. coffe_maker_130 is OPEN.
##############################
From agent.py
walk_executor(cupboard_118)
Find tea_2066. Find knife_2037. Find food_peanut_butter_2077. Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. Robot is no longer close coffee_filter_2065.Robot is no longer close kitchen_counter_122.Robot is no longer close coffe_maker_130.
##############################
From agent.py
open_executor(cupboard_118)
Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. 
##############################
From agent.py
exp(cup_2132, cupboard_118)
Failed to find cup_2132 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)obs(coffe_maker_130, Check if the coffee maker is on and has water)walk_executor(walllamp_140)exp(cup_2132, walllamp_140)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. Robot is no longer close wall_68.Robot is no longer close tea_2066.Robot is no longer close knife_2037.Robot is no longer close cupboard_118.Robot is no longer close food_peanut_butter_2077.
##############################
From agent.py
obs(coffe_maker_130, Check if the coffee maker is on and has water)
Get this information:  coffee_filter_2065 is inside coffe_maker_130. coffe_maker_130 is inside dining_room_41. coffe_maker_130 is on kitchen_counter_122. coffe_maker_130 is close to dishwasher_129. coffe_maker_130 is close to trashcan_99. coffe_maker_130 is close to wall_68. coffe_maker_130 is close to toaster_132. coffe_maker_130 is close to microwave_135. coffe_maker_130 is close to walllamp_139. coffe_maker_130 is close to coffee_filter_2065. coffe_maker_130 is close to floor_51. coffe_maker_130 is close to cupboard_118. coffe_maker_130 is close to kitchen_counter_122. coffe_maker_130 is close to ceiling_60. coffe_maker_130 is close to character_240. coffe_maker_130 is OFF. coffe_maker_130 is CLEAN. coffe_maker_130 is PLUGGED_IN. coffe_maker_130 is OPEN.
##############################
From agent.py
walk_executor(walllamp_140)
Robot is inside dining_room_41. Robot is close walllamp_140. Robot is no longer close coffee_filter_2065.Robot is no longer close kitchen_counter_122.Robot is no longer close coffe_maker_130.
##############################
From agent.py
exp(cup_2132, walllamp_140)
Failed to find cup_2132 around walllamp_140. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)obs(coffe_maker_130, Check if the coffee maker is on and has water)walk_executor(cupboard_117)exp(cup_2132, cupboard_117)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. Robot is no longer close walllamp_140.
##############################
From agent.py
obs(coffe_maker_130, Check if the coffee maker is on and has water)
Get this information:  coffee_filter_2065 is inside coffe_maker_130. coffe_maker_130 is inside dining_room_41. coffe_maker_130 is on kitchen_counter_122. coffe_maker_130 is close to dishwasher_129. coffe_maker_130 is close to trashcan_99. coffe_maker_130 is close to wall_68. coffe_maker_130 is close to toaster_132. coffe_maker_130 is close to microwave_135. coffe_maker_130 is close to walllamp_139. coffe_maker_130 is close to coffee_filter_2065. coffe_maker_130 is close to floor_51. coffe_maker_130 is close to cupboard_118. coffe_maker_130 is close to kitchen_counter_122. coffe_maker_130 is close to ceiling_60. coffe_maker_130 is close to character_240. coffe_maker_130 is OFF. coffe_maker_130 is CLEAN. coffe_maker_130 is PLUGGED_IN. coffe_maker_130 is OPEN.
##############################
From agent.py
walk_executor(cupboard_117)
Find coffee_filter_2053. Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close wall_67. Robot is close cupboard_117. Robot is no longer close coffee_filter_2065.Robot is no longer close kitchen_counter_122.Robot is no longer close coffe_maker_130.
##############################
From agent.py
exp(cup_2132, cupboard_117)
Failed to find cup_2132 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)obs(coffe_maker_130, Check if the coffee maker is on and has water)walk_executor(bathroom_cabinet_17)open_executor(bathroom_cabinet_17)exp(cup_2132, bathroom_cabinet_17)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. Robot is no longer close coffee_filter_2053.Robot is no longer close wall_67.Robot is no longer close cupboard_117.
##############################
From agent.py
obs(coffe_maker_130, Check if the coffee maker is on and has water)
Get this information:  coffee_filter_2065 is inside coffe_maker_130. coffe_maker_130 is inside dining_room_41. coffe_maker_130 is on kitchen_counter_122. coffe_maker_130 is close to dishwasher_129. coffe_maker_130 is close to trashcan_99. coffe_maker_130 is close to wall_68. coffe_maker_130 is close to toaster_132. coffe_maker_130 is close to microwave_135. coffe_maker_130 is close to walllamp_139. coffe_maker_130 is close to coffee_filter_2065. coffe_maker_130 is close to floor_51. coffe_maker_130 is close to cupboard_118. coffe_maker_130 is close to kitchen_counter_122. coffe_maker_130 is close to ceiling_60. coffe_maker_130 is close to character_240. coffe_maker_130 is OFF. coffe_maker_130 is CLEAN. coffe_maker_130 is PLUGGED_IN. coffe_maker_130 is OPEN.
##############################
From agent.py
walk_executor(bathroom_cabinet_17)
Find tooth_paste_2059. Find drawing_33. Robot is inside bathroom_1. Robot is close bathroom_cabinet_17. Robot is close tooth_paste_2059. Robot is no longer inside dining_room_41.Robot is no longer close coffee_filter_2065.Robot is no longer close kitchen_counter_122.Robot is no longer close coffe_maker_130.
##############################
From agent.py
open_executor(bathroom_cabinet_17)
Robot is inside bathroom_1. Robot is close bathroom_cabinet_17. Robot is close tooth_paste_2059. 
##############################
From agent.py
exp(cup_2132, bathroom_cabinet_17)
Failed to find cup_2132 around bathroom_cabinet_17. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)obs(coffe_maker_130, Check if the coffee maker is on and has water)walk_executor(bathroom_counter_18)exp(cup_2132, bathroom_counter_18)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_cabinet_17.Robot is no longer close tooth_paste_2059.
##############################
From agent.py
obs(coffe_maker_130, Check if the coffee maker is on and has water)
Get this information:  coffee_filter_2065 is inside coffe_maker_130. coffe_maker_130 is inside dining_room_41. coffe_maker_130 is on kitchen_counter_122. coffe_maker_130 is close to dishwasher_129. coffe_maker_130 is close to trashcan_99. coffe_maker_130 is close to wall_68. coffe_maker_130 is close to toaster_132. coffe_maker_130 is close to microwave_135. coffe_maker_130 is close to walllamp_139. coffe_maker_130 is close to coffee_filter_2065. coffe_maker_130 is close to floor_51. coffe_maker_130 is close to cupboard_118. coffe_maker_130 is close to kitchen_counter_122. coffe_maker_130 is close to ceiling_60. coffe_maker_130 is close to character_240. coffe_maker_130 is OFF. coffe_maker_130 is CLEAN. coffe_maker_130 is PLUGGED_IN. coffe_maker_130 is OPEN.
##############################
From agent.py
walk_executor(bathroom_counter_18)
Find mat_32. Find phone_2029. Robot is inside bathroom_1. Robot is close bathroom_counter_18. Robot is no longer inside dining_room_41.Robot is no longer close coffee_filter_2065.Robot is no longer close kitchen_counter_122.Robot is no longer close coffe_maker_130.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2132 ?
Answer: Robot, you will find cup_2132 in dining_room_41. It is placed on table_114. The cup is positioned very close to this table. Please retrieve cup_2132 from this location.

##############################
From agent.py
Human Instruction: Robot, you will find cup_2132 in dining_room_41. It is placed on table_114. The cup is positioned very close to this table. Please retrieve cup_2132 from this location.

The actions you have taken:
Action 1: Walk to coffe_maker_130.
Action 2: Open coffe_maker_130.
Action 3: Observe around coffe_maker_130 with the question of Check if the coffee maker is on and has water.
Action 4: Walk to kitchen_counter_119.
Action 5: look for cup_2132 around kitchen_counter_119.
Action 6: Walk to coffe_maker_130.
Action 7: Observe around coffe_maker_130 with the question of Check if the coffee maker is on and has water.
Action 8: Walk to cupboard_118.
Action 9: Open cupboard_118.
Action 10: look for cup_2132 around cupboard_118.
Action 11: Walk to coffe_maker_130.
Action 12: Observe around coffe_maker_130 with the question of Check if the coffee maker is on and has water.
Action 13: Walk to walllamp_140.
Action 14: look for cup_2132 around walllamp_140.
Action 15: Walk to coffe_maker_130.
Action 16: Observe around coffe_maker_130 with the question of Check if the coffee maker is on and has water.
Action 17: Walk to cupboard_117.
Action 18: look for cup_2132 around cupboard_117.
Action 19: Walk to coffe_maker_130.
Action 20: Observe around coffe_maker_130 with the question of Check if the coffee maker is on and has water.
Action 21: Walk to bathroom_cabinet_17.
Action 22: Open bathroom_cabinet_17.
Action 23: look for cup_2132 around bathroom_cabinet_17.
Action 24: Walk to coffe_maker_130.
Action 25: Observe around coffe_maker_130 with the question of Check if the coffee maker is on and has water.
Action 26: Walk to bathroom_counter_18.

##############################
From agent.py
exp(cup_2132, bathroom_counter_18)
Failed to find cup_2132 around bathroom_counter_18. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)obs(coffe_maker_130, Check if the coffee maker is on and has water)walk_executor(table_114)exp(cup_2132, table_114)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_18.
##############################
From agent.py
obs(coffe_maker_130, Check if the coffee maker is on and has water)
Get this information:  coffee_filter_2065 is inside coffe_maker_130. coffe_maker_130 is inside dining_room_41. coffe_maker_130 is on kitchen_counter_122. coffe_maker_130 is close to dishwasher_129. coffe_maker_130 is close to trashcan_99. coffe_maker_130 is close to wall_68. coffe_maker_130 is close to toaster_132. coffe_maker_130 is close to microwave_135. coffe_maker_130 is close to walllamp_139. coffe_maker_130 is close to coffee_filter_2065. coffe_maker_130 is close to floor_51. coffe_maker_130 is close to cupboard_118. coffe_maker_130 is close to kitchen_counter_122. coffe_maker_130 is close to ceiling_60. coffe_maker_130 is close to character_240. coffe_maker_130 is OFF. coffe_maker_130 is CLEAN. coffe_maker_130 is PLUGGED_IN. coffe_maker_130 is OPEN.
##############################
From agent.py
walk_executor(table_114)
Find mat_102. Find dry_pasta_2114. Find food_food_2021. Find drawing_110. Find drawing_111. Find knife_2122. Find cup_2133. Find table_cloth_2005. Find food_bread_2084. Find pillow_104. Find cup_2049. Find box_2038. Find clothes_hat_2117. Find clothes_gloves_2118. Find milk_2115. Find pillow_103. Find pillow_105. Find pillow_106. Find lighter_2004. Find lighter_2039. Find cup_2134. Find check_2058. Find cup_2132. Robot is inside dining_room_41. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close coffee_filter_2065.Robot is no longer close kitchen_counter_122.Robot is no longer close coffe_maker_130.
##############################
From agent.py
exp(cup_2132, table_114)
Find cup_2132. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)obs(coffe_maker_130, Check if the coffee maker is on and has water)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. Robot is no longer close table_114.Robot is no longer close mat_102.Robot is no longer close floor_47.
##############################
From agent.py
obs(coffe_maker_130, Check if the coffee maker is on and has water)
Get this information:  coffee_filter_2065 is inside coffe_maker_130. coffe_maker_130 is inside dining_room_41. coffe_maker_130 is on kitchen_counter_122. coffe_maker_130 is close to dishwasher_129. coffe_maker_130 is close to trashcan_99. coffe_maker_130 is close to wall_68. coffe_maker_130 is close to toaster_132. coffe_maker_130 is close to microwave_135. coffe_maker_130 is close to walllamp_139. coffe_maker_130 is close to coffee_filter_2065. coffe_maker_130 is close to floor_51. coffe_maker_130 is close to cupboard_118. coffe_maker_130 is close to kitchen_counter_122. coffe_maker_130 is close to ceiling_60. coffe_maker_130 is close to character_240. coffe_maker_130 is OFF. coffe_maker_130 is CLEAN. coffe_maker_130 is PLUGGED_IN. coffe_maker_130 is OPEN.
##############################
From agent.py
walk_executor(cup_2132)
Robot is inside dining_room_41. Robot is close table_114. Robot is close cup_2132. Robot is no longer close coffee_filter_2065.Robot is no longer close kitchen_counter_122.Robot is no longer close coffe_maker_130.
##############################
From agent.py
grab_executor(cup_2132)
Robot is inside dining_room_41. Robot is close table_114. Robot is close cup_2132. Grabbing cup_2132 by right hand. 
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. Robot is no longer close table_114.
##############################
From agent.py
put_executor(cup_2132, coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. cup_2132 released by right hand. 
##############################
From agent.py
Human Instruction: The coffee maker needs to be turned on and filled with water in order to brew the coffee. You should ensure that the coffee maker is ready and operational.

The actions you have taken:
Action 1: Walk to coffe_maker_130.
Action 2: Open coffe_maker_130.
Action 3: Observe around coffe_maker_130 with the question of Check if the coffee maker is on and has water.
Action 4: Walk to kitchen_counter_119.
Action 5: look for cup_2132 around kitchen_counter_119.
Action 6: Walk to coffe_maker_130.
Action 7: Observe around coffe_maker_130 with the question of Check if the coffee maker is on and has water.
Action 8: Walk to cupboard_118.
Action 9: Open cupboard_118.
Action 10: look for cup_2132 around cupboard_118.
Action 11: Walk to coffe_maker_130.
Action 12: Observe around coffe_maker_130 with the question of Check if the coffee maker is on and has water.
Action 13: Walk to walllamp_140.
Action 14: look for cup_2132 around walllamp_140.
Action 15: Walk to coffe_maker_130.
Action 16: Observe around coffe_maker_130 with the question of Check if the coffee maker is on and has water.
Action 17: Walk to cupboard_117.
Action 18: look for cup_2132 around cupboard_117.
Action 19: Walk to coffe_maker_130.
Action 20: Observe around coffe_maker_130 with the question of Check if the coffee maker is on and has water.
Action 21: Walk to bathroom_cabinet_17.
Action 22: Open bathroom_cabinet_17.
Action 23: look for cup_2132 around bathroom_cabinet_17.
Action 24: Walk to coffe_maker_130.
Action 25: Observe around coffe_maker_130 with the question of Check if the coffee maker is on and has water.
Action 26: Walk to bathroom_counter_18.
Action 27: look for cup_2132 around bathroom_counter_18.
Action 28: Walk to coffe_maker_130.
Action 29: Observe around coffe_maker_130 with the question of Check if the coffee maker is on and has water.
Action 30: Walk to table_114.
Action 31: look for cup_2132 around table_114.
Action 32: Walk to coffe_maker_130.
Action 33: Observe around coffe_maker_130 with the question of Check if the coffee maker is on and has water.
Action 34: Walk to cup_2132.
Action 35: Grab cup_2132.
Action 36: Walk to coffe_maker_130.
Action 37: Put cup_2132 on coffe_maker_130.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_sugar_2111_around_fridge_126(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_sugar,fridge_instance)
        else:
            exp(food_sugar,fridge_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,fridge_instance]=True
        close[fridge_instance,food_sugar]=True
    

#exp_behavior_end

#goal_representation
 
def has_water_and_is_on(coffee_maker:item):
    # Determine if the coffee maker has water and is turned on
    symbol has_water_and_on = is_on(coffee_maker) and has_water(coffee_maker)
    return has_water_and_on

behavior prepare_coffee(cup:item, coffee_maker:item):
    body:
        achieve on(cup, coffee_maker)

behavior start_coffee_maker(coffee_maker:item):
    body:
        bind coffe_maker: item where:
            is_coffe_maker(coffee_maker)
        assert has_switch(coffee_maker)
        achieve is_on(coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        if not has_water_and_is_on(coffee_maker):
            observe(coffee_maker, "Check if the coffee maker has water and is turned on")
        
        bind cup: item where:
            is_cup(cup)
        # Select a cup

        prepare_coffee(cup, coffee_maker)
        start_coffee_maker(coffee_maker)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def has_water_and_is_on(coffee_maker:item):
    # Determine if the coffee maker has water and is turned on
    symbol has_water_and_on = is_on(coffee_maker) and has_water(coffee_maker)
    return has_water_and_on

behavior prepare_coffee(cup:item, coffee_maker:item):
    body:
        achieve on(cup, coffee_maker)

behavior start_coffee_maker(coffee_maker:item):
    body:
        bind coffe_maker: item where:
            is_coffe_maker(coffee_maker)
        assert has_switch(coffee_maker)
        achieve is_on(coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        if not has_water_and_is_on(coffee_maker):
            observe(coffee_maker, "Check if the coffee maker has water and is turned on")
        
        bind cup: item where:
            is_cup(cup)
        # Select a cup

        prepare_coffee(cup, coffee_maker)
        start_coffee_maker(coffee_maker)

##############################
From agent.py-> find a plan in act()
obs(coffe_maker_130, Check if the coffee maker has water and is turned on)close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
obs(coffe_maker_130, Check if the coffee maker has water and is turned on)
Get this information:  coffee_filter_2065 is inside coffe_maker_130. coffe_maker_130 is inside dining_room_41. coffe_maker_130 is on kitchen_counter_122. coffe_maker_130 is close to dishwasher_129. coffe_maker_130 is close to trashcan_99. coffe_maker_130 is close to wall_68. coffe_maker_130 is close to toaster_132. coffe_maker_130 is close to microwave_135. coffe_maker_130 is close to walllamp_139. coffe_maker_130 is close to coffee_filter_2065. coffe_maker_130 is close to floor_51. coffe_maker_130 is close to cupboard_118. coffe_maker_130 is close to kitchen_counter_122. coffe_maker_130 is close to ceiling_60. coffe_maker_130 is close to character_240. coffe_maker_130 is close to cup_2132. cup_2132 is on coffe_maker_130. coffe_maker_130 is OFF. coffe_maker_130 is CLEAN. coffe_maker_130 is PLUGGED_IN. coffe_maker_130 is OPEN.
##############################
From agent.py
close_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
From agent.py
switchon_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_sugar_2111_around_fridge_126(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_sugar,fridge_instance)
        else:
            exp(food_sugar,fridge_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,fridge_instance]=True
        close[fridge_instance,food_sugar]=True
    

behavior find_food_dessert_2090_around_fridge_126(food_dessert:item):
    goal: not unknown(food_dessert)
    body:
        assert is_food_dessert(food_dessert)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_dessert,fridge_instance)
        else:
            exp(food_dessert,fridge_instance)
    eff:
        unknown[food_dessert]=False
        close[food_dessert,fridge_instance]=True
        close[fridge_instance,food_dessert]=True
    

#exp_behavior_end

#goal_representation
 
def has_milk_and_sugar(cup:item):
    # Function to check if there is both milk and sugar in a specified cup
    symbol has_milk_and_sugar=exists m: item : is_milk(m) and on(m, cup) and exists s: item : is_food_sugar(s) and on(s, cup)
    return has_milk_and_sugar

def find_cup_with_coffee(cup:item):
    symbol has_coffee=exists coffee: item : is_coffee_maker(coffee) and on(cup, coffee)
    return has_coffee

behavior add_to_coffee(cup: item, milk: item, sugar: item):
    body:
        achieve on(milk, cup)
        achieve on(sugar, cup)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and find_cup_with_coffee(cup)
        # Select a cup with coffee in it

        if not has_milk_and_sugar(cup):
            bind milk: item where:
                is_milk(milk)
            bind sugar: item where:
                is_food_sugar(sugar)
            
            add_to_coffee(cup, milk, sugar)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 's') at line 5714, column 85.
Expected one of: 
	* _NEWLINE
	* SEMICOLON

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_sugar_2111_around_fridge_126(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_sugar,fridge_instance)
        else:
            exp(food_sugar,fridge_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,fridge_instance]=True
        close[fridge_instance,food_sugar]=True
    

#goal_representation
 
behavior add_milk_and_sugar(cup: item, milk: item, sugar: item):
    body:
        achieve on(milk, cup)
        achieve on(sugar, cup)
        
behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and find_cup_with_coffee(cup)
        # Select a cup with coffee in it

        if not has_milk_and_sugar(cup):
            bind milk: item where:
                is_milk(milk)
            bind sugar: item where:
                is_food_sugar(sugar)
            
            add_milk_and_sugar(cup, milk, sugar)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

'Function find_cup_with_coffee not found. Note that recursive function calls are not supported in the current version.'
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_sugar_2111_around_fridge_126(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_sugar,fridge_instance)
        else:
            exp(food_sugar,fridge_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,fridge_instance]=True
        close[fridge_instance,food_sugar]=True
    

#goal_representation
 
## Formal Representation:

behavior add_milk_and_sugar(cup: item, milk: item, sugar: item):
    body:
        achieve on(milk, cup)
        achieve on(sugar, cup)
        
behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and is_check(cup)
        # Select a cup with coffee in it

        if not has_milk_and_sugar(cup):
            bind milk: item where:
                is_milk(milk)
            bind sugar: item where:
                is_food_sugar(sugar)
            
            add_milk_and_sugar(cup, milk, sugar)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_sugar_2111_around_fridge_126(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_sugar,fridge_instance)
        else:
            exp(food_sugar,fridge_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,fridge_instance]=True
        close[fridge_instance,food_sugar]=True
    

behavior find_food_dessert_2090_around_kitchen_counter_123(food_dessert:item):
    goal: not unknown(food_dessert)
    body:
        assert is_food_dessert(food_dessert)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_dessert,kitchen_counter_instance)
        else:
            exp(food_dessert,kitchen_counter_instance)
    eff:
        unknown[food_dessert]=False
        close[food_dessert,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_dessert]=True
    

#exp_behavior_end

#goal_representation
 
behavior add_milk_and_sugar(cup:item, milk:item, sugar:item):
    body:
        achieve recipient(cup) # Ensure the cup can receive milk and sugar
        achieve inside(milk, cup) # Add milk to the cup of coffee
        achieve inside(sugar, cup) # Add sugar to the cup of coffee

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and on(cup, coffe_maker_130)
        # Select the cup already on the coffee maker
        
        bind milk: item where:
            is_milk(milk)
        # Select an item that is milk
        
        bind sugar: item where:
            is_food_sugar(sugar)
        # Select an item that is sugar
        
        add_milk_and_sugar(cup, milk, sugar)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: coffe_maker_130; available variables: [Variable<cup: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_sugar_2111_around_fridge_126(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_sugar,fridge_instance)
        else:
            exp(food_sugar,fridge_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,fridge_instance]=True
        close[fridge_instance,food_sugar]=True
    

#goal_representation
 
behavior add_milk_and_sugar(cup:item, milk:item, sugar:item):
    body:
        achieve recipient(cup) # Ensure the cup can receive milk and sugar
        achieve inside(milk, cup) # Add milk to the cup of coffee
        achieve inside(sugar, cup) # Add sugar to the cup of coffee

behavior __goal__():
    body:
        bind coffe_maker_130: item where:
            is_coffe_maker(coffe_maker_130)
        # Ensure the coffee maker is defined
        
        bind cup: item where:
            is_cup(cup) and on(cup, coffe_maker_130)
        # Select the cup already on the coffee maker
        
        bind milk: item where:
            is_milk(milk)
        # Select an item that is milk
        
        bind sugar: item where:
            is_food_sugar(sugar)
        # Select an item that is sugar
        
        add_milk_and_sugar(cup, milk, sugar)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior add_milk_and_sugar(cup:item, milk:item, sugar:item):
    body:
        achieve recipient(cup) # Ensure the cup can receive milk and sugar
        achieve inside(milk, cup) # Add milk to the cup of coffee
        achieve inside(sugar, cup) # Add sugar to the cup of coffee

behavior __goal__():
    body:
        bind coffe_maker_130: item where:
            is_coffe_maker(coffe_maker_130)
        # Ensure the coffee maker is defined
        
        bind cup: item where:
            is_cup(cup) and on(cup, coffe_maker_130)
        # Select the cup already on the coffee maker
        
        bind milk: item where:
            is_milk(milk)
        # Select an item that is milk
        
        bind sugar: item where:
            is_food_sugar(sugar)
        # Select an item that is sugar
        
        add_milk_and_sugar(cup, milk, sugar)

##############################
From agent.py-> find a plan in act()
walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_sugar_2111, fridge_126)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(milk_2115)
Robot is inside dining_room_41. Robot is close table_114. Robot is close milk_2115. Robot is no longer close coffee_filter_2065.Robot is no longer close kitchen_counter_122.Robot is no longer close cup_2132.Robot is no longer close coffe_maker_130.
##############################
From agent.py
grab_executor(milk_2115)
Robot is inside dining_room_41. Robot is close table_114. Robot is close milk_2115. Grabbing milk_2115 by right hand. 
##############################
From agent.py
walk_executor(cup_2132)
Robot is inside dining_room_41. Robot is close milk_2115. Robot is close coffe_maker_130. Robot is close cup_2132. Robot is no longer close table_114.
##############################
From agent.py
putin_executor(milk_2115, cup_2132)
Robot is inside dining_room_41. Robot is close milk_2115. Robot is close coffe_maker_130. Robot is close cup_2132. milk_2115 released by right hand. 
##############################
From agent.py
walk_executor(fridge_126)
Find food_onion_2048. Find food_food_2046. Find food_food_2073. Find food_steak_2080. Find food_apple_2081. Find food_bacon_2082. Find food_banana_2083. Find food_cake_2085. Find food_carrot_2086. Find food_cereal_2087. Find food_cheese_2088. Find food_chicken_2089. Find food_dessert_2090. Find food_donut_2091. Find food_egg_2092. Find food_fish_2093. Find food_food_2094. Find food_fruit_2095. Find food_hamburger_2096. Find food_ice_cream_2097. Find food_jam_2098. Find food_kiwi_2099. Find food_lemon_2100. Find food_noodles_2101. Find food_oatmeal_2102. Find food_orange_2103. Find food_onion_2104. Find food_peanut_butter_2105. Find food_pizza_2106. Find food_potato_2107. Find food_rice_2108. Find food_salt_2109. Find food_snack_2110. Find food_sugar_2111. Find food_turkey_2112. Find food_vegetable_2113. Find food_food_2001. Find sauce_2148. Find basket_for_clothes_2078. Find food_food_1000. Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. Robot is no longer close coffe_maker_130.Robot is no longer close milk_2115.Robot is no longer close cup_2132.
##############################
From agent.py
switchoff_executor(fridge_126)
Find keyboard_211. Find mouse_213. Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
open_executor(fridge_126)
Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
exp(food_sugar_2111, fridge_126)
Find food_sugar_2111. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
grab_executor(food_sugar_2111)
Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. Grabbing food_sugar_2111 by right hand. 
##############################
From agent.py
walk_executor(cup_2132)
Robot is inside dining_room_41. Robot is close food_sugar_2111. Robot is close coffe_maker_130. Robot is close cup_2132. Robot is no longer close food_onion_2048.Robot is no longer close food_food_2046.Robot is no longer close food_food_2073.Robot is no longer close food_steak_2080.Robot is no longer close food_apple_2081.Robot is no longer close food_bacon_2082.Robot is no longer close food_banana_2083.Robot is no longer close food_cake_2085.Robot is no longer close food_carrot_2086.Robot is no longer close food_cereal_2087.Robot is no longer close food_cheese_2088.Robot is no longer close food_chicken_2089.Robot is no longer close food_dessert_2090.Robot is no longer close food_donut_2091.Robot is no longer close food_egg_2092.Robot is no longer close food_fish_2093.Robot is no longer close food_food_2094.Robot is no longer close food_fruit_2095.Robot is no longer close food_hamburger_2096.Robot is no longer close food_ice_cream_2097.Robot is no longer close food_jam_2098.Robot is no longer close food_kiwi_2099.Robot is no longer close food_lemon_2100.Robot is no longer close food_noodles_2101.Robot is no longer close food_oatmeal_2102.Robot is no longer close food_orange_2103.Robot is no longer close food_onion_2104.Robot is no longer close food_peanut_butter_2105.Robot is no longer close food_pizza_2106.Robot is no longer close food_potato_2107.Robot is no longer close food_rice_2108.Robot is no longer close food_salt_2109.Robot is no longer close food_snack_2110.Robot is no longer close food_turkey_2112.Robot is no longer close food_vegetable_2113.Robot is no longer close food_food_2001.Robot is no longer close floor_44.Robot is no longer close sauce_2148.Robot is no longer close fridge_126.
##############################
From agent.py
putin_executor(food_sugar_2111, cup_2132)
Robot is inside dining_room_41. Robot is close food_sugar_2111. Robot is close coffe_maker_130. Robot is close cup_2132. food_sugar_2111 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Make_coffee/g2.txt
Checking k1
missed actions: switchoff_executor(coffe_maker_130);open_executor(coffe_maker_130);grab_executor(cup_2132);putin_executor(cup_2132, coffe_maker_130);close_executor(coffe_maker_130);switchon_executor(coffe_maker_130);
missed action num: 6
##############################
From evaluation.py
cdl_dataset/dataset/Make_coffee/g2.txt
Checking k1
missed actions: switchoff_executor(coffe_maker_130);open_executor(coffe_maker_130);grab_executor(cup_2132);putin_executor(cup_2132, coffe_maker_130);close_executor(coffe_maker_130);switchon_executor(coffe_maker_130);
missed action num: 6
##############################
