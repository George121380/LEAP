From agent.py
Reset goals: The sub-goals are: 
['1. Locate the book.', '2. Put the book on the coffee table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2136_around_bookshelf_196(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==196
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_novel_2060_around_bookshelf_196(novel:item):
    goal: not unknown(novel)
    body:
        assert is_novel(novel)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==196
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(novel,bookshelf_instance)
        else:
            exp(novel,bookshelf_instance)
    eff:
        unknown[novel]=False
        close[novel,bookshelf_instance]=True
        close[bookshelf_instance,novel]=True
    

behavior find_diary_2008_around_bookshelf_196(diary:item):
    goal: not unknown(diary)
    body:
        assert is_diary(diary)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==196
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(diary,bookshelf_instance)
        else:
            exp(diary,bookshelf_instance)
    eff:
        unknown[diary]=False
        close[diary,bookshelf_instance]=True
        close[bookshelf_instance,diary]=True
    

#exp_behavior_end

#goal_representation
 
def is_book_found(book:item):
    symbol book_found=exists b: item : is_book(b) and visited(b)
    return book_found

behavior __goal__():
    body:
        if exists book: item : is_book(book) and visited(book):
            # If the book has already been located, no need to search further
            bind book: item where:
                is_book(book) and visited(book)
            achieve close_char(char, book)
            # Move the character closer to the located book

        else:
            # Check all items in the scene categorized as books for possible missing visits
            foreach book: item:
                if is_book(book) and not visited(book):
                    observe(book, "Check if this is the book youre looking for")
                    # Inspect whether the item is indeed the book to be located

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_book_found(book:item):
    symbol book_found=exists b: item : is_book(b) and visited(b)
    return book_found

behavior __goal__():
    body:
        if exists book: item : is_book(book) and visited(book):
            # If the book has already been located, no need to search further
            bind book: item where:
                is_book(book) and visited(book)
            achieve close_char(char, book)
            # Move the character closer to the located book

        else:
            # Check all items in the scene categorized as books for possible missing visits
            foreach book: item:
                if is_book(book) and not visited(book):
                    observe(book, "Check if this is the book youre looking for")
                    # Inspect whether the item is indeed the book to be located

##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_196)open_executor(bookshelf_196)exp(book_2136, bookshelf_196)walk_executor(book_2136)open_executor(book_2136)obs(book_2136, Check if this is the book youre looking for)walk_executor(bookshelf_196)exp(book_2137, bookshelf_196)walk_executor(book_2137)open_executor(book_2137)obs(book_2137, Check if this is the book youre looking for)walk_executor(bookshelf_196)exp(novel_2060, bookshelf_196)walk_executor(novel_2060)open_executor(novel_2060)obs(novel_2060, Check if this is the book youre looking for)
##############################
From agent.py
walk_executor(bookshelf_196)
Find drawing_202. Find novel_2060. Robot is inside bedroom_162. Robot is close floor_170. Robot is close photoframe_219. Robot is close bookshelf_196. Robot is no longer inside dining_room_41.
##############################
From agent.py
open_executor(bookshelf_196)
Find drawing_110. Robot is inside bedroom_162. Robot is close floor_170. Robot is close photoframe_219. Robot is close bookshelf_196. 
##############################
From agent.py
exp(book_2136, bookshelf_196)
Failed to find book_2136 around bookshelf_196. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_124)open_executor(bookshelf_124)exp(book_2136, bookshelf_124)walk_executor(book_2136)open_executor(book_2136)obs(book_2136, Check if this is the book youre looking for)walk_executor(bookshelf_124)exp(book_2137, bookshelf_124)walk_executor(book_2137)open_executor(book_2137)obs(book_2137, Check if this is the book youre looking for)walk_executor(novel_2060)open_executor(novel_2060)obs(novel_2060, Check if this is the book youre looking for)
##############################
From agent.py
walk_executor(bookshelf_124)
Find book_2136. Find envelope_2055. Find book_2137. Find drawing_111. Robot is inside dining_room_41. Robot is close floor_42. Robot is close floor_43. Robot is close bookshelf_124. Robot is no longer inside bedroom_162.Robot is no longer close floor_170.Robot is no longer close photoframe_219.Robot is no longer close bookshelf_196.
##############################
From agent.py
open_executor(bookshelf_124)
Robot is inside dining_room_41. Robot is close floor_42. Robot is close floor_43. Robot is close bookshelf_124. 
##############################
From agent.py
exp(book_2136, bookshelf_124)
Find book_2136. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2136)open_executor(book_2136)obs(book_2136, Check if this is the book youre looking for)walk_executor(book_2137)open_executor(book_2137)obs(book_2137, Check if this is the book youre looking for)walk_executor(novel_2060)open_executor(novel_2060)obs(novel_2060, Check if this is the book youre looking for)
##############################
From agent.py
walk_executor(book_2136)
Robot is inside dining_room_41. Robot is close bookshelf_124. Robot is close book_2136. Robot is no longer close floor_42.Robot is no longer close floor_43.
##############################
From agent.py
open_executor(book_2136)
Robot is inside dining_room_41. Robot is close bookshelf_124. Robot is close book_2136. 
##############################
From agent.py
obs(book_2136, Check if this is the book youre looking for)
Get this information:  book_2136 is inside dining_room_41. book_2136 is on bookshelf_124. book_2136 is close to bookshelf_124. book_2136 is close to character_240. book_2136 is OPEN.
##############################
From agent.py
walk_executor(book_2137)
Robot is inside dining_room_41. Robot is close bookshelf_124. Robot is close book_2137. Robot is no longer close book_2136.
##############################
From agent.py
open_executor(book_2137)
Robot is inside dining_room_41. Robot is close bookshelf_124. Robot is close book_2137. 
##############################
From agent.py
obs(book_2137, Check if this is the book youre looking for)
Get this information:  book_2137 is inside dining_room_41. book_2137 is on bookshelf_124. book_2137 is close to bookshelf_124. book_2137 is close to character_240. book_2137 is OPEN.
##############################
From agent.py
walk_executor(novel_2060)
Robot is inside bedroom_162. Robot is close bookshelf_196. Robot is close novel_2060. Robot is no longer inside dining_room_41.Robot is no longer close book_2137.Robot is no longer close bookshelf_124.
##############################
From agent.py
open_executor(novel_2060)
Robot is inside bedroom_162. Robot is close bookshelf_196. Robot is close novel_2060. 
##############################
From agent.py
obs(novel_2060, Check if this is the book youre looking for)
Get this information:  novel_2060 is on bookshelf_196. novel_2060 is close to bookshelf_196. novel_2060 is close to character_240. novel_2060 is inside bedroom_162. novel_2060 is CLEAN. novel_2060 is OPEN.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_fork_2151_around_kitchen_counter_119(fork:item):
    goal: not unknown(fork)
    body:
        assert is_fork(fork)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fork,kitchen_counter_instance)
        else:
            exp(fork,kitchen_counter_instance)
    eff:
        unknown[fork]=False
        close[fork,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fork]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_book_on_coffee_table(book:item, coffee_table:item):
    body:
        achieve on(book, coffee_table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2136
        # Select book with ID 2136
        bind coffee_table: item where:
            is_table(coffee_table) and surfaces(coffee_table) and inside(coffee_table, home_office)
        # Select a coffee table in the home office with a surface
        put_book_on_coffee_table(book, coffee_table)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: home_office; available variables: [Variable<coffee_table: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_fork_2151_around_kitchen_counter_119(fork:item):
    goal: not unknown(fork)
    body:
        assert is_fork(fork)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fork,kitchen_counter_instance)
        else:
            exp(fork,kitchen_counter_instance)
    eff:
        unknown[fork]=False
        close[fork,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fork]=True
    

#goal_representation
 
behavior put_book_on_coffee_table(book:item, coffee_table:item):
    body:
        achieve on(book, coffee_table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2136
        # Select book with ID 2136
        bind coffee_table: item where:
            is_table(coffee_table) and surfaces(coffee_table) and inside(coffee_table, home_office)
        # Select a coffee table in the home office with a surface
        bind home_office: item where:
            is_home_office(home_office)
        # Select an item that is a home office
        put_book_on_coffee_table(book, coffee_table)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: home_office; available variables: [Variable<coffee_table: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_fork_2151_around_kitchen_counter_122(fork:item):
    goal: not unknown(fork)
    body:
        assert is_fork(fork)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fork,kitchen_counter_instance)
        else:
            exp(fork,kitchen_counter_instance)
    eff:
        unknown[fork]=False
        close[fork,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fork]=True
    

#goal_representation
 
behavior put_book_on_coffee_table(book:item, coffee_table:item):
    body:
        achieve on(book, coffee_table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select an item that is a home office
        bind coffee_table: item where:
            is_table(coffee_table) and surfaces(coffee_table) and inside(coffee_table, home_office)
        # Select a coffee table in the home office with a surface
        bind book: item where:
            is_book(book) and id[book] == 2136
        # Select book with ID 2136
        put_book_on_coffee_table(book, coffee_table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior put_book_on_coffee_table(book:item, coffee_table:item):
    body:
        achieve on(book, coffee_table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select an item that is a home office
        bind coffee_table: item where:
            is_table(coffee_table) and surfaces(coffee_table) and inside(coffee_table, home_office)
        # Select a coffee table in the home office with a surface
        bind book: item where:
            is_book(book) and id[book] == 2136
        # Select book with ID 2136
        put_book_on_coffee_table(book, coffee_table)

##############################
From agent.py-> find a plan in act()
walk_executor(book_2136)grab_executor(book_2136)walk_executor(table_270)put_executor(book_2136, table_270)
##############################
From agent.py
walk_executor(book_2136)
Robot is inside dining_room_41. Robot is close book_2136. Robot is close bookshelf_124. Robot is no longer inside bedroom_162.Robot is no longer close bookshelf_196.Robot is no longer close novel_2060.
##############################
From agent.py
grab_executor(book_2136)
Robot is inside dining_room_41. Robot is close book_2136. Robot is close bookshelf_124. Grabbing book_2136 by right hand. 
##############################
From agent.py
walk_executor(table_270)
Find shampoo_2019. Find pillow_286. Find pencil_2014. Find pillow_287. Find brush_2002. Find drawing_288. Find shoes_2033. Find phone_2017. Robot is inside home_office_241. Robot is close book_2136. Robot is close couch_269. Robot is close table_270. Robot is no longer inside dining_room_41.Robot is no longer close bookshelf_124.
##############################
From agent.py
put_executor(book_2136, table_270)
Find check_2075. Find keyboard_278. Find blow_dryer_2057. Find stamp_2043. Find hanger_292. Find phone_2147. Find headset_2131. Find mat_284. Find cd_2145. Find stamp_2022. Find cat_2069. Find hanger_293. Find chair_271. Find cd_player_2129. Find clothes_pants_2036. Find remote_control_2124. Find pencil_2020. Find mouse_280. Find headset_2146. Find hanger_294. Find dvd_player_2130. Robot is inside home_office_241. Robot is close book_2136. Robot is close couch_269. Robot is close table_270. book_2136 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g1.txt
Checking k1
missed actions: 
missed action num: 0
##############################
