From agent.py
Reset goals: The sub-goals are: 
['1. Wash all the vegetables.', '2. Put the washed vegetables in a pot and boil them on the stove.', '3. Store the whole pot in the fridge.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_vegetable_2113_around_kitchen_counter_119(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_vegetable,kitchen_counter_instance)
        else:
            exp(food_vegetable,kitchen_counter_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_vegetable]=True
    

behavior find_food_food_1000_around_kitchen_counter_119(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_food,kitchen_counter_instance)
        else:
            exp(food_food,kitchen_counter_instance)
    eff:
        unknown[food_food]=False
        close[food_food,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_food]=True
    

behavior find_food_food_2064_around_cupboard_118(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_food,cupboard_instance)
        else:
            exp(food_food,cupboard_instance)
    eff:
        unknown[food_food]=False
        close[food_food,cupboard_instance]=True
        close[cupboard_instance,food_food]=True
    

behavior find_food_carrot_2086_around_kitchen_counter_119(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_carrot,kitchen_counter_instance)
        else:
            exp(food_carrot,kitchen_counter_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_carrot]=True
    

behavior find_food_orange_2061_around_kitchen_counter_119(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_orange,kitchen_counter_instance)
        else:
            exp(food_orange,kitchen_counter_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_orange]=True
    

behavior find_food_banana_2083_around_fridge_126(food_banana:item):
    goal: not unknown(food_banana)
    body:
        assert is_food_banana(food_banana)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_banana,fridge_instance)
        else:
            exp(food_banana,fridge_instance)
    eff:
        unknown[food_banana]=False
        close[food_banana,fridge_instance]=True
        close[fridge_instance,food_banana]=True
    

behavior find_food_food_2021_around_kitchen_counter_119(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_food,kitchen_counter_instance)
        else:
            exp(food_food,kitchen_counter_instance)
    eff:
        unknown[food_food]=False
        close[food_food,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_food]=True
    

behavior find_food_potato_2107_around_kitchen_counter_119(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_potato,kitchen_counter_instance)
        else:
            exp(food_potato,kitchen_counter_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_potato]=True
    

behavior find_food_lemon_2100_around_fridge_126(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_lemon,fridge_instance)
        else:
            exp(food_lemon,fridge_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,fridge_instance]=True
        close[fridge_instance,food_lemon]=True
    

behavior find_food_food_2074_around_kitchen_counter_119(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_food,kitchen_counter_instance)
        else:
            exp(food_food,kitchen_counter_instance)
    eff:
        unknown[food_food]=False
        close[food_food,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_food]=True
    

behavior find_food_salt_2041_around_cupboard_118(food_salt:item):
    goal: not unknown(food_salt)
    body:
        assert is_food_salt(food_salt)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_salt,cupboard_instance)
        else:
            exp(food_salt,cupboard_instance)
    eff:
        unknown[food_salt]=False
        close[food_salt,cupboard_instance]=True
        close[cupboard_instance,food_salt]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_vegetables(vegetables:item):
    body:
        wash(vegetables)

behavior __goal__():
    body:
        foreach vegetables: item:
            if is_food_vegetable(vegetables) and dirty(vegetables):
                wash_vegetables(vegetables)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_vegetable_2113_around_kitchen_counter_119(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_vegetable,kitchen_counter_instance)
        else:
            exp(food_vegetable,kitchen_counter_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_vegetable]=True
    

behavior find_food_food_2021_around_kitchen_counter_119(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_food,kitchen_counter_instance)
        else:
            exp(food_food,kitchen_counter_instance)
    eff:
        unknown[food_food]=False
        close[food_food,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_food]=True
    

behavior find_food_food_2074_around_cupboard_118(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_food,cupboard_instance)
        else:
            exp(food_food,cupboard_instance)
    eff:
        unknown[food_food]=False
        close[food_food,cupboard_instance]=True
        close[cupboard_instance,food_food]=True
    

behavior find_food_carrot_2015_around_kitchen_counter_119(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_carrot,kitchen_counter_instance)
        else:
            exp(food_carrot,kitchen_counter_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_carrot]=True
    

behavior find_food_orange_2103_around_fridge_126(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_orange,fridge_instance)
        else:
            exp(food_orange,fridge_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,fridge_instance]=True
        close[fridge_instance,food_orange]=True
    

behavior find_food_food_2064_around_fridge_126(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_food,fridge_instance)
        else:
            exp(food_food,fridge_instance)
    eff:
        unknown[food_food]=False
        close[food_food,fridge_instance]=True
        close[fridge_instance,food_food]=True
    

behavior find_food_potato_2107_around_kitchen_counter_119(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_potato,kitchen_counter_instance)
        else:
            exp(food_potato,kitchen_counter_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_potato]=True
    

behavior find_food_lemon_2100_around_kitchen_counter_119(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_lemon,kitchen_counter_instance)
        else:
            exp(food_lemon,kitchen_counter_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_lemon]=True
    

behavior find_food_carrot_2086_around_kitchen_counter_119(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_carrot,kitchen_counter_instance)
        else:
            exp(food_carrot,kitchen_counter_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_carrot]=True
    

behavior find_food_food_2094_around_fridge_126(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_food,fridge_instance)
        else:
            exp(food_food,fridge_instance)
    eff:
        unknown[food_food]=False
        close[food_food,fridge_instance]=True
        close[fridge_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_vegetable(vegetable:item):
    body:
        achieve clean(vegetable)
        # Ensure the vegetable is clean after washing

behavior __goal__():
    body:
        foreach vegetable: item:
            if is_food_vegetable(vegetable) and dirty(vegetable):
                wash_vegetable(vegetable)

#goal_representation_end

##############################
From agent.py->reset_goal
Failed to generate the goal representation
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "1. wash all the vegetables." ?
Answer: Wash all the vegetables.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_vegetable_2113_around_kitchen_counter_119(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_vegetable,kitchen_counter_instance)
        else:
            exp(food_vegetable,kitchen_counter_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_vegetable]=True
    

behavior find_food_food_2094_around_fridge_126(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_food,fridge_instance)
        else:
            exp(food_food,fridge_instance)
    eff:
        unknown[food_food]=False
        close[food_food,fridge_instance]=True
        close[fridge_instance,food_food]=True
    

behavior find_food_food_2046_around_fridge_126(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_food,fridge_instance)
        else:
            exp(food_food,fridge_instance)
    eff:
        unknown[food_food]=False
        close[food_food,fridge_instance]=True
        close[fridge_instance,food_food]=True
    

behavior find_food_carrot_2086_around_kitchen_counter_119(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_carrot,kitchen_counter_instance)
        else:
            exp(food_carrot,kitchen_counter_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_carrot]=True
    

behavior find_food_orange_2027_around_cupboard_118(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_orange,cupboard_instance)
        else:
            exp(food_orange,cupboard_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,cupboard_instance]=True
        close[cupboard_instance,food_orange]=True
    

behavior find_food_banana_2083_around_fridge_126(food_banana:item):
    goal: not unknown(food_banana)
    body:
        assert is_food_banana(food_banana)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_banana,fridge_instance)
        else:
            exp(food_banana,fridge_instance)
    eff:
        unknown[food_banana]=False
        close[food_banana,fridge_instance]=True
        close[fridge_instance,food_banana]=True
    

behavior find_food_potato_2107_around_kitchen_counter_119(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_potato,kitchen_counter_instance)
        else:
            exp(food_potato,kitchen_counter_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_potato]=True
    

behavior find_food_lemon_2100_around_kitchen_counter_119(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_lemon,kitchen_counter_instance)
        else:
            exp(food_lemon,kitchen_counter_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_lemon]=True
    

behavior find_food_food_2021_around_fridge_126(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_food,fridge_instance)
        else:
            exp(food_food,fridge_instance)
    eff:
        unknown[food_food]=False
        close[food_food,fridge_instance]=True
        close[fridge_instance,food_food]=True
    

behavior find_food_sugar_2111_around_cupboard_118(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_sugar,cupboard_instance)
        else:
            exp(food_sugar,cupboard_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,cupboard_instance]=True
        close[cupboard_instance,food_sugar]=True
    

behavior find_food_food_2001_around_kitchen_counter_119(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_food,kitchen_counter_instance)
        else:
            exp(food_food,kitchen_counter_instance)
    eff:
        unknown[food_food]=False
        close[food_food,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_vegetable(vegetable:item):
    body:
        achieve clean(vegetable)

behavior __goal__():
    body:
        foreach vegetable: item:
            if is_food_vegetable(vegetable) and dirty(vegetable):
                wash_vegetable(vegetable)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_vegetable_2113_around_kitchen_counter_119(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_vegetable,kitchen_counter_instance)
        else:
            exp(food_vegetable,kitchen_counter_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_vegetable]=True
    

behavior find_food_food_1000_around_cupboard_118(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_food,cupboard_instance)
        else:
            exp(food_food,cupboard_instance)
    eff:
        unknown[food_food]=False
        close[food_food,cupboard_instance]=True
        close[cupboard_instance,food_food]=True
    

behavior find_cup_2049_around_kitchen_counter_119(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

behavior find_food_food_2064_around_fridge_126(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_food,fridge_instance)
        else:
            exp(food_food,fridge_instance)
    eff:
        unknown[food_food]=False
        close[food_food,fridge_instance]=True
        close[fridge_instance,food_food]=True
    

behavior find_food_carrot_2086_around_fridge_126(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_carrot,fridge_instance)
        else:
            exp(food_carrot,fridge_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,fridge_instance]=True
        close[fridge_instance,food_carrot]=True
    

behavior find_food_food_2074_around_fridge_126(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_food,fridge_instance)
        else:
            exp(food_food,fridge_instance)
    eff:
        unknown[food_food]=False
        close[food_food,fridge_instance]=True
        close[fridge_instance,food_food]=True
    

behavior find_food_fruit_2095_around_kitchen_counter_119(food_fruit:item):
    goal: not unknown(food_fruit)
    body:
        assert is_food_fruit(food_fruit)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_fruit,kitchen_counter_instance)
        else:
            exp(food_fruit,kitchen_counter_instance)
    eff:
        unknown[food_fruit]=False
        close[food_fruit,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_fruit]=True
    

behavior find_food_potato_2107_around_kitchen_counter_119(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_potato,kitchen_counter_instance)
        else:
            exp(food_potato,kitchen_counter_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_potato]=True
    

behavior find_food_lemon_2100_around_kitchen_counter_119(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_lemon,kitchen_counter_instance)
        else:
            exp(food_lemon,kitchen_counter_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_lemon]=True
    

behavior find_food_onion_2009_around_cupboard_118(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_onion,cupboard_instance)
        else:
            exp(food_onion,cupboard_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,cupboard_instance]=True
        close[cupboard_instance,food_onion]=True
    

#exp_behavior_end

#goal_representation
 
def has_faucet(sink:item):
    # Determine whether this pool has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet,sink)
    return has_faucet

behavior clean_vegetable(vegetable:item, sink:item):
    body:
        achieve_once inside(vegetable, sink)
        # Ensure the vegetable is placed inside the sink

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet,sink)
            achieve_once is_on(faucet)
            # If the sink has a faucet, turn it on to wash the vegetable

        wash(vegetable) # This behavior is responsible for washing the vegetable
        
        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet,sink)
            achieve_once is_off(faucet)
            # If the sink has a faucet, turn it off after washing

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink)
        # Select a sink

        foreach vegetable: item:
            if is_food_vegetable(vegetable) and dirty(vegetable):
                clean_vegetable(vegetable, sink)

#goal_representation_end

##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Wash all the vegetables.', '2. Put the washed vegetables in a pot and boil them on the stove.', '3. Store the whole pot in the fridge.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_vegetable_2113_around_kitchen_counter_119(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_vegetable,kitchen_counter_instance)
        else:
            exp(food_vegetable,kitchen_counter_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_vegetable]=True
    

behavior find_phone_71_around_kitchen_counter_119(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(phone,kitchen_counter_instance)
        else:
            exp(phone,kitchen_counter_instance)
    eff:
        unknown[phone]=False
        close[phone,kitchen_counter_instance]=True
        close[kitchen_counter_instance,phone]=True
    

behavior find_food_food_2064_around_kitchen_counter_119(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_food,kitchen_counter_instance)
        else:
            exp(food_food,kitchen_counter_instance)
    eff:
        unknown[food_food]=False
        close[food_food,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_food]=True
    

behavior find_food_orange_2103_around_fridge_126(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_orange,fridge_instance)
        else:
            exp(food_orange,fridge_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,fridge_instance]=True
        close[fridge_instance,food_orange]=True
    

behavior find_food_food_2021_around_kitchen_counter_119(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_food,kitchen_counter_instance)
        else:
            exp(food_food,kitchen_counter_instance)
    eff:
        unknown[food_food]=False
        close[food_food,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_food]=True
    

behavior find_food_potato_2107_around_kitchen_counter_119(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_potato,kitchen_counter_instance)
        else:
            exp(food_potato,kitchen_counter_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_potato]=True
    

behavior find_food_lemon_2100_around_kitchen_counter_119(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_lemon,kitchen_counter_instance)
        else:
            exp(food_lemon,kitchen_counter_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_lemon]=True
    

behavior find_food_carrot_2086_around_kitchen_counter_119(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_carrot,kitchen_counter_instance)
        else:
            exp(food_carrot,kitchen_counter_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_carrot]=True
    

behavior find_food_food_1000_around_kitchen_counter_119(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_food,kitchen_counter_instance)
        else:
            exp(food_food,kitchen_counter_instance)
    eff:
        unknown[food_food]=False
        close[food_food,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_food]=True
    

behavior find_food_salt_2109_around_cupboard_118(food_salt:item):
    goal: not unknown(food_salt)
    body:
        assert is_food_salt(food_salt)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_salt,cupboard_instance)
        else:
            exp(food_salt,cupboard_instance)
    eff:
        unknown[food_salt]=False
        close[food_salt,cupboard_instance]=True
        close[cupboard_instance,food_salt]=True
    

behavior find_food_food_2001_around_kitchen_counter_119(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_food,kitchen_counter_instance)
        else:
            exp(food_food,kitchen_counter_instance)
    eff:
        unknown[food_food]=False
        close[food_food,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
 
def is_vegetable(item:item):
    # Function to check if an item is a vegetable
    return is_food_vegetable(item)

behavior wash_vegetable(vegetable:item, sink:item):
    body:
        achieve_once inside(vegetable, sink)
        bind faucet: item where:
            is_faucet(faucet) and close(faucet, sink)
        achieve_once is_on(faucet)
        # Turn on the faucet to wash the vegetable
        wash(vegetable) # Wash the vegetable
        achieve_once is_off(faucet)
        # Turn off the faucet after washing

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink)
        # Select a sink to wash the vegetables

        foreach vegetable: item:
            if is_vegetable(vegetable) and dirty(vegetable):
                wash_vegetable(vegetable, sink)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_vegetable_2113_around_kitchen_counter_119(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_vegetable,kitchen_counter_instance)
        else:
            exp(food_vegetable,kitchen_counter_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_vegetable]=True
    

behavior find_food_food_1000_around_kitchen_counter_119(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_food,kitchen_counter_instance)
        else:
            exp(food_food,kitchen_counter_instance)
    eff:
        unknown[food_food]=False
        close[food_food,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_food]=True
    

behavior find_food_orange_2103_around_fridge_126(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_orange,fridge_instance)
        else:
            exp(food_orange,fridge_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,fridge_instance]=True
        close[fridge_instance,food_orange]=True
    

behavior find_food_apple_2081_around_fridge_126(food_apple:item):
    goal: not unknown(food_apple)
    body:
        assert is_food_apple(food_apple)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_apple,fridge_instance)
        else:
            exp(food_apple,fridge_instance)
    eff:
        unknown[food_apple]=False
        close[food_apple,fridge_instance]=True
        close[fridge_instance,food_apple]=True
    

behavior find_food_banana_2083_around_kitchen_counter_119(food_banana:item):
    goal: not unknown(food_banana)
    body:
        assert is_food_banana(food_banana)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_banana,kitchen_counter_instance)
        else:
            exp(food_banana,kitchen_counter_instance)
    eff:
        unknown[food_banana]=False
        close[food_banana,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_banana]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_vegetables(vegetable:item):
    body:
        wash(vegetable)

def has_vegetables(item:item):
    symbol defines_vegetables=exists o: item : is_food_vegetable(o) and inside(o, item)
    return defines_vegetables

behavior __goal__():
    body:
        if exists vegetables: item : is_food_vegetable(vegetables) and not clean(vegetables):
            foreach vegetable: item:
                if is_food_vegetable(vegetable) and not clean(vegetable):
                    wash_vegetables(vegetable)
        
        else:
            foreach item: item:
                if has_vegetables(item) and not visited(item):
                    observe(item, "Check if there are vegetables to wash in or on the item")

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior wash_vegetables(vegetable:item):
    body:
        wash(vegetable)

def has_vegetables(item:item):
    symbol defines_vegetables=exists o: item : is_food_vegetable(o) and inside(o, item)
    return defines_vegetables

behavior __goal__():
    body:
        if exists vegetables: item : is_food_vegetable(vegetables) and not clean(vegetables):
            foreach vegetable: item:
                if is_food_vegetable(vegetable) and not clean(vegetable):
                    wash_vegetables(vegetable)
        
        else:
            foreach item: item:
                if has_vegetables(item) and not visited(item):
                    observe(item, "Check if there are vegetables to wash in or on the item")

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(food_vegetable_2113, kitchen_counter_119)walk_executor(food_vegetable_2113)wash_executor(food_vegetable_2113)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Find pot_2138. Find tray_128. Find bowl_2141. Find plate_2152. Find cutting_board_2123. Find food_salt_2041. Find fork_2150. Find bowl_2140. Find bowl_2142. Find pot_78. Find fork_2151. Robot is inside dining_room_41. Robot is close kitchen_counter_119. 
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: walk_executor(fridge_126);switchoff_executor(fridge_126);open_executor(fridge_126);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 9
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(pot_2138);open_executor(pot_2138);walk_executor(fridge_126);switchoff_executor(fridge_126);open_executor(fridge_126);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 17
##############################
From agent.py
exp(food_vegetable_2113, kitchen_counter_119)
Failed to find food_vegetable_2113 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(food_vegetable_2113, cupboard_118)walk_executor(food_vegetable_2113)wash_executor(food_vegetable_2113)
##############################
From agent.py
walk_executor(cupboard_118)
Find tea_2066. Find knife_2037. Find food_peanut_butter_2077. Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. Robot is no longer close kitchen_counter_119.
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: walk_executor(fridge_126);switchoff_executor(fridge_126);open_executor(fridge_126);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 9
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(pot_2138);open_executor(pot_2138);walk_executor(fridge_126);switchoff_executor(fridge_126);open_executor(fridge_126);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 17
##############################
From agent.py
open_executor(cupboard_118)
Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. 
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: walk_executor(fridge_126);switchoff_executor(fridge_126);open_executor(fridge_126);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 9
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(pot_2138);open_executor(pot_2138);walk_executor(fridge_126);switchoff_executor(fridge_126);open_executor(fridge_126);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 17
##############################
From agent.py
exp(food_vegetable_2113, cupboard_118)
Failed to find food_vegetable_2113 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_78)exp(food_vegetable_2113, pot_78)walk_executor(food_vegetable_2113)wash_executor(food_vegetable_2113)
##############################
From agent.py
walk_executor(pot_78)
Find oil_2013. Find food_cheese_2072. Find food_food_2064. Find food_carrot_2015. Robot is inside dining_room_41. Robot is close pot_78. Robot is close oven_127. Robot is no longer close wall_68.Robot is no longer close tea_2066.Robot is no longer close knife_2037.Robot is no longer close cupboard_118.Robot is no longer close food_peanut_butter_2077.
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: walk_executor(fridge_126);switchoff_executor(fridge_126);open_executor(fridge_126);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 9
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(pot_2138);open_executor(pot_2138);walk_executor(fridge_126);switchoff_executor(fridge_126);open_executor(fridge_126);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 17
##############################
From agent.py
exp(food_vegetable_2113, pot_78)
Failed to find food_vegetable_2113 around pot_78. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(food_vegetable_2113, kitchen_counter_122)walk_executor(food_vegetable_2113)wash_executor(food_vegetable_2113)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Find spectacles_2153. Find fryingpan_2154. Robot is inside dining_room_41. Robot is close kitchen_counter_122. Robot is no longer close pot_78.Robot is no longer close oven_127.
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: walk_executor(fridge_126);switchoff_executor(fridge_126);open_executor(fridge_126);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 9
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(pot_2138);open_executor(pot_2138);walk_executor(fridge_126);switchoff_executor(fridge_126);open_executor(fridge_126);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 17
##############################
From agent.py
exp(food_vegetable_2113, kitchen_counter_122)
Failed to find food_vegetable_2113 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(cutting_board_2123)exp(food_vegetable_2113, cutting_board_2123)walk_executor(food_vegetable_2113)wash_executor(food_vegetable_2113)
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot is inside dining_room_41. Robot is close cutting_board_2123. Robot is close kitchen_counter_119. Robot is no longer close kitchen_counter_122.
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: walk_executor(fridge_126);switchoff_executor(fridge_126);open_executor(fridge_126);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 9
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(pot_2138);open_executor(pot_2138);walk_executor(fridge_126);switchoff_executor(fridge_126);open_executor(fridge_126);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 17
##############################
From agent.py
exp(food_vegetable_2113, cutting_board_2123)
Failed to find food_vegetable_2113 around cutting_board_2123. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(food_vegetable_2113, cupboard_117)walk_executor(food_vegetable_2113)wash_executor(food_vegetable_2113)
##############################
From agent.py
walk_executor(cupboard_117)
Find coffee_filter_2053. Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close wall_67. Robot is close cupboard_117. Robot is no longer close cutting_board_2123.Robot is no longer close kitchen_counter_119.
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: walk_executor(fridge_126);switchoff_executor(fridge_126);open_executor(fridge_126);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 9
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(pot_2138);open_executor(pot_2138);walk_executor(fridge_126);switchoff_executor(fridge_126);open_executor(fridge_126);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 17
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find food_vegetable_2113 ?
Answer: The target item, food_vegetable_2113, is located inside the dining room (dining_room_41), within fridge_126. Please open fridge_126 in the dining room to find and retrieve food_vegetable_2113.

##############################
From agent.py
Human Instruction: The target item, food_vegetable_2113, is located inside the dining room (dining_room_41), within fridge_126. Please open fridge_126 in the dining room to find and retrieve food_vegetable_2113.

Human Guidance: Wash all the vegetables.
The actions you have taken:
Action 1: Walk to kitchen_counter_119.
Action 2: look for food_vegetable_2113 around kitchen_counter_119.
Action 3: Walk to cupboard_118.
Action 4: Open cupboard_118.
Action 5: look for food_vegetable_2113 around cupboard_118.
Action 6: Walk to pot_78.
Action 7: look for food_vegetable_2113 around pot_78.
Action 8: Walk to kitchen_counter_122.
Action 9: look for food_vegetable_2113 around kitchen_counter_122.
Action 10: Walk to cutting_board_2123.
Action 11: look for food_vegetable_2113 around cutting_board_2123.
Action 12: Walk to cupboard_117.

##############################
From agent.py
exp(food_vegetable_2113, cupboard_117)
Failed to find food_vegetable_2113 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_vegetable_2113, fridge_126)walk_executor(food_vegetable_2113)wash_executor(food_vegetable_2113)
##############################
From agent.py
walk_executor(fridge_126)
Find food_onion_2048. Find food_food_2046. Find food_food_2073. Find food_steak_2080. Find food_apple_2081. Find food_bacon_2082. Find food_banana_2083. Find food_cake_2085. Find food_carrot_2086. Find food_cereal_2087. Find food_cheese_2088. Find food_chicken_2089. Find food_dessert_2090. Find food_donut_2091. Find food_egg_2092. Find food_fish_2093. Find food_food_2094. Find food_fruit_2095. Find food_hamburger_2096. Find food_ice_cream_2097. Find food_jam_2098. Find food_kiwi_2099. Find food_lemon_2100. Find food_noodles_2101. Find food_oatmeal_2102. Find food_orange_2103. Find food_onion_2104. Find food_peanut_butter_2105. Find food_pizza_2106. Find food_potato_2107. Find food_rice_2108. Find food_salt_2109. Find food_snack_2110. Find food_sugar_2111. Find food_turkey_2112. Find food_vegetable_2113. Find food_food_2001. Find sauce_2148. Find basket_for_clothes_2078. Find food_food_1000. Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. Robot is no longer close coffee_filter_2053.Robot is no longer close wall_67.Robot is no longer close cupboard_117.
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: switchoff_executor(fridge_126);open_executor(fridge_126);grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 7
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(pot_2138);open_executor(pot_2138);walk_executor(fridge_126);switchoff_executor(fridge_126);open_executor(fridge_126);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 17
##############################
From agent.py
switchoff_executor(fridge_126)
Find keyboard_211. Find mouse_213. Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: open_executor(fridge_126);grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 6
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(pot_2138);open_executor(pot_2138);walk_executor(fridge_126);open_executor(fridge_126);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 16
##############################
From agent.py
open_executor(fridge_126)
Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 5
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(pot_2138);open_executor(pot_2138);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 14
##############################
From agent.py
exp(food_vegetable_2113, fridge_126)
Find food_vegetable_2113. 
##############################
From agent.py-> find a plan in act()
wash_executor(food_vegetable_2113)
##############################
From agent.py
wash_executor(food_vegetable_2113)
Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 5
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(pot_2138);open_executor(pot_2138);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 14
##############################
Goal representation from planning.py

#exp_behavior

behavior find_remote_control_2124_around_nightstand_195(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==195
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(remote_control,nightstand_instance)
        else:
            exp(remote_control,nightstand_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,nightstand_instance]=True
        close[nightstand_instance,remote_control]=True
    

behavior find_phone_2017_around_nightstand_195(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==195
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(phone,nightstand_instance)
        else:
            exp(phone,nightstand_instance)
    eff:
        unknown[phone]=False
        close[phone,nightstand_instance]=True
        close[nightstand_instance,phone]=True
    

behavior find_food_food_2073_around_food_food_2064(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==2064
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
 
def has_faucet(sink:item):
    # Determine whether this sink has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet,sink)
    return has_faucet

def is_stove(detector:item):
    # Determine if there is a stove present
    symbol stove_present=exists stove:item: is_stove(stove) and close(stove, detector)
    return stove_present

behavior put_vegetables_in_pot(vegetables: item, pot: item):
    body:
        achieve inside(vegetables, pot)

behavior boil_vegetables_on_stove(pot: item):
    body:
        if is_stove(pot):
            bind stove: item where:
                is_stove(stove) and close(stove, pot)
            achieve_once is_on(stove)
            # Ensure the stove is turned on

        if exists faucet:item: is_faucet(faucet) and close(faucet, pot):
            achieve_once is_on(faucet)
            water(pot)  # Fill the pot with water
            achieve_once is_off(faucet)

behavior __goal__():
    body:
        bind vegetables: item where:
            is_food_vegetable(vegetables) and clean(vegetables)
        # Select washed vegetables

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        put_vegetables_in_pot(vegetables, pot)
        boil_vegetables_on_stove(pot)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: faucet; available variables: [Variable<pot: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_phone_71_around_nightstand_195(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==195
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(phone,nightstand_instance)
        else:
            exp(phone,nightstand_instance)
    eff:
        unknown[phone]=False
        close[phone,nightstand_instance]=True
        close[nightstand_instance,phone]=True
    

behavior find_remote_control_2124_around_tvstand_116(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==116
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(remote_control,tvstand_instance)
        else:
            exp(remote_control,tvstand_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,tvstand_instance]=True
        close[tvstand_instance,remote_control]=True
    

behavior find_pot_2138_around_pot_2138(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==2138
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(pot,pot_instance)
        else:
            exp(pot,pot_instance)
    eff:
        unknown[pot]=False
        close[pot,pot_instance]=True
        close[pot_instance,pot]=True
    

#goal_representation
 
def has_faucet(sink:item):
    # Determine whether this sink has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet,sink)
    return has_faucet

def is_stove(detector:item):
    # Determine if there is a stove present
    symbol stove_present=exists stove:item: is_stove(stove) and close(stove, detector)
    return stove_present

behavior put_vegetables_in_pot(vegetables: item, pot: item):
    body:
        achieve inside(vegetables, pot)

behavior boil_vegetables_on_stove(pot: item):
    body:
        if is_stove(pot):
            bind stove: item where:
                is_stove(stove) and close(stove, pot)
            achieve_once is_on(stove)
            # Ensure the stove is turned on

        bind faucet: item where:
            is_faucet(faucet) and close(faucet, pot)
        if exists faucet:
            achieve_once is_on(faucet)
            water(pot)  # Fill the pot with water
            achieve_once is_off(faucet)

behavior __goal__():
    body:
        bind vegetables: item where:
            is_food_vegetable(vegetables) and clean(vegetables)
        # Select washed vegetables

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        put_vegetables_in_pot(vegetables, pot)
        boil_vegetables_on_stove(pot)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('_NEWLINE', '\n            ') at line 5880, column 26.
Expected one of: 
	* BASIC_TYPENAME
	* VECTOR

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_phone_2016_around_nightstand_195(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==195
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(phone,nightstand_instance)
        else:
            exp(phone,nightstand_instance)
    eff:
        unknown[phone]=False
        close[phone,nightstand_instance]=True
        close[nightstand_instance,phone]=True
    

behavior find_remote_control_2124_around_shower_16(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==16
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(remote_control,shower_instance)
        else:
            exp(remote_control,shower_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,shower_instance]=True
        close[shower_instance,remote_control]=True
    

behavior find_pot_2138_around_pot_2138(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==2138
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(pot,pot_instance)
        else:
            exp(pot,pot_instance)
    eff:
        unknown[pot]=False
        close[pot,pot_instance]=True
        close[pot_instance,pot]=True
    

#goal_representation
 
behavior put_vegetables_in_pot(vegetables: item, pot: item):
    body:
        achieve inside(vegetables, pot)

behavior boil_vegetables_on_stove(pot: item):
    body:
        if is_stove(pot):
            bind stove: item where:
                is_stove(stove) and close(stove, pot)
            achieve_once is_on(stove)
            # Ensure the stove is turned on

        bind faucet: item where:
            is_faucet(faucet) and close(faucet, pot)
        if exists faucet:
            achieve_once is_on(faucet)
            water(pot)  # Fill the pot with water
            achieve_once is_off(faucet)

behavior __goal__():
    body:
        bind vegetables: item where:
            is_food_vegetable(vegetables) and clean(vegetables)
        # Select washed vegetables

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        put_vegetables_in_pot(vegetables, pot)
        boil_vegetables_on_stove(pot)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_remote_control_2124_around_nightstand_195(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==195
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(remote_control,nightstand_instance)
        else:
            exp(remote_control,nightstand_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,nightstand_instance]=True
        close[nightstand_instance,remote_control]=True
    

behavior find_phone_2017_around_nightstand_195(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==195
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(phone,nightstand_instance)
        else:
            exp(phone,nightstand_instance)
    eff:
        unknown[phone]=False
        close[phone,nightstand_instance]=True
        close[nightstand_instance,phone]=True
    

behavior find_pot_78_around_pot_2138(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==2138
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(pot,pot_instance)
        else:
            exp(pot,pot_instance)
    eff:
        unknown[pot]=False
        close[pot,pot_instance]=True
        close[pot_instance,pot]=True
    

#exp_behavior_end

#goal_representation
 
def has_faucet(sink:item):
    # Determine whether the sink has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet,sink)
    return has_faucet

behavior wash_vegetables(vegetables:item, sink:item):
    # Define the behavior to clean vegetables in the sink
    body:
        achieve inside(vegetables, sink)
        # Place the vegetables inside the sink

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            # If the sink has a faucet, turn it on to clean

        wash(vegetables) # Clean the vegetables

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_off(faucet)
            # If the sink has a faucet, turn it off after cleaning

behavior boil_vegetables(vegetables:item, stove:item, pot:item):
    # Define the behavior to boil vegetables on the stove
    body:
        achieve inside(vegetables, pot)
        # Place the vegetables inside the pot

        achieve on(pot, stove)
        # Place the pot on the stove

behavior __goal__():
    # Main behavior to execute the provided goal for subtask
    body:
        bind vegetables: item where:
            is_food_vegetable(vegetables)
        # Select vegetables

        bind sink: item where:
            is_sink(sink)
        # Select a sink for washing

        wash_vegetables(vegetables, sink)

        bind stove: item where:
            is_stove(stove)
        # Select a stove for boiling

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        boil_vegetables(vegetables, stove, pot)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def has_faucet(sink:item):
    # Determine whether the sink has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet,sink)
    return has_faucet

behavior wash_vegetables(vegetables:item, sink:item):
    # Define the behavior to clean vegetables in the sink
    body:
        achieve inside(vegetables, sink)
        # Place the vegetables inside the sink

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            # If the sink has a faucet, turn it on to clean

        wash(vegetables) # Clean the vegetables

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_off(faucet)
            # If the sink has a faucet, turn it off after cleaning

behavior boil_vegetables(vegetables:item, stove:item, pot:item):
    # Define the behavior to boil vegetables on the stove
    body:
        achieve inside(vegetables, pot)
        # Place the vegetables inside the pot

        achieve on(pot, stove)
        # Place the pot on the stove

behavior __goal__():
    # Main behavior to execute the provided goal for subtask
    body:
        bind vegetables: item where:
            is_food_vegetable(vegetables)
        # Select vegetables

        bind sink: item where:
            is_sink(sink)
        # Select a sink for washing

        wash_vegetables(vegetables, sink)

        bind stove: item where:
            is_stove(stove)
        # Select a stove for boiling

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        boil_vegetables(vegetables, stove, pot)

##############################
From agent.py-> find a plan in act()
grab_executor(food_vegetable_2113)walk_executor(sink_19)putin_executor(food_vegetable_2113, sink_19)walk_executor(faucet_20)switchon_executor(faucet_20)walk_executor(food_vegetable_2113)wash_executor(food_vegetable_2113)walk_executor(pot_2138)open_executor(pot_2138)walk_executor(food_vegetable_2113)grab_executor(food_vegetable_2113)walk_executor(pot_2138)putin_executor(food_vegetable_2113, pot_2138)grab_executor(pot_2138)walk_executor(stove_2135)put_executor(pot_2138, stove_2135)
##############################
From agent.py
grab_executor(food_vegetable_2113)
Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. Grabbing food_vegetable_2113 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(pot_2138);open_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 11
##############################
From agent.py
walk_executor(sink_19)
Find mat_32. Find detergent_2155. Find soap_2125. Find after_shave_2063. Find cleaning_solution_2143. Find drawing_33. Find phone_2029. Robot is inside bathroom_1. Robot is close food_vegetable_2113. Robot is close bathroom_counter_18. Robot is close sink_19. Robot is no longer inside dining_room_41.Robot is no longer close food_onion_2048.Robot is no longer close food_food_2046.Robot is no longer close food_food_2073.Robot is no longer close food_steak_2080.Robot is no longer close food_apple_2081.Robot is no longer close food_bacon_2082.Robot is no longer close food_banana_2083.Robot is no longer close food_cake_2085.Robot is no longer close food_carrot_2086.Robot is no longer close food_cereal_2087.Robot is no longer close food_cheese_2088.Robot is no longer close food_chicken_2089.Robot is no longer close food_dessert_2090.Robot is no longer close food_donut_2091.Robot is no longer close food_egg_2092.Robot is no longer close food_fish_2093.Robot is no longer close food_food_2094.Robot is no longer close food_fruit_2095.Robot is no longer close food_hamburger_2096.Robot is no longer close food_ice_cream_2097.Robot is no longer close food_jam_2098.Robot is no longer close food_kiwi_2099.Robot is no longer close food_lemon_2100.Robot is no longer close food_noodles_2101.Robot is no longer close food_oatmeal_2102.Robot is no longer close food_orange_2103.Robot is no longer close food_onion_2104.Robot is no longer close food_peanut_butter_2105.Robot is no longer close food_pizza_2106.Robot is no longer close food_potato_2107.Robot is no longer close food_rice_2108.Robot is no longer close food_salt_2109.Robot is no longer close food_snack_2110.Robot is no longer close food_sugar_2111.Robot is no longer close food_turkey_2112.Robot is no longer close food_food_2001.Robot is no longer close floor_44.Robot is no longer close sauce_2148.Robot is no longer close fridge_126.
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(pot_2138);open_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 11
##############################
From agent.py
putin_executor(food_vegetable_2113, sink_19)
Robot is inside bathroom_1. Robot is close food_vegetable_2113. Robot is close bathroom_counter_18. Robot is close sink_19. food_vegetable_2113 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 5
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(pot_2138);open_executor(pot_2138);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 14
##############################
From agent.py
walk_executor(faucet_20)
Robot is inside bathroom_1. Robot is close bathroom_counter_18. Robot is close faucet_20. Robot is no longer close food_vegetable_2113.Robot is no longer close sink_19.
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 6
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(pot_2138);open_executor(pot_2138);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 14
##############################
From agent.py
switchon_executor(faucet_20)
Robot is inside bathroom_1. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 6
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(pot_2138);open_executor(pot_2138);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 14
##############################
From agent.py
walk_executor(food_vegetable_2113)
Robot is inside dining_room_41. Robot is close food_vegetable_2113. Robot is close sink_19. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_18.Robot is no longer close faucet_20.
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 5
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(pot_2138);open_executor(pot_2138);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 14
##############################
From agent.py
wash_executor(food_vegetable_2113)
Robot is inside dining_room_41. Robot is close food_vegetable_2113. Robot is close sink_19. 
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 5
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(pot_2138);open_executor(pot_2138);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 14
##############################
From agent.py
walk_executor(pot_2138)
Robot is inside dining_room_41. Robot is close pot_2138. Robot is close kitchen_counter_119. Robot is no longer close food_vegetable_2113.Robot is no longer close sink_19.
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 6
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: open_executor(pot_2138);walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 13
##############################
From agent.py
open_executor(pot_2138)
Robot is inside dining_room_41. Robot is close pot_2138. Robot is close kitchen_counter_119. 
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 6
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 12
##############################
From agent.py
walk_executor(food_vegetable_2113)
Robot is inside dining_room_41. Robot is close food_vegetable_2113. Robot is close sink_19. Robot is no longer close pot_2138.Robot is no longer close kitchen_counter_119.
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 5
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: grab_executor(food_vegetable_2113);walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 11
##############################
From agent.py
grab_executor(food_vegetable_2113)
Robot is inside dining_room_41. Robot is close food_vegetable_2113. Robot is close sink_19. Grabbing food_vegetable_2113 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(pot_2138);putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 10
##############################
From agent.py
walk_executor(pot_2138)
Robot is inside dining_room_41. Robot is close food_vegetable_2113. Robot is close pot_2138. Robot is close kitchen_counter_119. Robot is no longer close sink_19.
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: putin_executor(food_vegetable_2113, pot_2138);walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 9
##############################
From agent.py
putin_executor(food_vegetable_2113, pot_2138)
Robot is inside dining_room_41. Robot is close food_vegetable_2113. Robot is close pot_2138. Robot is close kitchen_counter_119. food_vegetable_2113 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 5
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 8
##############################
From agent.py
grab_executor(pot_2138)
Robot is inside dining_room_41. Robot is close food_vegetable_2113. Robot is close pot_2138. Robot is close kitchen_counter_119. Grabbing pot_2138 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 5
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(stove_2135);open_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 5
##############################
From agent.py
walk_executor(stove_2135)
Robot is inside dining_room_41. Robot is close pot_2138. Robot is close kitchen_counter_119. Robot is close stove_2135. Robot is no longer close food_vegetable_2113.
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: walk_executor(food_vegetable_2113);grab_executor(food_vegetable_2113);walk_executor(pot_78);putin_executor(food_vegetable_2113, pot_78);walk_executor(oven_127);switchon_executor(oven_127);
missed action num: 6
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: open_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 4
##############################
From agent.py
put_executor(pot_2138, stove_2135)
Robot is inside dining_room_41. Robot is close pot_2138. Robot is close kitchen_counter_119. Robot is close stove_2135. pot_2138 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: switchon_executor(stove_2135);
missed action num: 1
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: open_executor(stove_2135);grab_executor(pot_2138);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 5
##############################
From agent.py
Human Instruction: You need to switch on the stove to boil the vegetables.

The actions you have taken:
Action 1: Walk to kitchen_counter_119.
Action 2: look for food_vegetable_2113 around kitchen_counter_119.
Action 3: Walk to cupboard_118.
Action 4: Open cupboard_118.
Action 5: look for food_vegetable_2113 around cupboard_118.
Action 6: Walk to pot_78.
Action 7: look for food_vegetable_2113 around pot_78.
Action 8: Walk to kitchen_counter_122.
Action 9: look for food_vegetable_2113 around kitchen_counter_122.
Action 10: Walk to cutting_board_2123.
Action 11: look for food_vegetable_2113 around cutting_board_2123.
Action 12: Walk to cupboard_117.
Action 13: look for food_vegetable_2113 around cupboard_117.
Action 14: Walk to fridge_126.
Action 15: Switch off fridge_126.
Action 16: Open fridge_126.
Action 17: look for food_vegetable_2113 around fridge_126.
Action 18: Wash food_vegetable_2113.
Action 19: Grab food_vegetable_2113.
Action 20: Walk to sink_19.
Action 21: Put food_vegetable_2113 into sink_19.
Action 22: Walk to faucet_20.
Action 23: Switch on faucet_20.
Action 24: Walk to food_vegetable_2113.
Action 25: Wash food_vegetable_2113.
Action 26: Walk to pot_2138.
Action 27: Open pot_2138.
Action 28: Walk to food_vegetable_2113.
Action 29: Grab food_vegetable_2113.
Action 30: Walk to pot_2138.
Action 31: Put food_vegetable_2113 into pot_2138.
Action 32: Grab pot_2138.
Action 33: Walk to stove_2135.
Action 34: Put pot_2138 on stove_2135.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_lighter_2004_around_stovefan_125(lighter:item):
    goal: not unknown(lighter)
    body:
        assert is_lighter(lighter)
        bind stovefan_instance:item where:
            is_stovefan(stovefan_instance) and id[stovefan_instance]==125
        achieve close_char(char,stovefan_instance)
        if can_open(stovefan_instance):
            achieve_once open(stovefan_instance)
            exp(lighter,stovefan_instance)
        else:
            exp(lighter,stovefan_instance)
    eff:
        unknown[lighter]=False
        close[lighter,stovefan_instance]=True
        close[stovefan_instance,lighter]=True
    

behavior find_remote_control_2124_around_tvstand_273(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==273
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(remote_control,tvstand_instance)
        else:
            exp(remote_control,tvstand_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,tvstand_instance]=True
        close[tvstand_instance,remote_control]=True
    

behavior find_pot_2040_around_sink_120(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(pot,sink_instance)
        else:
            exp(pot,sink_instance)
    eff:
        unknown[pot]=False
        close[pot,sink_instance]=True
        close[sink_instance,pot]=True
    

#exp_behavior_end

#goal_representation

behavior boil_vegetables_on_stove(vegetables:item, pot:item, stove:item):
    body:
        achieve inside(vegetables, pot)
        achieve on(pot, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind vegetables: item where:
            is_food_vegetable(vegetables) and clean(vegetables)
        
        bind pot: item where:
            is_pot(pot) and open(pot)
        
        bind stove: item where:
            is_stove(stove)
        
        boil_vegetables_on_stove(vegetables, pot, stove)

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior boil_vegetables_on_stove(vegetables:item, pot:item, stove:item):
    body:
        achieve inside(vegetables, pot)
        achieve on(pot, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind vegetables: item where:
            is_food_vegetable(vegetables) and clean(vegetables)
        
        bind pot: item where:
            is_pot(pot) and open(pot)
        
        bind stove: item where:
            is_stove(stove)
        
        boil_vegetables_on_stove(vegetables, pot, stove)

##############################
From agent.py-> find a plan in act()
switchon_executor(stove_2135)
##############################
From agent.py
switchon_executor(stove_2135)
Robot is inside dining_room_41. Robot is close pot_2138. Robot is close kitchen_counter_119. Robot is close stove_2135. 
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k1
missed actions: 
missed action num: 0
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k3
missed actions: grab_executor(pot_2138);walk_executor(fridge_126);putin_executor(pot_2138, fridge_126);
missed action num: 3
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_2040_around_sink_120(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(pot,sink_instance)
        else:
            exp(pot,sink_instance)
    eff:
        unknown[pot]=False
        close[pot,sink_instance]=True
        close[sink_instance,pot]=True
    

behavior find_oil_2013_around_oil_2013(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind oil_instance:item where:
            is_oil(oil_instance) and id[oil_instance]==2013
        achieve close_char(char,oil_instance)
        if can_open(oil_instance):
            achieve_once open(oil_instance)
            exp(oil,oil_instance)
        else:
            exp(oil,oil_instance)
    eff:
        unknown[oil]=False
        close[oil,oil_instance]=True
        close[oil_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior store_pot_in_fridge(pot:item, fridge:item):
    body:
        achieve inside(pot, fridge)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select the pot

        bind fridge: item where:
            is_fridge(fridge)
        # Select the fridge

        store_pot_in_fridge(pot, fridge)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior store_pot_in_fridge(pot:item, fridge:item):
    body:
        achieve inside(pot, fridge)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select the pot

        bind fridge: item where:
            is_fridge(fridge)
        # Select the fridge

        store_pot_in_fridge(pot, fridge)

##############################
From agent.py-> find a plan in act()
grab_executor(pot_2138)walk_executor(fridge_126)putin_executor(pot_2138, fridge_126)
##############################
From agent.py
grab_executor(pot_2138)
Robot is inside dining_room_41. Robot is close pot_2138. Robot is close kitchen_counter_119. Robot is close stove_2135. Grabbing pot_2138 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k3
missed actions: walk_executor(fridge_126);putin_executor(pot_2138, fridge_126);
missed action num: 2
##############################
From agent.py
walk_executor(fridge_126)
Robot is inside dining_room_41. Robot is close pot_2138. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. Robot is no longer close kitchen_counter_119.Robot is no longer close stove_2135.
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k3
missed actions: putin_executor(pot_2138, fridge_126);
missed action num: 1
##############################
From agent.py
putin_executor(pot_2138, fridge_126)
Robot is inside dining_room_41. Robot is close pot_2138. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. pot_2138 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k3
missed actions: 
missed action num: 0
##############################
From evaluation.py
cdl_dataset/dataset/Cook_some_food/g4.txt
Checking k2
missed actions: walk_executor(stove_2135);switchoff_executor(stove_2135);open_executor(stove_2135);walk_executor(pot_2138);grab_executor(pot_2138);walk_executor(stove_2135);putin_executor(pot_2138, stove_2135);close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 9
##############################
