From agent.py
Reset goals: The sub-goals are: 
['1. Find the chicken and onion.', '2. Put the chicken and onion into the oven to roast.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2089_around_kitchen_counter_119(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_chicken,kitchen_counter_instance)
        else:
            exp(food_chicken,kitchen_counter_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_chicken]=True
    

behavior find_food_food_2001_around_kitchen_counter_119(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_food,kitchen_counter_instance)
        else:
            exp(food_food,kitchen_counter_instance)
    eff:
        unknown[food_food]=False
        close[food_food,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_food]=True
    

behavior find_food_onion_2104_around_kitchen_counter_119(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_onion,kitchen_counter_instance)
        else:
            exp(food_onion,kitchen_counter_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_onion]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_chicken_and_onion(chicken:item, onion:item):
    body:
        achieve close_char(char, chicken)
        achieve close_char(char, onion)

def has_chicken_and_onion(container:item):
    symbol has_required_items=exists chicken: item : is_food_chicken(chicken) and inside(chicken, container)
    symbol has_onion=exists onion: item : is_food_onion(onion) and inside(onion, container)
    return has_required_items and has_onion

behavior __goal__():
    body:
        if exists container: item : (is_fridge(container) or is_cupboard(container)) and has_chicken_and_onion(container):
            bind chicken: item where:
                is_food_chicken(chicken) and inside(chicken, container)
            bind onion: item where:
                is_food_onion(onion) and inside(onion, container)
            find_chicken_and_onion(chicken, onion)

        else:
            foreach container: item:
                if (is_fridge(container) or is_cupboard(container)) and not visited(container):
                    observe(container, "Check if there are chicken and onions inside")

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: container; available variables: [Variable<chicken: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_chicken_2089_around_fridge_126(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_food_food_2021_around_kitchen_counter_119(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_food,kitchen_counter_instance)
        else:
            exp(food_food,kitchen_counter_instance)
    eff:
        unknown[food_food]=False
        close[food_food,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_food]=True
    

behavior find_food_onion_2048_around_kitchen_counter_119(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_onion,kitchen_counter_instance)
        else:
            exp(food_onion,kitchen_counter_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_onion]=True
    

#goal_representation

behavior find_chicken_and_onion(chicken:item, onion:item):
    body:
        achieve close_char(char, chicken)
        achieve close_char(char, onion)

def has_chicken_and_onion(container:item):
    symbol has_required_items=exists chicken: item : is_food_chicken(chicken) and inside(chicken, container)
    symbol has_onion=exists onion: item : is_food_onion(onion) and inside(onion, container)
    return has_required_items and has_onion

behavior __goal__():
    body:
        if exists container: item : (is_fridge(container) or is_cupboard(container)) and has_chicken_and_onion(container):
            bind chicken: item where:
                is_food_chicken(chicken) and inside(chicken, container)
            bind onion: item where:
                is_food_onion(onion) and inside(onion, container)
            find_chicken_and_onion(chicken, onion)

        else:
            foreach container: item:
                if (is_fridge(container) or is_cupboard(container)) and not visited(container):
                    observe(container, "Check if there are chicken and onions inside")

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: container; available variables: [Variable<chicken: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_chicken_2089_around_kitchen_counter_119(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_chicken,kitchen_counter_instance)
        else:
            exp(food_chicken,kitchen_counter_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_chicken]=True
    

behavior find_food_onion_2009_around_kitchen_counter_119(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_onion,kitchen_counter_instance)
        else:
            exp(food_onion,kitchen_counter_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_onion]=True
    

#goal_representation

behavior find_chicken_and_onion(chicken:item, onion:item):
    body:
        achieve close_char(char, chicken)
        achieve close_char(char, onion)

def has_chicken_and_onion(container:item):
    symbol has_required_items=exists chicken: item : is_food_chicken(chicken) and inside(chicken, container)
    symbol has_onion=exists onion: item : is_food_onion(onion) and inside(onion, container)
    return has_required_items and has_onion

behavior __goal__():
    body:
        foreach container: item:
            if (is_fridge(container) or is_cupboard(container)) and has_chicken_and_onion(container):
                bind chicken: item where:
                    is_food_chicken(chicken) and inside(chicken, container)
                bind onion: item where:
                    is_food_onion(onion) and inside(onion, container)
                find_chicken_and_onion(chicken, onion)

            else:
                if (is_fridge(container) or is_cupboard(container)) and not visited(container):
                    observe(container, "Check if there are chicken and onions inside")

#goal_representation_end

##############################
From agent.py->reset_goal

behavior find_chicken_and_onion(chicken:item, onion:item):
    body:
        achieve close_char(char, chicken)
        achieve close_char(char, onion)

def has_chicken_and_onion(container:item):
    symbol has_required_items=exists chicken: item : is_food_chicken(chicken) and inside(chicken, container)
    symbol has_onion=exists onion: item : is_food_onion(onion) and inside(onion, container)
    return has_required_items and has_onion

behavior __goal__():
    body:
        foreach container: item:
            if (is_fridge(container) or is_cupboard(container)) and has_chicken_and_onion(container):
                bind chicken: item where:
                    is_food_chicken(chicken) and inside(chicken, container)
                bind onion: item where:
                    is_food_onion(onion) and inside(onion, container)
                find_chicken_and_onion(chicken, onion)

            else:
                if (is_fridge(container) or is_cupboard(container)) and not visited(container):
                    observe(container, "Check if there are chicken and onions inside")

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)obs(cupboard_117, Check if there are chicken and onions inside)walk_executor(cupboard_118)open_executor(cupboard_118)obs(cupboard_118, Check if there are chicken and onions inside)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)obs(fridge_126, Check if there are chicken and onions inside)
##############################
From agent.py
walk_executor(cupboard_117)
Find coffee_filter_2053. Find tray_128. Find pot_78. Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close wall_67. Robot is close cupboard_117. 
##############################
From agent.py
obs(cupboard_117, Check if there are chicken and onions inside)
Get this information:  cupboard_117 is on wall_67. cupboard_117 is close to wall_64. cupboard_117 is close to tray_128. cupboard_117 is close to wall_67. cupboard_117 is close to coffee_filter_2053. cupboard_117 is close to walllamp_140. cupboard_117 is close to knifeblock_76. cupboard_117 is close to pot_78. cupboard_117 is close to walllamp_141. cupboard_117 is close to ceiling_55. cupboard_117 is close to ceiling_54. cupboard_117 is close to kitchen_counter_119. cupboard_117 is close to sink_120. cupboard_117 is close to faucet_121. cupboard_117 is close to kitchen_counter_123. cupboard_117 is close to stovefan_125. cupboard_117 is close to oven_127. cupboard_117 is close to character_240. cupboard_117 is inside dining_room_41. coffee_filter_2053 is inside cupboard_117. cupboard_117 is CLEAN. cupboard_117 is OPEN.
##############################
From agent.py
walk_executor(cupboard_118)
Find tea_2066. Find knife_2037. Find food_peanut_butter_2077. Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. Robot is no longer close coffee_filter_2053.Robot is no longer close wall_67.Robot is no longer close cupboard_117.
##############################
From agent.py
open_executor(cupboard_118)
Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. 
##############################
From agent.py
obs(cupboard_118, Check if there are chicken and onions inside)
Get this information:  knife_2037 is inside cupboard_118. cupboard_118 is inside dining_room_41. cupboard_118 is on wall_68. cupboard_118 is close to wall_64. cupboard_118 is close to dishwasher_129. cupboard_118 is close to coffe_maker_130. cupboard_118 is close to tray_128. cupboard_118 is close to toaster_132. cupboard_118 is close to wall_68. cupboard_118 is close to microwave_135. cupboard_118 is close to walllamp_139. cupboard_118 is close to walllamp_141. cupboard_118 is close to pot_78. cupboard_118 is close to tea_2066. cupboard_118 is close to food_peanut_butter_2077. cupboard_118 is close to knife_2037. cupboard_118 is close to ceiling_55. cupboard_118 is close to kitchen_counter_122. cupboard_118 is close to ceiling_60. cupboard_118 is close to stovefan_125. cupboard_118 is close to oven_127. cupboard_118 is close to character_240. food_peanut_butter_2077 is inside cupboard_118. tea_2066 is inside cupboard_118. cupboard_118 is CLEAN. cupboard_118 is OPEN.
##############################
From agent.py
walk_executor(fridge_126)
Find food_onion_2048. Find food_food_2046. Find food_food_2073. Find food_steak_2080. Find food_apple_2081. Find food_bacon_2082. Find food_banana_2083. Find food_cake_2085. Find food_carrot_2086. Find food_cereal_2087. Find food_cheese_2088. Find food_chicken_2089. Find food_dessert_2090. Find food_donut_2091. Find food_egg_2092. Find food_fish_2093. Find food_food_2094. Find food_fruit_2095. Find food_hamburger_2096. Find food_ice_cream_2097. Find food_jam_2098. Find food_kiwi_2099. Find food_lemon_2100. Find food_noodles_2101. Find food_oatmeal_2102. Find food_orange_2103. Find food_onion_2104. Find food_peanut_butter_2105. Find food_pizza_2106. Find food_potato_2107. Find food_rice_2108. Find food_salt_2109. Find food_snack_2110. Find food_sugar_2111. Find food_turkey_2112. Find food_vegetable_2113. Find food_food_2001. Find sauce_2148. Find basket_for_clothes_2078. Find food_food_1000. Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. Robot is no longer close wall_68.Robot is no longer close tea_2066.Robot is no longer close knife_2037.Robot is no longer close cupboard_118.Robot is no longer close food_peanut_butter_2077.
##############################
From agent.py
switchoff_executor(fridge_126)
Find keyboard_211. Find mouse_213. Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
open_executor(fridge_126)
Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
obs(fridge_126, Check if there are chicken and onions inside)
Get this information:  fridge_126 is close to food_onion_2048. fridge_126 is close to wall_179. fridge_126 is close to ceilinglamp_137. fridge_126 is close to ceiling_53. fridge_126 is close to ceiling_54. fridge_126 is close to food_food_2073. fridge_126 is close to basket_for_clothes_2078. fridge_126 is close to washing_machine_2079. fridge_126 is close to food_steak_2080. fridge_126 is close to food_apple_2081. fridge_126 is close to food_bacon_2082. fridge_126 is close to food_banana_2083. fridge_126 is close to floor_163. fridge_126 is close to food_cake_2085. fridge_126 is close to food_carrot_2086. fridge_126 is close to food_cereal_2087. fridge_126 is close to food_cheese_2088. fridge_126 is close to food_chicken_2089. fridge_126 is close to food_dessert_2090. fridge_126 is close to food_donut_2091. fridge_126 is close to food_egg_2092. fridge_126 is close to food_fish_2093. fridge_126 is close to food_food_2094. fridge_126 is close to food_fruit_2095. fridge_126 is close to food_hamburger_2096. fridge_126 is close to food_ice_cream_2097. fridge_126 is close to food_jam_2098. fridge_126 is close to food_kiwi_2099. fridge_126 is close to food_lemon_2100. fridge_126 is close to food_noodles_2101. fridge_126 is close to food_oatmeal_2102. fridge_126 is close to food_orange_2103. fridge_126 is close to food_onion_2104. fridge_126 is close to food_peanut_butter_2105. fridge_126 is close to food_pizza_2106. fridge_126 is close to food_potato_2107. fridge_126 is close to food_rice_2108. fridge_126 is close to food_salt_2109. fridge_126 is close to food_snack_2110. fridge_126 is close to food_sugar_2111. fridge_126 is close to food_turkey_2112. fridge_126 is close to food_vegetable_2113. fridge_126 is close to floor_164. fridge_126 is close to door_61. fridge_126 is close to doorjamb_190. fridge_126 is close to desk_193. fridge_126 is close to wall_66. fridge_126 is close to wall_67. fridge_126 is close to powersocket_72. fridge_126 is close to light_73. fridge_126 is close to computer_209. fridge_126 is close to cpuscreen_210. fridge_126 is close to floor_169. fridge_126 is close to keyboard_211. fridge_126 is close to light_212. fridge_126 is close to mouse_213. fridge_126 is close to mousepad_214. fridge_126 is close to food_food_2001. fridge_126 is close to floor_44. fridge_126 is close to floor_45. fridge_126 is close to sauce_2148. fridge_126 is close to food_food_1000. fridge_126 is close to wall_175. fridge_126 is close to food_food_2046. fridge_126 is close to character_240. food_onion_2048 is inside fridge_126. food_peanut_butter_2105 is inside fridge_126. food_fruit_2095 is inside fridge_126. food_pizza_2106 is inside fridge_126. fridge_126 is inside dining_room_41. food_cereal_2087 is inside fridge_126. food_jam_2098 is inside fridge_126. food_lemon_2100 is inside fridge_126. food_dessert_2090 is inside fridge_126. food_salt_2109 is inside fridge_126. food_bacon_2082 is inside fridge_126. food_fish_2093 is inside fridge_126. food_turkey_2112 is inside fridge_126. fridge_126 is on floor_44. food_food_2046 is inside fridge_126. food_cake_2085 is inside fridge_126. food_onion_2104 is inside fridge_126. food_potato_2107 is inside fridge_126. food_hamburger_2096 is inside fridge_126. sauce_2148 is inside fridge_126. food_kiwi_2099 is inside fridge_126. food_snack_2110 is inside fridge_126. food_donut_2091 is inside fridge_126. food_noodles_2101 is inside fridge_126. food_oatmeal_2102 is inside fridge_126. food_banana_2083 is inside fridge_126. food_food_2094 is inside fridge_126. food_vegetable_2113 is inside fridge_126. food_carrot_2086 is inside fridge_126. food_food_2001 is inside fridge_126. food_cheese_2088 is inside fridge_126. food_chicken_2089 is inside fridge_126. food_ice_cream_2097 is inside fridge_126. food_rice_2108 is inside fridge_126. food_apple_2081 is inside fridge_126. food_steak_2080 is inside fridge_126. food_sugar_2111 is inside fridge_126. food_food_2073 is inside fridge_126. food_egg_2092 is inside fridge_126. food_orange_2103 is inside fridge_126. fridge_126 is OFF. fridge_126 is CLEAN. fridge_126 is PLUGGED_IN. fridge_126 is OPEN.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_food_2094_around_oven_127(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==127
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_food,oven_instance)
        else:
            exp(food_food,oven_instance)
    eff:
        unknown[food_food]=False
        close[food_food,oven_instance]=True
        close[oven_instance,food_food]=True
    

behavior find_food_onion_2048_around_walllamp_140(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind walllamp_instance:item where:
            is_walllamp(walllamp_instance) and id[walllamp_instance]==140
        achieve close_char(char,walllamp_instance)
        if can_open(walllamp_instance):
            achieve_once open(walllamp_instance)
            exp(food_onion,walllamp_instance)
        else:
            exp(food_onion,walllamp_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,walllamp_instance]=True
        close[walllamp_instance,food_onion]=True
    

#exp_behavior_end

#goal_representation
 
def in_oven(item:item, oven:item):
    # Function to check if the item is inside the oven
    symbol is_inside=exists x: item : inside(x, oven) and (is_food_chicken(x) or is_food_onion(x))
    return is_inside

behavior put_in_oven(item:item, oven:item):
    body:
        achieve inside(item, oven)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select an item that is chicken

        bind onion: item where:
            is_food_onion(onion)
        # Select an item that is onion

        bind oven: item where:
            is_oven(oven)
        # Select an item that is an oven

        if not in_oven(chicken, oven):
            observe(oven, "Check if there is chicken inside the oven")
        put_in_oven(chicken, oven)

        if not in_oven(onion, oven):
            observe(oven, "Check if there is onion inside the oven")
        put_in_oven(onion, oven)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def in_oven(item:item, oven:item):
    # Function to check if the item is inside the oven
    symbol is_inside=exists x: item : inside(x, oven) and (is_food_chicken(x) or is_food_onion(x))
    return is_inside

behavior put_in_oven(item:item, oven:item):
    body:
        achieve inside(item, oven)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select an item that is chicken

        bind onion: item where:
            is_food_onion(onion)
        # Select an item that is onion

        bind oven: item where:
            is_oven(oven)
        # Select an item that is an oven

        if not in_oven(chicken, oven):
            observe(oven, "Check if there is chicken inside the oven")
        put_in_oven(chicken, oven)

        if not in_oven(onion, oven):
            observe(oven, "Check if there is onion inside the oven")
        put_in_oven(onion, oven)

##############################
From agent.py-> find a plan in act()
walk_executor(stove_2135)open_executor(stove_2135)obs(stove_2135, Check if there is chicken inside the oven)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(stove_2135)putin_executor(food_chicken_2089, stove_2135)walk_executor(food_onion_2104)grab_executor(food_onion_2104)walk_executor(stove_2135)putin_executor(food_onion_2104, stove_2135)
##############################
From agent.py
walk_executor(stove_2135)
Find pot_2138. Find bowl_2141. Find plate_2152. Find cutting_board_2123. Find food_salt_2041. Find fork_2150. Find bowl_2140. Find bowl_2142. Find fork_2151. Robot is inside dining_room_41. Robot is close kitchen_counter_119. Robot is close stove_2135. Robot is no longer close food_onion_2048.Robot is no longer close food_food_2046.Robot is no longer close food_food_2073.Robot is no longer close food_steak_2080.Robot is no longer close food_apple_2081.Robot is no longer close food_bacon_2082.Robot is no longer close food_banana_2083.Robot is no longer close food_cake_2085.Robot is no longer close food_carrot_2086.Robot is no longer close food_cereal_2087.Robot is no longer close food_cheese_2088.Robot is no longer close food_chicken_2089.Robot is no longer close food_dessert_2090.Robot is no longer close food_donut_2091.Robot is no longer close food_egg_2092.Robot is no longer close food_fish_2093.Robot is no longer close food_food_2094.Robot is no longer close food_fruit_2095.Robot is no longer close food_hamburger_2096.Robot is no longer close food_ice_cream_2097.Robot is no longer close food_jam_2098.Robot is no longer close food_kiwi_2099.Robot is no longer close food_lemon_2100.Robot is no longer close food_noodles_2101.Robot is no longer close food_oatmeal_2102.Robot is no longer close food_orange_2103.Robot is no longer close food_onion_2104.Robot is no longer close food_peanut_butter_2105.Robot is no longer close food_pizza_2106.Robot is no longer close food_potato_2107.Robot is no longer close food_rice_2108.Robot is no longer close food_salt_2109.Robot is no longer close food_snack_2110.Robot is no longer close food_sugar_2111.Robot is no longer close food_turkey_2112.Robot is no longer close food_vegetable_2113.Robot is no longer close food_food_2001.Robot is no longer close floor_44.Robot is no longer close sauce_2148.Robot is no longer close fridge_126.
##############################
From agent.py
open_executor(stove_2135)
Robot is inside dining_room_41. Robot is close kitchen_counter_119. Robot is close stove_2135. 
##############################
From agent.py
obs(stove_2135, Check if there is chicken inside the oven)
Get this information:  stove_2135 is close to kitchen_counter_119. stove_2135 is close to character_240. stove_2135 is inside dining_room_41. stove_2135 is on kitchen_counter_119. stove_2135 is OFF. stove_2135 is OPEN.
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close fridge_126. Robot is no longer close kitchen_counter_119.Robot is no longer close stove_2135.
##############################
From agent.py
grab_executor(food_chicken_2089)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close fridge_126. Grabbing food_chicken_2089 by right hand. 
##############################
From agent.py
walk_executor(stove_2135)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close kitchen_counter_119. Robot is close stove_2135. Robot is no longer close fridge_126.
##############################
From agent.py
putin_executor(food_chicken_2089, stove_2135)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close kitchen_counter_119. Robot is close stove_2135. food_chicken_2089 released by right hand. 
##############################
From agent.py
walk_executor(food_onion_2104)
Robot is inside dining_room_41. Robot is close food_onion_2104. Robot is close fridge_126. Robot is no longer close food_chicken_2089.Robot is no longer close kitchen_counter_119.Robot is no longer close stove_2135.
##############################
From agent.py
grab_executor(food_onion_2104)
Robot is inside dining_room_41. Robot is close food_onion_2104. Robot is close fridge_126. Grabbing food_onion_2104 by right hand. 
##############################
From agent.py
walk_executor(stove_2135)
Robot is inside dining_room_41. Robot is close food_onion_2104. Robot is close food_chicken_2089. Robot is close kitchen_counter_119. Robot is close stove_2135. Robot is no longer close fridge_126.
##############################
From agent.py
putin_executor(food_onion_2104, stove_2135)
Robot is inside dining_room_41. Robot is close food_onion_2104. Robot is close food_chicken_2089. Robot is close kitchen_counter_119. Robot is close stove_2135. food_onion_2104 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g2.txt
Checking k1
missed actions: close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 2
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g2.txt
Checking k1
missed actions: close_executor(stove_2135);switchon_executor(stove_2135);
missed action num: 2
##############################
