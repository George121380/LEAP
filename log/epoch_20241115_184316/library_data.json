{
    "behavior_data": {
        "Prepare breakfast": [
            {
                "usage_description": "",
                "cdl": "behavior cook_chicken(chicken:item, fryingpan:item, stove:item):\n    body:\n        achieve inside(chicken, fryingpan) \n        # Put chicken inside the frying pan\n\n        achieve on(fryingpan, stove)\n        # Place the frying pan on the stove\n\n        achieve is_on(stove)\n        # Turn on the stove to start cooking the chicken\n",
                "source_sub_task": "1. Cook the chicken and pasta.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior boil_pasta(pasta:item, pot:item, stove:item, faucet:item):\n    body:\n        achieve inside(pasta, pot)\n        # Put pasta inside the pot\n\n        bind faucet_instance: item where:\n            is_faucet(faucet_instance) and id[faucet_instance]==id[faucet]\n            \n        achieve has_water(pot)\n        # Ensure the pot has water, which implies using the faucet\n\n        achieve on(pot, stove)\n        # Place the pot on the stove\n\n        achieve is_on(stove)\n        # Turn on the stove to start boiling the pasta\n",
                "source_sub_task": "1. Cook the chicken and pasta.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior combine_chicken_and_pasta(chicken:item, pasta:item, plate:item):\n    body:\n        achieve on(chicken, plate)\n        achieve on(pasta, plate)\n",
                "source_sub_task": "2. Combine the chicken and pasta, and put them on a plate.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior cook_pasta(pasta:item, pot:item, stove:item):\n    body:\n        achieve inside(pasta, pot)\n        # Place the pasta inside the pot\n\n        achieve has_water(pot)\n        # Add water to the pot\n\n        achieve on(pot, stove)\n        # Place the pot on the stove\n\n        achieve is_on(stove)\n        # Turn on the stove to cook the pasta\n",
                "source_sub_task": "1. Cook the chicken and pasta.",
                "functions": [
                    "def is_stove_on_1(stove: item):\n    # Function to check if the stove is on\n    symbol stove_on=exists s: item : is_stove(s) and is_on(s)\n    return stove_on\n",
                    "def is_pot_used_for_boiling_1(pot: item):\n    # Function to check if the pot is being used for boiling\n    symbol pot_used=has_water(pot)\n    return pot_used\n"
                ]
            },
            {
                "usage_description": "",
                "cdl": "behavior cook_chicken(chicken:item, fryingpan:item, stove:item):\n    body:\n        achieve on(chicken, fryingpan)\n        # Put the chicken in the frying pan\n\n        achieve on(fryingpan, stove)\n        # Place the frying pan on the stove\n\n        achieve is_on(stove)\n        # Turn on the stove to cook the chicken\n",
                "source_sub_task": "1. Cook the chicken and pasta.",
                "functions": [
                    "def is_stove_on_1(stove: item):\n    # Function to check if the stove is on\n    symbol stove_on=exists s: item : is_stove(s) and is_on(s)\n    return stove_on\n",
                    "def is_pot_used_for_boiling_1(pot: item):\n    # Function to check if the pot is being used for boiling\n    symbol pot_used=has_water(pot)\n    return pot_used\n"
                ]
            },
            {
                "usage_description": "",
                "cdl": "behavior combine_chicken_and_pasta(pasta:item, chicken:item, plate:item):\n    body:\n        achieve inside(pasta, plate)\n        # Put the pasta on the plate\n\n        achieve on(chicken, plate)\n        # Place the chicken on the plate\n",
                "source_sub_task": "2. Combine the cooked chicken and pasta, then place it on a plate.",
                "functions": [
                    "def has_faucet_1(sink:item):\n    # Determine if the sink has a faucet connected\n    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet,sink)\n    return has_faucet\n"
                ]
            },
            {
                "usage_description": "",
                "cdl": "behavior clean_chicken(chicken:item, sink:item):\n    body:\n        achieve_once inside(chicken, sink)\n        # Ensure that the chicken is placed inside the sink\n\n        if has_faucet_2(sink):\n            bind faucet: item where:\n                is_faucet(faucet) and close(faucet,sink)\n            achieve_once is_on(faucet)\n            # If the sink has a faucet, turn it on to clean\n                \n        scrub(chicken)\n        rinse(chicken)\n        # Key steps for cleaning the chicken\n        \n        if has_faucet_2(sink):\n            bind faucet: item where:\n                is_faucet(faucet) and close(faucet,sink)\n            achieve_once is_off(faucet)\n            # If the sink has a faucet, turn it off after cleaning\n",
                "source_sub_task": "1. Clean and boil the chicken.",
                "functions": [
                    "def has_faucet_2(sink:item):\n    # Determine whether this pool has a faucet\n    symbol has_faucet=exists faucet: item : is_faucet(faucet) and close(faucet,sink)\n    return has_faucet\n"
                ]
            },
            {
                "usage_description": "",
                "cdl": "behavior place_and_boil_chicken(chicken:item, fryingpan:item, stove:item):\n    body:\n        achieve inside(chicken, fryingpan)\n        # Place chicken into the fryingpan\n\n        achieve on(fryingpan, stove)\n        # Place fryingpan on the stove\n\n        achieve is_on(stove)\n        # Ensure stove is turned on\n",
                "source_sub_task": "1. Clean and boil the chicken.",
                "functions": [
                    "def has_faucet_2(sink:item):\n    # Determine whether this pool has a faucet\n    symbol has_faucet=exists faucet: item : is_faucet(faucet) and close(faucet,sink)\n    return has_faucet\n"
                ]
            },
            {
                "usage_description": "",
                "cdl": "behavior check_stove_status(stove:item):\n    body:\n        observe(stove,\"Is the stove on\")\n",
                "source_sub_task": "2. Cook the pasta.",
                "functions": []
            },
            {
                "usage_description": "",
                "cdl": "behavior boil_pasta(pot:item, stove:item):\n    body:\n        achieve has_water(pot)\n        # Ensure the pot has water\n\n        achieve on(pot, stove)\n        # Place the pot on the stove\n\n        achieve is_on(stove)\n        # Ensure the stove is on to start boiling\n",
                "source_sub_task": "2. Cook the pasta.",
                "functions": []
            }
        ]
    },
    "function_name_mapping": {
        "is_stove_on": "is_stove_on_1",
        "is_pot_used_for_boiling": "is_pot_used_for_boiling_1",
        "has_faucet": "has_faucet_2"
    },
    "function_name_counts": {
        "is_stove_on": 2,
        "is_pot_used_for_boiling": 2,
        "has_faucet": 3
    }
}