From agent.py
Reset goals: The sub-goals are: 
['1. Cook the chicken and pasta.', '2. Combine the cooked chicken and pasta, then put it on a plate.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_78_around_cupboard_118(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(pot,cupboard_instance)
        else:
            exp(pot,cupboard_instance)
    eff:
        unknown[pot]=False
        close[pot,cupboard_instance]=True
        close[cupboard_instance,pot]=True
    

behavior find_dry_pasta_2114_around_cupboard_118(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(dry_pasta,cupboard_instance)
        else:
            exp(dry_pasta,cupboard_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,cupboard_instance]=True
        close[cupboard_instance,dry_pasta]=True
    

behavior find_knife_2037_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_food_chicken_2089_around_fridge_126(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

#exp_behavior_end

#goal_representation
behavior cut_the_chicken(chicken:item, knife:item):
    body:
        achieve_once cut(chicken)

behavior cook_pasta(pasta:item, pot:item):
    body:
        achieve_once inside(pasta, pot)

behavior boil_water_in_pot(pot:item, stove:item):
    body:
        achieve has_water(pot)
        achieve_once on(pot, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind pasta: item where:
            is_dry_pasta(pasta)

        bind pot: item where:
            is_pot(pot)

        bind stove: item where:
            is_stove(stove)

        cut_the_chicken(chicken, knife)
        boil_water_in_pot(pot, stove)
        cook_pasta(pasta, pot)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior cut_the_chicken(chicken:item, knife:item):
    body:
        achieve_once cut(chicken)

behavior cook_pasta(pasta:item, pot:item):
    body:
        achieve_once inside(pasta, pot)

behavior boil_water_in_pot(pot:item, stove:item):
    body:
        achieve has_water(pot)
        achieve_once on(pot, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind pasta: item where:
            is_dry_pasta(pasta)

        bind pot: item where:
            is_pot(pot)

        bind stove: item where:
            is_stove(stove)

        cut_the_chicken(chicken, knife)
        boil_water_in_pot(pot, stove)
        cook_pasta(pasta, pot)
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_chicken_2089, fridge_126)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(cutting_board_2123)put_executor(food_chicken_2089, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_chicken_2089)cut_executor(food_chicken_2089)walk_executor(cupboard_118)open_executor(cupboard_118)exp(pot_2138, cupboard_118)walk_executor(pot_2138)open_executor(pot_2138)grab_executor(pot_2138)walk_executor(faucet_121)walk_executor(kitchen_counter_119)put_executor(knife_2122, kitchen_counter_119)switchon_executor(faucet_121)switchoff_executor(faucet_121)put_executor(pot_2138, stove_2135)switchon_executor(stove_2135)walk_executor(cupboard_118)exp(dry_pasta_2114, cupboard_118)walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(pot_2138)putin_executor(dry_pasta_2114, pot_2138)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_chicken_2089, fridge_126)
Find food_chicken_2089. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_chicken_2089)walk_executor(cutting_board_2123)put_executor(food_chicken_2089, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_chicken_2089)cut_executor(food_chicken_2089)walk_executor(cupboard_118)open_executor(cupboard_118)exp(pot_2138, cupboard_118)walk_executor(pot_2138)open_executor(pot_2138)grab_executor(pot_2138)walk_executor(faucet_121)walk_executor(kitchen_counter_119)put_executor(knife_2122, kitchen_counter_119)switchon_executor(faucet_121)switchoff_executor(faucet_121)put_executor(pot_2138, stove_2135)switchon_executor(stove_2135)walk_executor(cupboard_118)exp(dry_pasta_2114, cupboard_118)walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(pot_2138)putin_executor(dry_pasta_2114, pot_2138)
##############################
From agent.py
grab_executor(food_chicken_2089)
Robot find: Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. Grabbing food_chicken_2089 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_78, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_chicken_2089, cutting_board_2123)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. cutting_board_2123 is close food_chicken_2089. food_chicken_2089 is close cutting_board_2123. food_chicken_2089 is on cutting_board_2123. food_chicken_2089 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_76)
Robot find: Robot is close to the knifeblock_76. 
##############################
From agent.py
exp(knife_2122, knifeblock_76)
Fail to find knife_2122 around knifeblock_76. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_19)exp(knife_2122, sink_19)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_chicken_2089)cut_executor(food_chicken_2089)walk_executor(pot_78)grab_executor(pot_78)walk_executor(faucet_121)walk_executor(kitchen_counter_119)put_executor(knife_2122, kitchen_counter_119)switchon_executor(faucet_121)switchoff_executor(faucet_121)put_executor(pot_78, stove_2135)switchon_executor(stove_2135)walk_executor(cupboard_118)open_executor(cupboard_118)exp(dry_pasta_2114, cupboard_118)walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(pot_78)putin_executor(dry_pasta_2114, pot_78)
##############################
From agent.py
walk_executor(sink_19)
Robot find: after_shave_2063, soap_2125, detergent_2155, mat_32, phone_2029, cleaning_solution_2143, drawing_33, Robot is close to the bathroom_counter_18. Robot is close to the sink_19. 
##############################
From agent.py
exp(knife_2122, sink_19)
Fail to find knife_2122 around sink_19. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(knife_2122, cupboard_118)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_chicken_2089)cut_executor(food_chicken_2089)walk_executor(pot_78)grab_executor(pot_78)walk_executor(faucet_121)walk_executor(kitchen_counter_119)put_executor(knife_2122, kitchen_counter_119)switchon_executor(faucet_121)switchoff_executor(faucet_121)put_executor(pot_78, stove_2135)switchon_executor(stove_2135)walk_executor(cupboard_118)exp(dry_pasta_2114, cupboard_118)walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(pot_78)putin_executor(dry_pasta_2114, pot_78)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(knife_2122, cupboard_118)
Fail to find knife_2122 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
grab_executor(knife_2037)walk_executor(food_chicken_2089)cut_executor(food_chicken_2089)walk_executor(pot_78)grab_executor(pot_78)walk_executor(faucet_121)walk_executor(kitchen_counter_119)put_executor(knife_2037, kitchen_counter_119)switchon_executor(faucet_121)switchoff_executor(faucet_121)put_executor(pot_78, stove_2135)switchon_executor(stove_2135)walk_executor(cupboard_117)exp(dry_pasta_2114, cupboard_117)walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(pot_78)putin_executor(dry_pasta_2114, pot_78)
##############################
From agent.py
grab_executor(knife_2037)
Robot find: Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. Grabbing knife_2037 by right hand. 
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. 
##############################
From agent.py
cut_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. 
##############################
From agent.py
walk_executor(pot_78)
Robot find: food_food_2064, Robot is close to the knife_2037. Robot is close to the pot_78. Robot is close to the oven_127. 
##############################
From agent.py
grab_executor(pot_78)
Robot find: Robot is close to the knife_2037. Robot is close to the pot_78. Robot is close to the oven_127. Grabbing pot_78 by left hand. 
##############################
From agent.py
walk_executor(faucet_121)
Robot find: Robot is close to the knife_2037. Robot is close to the pot_78. Robot is close to the faucet_121. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: Robot is close to the knife_2037. Robot is close to the pot_78. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(knife_2037, kitchen_counter_119)
Robot find: Robot is close to the knife_2037. Robot is close to the pot_78. Robot is close to the kitchen_counter_119. kitchen_counter_119 is close knife_2037. knife_2037 is close kitchen_counter_119. knife_2037 is on kitchen_counter_119. knife_2037 released by right hand. 
##############################
From agent.py
switchon_executor(faucet_121)
Robot find: Robot is close to the knife_2037. Robot is close to the pot_78. Robot is close to the kitchen_counter_119. faucet_121 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_121)
Robot find: Robot is close to the knife_2037. Robot is close to the pot_78. Robot is close to the kitchen_counter_119. faucet_121 is turned off. 
##############################
From agent.py
put_executor(pot_78, stove_2135)
Robot find: Robot is close to the knife_2037. Robot is close to the pot_78. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. pot_78 is close stove_2135. pot_78 is on stove_2135. stove_2135 is close pot_78. pot_78 released by left hand. 
##############################
From agent.py
switchon_executor(stove_2135)
Robot find: Robot is close to the knife_2037. Robot is close to the pot_78. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. stove_2135 is turned on. 
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(dry_pasta_2114, cupboard_117)
Fail to find dry_pasta_2114 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(knife_2037)grab_executor(knife_2037)walk_executor(food_chicken_2089)cut_executor(food_chicken_2089)walk_executor(food_food_2064)exp(dry_pasta_2114, food_food_2064)walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(pot_78)putin_executor(dry_pasta_2114, pot_78)
##############################
From agent.py
walk_executor(knife_2037)
Robot find: Robot is close to the knife_2037. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
grab_executor(knife_2037)
Robot find: Robot is close to the knife_2037. Robot is close to the kitchen_counter_119. Grabbing knife_2037 by right hand. 
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. 
##############################
From agent.py
cut_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. 
##############################
From agent.py
walk_executor(food_food_2064)
Robot find: Robot is close to the knife_2037. Robot is close to the food_food_2064. Robot is close to the oven_127. 
##############################
From agent.py
exp(dry_pasta_2114, food_food_2064)
Fail to find dry_pasta_2114 around food_food_2064. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_chicken_2089)cut_executor(food_chicken_2089)walk_executor(drawing_33)exp(dry_pasta_2114, drawing_33)walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(pot_78)putin_executor(dry_pasta_2114, pot_78)
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. 
##############################
From agent.py
cut_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. 
##############################
From agent.py
walk_executor(drawing_33)
Robot find: towel_2128, Robot is close to the knife_2037. Robot is close to the drawing_33. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find dry_pasta_2114 ?
Answer: The dry_pasta_2114 is located in the dining_room_41. You can find it placed on top of table_114. The dry_pasta_2114 is situated close to the table, so look for a package of dry pasta directly on the surface of table_114.
Re-decompose: None

##############################
From agent.py
Human Instruction: The dry_pasta_2114 is located in the dining_room_41. You can find it placed on top of table_114. The dry_pasta_2114 is situated close to the table, so look for a package of dry pasta directly on the surface of table_114.

The actions you have taken:
Action 1: Walk to fridge_126.
Action 2: Switch off fridge_126.
Action 3: Open fridge_126.
Action 4: look for food_chicken_2089 around fridge_126.
Action 5: Grab food_chicken_2089.
Action 6: Walk to cutting_board_2123.
Action 7: Put food_chicken_2089 on cutting_board_2123.
Action 8: Walk to knifeblock_76.
Action 9: look for knife_2122 around knifeblock_76.
Action 10: Walk to sink_19.
Action 11: look for knife_2122 around sink_19.
Action 12: Walk to cupboard_118.
Action 13: Open cupboard_118.
Action 14: look for knife_2122 around cupboard_118.
Action 15: Grab knife_2037.
Action 16: Walk to food_chicken_2089.
Action 17: Cut food_chicken_2089.
Action 18: Walk to pot_78.
Action 19: Grab pot_78.
Action 20: Walk to faucet_121.
Action 21: Walk to kitchen_counter_119.
Action 22: Put knife_2037 on kitchen_counter_119.
Action 23: Switch on faucet_121.
Action 24: Switch off faucet_121.
Action 25: Put pot_78 on stove_2135.
Action 26: Switch on stove_2135.
Action 27: Walk to cupboard_117.
Action 28: look for dry_pasta_2114 around cupboard_117.
Action 29: Walk to knife_2037.
Action 30: Grab knife_2037.
Action 31: Walk to food_chicken_2089.
Action 32: Cut food_chicken_2089.
Action 33: Walk to food_food_2064.
Action 34: look for dry_pasta_2114 around food_food_2064.
Action 35: Walk to food_chicken_2089.
Action 36: Cut food_chicken_2089.
Action 37: Walk to drawing_33.

##############################
From agent.py
exp(dry_pasta_2114, drawing_33)
Fail to find dry_pasta_2114 around drawing_33. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_chicken_2089)cut_executor(food_chicken_2089)walk_executor(table_114)exp(dry_pasta_2114, table_114)walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(pot_78)putin_executor(dry_pasta_2114, pot_78)
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. 
##############################
From agent.py
cut_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. 
##############################
From agent.py
walk_executor(table_114)
Robot find: mat_102, cup_2049, pillow_103, pillow_104, pillow_105, pillow_106, lighter_2004, lighter_2039, box_2038, clothes_hat_2117, milk_2115, cup_2134, check_2058, drawing_110, drawing_111, clothes_gloves_2118, cup_2132, food_bread_2084, dry_pasta_2114, knife_2122, cup_2133, table_cloth_2005, food_food_2021, Robot is close to the knife_2037. Robot is close to the table_114. Robot is close to the mat_102. 
##############################
From agent.py
exp(dry_pasta_2114, table_114)
Find dry_pasta_2114. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_chicken_2089)cut_executor(food_chicken_2089)walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(pot_78)putin_executor(dry_pasta_2114, pot_78)
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. 
##############################
From agent.py
cut_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. 
##############################
From agent.py
walk_executor(dry_pasta_2114)
Robot find: Robot is close to the knife_2037. Robot is close to the dry_pasta_2114. Robot is close to the table_114. 
##############################
From agent.py
grab_executor(dry_pasta_2114)
Robot find: Robot is close to the knife_2037. Robot is close to the dry_pasta_2114. Robot is close to the table_114. Grabbing dry_pasta_2114 by left hand. 
##############################
From agent.py
walk_executor(pot_78)
Robot find: Robot is close to the knife_2037. Robot is close to the dry_pasta_2114. Robot is close to the pot_78. Robot is close to the stove_2135. 
##############################
From agent.py
putin_executor(dry_pasta_2114, pot_78)
Robot find: Robot is close to the knife_2037. Robot is close to the dry_pasta_2114. Robot is close to the pot_78. Robot is close to the stove_2135. dry_pasta_2114 is inside pot_78. pot_78 is close dry_pasta_2114. dry_pasta_2114 is close pot_78. dry_pasta_2114 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure that the pot contains water before proceeding with the cooking process on the stove. Although the faucet was turned on and off, it's not explicitly mentioned that the pot now contains water. Ensure the pot is filled before putting it on the stove for cooking.
##############################
From agent.py
Human Instruction: You need to ensure that the pot contains water before proceeding with the cooking process on the stove. Although the faucet was turned on and off, it's not explicitly mentioned that the pot now contains water. Ensure the pot is filled before putting it on the stove for cooking.

The actions you have taken:
Action 1: Walk to fridge_126.
Action 2: Switch off fridge_126.
Action 3: Open fridge_126.
Action 4: look for food_chicken_2089 around fridge_126.
Action 5: Grab food_chicken_2089.
Action 6: Walk to cutting_board_2123.
Action 7: Put food_chicken_2089 on cutting_board_2123.
Action 8: Walk to knifeblock_76.
Action 9: look for knife_2122 around knifeblock_76.
Action 10: Walk to sink_19.
Action 11: look for knife_2122 around sink_19.
Action 12: Walk to cupboard_118.
Action 13: Open cupboard_118.
Action 14: look for knife_2122 around cupboard_118.
Action 15: Grab knife_2037.
Action 16: Walk to food_chicken_2089.
Action 17: Cut food_chicken_2089.
Action 18: Walk to pot_78.
Action 19: Grab pot_78.
Action 20: Walk to faucet_121.
Action 21: Walk to kitchen_counter_119.
Action 22: Put knife_2037 on kitchen_counter_119.
Action 23: Switch on faucet_121.
Action 24: Switch off faucet_121.
Action 25: Put pot_78 on stove_2135.
Action 26: Switch on stove_2135.
Action 27: Walk to cupboard_117.
Action 28: look for dry_pasta_2114 around cupboard_117.
Action 29: Walk to knife_2037.
Action 30: Grab knife_2037.
Action 31: Walk to food_chicken_2089.
Action 32: Cut food_chicken_2089.
Action 33: Walk to food_food_2064.
Action 34: look for dry_pasta_2114 around food_food_2064.
Action 35: Walk to food_chicken_2089.
Action 36: Cut food_chicken_2089.
Action 37: Walk to drawing_33.
Action 38: look for dry_pasta_2114 around drawing_33.
Action 39: Walk to food_chicken_2089.
Action 40: Cut food_chicken_2089.
Action 41: Walk to table_114.
Action 42: look for dry_pasta_2114 around table_114.
Action 43: Walk to food_chicken_2089.
Action 44: Cut food_chicken_2089.
Action 45: Walk to dry_pasta_2114.
Action 46: Grab dry_pasta_2114.
Action 47: Walk to pot_78.
Action 48: Put dry_pasta_2114 into pot_78.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_2040_around_sink_120(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(pot,sink_instance)
        else:
            exp(pot,sink_instance)
    eff:
        unknown[pot]=False
        close[pot,sink_instance]=True
        close[sink_instance,pot]=True
    

behavior find_knife_2037_around_kitchen_counter_122(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(knife,kitchen_counter_instance)
        else:
            exp(knife,kitchen_counter_instance)
    eff:
        unknown[knife]=False
        close[knife,kitchen_counter_instance]=True
        close[kitchen_counter_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior ensure_pot_has_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        # Approach the faucet to fill the pot
        achieve is_on(faucet) # Ensure the faucet is on
        achieve has_water(pot)
        # Fill the pot with water

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior add_chicken_and_pasta(pot:item, chicken:item, pasta:item):
    body:
        achieve_once inside(chicken, pot)
        achieve_once inside(pasta, pot)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot]==78

        bind stove: item where:
            is_stove(stove) and id[stove]==2135

        bind faucet: item where:
            is_faucet(faucet) and id[faucet]==121

        bind chicken: item where:
            is_food_chicken(chicken)

        bind pasta: item where:
            is_dry_pasta(pasta)

        ensure_pot_has_water(pot, faucet)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)
        add_chicken_and_pasta(pot, chicken, pasta)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior ensure_pot_has_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        # Approach the faucet to fill the pot
        achieve is_on(faucet) # Ensure the faucet is on
        achieve has_water(pot)
        # Fill the pot with water

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior add_chicken_and_pasta(pot:item, chicken:item, pasta:item):
    body:
        achieve_once inside(chicken, pot)
        achieve_once inside(pasta, pot)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot]==78

        bind stove: item where:
            is_stove(stove) and id[stove]==2135

        bind faucet: item where:
            is_faucet(faucet) and id[faucet]==121

        bind chicken: item where:
            is_food_chicken(chicken)

        bind pasta: item where:
            is_dry_pasta(pasta)

        ensure_pot_has_water(pot, faucet)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)
        add_chicken_and_pasta(pot, chicken, pasta)

##############################
From agent.py-> find a plan in act()
walk_executor(faucet_121)switchon_executor(faucet_121)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(pot_78)putin_executor(food_chicken_2089, pot_78)
##############################
From agent.py
walk_executor(faucet_121)
Robot find: Robot is close to the knife_2037. Robot is close to the faucet_121. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
switchon_executor(faucet_121)
Robot find: Robot is close to the knife_2037. Robot is close to the faucet_121. Robot is close to the kitchen_counter_119. faucet_121 is turned on. 
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. 
##############################
From agent.py
grab_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. Grabbing food_chicken_2089 by left hand. 
##############################
From agent.py
walk_executor(pot_78)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the dry_pasta_2114. Robot is close to the pot_78. Robot is close to the stove_2135. 
##############################
From agent.py
putin_executor(food_chicken_2089, pot_78)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the dry_pasta_2114. Robot is close to the pot_78. Robot is close to the stove_2135. pot_78 is close food_chicken_2089. food_chicken_2089 is inside pot_78. food_chicken_2089 is close pot_78. food_chicken_2089 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure that the pot contains water, as this is a requirement for cooking. After turning on and off the faucet, you have not confirmed that the pot is filled with water before putting it on the stove. Ensure the pot has water before proceeding with the cooking process.
##############################
From agent.py
Human Instruction: You need to ensure that the pot contains water, as this is a requirement for cooking. After turning on and off the faucet, you have not confirmed that the pot is filled with water before putting it on the stove. Ensure the pot has water before proceeding with the cooking process.

The actions you have taken:
Action 1: Walk to fridge_126.
Action 2: Switch off fridge_126.
Action 3: Open fridge_126.
Action 4: look for food_chicken_2089 around fridge_126.
Action 5: Grab food_chicken_2089.
Action 6: Walk to cutting_board_2123.
Action 7: Put food_chicken_2089 on cutting_board_2123.
Action 8: Walk to knifeblock_76.
Action 9: look for knife_2122 around knifeblock_76.
Action 10: Walk to sink_19.
Action 11: look for knife_2122 around sink_19.
Action 12: Walk to cupboard_118.
Action 13: Open cupboard_118.
Action 14: look for knife_2122 around cupboard_118.
Action 15: Grab knife_2037.
Action 16: Walk to food_chicken_2089.
Action 17: Cut food_chicken_2089.
Action 18: Walk to pot_78.
Action 19: Grab pot_78.
Action 20: Walk to faucet_121.
Action 21: Walk to kitchen_counter_119.
Action 22: Put knife_2037 on kitchen_counter_119.
Action 23: Switch on faucet_121.
Action 24: Switch off faucet_121.
Action 25: Put pot_78 on stove_2135.
Action 26: Switch on stove_2135.
Action 27: Walk to cupboard_117.
Action 28: look for dry_pasta_2114 around cupboard_117.
Action 29: Walk to knife_2037.
Action 30: Grab knife_2037.
Action 31: Walk to food_chicken_2089.
Action 32: Cut food_chicken_2089.
Action 33: Walk to food_food_2064.
Action 34: look for dry_pasta_2114 around food_food_2064.
Action 35: Walk to food_chicken_2089.
Action 36: Cut food_chicken_2089.
Action 37: Walk to drawing_33.
Action 38: look for dry_pasta_2114 around drawing_33.
Action 39: Walk to food_chicken_2089.
Action 40: Cut food_chicken_2089.
Action 41: Walk to table_114.
Action 42: look for dry_pasta_2114 around table_114.
Action 43: Walk to food_chicken_2089.
Action 44: Cut food_chicken_2089.
Action 45: Walk to dry_pasta_2114.
Action 46: Grab dry_pasta_2114.
Action 47: Walk to pot_78.
Action 48: Put dry_pasta_2114 into pot_78.
Action 49: Walk to faucet_121.
Action 50: Switch on faucet_121.
Action 51: Walk to food_chicken_2089.
Action 52: Grab food_chicken_2089.
Action 53: Walk to pot_78.
Action 54: Put food_chicken_2089 into pot_78.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_tea_bag_2023_around_bookshelf_124(tea_bag:item):
    goal: not unknown(tea_bag)
    body:
        assert is_tea_bag(tea_bag)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(tea_bag,bookshelf_instance)
        else:
            exp(tea_bag,bookshelf_instance)
    eff:
        unknown[tea_bag]=False
        close[tea_bag,bookshelf_instance]=True
        close[bookshelf_instance,tea_bag]=True
    

behavior find_tooth_paste_2059_around_bathroom_cabinet_17(tooth_paste:item):
    goal: not unknown(tooth_paste)
    body:
        assert is_tooth_paste(tooth_paste)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(tooth_paste,bathroom_cabinet_instance)
        else:
            exp(tooth_paste,bathroom_cabinet_instance)
    eff:
        unknown[tooth_paste]=False
        close[tooth_paste,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,tooth_paste]=True
    

behavior find_shoes_2033_around_food_food_1000(shoes:item):
    goal: not unknown(shoes)
    body:
        assert is_shoes(shoes)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==1000
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(shoes,food_food_instance)
        else:
            exp(shoes,food_food_instance)
    eff:
        unknown[shoes]=False
        close[shoes,food_food_instance]=True
        close[food_food_instance,shoes]=True
    

#exp_behavior_end

#goal_representation

behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        achieve is_on(faucet) # Ensure faucet is on
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior cook_contents(pot:item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot]==78
        
        bind stove: item where:
            is_stove(stove) and id[stove]==2135
        
        bind faucet: item where:
            is_faucet(faucet) and id[faucet]==121
        
        fill_pot_with_water(pot, faucet)
        place_pot_on_stove(pot, stove)
        cook_contents(pot)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: stove; available variables: [Variable<pot: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_pot_78_around_pillow_104(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==104
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pot,pillow_instance)
        else:
            exp(pot,pillow_instance)
    eff:
        unknown[pot]=False
        close[pot,pillow_instance]=True
        close[pillow_instance,pot]=True
    

behavior find_tea_bag_2023_around_dishwasher_129(tea_bag:item):
    goal: not unknown(tea_bag)
    body:
        assert is_tea_bag(tea_bag)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==129
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(tea_bag,dishwasher_instance)
        else:
            exp(tea_bag,dishwasher_instance)
    eff:
        unknown[tea_bag]=False
        close[tea_bag,dishwasher_instance]=True
        close[dishwasher_instance,tea_bag]=True
    

behavior find_tooth_paste_2059_around_bathroom_cabinet_17(tooth_paste:item):
    goal: not unknown(tooth_paste)
    body:
        assert is_tooth_paste(tooth_paste)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(tooth_paste,bathroom_cabinet_instance)
        else:
            exp(tooth_paste,bathroom_cabinet_instance)
    eff:
        unknown[tooth_paste]=False
        close[tooth_paste,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,tooth_paste]=True
    

behavior find_clothes_pants_2157_around_basket_for_clothes_2078(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_pants,basket_for_clothes_instance)
        else:
            exp(clothes_pants,basket_for_clothes_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_pants]=True
    

behavior find_shoes_2033_around_table_270(shoes:item):
    goal: not unknown(shoes)
    body:
        assert is_shoes(shoes)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==270
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(shoes,table_instance)
        else:
            exp(shoes,table_instance)
    eff:
        unknown[shoes]=False
        close[shoes,table_instance]=True
        close[table_instance,shoes]=True
    

#goal_representation
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        achieve is_on(faucet) # Ensure faucet is on
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior cook_contents(pot:item, stove:item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot]==78
        
        bind stove: item where:
            is_stove(stove) and id[stove]==2135
        
        bind faucet: item where:
            is_faucet(faucet) and id[faucet]==121
        
        fill_pot_with_water(pot, faucet)
        place_pot_on_stove(pot, stove)
        cook_contents(pot, stove)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        achieve is_on(faucet) # Ensure faucet is on
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior cook_contents(pot:item, stove:item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot]==78
        
        bind stove: item where:
            is_stove(stove) and id[stove]==2135
        
        bind faucet: item where:
            is_faucet(faucet) and id[faucet]==121
        
        fill_pot_with_water(pot, faucet)
        place_pot_on_stove(pot, stove)
        cook_contents(pot, stove)

##############################
From agent.py-> find a plan in act()
walk_executor(faucet_121)
##############################
From agent.py
walk_executor(faucet_121)
Robot find: Robot is close to the knife_2037. Robot is close to the faucet_121. Robot is close to the kitchen_counter_119. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure that the pot is filled with water before placing it on the stove. The cooking process requires that the pot contains water, which was not confirmed in the actions taken. Please fill the pot with water and then proceed with cooking the chicken and pasta.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_2040_around_sink_120(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(pot,sink_instance)
        else:
            exp(pot,sink_instance)
    eff:
        unknown[pot]=False
        close[pot,sink_instance]=True
        close[sink_instance,pot]=True
    

#exp_behavior_end

#goal_representation
 
behavior combine_chicken_and_pasta(chicken:item, pasta:item, plate:item):
    body:
        achieve_once on(chicken, plate)
        achieve_once on(pasta, plate)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind pasta: item where:
            is_dry_pasta(pasta)

        bind plate: item where:
            is_plate(plate)

        combine_chicken_and_pasta(chicken, pasta, plate)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior combine_chicken_and_pasta(chicken:item, pasta:item, plate:item):
    body:
        achieve_once on(chicken, plate)
        achieve_once on(pasta, plate)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind pasta: item where:
            is_dry_pasta(pasta)

        bind plate: item where:
            is_plate(plate)

        combine_chicken_and_pasta(chicken, pasta, plate)

##############################
From agent.py-> find a plan in act()
walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(plate_2152)put_executor(food_chicken_2089, plate_2152)walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(plate_2152)put_executor(dry_pasta_2114, plate_2152)
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the pot_78. 
##############################
From agent.py
grab_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the pot_78. Grabbing food_chicken_2089 by left hand. 
##############################
From agent.py
walk_executor(plate_2152)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the plate_2152. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_chicken_2089, plate_2152)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the plate_2152. Robot is close to the kitchen_counter_119. food_chicken_2089 is close plate_2152. plate_2152 is close food_chicken_2089. food_chicken_2089 is on plate_2152. food_chicken_2089 released by left hand. 
##############################
From agent.py
walk_executor(dry_pasta_2114)
Robot find: Robot is close to the knife_2037. Robot is close to the dry_pasta_2114. Robot is close to the pot_78. 
##############################
From agent.py
grab_executor(dry_pasta_2114)
Robot find: Robot is close to the knife_2037. Robot is close to the dry_pasta_2114. Robot is close to the pot_78. Grabbing dry_pasta_2114 by left hand. 
##############################
From agent.py
walk_executor(plate_2152)
Robot find: Robot is close to the knife_2037. Robot is close to the dry_pasta_2114. Robot is close to the plate_2152. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(dry_pasta_2114, plate_2152)
Robot find: Robot is close to the knife_2037. Robot is close to the dry_pasta_2114. Robot is close to the plate_2152. Robot is close to the kitchen_counter_119. plate_2152 is close dry_pasta_2114. dry_pasta_2114 is close plate_2152. dry_pasta_2114 is on plate_2152. dry_pasta_2114 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make chicken pasta, put it in a plate.
Action History:
['walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'grab_executor(food_chicken_2089)', 'walk_executor(cutting_board_2123)', 'put_executor(food_chicken_2089, cutting_board_2123)', 'walk_executor(knifeblock_76)', 'walk_executor(sink_19)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'grab_executor(knife_2037)', 'walk_executor(food_chicken_2089)', 'cut_executor(food_chicken_2089)', 'walk_executor(pot_78)', 'grab_executor(pot_78)', 'walk_executor(faucet_121)', 'walk_executor(kitchen_counter_119)', 'put_executor(knife_2037, kitchen_counter_119)', 'switchon_executor(faucet_121)', 'switchoff_executor(faucet_121)', 'put_executor(pot_78, stove_2135)', 'switchon_executor(stove_2135)', 'walk_executor(cupboard_117)', 'walk_executor(knife_2037)', 'grab_executor(knife_2037)', 'walk_executor(food_chicken_2089)', 'cut_executor(food_chicken_2089)', 'walk_executor(food_food_2064)', 'walk_executor(food_chicken_2089)', 'cut_executor(food_chicken_2089)', 'walk_executor(drawing_33)', 'walk_executor(food_chicken_2089)', 'cut_executor(food_chicken_2089)', 'walk_executor(table_114)', 'walk_executor(food_chicken_2089)', 'cut_executor(food_chicken_2089)', 'walk_executor(dry_pasta_2114)', 'grab_executor(dry_pasta_2114)', 'walk_executor(pot_78)', 'putin_executor(dry_pasta_2114, pot_78)', 'walk_executor(faucet_121)', 'switchon_executor(faucet_121)', 'walk_executor(food_chicken_2089)', 'grab_executor(food_chicken_2089)', 'walk_executor(pot_78)', 'putin_executor(food_chicken_2089, pot_78)', 'walk_executor(faucet_121)', 'walk_executor(food_chicken_2089)', 'grab_executor(food_chicken_2089)', 'walk_executor(plate_2152)', 'put_executor(food_chicken_2089, plate_2152)', 'walk_executor(dry_pasta_2114)', 'grab_executor(dry_pasta_2114)', 'walk_executor(plate_2152)', 'put_executor(dry_pasta_2114, plate_2152)']
Time info:
Time consume: 1029 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 72
goal generate times: 4
goal correct times: 1
action_num: 55

Task complete rate:
Keystate: k1 - Requires: 0 steps
Keystate: k2 - Requires: 11 steps
Keystate: k3 - Requires: 6 steps
Keystate: k4 - Requires: 0 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
