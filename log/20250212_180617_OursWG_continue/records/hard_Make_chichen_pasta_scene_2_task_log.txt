From agent.py
Reset goals: The sub-goals are: 
['1. Boil the pasta and cook the chicken.', '2. Mix the chicken with the pasta.', '3. Put the chicken pasta on a plate.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_54_around_stove_2090(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(pot,stove_instance)
        else:
            exp(pot,stove_instance)
    eff:
        unknown[pot]=False
        close[pot,stove_instance]=True
        close[stove_instance,pot]=True
    

behavior find_dry_pasta_2073_around_cupboard_131(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(dry_pasta,cupboard_instance)
        else:
            exp(dry_pasta,cupboard_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,cupboard_instance]=True
        close[cupboard_instance,dry_pasta]=True
    

behavior find_fryingpan_2107_around_kitchen_counter_128(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

behavior find_food_chicken_2050_around_fridge_140(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

#exp_behavior_end

#goal_representation
behavior place_chicken_in_pan(chicken:item, pan:item):
    body:
        achieve_once inside(chicken, pan)

behavior place_pasta_in_pot(pasta:item, pot:item):
    body:
        achieve_once inside(pasta, pot)

behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        achieve is_on(faucet)
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior place_pan_on_stove(pan:item, stove:item):
    body:
        achieve_once on(pan, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior cook_pasta_and_chicken(pot:item, pan:item, stove:item):
    body:
        place_pot_on_stove(pot, stove)
        place_pan_on_stove(pan, stove)
        turn_on_stove(stove)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind pasta: item where:
            is_dry_pasta(pasta)
        
        bind pot: item where:
            is_pot(pot)

        bind pan: item where:
            is_fryingpan(pan)

        bind stove: item where:
            is_stove(stove)

        bind faucet: item where:
            is_faucet(faucet)

        fill_pot_with_water(pot, faucet)
        place_pasta_in_pot(pasta, pot)
        place_chicken_in_pan(chicken, pan)
        cook_pasta_and_chicken(pot, pan, stove)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior place_chicken_in_pan(chicken:item, pan:item):
    body:
        achieve_once inside(chicken, pan)

behavior place_pasta_in_pot(pasta:item, pot:item):
    body:
        achieve_once inside(pasta, pot)

behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        achieve is_on(faucet)
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior place_pan_on_stove(pan:item, stove:item):
    body:
        achieve_once on(pan, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior cook_pasta_and_chicken(pot:item, pan:item, stove:item):
    body:
        place_pot_on_stove(pot, stove)
        place_pan_on_stove(pan, stove)
        turn_on_stove(stove)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind pasta: item where:
            is_dry_pasta(pasta)
        
        bind pot: item where:
            is_pot(pot)

        bind pan: item where:
            is_fryingpan(pan)

        bind stove: item where:
            is_stove(stove)

        bind faucet: item where:
            is_faucet(faucet)

        fill_pot_with_water(pot, faucet)
        place_pasta_in_pot(pasta, pot)
        place_chicken_in_pan(chicken, pan)
        cook_pasta_and_chicken(pot, pan, stove)
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)walk_executor(stove_2090)open_executor(stove_2090)exp(pot_2093, stove_2090)walk_executor(pot_2093)open_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(cupboard_131)open_executor(cupboard_131)exp(dry_pasta_2073, cupboard_131)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)walk_executor(kitchen_counter_128)exp(fryingpan_2107, kitchen_counter_128)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(faucet_134)
Robot find: pot_54, Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
open_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is opened. 
##############################
From agent.py
exp(pot_2093, stove_2090)
Find pot_2093. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)walk_executor(pot_2093)open_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(cupboard_131)open_executor(cupboard_131)exp(dry_pasta_2073, cupboard_131)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
walk_executor(pot_2093)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the pot_2093. 
##############################
From agent.py
open_executor(pot_2093)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the pot_2093. pot_2093 is opened. 
##############################
From agent.py
grab_executor(pot_2093)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the pot_2093. Grabbing pot_2093 by right hand. 
##############################
From agent.py
walk_executor(faucet_308)
Robot find: drawing_296, towel_rack_298, Robot is close to the pot_2093. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. 
##############################
From agent.py
switchoff_executor(faucet_308)
Robot find: Robot is close to the pot_2093. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. faucet_308 is turned off. 
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the pot_2093. Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the pot_2093. Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(dry_pasta_2073, cupboard_131)
Fail to find dry_pasta_2073 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)walk_executor(faucet_308)switchon_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(kitchen_counter_128)exp(dry_pasta_2073, kitchen_counter_128)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
walk_executor(faucet_308)
Robot find: Robot is close to the pot_2093. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. 
##############################
From agent.py
switchon_executor(faucet_308)
Robot find: Robot is close to the pot_2093. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. faucet_308 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_308)
Robot find: Robot is close to the pot_2093. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. faucet_308 is turned off. 
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the pot_2093. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(dry_pasta_2073, kitchen_counter_128)
Fail to find dry_pasta_2073 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)walk_executor(light_217)exp(dry_pasta_2073, light_217)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
walk_executor(light_217)
Robot find: Robot is close to the pot_2093. Robot is close to the light_217. 
##############################
From agent.py
exp(dry_pasta_2073, light_217)
Fail to find dry_pasta_2073 around light_217. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)walk_executor(cupboard_130)exp(dry_pasta_2073, cupboard_130)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the pot_2093. Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(dry_pasta_2073, cupboard_130)
Fail to find dry_pasta_2073 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)walk_executor(table_123)exp(dry_pasta_2073, table_123)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, cup_2006, laptop_2015, cup_2087, bowl_2095, fork_2103, drawing_118, Robot is close to the pot_2093. Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
exp(dry_pasta_2073, table_123)
Fail to find dry_pasta_2073 around table_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)walk_executor(toilet_302)open_executor(toilet_302)exp(dry_pasta_2073, toilet_302)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
walk_executor(toilet_302)
Robot find: toilet_paper_2118, Robot is close to the pot_2093. Robot is close to the toilet_302. 
##############################
From agent.py
open_executor(toilet_302)
Robot find: Robot is close to the pot_2093. Robot is close to the toilet_302. toilet_302 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find dry_pasta_2073 ?
Answer: Robot, locate the fridge within dining_room_1 labeled as fridge_140. The target item, dry_pasta_2073, is placed on top of fridge_140. Ensure to look on top of the fridge to retrieve the dry_pasta_2073.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, locate the fridge within dining_room_1 labeled as fridge_140. The target item, dry_pasta_2073, is placed on top of fridge_140. Ensure to look on top of the fridge to retrieve the dry_pasta_2073.

The actions you have taken:
Action 1: Walk to faucet_134.
Action 2: Walk to stove_2090.
Action 3: Open stove_2090.
Action 4: look for pot_2093 around stove_2090.
Action 5: Walk to faucet_134.
Action 6: Walk to pot_2093.
Action 7: Open pot_2093.
Action 8: Grab pot_2093.
Action 9: Walk to faucet_308.
Action 10: Switch off faucet_308.
Action 11: Walk to cupboard_131.
Action 12: Open cupboard_131.
Action 13: look for dry_pasta_2073 around cupboard_131.
Action 14: Walk to faucet_134.
Action 15: Walk to faucet_308.
Action 16: Switch on faucet_308.
Action 17: Switch off faucet_308.
Action 18: Walk to kitchen_counter_128.
Action 19: look for dry_pasta_2073 around kitchen_counter_128.
Action 20: Walk to faucet_134.
Action 21: Walk to light_217.
Action 22: look for dry_pasta_2073 around light_217.
Action 23: Walk to faucet_134.
Action 24: Walk to cupboard_130.
Action 25: look for dry_pasta_2073 around cupboard_130.
Action 26: Walk to faucet_134.
Action 27: Walk to table_123.
Action 28: look for dry_pasta_2073 around table_123.
Action 29: Walk to faucet_134.
Action 30: Walk to toilet_302.
Action 31: Open toilet_302.

##############################
From agent.py
exp(dry_pasta_2073, toilet_302)
Fail to find dry_pasta_2073 around toilet_302. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(dry_pasta_2073, fridge_140)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)walk_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the pot_2093. Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the pot_2093. Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the pot_2093. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(dry_pasta_2073, fridge_140)
Find dry_pasta_2073. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
walk_executor(dry_pasta_2073)
Robot find: Robot is close to the pot_2093. Robot is close to the dry_pasta_2073. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(dry_pasta_2073)
Robot find: Robot is close to the pot_2093. Robot is close to the dry_pasta_2073. Robot is close to the fridge_140. Grabbing dry_pasta_2073 by left hand. 
##############################
From agent.py
walk_executor(pot_2093)
Robot find: Robot is close to the pot_2093. Robot is close to the dry_pasta_2073. 
##############################
From agent.py
putin_executor(dry_pasta_2073, pot_2093)
Robot find: Robot is close to the pot_2093. Robot is close to the dry_pasta_2073. dry_pasta_2073 is inside pot_2093. dry_pasta_2073 is close pot_2093. pot_2093 is close dry_pasta_2073. dry_pasta_2073 released by left hand. 
##############################
From agent.py
walk_executor(food_chicken_2050)
Robot find: Robot is close to the pot_2093. Robot is close to the food_chicken_2050. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_chicken_2050)
Robot find: Robot is close to the pot_2093. Robot is close to the food_chicken_2050. Robot is close to the fridge_140. Grabbing food_chicken_2050 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the pot_2093. Robot is close to the food_chicken_2050. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_chicken_2050, fryingpan_2107)
Robot find: Robot is close to the pot_2093. Robot is close to the food_chicken_2050. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. food_chicken_2050 is close fryingpan_2107. food_chicken_2050 is inside fryingpan_2107. fryingpan_2107 is close food_chicken_2050. food_chicken_2050 released by left hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(pot_2093, stove_2090)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is close pot_2093. pot_2093 is close stove_2090. pot_2093 is on stove_2090. pot_2093 released by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. 
##############################
From agent.py
grab_executor(fryingpan_2107)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Grabbing fryingpan_2107 by right hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(fryingpan_2107, stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. fryingpan_2107 is on stove_2090. stove_2090 is close fryingpan_2107. fryingpan_2107 is close stove_2090. fryingpan_2107 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to fill the pot with water from the faucet, ensuring the pot has water for boiling the pasta. This step is crucial for the task of boiling the pasta and cooking the chicken.
##############################
From agent.py
Human Instruction: The robot needs to fill the pot with water from the faucet, ensuring the pot has water for boiling the pasta. This step is crucial for the task of boiling the pasta and cooking the chicken.

The actions you have taken:
Action 1: Walk to faucet_134.
Action 2: Walk to stove_2090.
Action 3: Open stove_2090.
Action 4: look for pot_2093 around stove_2090.
Action 5: Walk to faucet_134.
Action 6: Walk to pot_2093.
Action 7: Open pot_2093.
Action 8: Grab pot_2093.
Action 9: Walk to faucet_308.
Action 10: Switch off faucet_308.
Action 11: Walk to cupboard_131.
Action 12: Open cupboard_131.
Action 13: look for dry_pasta_2073 around cupboard_131.
Action 14: Walk to faucet_134.
Action 15: Walk to faucet_308.
Action 16: Switch on faucet_308.
Action 17: Switch off faucet_308.
Action 18: Walk to kitchen_counter_128.
Action 19: look for dry_pasta_2073 around kitchen_counter_128.
Action 20: Walk to faucet_134.
Action 21: Walk to light_217.
Action 22: look for dry_pasta_2073 around light_217.
Action 23: Walk to faucet_134.
Action 24: Walk to cupboard_130.
Action 25: look for dry_pasta_2073 around cupboard_130.
Action 26: Walk to faucet_134.
Action 27: Walk to table_123.
Action 28: look for dry_pasta_2073 around table_123.
Action 29: Walk to faucet_134.
Action 30: Walk to toilet_302.
Action 31: Open toilet_302.
Action 32: look for dry_pasta_2073 around toilet_302.
Action 33: Walk to faucet_134.
Action 34: Walk to fridge_140.
Action 35: Switch off fridge_140.
Action 36: Open fridge_140.
Action 37: look for dry_pasta_2073 around fridge_140.
Action 38: Walk to faucet_134.
Action 39: Walk to dry_pasta_2073.
Action 40: Grab dry_pasta_2073.
Action 41: Walk to pot_2093.
Action 42: Put dry_pasta_2073 into pot_2093.
Action 43: Walk to food_chicken_2050.
Action 44: Grab food_chicken_2050.
Action 45: Walk to fryingpan_2107.
Action 46: Put food_chicken_2050 into fryingpan_2107.
Action 47: Walk to stove_2090.
Action 48: Put pot_2093 on stove_2090.
Action 49: Walk to fryingpan_2107.
Action 50: Grab fryingpan_2107.
Action 51: Walk to stove_2090.
Action 52: Put fryingpan_2107 on stove_2090.
Action 53: Switch on stove_2090.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2005_around_oil_2102(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind oil_instance:item where:
            is_oil(oil_instance) and id[oil_instance]==2102
        achieve close_char(char,oil_instance)
        if can_open(oil_instance):
            achieve_once open(oil_instance)
            exp(oil,oil_instance)
        else:
            exp(oil,oil_instance)
    eff:
        unknown[oil]=False
        close[oil,oil_instance]=True
        close[oil_instance,oil]=True
    

#exp_behavior_end

#goal_representation
behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior cook_chicken_with_fryingpan(chicken:item, pan:item):
    body:
        achieve_once inside(chicken, pan)

behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta)
        
        bind pot: item where:
            is_pot(pot)

        bind stove: item where:
            is_stove(stove)

        bind chicken: item where:
            is_food_chicken(chicken)

        bind fryingpan: item where:
            is_fryingpan(fryingpan)

        fill_pot_with_water(pot)
        achieve_once inside(pasta, pot)
        place_pot_on_stove(pot, stove)
        place_pot_on_stove(fryingpan, stove)
        turn_on_stove(stove)
        cook_chicken_with_fryingpan(chicken, fryingpan)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2005_around_oil_2102(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind oil_instance:item where:
            is_oil(oil_instance) and id[oil_instance]==2102
        achieve close_char(char,oil_instance)
        if can_open(oil_instance):
            achieve_once open(oil_instance)
            exp(oil,oil_instance)
        else:
            exp(oil,oil_instance)
    eff:
        unknown[oil]=False
        close[oil,oil_instance]=True
        close[oil_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_pasta_and_water(pasta:item, pot:item, faucet:item):
    body:
        achieve_once inside(pasta, pot)
        # Place dry pasta inside the pot
        achieve_once close_char(char, faucet)
        # Approach the faucet
        achieve is_on(faucet)
        # Ensure faucet is on
        achieve has_water(pot)
        # Fill the pot with water for boiling

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior cook_chicken_in_pan(chicken:item, pan:item, stove:item):
    body:
        achieve_once inside(chicken, pan)
        achieve_once on(pan, stove)

behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select dry pasta for boiling

        bind pot: item where:
            is_pot(pot)

        bind faucet: item where:
            is_faucet(faucet)

        bind stove: item where:
            is_stove(stove)

        bind chicken: item where:
            is_food_chicken(chicken)

        bind pan: item where:
            is_fryingpan(pan)

        fill_pot_with_pasta_and_water(pasta, pot, faucet)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)
        cook_chicken_in_pan(chicken, pan, stove)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_pot_with_pasta_and_water(pasta:item, pot:item, faucet:item):
    body:
        achieve_once inside(pasta, pot)
        # Place dry pasta inside the pot
        achieve_once close_char(char, faucet)
        # Approach the faucet
        achieve is_on(faucet)
        # Ensure faucet is on
        achieve has_water(pot)
        # Fill the pot with water for boiling

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior cook_chicken_in_pan(chicken:item, pan:item, stove:item):
    body:
        achieve_once inside(chicken, pan)
        achieve_once on(pan, stove)

behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select dry pasta for boiling

        bind pot: item where:
            is_pot(pot)

        bind faucet: item where:
            is_faucet(faucet)

        bind stove: item where:
            is_stove(stove)

        bind chicken: item where:
            is_food_chicken(chicken)

        bind pan: item where:
            is_fryingpan(pan)

        fill_pot_with_pasta_and_water(pasta, pot, faucet)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)
        cook_chicken_in_pan(chicken, pan, stove)

##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure that the pot is filled with water, as this is crucial for boiling the pasta. Currently, the pot only contains dry pasta but no water. Ensure the faucet is turned on so the pot can be filled. Only then can the pasta be boiled successfully.
##############################
From agent.py
Human Instruction: You need to ensure that the pot is filled with water, as this is crucial for boiling the pasta. Currently, the pot only contains dry pasta but no water. Ensure the faucet is turned on so the pot can be filled. Only then can the pasta be boiled successfully.

The actions you have taken:
Action 1: Walk to faucet_134.
Action 2: Walk to stove_2090.
Action 3: Open stove_2090.
Action 4: look for pot_2093 around stove_2090.
Action 5: Walk to faucet_134.
Action 6: Walk to pot_2093.
Action 7: Open pot_2093.
Action 8: Grab pot_2093.
Action 9: Walk to faucet_308.
Action 10: Switch off faucet_308.
Action 11: Walk to cupboard_131.
Action 12: Open cupboard_131.
Action 13: look for dry_pasta_2073 around cupboard_131.
Action 14: Walk to faucet_134.
Action 15: Walk to faucet_308.
Action 16: Switch on faucet_308.
Action 17: Switch off faucet_308.
Action 18: Walk to kitchen_counter_128.
Action 19: look for dry_pasta_2073 around kitchen_counter_128.
Action 20: Walk to faucet_134.
Action 21: Walk to light_217.
Action 22: look for dry_pasta_2073 around light_217.
Action 23: Walk to faucet_134.
Action 24: Walk to cupboard_130.
Action 25: look for dry_pasta_2073 around cupboard_130.
Action 26: Walk to faucet_134.
Action 27: Walk to table_123.
Action 28: look for dry_pasta_2073 around table_123.
Action 29: Walk to faucet_134.
Action 30: Walk to toilet_302.
Action 31: Open toilet_302.
Action 32: look for dry_pasta_2073 around toilet_302.
Action 33: Walk to faucet_134.
Action 34: Walk to fridge_140.
Action 35: Switch off fridge_140.
Action 36: Open fridge_140.
Action 37: look for dry_pasta_2073 around fridge_140.
Action 38: Walk to faucet_134.
Action 39: Walk to dry_pasta_2073.
Action 40: Grab dry_pasta_2073.
Action 41: Walk to pot_2093.
Action 42: Put dry_pasta_2073 into pot_2093.
Action 43: Walk to food_chicken_2050.
Action 44: Grab food_chicken_2050.
Action 45: Walk to fryingpan_2107.
Action 46: Put food_chicken_2050 into fryingpan_2107.
Action 47: Walk to stove_2090.
Action 48: Put pot_2093 on stove_2090.
Action 49: Walk to fryingpan_2107.
Action 50: Grab fryingpan_2107.
Action 51: Walk to stove_2090.
Action 52: Put fryingpan_2107 on stove_2090.
Action 53: Switch on stove_2090.
Action 54: Walk to faucet_134.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2026_around_microwave_149(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind microwave_instance:item where:
            is_microwave(microwave_instance) and id[microwave_instance]==149
        achieve close_char(char,microwave_instance)
        if can_open(microwave_instance):
            achieve_once open(microwave_instance)
            exp(food_onion,microwave_instance)
        else:
            exp(food_onion,microwave_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,microwave_instance]=True
        close[microwave_instance,food_onion]=True
    

behavior find_oil_2005_around_dishwasher_143(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==143
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(oil,dishwasher_instance)
        else:
            exp(oil,dishwasher_instance)
    eff:
        unknown[oil]=False
        close[oil,dishwasher_instance]=True
        close[dishwasher_instance,oil]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        achieve is_on(faucet) 
        achieve has_water(pot)

behavior boil_pasta(pasta:item, pot:item):
    body:
        achieve_once inside(pasta, pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior cook_chicken(chicken:item, fryingpan:item):
    body:
        achieve_once inside(chicken, fryingpan)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 308
        
        bind pot: item where:
            is_pot(pot) and id[pot] == 2093

        bind stove: item where:
            is_stove(stove) and id[stove] == 2090

        bind pasta: item where:
            is_dry_pasta(pasta) and inside(pasta, pot)

        bind chicken: item where:
            is_food_chicken(chicken) and inside(chicken, fryingpan)

        bind fryingpan: item where:
            is_fryingpan(fryingpan) and on(fryingpan, stove)

        fill_pot_with_water(pot, faucet)
        boil_pasta(pasta, pot)
        place_pot_on_stove(pot, stove)
        cook_chicken(chicken, fryingpan)
        turn_on_stove(stove)
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: fryingpan; available variables: [Variable<chicken: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_oil_2102_around_oil_2102(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind oil_instance:item where:
            is_oil(oil_instance) and id[oil_instance]==2102
        achieve close_char(char,oil_instance)
        if can_open(oil_instance):
            achieve_once open(oil_instance)
            exp(oil,oil_instance)
        else:
            exp(oil,oil_instance)
    eff:
        unknown[oil]=False
        close[oil,oil_instance]=True
        close[oil_instance,oil]=True
    

#goal_representation
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        achieve is_on(faucet) 
        achieve has_water(pot)

behavior boil_pasta(pasta:item, pot:item):
    body:
        achieve_once inside(pasta, pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior cook_chicken(chicken:item, fryingpan:item):
    body:
        achieve_once inside(chicken, fryingpan)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 308
        
        bind pot: item where:
            is_pot(pot) and id[pot] == 2093

        bind stove: item where:
            is_stove(stove) and id[stove] == 2090

        bind pasta: item where:
            is_dry_pasta(pasta) and inside(pasta, pot)

        bind chicken: item where:
            is_food_chicken(chicken)

        bind fryingpan: item where:
            is_fryingpan(fryingpan)

        fill_pot_with_water(pot, faucet)
        boil_pasta(pasta, pot)
        place_pot_on_stove(pot, stove)
        cook_chicken(chicken, fryingpan)
        turn_on_stove(stove)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        achieve is_on(faucet) 
        achieve has_water(pot)

behavior boil_pasta(pasta:item, pot:item):
    body:
        achieve_once inside(pasta, pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior cook_chicken(chicken:item, fryingpan:item):
    body:
        achieve_once inside(chicken, fryingpan)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 308
        
        bind pot: item where:
            is_pot(pot) and id[pot] == 2093

        bind stove: item where:
            is_stove(stove) and id[stove] == 2090

        bind pasta: item where:
            is_dry_pasta(pasta) and inside(pasta, pot)

        bind chicken: item where:
            is_food_chicken(chicken)

        bind fryingpan: item where:
            is_fryingpan(fryingpan)

        fill_pot_with_water(pot, faucet)
        boil_pasta(pasta, pot)
        place_pot_on_stove(pot, stove)
        cook_chicken(chicken, fryingpan)
        turn_on_stove(stove)
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_308)switchon_executor(faucet_308)
##############################
From agent.py
walk_executor(faucet_308)
Robot find: Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. 
##############################
From agent.py
switchon_executor(faucet_308)
Robot find: Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. faucet_308 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: To complete the sub-task, you need to ensure that the pot is filled with water for boiling the pasta. Currently, the pot only contains dry pasta but no water. Ensure the faucet is turned on to fill the pot with water. Only then can the pasta be boiled successfully.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_alcohol_2002_around_bathroom_cabinet_305(alcohol:item):
    goal: not unknown(alcohol)
    body:
        assert is_alcohol(alcohol)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(alcohol,bathroom_cabinet_instance)
        else:
            exp(alcohol,bathroom_cabinet_instance)
    eff:
        unknown[alcohol]=False
        close[alcohol,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,alcohol]=True
    

behavior find_oil_2102_around_oil_2102(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind oil_instance:item where:
            is_oil(oil_instance) and id[oil_instance]==2102
        achieve close_char(char,oil_instance)
        if can_open(oil_instance):
            achieve_once open(oil_instance)
            exp(oil,oil_instance)
        else:
            exp(oil,oil_instance)
    eff:
        unknown[oil]=False
        close[oil,oil_instance]=True
        close[oil_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior mix_chicken_with_pasta(chicken:item, pasta:item, pot:item):
    body:
        achieve_once inside(chicken, pot)
        achieve_once inside(pasta, pot)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind pasta: item where:
            is_dry_pasta(pasta)

        bind pot: item where:
            is_pot(pot)

        mix_chicken_with_pasta(chicken, pasta, pot)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior mix_chicken_with_pasta(chicken:item, pasta:item, pot:item):
    body:
        achieve_once inside(chicken, pot)
        achieve_once inside(pasta, pot)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind pasta: item where:
            is_dry_pasta(pasta)

        bind pot: item where:
            is_pot(pot)

        mix_chicken_with_pasta(chicken, pasta, pot)

##############################
From agent.py-> find a plan in act()
walk_executor(pot_54)open_executor(pot_54)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(pot_54)putin_executor(food_chicken_2050, pot_54)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_54)putin_executor(dry_pasta_2073, pot_54)
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
open_executor(pot_54)
Robot find: Robot is close to the oven_141. Robot is close to the pot_54. pot_54 is opened. 
##############################
From agent.py
walk_executor(food_chicken_2050)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the fryingpan_2107. 
##############################
From agent.py
grab_executor(food_chicken_2050)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the fryingpan_2107. Grabbing food_chicken_2050 by right hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
putin_executor(food_chicken_2050, pot_54)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the oven_141. Robot is close to the pot_54. food_chicken_2050 is close pot_54. pot_54 is close food_chicken_2050. food_chicken_2050 is inside pot_54. food_chicken_2050 released by right hand. 
##############################
From agent.py
walk_executor(dry_pasta_2073)
Robot find: Robot is close to the dry_pasta_2073. Robot is close to the pot_2093. 
##############################
From agent.py
grab_executor(dry_pasta_2073)
Robot find: Robot is close to the dry_pasta_2073. Robot is close to the pot_2093. Grabbing dry_pasta_2073 by right hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the dry_pasta_2073. Robot is close to the food_chicken_2050. Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
putin_executor(dry_pasta_2073, pot_54)
Robot find: Robot is close to the dry_pasta_2073. Robot is close to the food_chicken_2050. Robot is close to the oven_141. Robot is close to the pot_54. dry_pasta_2073 is inside pot_54. dry_pasta_2073 is close pot_54. pot_54 is close dry_pasta_2073. dry_pasta_2073 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_sink_133(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(plate,sink_instance)
        else:
            exp(plate,sink_instance)
    eff:
        unknown[plate]=False
        close[plate,sink_instance]=True
        close[sink_instance,plate]=True
    

#exp_behavior_end

#goal_representation
behavior place_chicken_pasta_on_plate(chicken_pasta:item, plate:item):
    body:
        achieve_once on(chicken_pasta, plate)

behavior __goal__():
    body:
        bind chicken_pasta: item where:
            is_food_food(chicken_pasta)
        # Select the chicken pasta item

        bind plate: item where:
            is_plate(plate)
        # Select a plate

        place_chicken_pasta_on_plate(chicken_pasta, plate)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior place_chicken_pasta_on_plate(chicken_pasta:item, plate:item):
    body:
        achieve_once on(chicken_pasta, plate)

behavior __goal__():
    body:
        bind chicken_pasta: item where:
            is_food_food(chicken_pasta)
        # Select the chicken pasta item

        bind plate: item where:
            is_plate(plate)
        # Select a plate

        place_chicken_pasta_on_plate(chicken_pasta, plate)
##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)exp(plate_2105, sink_133)walk_executor(food_food_2055)grab_executor(food_food_2055)walk_executor(plate_2105)put_executor(food_food_2055, plate_2105)
##############################
From agent.py
walk_executor(sink_133)
Robot find: after_shave_2029, cleaning_solution_2098, juice_2034, Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
exp(plate_2105, sink_133)
Fail to find plate_2105 around sink_133. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_127)exp(plate_2105, table_127)walk_executor(food_food_2055)grab_executor(food_food_2055)walk_executor(plate_2105)put_executor(food_food_2055, plate_2105)
##############################
From agent.py
walk_executor(table_127)
Robot find: mat_115, fork_2104, console_2027, crayon_2030, bowl_2096, bowl_2097, napkin_2014, plate_2105, Robot is close to the mat_115. Robot is close to the table_127. 
##############################
From agent.py
exp(plate_2105, table_127)
Find plate_2105. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_food_2055)grab_executor(food_food_2055)walk_executor(plate_2105)put_executor(food_food_2055, plate_2105)
##############################
From agent.py
walk_executor(food_food_2055)
Robot find: Robot is close to the fridge_140. Robot is close to the food_food_2055. 
##############################
From agent.py
grab_executor(food_food_2055)
Robot find: Robot is close to the fridge_140. Robot is close to the food_food_2055. Grabbing food_food_2055 by right hand. 
##############################
From agent.py
walk_executor(plate_2105)
Robot find: Robot is close to the food_food_2055. Robot is close to the plate_2105. Robot is close to the table_127. 
##############################
From agent.py
put_executor(food_food_2055, plate_2105)
Robot find: Robot is close to the food_food_2055. Robot is close to the plate_2105. Robot is close to the table_127. food_food_2055 is close plate_2105. plate_2105 is close food_food_2055. food_food_2055 is on plate_2105. food_food_2055 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make chicken pasta, put it in a plate.
Action History:
['walk_executor(faucet_134)', 'walk_executor(stove_2090)', 'open_executor(stove_2090)', 'walk_executor(faucet_134)', 'walk_executor(pot_2093)', 'open_executor(pot_2093)', 'grab_executor(pot_2093)', 'walk_executor(faucet_308)', 'switchoff_executor(faucet_308)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(faucet_134)', 'walk_executor(faucet_308)', 'switchon_executor(faucet_308)', 'switchoff_executor(faucet_308)', 'walk_executor(kitchen_counter_128)', 'walk_executor(faucet_134)', 'walk_executor(light_217)', 'walk_executor(faucet_134)', 'walk_executor(cupboard_130)', 'walk_executor(faucet_134)', 'walk_executor(table_123)', 'walk_executor(faucet_134)', 'walk_executor(toilet_302)', 'open_executor(toilet_302)', 'walk_executor(faucet_134)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'walk_executor(faucet_134)', 'walk_executor(dry_pasta_2073)', 'grab_executor(dry_pasta_2073)', 'walk_executor(pot_2093)', 'putin_executor(dry_pasta_2073, pot_2093)', 'walk_executor(food_chicken_2050)', 'grab_executor(food_chicken_2050)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_chicken_2050, fryingpan_2107)', 'walk_executor(stove_2090)', 'put_executor(pot_2093, stove_2090)', 'walk_executor(fryingpan_2107)', 'grab_executor(fryingpan_2107)', 'walk_executor(stove_2090)', 'put_executor(fryingpan_2107, stove_2090)', 'switchon_executor(stove_2090)', 'walk_executor(faucet_134)', 'walk_executor(faucet_308)', 'switchon_executor(faucet_308)', 'walk_executor(pot_54)', 'open_executor(pot_54)', 'walk_executor(food_chicken_2050)', 'grab_executor(food_chicken_2050)', 'walk_executor(pot_54)', 'putin_executor(food_chicken_2050, pot_54)', 'walk_executor(dry_pasta_2073)', 'grab_executor(dry_pasta_2073)', 'walk_executor(pot_54)', 'putin_executor(dry_pasta_2073, pot_54)', 'walk_executor(sink_133)', 'walk_executor(table_127)', 'walk_executor(food_food_2055)', 'grab_executor(food_food_2055)', 'walk_executor(plate_2105)', 'put_executor(food_food_2055, plate_2105)']
Time info:
Time consume: 660 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 80
goal generate times: 6
goal correct times: 1
action_num: 64

Task complete rate:
Keystate: k1 - Requires: 0 steps
Keystate: k2 - Requires: 8 steps
Keystate: k3 - Requires: 8 steps
Keystate: k4 - Requires: 8 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
