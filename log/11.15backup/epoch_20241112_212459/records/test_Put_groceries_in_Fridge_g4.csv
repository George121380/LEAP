Goal Representation,Debug Result,Action,Add Info,LLM Answer,Plan
"Reset goals: The sub-goals are: 
['Cut the chicken into pieces, then put it back in the fridge.']",,,,,
"behavior cut_chicken(chicken:item, fridge:item):
    body:
        achieve cut(chicken) # Achieve the state of the chicken being cut

behavior store_chicken_in_fridge(chicken:item, fridge:item):
    body:
        achieve inside(chicken, fridge) # Ensure the chicken is inside the fridge

behavior close_fridge_door(fridge:item):
    body:
        achieve closed(fridge) # Ensure the fridge door is closed

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select an item categorized as chicken
        
        bind fridge: item where:
            is_fridge(fridge)
        # Select an item categorized as fridge

        cut_chicken(chicken, fridge)
        store_chicken_in_fridge(chicken, fridge)
        close_fridge_door(fridge)",From function reset_goal,,,,
"Reset goals: The sub-goals are: 
['Cut the chicken into pieces, then put it back in the fridge.']",,,,,
" 
behavior cut_chicken(chicken:item):
    body:
        achieve cut(chicken)

behavior store_in_fridge(chicken:item, fridge:item):
    body:
        achieve inside(chicken, fridge)
        
behavior close_the_fridge_door(fridge:item):
    body:
        achieve closed(fridge)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken to be cut
        
        bind fridge: item where:
            is_fridge(fridge)
        # Select the fridge for storage
        
        cut_chicken(chicken)
        store_in_fridge(chicken, fridge)
        close_the_fridge_door(fridge)
",From function reset_goal,,,,
"Reset goals: The sub-goals are: 
['Cut the chicken into pieces, then put it back in the fridge.']",,,,,
"
behavior cut_chicken(chicken:item):
    body:
        achieve cut(chicken)

behavior store_in_fridge(chicken:item, fridge:item):
    body:
        achieve inside(chicken, fridge)

behavior close_fridge_door(fridge:item):
    body:
        achieve closed(fridge)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken which needs to be cut
        bind fridge: item where:
            is_fridge(fridge)
        # Select the fridge
        cut_chicken(chicken)
        store_in_fridge(chicken, fridge)
        close_fridge_door(fridge)
",From function reset_goal,,,,
"/Users/liupeiqi/workshop/Research/Instruction_Representation/lpq/Concepts/projects/crow/examples/06-
virtual-home/cdl_dataset/dataset/Put_groceries_in_Fridge/g4.txt",k1,"missed actions: walk_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);w
alk_executor(food_chicken_2017);grab_executor(food_chicken_2017);walk_executor(cutting_board_2051);p
ut_executor(food_chicken_2017, cutting_board_2051);walk_executor(knife_2050);grab_executor(knife_205
0);walk_executor(food_chicken_2017);cut_executor(food_chicken_2017);",missed action num: 11,,
"/Users/liupeiqi/workshop/Research/Instruction_Representation/lpq/Concepts/projects/crow/examples/06-
virtual-home/cdl_dataset/dataset/Put_groceries_in_Fridge/g4.txt",k1,"missed actions: walk_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);w
alk_executor(food_chicken_2017);grab_executor(food_chicken_2017);walk_executor(cutting_board_2051);p
ut_executor(food_chicken_2017, cutting_board_2051);walk_executor(knife_2050);grab_executor(knife_205
0);walk_executor(food_chicken_2017);cut_executor(food_chicken_2017);",missed action num: 11,,
"/Users/liupeiqi/workshop/Research/Instruction_Representation/lpq/Concepts/projects/crow/examples/06-
virtual-home/cdl_dataset/dataset/Put_groceries_in_Fridge/g4.txt",k2,missed actions: ,missed action num: 0,,
