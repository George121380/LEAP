Goal Representation,Debug Result,Action,Add Info,LLM Answer,Plan
cdl_dataset/dataset/Prepare_dinner/g2.txt,k1,"missed actions: walk_executor(stove_2065);open_executor(stove_2065);walk_executor(fridge_289);switch
off_executor(fridge_289);open_executor(fridge_289);walk_executor(food_onion_2032);grab_executor(food
_onion_2032);walk_executor(stove_2065);putin_executor(food_onion_2032, stove_2065);walk_executor(foo
d_chicken_2017);grab_executor(food_chicken_2017);walk_executor(stove_2065);putin_executor(food_chick
en_2017, stove_2065);close_executor(stove_2065);switchon_executor(stove_2065);",missed action num: 462,,
"Reset goals: The sub-goals are: 
['1. Prepare the chicken and onions by seasoning them as needed.', '2. Place the seasoned chicken an
d onions on a baking tray.', '3. Roast the chicken and onions in the oven until fully cooked.']",,,,,
" 
def is_food_chicken_or_onion(item:item):
    # Function to check if an item is a chicken or onion
    symbol is_chicken_or_onion=(is_food_chicken(item) or is_food_onion(item))
    return is_chicken_or_onion

behavior season_item(item:item, seasoning_area:item):
    body:
        achieve on(item, seasoning_area)
        # Ensure the item is on the seasoning area
        observe(item, ""Determine the seasoning required for this item"")
        # Observe to determine the needed seasoning

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select an instance of chicken

        bind onion: item where:
            is_food_onion(onion)
        # Select an instance of onion

        bind seasoning_area: item where:
            surfaces(seasoning_area)
        # Select a seasoning area with a surface
        
        season_item(chicken, seasoning_area)
        # Season the chicken
        
        season_item(onion, seasoning_area)
        # Season the onion
",From function reset_goal,,,,
"Reset goals: The sub-goals are: 
['1. Preheat the oven to the required temperature for roasting chicken.', '2. Prepare the chicken an
d onions for roasting.', '3. Roast the chicken and onions in the oven for the specified duration.']",,,,,
" 
behavior observe_oven_temp(oven:item):
    body:
        observe(oven, ""What is the current temperature setting of the oven"")
        
behavior __goal__():
    body:
        bind oven: item where:
            is_oven(oven)
        observe_oven_temp(oven)
        achieve is_on(oven)
",From function reset_goal,,,,
,,,,,"(CrowControllerApplier<walk_executor(stove_2065)>, CrowControllerApplier<open_executor(stove_2065)>,
 CrowControllerApplier<obs(stove_2065, What is the current temperature setting of the oven)>, CrowCo
ntrollerApplier<close_executor(stove_2065)>, CrowControllerApplier<switchon_executor(stove_2065)>)"
,,walk_executor(stove_2065),"Find napkin_2005. Find knife_2050. Find cutting_board_2051. Find cup_2063. Find cup_2064. Find pot_2
069. Find oil_2079. Find fryingpan_2083. Find tray_296. Find drawing_239. Find drawing_238. Find dra
wing_240. Find drawing_241. Find drawing_242. Find drawing_243. Robot is inside dining_room_201. Rob
ot is close stove_2065. Robot is close kitchen_counter_230. Robot is no longer inside bathroom_1.",,
cdl_dataset/dataset/Prepare_dinner/g2.txt,k1,"missed actions: open_executor(stove_2065);walk_executor(fridge_289);switchoff_executor(fridge_289);o
pen_executor(fridge_289);walk_executor(food_onion_2032);grab_executor(food_onion_2032);walk_executor
(stove_2065);putin_executor(food_onion_2032, stove_2065);walk_executor(food_chicken_2017);grab_execu
tor(food_chicken_2017);walk_executor(stove_2065);putin_executor(food_chicken_2017, stove_2065);close
_executor(stove_2065);switchon_executor(stove_2065);",missed action num: 436,,
,,open_executor(stove_2065),"Find drawing_174. Robot is inside dining_room_201. Robot is close stove_2065. Robot is close kitchen
_counter_230. ",,
cdl_dataset/dataset/Prepare_dinner/g2.txt,k1,"missed actions: walk_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);w
alk_executor(food_onion_2032);grab_executor(food_onion_2032);walk_executor(stove_2065);putin_executo
r(food_onion_2032, stove_2065);walk_executor(food_chicken_2017);grab_executor(food_chicken_2017);wal
k_executor(stove_2065);putin_executor(food_chicken_2017, stove_2065);close_executor(stove_2065);swit
chon_executor(stove_2065);",missed action num: 410,,
,,"obs(stove_2065, What is the current temperature setting of the oven)","Get this information:  stove_2065 is close to kitchen_counter_230. stove_2065 is close to character_
65. stove_2065 is on kitchen_counter_230. stove_2065 is inside dining_room_201. stove_2065 is OPEN. 
stove_2065 is OFF.",,
cdl_dataset/dataset/Prepare_dinner/g2.txt,k1,"missed actions: walk_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);w
alk_executor(food_onion_2032);grab_executor(food_onion_2032);walk_executor(stove_2065);putin_executo
r(food_onion_2032, stove_2065);walk_executor(food_chicken_2017);grab_executor(food_chicken_2017);wal
k_executor(stove_2065);putin_executor(food_chicken_2017, stove_2065);close_executor(stove_2065);swit
chon_executor(stove_2065);",missed action num: 410,,
,,close_executor(stove_2065),Robot is inside dining_room_201. Robot is close stove_2065. Robot is close kitchen_counter_230. ,,
cdl_dataset/dataset/Prepare_dinner/g2.txt,k1,"missed actions: open_executor(stove_2065);walk_executor(fridge_289);switchoff_executor(fridge_289);o
pen_executor(fridge_289);walk_executor(food_onion_2032);grab_executor(food_onion_2032);walk_executor
(stove_2065);putin_executor(food_onion_2032, stove_2065);walk_executor(food_chicken_2017);grab_execu
tor(food_chicken_2017);walk_executor(stove_2065);putin_executor(food_chicken_2017, stove_2065);close
_executor(stove_2065);switchon_executor(stove_2065);",missed action num: 436,,
,,switchon_executor(stove_2065),Robot is inside dining_room_201. Robot is close stove_2065. Robot is close kitchen_counter_230. ,,
cdl_dataset/dataset/Prepare_dinner/g2.txt,k1,"missed actions: switchoff_executor(stove_2065);open_executor(stove_2065);walk_executor(fridge_289);s
witchoff_executor(fridge_289);open_executor(fridge_289);walk_executor(food_onion_2032);grab_executor
(food_onion_2032);walk_executor(stove_2065);putin_executor(food_onion_2032, stove_2065);walk_executo
r(food_chicken_2017);grab_executor(food_chicken_2017);walk_executor(stove_2065);putin_executor(food_
chicken_2017, stove_2065);close_executor(stove_2065);switchon_executor(stove_2065);",missed action num: 467,,
" 
def is_chicken_or_onion(item:item):
    # Determine whether the item is a chicken or an onion
    symbol is_chicken_onion= is_food_chicken(item) or is_food_onion(item)
    return is_chicken_onion

behavior prepare_item_for_roasting(item:item, cutting_board:item, knife:item, tray:item):
    body:
        achieve clean(item)
        # Ensure the item is clean before preparing it
        bind stove: item where:
            is_stove(stove) and is_on(stove)
        achieve close_char(char, stove)
        # Get close to the stove to prepare the chicken and onions
        achieve_once inhand(knife)
        achieve cut(item)
        # Cut the item using the knife
        achieve on(item, tray)
        # Place the cut items on the tray

behavior __goal__():
    body:
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board
        bind knife: item where:
            is_knife(knife)
        # Select a knife
        bind tray: item where:
            is_tray(tray)
        # Select a tray
        foreach item: item:
            if is_chicken_or_onion(item):
                prepare_item_for_roasting(item, cutting_board, knife, tray)
",From function reset_sub_goal,,,,
"
def is_food_chicken_or_onion(item:item):
    # Function to check if the item is chicken or onion
    symbol is_food = is_food_chicken(item) or is_food_onion(item)
    return is_food

behavior prepare_for_roasting(chicken:item, onion:item, tray:item, knife:item, cutting_board:item):
    body:
        achieve_once inhand(knife)
        # Hold the knife to cut the chicken and onions

        achieve inside(chicken, tray)
        # Place the chicken on the tray

        achieve inside(onion, tray)
        # Place the onions on the tray

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken item

        bind onion: item where:
            is_food_onion(onion)
        # Select the onion item

        bind tray: item where:
            is_tray(tray)
        # Select a tray

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        prepare_for_roasting(chicken, onion, tray, knife, cutting_board)
        # Prepare chicken and onions for roasting
",From function reset_sub_goal,,,,
" 
def has_cuttable_items(table:item):
    # Determine whether there are cuttable items on the table
    symbol has_cuttable=exists o:item: cuttable(o) and on(o, table)
    return has_cuttable

def on_cutting_board(food:item, cutting_board:item):
    # Check if the food item is on the cutting board
    symbol is_on_cutting_board=on(food, cutting_board)
    return is_on_cutting_board

behavior prepare_chicken_and_onions(chicken:item, onion:item, cutting_board:item, knife:item, tray:i
tem):
    body:
        achieve_once inhand(knife)
        # Acquire knife to use for cutting

        achieve_once inhand(chicken)
        achieve on(chicken, cutting_board)
        # Place the chicken on a cutting board

        achieve_once inhand(onion)
        achieve on(onion, cutting_board)
        # Place onions on a cutting board
        
        achieve cut(chicken)
        achieve cut(onion)
        # Cut the chicken and onions using knife

        achieve on(chicken, tray)
        achieve on(onion, tray)
        # Place the cut chicken and onions onto a tray
    
behavior __goal__():
    body:
        # Identify items for preparing chicken and onions
        bind chicken:item where:
            is_food_chicken(chicken)
        
        bind onion:item where:
            is_food_onion(onion)

        bind knife:item where:
            is_knife(knife) and grabbable(knife)

        bind cutting_board:item where:
            is_cutting_board(cutting_board)
        
        bind tray:item where:
            is_tray(tray)

        prepare_chicken_and_onions(chicken, onion, cutting_board, knife, tray)
",From function reset_sub_goal,,,,
cdl_dataset/dataset/Prepare_dinner/g2.txt,k1,"missed actions: switchoff_executor(stove_2065);open_executor(stove_2065);walk_executor(fridge_289);s
witchoff_executor(fridge_289);open_executor(fridge_289);walk_executor(food_onion_2032);grab_executor
(food_onion_2032);walk_executor(stove_2065);putin_executor(food_onion_2032, stove_2065);walk_executo
r(food_chicken_2017);grab_executor(food_chicken_2017);walk_executor(stove_2065);putin_executor(food_
chicken_2017, stove_2065);close_executor(stove_2065);switchon_executor(stove_2065);",missed action num: 467,,
cdl_dataset/dataset/Prepare_dinner/g2.txt,k1,"missed actions: switchoff_executor(stove_2065);open_executor(stove_2065);walk_executor(fridge_289);s
witchoff_executor(fridge_289);open_executor(fridge_289);walk_executor(food_onion_2032);grab_executor
(food_onion_2032);walk_executor(stove_2065);putin_executor(food_onion_2032, stove_2065);walk_executo
r(food_chicken_2017);grab_executor(food_chicken_2017);walk_executor(stove_2065);putin_executor(food_
chicken_2017, stove_2065);close_executor(stove_2065);switchon_executor(stove_2065);",missed action num: 467,,
