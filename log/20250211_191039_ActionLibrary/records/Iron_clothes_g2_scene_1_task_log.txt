From agent.py
Reset goals: The sub-goals are: 
['1. Wash the shirt by hand in the sink.', '2. Dry the shirt.', '3. Iron the shirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_sink_19(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==19
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(detergent,sink_instance)
        else:
            exp(detergent,sink_instance)
    eff:
        unknown[detergent]=False
        close[detergent,sink_instance]=True
        close[sink_instance,detergent]=True
    

behavior find_soap_2126_around_sink_19(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==19
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_clothes_shirt_2158_around_ironing_board_2144(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2144
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_shirt,ironing_board_instance)
        else:
            exp(clothes_shirt,ironing_board_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,ironing_board_instance]=True
        close[ironing_board_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
behavior wash_shirt(shirt:item, sink:item):
    body:
        achieve_once inside(shirt, sink) # Place the shirt inside the sink to prepare for washing
        achieve_once has_water(sink) # Ensure the sink is filled with water to wash the shirt
        wash(shirt) # Perform the action of hand washing the shirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select a shirt to wash

        bind sink: item where:
            is_sink(sink)
        # Select a sink for washing the shirt

        wash_shirt(shirt, sink) # Proceed to wash the shirt in the sink
#goal_representation_end

##############################
From agent.py->reset_goal
behavior wash_shirt(shirt:item, sink:item):
    body:
        achieve_once inside(shirt, sink) # Place the shirt inside the sink to prepare for washing
        achieve_once has_water(sink) # Ensure the sink is filled with water to wash the shirt
        wash(shirt) # Perform the action of hand washing the shirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select a shirt to wash

        bind sink: item where:
            is_sink(sink)
        # Select a sink for washing the shirt

        wash_shirt(shirt, sink) # Proceed to wash the shirt in the sink
##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2144)exp(clothes_shirt_2158, ironing_board_2144)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(sink_19)putin_executor(clothes_shirt_2158, sink_19)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot find: Robot is close to the ironing_board_2144. 
##############################
From agent.py
exp(clothes_shirt_2158, ironing_board_2144)
Fail to find clothes_shirt_2158 around ironing_board_2144. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2078)exp(clothes_shirt_2158, basket_for_clothes_2078)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(sink_19)putin_executor(clothes_shirt_2158, sink_19)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(basket_for_clothes_2078)
Robot find: clothes_pants_2157, clothes_shirt_2158, clothes_socks_2159, clothes_skirt_2160, Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the clothes_socks_2159. Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. 
##############################
From agent.py
exp(clothes_shirt_2158, basket_for_clothes_2078)
Find clothes_shirt_2158. 
##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2158)walk_executor(sink_19)putin_executor(clothes_shirt_2158, sink_19)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)
##############################
From agent.py
grab_executor(clothes_shirt_2158)
Robot find: Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the clothes_socks_2159. Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. Grabbing clothes_shirt_2158 by right hand. 
##############################
From agent.py
walk_executor(sink_19)
Robot find: after_shave_2063, soap_2125, detergent_2155, mat_32, phone_2029, cleaning_solution_2143, drawing_33, Robot is close to the clothes_shirt_2158. Robot is close to the bathroom_counter_18. Robot is close to the sink_19. 
##############################
From agent.py
putin_executor(clothes_shirt_2158, sink_19)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the bathroom_counter_18. Robot is close to the sink_19. sink_19 is close clothes_shirt_2158. clothes_shirt_2158 is inside sink_19. clothes_shirt_2158 is close sink_19. clothes_shirt_2158 released by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot find: Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchon_executor(faucet_20)
Robot find: Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot find: Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned off. 
##############################
From agent.py
walk_executor(clothes_shirt_2158)
Robot find: Robot is close to the sink_19. Robot is close to the clothes_shirt_2158. 
##############################
From agent.py
grab_executor(clothes_shirt_2158)
Robot find: Robot is close to the sink_19. Robot is close to the clothes_shirt_2158. Grabbing clothes_shirt_2158 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchon_executor(faucet_20)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned on. 
##############################
From agent.py
wash_executor(clothes_shirt_2158)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. clothes_shirt_2158 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_blow_dryer_2057_around_bathroom_cabinet_17(blow_dryer:item):
    goal: not unknown(blow_dryer)
    body:
        assert is_blow_dryer(blow_dryer)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(blow_dryer,bathroom_cabinet_instance)
        else:
            exp(blow_dryer,bathroom_cabinet_instance)
    eff:
        unknown[blow_dryer]=False
        close[blow_dryer,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,blow_dryer]=True
    

#exp_behavior_end

#goal_representation
 
def find_drying_location(clothes:item):
    # Function to find a suitable location for drying clothes
    symbol clothes_near_iron=exists item: item : (is_ironing_board(item) and close(item, clothes))
    return clothes_near_iron

behavior dry_shirt(shirt:item, drying_spot:item):
    body:
        achieve_once on(shirt, drying_spot) # Place the shirt at a drying spot

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt]==2158 # Identifying the specific shirt that needs drying

        if exists drying_spot: item : (is_ironing_board(drying_spot) and find_drying_location(shirt)):
            bind drying_spot: item where:
                is_ironing_board(drying_spot) and find_drying_location(shirt)
            dry_shirt(shirt, drying_spot) # Place the shirt nearby the iron on the ironing board to dry

        else:
            # If no suitable drying location is immediately known, explicitly check each ironing board to find if it can be used for drying
            foreach drying_spot: item:
                if is_ironing_board(drying_spot) and not visited(drying_spot):
                    observe(drying_spot, "Check if the ironing board is a suitable location for drying a shirt")
                    # Assess the suitability of this ironing board for drying

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def find_drying_location(clothes:item):
    # Function to find a suitable location for drying clothes
    symbol clothes_near_iron=exists item: item : (is_ironing_board(item) and close(item, clothes))
    return clothes_near_iron

behavior dry_shirt(shirt:item, drying_spot:item):
    body:
        achieve_once on(shirt, drying_spot) # Place the shirt at a drying spot

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt]==2158 # Identifying the specific shirt that needs drying

        if exists drying_spot: item : (is_ironing_board(drying_spot) and find_drying_location(shirt)):
            bind drying_spot: item where:
                is_ironing_board(drying_spot) and find_drying_location(shirt)
            dry_shirt(shirt, drying_spot) # Place the shirt nearby the iron on the ironing board to dry

        else:
            # If no suitable drying location is immediately known, explicitly check each ironing board to find if it can be used for drying
            foreach drying_spot: item:
                if is_ironing_board(drying_spot) and not visited(drying_spot):
                    observe(drying_spot, "Check if the ironing board is a suitable location for drying a shirt")
                    # Assess the suitability of this ironing board for drying

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2144)obs(ironing_board_2144, Check if the ironing board is a suitable location for drying a shirt)
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the ironing_board_2144. 
##############################
From agent.py
obs(ironing_board_2144, Check if the ironing board is a suitable location for drying a shirt)
Get this information:  ironing_board_2144 is inside dining_room_41. ironing_board_2144 is close to dining_room_41. ironing_board_2144 is close to character_240.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to place the shirt onto the ironing board to complete the drying process.
##############################
From agent.py
Human Instruction: You need to place the shirt onto the ironing board to complete the drying process.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to basket_for_clothes_2078.
Action 4: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 5: Grab clothes_shirt_2158.
Action 6: Walk to sink_19.
Action 7: Put clothes_shirt_2158 into sink_19.
Action 8: Walk to faucet_20.
Action 9: Switch on faucet_20.
Action 10: Switch off faucet_20.
Action 11: Walk to clothes_shirt_2158.
Action 12: Grab clothes_shirt_2158.
Action 13: Walk to faucet_20.
Action 14: Switch on faucet_20.
Action 15: Wash clothes_shirt_2158.
Action 16: Switch off faucet_20.
Action 17: Walk to ironing_board_2144.
Action 18: Observe around ironing_board_2144 with the question of Check if the ironing board is a suitable location for drying a shirt.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_bench_113(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==113
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(iron,bench_instance)
        else:
            exp(iron,bench_instance)
    eff:
        unknown[iron]=False
        close[iron,bench_instance]=True
        close[bench_instance,iron]=True
    

behavior find_blow_dryer_2057_around_washing_machine_2079(blow_dryer:item):
    goal: not unknown(blow_dryer)
    body:
        assert is_blow_dryer(blow_dryer)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(blow_dryer,washing_machine_instance)
        else:
            exp(blow_dryer,washing_machine_instance)
    eff:
        unknown[blow_dryer]=False
        close[blow_dryer,washing_machine_instance]=True
        close[washing_machine_instance,blow_dryer]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_ironing_board(shirt: item, ironing_board: item):
    body:
        achieve_once on(shirt, ironing_board)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt item

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        
        place_shirt_on_ironing_board(shirt, ironing_board)
        # Place the shirt on the ironing board to dry it

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior place_shirt_on_ironing_board(shirt: item, ironing_board: item):
    body:
        achieve_once on(shirt, ironing_board)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt item

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        
        place_shirt_on_ironing_board(shirt, ironing_board)
        # Place the shirt on the ironing board to dry it

##############################
From agent.py-> find a plan in act()
put_executor(clothes_shirt_2158, ironing_board_2144)
##############################
From agent.py
put_executor(clothes_shirt_2158, ironing_board_2144)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the ironing_board_2144. ironing_board_2144 is close clothes_shirt_2158. clothes_shirt_2158 is close ironing_board_2144. clothes_shirt_2158 is on ironing_board_2144. clothes_shirt_2158 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_kitchen_counter_123(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(iron,kitchen_counter_instance)
        else:
            exp(iron,kitchen_counter_instance)
    eff:
        unknown[iron]=False
        close[iron,kitchen_counter_instance]=True
        close[kitchen_counter_instance,iron]=True
    

#exp_behavior_end

#goal_representation
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve_once plugged(iron)
        # Plug the iron into a power source
        achieve_once is_on(iron)
        # Ensure the iron is turned on
        achieve_once on(shirt, ironing_board)
        # Place the shirt on the ironing board for ironing
        achieve_once clean(shirt)
        # Iron out the shirt to make sure it is clean and smooth
        achieve_once unplugged(iron)
        # Unplug the iron after usage to ensure safety

behavior __goal__():
    body:
        bind clothes_shirt_2158: item where:
            is_clothes_shirt(clothes_shirt_2158)
        # Select the shirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(clothes_shirt_2158, iron, ironing_board) 
        # Execute the ironing task with the selected shirt, iron, and ironing board
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve_once plugged(iron)
        # Plug the iron into a power source
        achieve_once is_on(iron)
        # Ensure the iron is turned on
        achieve_once on(shirt, ironing_board)
        # Place the shirt on the ironing board for ironing
        achieve_once clean(shirt)
        # Iron out the shirt to make sure it is clean and smooth
        achieve_once unplugged(iron)
        # Unplug the iron after usage to ensure safety

behavior __goal__():
    body:
        bind clothes_shirt_2158: item where:
            is_clothes_shirt(clothes_shirt_2158)
        # Select the shirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(clothes_shirt_2158, iron, ironing_board) 
        # Execute the ironing task with the selected shirt, iron, and ironing board
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(iron_2161, kitchen_counter_123)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)switchoff_executor(iron_2161)plugout_executor(iron_2161)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Robot find: tray_2068, oil_2149, knife_2035, food_kiwi_2054, food_orange_2027, Robot is close to the kitchen_counter_123. 
##############################
From agent.py
exp(iron_2161, kitchen_counter_123)
Fail to find iron_2161 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(iron_2161, kitchen_counter_119)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)switchoff_executor(iron_2161)plugout_executor(iron_2161)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_78, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(iron_2161, kitchen_counter_119)
Fail to find iron_2161 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(iron_2161, kitchen_counter_122)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)switchoff_executor(iron_2161)plugout_executor(iron_2161)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, fryingpan_2154, Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(iron_2161, kitchen_counter_122)
Fail to find iron_2161 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(iron_2161, cupboard_118)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)switchoff_executor(iron_2161)plugout_executor(iron_2161)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(iron_2161, cupboard_118)
Fail to find iron_2161 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(iron_2161, cupboard_117)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)switchoff_executor(iron_2161)plugout_executor(iron_2161)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find iron_2161 ?
Answer: Go to the dining room. Locate bowl_2142; iron_2161 is resting on it.
Re-decompose: None

##############################
From agent.py
Human Instruction: You need to place the shirt onto the ironing board to complete the drying process.
Go to the dining room. Locate bowl_2142; iron_2161 is resting on it.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to basket_for_clothes_2078.
Action 4: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 5: Grab clothes_shirt_2158.
Action 6: Walk to sink_19.
Action 7: Put clothes_shirt_2158 into sink_19.
Action 8: Walk to faucet_20.
Action 9: Switch on faucet_20.
Action 10: Switch off faucet_20.
Action 11: Walk to clothes_shirt_2158.
Action 12: Grab clothes_shirt_2158.
Action 13: Walk to faucet_20.
Action 14: Switch on faucet_20.
Action 15: Wash clothes_shirt_2158.
Action 16: Switch off faucet_20.
Action 17: Walk to ironing_board_2144.
Action 18: Observe around ironing_board_2144 with the question of Check if the ironing board is a suitable location for drying a shirt.
Action 19: Put clothes_shirt_2158 on ironing_board_2144.
Action 20: Walk to kitchen_counter_123.
Action 21: look for iron_2161 around kitchen_counter_123.
Action 22: Walk to kitchen_counter_119.
Action 23: look for iron_2161 around kitchen_counter_119.
Action 24: Walk to kitchen_counter_122.
Action 25: look for iron_2161 around kitchen_counter_122.
Action 26: Walk to cupboard_118.
Action 27: Open cupboard_118.
Action 28: look for iron_2161 around cupboard_118.
Action 29: Walk to cupboard_117.

##############################
From agent.py
exp(iron_2161, cupboard_117)
Fail to find iron_2161 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2142)exp(iron_2161, bowl_2142)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)switchoff_executor(iron_2161)plugout_executor(iron_2161)
##############################
From agent.py
walk_executor(bowl_2142)
Robot find: iron_2161, Robot is close to the bowl_2142. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(iron_2161, bowl_2142)
Find iron_2161. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)switchoff_executor(iron_2161)plugout_executor(iron_2161)
##############################
From agent.py
walk_executor(iron_2161)
Robot find: Robot is close to the bowl_2142. Robot is close to the iron_2161. 
##############################
From agent.py
plugin_executor(iron_2161)
Robot find: Robot is close to the bowl_2142. Robot is close to the iron_2161. iron_2161 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2161)
Robot find: Robot is close to the bowl_2142. Robot is close to the iron_2161. iron_2161 is turned on. 
##############################
From agent.py
switchoff_executor(iron_2161)
Robot find: Robot is close to the bowl_2142. Robot is close to the iron_2161. iron_2161 is turned off. 
##############################
From agent.py
plugout_executor(iron_2161)
Robot find: Robot is close to the bowl_2142. Robot is close to the iron_2161. iron_2161 is unplugged. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to iron the shirt. Although the iron was plugged in and turned on, it was not used to iron the shirt. The robot should perform the action of ironing the clothes_shirt_2158, which is currently on the ironing_board_2144.
##############################
From agent.py
Human Instruction: The robot needs to iron the shirt. Although the iron was plugged in and turned on, it was not used to iron the shirt. The robot should perform the action of ironing the clothes_shirt_2158, which is currently on the ironing_board_2144.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to basket_for_clothes_2078.
Action 4: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 5: Grab clothes_shirt_2158.
Action 6: Walk to sink_19.
Action 7: Put clothes_shirt_2158 into sink_19.
Action 8: Walk to faucet_20.
Action 9: Switch on faucet_20.
Action 10: Switch off faucet_20.
Action 11: Walk to clothes_shirt_2158.
Action 12: Grab clothes_shirt_2158.
Action 13: Walk to faucet_20.
Action 14: Switch on faucet_20.
Action 15: Wash clothes_shirt_2158.
Action 16: Switch off faucet_20.
Action 17: Walk to ironing_board_2144.
Action 18: Observe around ironing_board_2144 with the question of Check if the ironing board is a suitable location for drying a shirt.
Action 19: Put clothes_shirt_2158 on ironing_board_2144.
Action 20: Walk to kitchen_counter_123.
Action 21: look for iron_2161 around kitchen_counter_123.
Action 22: Walk to kitchen_counter_119.
Action 23: look for iron_2161 around kitchen_counter_119.
Action 24: Walk to kitchen_counter_122.
Action 25: look for iron_2161 around kitchen_counter_122.
Action 26: Walk to cupboard_118.
Action 27: Open cupboard_118.
Action 28: look for iron_2161 around cupboard_118.
Action 29: Walk to cupboard_117.
Action 30: look for iron_2161 around cupboard_117.
Action 31: Walk to bowl_2142.
Action 32: look for iron_2161 around bowl_2142.
Action 33: Walk to iron_2161.
Action 34: Plug in iron_2161.
Action 35: Switch on iron_2161.
Action 36: Switch off iron_2161.
Action 37: Plug out iron_2161.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_washing_machine_2079(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_rag_2025_around_washing_machine_2079(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(rag,washing_machine_instance)
        else:
            exp(rag,washing_machine_instance)
    eff:
        unknown[rag]=False
        close[rag,washing_machine_instance]=True
        close[washing_machine_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(ironing_board:item, iron:item, shirt:item):
    body:
        achieve_once on(shirt, ironing_board) # Place the shirt on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is switched on

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Select the ironing board with ID 2144

        bind iron: item where:
            is_iron(iron) and id[iron] == 2161
        # Select the iron with ID 2161

        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2158
        # Select the shirt with ID 2158

        iron_shirt(ironing_board, iron, shirt)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_shirt(ironing_board:item, iron:item, shirt:item):
    body:
        achieve_once on(shirt, ironing_board) # Place the shirt on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is switched on

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Select the ironing board with ID 2144

        bind iron: item where:
            is_iron(iron) and id[iron] == 2161
        # Select the iron with ID 2161

        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2158
        # Select the shirt with ID 2158

        iron_shirt(ironing_board, iron, shirt)

##############################
From agent.py-> find a plan in act()
plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
plugin_executor(iron_2161)
Robot find: Robot is close to the bowl_2142. Robot is close to the iron_2161. iron_2161 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2161)
Robot find: Robot is close to the bowl_2142. Robot is close to the iron_2161. iron_2161 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to perform the action of physically ironing the clothes_shirt_2158 on the ironing_board_2144.
##############################
From agent.py
Human Instruction: The robot needs to perform the action of physically ironing the clothes_shirt_2158 on the ironing_board_2144.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to basket_for_clothes_2078.
Action 4: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 5: Grab clothes_shirt_2158.
Action 6: Walk to sink_19.
Action 7: Put clothes_shirt_2158 into sink_19.
Action 8: Walk to faucet_20.
Action 9: Switch on faucet_20.
Action 10: Switch off faucet_20.
Action 11: Walk to clothes_shirt_2158.
Action 12: Grab clothes_shirt_2158.
Action 13: Walk to faucet_20.
Action 14: Switch on faucet_20.
Action 15: Wash clothes_shirt_2158.
Action 16: Switch off faucet_20.
Action 17: Walk to ironing_board_2144.
Action 18: Observe around ironing_board_2144 with the question of Check if the ironing board is a suitable location for drying a shirt.
Action 19: Put clothes_shirt_2158 on ironing_board_2144.
Action 20: Walk to kitchen_counter_123.
Action 21: look for iron_2161 around kitchen_counter_123.
Action 22: Walk to kitchen_counter_119.
Action 23: look for iron_2161 around kitchen_counter_119.
Action 24: Walk to kitchen_counter_122.
Action 25: look for iron_2161 around kitchen_counter_122.
Action 26: Walk to cupboard_118.
Action 27: Open cupboard_118.
Action 28: look for iron_2161 around cupboard_118.
Action 29: Walk to cupboard_117.
Action 30: look for iron_2161 around cupboard_117.
Action 31: Walk to bowl_2142.
Action 32: look for iron_2161 around bowl_2142.
Action 33: Walk to iron_2161.
Action 34: Plug in iron_2161.
Action 35: Switch on iron_2161.
Action 36: Switch off iron_2161.
Action 37: Plug out iron_2161.
Action 38: Plug in iron_2161.
Action 39: Switch on iron_2161.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_rag_2025_around_washing_machine_2079(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(rag,washing_machine_instance)
        else:
            exp(rag,washing_machine_instance)
    eff:
        unknown[rag]=False
        close[rag,washing_machine_instance]=True
        close[washing_machine_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(shirt, ironing_board) # Place the shirt on the ironing board for ironing
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is turned on
        achieve_once on(shirt, ironing_board) # Confirm the shirt remains on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2158

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144

        bind iron: item where:
            is_iron(iron) and id[iron] == 2161

        iron_shirt(shirt, ironing_board, iron) # Iron the shirt using the specified iron and ironing board

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_rag_2025_around_washing_machine_2079(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(rag,washing_machine_instance)
        else:
            exp(rag,washing_machine_instance)
    eff:
        unknown[rag]=False
        close[rag,washing_machine_instance]=True
        close[washing_machine_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item):
    body:
        bind iron: item where:
            is_iron(iron)
        achieve_once plugged(iron)
        achieve_once is_on(iron)
        achieve on(shirt, ironing_board)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2158
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        iron_shirt(shirt, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_rag_2025_around_home_office_241(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(rag,home_office_instance)
        else:
            exp(rag,home_office_instance)
    eff:
        unknown[rag]=False
        close[rag,home_office_instance]=True
        close[home_office_instance,rag]=True
    

behavior find_pillow_103_around_bed_197(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==197
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(clothes_shirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(clothes_shirt, ironing_board)
        # Place the shirt on the ironing board temporarily during ironing
        achieve plugged(iron)
        # Ensure the iron is plugged in for use
        achieve is_on(iron)
        # Ensure the iron is turned on for use

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt]==2158
        # Select the shirt with ID 2158
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board]==2144
        # Select the ironing board with ID 2144
        bind iron: item where:
            is_iron(iron) and id[iron]==2161
        # Select the iron with ID 2161

        iron_shirt(clothes_shirt, iron, ironing_board)
        # Perform the behavior to iron the shirt using the specified iron and ironing board


#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "3. iron the shirt." ?
Answer: Put the shirt on the ironing board. Turn on the iron. Then put the iron on the shirt, push, and pull the iron on the shirt.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_rag_2052_around_washing_machine_2079(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(rag,washing_machine_instance)
        else:
            exp(rag,washing_machine_instance)
    eff:
        unknown[rag]=False
        close[rag,washing_machine_instance]=True
        close[washing_machine_instance,rag]=True
    

behavior find_clothes_gloves_2118_around_washing_machine_2079(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
behavior position_shirt_on_board(char: character, shirt: item, ironing_board: item):
    body:
        achieve_close_char(char, ironing_board) # Move the character closer to the ironing board
        achieve_once on(shirt, ironing_board) # Place the shirt on the ironing_board

behavior power_on_iron(char: character, iron: item, ironing_board: item):
    body:
        achieve_close_char(char, iron) # Move the character closer to the iron
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Turn on the iron

behavior iron_shirt(char: character, shirt: item, iron: item):
    body:
        achieve_once close_char(char, shirt) # Move the character closer to the shirt
        achieve is_on(iron) # Ensure the iron is on
        push(iron) # Push the iron
        pull(iron) # Pull the iron

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt]==2158
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board]==2144
        bind iron: item where:
            is_iron(iron) and id[iron]==2161
        
        position_shirt_on_board(char, shirt, ironing_board)
        power_on_iron(char, iron, ironing_board)
        iron_shirt(char, shirt, iron)
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

'Function achieve_close_char not found. Note that recursive function calls are not supported in the current version.'
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

behavior find_rag_2052_around_washing_machine_2079(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(rag,washing_machine_instance)
        else:
            exp(rag,washing_machine_instance)
    eff:
        unknown[rag]=False
        close[rag,washing_machine_instance]=True
        close[washing_machine_instance,rag]=True
    

#goal_representation
 
behavior position_shirt_on_board(char: character, shirt: item, ironing_board: item):
    body:
        achieve close_char(char, ironing_board) # Move the character closer to the ironing board
        achieve_once on(shirt, ironing_board) # Place the shirt on the ironing_board

behavior power_on_iron(char: character, iron: item, ironing_board: item):
    body:
        achieve close_char(char, iron) # Move the character closer to the iron
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Turn on the iron

behavior iron_shirt(char: character, shirt: item, iron: item):
    body:
        achieve_once close_char(char, shirt) # Move the character closer to the shirt
        achieve is_on(iron) # Ensure the iron is on
        push(iron) # Push the iron
        pull(iron) # Pull the iron

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt]==2158
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board]==2144
        bind iron: item where:
            is_iron(iron) and id[iron]==2161
        
        position_shirt_on_board(char, shirt, ironing_board)
        power_on_iron(char, iron, ironing_board)
        iron_shirt(char, shirt, iron)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_rag_2025_around_washing_machine_2079(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(rag,washing_machine_instance)
        else:
            exp(rag,washing_machine_instance)
    eff:
        unknown[rag]=False
        close[rag,washing_machine_instance]=True
        close[washing_machine_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_on_ironing_board(shirt:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)

behavior start_ironing(iron:item, shirt:item, ironing_board:item):
    body:
        achieve plugged(iron)
        achieve is_on(iron)
        achieve_once on(shirt, ironing_board)

behavior iron_shirt(iron:item, shirt:item, ironing_board:item):
    body:
        put_on_ironing_board(shirt, ironing_board)
        start_ironing(iron, shirt, ironing_board)
        
behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        bind iron: item where:
            is_iron(iron)
        iron_shirt(iron, clothes_shirt, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior put_shirt_on_ironing_board(shirt:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)
        
behavior start_ironing(iron:item, shirt:item):
    body:
        achieve is_on(iron)
        achieve_once close(iron, shirt)
        
behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt]==2158
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board]==2144
        bind iron: item where:
            is_iron(iron) and id[iron]==2161
        put_shirt_on_ironing_board(clothes_shirt, ironing_board)
        start_ironing(iron, clothes_shirt)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior put_shirt_on_ironing_board(shirt:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)
        
behavior start_ironing(iron:item, shirt:item):
    body:
        achieve is_on(iron)
        achieve_once close(iron, shirt)
        
behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt]==2158
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board]==2144
        bind iron: item where:
            is_iron(iron) and id[iron]==2161
        put_shirt_on_ironing_board(clothes_shirt, ironing_board)
        start_ironing(iron, clothes_shirt)

##############################
From agent.py-> find a plan in act()
grab_executor(iron_2161)walk_executor(clothes_shirt_2158)put_executor(iron_2161, clothes_shirt_2158)
##############################
From agent.py
grab_executor(iron_2161)
Robot find: Robot is close to the bowl_2142. Robot is close to the iron_2161. Grabbing iron_2161 by right hand. 
##############################
From agent.py
walk_executor(clothes_shirt_2158)
Robot find: Robot is close to the iron_2161. Robot is close to the ironing_board_2144. Robot is close to the clothes_shirt_2158. 
##############################
From agent.py
put_executor(iron_2161, clothes_shirt_2158)
Robot find: Robot is close to the iron_2161. Robot is close to the ironing_board_2144. Robot is close to the clothes_shirt_2158. iron_2161 is close clothes_shirt_2158. iron_2161 is on clothes_shirt_2158. clothes_shirt_2158 is close iron_2161. iron_2161 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to move the iron across the shirt by performing push and pull actions with the iron to complete the process of ironing.
##############################
Task Summary:
Task Goal:
Hand wash a shirt and iron this shirt.
Action History:
['walk_executor(ironing_board_2144)', 'walk_executor(basket_for_clothes_2078)', 'grab_executor(clothes_shirt_2158)', 'walk_executor(sink_19)', 'putin_executor(clothes_shirt_2158, sink_19)', 'walk_executor(faucet_20)', 'switchon_executor(faucet_20)', 'switchoff_executor(faucet_20)', 'walk_executor(clothes_shirt_2158)', 'grab_executor(clothes_shirt_2158)', 'walk_executor(faucet_20)', 'switchon_executor(faucet_20)', 'wash_executor(clothes_shirt_2158)', 'switchoff_executor(faucet_20)', 'walk_executor(ironing_board_2144)', 'put_executor(clothes_shirt_2158, ironing_board_2144)', 'walk_executor(kitchen_counter_123)', 'walk_executor(kitchen_counter_119)', 'walk_executor(kitchen_counter_122)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'walk_executor(cupboard_117)', 'walk_executor(bowl_2142)', 'walk_executor(iron_2161)', 'plugin_executor(iron_2161)', 'switchon_executor(iron_2161)', 'switchoff_executor(iron_2161)', 'plugout_executor(iron_2161)', 'plugin_executor(iron_2161)', 'switchon_executor(iron_2161)', 'grab_executor(iron_2161)', 'walk_executor(clothes_shirt_2158)', 'put_executor(iron_2161, clothes_shirt_2158)']
Time info:
Time consume: 386 seconds
Exp_helper query times: 1
Guidance query times: 1
library scale: 36
goal generate times: 11
goal correct times: 0
action_num: 33

Task complete rate:
Keystate: k1 - Requires: 0 steps
Keystate: k2 - Requires: 0 steps
Action Completion Rate: 0.0
Scene_id: 1
##############################
