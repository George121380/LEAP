From agent.py
Reset goals: The sub-goals are: 
['1. Find a lemon, sugar, and a cup.', '2. Squeeze the lemon into the cup, add water and sugar, then stir.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2133_around_kitchen_counter_123(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

behavior find_food_lemon_2100_around_kitchen_counter_123(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_lemon,kitchen_counter_instance)
        else:
            exp(food_lemon,kitchen_counter_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_lemon]=True
    

behavior find_food_sugar_2111_around_kitchen_counter_123(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_sugar,kitchen_counter_instance)
        else:
            exp(food_sugar,kitchen_counter_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_sugar]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_lemon(food_lemon:item):
    body:
        achieve_once visited(food_lemon)

behavior find_sugar(food_sugar:item):
    body:
        achieve_once visited(food_sugar)

behavior find_cup(cup:item):
    body:
        achieve_once visited(cup)

behavior __goal__():
    body:
        bind food_lemon: item where:
            is_food_lemon(food_lemon)
        # Select a lemon
        bind food_sugar: item where:
            is_food_sugar(food_sugar)
        # Select sugar
        bind cup: item where:
            is_cup(cup)
        # Select a cup

        find_lemon(food_lemon)
        find_sugar(food_sugar)
        find_cup(cup)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_lemon(food_lemon:item):
    body:
        achieve_once visited(food_lemon)

behavior find_sugar(food_sugar:item):
    body:
        achieve_once visited(food_sugar)

behavior find_cup(cup:item):
    body:
        achieve_once visited(cup)

behavior __goal__():
    body:
        bind food_lemon: item where:
            is_food_lemon(food_lemon)
        # Select a lemon
        bind food_sugar: item where:
            is_food_sugar(food_sugar)
        # Select sugar
        bind cup: item where:
            is_cup(cup)
        # Select a cup

        find_lemon(food_lemon)
        find_sugar(food_sugar)
        find_cup(cup)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(food_lemon_2100, kitchen_counter_123)walk_executor(food_lemon_2100)obs(food_lemon_2100, look around this place)walk_executor(kitchen_counter_123)exp(food_sugar_2111, kitchen_counter_123)walk_executor(food_sugar_2111)obs(food_sugar_2111, look around this place)walk_executor(kitchen_counter_123)exp(cup_2132, kitchen_counter_123)walk_executor(cup_2132)obs(cup_2132, look around this place)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Robot find: tray_2068, oil_2149, knife_2035, food_kiwi_2054, food_orange_2027, Robot is close to the kitchen_counter_123. 
##############################
From agent.py
exp(food_lemon_2100, kitchen_counter_123)
Fail to find food_lemon_2100 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_lemon_2100, fridge_126)walk_executor(food_lemon_2100)obs(food_lemon_2100, look around this place)walk_executor(cupboard_118)open_executor(cupboard_118)exp(food_sugar_2111, cupboard_118)walk_executor(food_sugar_2111)obs(food_sugar_2111, look around this place)walk_executor(kitchen_counter_122)exp(cup_2132, kitchen_counter_122)walk_executor(cup_2132)obs(cup_2132, look around this place)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_lemon_2100, fridge_126)
Find food_lemon_2100. 
##############################
From agent.py-> find a plan in act()
obs(food_lemon_2100, look around this place)obs(food_sugar_2111, look around this place)walk_executor(kitchen_counter_122)exp(cup_2132, kitchen_counter_122)walk_executor(cup_2132)obs(cup_2132, look around this place)
##############################
From agent.py
obs(food_lemon_2100, look around this place)
Get this information:  food_lemon_2100 is inside dining_room_41. food_lemon_2100 is inside fridge_126. food_lemon_2100 is close to fridge_126. food_lemon_2100 is close to character_240. food_lemon_2100 is CLEAN.
##############################
From agent.py
obs(food_sugar_2111, look around this place)
Get this information:  food_sugar_2111 is inside dining_room_41. food_sugar_2111 is inside fridge_126. food_sugar_2111 is close to fridge_126. food_sugar_2111 is close to character_240. food_sugar_2111 is CLEAN.
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, pot_78, fryingpan_2154, Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(cup_2132, kitchen_counter_122)
Fail to find cup_2132 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(cup_2132, cupboard_117)walk_executor(cup_2132)obs(cup_2132, look around this place)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(cup_2132, cupboard_117)
Fail to find cup_2132 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(cup_2132, cupboard_118)walk_executor(cup_2132)obs(cup_2132, look around this place)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(cup_2132, cupboard_118)
Fail to find cup_2132 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(cup_2132, kitchen_counter_119)walk_executor(cup_2132)obs(cup_2132, look around this place)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(cup_2132, kitchen_counter_119)
Fail to find cup_2132 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(bench_113)exp(cup_2132, bench_113)walk_executor(cup_2132)obs(cup_2132, look around this place)
##############################
From agent.py
walk_executor(bench_113)
Robot find: mat_102, pillow_103, pillow_104, pillow_105, pillow_106, drawing_110, Robot is close to the bench_113. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2132 ?
Answer: Go to dining_room_41. Inside the room, locate table_114. cup_2132 is on table_114. Look for the item on the tabletop.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_41. Inside the room, locate table_114. cup_2132 is on table_114. Look for the item on the tabletop.

The actions you have taken:
Action 1: Walk to kitchen_counter_123.
Action 2: look for food_lemon_2100 around kitchen_counter_123.
Action 3: Walk to fridge_126.
Action 4: Switch off fridge_126.
Action 5: Open fridge_126.
Action 6: look for food_lemon_2100 around fridge_126.
Action 7: Observe around food_lemon_2100 with the question of look around this place.
Action 8: Observe around food_sugar_2111 with the question of look around this place.
Action 9: Walk to kitchen_counter_122.
Action 10: look for cup_2132 around kitchen_counter_122.
Action 11: Walk to cupboard_117.
Action 12: look for cup_2132 around cupboard_117.
Action 13: Walk to cupboard_118.
Action 14: Open cupboard_118.
Action 15: look for cup_2132 around cupboard_118.
Action 16: Walk to kitchen_counter_119.
Action 17: look for cup_2132 around kitchen_counter_119.
Action 18: Walk to bench_113.

##############################
From agent.py
exp(cup_2132, bench_113)
Fail to find cup_2132 around bench_113. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(cup_2132, table_114)walk_executor(cup_2132)obs(cup_2132, look around this place)
##############################
From agent.py
walk_executor(table_114)
Robot find: cup_2049, lighter_2004, lighter_2039, box_2038, clothes_hat_2117, milk_2115, cup_2134, check_2058, drawing_111, clothes_gloves_2118, cup_2132, food_bread_2084, dry_pasta_2114, knife_2122, cup_2133, table_cloth_2005, food_food_2021, Robot is close to the table_114. Robot is close to the mat_102. 
##############################
From agent.py
exp(cup_2132, table_114)
Find cup_2132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2132)obs(cup_2132, look around this place)
##############################
From agent.py
walk_executor(cup_2132)
Robot find: Robot is close to the table_114. Robot is close to the cup_2132. 
##############################
From agent.py
obs(cup_2132, look around this place)
Get this information:  cup_2132 is inside dining_room_41. cup_2132 is close to table_114. cup_2132 is close to character_240. cup_2132 is on table_114.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_wooden_spoon_2000_around_knifeblock_76(wooden_spoon:item):
    goal: not unknown(wooden_spoon)
    body:
        assert is_wooden_spoon(wooden_spoon)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(wooden_spoon,knifeblock_instance)
        else:
            exp(wooden_spoon,knifeblock_instance)
    eff:
        unknown[wooden_spoon]=False
        close[wooden_spoon,knifeblock_instance]=True
        close[knifeblock_instance,wooden_spoon]=True
    

behavior find_measuring_cup_2012_around_bowl_2142(measuring_cup:item):
    goal: not unknown(measuring_cup)
    body:
        assert is_measuring_cup(measuring_cup)
        bind bowl_instance:item where:
            is_bowl(bowl_instance) and id[bowl_instance]==2142
        achieve close_char(char,bowl_instance)
        if can_open(bowl_instance):
            achieve_once open(bowl_instance)
            exp(measuring_cup,bowl_instance)
        else:
            exp(measuring_cup,bowl_instance)
    eff:
        unknown[measuring_cup]=False
        close[measuring_cup,bowl_instance]=True
        close[bowl_instance,measuring_cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior squeeze_lemon_into_cup(lemon:item, cup:item):
    body:
        squeeze(lemon)
        achieve_once inside(lemon, cup)

behavior add_water_sugar_and_stir(cup:item, water:item, sugar:item):
    body:
        achieve has_water(cup)
        achieve_once inside(sugar, cup)
        # Assuming the action to stir exists, though not explicitly defined in provided details

behavior __goal__():
    body:
        # Selecting the items using bind based on the provided IDs and knowledge
        bind lemon: item where:
            is_food_lemon(lemon)
        bind cup: item where:
            is_cup(cup) and id[cup]==2132
        bind sugar: item where:
            is_food_sugar(sugar)
        
        squeeze_lemon_into_cup(lemon, cup)
        add_water_sugar_and_stir(cup, sugar)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Number of arguments does not match the number of types: 2 vs 3. Args: (VariableExpression<V::cup>, VariableExpression<V::sugar>), Types: (ObjectType<item>, ObjectType<item>, ObjectType<item>)
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_rag_2052_around_bench_115(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==115
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(rag,bench_instance)
        else:
            exp(rag,bench_instance)
    eff:
        unknown[rag]=False
        close[rag,bench_instance]=True
        close[bench_instance,rag]=True
    

behavior find_clothes_scarf_2120_around_basket_for_clothes_2078(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_scarf,basket_for_clothes_instance)
        else:
            exp(clothes_scarf,basket_for_clothes_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_scarf]=True
    

behavior find_wooden_spoon_2000_around_stove_2135(wooden_spoon:item):
    goal: not unknown(wooden_spoon)
    body:
        assert is_wooden_spoon(wooden_spoon)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2135
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(wooden_spoon,stove_instance)
        else:
            exp(wooden_spoon,stove_instance)
    eff:
        unknown[wooden_spoon]=False
        close[wooden_spoon,stove_instance]=True
        close[stove_instance,wooden_spoon]=True
    

#goal_representation
 
behavior squeeze_lemon_into_cup(lemon:item, cup:item):
    body:
        squeeze(lemon)
        achieve_once inside(lemon, cup)

behavior add_water_sugar_and_stir(cup:item, water:item, sugar:item):
    body:
        achieve has_water(cup)
        achieve_once inside(sugar, cup)
        # Assuming the action to stir exists, though not explicitly defined in provided details

behavior __goal__():
    body:
        # Selecting the items using bind based on the provided IDs and knowledge
        bind lemon: item where:
            is_food_lemon(lemon)
        bind cup: item where:
            is_cup(cup) and id[cup]==2132
        bind sugar: item where:
            is_food_sugar(sugar)
        bind water: item where:
            is_kitchen_counter(water) and has_water(water)
        
        squeeze_lemon_into_cup(lemon, cup)
        add_water_sugar_and_stir(cup, water, sugar)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_wooden_spoon_2000_around_toaster_132(wooden_spoon:item):
    goal: not unknown(wooden_spoon)
    body:
        assert is_wooden_spoon(wooden_spoon)
        bind toaster_instance:item where:
            is_toaster(toaster_instance) and id[toaster_instance]==132
        achieve close_char(char,toaster_instance)
        if can_open(toaster_instance):
            achieve_once open(toaster_instance)
            exp(wooden_spoon,toaster_instance)
        else:
            exp(wooden_spoon,toaster_instance)
    eff:
        unknown[wooden_spoon]=False
        close[wooden_spoon,toaster_instance]=True
        close[toaster_instance,wooden_spoon]=True
    

#exp_behavior_end

#goal_representation
 
behavior squeeze_lemon(lemon:item):
    body:
        achieve_once cut(lemon) # Cut the lemon first if necessary
        squeeze(lemon) # Squeeze the lemon to extract juice

behavior add_water(cup:item):
    body:
        achieve has_water(cup) # Ensure the cup has water in it

behavior add_sugar(sugar:item, cup:item):
    body:
        achieve_once inside(sugar, cup) # Add sugar to the cup

behavior stir_contents(cup:item):
    body:
        achieve_once inhand(spoon) # Use a spoon to stir, assuming a spoon is available and symbolic here for stirring
        # Ideally, a achieve_once inside content (eg, water, lemon juice, sugar) should be around spoon here to indicate stirring 

behavior __goal__():
    body:
        bind lemon: item where:
            is_food_lemon(lemon)
        # Select the lemon

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select the sugar

        bind cup: item where:
            is_cup(cup)
        # Select the cup

        squeeze_lemon(lemon)
        # Squeeze the lemon

        add_water(cup)
        # Add water to the cup

        add_sugar(sugar, cup)
        # Add sugar to the cup

        stir_contents(cup)
        # Stir the contents in the cup

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: spoon; available variables: [Variable<cup: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_wooden_spoon_2000_around_cutting_board_2123(wooden_spoon:item):
    goal: not unknown(wooden_spoon)
    body:
        assert is_wooden_spoon(wooden_spoon)
        bind cutting_board_instance:item where:
            is_cutting_board(cutting_board_instance) and id[cutting_board_instance]==2123
        achieve close_char(char,cutting_board_instance)
        if can_open(cutting_board_instance):
            achieve_once open(cutting_board_instance)
            exp(wooden_spoon,cutting_board_instance)
        else:
            exp(wooden_spoon,cutting_board_instance)
    eff:
        unknown[wooden_spoon]=False
        close[wooden_spoon,cutting_board_instance]=True
        close[cutting_board_instance,wooden_spoon]=True
    

#goal_representation
behavior squeeze_lemon(lemon:item):
    body:
        achieve_once cut(lemon) # Cut the lemon first if necessary
        squeeze(lemon) # Squeeze the lemon to extract juice

behavior add_water(cup:item):
    body:
        achieve has_water(cup) # Ensure the cup has water in it

behavior add_sugar(sugar:item, cup:item):
    body:
        achieve_once inside(sugar, cup) # Add sugar to the cup

behavior stir_contents(cup:item, spoon:item):
    body:
        achieve_once inhand(spoon) # Use a spoon to stir, assuming a spoon is available and symbolic here for stirring

behavior __goal__():
    body:
        bind lemon: item where:
            is_food_lemon(lemon)
        # Select the lemon

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select the sugar

        bind cup: item where:
            is_cup(cup)
        # Select the cup

        bind spoon: item where:
            is_wooden_spoon(spoon)
        # Select a spoon

        squeeze_lemon(lemon)
        # Squeeze the lemon

        add_water(cup)
        # Add water to the cup

        add_sugar(sugar, cup)
        # Add sugar to the cup

        stir_contents(cup, spoon)
        # Stir the contents in the cup with a spoon
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior squeeze_lemon(lemon:item):
    body:
        achieve_once cut(lemon) # Cut the lemon first if necessary
        squeeze(lemon) # Squeeze the lemon to extract juice

behavior add_water(cup:item):
    body:
        achieve has_water(cup) # Ensure the cup has water in it

behavior add_sugar(sugar:item, cup:item):
    body:
        achieve_once inside(sugar, cup) # Add sugar to the cup

behavior stir_contents(cup:item, spoon:item):
    body:
        achieve_once inhand(spoon) # Use a spoon to stir, assuming a spoon is available and symbolic here for stirring

behavior __goal__():
    body:
        bind lemon: item where:
            is_food_lemon(lemon)
        # Select the lemon

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select the sugar

        bind cup: item where:
            is_cup(cup)
        # Select the cup

        bind spoon: item where:
            is_wooden_spoon(spoon)
        # Select a spoon

        squeeze_lemon(lemon)
        # Squeeze the lemon

        add_water(cup)
        # Add water to the cup

        add_sugar(sugar, cup)
        # Add sugar to the cup

        stir_contents(cup, spoon)
        # Stir the contents in the cup with a spoon
##############################
From agent.py-> find a plan in act()
walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(cutting_board_2123)put_executor(food_lemon_2100, cutting_board_2123)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_lemon_2100)cut_executor(food_lemon_2100)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_121)walk_executor(kitchen_counter_119)put_executor(knife_2122, kitchen_counter_119)switchon_executor(faucet_121)switchoff_executor(faucet_121)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)walk_executor(cutting_board_2123)exp(wooden_spoon_2000, cutting_board_2123)walk_executor(wooden_spoon_2000)grab_executor(wooden_spoon_2000)
##############################
From agent.py
walk_executor(food_lemon_2100)
Robot find: Robot is close to the food_lemon_2100. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_lemon_2100)
Robot find: Robot is close to the food_lemon_2100. Robot is close to the fridge_126. Grabbing food_lemon_2100 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot find: Robot is close to the food_lemon_2100. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_lemon_2100, cutting_board_2123)
Robot find: Robot is close to the food_lemon_2100. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. cutting_board_2123 is close food_lemon_2100. food_lemon_2100 is close cutting_board_2123. food_lemon_2100 is on cutting_board_2123. food_lemon_2100 released by right hand. 
##############################
From agent.py
walk_executor(knife_2122)
Robot find: Robot is close to the knife_2122. Robot is close to the table_114. 
##############################
From agent.py
grab_executor(knife_2122)
Robot find: Robot is close to the knife_2122. Robot is close to the table_114. Grabbing knife_2122 by right hand. 
##############################
From agent.py
walk_executor(food_lemon_2100)
Robot find: Robot is close to the knife_2122. Robot is close to the cutting_board_2123. Robot is close to the food_lemon_2100. 
##############################
From agent.py
cut_executor(food_lemon_2100)
Robot find: Robot is close to the knife_2122. Robot is close to the cutting_board_2123. Robot is close to the food_lemon_2100. 
##############################
From agent.py
walk_executor(cup_2132)
Robot find: Robot is close to the knife_2122. Robot is close to the table_114. Robot is close to the cup_2132. 
##############################
From agent.py
grab_executor(cup_2132)
Robot find: Robot is close to the knife_2122. Robot is close to the table_114. Robot is close to the cup_2132. Grabbing cup_2132 by left hand. 
##############################
From agent.py
walk_executor(faucet_121)
Robot find: Robot is close to the knife_2122. Robot is close to the cup_2132. Robot is close to the faucet_121. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: Robot is close to the knife_2122. Robot is close to the cup_2132. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(knife_2122, kitchen_counter_119)
Robot find: Robot is close to the knife_2122. Robot is close to the cup_2132. Robot is close to the kitchen_counter_119. kitchen_counter_119 is close knife_2122. knife_2122 is close kitchen_counter_119. knife_2122 is on kitchen_counter_119. knife_2122 released by right hand. 
##############################
From agent.py
switchon_executor(faucet_121)
Robot find: Robot is close to the knife_2122. Robot is close to the cup_2132. Robot is close to the kitchen_counter_119. faucet_121 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_121)
Robot find: Robot is close to the knife_2122. Robot is close to the cup_2132. Robot is close to the kitchen_counter_119. faucet_121 is turned off. 
##############################
From agent.py
walk_executor(food_sugar_2111)
Robot find: Robot is close to the cup_2132. Robot is close to the fridge_126. Robot is close to the food_sugar_2111. 
##############################
From agent.py
grab_executor(food_sugar_2111)
Robot find: Robot is close to the cup_2132. Robot is close to the fridge_126. Robot is close to the food_sugar_2111. Grabbing food_sugar_2111 by right hand. 
##############################
From agent.py
walk_executor(cup_2132)
Robot find: Robot is close to the cup_2132. Robot is close to the food_sugar_2111. 
##############################
From agent.py
putin_executor(food_sugar_2111, cup_2132)
Robot find: Robot is close to the cup_2132. Robot is close to the food_sugar_2111. cup_2132 is close food_sugar_2111. food_sugar_2111 is inside cup_2132. food_sugar_2111 is close cup_2132. food_sugar_2111 released by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot find: Robot is close to the cup_2132. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(wooden_spoon_2000, cutting_board_2123)
Fail to find wooden_spoon_2000 around cutting_board_2123. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_lemon_2100)walk_executor(knifeblock_76)exp(wooden_spoon_2000, knifeblock_76)walk_executor(wooden_spoon_2000)grab_executor(wooden_spoon_2000)
##############################
From agent.py
walk_executor(food_lemon_2100)
Robot find: Robot is close to the cup_2132. Robot is close to the cutting_board_2123. Robot is close to the food_lemon_2100. 
##############################
From agent.py
walk_executor(knifeblock_76)
Robot find: Robot is close to the cup_2132. Robot is close to the knifeblock_76. 
##############################
From agent.py
exp(wooden_spoon_2000, knifeblock_76)
Fail to find wooden_spoon_2000 around knifeblock_76. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_lemon_2100)walk_executor(bowl_2140)exp(wooden_spoon_2000, bowl_2140)walk_executor(wooden_spoon_2000)grab_executor(wooden_spoon_2000)
##############################
From agent.py
walk_executor(food_lemon_2100)
Robot find: Robot is close to the cup_2132. Robot is close to the cutting_board_2123. Robot is close to the food_lemon_2100. 
##############################
From agent.py
walk_executor(bowl_2140)
Robot find: Robot is close to the cup_2132. Robot is close to the bowl_2140. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(wooden_spoon_2000, bowl_2140)
Fail to find wooden_spoon_2000 around bowl_2140. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_lemon_2100)walk_executor(table_270)exp(wooden_spoon_2000, table_270)walk_executor(wooden_spoon_2000)grab_executor(wooden_spoon_2000)
##############################
From agent.py
walk_executor(food_lemon_2100)
Robot find: Robot is close to the cup_2132. Robot is close to the cutting_board_2123. Robot is close to the food_lemon_2100. 
##############################
From agent.py
walk_executor(table_270)
Robot find: shoes_2033, shampoo_2019, pillow_286, pencil_2014, phone_2017, pillow_287, drawing_288, brush_2002, Robot is close to the cup_2132. Robot is close to the couch_269. Robot is close to the table_270. 
##############################
From agent.py
exp(wooden_spoon_2000, table_270)
Fail to find wooden_spoon_2000 around table_270. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_lemon_2100)walk_executor(bookshelf_275)exp(wooden_spoon_2000, bookshelf_275)walk_executor(wooden_spoon_2000)grab_executor(wooden_spoon_2000)
##############################
From agent.py
walk_executor(food_lemon_2100)
Robot find: Robot is close to the cup_2132. Robot is close to the cutting_board_2123. Robot is close to the food_lemon_2100. 
##############################
From agent.py
walk_executor(bookshelf_275)
Robot find: pencil_2020, Robot is close to the cup_2132. Robot is close to the bookshelf_275. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find wooden_spoon_2000 ?
Answer: The wooden_spoon_2000 is located inside bedroom_162. It is sitting on top of table_199. Go to bedroom_162 and locate table_199, which is in close proximity to the wooden_spoon_2000. Retrieve the wooden_spoon_2000 from the surface of table_199.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_41. Inside the room, locate table_114. cup_2132 is on table_114. Look for the item on the tabletop.
The wooden_spoon_2000 is located inside bedroom_162. It is sitting on top of table_199. Go to bedroom_162 and locate table_199, which is in close proximity to the wooden_spoon_2000. Retrieve the wooden_spoon_2000 from the surface of table_199.

The actions you have taken:
Action 1: Walk to kitchen_counter_123.
Action 2: look for food_lemon_2100 around kitchen_counter_123.
Action 3: Walk to fridge_126.
Action 4: Switch off fridge_126.
Action 5: Open fridge_126.
Action 6: look for food_lemon_2100 around fridge_126.
Action 7: Observe around food_lemon_2100 with the question of look around this place.
Action 8: Observe around food_sugar_2111 with the question of look around this place.
Action 9: Walk to kitchen_counter_122.
Action 10: look for cup_2132 around kitchen_counter_122.
Action 11: Walk to cupboard_117.
Action 12: look for cup_2132 around cupboard_117.
Action 13: Walk to cupboard_118.
Action 14: Open cupboard_118.
Action 15: look for cup_2132 around cupboard_118.
Action 16: Walk to kitchen_counter_119.
Action 17: look for cup_2132 around kitchen_counter_119.
Action 18: Walk to bench_113.
Action 19: look for cup_2132 around bench_113.
Action 20: Walk to table_114.
Action 21: look for cup_2132 around table_114.
Action 22: Walk to cup_2132.
Action 23: Observe around cup_2132 with the question of look around this place.
Action 24: Walk to food_lemon_2100.
Action 25: Grab food_lemon_2100.
Action 26: Walk to cutting_board_2123.
Action 27: Put food_lemon_2100 on cutting_board_2123.
Action 28: Walk to knife_2122.
Action 29: Grab knife_2122.
Action 30: Walk to food_lemon_2100.
Action 31: Cut food_lemon_2100.
Action 32: Walk to cup_2132.
Action 33: Grab cup_2132.
Action 34: Walk to faucet_121.
Action 35: Walk to kitchen_counter_119.
Action 36: Put knife_2122 on kitchen_counter_119.
Action 37: Switch on faucet_121.
Action 38: Switch off faucet_121.
Action 39: Walk to food_sugar_2111.
Action 40: Grab food_sugar_2111.
Action 41: Walk to cup_2132.
Action 42: Put food_sugar_2111 into cup_2132.
Action 43: Walk to cutting_board_2123.
Action 44: look for wooden_spoon_2000 around cutting_board_2123.
Action 45: Walk to food_lemon_2100.
Action 46: Walk to knifeblock_76.
Action 47: look for wooden_spoon_2000 around knifeblock_76.
Action 48: Walk to food_lemon_2100.
Action 49: Walk to bowl_2140.
Action 50: look for wooden_spoon_2000 around bowl_2140.
Action 51: Walk to food_lemon_2100.
Action 52: Walk to table_270.
Action 53: look for wooden_spoon_2000 around table_270.
Action 54: Walk to food_lemon_2100.
Action 55: Walk to bookshelf_275.

##############################
From agent.py
exp(wooden_spoon_2000, bookshelf_275)
Fail to find wooden_spoon_2000 around bookshelf_275. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_lemon_2100)walk_executor(table_199)exp(wooden_spoon_2000, table_199)walk_executor(wooden_spoon_2000)grab_executor(wooden_spoon_2000)
##############################
From agent.py
walk_executor(food_lemon_2100)
Robot find: Robot is close to the cup_2132. Robot is close to the cutting_board_2123. Robot is close to the food_lemon_2100. 
##############################
From agent.py
walk_executor(table_199)
Robot find: wooden_spoon_2000, mat_203, tea_bag_2023, drawing_201, drawing_202, Robot is close to the cup_2132. Robot is close to the table_199. 
##############################
From agent.py
exp(wooden_spoon_2000, table_199)
Find wooden_spoon_2000. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_lemon_2100)walk_executor(wooden_spoon_2000)grab_executor(wooden_spoon_2000)
##############################
From agent.py
walk_executor(food_lemon_2100)
Robot find: Robot is close to the cup_2132. Robot is close to the cutting_board_2123. Robot is close to the food_lemon_2100. 
##############################
From agent.py
walk_executor(wooden_spoon_2000)
Robot find: Robot is close to the cup_2132. Robot is close to the wooden_spoon_2000. Robot is close to the table_199. 
##############################
From agent.py
grab_executor(wooden_spoon_2000)
Robot find: Robot is close to the cup_2132. Robot is close to the wooden_spoon_2000. Robot is close to the table_199. Grabbing wooden_spoon_2000 by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to squeeze the lemon into the cup and stir the contents. So far, you have cut the lemon, filled the cup with water, added sugar, and acquired the wooden spoon.
##############################
From agent.py
Human Instruction: You need to squeeze the lemon into the cup and stir the contents. So far, you have cut the lemon, filled the cup with water, added sugar, and acquired the wooden spoon.

The actions you have taken:
Action 1: Walk to kitchen_counter_123.
Action 2: look for food_lemon_2100 around kitchen_counter_123.
Action 3: Walk to fridge_126.
Action 4: Switch off fridge_126.
Action 5: Open fridge_126.
Action 6: look for food_lemon_2100 around fridge_126.
Action 7: Observe around food_lemon_2100 with the question of look around this place.
Action 8: Observe around food_sugar_2111 with the question of look around this place.
Action 9: Walk to kitchen_counter_122.
Action 10: look for cup_2132 around kitchen_counter_122.
Action 11: Walk to cupboard_117.
Action 12: look for cup_2132 around cupboard_117.
Action 13: Walk to cupboard_118.
Action 14: Open cupboard_118.
Action 15: look for cup_2132 around cupboard_118.
Action 16: Walk to kitchen_counter_119.
Action 17: look for cup_2132 around kitchen_counter_119.
Action 18: Walk to bench_113.
Action 19: look for cup_2132 around bench_113.
Action 20: Walk to table_114.
Action 21: look for cup_2132 around table_114.
Action 22: Walk to cup_2132.
Action 23: Observe around cup_2132 with the question of look around this place.
Action 24: Walk to food_lemon_2100.
Action 25: Grab food_lemon_2100.
Action 26: Walk to cutting_board_2123.
Action 27: Put food_lemon_2100 on cutting_board_2123.
Action 28: Walk to knife_2122.
Action 29: Grab knife_2122.
Action 30: Walk to food_lemon_2100.
Action 31: Cut food_lemon_2100.
Action 32: Walk to cup_2132.
Action 33: Grab cup_2132.
Action 34: Walk to faucet_121.
Action 35: Walk to kitchen_counter_119.
Action 36: Put knife_2122 on kitchen_counter_119.
Action 37: Switch on faucet_121.
Action 38: Switch off faucet_121.
Action 39: Walk to food_sugar_2111.
Action 40: Grab food_sugar_2111.
Action 41: Walk to cup_2132.
Action 42: Put food_sugar_2111 into cup_2132.
Action 43: Walk to cutting_board_2123.
Action 44: look for wooden_spoon_2000 around cutting_board_2123.
Action 45: Walk to food_lemon_2100.
Action 46: Walk to knifeblock_76.
Action 47: look for wooden_spoon_2000 around knifeblock_76.
Action 48: Walk to food_lemon_2100.
Action 49: Walk to bowl_2140.
Action 50: look for wooden_spoon_2000 around bowl_2140.
Action 51: Walk to food_lemon_2100.
Action 52: Walk to table_270.
Action 53: look for wooden_spoon_2000 around table_270.
Action 54: Walk to food_lemon_2100.
Action 55: Walk to bookshelf_275.
Action 56: look for wooden_spoon_2000 around bookshelf_275.
Action 57: Walk to food_lemon_2100.
Action 58: Walk to table_199.
Action 59: look for wooden_spoon_2000 around table_199.
Action 60: Walk to food_lemon_2100.
Action 61: Walk to wooden_spoon_2000.
Action 62: Grab wooden_spoon_2000.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2120_around_box_2038(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind box_instance:item where:
            is_box(box_instance) and id[box_instance]==2038
        achieve close_char(char,box_instance)
        if can_open(box_instance):
            achieve_once open(box_instance)
            exp(clothes_scarf,box_instance)
        else:
            exp(clothes_scarf,box_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,box_instance]=True
        close[box_instance,clothes_scarf]=True
    

behavior find_coffee_filter_2053_around_coffe_maker_130(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind coffe_maker_instance:item where:
            is_coffe_maker(coffe_maker_instance) and id[coffe_maker_instance]==130
        achieve close_char(char,coffe_maker_instance)
        if can_open(coffe_maker_instance):
            achieve_once open(coffe_maker_instance)
            exp(coffee_filter,coffe_maker_instance)
        else:
            exp(coffee_filter,coffe_maker_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,coffe_maker_instance]=True
        close[coffe_maker_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
behavior squeeze_lemon(lemon:item, cup:item):
    body:
        achieve_once cut(lemon)
        achieve_once close_char(char, cup)
        squeeze(lemon) # Squeeze the lemon into the cup

behavior stir_contents(cup:item, spoon:item):
    body:
        achieve_once close_char(char, cup)
        achieve_once inhand(spoon)
        # Stir the contents in the cup with the wooden spoon

behavior __goal__():
    body:
        bind lemon: item where:
            is_food_lemon(lemon) and cut(lemon)
        # Bind the lemon item that has been cut

        bind cup: item where:
            is_cup(cup) and has_water(cup)
        # Bind a cup item that has water inside

        bind spoon: item where:
            is_wooden_spoon(spoon)
        # Bind the wooden spoon to be used for stirring

        squeeze_lemon(lemon, cup)
        stir_contents(cup, spoon)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior squeeze_lemon(lemon:item, cup:item):
    body:
        achieve_once cut(lemon)
        achieve_once close_char(char, cup)
        squeeze(lemon) # Squeeze the lemon into the cup

behavior stir_contents(cup:item, spoon:item):
    body:
        achieve_once close_char(char, cup)
        achieve_once inhand(spoon)
        # Stir the contents in the cup with the wooden spoon

behavior __goal__():
    body:
        bind lemon: item where:
            is_food_lemon(lemon) and cut(lemon)
        # Bind the lemon item that has been cut

        bind cup: item where:
            is_cup(cup) and has_water(cup)
        # Bind a cup item that has water inside

        bind spoon: item where:
            is_wooden_spoon(spoon)
        # Bind the wooden spoon to be used for stirring

        squeeze_lemon(lemon, cup)
        stir_contents(cup, spoon)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)put_executor(cup_2132, kitchen_counter_119)walk_executor(food_lemon_2100)walk_executor(cup_2132)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: Robot is close to the cup_2132. Robot is close to the wooden_spoon_2000. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(cup_2132, kitchen_counter_119)
Robot find: Robot is close to the cup_2132. Robot is close to the wooden_spoon_2000. Robot is close to the kitchen_counter_119. kitchen_counter_119 is close cup_2132. cup_2132 is close kitchen_counter_119. cup_2132 is on kitchen_counter_119. cup_2132 released by left hand. 
##############################
From agent.py
walk_executor(food_lemon_2100)
Robot find: Robot is close to the wooden_spoon_2000. Robot is close to the cutting_board_2123. Robot is close to the food_lemon_2100. 
##############################
From agent.py
walk_executor(cup_2132)
Robot find: Robot is close to the wooden_spoon_2000. Robot is close to the cup_2132. Robot is close to the kitchen_counter_119. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to squeeze the lemon into the cup, and then stir the contents using the wooden spoon.
##############################
From agent.py
Human Instruction: You need to squeeze the lemon into the cup, and then stir the contents using the wooden spoon.

The actions you have taken:
Action 1: Walk to kitchen_counter_123.
Action 2: look for food_lemon_2100 around kitchen_counter_123.
Action 3: Walk to fridge_126.
Action 4: Switch off fridge_126.
Action 5: Open fridge_126.
Action 6: look for food_lemon_2100 around fridge_126.
Action 7: Observe around food_lemon_2100 with the question of look around this place.
Action 8: Observe around food_sugar_2111 with the question of look around this place.
Action 9: Walk to kitchen_counter_122.
Action 10: look for cup_2132 around kitchen_counter_122.
Action 11: Walk to cupboard_117.
Action 12: look for cup_2132 around cupboard_117.
Action 13: Walk to cupboard_118.
Action 14: Open cupboard_118.
Action 15: look for cup_2132 around cupboard_118.
Action 16: Walk to kitchen_counter_119.
Action 17: look for cup_2132 around kitchen_counter_119.
Action 18: Walk to bench_113.
Action 19: look for cup_2132 around bench_113.
Action 20: Walk to table_114.
Action 21: look for cup_2132 around table_114.
Action 22: Walk to cup_2132.
Action 23: Observe around cup_2132 with the question of look around this place.
Action 24: Walk to food_lemon_2100.
Action 25: Grab food_lemon_2100.
Action 26: Walk to cutting_board_2123.
Action 27: Put food_lemon_2100 on cutting_board_2123.
Action 28: Walk to knife_2122.
Action 29: Grab knife_2122.
Action 30: Walk to food_lemon_2100.
Action 31: Cut food_lemon_2100.
Action 32: Walk to cup_2132.
Action 33: Grab cup_2132.
Action 34: Walk to faucet_121.
Action 35: Walk to kitchen_counter_119.
Action 36: Put knife_2122 on kitchen_counter_119.
Action 37: Switch on faucet_121.
Action 38: Switch off faucet_121.
Action 39: Walk to food_sugar_2111.
Action 40: Grab food_sugar_2111.
Action 41: Walk to cup_2132.
Action 42: Put food_sugar_2111 into cup_2132.
Action 43: Walk to cutting_board_2123.
Action 44: look for wooden_spoon_2000 around cutting_board_2123.
Action 45: Walk to food_lemon_2100.
Action 46: Walk to knifeblock_76.
Action 47: look for wooden_spoon_2000 around knifeblock_76.
Action 48: Walk to food_lemon_2100.
Action 49: Walk to bowl_2140.
Action 50: look for wooden_spoon_2000 around bowl_2140.
Action 51: Walk to food_lemon_2100.
Action 52: Walk to table_270.
Action 53: look for wooden_spoon_2000 around table_270.
Action 54: Walk to food_lemon_2100.
Action 55: Walk to bookshelf_275.
Action 56: look for wooden_spoon_2000 around bookshelf_275.
Action 57: Walk to food_lemon_2100.
Action 58: Walk to table_199.
Action 59: look for wooden_spoon_2000 around table_199.
Action 60: Walk to food_lemon_2100.
Action 61: Walk to wooden_spoon_2000.
Action 62: Grab wooden_spoon_2000.
Action 63: Walk to kitchen_counter_119.
Action 64: Put cup_2132 on kitchen_counter_119.
Action 65: Walk to food_lemon_2100.
Action 66: Walk to cup_2132.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2136_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_measuring_cup_2012_around_coffe_maker_130(measuring_cup:item):
    goal: not unknown(measuring_cup)
    body:
        assert is_measuring_cup(measuring_cup)
        bind coffe_maker_instance:item where:
            is_coffe_maker(coffe_maker_instance) and id[coffe_maker_instance]==130
        achieve close_char(char,coffe_maker_instance)
        if can_open(coffe_maker_instance):
            achieve_once open(coffe_maker_instance)
            exp(measuring_cup,coffe_maker_instance)
        else:
            exp(measuring_cup,coffe_maker_instance)
    eff:
        unknown[measuring_cup]=False
        close[measuring_cup,coffe_maker_instance]=True
        close[coffe_maker_instance,measuring_cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior squeeze_lemon_into_cup(lemon: item, cup: item):
    body:
        achieve_once cut(lemon)  # Lemon must be cut to be squeezed
        achieve_once close_char(char, lemon)  # Be close to the lemon to squeeze it properly
        achieve_once close_char(char, cup)  # Make sure the cup is close to catch the lemon juice
        squeeze(lemon)  # Squeeze the lemon to extract juice into the cup

behavior add_water_and_sugar(cup: item, water_source: item, sugar: item):
    body:
        achieve_once has_water(cup)  # Add water to the cup
        achieve_once inside(sugar, cup)  # Add sugar into the cup

behavior stir_contents(cup: item, spoon: item):
    body:
        achieve_once close_char(char, spoon)  # Be near the wooden spoon to stir the contents
        achieve_once close_char(char, cup)  # Ensure proximity to the cup for stirring action
        achieve_once inhand(spoon)  # Take the wooden spoon to stir the mixture in the cup

behavior __goal__():
    body:
        bind lemon: item where:
            is_food_lemon(lemon) and cut(lemon)
        # The lemon has been found and assumed to be cut already, per previous tasks

        bind cup: item where:
            is_cup(cup)
        # The cup has been found

        bind sugar: item where:
            is_food_sugar(sugar)
        # The sugar has been found

        bind water_source: item where:
            is_faucet(water_source) and is_on(water_source)
        # Assume the faucet can be used as a water source

        bind spoon: item where:
            is_wooden_spoon(spoon)
        # The wooden spoon has been found

        squeeze_lemon_into_cup(lemon, cup)
        add_water_and_sugar(cup, water_source, sugar)
        stir_contents(cup, spoon)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_coffee_filter_2065_around_coffe_maker_130(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind coffe_maker_instance:item where:
            is_coffe_maker(coffe_maker_instance) and id[coffe_maker_instance]==130
        achieve close_char(char,coffe_maker_instance)
        if can_open(coffe_maker_instance):
            achieve_once open(coffe_maker_instance)
            exp(coffee_filter,coffe_maker_instance)
        else:
            exp(coffee_filter,coffe_maker_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,coffe_maker_instance]=True
        close[coffe_maker_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
behavior squeeze_lemon_into_cup(lemon:item, cup:item):
    body:
        achieve cut(lemon)
        achieve_once on(lemon, cup)
        # Squeeze the lemon into the cup

behavior add_water_to_cup(cup:item):
    body:
        achieve has_water(cup)
        # Add water to the cup

behavior add_sugar_to_cup(cup:item, sugar:item):
    body:
        achieve_once on(sugar, cup)
        # Add sugar to the cup

behavior stir_contents_with_spoon(cup:item, spoon:item):
    body:
        achieve_once inhand(spoon)
        achieve_once on(spoon, cup)
        # Stir the contents of the cup

behavior __goal__():
    body:
        bind lemon: item where:
            is_food_lemon(lemon)
        bind cup: item where:
            is_cup(cup)
        bind sugar: item where:
            is_food_sugar(sugar)
        bind spoon: item where:
            is_wooden_spoon(spoon)
        
        squeeze_lemon_into_cup(lemon, cup)
        add_water_to_cup(cup)
        add_sugar_to_cup(cup, sugar)
        stir_contents_with_spoon(cup, spoon)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior squeeze_lemon_into_cup(lemon:item, cup:item):
    body:
        achieve cut(lemon)
        achieve_once on(lemon, cup)
        # Squeeze the lemon into the cup

behavior add_water_to_cup(cup:item):
    body:
        achieve has_water(cup)
        # Add water to the cup

behavior add_sugar_to_cup(cup:item, sugar:item):
    body:
        achieve_once on(sugar, cup)
        # Add sugar to the cup

behavior stir_contents_with_spoon(cup:item, spoon:item):
    body:
        achieve_once inhand(spoon)
        achieve_once on(spoon, cup)
        # Stir the contents of the cup

behavior __goal__():
    body:
        bind lemon: item where:
            is_food_lemon(lemon)
        bind cup: item where:
            is_cup(cup)
        bind sugar: item where:
            is_food_sugar(sugar)
        bind spoon: item where:
            is_wooden_spoon(spoon)
        
        squeeze_lemon_into_cup(lemon, cup)
        add_water_to_cup(cup)
        add_sugar_to_cup(cup, sugar)
        stir_contents_with_spoon(cup, spoon)

##############################
From agent.py-> find a plan in act()
walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(cup_2132)put_executor(food_lemon_2100, cup_2132)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)put_executor(food_sugar_2111, cup_2132)put_executor(wooden_spoon_2000, cup_2132)
##############################
From agent.py
walk_executor(food_lemon_2100)
Robot find: Robot is close to the wooden_spoon_2000. Robot is close to the cutting_board_2123. Robot is close to the food_lemon_2100. 
##############################
From agent.py
grab_executor(food_lemon_2100)
Robot find: Robot is close to the wooden_spoon_2000. Robot is close to the cutting_board_2123. Robot is close to the food_lemon_2100. Grabbing food_lemon_2100 by left hand. 
##############################
From agent.py
walk_executor(cup_2132)
Robot find: Robot is close to the wooden_spoon_2000. Robot is close to the food_lemon_2100. Robot is close to the cup_2132. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_lemon_2100, cup_2132)
Robot find: Robot is close to the wooden_spoon_2000. Robot is close to the food_lemon_2100. Robot is close to the cup_2132. Robot is close to the kitchen_counter_119. cup_2132 is close food_lemon_2100. food_lemon_2100 is close cup_2132. food_lemon_2100 is on cup_2132. food_lemon_2100 released by left hand. 
##############################
From agent.py
walk_executor(food_sugar_2111)
Robot find: Robot is close to the wooden_spoon_2000. Robot is close to the cup_2132. Robot is close to the food_sugar_2111. 
##############################
From agent.py
grab_executor(food_sugar_2111)
Robot find: Robot is close to the wooden_spoon_2000. Robot is close to the cup_2132. Robot is close to the food_sugar_2111. Grabbing food_sugar_2111 by left hand. 
##############################
From agent.py
put_executor(food_sugar_2111, cup_2132)
Robot find: Robot is close to the wooden_spoon_2000. Robot is close to the cup_2132. Robot is close to the food_sugar_2111. cup_2132 is close food_sugar_2111. food_sugar_2111 is close cup_2132. food_sugar_2111 is on cup_2132. food_sugar_2111 released by left hand. 
##############################
From agent.py
put_executor(wooden_spoon_2000, cup_2132)
Robot find: Robot is close to the wooden_spoon_2000. Robot is close to the cup_2132. Robot is close to the food_sugar_2111. wooden_spoon_2000 is on cup_2132. cup_2132 is close wooden_spoon_2000. wooden_spoon_2000 is close cup_2132. wooden_spoon_2000 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to complete the sub-task by stirring the contents of the cup with the wooden spoon. Currently, the spoon has been placed on top of the cup, but the action of stirring has not been accomplished.
##############################
Task Summary:
Task Goal:
Make a cup of lemon water with additional sugar.
Action History:
['walk_executor(kitchen_counter_123)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'walk_executor(kitchen_counter_122)', 'walk_executor(cupboard_117)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'walk_executor(kitchen_counter_119)', 'walk_executor(bench_113)', 'walk_executor(table_114)', 'walk_executor(cup_2132)', 'walk_executor(food_lemon_2100)', 'grab_executor(food_lemon_2100)', 'walk_executor(cutting_board_2123)', 'put_executor(food_lemon_2100, cutting_board_2123)', 'walk_executor(knife_2122)', 'grab_executor(knife_2122)', 'walk_executor(food_lemon_2100)', 'cut_executor(food_lemon_2100)', 'walk_executor(cup_2132)', 'grab_executor(cup_2132)', 'walk_executor(faucet_121)', 'walk_executor(kitchen_counter_119)', 'put_executor(knife_2122, kitchen_counter_119)', 'switchon_executor(faucet_121)', 'switchoff_executor(faucet_121)', 'walk_executor(food_sugar_2111)', 'grab_executor(food_sugar_2111)', 'walk_executor(cup_2132)', 'putin_executor(food_sugar_2111, cup_2132)', 'walk_executor(cutting_board_2123)', 'walk_executor(food_lemon_2100)', 'walk_executor(knifeblock_76)', 'walk_executor(food_lemon_2100)', 'walk_executor(bowl_2140)', 'walk_executor(food_lemon_2100)', 'walk_executor(table_270)', 'walk_executor(food_lemon_2100)', 'walk_executor(bookshelf_275)', 'walk_executor(food_lemon_2100)', 'walk_executor(table_199)', 'walk_executor(food_lemon_2100)', 'walk_executor(wooden_spoon_2000)', 'grab_executor(wooden_spoon_2000)', 'walk_executor(kitchen_counter_119)', 'put_executor(cup_2132, kitchen_counter_119)', 'walk_executor(food_lemon_2100)', 'walk_executor(cup_2132)', 'walk_executor(food_lemon_2100)', 'grab_executor(food_lemon_2100)', 'walk_executor(cup_2132)', 'put_executor(food_lemon_2100, cup_2132)', 'walk_executor(food_sugar_2111)', 'grab_executor(food_sugar_2111)', 'put_executor(food_sugar_2111, cup_2132)', 'put_executor(wooden_spoon_2000, cup_2132)']
Time info:
Time consume: 567 seconds
Exp_helper query times: 2
Guidance query times: 0
library scale: 6
goal generate times: 6
goal correct times: 1
action_num: 57

Task complete rate:
Keystate: k1 - Requires: 6 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
