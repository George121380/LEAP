From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the jacket.', '2. Wash the jacket using the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_bathroom_counter_41(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(detergent,bathroom_counter_instance)
        else:
            exp(detergent,bathroom_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_counter_instance]=True
        close[bathroom_counter_instance,detergent]=True
    

behavior find_clothes_jacket_2047_around_closetdrawer_388(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==388
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

behavior find_soap_2053_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

#exp_behavior_end

#goal_representation
behavior hand_wash_jacket(jacket: item):
    body:
        achieve_once inhand(jacket)
        # Temporarily hold the jacket in hand
        achieve dirty(jacket)
        # Begin with the jacket in a dirty state
        achieve has_water(jacket)
        # Ensure the jacket is wet during the washing process
        achieve clean(jacket)
        # Conclude with the jacket in a clean state

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Identify a jacket to wash
        hand_wash_jacket(jacket)
#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2073_around_bathroom_counter_41(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(cleaning_solution,bathroom_counter_instance)
        else:
            exp(cleaning_solution,bathroom_counter_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_counter_instance]=True
        close[bathroom_counter_instance,cleaning_solution]=True
    

behavior find_clothes_jacket_2047_around_closetdrawer_388(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==388
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

behavior find_soap_2054_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
bind jacket: item where:
    is_clothes_jacket(jacket)

behavior hand_wash(jacket:item):
    body:
        achieve_once dirty(jacket) # Ensure the jacket is dirty before washing
        achieve has_water(jacket) # Ensure the jacket is wet
        achieve clean(jacket) # Hand wash the jacket to make it clean

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        hand_wash(jacket)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('BIND', 'bind') at line 5686, column 1.
Expected one of: 
	* $END
	* INIT
	* INCLUDE
	* FEATURE
	* TYPEDEF
	* CONTROLLER
	* GOAL
	* DOMAIN
	* DEF
	* _NEWLINE
	* GENERATOR
	* _PRAGMA_KEYWORD
	* BEHAVIOR
	* IMPORT
	* UNDIRECTED_GENERATOR
	* OBJECTS
Previous tokens: [Token('_NEWLINE', '\n    \n\n#exp_behavior_end\n\n#goal_representation\n \n')]

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_detergent_2084_around_bathroom_counter_41(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(detergent,bathroom_counter_instance)
        else:
            exp(detergent,bathroom_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_counter_instance]=True
        close[bathroom_counter_instance,detergent]=True
    

behavior find_clothes_jacket_2047_around_closetdrawer_388(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==388
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

behavior find_soap_2054_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

#goal_representation

behavior hand_wash(jacket:item):
    body:
        achieve_once dirty(jacket) # Ensure the jacket is dirty before washing
        achieve has_water(jacket) # Ensure the jacket is wet
        achieve clean(jacket) # Hand wash the jacket to make it clean

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        hand_wash(jacket)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_bathroom_counter_41(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(detergent,bathroom_counter_instance)
        else:
            exp(detergent,bathroom_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_counter_instance]=True
        close[bathroom_counter_instance,detergent]=True
    

behavior find_clothes_jacket_2047_around_closetdrawer_388(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==388
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

behavior find_soap_2054_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

#exp_behavior_end

#goal_representation

behavior hand_wash_jacket(jacket: item):
    body:
        achieve_once clean(jacket)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket to be hand washed
        hand_wash_jacket(jacket)

#goal_representation_end

##############################
From agent.py->reset_goal

behavior hand_wash_jacket(jacket: item):
    body:
        achieve_once clean(jacket)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket to be hand washed
        hand_wash_jacket(jacket)

##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_388)exp(clothes_jacket_2047, closetdrawer_388)walk_executor(clothes_jacket_2047)grab_executor(clothes_jacket_2047)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_jacket_2047)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_388)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(clothes_jacket_2047, closetdrawer_388)
Fail to find clothes_jacket_2047 around closetdrawer_388. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_388)exp(clothes_jacket_2047, closetdrawer_388)walk_executor(clothes_jacket_2047)grab_executor(clothes_jacket_2047)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_jacket_2047)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_388)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(clothes_jacket_2047, closetdrawer_388)
Fail to find clothes_jacket_2047 around closetdrawer_388. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_388)exp(clothes_jacket_2047, closetdrawer_388)walk_executor(clothes_jacket_2047)grab_executor(clothes_jacket_2047)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_jacket_2047)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_388)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(clothes_jacket_2047, closetdrawer_388)
Fail to find clothes_jacket_2047 around closetdrawer_388. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_388)exp(clothes_jacket_2047, closetdrawer_388)walk_executor(clothes_jacket_2047)grab_executor(clothes_jacket_2047)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_jacket_2047)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_388)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(clothes_jacket_2047, closetdrawer_388)
Fail to find clothes_jacket_2047 around closetdrawer_388. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)exp(clothes_jacket_2047, basket_for_clothes_2006)walk_executor(clothes_jacket_2047)grab_executor(clothes_jacket_2047)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_jacket_2047)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Robot find: clothes_pants_2085, clothes_shirt_2086, clothes_socks_2087, clothes_skirt_2088, towel_rack_31, towel_rack_33, towel_rack_32, towel_rack_34, mat_22, Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
exp(clothes_jacket_2047, basket_for_clothes_2006)
Fail to find clothes_jacket_2047 around basket_for_clothes_2006. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_388)exp(clothes_jacket_2047, closetdrawer_388)walk_executor(clothes_jacket_2047)grab_executor(clothes_jacket_2047)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_jacket_2047)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_388)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_jacket_2047 ?
Answer: Robot, locate the target item "clothes_jacket_2047" in the home office area, specifically inside "home_office_319." You will find it on "couch_352," where it is resting. Look for the couch, which is a key piece of furniture nearby, to identify and retrieve the jacket.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, locate the target item "clothes_jacket_2047" in the home office area, specifically inside "home_office_319." You will find it on "couch_352," where it is resting. Look for the couch, which is a key piece of furniture nearby, to identify and retrieve the jacket.

The actions you have taken:
Action 1: Walk to closetdrawer_388.
Action 2: look for clothes_jacket_2047 around closetdrawer_388.
Action 3: Walk to closetdrawer_388.
Action 4: look for clothes_jacket_2047 around closetdrawer_388.
Action 5: Walk to closetdrawer_388.
Action 6: look for clothes_jacket_2047 around closetdrawer_388.
Action 7: Walk to closetdrawer_388.
Action 8: look for clothes_jacket_2047 around closetdrawer_388.
Action 9: Walk to basket_for_clothes_2006.
Action 10: look for clothes_jacket_2047 around basket_for_clothes_2006.
Action 11: Walk to closetdrawer_388.

##############################
From agent.py
exp(clothes_jacket_2047, closetdrawer_388)
Fail to find clothes_jacket_2047 around closetdrawer_388. 
##############################
From agent.py-> find a plan in act()
walk_executor(couch_352)exp(clothes_jacket_2047, couch_352)walk_executor(clothes_jacket_2047)grab_executor(clothes_jacket_2047)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_jacket_2047)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(couch_352)
Robot find: mat_401, remote_control_2052, clothes_jacket_2047, pillow_405, cat_2055, drawing_400, pillow_406, hairbrush_2002, vacuum_cleaner_2070, Robot is close to the couch_352. Robot is close to the mat_401. 
##############################
From agent.py
exp(clothes_jacket_2047, couch_352)
Find clothes_jacket_2047. 
##############################
From agent.py-> find a plan in act()
walk_executor(clothes_jacket_2047)grab_executor(clothes_jacket_2047)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_jacket_2047)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(clothes_jacket_2047)
Robot find: Robot is close to the couch_352. Robot is close to the clothes_jacket_2047. 
##############################
From agent.py
grab_executor(clothes_jacket_2047)
Robot find: Robot is close to the couch_352. Robot is close to the clothes_jacket_2047. Grabbing clothes_jacket_2047 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the clothes_jacket_2047. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the clothes_jacket_2047. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
wash_executor(clothes_jacket_2047)
Robot find: Robot is close to the clothes_jacket_2047. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. clothes_jacket_2047 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the clothes_jacket_2047. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_cleaning_solution_2073_around_washing_machine_2007(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(cleaning_solution,washing_machine_instance)
        else:
            exp(cleaning_solution,washing_machine_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,washing_machine_instance]=True
        close[washing_machine_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_washing_machine(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)
        # Place the jacket inside the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve_once closed(washing_machine) # Ensure the washing machine door is closed
        achieve_once is_on(washing_machine)  # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket which is indicated as clothes_jacket
        
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Identify the washing machine
        
        load_washing_machine(jacket, washing_machine)
        # Load the jacket into the washing machine
        
        start_washing_machine(washing_machine)
        # Start the washing machine to wash the jacket

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_washing_machine(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)
        # Place the jacket inside the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve_once closed(washing_machine) # Ensure the washing machine door is closed
        achieve_once is_on(washing_machine)  # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket which is indicated as clothes_jacket
        
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Identify the washing machine
        
        load_washing_machine(jacket, washing_machine)
        # Load the jacket into the washing machine
        
        start_washing_machine(washing_machine)
        # Start the washing machine to wash the jacket

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2007)open_executor(washing_machine_2007)putin_executor(clothes_jacket_2047, washing_machine_2007)close_executor(washing_machine_2007)plugin_executor(washing_machine_2007)switchon_executor(washing_machine_2007)
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_jacket_2047. Robot is close to the washing_machine_2007. 
##############################
From agent.py
open_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_jacket_2047. Robot is close to the washing_machine_2007. washing_machine_2007 is opened. 
##############################
From agent.py
putin_executor(clothes_jacket_2047, washing_machine_2007)
Robot find: Robot is close to the clothes_jacket_2047. Robot is close to the washing_machine_2007. clothes_jacket_2047 is close washing_machine_2007. clothes_jacket_2047 is inside washing_machine_2007. washing_machine_2007 is close clothes_jacket_2047. clothes_jacket_2047 released by right hand. 
##############################
From agent.py
close_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is closed. 
##############################
From agent.py
plugin_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is plugged in. 
##############################
From agent.py
switchon_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Hand wash the jacket, then wash it by washing machine.
Action History:
['walk_executor(closetdrawer_388)', 'walk_executor(closetdrawer_388)', 'walk_executor(closetdrawer_388)', 'walk_executor(closetdrawer_388)', 'walk_executor(basket_for_clothes_2006)', 'walk_executor(closetdrawer_388)', 'walk_executor(couch_352)', 'walk_executor(clothes_jacket_2047)', 'grab_executor(clothes_jacket_2047)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'wash_executor(clothes_jacket_2047)', 'switchoff_executor(faucet_43)', 'walk_executor(washing_machine_2007)', 'open_executor(washing_machine_2007)', 'putin_executor(clothes_jacket_2047, washing_machine_2007)', 'close_executor(washing_machine_2007)', 'plugin_executor(washing_machine_2007)', 'switchon_executor(washing_machine_2007)']
Time info:
Time consume: 205 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 31
goal generate times: 4
goal correct times: 0
action_num: 19

Task complete rate:
1
Scene_id: 0
##############################
