From agent.py
Reset goals: The sub-goals are: 
['1. Identify the bowls and plates that need to be washed.', '2. Load the identified bowls and plates into the dishwasher and start it.', '3. Find the forks that need to be washed.', '4. Wash the forks by hand.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_1000_around_sink_42(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==42
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(plate,sink_instance)
        else:
            exp(plate,sink_instance)
    eff:
        unknown[plate]=False
        close[plate,sink_instance]=True
        close[sink_instance,plate]=True
    

behavior find_bowl_2071_around_sink_42(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==42
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(bowl,sink_instance)
        else:
            exp(bowl,sink_instance)
    eff:
        unknown[bowl]=False
        close[bowl,sink_instance]=True
        close[sink_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
def has_bowls_or_plates_to_wash():
    # Function to check if there are bowls or plates that need washing
    symbol need_washing = exists o: item : ((is_bowl(o) or is_plate(o)) and dirty(o))
    return need_washing

behavior __goal__():
    body:
        if exists o: item : ((is_bowl(o) or is_plate(o)) and dirty(o)):
            # Check if there are any bowls or plates that need to be washed
            bind bowl_or_plate: item where:
                (is_bowl(bowl_or_plate) or is_plate(bowl_or_plate)) and dirty(bowl_or_plate)
            # Select a bowl or plate that needs washing
            achieve visited(bowl_or_plate)
            # Mark the bowl or plate as visited to inspect its condition
        
        else:
            # If no dirty bowls or plates are found, initiate exploration to locate some
            foreach o: item:
                if (is_bowl(o) or is_plate(o)) and not visited(o):
                    observe(o,"Check is this bowl or plate dirty")

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_bowls_or_plates_to_wash():
    # Function to check if there are bowls or plates that need washing
    symbol need_washing = exists o: item : ((is_bowl(o) or is_plate(o)) and dirty(o))
    return need_washing

behavior __goal__():
    body:
        if exists o: item : ((is_bowl(o) or is_plate(o)) and dirty(o)):
            # Check if there are any bowls or plates that need to be washed
            bind bowl_or_plate: item where:
                (is_bowl(bowl_or_plate) or is_plate(bowl_or_plate)) and dirty(bowl_or_plate)
            # Select a bowl or plate that needs washing
            achieve visited(bowl_or_plate)
            # Mark the bowl or plate as visited to inspect its condition
        
        else:
            # If no dirty bowls or plates are found, initiate exploration to locate some
            foreach o: item:
                if (is_bowl(o) or is_plate(o)) and not visited(o):
                    observe(o,"Check is this bowl or plate dirty")

##############################
From agent.py-> find a plan in act()
walk_executor(sink_42)exp(bowl_2071, sink_42)walk_executor(bowl_2071)obs(bowl_2071, Check is this bowl or plate dirty)walk_executor(sink_42)exp(bowl_2072, sink_42)walk_executor(bowl_2072)obs(bowl_2072, Check is this bowl or plate dirty)walk_executor(sink_42)exp(plate_1000, sink_42)walk_executor(plate_1000)obs(plate_1000, Check is this bowl or plate dirty)
##############################
From agent.py
walk_executor(sink_42)
Robot find: detergent_2084, cleaning_solution_2073, towel_rack_31, soap_2053, towel_rack_32, towel_rack_34, Robot is close to the bathroom_counter_41. Robot is close to the sink_42. 
##############################
From agent.py
exp(bowl_2071, sink_42)
Fail to find bowl_2071 around sink_42. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_1001)open_executor(dishwasher_1001)exp(bowl_2071, dishwasher_1001)walk_executor(bowl_2071)obs(bowl_2071, Check is this bowl or plate dirty)walk_executor(dishwasher_1001)exp(bowl_2072, dishwasher_1001)walk_executor(bowl_2072)obs(bowl_2072, Check is this bowl or plate dirty)walk_executor(dishwasher_1001)exp(plate_1000, dishwasher_1001)walk_executor(plate_1000)obs(plate_1000, Check is this bowl or plate dirty)
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. 
##############################
From agent.py
open_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is opened. 
##############################
From agent.py
exp(bowl_2071, dishwasher_1001)
Fail to find bowl_2071 around dishwasher_1001. 
##############################
From agent.py-> find a plan in act()
walk_executor(photoframe_185)exp(bowl_2071, photoframe_185)walk_executor(bowl_2071)obs(bowl_2071, Check is this bowl or plate dirty)walk_executor(photoframe_185)exp(bowl_2072, photoframe_185)walk_executor(bowl_2072)obs(bowl_2072, Check is this bowl or plate dirty)walk_executor(photoframe_185)exp(plate_1000, photoframe_185)walk_executor(plate_1000)obs(plate_1000, Check is this bowl or plate dirty)
##############################
From agent.py
walk_executor(photoframe_185)
Robot find: drawing_174, drawing_176, Robot is close to the bookshelf_101. 
##############################
From agent.py
exp(bowl_2071, photoframe_185)
Fail to find bowl_2071 around photoframe_185. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_231)exp(bowl_2071, sink_231)walk_executor(bowl_2071)obs(bowl_2071, Check is this bowl or plate dirty)walk_executor(sink_231)exp(bowl_2072, sink_231)walk_executor(bowl_2072)obs(bowl_2072, Check is this bowl or plate dirty)walk_executor(photoframe_185)exp(plate_1000, photoframe_185)walk_executor(plate_1000)obs(plate_1000, Check is this bowl or plate dirty)
##############################
From agent.py
walk_executor(sink_231)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, soap_2054, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, plate_1000, Robot is close to the kitchen_counter_230. Robot is close to the sink_231. 
##############################
From agent.py
exp(bowl_2071, sink_231)
Fail to find bowl_2071 around sink_231. 
##############################
From agent.py-> find a plan in act()
walk_executor(plate_1000)obs(plate_1000, look around this place)
##############################
From agent.py
walk_executor(plate_1000)
Robot find: Robot is close to the sink_231. Robot is close to the plate_1000. 
##############################
From agent.py
obs(plate_1000, look around this place)
Get this information:  plate_1000 is inside dining_room_201. plate_1000 is close to sink_231. plate_1000 is close to character_65. plate_1000 is on sink_231. plate_1000 is DIRTY.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2072_around_table_355(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==355
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(bowl,table_instance)
        else:
            exp(bowl,table_instance)
    eff:
        unknown[bowl]=False
        close[bowl,table_instance]=True
        close[table_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher
        foreach o: item:
        # Load all bowls and plates that have been identified into the dishwasher
            if is_bowl(o) or is_plate(o):
                load_dishwasher(o, dishwasher)
        start_dishwasher(dishwasher) # Start the dishwasher

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher
        foreach o: item:
        # Load all bowls and plates that have been identified into the dishwasher
            if is_bowl(o) or is_plate(o):
                load_dishwasher(o, dishwasher)
        start_dishwasher(dishwasher) # Start the dishwasher

##############################
From agent.py-> find a plan in act()
walk_executor(table_355)exp(bowl_2071, table_355)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(table_355)exp(bowl_2072, table_355)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(table_355)
Robot find: mat_401, headset_2062, spectacles_2082, pillow_406, remote_control_2052, clothes_jacket_2047, pillow_405, cat_2055, drawing_400, drawing_404, hairbrush_2002, vacuum_cleaner_2070, Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. 
##############################
From agent.py
exp(bowl_2071, table_355)
Fail to find bowl_2071 around table_355. 
##############################
From agent.py-> find a plan in act()
walk_executor(photoframe_285)exp(bowl_2071, photoframe_285)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(photoframe_285)exp(bowl_2072, photoframe_285)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(photoframe_285)
Robot find: cd_player_2060, cd_2075, Robot is close to the tvstand_225. Robot is close to the photoframe_285. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2071 ?
Answer: Find bowl_2071 on top of table_226 inside dining_room_201. Look for it specifically on the table, as the bowl and table are near each other.
Re-decompose: None

##############################
From agent.py
Human Instruction: Find bowl_2071 on top of table_226 inside dining_room_201. Look for it specifically on the table, as the bowl and table are near each other.

The actions you have taken:
Action 1: Walk to sink_42.
Action 2: look for bowl_2071 around sink_42.
Action 3: Walk to dishwasher_1001.
Action 4: Open dishwasher_1001.
Action 5: look for bowl_2071 around dishwasher_1001.
Action 6: Walk to photoframe_185.
Action 7: look for bowl_2071 around photoframe_185.
Action 8: Walk to sink_231.
Action 9: look for bowl_2071 around sink_231.
Action 10: Walk to plate_1000.
Action 11: Observe around plate_1000 with the question of look around this place.
Action 12: Walk to table_355.
Action 13: look for bowl_2071 around table_355.
Action 14: Walk to photoframe_285.

##############################
From agent.py
exp(bowl_2071, photoframe_285)
Fail to find bowl_2071 around photoframe_285. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_226)exp(bowl_2071, table_226)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(table_226)exp(bowl_2072, table_226)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(table_226)
Robot find: bowl_2071, coffee_filter_2000, drawing_2003, bowl_2072, mat_236, fork_2080, fork_2081, mat_237, Robot is close to the table_226. 
##############################
From agent.py
exp(bowl_2071, table_226)
Find bowl_2071. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(bowl_2071)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2071. 
##############################
From agent.py
grab_executor(bowl_2071)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2071. Grabbing bowl_2071 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the bowl_2071. Robot is close to the dishwasher_1001. 
##############################
From agent.py
putin_executor(bowl_2071, dishwasher_1001)
Robot find: Robot is close to the bowl_2071. Robot is close to the dishwasher_1001. bowl_2071 is close dishwasher_1001. bowl_2071 is inside dishwasher_1001. dishwasher_1001 is close bowl_2071. bowl_2071 released by right hand. 
##############################
From agent.py
walk_executor(bowl_2072)
Robot find: Robot is close to the bowl_2072. Robot is close to the table_226. 
##############################
From agent.py
grab_executor(bowl_2072)
Robot find: Robot is close to the bowl_2072. Robot is close to the table_226. Grabbing bowl_2072 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the bowl_2072. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. 
##############################
From agent.py
putin_executor(bowl_2072, dishwasher_1001)
Robot find: Robot is close to the bowl_2072. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. bowl_2072 is close dishwasher_1001. bowl_2072 is inside dishwasher_1001. dishwasher_1001 is close bowl_2072. bowl_2072 released by right hand. 
##############################
From agent.py
walk_executor(plate_1000)
Robot find: Robot is close to the plate_1000. Robot is close to the sink_231. 
##############################
From agent.py
grab_executor(plate_1000)
Robot find: Robot is close to the plate_1000. Robot is close to the sink_231. Grabbing plate_1000 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the plate_1000. Robot is close to the bowl_2072. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. 
##############################
From agent.py
putin_executor(plate_1000, dishwasher_1001)
Robot find: Robot is close to the plate_1000. Robot is close to the bowl_2072. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. plate_1000 is inside dishwasher_1001. plate_1000 is close dishwasher_1001. dishwasher_1001 is close plate_1000. plate_1000 released by right hand. 
##############################
From agent.py
close_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is closed. 
##############################
From agent.py
switchon_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior find_forks():
    body:
        foreach fork: item:
            if is_fork(fork) and not visited(fork):
                observe(fork, "Identify the forks that need washing")

behavior __goal__():
    body:
        find_forks()
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior find_forks():
    body:
        foreach fork: item:
            if is_fork(fork) and not visited(fork):
                observe(fork, "Identify the forks that need washing")

behavior __goal__():
    body:
        find_forks()
##############################
From agent.py-> find a plan in act()
walk_executor(fork_2080)obs(fork_2080, Identify the forks that need washing)walk_executor(fork_2081)obs(fork_2081, Identify the forks that need washing)
##############################
From agent.py
walk_executor(fork_2080)
Robot find: Robot is close to the fork_2080. Robot is close to the table_226. 
##############################
From agent.py
obs(fork_2080, Identify the forks that need washing)
Get this information:  fork_2080 is close to table_226. fork_2080 is close to character_65. fork_2080 is on table_226. fork_2080 is inside dining_room_201.
##############################
From agent.py
walk_executor(fork_2081)
Robot find: Robot is close to the table_226. Robot is close to the fork_2081. 
##############################
From agent.py
obs(fork_2081, Identify the forks that need washing)
Get this information:  fork_2081 is inside dining_room_201. fork_2081 is close to table_226. fork_2081 is close to character_65. fork_2081 is on table_226.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_mat_22_around_mat_237(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind mat_instance:item where:
            is_mat(mat_instance) and id[mat_instance]==237
        achieve close_char(char,mat_instance)
        if can_open(mat_instance):
            achieve_once open(mat_instance)
            exp(mat,mat_instance)
        else:
            exp(mat,mat_instance)
    eff:
        unknown[mat]=False
        close[mat,mat_instance]=True
        close[mat_instance,mat]=True
    

behavior find_towel_2056_around_towel_rack_34(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==34
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_forks_by_hand(fork: item):
    body:
        achieve has_water(fork)
        wash(fork)
        achieve clean(fork)

behavior __goal__():
    body:
        bind fork1: item where:
            is_fork(fork1) and id[fork1] == 2080
        wash_forks_by_hand(fork1)
        
        bind fork2: item where:
            is_fork(fork2) and id[fork2] == 2081
        wash_forks_by_hand(fork2)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior wash_forks_by_hand(fork: item):
    body:
        achieve has_water(fork)
        wash(fork)
        achieve clean(fork)

behavior __goal__():
    body:
        bind fork1: item where:
            is_fork(fork1) and id[fork1] == 2080
        wash_forks_by_hand(fork1)
        
        bind fork2: item where:
            is_fork(fork2) and id[fork2] == 2081
        wash_forks_by_hand(fork2)

##############################
From agent.py-> find a plan in act()
walk_executor(fork_2080)grab_executor(fork_2080)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)switchon_executor(faucet_43)wash_executor(fork_2080)switchoff_executor(faucet_43)walk_executor(fork_2081)grab_executor(fork_2081)walk_executor(faucet_232)walk_executor(kitchen_counter_230)put_executor(fork_2080, kitchen_counter_230)switchon_executor(faucet_232)switchoff_executor(faucet_232)switchon_executor(faucet_232)wash_executor(fork_2081)switchoff_executor(faucet_232)
##############################
From agent.py
walk_executor(fork_2080)
Robot find: Robot is close to the table_226. Robot is close to the fork_2080. 
##############################
From agent.py
grab_executor(fork_2080)
Robot find: Robot is close to the table_226. Robot is close to the fork_2080. Grabbing fork_2080 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the fork_2080. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the fork_2080. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the fork_2080. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the fork_2080. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
wash_executor(fork_2080)
Robot find: Robot is close to the fork_2080. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the fork_2080. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py
walk_executor(fork_2081)
Robot find: Robot is close to the fork_2080. Robot is close to the fork_2081. Robot is close to the table_226. 
##############################
From agent.py
grab_executor(fork_2081)
Robot find: Robot is close to the fork_2080. Robot is close to the fork_2081. Robot is close to the table_226. Grabbing fork_2081 by left hand. 
##############################
From agent.py
walk_executor(faucet_232)
Robot find: Robot is close to the fork_2080. Robot is close to the fork_2081. Robot is close to the faucet_232. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: Robot is close to the fork_2080. Robot is close to the fork_2081. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
put_executor(fork_2080, kitchen_counter_230)
Robot find: Robot is close to the fork_2080. Robot is close to the fork_2081. Robot is close to the kitchen_counter_230. kitchen_counter_230 is close fork_2080. fork_2080 is close kitchen_counter_230. fork_2080 is on kitchen_counter_230. fork_2080 released by right hand. 
##############################
From agent.py
switchon_executor(faucet_232)
Robot find: Robot is close to the fork_2080. Robot is close to the fork_2081. Robot is close to the kitchen_counter_230. faucet_232 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_232)
Robot find: Robot is close to the fork_2080. Robot is close to the fork_2081. Robot is close to the kitchen_counter_230. faucet_232 is turned off. 
##############################
From agent.py
switchon_executor(faucet_232)
Robot find: Robot is close to the fork_2080. Robot is close to the fork_2081. Robot is close to the kitchen_counter_230. faucet_232 is turned on. 
##############################
From agent.py
wash_executor(fork_2081)
Robot find: Robot is close to the fork_2080. Robot is close to the fork_2081. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
switchoff_executor(faucet_232)
Robot find: Robot is close to the fork_2080. Robot is close to the fork_2081. Robot is close to the kitchen_counter_230. faucet_232 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Wash the bowls and plates with dishwasher. And wash forks by hand.
Action History:
['walk_executor(sink_42)', 'walk_executor(dishwasher_1001)', 'open_executor(dishwasher_1001)', 'walk_executor(photoframe_185)', 'walk_executor(sink_231)', 'walk_executor(plate_1000)', 'walk_executor(table_355)', 'walk_executor(photoframe_285)', 'walk_executor(table_226)', 'walk_executor(bowl_2071)', 'grab_executor(bowl_2071)', 'walk_executor(dishwasher_1001)', 'putin_executor(bowl_2071, dishwasher_1001)', 'walk_executor(bowl_2072)', 'grab_executor(bowl_2072)', 'walk_executor(dishwasher_1001)', 'putin_executor(bowl_2072, dishwasher_1001)', 'walk_executor(plate_1000)', 'grab_executor(plate_1000)', 'walk_executor(dishwasher_1001)', 'putin_executor(plate_1000, dishwasher_1001)', 'close_executor(dishwasher_1001)', 'switchon_executor(dishwasher_1001)', 'walk_executor(fork_2080)', 'walk_executor(fork_2081)', 'walk_executor(fork_2080)', 'grab_executor(fork_2080)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'switchoff_executor(faucet_43)', 'switchon_executor(faucet_43)', 'wash_executor(fork_2080)', 'switchoff_executor(faucet_43)', 'walk_executor(fork_2081)', 'grab_executor(fork_2081)', 'walk_executor(faucet_232)', 'walk_executor(kitchen_counter_230)', 'put_executor(fork_2080, kitchen_counter_230)', 'switchon_executor(faucet_232)', 'switchoff_executor(faucet_232)', 'switchon_executor(faucet_232)', 'wash_executor(fork_2081)', 'switchoff_executor(faucet_232)']
Time info:
Time consume: 289 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 29
goal generate times: 4
goal correct times: 0
action_num: 43

Task complete rate:
1
Scene_id: 0
##############################
