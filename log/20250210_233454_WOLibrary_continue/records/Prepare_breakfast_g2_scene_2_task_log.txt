From agent.py
Reset goals: The sub-goals are: 
['Scramble the egg by using the frying pan.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_fryingpan_2107_around_kitchen_counter_132(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

#exp_behavior_end

#goal_representation
 
behavior scramble_egg(egg:item, pan:item):
    body:
        achieve is_food_food(egg)
        # Ensure egg is identified as food
        achieve is_fryingpan(pan)
        # Ensure pan is identified as a frying pan
        achieve_once inside(egg, pan)

behavior heat_pan(pan:item):
    body:
        achieve plugged(pan)
        achieve is_on(pan)

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select an egg as the food item
        
        bind pan: item where:
            is_fryingpan(pan)
        # Select a frying pan
        
        heat_pan(pan)
        scramble_egg(egg, pan)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_fryingpan_2107_around_kitchen_counter_132(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

#exp_behavior_end

#goal_representation

behavior scramble_egg_in_fryingpan(egg:item, fryingpan:item):
    body:
        achieve_once inside(egg, fryingpan)
        achieve cut(egg) # Scramble the egg

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select an egg

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan

        scramble_egg_in_fryingpan(egg, fryingpan)
        # Scramble the egg in the frying pan

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_fryingpan_2107_around_kitchen_counter_132(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior scramble_egg_with_fryingpan(egg:item, fryingpan:item):
    body:
        achieve is_on(fryingpan)
        # Make sure the frying pan is on for cooking
        achieve_once cut(egg)
        # Scramble the egg by cutting it
        achieve_once inside(egg, fryingpan)
        # Place the scrambled egg inside the frying pan

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select the egg to scramble
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select the frying pan to use for scrambling
        scramble_egg_with_fryingpan(egg, fryingpan)
        # Perform the action to scramble the egg using the frying pan

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "scramble the egg by using the frying pan." ?
Answer: Put the pan on the stove. Turn on the stove. Put oil in the pan. Put the egg in the pan.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2102_around_fridge_140(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(oil,fridge_instance)
        else:
            exp(oil,fridge_instance)
    eff:
        unknown[oil]=False
        close[oil,fridge_instance]=True
        close[fridge_instance,oil]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_fryingpan_2107_around_kitchen_counter_132(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

#exp_behavior_end

#goal_representation

behavior prepare_fryingpan(pan:item, stove:item, oil:item):
    body:
        achieve_once on(pan, stove)
        achieve_once is_on(stove)
        achieve_once inside(oil, pan)

behavior scramble_egg(egg:item, pan:item):
    body:
        achieve_once inside(egg, pan)

behavior __goal__():
    body:
        bind pan: item where:
            is_fryingpan(pan)
        bind stove: item where:
            is_stove(stove)
        bind oil: item where:
            is_oil(oil)
        bind egg: item where:
            is_food_egg(egg)

        prepare_fryingpan(pan, stove, oil)
        scramble_egg(egg, pan)

#goal_representation_end

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(fryingpan_2107, kitchen_counter_132)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(oil_2102, fridge_140)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: pot_54, Robot is close to the kitchen_counter_132. 
##############################
From agent.py
exp(fryingpan_2107, kitchen_counter_132)
Fail to find fryingpan_2107 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(fryingpan_2107, cupboard_131)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)walk_executor(cupboard_131)exp(oil_2102, cupboard_131)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(fryingpan_2107, cupboard_131)
Fail to find fryingpan_2107 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(fryingpan_2107, cupboard_130)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)walk_executor(wallshelf_191)exp(oil_2102, wallshelf_191)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(fryingpan_2107, cupboard_130)
Fail to find fryingpan_2107 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_191)exp(fryingpan_2107, wallshelf_191)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)walk_executor(wallshelf_191)exp(oil_2102, wallshelf_191)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(wallshelf_191)
Robot find: Robot is close to the wallshelf_191. 
##############################
From agent.py
exp(fryingpan_2107, wallshelf_191)
Fail to find fryingpan_2107 around wallshelf_191. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_190)exp(fryingpan_2107, wallshelf_190)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(oil_2102, fridge_140)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(wallshelf_190)
Robot find: Robot is close to the wallshelf_190. 
##############################
From agent.py
exp(fryingpan_2107, wallshelf_190)
Fail to find fryingpan_2107 around wallshelf_190. 
##############################
From agent.py-> find a plan in act()
walk_executor(stove_2090)open_executor(stove_2090)exp(fryingpan_2107, stove_2090)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(oil_2102, fridge_140)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
open_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is opened. 
##############################
From agent.py
exp(fryingpan_2107, stove_2090)
Find fryingpan_2107. 
##############################
From agent.py-> find a plan in act()
walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. 
##############################
From agent.py
grab_executor(fryingpan_2107)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Grabbing fryingpan_2107 by right hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(fryingpan_2107, stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. fryingpan_2107 is on stove_2090. stove_2090 is close fryingpan_2107. fryingpan_2107 is close stove_2090. fryingpan_2107 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py
walk_executor(oil_2102)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the oil_2102. 
##############################
From agent.py
grab_executor(oil_2102)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the oil_2102. Grabbing oil_2102 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the oil_2102. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(oil_2102, fryingpan_2107)
Robot find: Robot is close to the oil_2102. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. oil_2102 is close fryingpan_2107. oil_2102 is inside fryingpan_2107. fryingpan_2107 is close oil_2102. oil_2102 released by right hand. 
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_egg_2053, fridge_140)
Find food_egg_2053. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the food_egg_2053. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_egg_2053, fryingpan_2107)
Robot find: Robot is close to the food_egg_2053. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. food_egg_2053 is close fryingpan_2107. food_egg_2053 is inside fryingpan_2107. fryingpan_2107 is close food_egg_2053. food_egg_2053 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Scramble egg by the fryingpan.
Action History:
['walk_executor(kitchen_counter_132)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(cupboard_130)', 'walk_executor(wallshelf_191)', 'walk_executor(wallshelf_190)', 'walk_executor(stove_2090)', 'open_executor(stove_2090)', 'walk_executor(fryingpan_2107)', 'grab_executor(fryingpan_2107)', 'walk_executor(stove_2090)', 'put_executor(fryingpan_2107, stove_2090)', 'switchon_executor(stove_2090)', 'walk_executor(oil_2102)', 'grab_executor(oil_2102)', 'walk_executor(fryingpan_2107)', 'putin_executor(oil_2102, fryingpan_2107)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'grab_executor(food_egg_2053)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_egg_2053, fryingpan_2107)']
Time info:
Time consume: 162 seconds
Exp_helper query times: 0
Guidance query times: 1
library scale: 0
goal generate times: 4
goal correct times: 0
action_num: 23

Task complete rate:
1
Scene_id: 2
##############################
