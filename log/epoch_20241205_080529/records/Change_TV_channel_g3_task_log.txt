From agent.py
Reset goals: The sub-goals are: 
['1. Sit on the couch.', '2. Use the remote control to turn on the TV.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation

def is_sittable_couch(couch:item):
    return is_couch(couch) and sittable(couch)

behavior sit_on_couch(couch:item):
    body:
        achieve on_char(char, couch)

behavior __goal__():
    body:
        bind couch: item where:
            is_sittable_couch(couch)
        sit_on_couch(couch)

#goal_representation_end

##############################
From agent.py->reset_goal

def is_sittable_couch(couch:item):
    return is_couch(couch) and sittable(couch)

behavior sit_on_couch(couch:item):
    body:
        achieve on_char(char, couch)

behavior __goal__():
    body:
        bind couch: item where:
            is_sittable_couch(couch)
        sit_on_couch(couch)

##############################
From agent.py-> find a plan in act()
walk_executor(couch_352)sit_executor(couch_352)
##############################
From agent.py
walk_executor(couch_352)
Find mat_401. Find remote_control_2052. Find clothes_jacket_2047. Find cat_2055. Find pillow_405. Find drawing_400. Find pillow_406. Find hairbrush_2002. Find vacuum_cleaner_2070. Robot is inside home_office_319. Robot is close couch_352. Robot is close mat_401. Robot is no longer inside bathroom_1.
##############################
From agent.py
sit_executor(couch_352)
Find headset_2062. Find hanger_363. Find hanger_374. Find drawing_404. Find keyboard_415. Find headset_2076. Find hanger_369. Find hanger_361. Find spectacles_2082. Find drawing_402. Find hanger_372. Find chair_356. Find book_2066. Find phone_2077. Find mouse_413. Find hanger_375. Find pencil_2001. Find hanger_367. Find hanger_359. Find dvd_player_2061. Find drawing_403. Find hanger_365. Find book_2067. Find hanger_376. Robot is inside home_office_319. Robot is close couch_352. Robot is close mat_401. Robot is on couch_352. Robot is facing television_410. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cd_2075_around_tvstand_353(cd:item):
    goal: not unknown(cd)
    body:
        assert is_cd(cd)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==353
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(cd,tvstand_instance)
        else:
            exp(cd,tvstand_instance)
    eff:
        unknown[cd]=False
        close[cd,tvstand_instance]=True
        close[tvstand_instance,cd]=True
    

behavior find_cd_player_2060_around_tvstand_225(cd_player:item):
    goal: not unknown(cd_player)
    body:
        assert is_cd_player(cd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==225
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(cd_player,tvstand_instance)
        else:
            exp(cd_player,tvstand_instance)
    eff:
        unknown[cd_player]=False
        close[cd_player,tvstand_instance]=True
        close[tvstand_instance,cd_player]=True
    

#exp_behavior_end

#goal_representation

def control_located(remote_control:item, couch:item):
    symbol is_located= exists x: item : is_remote_control(x) and on(x, couch)
    return is_located

behavior use_remote_to_turn_on_tv(remote_control:item, tv:item):
    body:
        achieve_once inhand(remote_control)
        achieve is_on(tv)

behavior __goal__():
    body:
        bind couch: item where:
            is_couch(couch) and id[couch]==352
        # Select the couch with ID 352

        bind tv: item where:
            is_television(tv)
        # Select the television

        if exists remote_control: item : is_remote_control(remote_control) and control_located(remote_control, couch):
            # Check if the remote control is located on the couch
            bind remote_control: item where:
                is_remote_control(remote_control) and control_located(remote_control, couch)
            use_remote_to_turn_on_tv(remote_control, tv)
            # Use the remote control to turn on the TV

        else:
            # If the remote control is not on the couch, locate it
            foreach remote_control: item:
                if is_remote_control(remote_control) and not visited(remote_control):
                    observe(remote_control, "Check if remote control is on the couch")


#goal_representation_end

##############################
