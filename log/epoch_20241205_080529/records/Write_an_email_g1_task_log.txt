From agent.py
Reset goals: The sub-goals are: 
['Turn on the computer in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_remote_control_2052_around_home_office_319(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==319
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(remote_control,home_office_instance)
        else:
            exp(remote_control,home_office_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,home_office_instance]=True
        close[home_office_instance,remote_control]=True
    

behavior find_keyboard_168_around_home_office_319(keyboard:item):
    goal: not unknown(keyboard)
    body:
        assert is_keyboard(keyboard)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==319
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(keyboard,home_office_instance)
        else:
            exp(keyboard,home_office_instance)
    eff:
        unknown[keyboard]=False
        close[keyboard,home_office_instance]=True
        close[home_office_instance,keyboard]=True
    

behavior find_mouse_166_around_computer_170(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==170
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(mouse,computer_instance)
        else:
            exp(mouse,computer_instance)
    eff:
        unknown[mouse]=False
        close[mouse,computer_instance]=True
        close[computer_instance,mouse]=True
    

#exp_behavior_end

#goal_representation
 
behavior turn_on_computer(computer:item):
    body:
        achieve is_on(computer)

behavior __goal__():
    body:
        bind computer: item where:
            is_computer(computer)
        turn_on_computer(computer)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior turn_on_computer(computer:item):
    body:
        achieve is_on(computer)

behavior __goal__():
    body:
        bind computer: item where:
            is_computer(computer)
        turn_on_computer(computer)

##############################
From agent.py-> find a plan in act()
walk_executor(computer_170)switchon_executor(computer_170)
##############################
From agent.py
walk_executor(computer_170)
Find mouse_166. Find chair_103. Find keyboard_168. Find hanger_112. Find hanger_115. Find hanger_113. Robot is inside bedroom_67. Robot is close computer_170. Robot is no longer inside bathroom_1.
##############################
From agent.py
switchon_executor(computer_170)
Robot is inside bedroom_67. Robot is close computer_170. 
##############################
From evaluation.py
cdl_dataset/dataset/Write_an_email/g1.txt
Checking k1
missed actions: walk_executor(computer_417);switchon_executor(computer_417);
missed action num: 2
##############################
From evaluation.py
cdl_dataset/dataset/Write_an_email/g1.txt
Checking k1
missed actions: walk_executor(computer_417);switchon_executor(computer_417);
missed action num: 2
##############################
