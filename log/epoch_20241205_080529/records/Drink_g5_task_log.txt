From agent.py
Reset goals: The sub-goals are: 
['Use a pot to boil some water.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2050_around_kitchen_counter_230(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(knife,kitchen_counter_instance)
        else:
            exp(knife,kitchen_counter_instance)
    eff:
        unknown[knife]=False
        close[knife,kitchen_counter_instance]=True
        close[kitchen_counter_instance,knife]=True
    

behavior find_milk_2043_around_fridge_289(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_pot_2069_around_kitchen_counter_230(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(pot,kitchen_counter_instance)
        else:
            exp(pot,kitchen_counter_instance)
    eff:
        unknown[pot]=False
        close[pot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,pot]=True
    

behavior find_cup_2063_around_kitchen_counter_230(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

#exp_behavior_end

#goal_representation
behavior boil_water_with_pot(pot:item, stove:item, water:item):
    body:
        achieve has_water(pot)
        achieve on(pot, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select the pot to use

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        bind water: item where:
            is_milk(water) or is_water(water)
        # Select the water

        boil_water_with_pot(pot, stove, water)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior boil_water_with_pot(pot:item, stove:item, water:item):
    body:
        achieve has_water(pot)
        achieve on(pot, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select the pot to use

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        bind water: item where:
            is_milk(water) or is_water(water)
        # Select the water

        boil_water_with_pot(pot, stove, water)
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)exp(pot_2069, kitchen_counter_230)walk_executor(pot_2069)grab_executor(pot_2069)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(stove_2065)put_executor(pot_2069, stove_2065)switchon_executor(stove_2065)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Find pot_2069. Find cup_2063. Find knife_2050. Find napkin_2005. Find cup_2064. Find cutting_board_2051. Find oil_2079. Find fryingpan_2083. Find tray_296. Find drawing_239. Find drawing_238. Find drawing_240. Find drawing_241. Find drawing_242. Find drawing_243. Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is no longer inside bathroom_1.
##############################
From agent.py
exp(pot_2069, kitchen_counter_230)
Find pot_2069. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_2069)grab_executor(pot_2069)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(stove_2065)put_executor(pot_2069, stove_2065)switchon_executor(stove_2065)
##############################
From agent.py
walk_executor(pot_2069)
Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is close pot_2069. 
##############################
From agent.py
grab_executor(pot_2069)
Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is close pot_2069. Grabbing pot_2069 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Find basket_for_clothes_2006. Find towel_rack_34. Find towel_rack_32. Find towel_rack_31. Robot is inside bathroom_1. Robot is close pot_2069. Robot is close bathroom_counter_41. Robot is close faucet_43. Robot is no longer inside dining_room_201.Robot is no longer close kitchen_counter_230.
##############################
From agent.py
switchon_executor(faucet_43)
Find drawing_176. Robot is inside bathroom_1. Robot is close pot_2069. Robot is close bathroom_counter_41. Robot is close faucet_43. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot is inside bathroom_1. Robot is close pot_2069. Robot is close bathroom_counter_41. Robot is close faucet_43. 
##############################
From agent.py
walk_executor(stove_2065)
Robot is inside dining_room_201. Robot is close pot_2069. Robot is close stove_2065. Robot is close kitchen_counter_230. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_41.Robot is no longer close faucet_43.
##############################
From agent.py
put_executor(pot_2069, stove_2065)
Robot is inside dining_room_201. Robot is close pot_2069. Robot is close stove_2065. Robot is close kitchen_counter_230. pot_2069 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2065)
Robot is inside dining_room_201. Robot is close pot_2069. Robot is close stove_2065. Robot is close kitchen_counter_230. 
##############################
From evaluation.py
cdl_dataset/dataset/Drink/g5.txt
Checking k1
missed actions: 
missed action num: 0
##############################
