From agent.py
Reset goals: The sub-goals are: 
['1. Find the chair in front of a computer in the home office and sit on it.', '2. Touch the mouse near the computer to turn it on.', '3. Type on the keyboard to send an email.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_356_around_home_office_319(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==319
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(chair,home_office_instance)
        else:
            exp(chair,home_office_instance)
    eff:
        unknown[chair]=False
        close[chair,home_office_instance]=True
        close[home_office_instance,chair]=True
    

behavior find_keyboard_168_around_desk_104(keyboard:item):
    goal: not unknown(keyboard)
    body:
        assert is_keyboard(keyboard)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==104
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(keyboard,desk_instance)
        else:
            exp(keyboard,desk_instance)
    eff:
        unknown[keyboard]=False
        close[keyboard,desk_instance]=True
        close[desk_instance,keyboard]=True
    

behavior find_mouse_166_around_computer_170(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==170
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(mouse,computer_instance)
        else:
            exp(mouse,computer_instance)
    eff:
        unknown[mouse]=False
        close[mouse,computer_instance]=True
        close[computer_instance,mouse]=True
    

#exp_behavior_end

#goal_representation
 
def in_front_of_computer(chair:item):
    # Function to check if a chair is in front of the computer
    symbol in_front=exists computer: item : is_computer(computer) and close(chair, computer)
    return in_front

behavior sit_on_chair(chair:item):
    body:
        achieve on_char(char, chair) # Sit on the chair

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office room
        
        bind chair: item where:
            is_chair(chair) and inside(chair, home_office) and in_front_of_computer(chair)
        # Select a chair in the home office in front of the computer

        achieve close_char(char, chair) # Position closer to the chair
        sit_on_chair(chair) # Sit on the chair

#goal_representation_end

##############################
From agent.py->reset_goal
 
def in_front_of_computer(chair:item):
    # Function to check if a chair is in front of the computer
    symbol in_front=exists computer: item : is_computer(computer) and close(chair, computer)
    return in_front

behavior sit_on_chair(chair:item):
    body:
        achieve on_char(char, chair) # Sit on the chair

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office room
        
        bind chair: item where:
            is_chair(chair) and inside(chair, home_office) and in_front_of_computer(chair)
        # Select a chair in the home office in front of the computer

        achieve close_char(char, chair) # Position closer to the chair
        sit_on_chair(chair) # Sit on the chair

##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you tell me how to find the chair in front of a computer in the home office and sit on it.
Answer: Need to replan: No  
Guidance: Get close to the computer in the home office. Then sit on the chair in front of the computer.

##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you tell me how to touch the mouse near the computer to turn it on.
Answer: Need to replan: No  
Guidance: Get close to the computer in the home office. Touch the mouse to turn on the computer.

##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you tell me how to type on the keyboard to send an email.
Answer: Need to replan: No  
Guidance: Type on the keyboard to send an email.

##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Sit on the chair in front of the computer in the home office.', '2. Touch the mouse near the computer to turn it on.', '3. Type on the keyboard to send an email.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_106_around_home_office_319(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==319
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(chair,home_office_instance)
        else:
            exp(chair,home_office_instance)
    eff:
        unknown[chair]=False
        close[chair,home_office_instance]=True
        close[home_office_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior sit_on_chair(chair:item):
    body:
        achieve on_char(char, chair) # Sit on the chair

behavior __goal__():
    body:
        bind chair: item where:
            is_chair(chair) and inside(chair, home_office)
        # Select a chair located inside the home office
        sit_on_chair(chair)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: home_office; available variables: [Variable<chair: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_chair_356_around_home_office_319(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==319
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(chair,home_office_instance)
        else:
            exp(chair,home_office_instance)
    eff:
        unknown[chair]=False
        close[chair,home_office_instance]=True
        close[home_office_instance,chair]=True
    

#goal_representation

behavior sit_on_chair(chair:item):
    body:
        achieve on_char(char, chair) # Sit on the chair

behavior __goal__():
    body:
        bind chair: item where:
            is_chair(chair) and inside(chair, home_office)
        bind home_office: item where:
            is_home_office(home_office)
        # Select a chair located inside the home office
        sit_on_chair(chair)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: home_office; available variables: [Variable<chair: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_chair_106_around_desk_104(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==104
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

#goal_representation

behavior sit_on_chair(chair:item):
    body:
        achieve on_char(char, chair) # Sit on the chair

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        bind chair: item where:
            is_chair(chair) and inside(chair, home_office)
        # Select a chair located inside the home office
        sit_on_chair(chair)

#goal_representation_end

##############################
