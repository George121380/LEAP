From agent.py
Reset goals: The sub-goals are: 
['Sit on the chair in front of the computer in the home office and touch the mouse near the computer to turn it on.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_194_around_desk_193(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==193
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

behavior find_mouse_280_around_computer_276(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==276
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(mouse,computer_instance)
        else:
            exp(mouse,computer_instance)
    eff:
        unknown[mouse]=False
        close[mouse,computer_instance]=True
        close[computer_instance,mouse]=True
    

behavior find_keyboard_211_around_computer_276(keyboard:item):
    goal: not unknown(keyboard)
    body:
        assert is_keyboard(keyboard)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==276
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(keyboard,computer_instance)
        else:
            exp(keyboard,computer_instance)
    eff:
        unknown[keyboard]=False
        close[keyboard,computer_instance]=True
        close[computer_instance,keyboard]=True
    

#exp_behavior_end

#goal_representation
 
def is_home_office_chair(chair: item):
    # Function to check if a chair is in the home office
    symbol in_home_office=exists room: item : is_home_office(room) and inside(chair, room)
    return in_home_office

def is_mouse_near_computer(mouse: item, computer: item):
    # Function to check if the mouse is near the computer
    symbol is_near=close(mouse, computer)
    return is_near

behavior sit_on_chair(chair: item):
    body:
        achieve on_char(char, chair)

behavior turn_on_computer(mouse: item):
    body:
        touch(mouse) # Touch the mouse to turn on the computer

behavior __goal__():
    body:
        bind chair: item where:
            is_chair(chair) and is_home_office_chair(chair)
        # Select a chair within the home office

        bind computer: item where:
            is_computer(computer)
        # Select a computer

        bind mouse: item where:
            is_mouse(mouse) and is_mouse_near_computer(mouse, computer)
        # Select the mouse close to the computer

        sit_on_chair(chair)
        # Sit on the specified chair

        turn_on_computer(mouse)
        # Turn on the computer by touching the mouse

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_2003_around_home_office_241(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(chair,home_office_instance)
        else:
            exp(chair,home_office_instance)
    eff:
        unknown[chair]=False
        close[chair,home_office_instance]=True
        close[home_office_instance,chair]=True
    

behavior find_mouse_213_around_computer_276(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==276
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(mouse,computer_instance)
        else:
            exp(mouse,computer_instance)
    eff:
        unknown[mouse]=False
        close[mouse,computer_instance]=True
        close[computer_instance,mouse]=True
    

#exp_behavior_end

#goal_representation
 
behavior sit_on_chair_in_home_office(chair:item):
    body:
        achieve on_char(char, chair)
        # Sit on the specified chair in the home office

behavior turn_on_computer(computer:item, mouse:item):
    body:
        achieve close_char(char, mouse)
        # Ensure the character is close to the mouse
        achieve is_on(computer)
        # The computer is turned on

behavior __goal__():
    body:
        bind chair: item where:
            is_chair(chair) and exists room: item : is_home_office(room) and inside(char, room)
        # Select a chair inside the home office

        bind computer: item where:
            is_computer(computer)
        # Select the computer

        bind mouse: item where:
            is_mouse(mouse) and close(mouse, computer)
        # Select a mouse that is close to the computer

        sit_on_chair_in_home_office(chair)
        turn_on_computer(computer, mouse)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'room') at line 5535, column 40.
Expected one of: 
	* COMMA
	* SEMICOLON
	* _NEWLINE

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_chair_194_around_desk_193(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==193
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

behavior find_mouse_280_around_computer_276(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==276
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(mouse,computer_instance)
        else:
            exp(mouse,computer_instance)
    eff:
        unknown[mouse]=False
        close[mouse,computer_instance]=True
        close[computer_instance,mouse]=True
    

#goal_representation
 
behavior __goal__():
    body:
        bind chair: item where:
            is_chair(chair) and exists room: item : is_home_office(room) and inside_char(char, room)
        # Select a chair inside the home office

        bind computer: item where:
            is_computer(computer)
        # Select the computer

        bind mouse: item where:
            is_mouse(mouse) and close(mouse, computer)
        # Select a mouse that is close to the computer

        sit_on_chair_in_home_office(chair)
        turn_on_computer(computer, mouse)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'room') at line 5523, column 40.
Expected one of: 
	* COMMA
	* SEMICOLON
	* _NEWLINE

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_chair_194_around_desk_193(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==193
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

behavior find_mouse_280_around_computer_276(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==276
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(mouse,computer_instance)
        else:
            exp(mouse,computer_instance)
    eff:
        unknown[mouse]=False
        close[mouse,computer_instance]=True
        close[computer_instance,mouse]=True
    

#goal_representation
 
behavior __goal__():
    body:
        bind chair: item where:
            is_chair(chair) and exists room: item : is_home_office(room) and inside_char(char, room)
        # Select a chair inside the home office

        bind computer: item where:
            is_computer(computer)
        # Select the computer

        bind mouse: item where:
            is_mouse(mouse) and close(mouse, computer)
        # Select a mouse that is close to the computer

        sit_on_chair_in_home_office(chair)
        turn_on_computer(computer, mouse)

#goal_representation_end

##############################
From agent.py->reset_goal
Failed to generate the goal representation
##############################
