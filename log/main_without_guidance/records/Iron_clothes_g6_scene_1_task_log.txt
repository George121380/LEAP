From agent.py
Reset goals: The sub-goals are: 
['1. Find the shirt and the skirt.', '2. Iron the shirt and the skirt.', '3. Place the ironed shirt and skirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2158_around_dresser_274(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==274
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_shirt,dresser_instance)
        else:
            exp(clothes_shirt,dresser_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,dresser_instance]=True
        close[dresser_instance,clothes_shirt]=True
    

behavior find_clothes_skirt_2160_around_dresser_274(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==274
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_skirt,dresser_instance)
        else:
            exp(clothes_skirt,dresser_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,dresser_instance]=True
        close[dresser_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothes_instance(item: item):
    # Function to determine if the item is a piece of clothing
    return is_clothes(item)

behavior __goal__():
    body:
        foreach clothing: item:
            if is_clothes_instance(clothing) and not visited(clothing):
                observe(clothing, "Identify the shirt and skirt")
                # Observe each piece of clothing to identify the shirt and skirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2158_around_dresser_274(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==274
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_shirt,dresser_instance)
        else:
            exp(clothes_shirt,dresser_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,dresser_instance]=True
        close[dresser_instance,clothes_shirt]=True
    

behavior find_clothes_skirt_2160_around_ironing_board_2144(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2144
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_skirt,ironing_board_instance)
        else:
            exp(clothes_skirt,ironing_board_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,ironing_board_instance]=True
        close[ironing_board_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_select_clothes(shirt:item, skirt:item):
    body:
        achieve visited(shirt)
        # Visit the shirt to confirm its location
        achieve visited(skirt)
        # Visit the skirt to confirm its location

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the item that is a shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the item that is a skirt

        if not visited(shirt):
            observe(shirt, "Locate the shirt")
        # Observe the shirt if it has not been visited

        if not visited(skirt):
            observe(skirt, "Locate the skirt")
        # Observe the skirt if it has not been visited

        find_and_select_clothes(shirt, skirt)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_and_select_clothes(shirt:item, skirt:item):
    body:
        achieve visited(shirt)
        # Visit the shirt to confirm its location
        achieve visited(skirt)
        # Visit the skirt to confirm its location

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the item that is a shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the item that is a skirt

        if not visited(shirt):
            observe(shirt, "Locate the shirt")
        # Observe the shirt if it has not been visited

        if not visited(skirt):
            observe(skirt, "Locate the skirt")
        # Observe the skirt if it has not been visited

        find_and_select_clothes(shirt, skirt)

##############################
From agent.py-> find a plan in act()
walk_executor(dresser_274)open_executor(dresser_274)exp(clothes_shirt_2158, dresser_274)walk_executor(clothes_shirt_2158)obs(clothes_shirt_2158, Locate the shirt)walk_executor(ironing_board_2144)exp(clothes_skirt_2160, ironing_board_2144)walk_executor(clothes_skirt_2160)obs(clothes_skirt_2160, Locate the skirt)
##############################
From agent.py
walk_executor(dresser_274)
Find hanger_292. Find hanger_293. Find hanger_294. Find blow_dryer_2057. Find cat_2069. Find check_2075. Find clothes_pants_2036. Robot is inside home_office_241. Robot is close hanger_292. Robot is close hanger_293. Robot is close hanger_294. Robot is close blow_dryer_2057. Robot is close dresser_274. Robot is close cat_2069. Robot is close check_2075. Robot is no longer inside dining_room_41.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From agent.py
open_executor(dresser_274)
Find keyboard_278. Find brush_2002. Find stamp_2043. Find phone_2147. Find headset_2131. Find mat_284. Find pillow_287. Find cd_2145. Find shampoo_2019. Find stamp_2022. Find chair_271. Find cd_player_2129. Find pencil_2014. Find shoes_2033. Find phone_2017. Find remote_control_2124. Find drawing_288. Find pencil_2020. Find mouse_280. Find headset_2146. Find pillow_286. Find dvd_player_2130. Robot is inside home_office_241. Robot is close hanger_292. Robot is close hanger_293. Robot is close hanger_294. Robot is close blow_dryer_2057. Robot is close dresser_274. Robot is close cat_2069. Robot is close check_2075. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From agent.py
exp(clothes_shirt_2158, dresser_274)
Failed to find clothes_shirt_2158 around dresser_274. 
##############################
From agent.py-> find a plan in act()
walk_executor(nightstand_195)open_executor(nightstand_195)exp(clothes_shirt_2158, nightstand_195)walk_executor(clothes_shirt_2158)obs(clothes_shirt_2158, Locate the shirt)walk_executor(ironing_board_2144)exp(clothes_skirt_2160, ironing_board_2144)walk_executor(clothes_skirt_2160)obs(clothes_skirt_2160, Locate the skirt)
##############################
From agent.py
walk_executor(nightstand_195)
Find chair_194. Find pillow_208. Find drawing_201. Find pillow_207. Robot is inside bedroom_162. Robot is close nightstand_195. Robot is close floor_165. Robot is no longer inside home_office_241.Robot is no longer close hanger_292.Robot is no longer close hanger_293.Robot is no longer close hanger_294.Robot is no longer close blow_dryer_2057.Robot is no longer close dresser_274.Robot is no longer close cat_2069.Robot is no longer close check_2075.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From agent.py
open_executor(nightstand_195)
Robot is inside bedroom_162. Robot is close nightstand_195. Robot is close floor_165. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From agent.py
exp(clothes_shirt_2158, nightstand_195)
Failed to find clothes_shirt_2158 around nightstand_195. 
##############################
From agent.py-> find a plan in act()
walk_executor(nightstand_192)exp(clothes_shirt_2158, nightstand_192)walk_executor(clothes_shirt_2158)obs(clothes_shirt_2158, Locate the shirt)walk_executor(bed_197)exp(clothes_skirt_2160, bed_197)walk_executor(clothes_skirt_2160)obs(clothes_skirt_2160, Locate the skirt)
##############################
From agent.py
walk_executor(nightstand_192)
Robot is inside bedroom_162. Robot is close nightstand_192. Robot is close floor_166. Robot is no longer close nightstand_195.Robot is no longer close floor_165.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From agent.py
exp(clothes_shirt_2158, nightstand_192)
Failed to find clothes_shirt_2158 around nightstand_192. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_120)exp(clothes_shirt_2158, sink_120)walk_executor(clothes_shirt_2158)obs(clothes_shirt_2158, Locate the shirt)walk_executor(ironing_board_2144)exp(clothes_skirt_2160, ironing_board_2144)walk_executor(clothes_skirt_2160)obs(clothes_skirt_2160, Locate the skirt)
##############################
From agent.py
walk_executor(sink_120)
Find basket_for_clothes_2078. Find soap_2010. Find pot_2138. Find tray_128. Find ice_2024. Find soap_2126. Find pot_78. Find bowl_2141. Find plate_2152. Find cutting_board_2123. Find food_salt_2041. Find fork_2150. Find bowl_2140. Find bowl_2142. Find fork_2151. Robot is inside dining_room_41. Robot is close sink_120. Robot is close kitchen_counter_119. Robot is no longer inside bedroom_162.Robot is no longer close nightstand_192.Robot is no longer close floor_166.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From agent.py
exp(clothes_shirt_2158, sink_120)
Failed to find clothes_shirt_2158 around sink_120. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2078)exp(clothes_shirt_2158, basket_for_clothes_2078)walk_executor(clothes_shirt_2158)obs(clothes_shirt_2158, Locate the shirt)walk_executor(ironing_board_2144)exp(clothes_skirt_2160, ironing_board_2144)walk_executor(clothes_skirt_2160)obs(clothes_skirt_2160, Locate the skirt)
##############################
From agent.py
walk_executor(basket_for_clothes_2078)
Find clothes_pants_2157. Find clothes_shirt_2158. Find clothes_socks_2159. Find clothes_skirt_2160. Robot is inside dining_room_41. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close clothes_socks_2159. Robot is close clothes_skirt_2160. Robot is close basket_for_clothes_2078. Robot is no longer close sink_120.Robot is no longer close kitchen_counter_119.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 10
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 10
##############################
From agent.py
exp(clothes_shirt_2158, basket_for_clothes_2078)
Find clothes_shirt_2158. 
##############################
From agent.py-> find a plan in act()
obs(clothes_shirt_2158, Locate the shirt)obs(clothes_skirt_2160, Locate the skirt)
##############################
From agent.py
obs(clothes_shirt_2158, Locate the shirt)
Get this information:  clothes_shirt_2158 is close to basket_for_clothes_2078. clothes_shirt_2158 is close to character_240. clothes_shirt_2158 is inside dining_room_41. clothes_shirt_2158 is inside basket_for_clothes_2078. clothes_shirt_2158 is DIRTY.
##############################
From agent.py
obs(clothes_skirt_2160, Locate the skirt)
Get this information:  clothes_skirt_2160 is close to basket_for_clothes_2078. clothes_skirt_2160 is close to character_240. clothes_skirt_2160 is inside dining_room_41. clothes_skirt_2160 is inside basket_for_clothes_2078. clothes_skirt_2160 is DIRTY.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_ironing_board_2144(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2144
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
def is_shirt_skirt(clothes:item):
    # Check if the clothes are a shirt or a skirt
    return is_clothes_shirt(clothes) or is_clothes_skirt(clothes)

behavior iron_clothes(clothes:item, iron:item, ironing_board: item):
    body:
        achieve plugged(iron)
        achieve is_on(iron)
        achieve on(clothes, ironing_board)
        # Ensure the clothes are on the ironing board
        # Iron the clothes

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        # Iron the shirt
        iron_clothes(shirt, iron, ironing_board)
        # Iron the skirt
        iron_clothes(skirt, iron, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_shirt_skirt(clothes:item):
    # Check if the clothes are a shirt or a skirt
    return is_clothes_shirt(clothes) or is_clothes_skirt(clothes)

behavior iron_clothes(clothes:item, iron:item, ironing_board: item):
    body:
        achieve plugged(iron)
        achieve is_on(iron)
        achieve on(clothes, ironing_board)
        # Ensure the clothes are on the ironing board
        # Iron the clothes

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        # Iron the shirt
        iron_clothes(shirt, iron, ironing_board)
        # Iron the skirt
        iron_clothes(skirt, iron, ironing_board)

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2144)exp(iron_2161, ironing_board_2144)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(ironing_board_2144)put_executor(clothes_shirt_2158, ironing_board_2144)walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)walk_executor(ironing_board_2144)put_executor(clothes_skirt_2160, ironing_board_2144)
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot is inside dining_room_41. Robot is close ironing_board_2144. Robot is no longer close clothes_pants_2157.Robot is no longer close clothes_shirt_2158.Robot is no longer close clothes_socks_2159.Robot is no longer close clothes_skirt_2160.Robot is no longer close basket_for_clothes_2078.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From agent.py
exp(iron_2161, ironing_board_2144)
Failed to find iron_2161 around ironing_board_2144. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_270)exp(iron_2161, table_270)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(ironing_board_2144)put_executor(clothes_shirt_2158, ironing_board_2144)walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)walk_executor(ironing_board_2144)put_executor(clothes_skirt_2160, ironing_board_2144)
##############################
From agent.py
walk_executor(table_270)
Robot is inside home_office_241. Robot is close couch_269. Robot is close table_270. Robot is no longer inside dining_room_41.Robot is no longer close ironing_board_2144.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find iron_2161 ?
Answer: Search for iron_2161 in the dining room, specifically on or near bowl_2142. It should be located directly on top of bowl_2142.
Re-decompose: None

##############################
From agent.py
Human Instruction: Search for iron_2161 in the dining room, specifically on or near bowl_2142. It should be located directly on top of bowl_2142.

The actions you have taken:
Action 1: Walk to dresser_274.
Action 2: Open dresser_274.
Action 3: look for clothes_shirt_2158 around dresser_274.
Action 4: Walk to nightstand_195.
Action 5: Open nightstand_195.
Action 6: look for clothes_shirt_2158 around nightstand_195.
Action 7: Walk to nightstand_192.
Action 8: look for clothes_shirt_2158 around nightstand_192.
Action 9: Walk to sink_120.
Action 10: look for clothes_shirt_2158 around sink_120.
Action 11: Walk to basket_for_clothes_2078.
Action 12: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 13: Observe around clothes_shirt_2158 with the question of Locate the shirt.
Action 14: Observe around clothes_skirt_2160 with the question of Locate the skirt.
Action 15: Walk to ironing_board_2144.
Action 16: look for iron_2161 around ironing_board_2144.
Action 17: Walk to table_270.

##############################
From agent.py
exp(iron_2161, table_270)
Failed to find iron_2161 around table_270. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2142)exp(iron_2161, bowl_2142)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(ironing_board_2144)put_executor(clothes_shirt_2158, ironing_board_2144)walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)walk_executor(ironing_board_2144)put_executor(clothes_skirt_2160, ironing_board_2144)
##############################
From agent.py
walk_executor(bowl_2142)
Find iron_2161. Robot is inside dining_room_41. Robot is close bowl_2142. Robot is close kitchen_counter_119. Robot is no longer inside home_office_241.Robot is no longer close couch_269.Robot is no longer close table_270.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From agent.py
exp(iron_2161, bowl_2142)
Find iron_2161. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(ironing_board_2144)put_executor(clothes_shirt_2158, ironing_board_2144)walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)walk_executor(ironing_board_2144)put_executor(clothes_skirt_2160, ironing_board_2144)
##############################
From agent.py
walk_executor(iron_2161)
Robot is inside dining_room_41. Robot is close bowl_2142. Robot is close iron_2161. Robot is no longer close kitchen_counter_119.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);walk_executor(iron_2161);plugin_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 11
##############################
From agent.py
plugin_executor(iron_2161)
Robot is inside dining_room_41. Robot is close bowl_2142. Robot is close iron_2161. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);walk_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 10
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);walk_executor(iron_2161);switchon_executor(iron_2161);
missed action num: 10
##############################
From agent.py
switchon_executor(iron_2161)
Robot is inside dining_room_41. Robot is close bowl_2142. Robot is close iron_2161. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 8
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 8
##############################
From agent.py
walk_executor(clothes_shirt_2158)
Robot is inside dining_room_41. Robot is close clothes_shirt_2158. Robot is close basket_for_clothes_2078. Robot is no longer close iron_2161.Robot is no longer close bowl_2142.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 7
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 8
##############################
From agent.py
grab_executor(clothes_shirt_2158)
Robot is inside dining_room_41. Robot is close clothes_shirt_2158. Robot is close basket_for_clothes_2078. Grabbing clothes_shirt_2158 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 6
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 8
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot is inside dining_room_41. Robot is close clothes_shirt_2158. Robot is close ironing_board_2144. Robot is no longer close basket_for_clothes_2078.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 5
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 8
##############################
From agent.py
put_executor(clothes_shirt_2158, ironing_board_2144)
Robot is inside dining_room_41. Robot is close clothes_shirt_2158. Robot is close ironing_board_2144. clothes_shirt_2158 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 8
##############################
From agent.py
walk_executor(clothes_skirt_2160)
Robot is inside dining_room_41. Robot is close clothes_skirt_2160. Robot is close basket_for_clothes_2078. Robot is no longer close ironing_board_2144.Robot is no longer close clothes_shirt_2158.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 7
##############################
From agent.py
grab_executor(clothes_skirt_2160)
Robot is inside dining_room_41. Robot is close clothes_skirt_2160. Robot is close basket_for_clothes_2078. Grabbing clothes_skirt_2160 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 6
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot is inside dining_room_41. Robot is close clothes_skirt_2160. Robot is close ironing_board_2144. Robot is no longer close basket_for_clothes_2078.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 5
##############################
From agent.py
put_executor(clothes_skirt_2160, ironing_board_2144)
Robot is inside dining_room_41. Robot is close clothes_skirt_2160. Robot is close ironing_board_2144. clothes_skirt_2160 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 4
##############################
From agent.py
Human Instruction: You need to actually iron the shirt and the skirt on the ironing board to complete this sub-task.

The actions you have taken:
Action 1: Walk to dresser_274.
Action 2: Open dresser_274.
Action 3: look for clothes_shirt_2158 around dresser_274.
Action 4: Walk to nightstand_195.
Action 5: Open nightstand_195.
Action 6: look for clothes_shirt_2158 around nightstand_195.
Action 7: Walk to nightstand_192.
Action 8: look for clothes_shirt_2158 around nightstand_192.
Action 9: Walk to sink_120.
Action 10: look for clothes_shirt_2158 around sink_120.
Action 11: Walk to basket_for_clothes_2078.
Action 12: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 13: Observe around clothes_shirt_2158 with the question of Locate the shirt.
Action 14: Observe around clothes_skirt_2160 with the question of Locate the skirt.
Action 15: Walk to ironing_board_2144.
Action 16: look for iron_2161 around ironing_board_2144.
Action 17: Walk to table_270.
Action 18: look for iron_2161 around table_270.
Action 19: Walk to bowl_2142.
Action 20: look for iron_2161 around bowl_2142.
Action 21: Walk to iron_2161.
Action 22: Plug in iron_2161.
Action 23: Switch on iron_2161.
Action 24: Walk to clothes_shirt_2158.
Action 25: Grab clothes_shirt_2158.
Action 26: Walk to ironing_board_2144.
Action 27: Put clothes_shirt_2158 on ironing_board_2144.
Action 28: Walk to clothes_skirt_2160.
Action 29: Grab clothes_skirt_2160.
Action 30: Walk to ironing_board_2144.
Action 31: Put clothes_skirt_2160 on ironing_board_2144.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2120_around_washing_machine_2079(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_scarf,washing_machine_instance)
        else:
            exp(clothes_scarf,washing_machine_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,washing_machine_instance]=True
        close[washing_machine_instance,clothes_scarf]=True
    

behavior find_clothes_underwear_2121_around_washing_machine_2079(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_underwear,washing_machine_instance)
        else:
            exp(clothes_underwear,washing_machine_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,washing_machine_instance]=True
        close[washing_machine_instance,clothes_underwear]=True
    

behavior find_clothes_dress_2116_around_bed_197(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==197
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(clothes_dress,bed_instance)
        else:
            exp(clothes_dress,bed_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,bed_instance]=True
        close[bed_instance,clothes_dress]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(shirt: item, skirt: item, iron: item, ironing_board: item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board

        achieve_once inhand(iron)
        # Hold the iron to iron the clothes

        achieve is_on(iron)
        # Turn on the iron

        scrub(shirt)
        # Iron the shirt

        scrub(skirt)
        # Iron the skirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and on(shirt, ironing_board_2144)
        # Select the shirt that is already on the ironing board

        bind skirt: item where:
            is_clothes_skirt(skirt) and on(skirt, ironing_board_2144)
        # Select the skirt that is already on the ironing board

        bind iron: item where:
            is_iron(iron) and is_on(iron)
        # Select the iron that is on

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Select the ironing board

        iron_clothes(shirt, skirt, iron, ironing_board)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board_2144; available variables: [Variable<shirt: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_fryingpan_2154_around_stove_2135(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2135
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

#goal_representation
 
behavior iron_clothes(shirt: item, skirt: item, iron: item, ironing_board: item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board

        achieve_once inhand(iron)
        # Hold the iron to iron the clothes

        achieve is_on(iron)
        # Turn on the iron

        scrub(shirt)
        # Iron the shirt

        scrub(skirt)
        # Iron the skirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and on(shirt, ironing_board)
        # Select the shirt that is already on the ironing board

        bind skirt: item where:
            is_clothes_skirt(skirt) and on(skirt, ironing_board)
        # Select the skirt that is already on the ironing board

        bind iron: item where:
            is_iron(iron) and is_on(iron)
        # Select the iron that is on

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Select the ironing board

        iron_clothes(shirt, skirt, iron, ironing_board)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board; available variables: [Variable<shirt: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_knife_2037_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#goal_representation
 
behavior iron_clothes(shirt: item, skirt: item, iron: item, ironing_board: item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board

        achieve_once inhand(iron)
        # Hold the iron to iron the clothes

        achieve is_on(iron)
        # Turn on the iron

        scrub(shirt)
        # Iron the shirt

        scrub(skirt)
        # Iron the skirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and on(shirt, ironing_board)
        # Select the shirt that is already on the ironing board

        bind skirt: item where:
            is_clothes_skirt(skirt) and on(skirt, ironing_board)
        # Select the skirt that is already on the ironing board

        bind iron: item where:
            is_iron(iron) and is_on(iron)
        # Select the iron that is on

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Select the ironing board

        iron_clothes(shirt, skirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2120_around_washing_machine_2079(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_scarf,washing_machine_instance)
        else:
            exp(clothes_scarf,washing_machine_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,washing_machine_instance]=True
        close[washing_machine_instance,clothes_scarf]=True
    

behavior find_clothes_underwear_2121_around_washing_machine_2079(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_underwear,washing_machine_instance)
        else:
            exp(clothes_underwear,washing_machine_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,washing_machine_instance]=True
        close[washing_machine_instance,clothes_underwear]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(shirt:item, skirt:item, iron:item, ironing_board:item):
    body:
        achieve plugged(iron)
        # Ensure the iron is plugged in

        achieve is_on(iron)
        # Turn the iron on

        achieve close_char(char, ironing_board)
        # Move close to the ironing board

        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board

        achieve on(skirt, ironing_board)
        # Place the skirt on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2158
        # Select the shirt with ID 2158

        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2160
        # Select the skirt with ID 2160

        bind iron: item where:
            is_iron(iron) and id[iron] == 2161
        # Select the iron with ID 2161

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Select the ironing board with ID 2144

        iron_clothes(shirt, skirt, iron, ironing_board)
        # Iron the shirt and skirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(shirt: item, skirt: item, iron: item, ironing_board: item):
    body:
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is on
        achieve on(shirt, ironing_board) # Place the shirt on the ironing board
        achieve on(skirt, ironing_board) # Place the skirt on the ironing board
        # The action of ironing is implied and will be handled by the system

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and on(shirt, ironing_board_2144)
        # Select the shirt placed on the ironing board

        bind skirt: item where:
            is_clothes_skirt(skirt) and on(skirt, ironing_board_2144)
        # Select the skirt placed on the ironing board

        bind iron: item where:
            is_iron(iron) and close(iron, ironing_board_2144)
        # Select the iron close to the ironing board

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Select the ironing board

        iron_clothes(shirt, skirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_washing_machine_2079(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(towel,washing_machine_instance)
        else:
            exp(towel,washing_machine_instance)
    eff:
        unknown[towel]=False
        close[towel,washing_machine_instance]=True
        close[washing_machine_instance,towel]=True
    

behavior find_cleaning_solution_2143_around_bathroom_cabinet_17(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

behavior find_detergent_2011_around_washing_machine_2079(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
def is_ironed(item: item):
    # Define a function to check if an item is ironed
    symbol ironed = clean(item) and not dirty(item)
    return ironed

behavior iron_clothing(item: item, iron: item, ironing_board: item):
    body:
        achieve close_char(char, ironing_board)
        # Move closer to the ironing board
        
        achieve on(item, ironing_board)
        # Place the item on the ironing board

        achieve plugged(iron)
        # Make sure the iron is plugged in
        
        achieve is_on(iron)
        # Ensure the iron is on

        while not is_ironed(item):
            assert_hold is_on(iron)
            # Iron the item until it is fully ironed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_clothing(shirt, iron, ironing_board)
        # Iron the shirt

        iron_clothing(skirt, iron, ironing_board)
        # Iron the skirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2120_around_washing_machine_2079(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_scarf,washing_machine_instance)
        else:
            exp(clothes_scarf,washing_machine_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,washing_machine_instance]=True
        close[washing_machine_instance,clothes_scarf]=True
    

behavior find_food_hamburger_2096_around_fridge_126(food_hamburger:item):
    goal: not unknown(food_hamburger)
    body:
        assert is_food_hamburger(food_hamburger)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_hamburger,fridge_instance)
        else:
            exp(food_hamburger,fridge_instance)
    eff:
        unknown[food_hamburger]=False
        close[food_hamburger,fridge_instance]=True
        close[fridge_instance,food_hamburger]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(item: item, iron: item, ironing_board: item):
    body:
        achieve on(item, ironing_board)
        # Place the clothing item on the ironing board

        achieve is_on(iron)
        # Ensure the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt item

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt item

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron which is already plugged in and turned on

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_clothes(shirt, iron, ironing_board)
        iron_clothes(skirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(clothing:item, iron:item, ironing_board:item):
    body:
        achieve on(clothing, ironing_board)
        # Ensure the clothing is placed on the ironing board
        achieve plugged(iron)
        # Make sure the iron is plugged in
        achieve is_on(iron)
        # Ensure the iron is turned on
        achieve clean(clothing)
        # Iron the clothing until it is clean and wrinklefree

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_clothes(shirt, iron, ironing_board)
        iron_clothes(skirt, iron, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_clothes(clothing:item, iron:item, ironing_board:item):
    body:
        achieve on(clothing, ironing_board)
        # Ensure the clothing is placed on the ironing board
        achieve plugged(iron)
        # Make sure the iron is plugged in
        achieve is_on(iron)
        # Ensure the iron is turned on
        achieve clean(clothing)
        # Iron the clothing until it is clean and wrinklefree

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_clothes(shirt, iron, ironing_board)
        iron_clothes(skirt, iron, ironing_board)

##############################
From agent.py-> find a plan in act()
walk_executor(clothes_shirt_2158)wash_executor(clothes_shirt_2158)walk_executor(clothes_skirt_2160)wash_executor(clothes_skirt_2160)
##############################
From agent.py
walk_executor(clothes_shirt_2158)
Robot is inside dining_room_41. Robot is close ironing_board_2144. Robot is close clothes_shirt_2158. Robot is no longer close clothes_skirt_2160.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 4
##############################
From agent.py
wash_executor(clothes_shirt_2158)
Robot is inside dining_room_41. Robot is close ironing_board_2144. Robot is close clothes_shirt_2158. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 4
##############################
From agent.py
walk_executor(clothes_skirt_2160)
Robot is inside dining_room_41. Robot is close ironing_board_2144. Robot is close clothes_skirt_2160. Robot is no longer close clothes_shirt_2158.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 4
##############################
From agent.py
wash_executor(clothes_skirt_2160)
Robot is inside dining_room_41. Robot is close ironing_board_2144. Robot is close clothes_skirt_2160. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(iron_2161);grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 4
##############################
From agent.py
Human Instruction: The robot needs to actually iron the shirt and the skirt. They have been washed and placed on the ironing board, but the ironing step is missing. Make sure to iron both items until they are clean and wrinkle-free.

The actions you have taken:
Action 1: Walk to dresser_274.
Action 2: Open dresser_274.
Action 3: look for clothes_shirt_2158 around dresser_274.
Action 4: Walk to nightstand_195.
Action 5: Open nightstand_195.
Action 6: look for clothes_shirt_2158 around nightstand_195.
Action 7: Walk to nightstand_192.
Action 8: look for clothes_shirt_2158 around nightstand_192.
Action 9: Walk to sink_120.
Action 10: look for clothes_shirt_2158 around sink_120.
Action 11: Walk to basket_for_clothes_2078.
Action 12: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 13: Observe around clothes_shirt_2158 with the question of Locate the shirt.
Action 14: Observe around clothes_skirt_2160 with the question of Locate the skirt.
Action 15: Walk to ironing_board_2144.
Action 16: look for iron_2161 around ironing_board_2144.
Action 17: Walk to table_270.
Action 18: look for iron_2161 around table_270.
Action 19: Walk to bowl_2142.
Action 20: look for iron_2161 around bowl_2142.
Action 21: Walk to iron_2161.
Action 22: Plug in iron_2161.
Action 23: Switch on iron_2161.
Action 24: Walk to clothes_shirt_2158.
Action 25: Grab clothes_shirt_2158.
Action 26: Walk to ironing_board_2144.
Action 27: Put clothes_shirt_2158 on ironing_board_2144.
Action 28: Walk to clothes_skirt_2160.
Action 29: Grab clothes_skirt_2160.
Action 30: Walk to ironing_board_2144.
Action 31: Put clothes_skirt_2160 on ironing_board_2144.
Action 32: Walk to clothes_shirt_2158.
Action 33: Wash clothes_shirt_2158.
Action 34: Walk to clothes_skirt_2160.
Action 35: Wash clothes_skirt_2160.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2037_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
def has_water_in_iron(iron:item):
    # Check if the iron has water inside, which is needed for steam ironing
    return has_water(iron)

behavior prepare_iron(iron:item):
    body:
        if not has_water_in_iron(iron):
            assert has_switch(iron)
            # Assume the iron has a switch to turn it on
            achieve has_water(iron)
            # Fill the iron with water if its not already filled
        achieve is_on(iron)
        # Turn on the iron

behavior iron_clothes(iron:item, clothes:item, ironing_board:item):
    body:
        achieve on(clothes, ironing_board)
        achieve_once inhand(iron)
        # Temporarily hold the iron
        scrub(clothes)
        # Iron the clothes until they are wrinklefree

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        bind iron: item where:
            is_iron(iron)
        # Select the iron
        
        prepare_iron(iron)
        iron_clothes(iron, shirt, ironing_board)
        iron_clothes(iron, skirt, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def has_water_in_iron(iron:item):
    # Check if the iron has water inside, which is needed for steam ironing
    return has_water(iron)

behavior prepare_iron(iron:item):
    body:
        if not has_water_in_iron(iron):
            assert has_switch(iron)
            # Assume the iron has a switch to turn it on
            achieve has_water(iron)
            # Fill the iron with water if its not already filled
        achieve is_on(iron)
        # Turn on the iron

behavior iron_clothes(iron:item, clothes:item, ironing_board:item):
    body:
        achieve on(clothes, ironing_board)
        achieve_once inhand(iron)
        # Temporarily hold the iron
        scrub(clothes)
        # Iron the clothes until they are wrinklefree

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        bind iron: item where:
            is_iron(iron)
        # Select the iron
        
        prepare_iron(iron)
        iron_clothes(iron, shirt, ironing_board)
        iron_clothes(iron, skirt, ironing_board)

##############################
From agent.py-> find a plan in act()
walk_executor(iron_2161)grab_executor(iron_2161)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(clothes_shirt_2158)scrub_executor(clothes_shirt_2158)walk_executor(clothes_skirt_2160)scrub_executor(clothes_skirt_2160)
##############################
From agent.py
walk_executor(iron_2161)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close bowl_2142. Robot is no longer close clothes_skirt_2160.Robot is no longer close ironing_board_2144.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: grab_executor(iron_2161);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 3
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: grab_executor(iron_2161);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 3
##############################
From agent.py
grab_executor(iron_2161)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close bowl_2142. Grabbing iron_2161 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 2
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 2
##############################
From agent.py
walk_executor(faucet_20)
Find drawing_33. Find mat_32. Find phone_2029. Robot is inside bathroom_1. Robot is close iron_2161. Robot is close bathroom_counter_18. Robot is close faucet_20. Robot is no longer inside dining_room_41.Robot is no longer close bowl_2142.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 2
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 2
##############################
From agent.py
switchon_executor(faucet_20)
Robot is inside bathroom_1. Robot is close iron_2161. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 2
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 2
##############################
From agent.py
switchoff_executor(faucet_20)
Robot is inside bathroom_1. Robot is close iron_2161. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 2
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 2
##############################
From agent.py
walk_executor(clothes_shirt_2158)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close ironing_board_2144. Robot is close clothes_shirt_2158. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_18.Robot is no longer close faucet_20.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: put_executor(iron_2161, clothes_shirt_2158);
missed action num: 1
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 2
##############################
From agent.py
scrub_executor(clothes_shirt_2158)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close ironing_board_2144. Robot is close clothes_shirt_2158. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: put_executor(iron_2161, clothes_shirt_2158);
missed action num: 1
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 2
##############################
From agent.py
walk_executor(clothes_skirt_2160)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close ironing_board_2144. Robot is close clothes_skirt_2160. Robot is no longer close clothes_shirt_2158.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 2
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: put_executor(iron_2161, clothes_skirt_2160);
missed action num: 1
##############################
From agent.py
scrub_executor(clothes_skirt_2160)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close ironing_board_2144. Robot is close clothes_skirt_2160. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 2
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: put_executor(iron_2161, clothes_skirt_2160);
missed action num: 1
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_103_around_bed_197(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==197
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_clothes_on_bed(shirt:item, skirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

        achieve on(skirt, bed)
        # Place the ironed skirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the shirt which is ironed and clean

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the skirt which is ironed and clean

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_ironed_clothes_on_bed(shirt, skirt, bed)
        # Place the ironed shirt and skirt on the bed

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior place_ironed_clothes_on_bed(shirt:item, skirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

        achieve on(skirt, bed)
        # Place the ironed skirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the shirt which is ironed and clean

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the skirt which is ironed and clean

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_ironed_clothes_on_bed(shirt, skirt, bed)
        # Place the ironed shirt and skirt on the bed

##############################
From agent.py-> find a plan in act()
walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)walk_executor(bed_197)put_executor(clothes_skirt_2160, bed_197)
##############################
From agent.py
walk_executor(clothes_shirt_2158)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close ironing_board_2144. Robot is close clothes_shirt_2158. Robot is no longer close clothes_skirt_2160.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: put_executor(iron_2161, clothes_shirt_2158);
missed action num: 1
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 2
##############################
From agent.py
grab_executor(clothes_shirt_2158)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close ironing_board_2144. Robot is close clothes_shirt_2158. Grabbing clothes_shirt_2158 by left hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: put_executor(clothes_shirt_2158, ironing_board_2144);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 2
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 2
##############################
From agent.py
walk_executor(bed_197)
Find clothes_dress_2116. Find clothes_scarf_2120. Find clothes_underwear_2121. Robot is inside bedroom_162. Robot is close iron_2161. Robot is close clothes_shirt_2158. Robot is close bed_197. Robot is no longer inside dining_room_41.Robot is no longer close ironing_board_2144.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 2
##############################
From agent.py
put_executor(clothes_shirt_2158, bed_197)
Robot is inside bedroom_162. Robot is close iron_2161. Robot is close clothes_shirt_2158. Robot is close bed_197. clothes_shirt_2158 released by left hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 5
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 2
##############################
From agent.py
walk_executor(clothes_skirt_2160)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close clothes_skirt_2160. Robot is close ironing_board_2144. Robot is no longer inside bedroom_162.Robot is no longer close bed_197.Robot is no longer close clothes_shirt_2158.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 6
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: put_executor(iron_2161, clothes_skirt_2160);
missed action num: 1
##############################
From agent.py
grab_executor(clothes_skirt_2160)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close clothes_skirt_2160. Robot is close ironing_board_2144. Grabbing clothes_skirt_2160 by left hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(cutting_board_2123);put_executor(clothes_skirt_2160, cutting_board_2123);walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 8
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: put_executor(clothes_skirt_2160, ironing_board_2144);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 2
##############################
From agent.py
walk_executor(bed_197)
Robot is inside bedroom_162. Robot is close iron_2161. Robot is close clothes_skirt_2160. Robot is close bed_197. Robot is no longer inside dining_room_41.Robot is no longer close ironing_board_2144.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(cutting_board_2123);put_executor(clothes_skirt_2160, cutting_board_2123);walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 8
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 4
##############################
From agent.py
put_executor(clothes_skirt_2160, bed_197)
Robot is inside bedroom_162. Robot is close iron_2161. Robot is close clothes_skirt_2160. Robot is close bed_197. clothes_skirt_2160 released by left hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 6
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 5
##############################
From agent.py
Human Instruction: You need to iron the shirt and the skirt. The sub-task requires these clothes to be ironed and placed on the bed, but they were only washed, scrubbed, and placed on the bed without ironing. Ensure both items are ironed before placing them on the bed.

The actions you have taken:
Action 1: Walk to dresser_274.
Action 2: Open dresser_274.
Action 3: look for clothes_shirt_2158 around dresser_274.
Action 4: Walk to nightstand_195.
Action 5: Open nightstand_195.
Action 6: look for clothes_shirt_2158 around nightstand_195.
Action 7: Walk to nightstand_192.
Action 8: look for clothes_shirt_2158 around nightstand_192.
Action 9: Walk to sink_120.
Action 10: look for clothes_shirt_2158 around sink_120.
Action 11: Walk to basket_for_clothes_2078.
Action 12: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 13: Observe around clothes_shirt_2158 with the question of Locate the shirt.
Action 14: Observe around clothes_skirt_2160 with the question of Locate the skirt.
Action 15: Walk to ironing_board_2144.
Action 16: look for iron_2161 around ironing_board_2144.
Action 17: Walk to table_270.
Action 18: look for iron_2161 around table_270.
Action 19: Walk to bowl_2142.
Action 20: look for iron_2161 around bowl_2142.
Action 21: Walk to iron_2161.
Action 22: Plug in iron_2161.
Action 23: Switch on iron_2161.
Action 24: Walk to clothes_shirt_2158.
Action 25: Grab clothes_shirt_2158.
Action 26: Walk to ironing_board_2144.
Action 27: Put clothes_shirt_2158 on ironing_board_2144.
Action 28: Walk to clothes_skirt_2160.
Action 29: Grab clothes_skirt_2160.
Action 30: Walk to ironing_board_2144.
Action 31: Put clothes_skirt_2160 on ironing_board_2144.
Action 32: Walk to clothes_shirt_2158.
Action 33: Wash clothes_shirt_2158.
Action 34: Walk to clothes_skirt_2160.
Action 35: Wash clothes_skirt_2160.
Action 36: Walk to iron_2161.
Action 37: Grab iron_2161.
Action 38: Walk to faucet_20.
Action 39: Switch on faucet_20.
Action 40: Switch off faucet_20.
Action 41: Walk to clothes_shirt_2158.
Action 42: Scrub clothes_shirt_2158.
Action 43: Walk to clothes_skirt_2160.
Action 44: Scrub clothes_skirt_2160.
Action 45: Walk to clothes_shirt_2158.
Action 46: Grab clothes_shirt_2158.
Action 47: Walk to bed_197.
Action 48: Put clothes_shirt_2158 on bed_197.
Action 49: Walk to clothes_skirt_2160.
Action 50: Grab clothes_skirt_2160.
Action 51: Walk to bed_197.
Action 52: Put clothes_skirt_2160 on bed_197.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_287_around_pillow_287(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==287
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_drawing_110_around_drawing_33(drawing:item):
    goal: not unknown(drawing)
    body:
        assert is_drawing(drawing)
        bind drawing_instance:item where:
            is_drawing(drawing_instance) and id[drawing_instance]==33
        achieve close_char(char,drawing_instance)
        if can_open(drawing_instance):
            achieve_once open(drawing_instance)
            exp(drawing,drawing_instance)
        else:
            exp(drawing,drawing_instance)
    eff:
        unknown[drawing]=False
        close[drawing,drawing_instance]=True
        close[drawing_instance,drawing]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_clothes_on_bed(shirt: item, skirt: item, bed: item):
    body:
        achieve on(shirt, bed)
        # Place the shirt on the bed
        achieve on(skirt, bed)
        # Place the skirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select an ironed shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and not dirty(skirt)
        # Select an ironed skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_clothes_on_bed(shirt, skirt, bed)
        # Execute the behavior to place the ironed clothes on the bed
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_286_around_pillow_286(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==286
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
def is_bed_location(bed: item):
    # Function to check if a given item is a bed
    return is_bed(bed)

behavior place_clothes_on_bed(item1: item, item2: item, bed: item):
    body:
        achieve on(item1, bed)
        # Place the first item on the bed

        achieve on(item2, bed)
        # Place the second item on the bed

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and clean(clothes_shirt)
        # Select the shirt and ensure it is ironed (clean)

        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt) and clean(clothes_skirt)
        # Select the skirt and ensure it is ironed (clean)

        bind bed: item where:
            is_bed_location(bed)
        # Select the bed

        place_clothes_on_bed(clothes_shirt, clothes_skirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean, ironed shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the clean, ironed skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        achieve on(shirt, bed)
        # Place the clean shirt on the bed

        achieve on(skirt, bed)
        # Place the clean skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_shirt_and_skirt_placed(placement_location: item):
    # Function to check if both shirt and skirt are placed on a specific location
    symbol placed_shirt=exists o: item : is_clothes_shirt(o) and on(o, placement_location)
    symbol placed_skirt=exists o: item : is_clothes_skirt(o) and on(o, placement_location)
    return placed_shirt and placed_skirt

behavior move_to_bed_and_place(item: item, bed: item):
    body:
        achieve on(item, bed)
        # Place the item on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the item that is a shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the item that is a skirt

        bind bed: item where:
            is_bed(bed)
        # Select a bed as the placement location

        move_to_bed_and_place(shirt, bed)
        # Move the shirt to the bed and place it there

        move_to_bed_and_place(skirt, bed)
        # Move the skirt to the bed and place it there

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_washing_machine_2079(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(towel,washing_machine_instance)
        else:
            exp(towel,washing_machine_instance)
    eff:
        unknown[towel]=False
        close[towel,washing_machine_instance]=True
        close[washing_machine_instance,towel]=True
    

behavior find_clothes_gloves_2118_around_washing_machine_2079(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

behavior find_clothes_hat_2117_around_bench_113(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==113
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(clothes_hat,bench_instance)
        else:
            exp(clothes_hat,bench_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,bench_instance]=True
        close[bench_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_clothes_on_bed(clothes:item, bed:item):
    body:
        achieve on(clothes, bed)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and not dirty(clothes_shirt)
        # Select the ironed shirt

        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt) and not dirty(clothes_skirt)
        # Select the ironed skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_clothes_on_bed(clothes_shirt, bed)
        # Place the ironed shirt on the bed
        
        place_ironed_clothes_on_bed(clothes_skirt, bed)
        # Place the ironed skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_wooden_spoon_2000_around_kitchen_counter_122(wooden_spoon:item):
    goal: not unknown(wooden_spoon)
    body:
        assert is_wooden_spoon(wooden_spoon)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(wooden_spoon,kitchen_counter_instance)
        else:
            exp(wooden_spoon,kitchen_counter_instance)
    eff:
        unknown[wooden_spoon]=False
        close[wooden_spoon,kitchen_counter_instance]=True
        close[kitchen_counter_instance,wooden_spoon]=True
    

behavior find_oil_2149_around_kitchen_counter_122(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(oil,kitchen_counter_instance)
        else:
            exp(oil,kitchen_counter_instance)
    eff:
        unknown[oil]=False
        close[oil,kitchen_counter_instance]=True
        close[kitchen_counter_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
def is_on_bed(item: item):
    # Function to check if an item is on the bed
    symbol on_bed = on(item, bed)
    return on_bed

behavior place_on_bed(item: item, bed: item):
    body:
        achieve on(item, bed)
        # Place the item on the bed
        
behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the clean skirt
        
        bind bed: item where:
            is_bed(bed)
        # Select the bed
        
        if not is_on_bed(shirt):
            place_on_bed(shirt, bed)
        # Place the shirt on the bed if it is not already there
        
        if not is_on_bed(skirt):
            place_on_bed(skirt, bed)
        # Place the skirt on the bed if it is not already there

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Unknown variable: bed; available variables: [Variable<item: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

#goal_representation
 
def is_on_bed(item: item, bed: item):
    # Function to check if an item is on the bed
    symbol on_bed = on(item, bed)
    return on_bed

behavior place_on_bed(item: item, bed: item):
    body:
        achieve on(item, bed)
        # Place the item on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the clean skirt
        
        bind bed: item where:
            is_bed(bed)
        # Select the bed
        
        if not is_on_bed(shirt, bed):
            place_on_bed(shirt, bed)
        # Place the shirt on the bed if it is not already there
        
        if not is_on_bed(skirt, bed):
            place_on_bed(skirt, bed)
        # Place the skirt on the bed if it is not already there

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_207_around_pillow_207(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==207
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_food_apple_2081_around_kitchen_counter_122(food_apple:item):
    goal: not unknown(food_apple)
    body:
        assert is_food_apple(food_apple)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_apple,kitchen_counter_instance)
        else:
            exp(food_apple,kitchen_counter_instance)
    eff:
        unknown[food_apple]=False
        close[food_apple,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_apple]=True
    

#exp_behavior_end

#goal_representation
 
def are_clothes_ironed(clothes_shirt: item, clothes_skirt: item):
    # Function to check if both shirt and skirt are clean, representing they are ironed
    return clean(clothes_shirt) and clean(clothes_skirt)

behavior place_on_bed(item: item, bed: item):
    body:
        achieve on(item, bed)
        # Place the item on the bed

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt)
        # Select the item that is a shirt

        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt)
        # Select the item that is a skirt

        bind bed: item where:
            is_bed(bed)
        # Select the item that is a bed

        if not are_clothes_ironed(clothes_shirt, clothes_skirt):
            observe(clothes_shirt, "Verify if the shirt is clean for ironing status")
            observe(clothes_skirt, "Verify if the skirt is clean for ironing status")

        place_on_bed(clothes_shirt, bed)
        # Place the shirt on the bed

        place_on_bed(clothes_skirt, bed)
        # Place the skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_108_around_pillow_207(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==207
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_chair_2003_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and not dirty(shirt)
        # Select the ironed and clean shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt) and not dirty(skirt)
        # Select the ironed and clean skirt
        
        bind bed: item where:
            is_bed(bed)
        # Select the bed

        achieve on(shirt, bed)
        # Place the shirt on the bed

        achieve on(skirt, bed)
        # Place the skirt on the bed
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_107_around_pillow_208(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==208
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_towel_2128_around_washing_machine_2079(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(towel,washing_machine_instance)
        else:
            exp(towel,washing_machine_instance)
    eff:
        unknown[towel]=False
        close[towel,washing_machine_instance]=True
        close[washing_machine_instance,towel]=True
    

#exp_behavior_end

#goal_representation

behavior __goal__():
    body:
        bind bed: item where:
            is_bed(bed)
        # Select the bed

        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the clean skirt

        achieve on(shirt, bed)
        # Place the shirt on the bed

        achieve on(skirt, bed)
        # Place the skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_bed(bed: item):
    # Function to check if an item is a bed
    return is_bed(bed)

behavior place_on_bed(clothes: item, bed: item):
    body:
        achieve on(clothes, bed)
        # Place the clothes on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select an item that is a clean shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select an item that is a clean skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed in the room
        
        place_on_bed(shirt, bed)
        # Place the shirt on the bed

        place_on_bed(skirt, bed)
        # Place the skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
def is_bed(bed: item):
    # Check if an item is classified as a bed
    return is_bed(bed)

behavior place_on_bed(item: item, bed: item):
    body:
        achieve on(item, bed)  # Place the item on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select item that is a shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select item that is a skirt

        if not clean(shirt):
            observe(shirt, "Ensure the shirt is ironed")
        # Confirm the shirt is ironed if not marked clean

        if not clean(skirt):
            observe(skirt, "Ensure the skirt is ironed")
        # Confirm the skirt is ironed if not marked clean

        bind bed: item where:
            is_bed(bed)
        # Select an item that is a bed

        place_on_bed(shirt, bed)
        # Place the shirt on the bed

        place_on_bed(skirt, bed)
        # Place the skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_gloves_2118_around_washing_machine_2079(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

behavior find_clothes_hat_2117_around_washing_machine_2079(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_hat,washing_machine_instance)
        else:
            exp(clothes_hat,washing_machine_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,washing_machine_instance]=True
        close[washing_machine_instance,clothes_hat]=True
    

behavior find_clothes_jacket_2119_around_washing_machine_2079(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_on_bed(item: item, bed: item):
    body:
        achieve on(item, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the item that is the clean shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the item that is the clean skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_on_bed(shirt, bed)
        # Place the shirt on the bed

        place_on_bed(skirt, bed)
        # Place the skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_286_around_pillow_286(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==286
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

behavior find_clothes_gloves_2118_around_washing_machine_2079(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
behavior check_if_clothes_are_ironed(shirt:item, skirt:item):
    body:
        if not clean(shirt):
            observe(shirt, "Ensure the shirt is ironed")
        if not clean(skirt):
            observe(skirt, "Ensure the skirt is ironed")

behavior place_clothes_on_bed(shirt:item, skirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        achieve on(skirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        check_if_clothes_are_ironed(shirt, skirt)
        # Ensure that both clothes are ironed before placing them on the bed

        place_clothes_on_bed(shirt, skirt, bed)
        # Place the ironed clothes on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_iron(inst: item):
    # Check if the instance is an iron
    return is_iron(inst)

def is_bed(inst: item):
    # Check if the instance is a bed
    return is_bed(inst)

def is_char_close_to(obj: item):
    # Determine if char is close to the specified object
    symbol close = close_char(char, obj)
    return close

behavior place_on_bed(clothes:item, bed:item):
    body:
        achieve on(clothes, bed)
        # Place clothes on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the cleaned shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the cleaned skirt

        bind bed: item where:
            is_bed(bed)
        # Choose the bed as the place to put the clothes

        place_on_bed(shirt, bed)
        place_on_bed(skirt, bed)
        # Place the ironed and cleaned shirt and skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_286_around_pillow_286(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==286
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_laser_pointer_2034_around_computer_276(laser_pointer:item):
    goal: not unknown(laser_pointer)
    body:
        assert is_laser_pointer(laser_pointer)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==276
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(laser_pointer,computer_instance)
        else:
            exp(laser_pointer,computer_instance)
    eff:
        unknown[laser_pointer]=False
        close[laser_pointer,computer_instance]=True
        close[computer_instance,laser_pointer]=True
    

behavior find_food_vegetable_2113_around_kitchen_counter_122(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_vegetable,kitchen_counter_instance)
        else:
            exp(food_vegetable,kitchen_counter_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_vegetable]=True
    

#exp_behavior_end

#goal_representation

def are_clothes_ironed(clothes:item):
    # Function to check if the clothes are ironed
    return clean(clothes)

behavior place_on_bed(clothes:item, bed:item):
    body:
        achieve on(clothes, bed)
        # Place the clothes on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt item

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt item

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        if are_clothes_ironed(shirt) and are_clothes_ironed(skirt):
            place_on_bed(shirt, bed)
            place_on_bed(skirt, bed)
        # Verify both shirt and skirt are ironed, then place them on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_104_around_pillow_208(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==208
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

behavior find_food_chicken_2089_around_fridge_126(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_clothes_on_bed(clothing:item, bed:item):
    body:
        achieve on(clothing, bed)
        # Ensure the clothing item is placed on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and not dirty(shirt)
        # Select the ironed shirt that is clean

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt) and not dirty(skirt)
        # Select the ironed skirt that is clean

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_clothes_on_bed(shirt, bed)
        # Place the shirt on the bed

        place_clothes_on_bed(skirt, bed)
        # Place the skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_208_around_pillow_208(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==208
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_food_cereal_2087_around_kitchen_counter_122(food_cereal:item):
    goal: not unknown(food_cereal)
    body:
        assert is_food_cereal(food_cereal)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_cereal,kitchen_counter_instance)
        else:
            exp(food_cereal,kitchen_counter_instance)
    eff:
        unknown[food_cereal]=False
        close[food_cereal,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_cereal]=True
    

#exp_behavior_end

#goal_representation
 
def has_ironed_clothes_on_bed(bed: item):
    # Check if the ironed clothes (shirt and skirt) are on the bed
    symbol on_bed = exists o: item : (is_clothes_shirt(o) or is_clothes_skirt(o)) and on(o, bed)
    return on_bed

behavior place_ironed_clothes_on_bed(clothes: item, bed: item):
    body:
        achieve on(clothes, bed)
        # Place the clothes on the bed

behavior __goal__():
    body:
        bind bed: item where:
            is_bed(bed)
        # Select the bed

        foreach clothes: item:
            if (is_clothes_shirt(clothes) or is_clothes_skirt(clothes)):
                if not on(clothes, bed):
                    place_ironed_clothes_on_bed(clothes, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_gloves_2118_around_washing_machine_2079(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

behavior find_clothes_jacket_2119_around_bookshelf_196(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==196
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(clothes_jacket,bookshelf_instance)
        else:
            exp(clothes_jacket,bookshelf_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,bookshelf_instance]=True
        close[bookshelf_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation

behavior place_on_bed(clothes:item, bed:item):
    body:
        achieve on(clothes, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the shirt that has been ironed

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the skirt that has been ironed

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_on_bed(shirt, bed)
        # Place the shirt on the bed

        place_on_bed(skirt, bed)
        # Place the skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior ensure_ironed_and_place_on_bed(item: item, bed: item):
    body:
        assert is_clothes(item)
        
        if dirty(item):
            # Ensures the item is ironed by removing the dirty status
            observe(item, "Ensure the item is ironed and not dirty")
        
        achieve on(item, bed)
        # Place the ironed clothing on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        ensure_ironed_and_place_on_bed(shirt, bed)
        # Ensure the shirt is ironed and place it on the bed

        ensure_ironed_and_place_on_bed(skirt, bed)
        # Ensure the skirt is ironed and place it on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_287_around_pillow_287(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==287
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the cleaned shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the cleaned skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        achieve on(shirt, bed)
        # Place the shirt on the bed

        achieve on(skirt, bed)
        # Place the skirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_ironed_clothes_on_bed(shirt:item, skirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed
        achieve on(skirt, bed)
        # Place the ironed skirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the ironed skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_clothes_on_bed(shirt, skirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_clothes_placement_proper(location: item):
    # Function to check if clothes are on the bed
    return is_bed(location)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the cleaned shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the cleaned skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        if is_clothes_placement_proper(bed):
            achieve on(shirt, bed)
            # Place the shirt on the bed

            achieve on(skirt, bed)
            # Place the skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_287_around_pillow_287(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==287
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_soap_2010_around_soap_2010(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind soap_instance:item where:
            is_soap(soap_instance) and id[soap_instance]==2010
        achieve close_char(char,soap_instance)
        if can_open(soap_instance):
            achieve_once open(soap_instance)
            exp(soap,soap_instance)
        else:
            exp(soap,soap_instance)
    eff:
        unknown[soap]=False
        close[soap,soap_instance]=True
        close[soap_instance,soap]=True
    

behavior find_rag_2052_around_washing_machine_2079(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(rag,washing_machine_instance)
        else:
            exp(rag,washing_machine_instance)
    eff:
        unknown[rag]=False
        close[rag,washing_machine_instance]=True
        close[washing_machine_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothes_ironed(item: item):
    # Check whether the clothes are ironed 
    return not dirty(item)

behavior place_on_bed(item: item, bed: item):
    body:
        achieve on(item, bed)
        # Place the item on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and is_clothes_ironed(shirt)
        # Select a shirt that has been ironed

        bind skirt: item where:
            is_clothes_skirt(skirt) and is_clothes_ironed(skirt)
        # Select a skirt that has been ironed
        
        bind bed: item where:
            is_bed(bed)
        # Select the bed
        
        place_on_bed(shirt, bed)
        # Place the shirt on the bed

        place_on_bed(skirt, bed)
        # Place the skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_208_around_pillow_208(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==208
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_chair_271_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

#exp_behavior_end

#goal_representation

behavior place_clothes_on_bed(shirt:item, skirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed
        achieve on(skirt, bed)
        # Place the ironed skirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt item

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt item

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_clothes_on_bed(shirt, skirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_208_around_pillow_208(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==208
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_mat_284_around_mat_284(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind mat_instance:item where:
            is_mat(mat_instance) and id[mat_instance]==284
        achieve close_char(char,mat_instance)
        if can_open(mat_instance):
            achieve_once open(mat_instance)
            exp(mat,mat_instance)
        else:
            exp(mat,mat_instance)
    eff:
        unknown[mat]=False
        close[mat,mat_instance]=True
        close[mat_instance,mat]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the clean skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        achieve on(shirt, bed)
        # Place the shirt on the bed

        achieve on(skirt, bed)
        # Place the skirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_gloves_2118_around_washing_machine_2079(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

behavior find_clothes_hat_2117_around_washing_machine_2079(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_hat,washing_machine_instance)
        else:
            exp(clothes_hat,washing_machine_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,washing_machine_instance]=True
        close[washing_machine_instance,clothes_hat]=True
    

behavior find_clothes_jacket_2119_around_washing_machine_2079(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_on_bed(item: item, bed: item):
    body:
        achieve on(item, bed)

behavior __goal__():
    body:
        bind bed: item where:
            is_bed(bed)
        # Select the bed to place the clothes on

        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the ironed skirt

        put_on_bed(shirt, bed)
        # Place the shirt on the bed

        put_on_bed(skirt, bed)
        # Place the skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_107_around_pillow_208(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==208
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_food_carrot_2015_around_kitchen_counter_122(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_carrot,kitchen_counter_instance)
        else:
            exp(food_carrot,kitchen_counter_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_carrot]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select an item that is a clean shirt
        
        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select an item that is a clean skirt

        bind bed: item where:
            is_bed(bed)
        # Select an item that is a bed

        achieve on(shirt, bed)
        # Place the shirt on the bed

        achieve on(skirt, bed)
        # Place the skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_gloves_2118_around_washing_machine_2079(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

behavior find_clothes_hat_2117_around_washing_machine_2079(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_hat,washing_machine_instance)
        else:
            exp(clothes_hat,washing_machine_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,washing_machine_instance]=True
        close[washing_machine_instance,clothes_hat]=True
    

behavior find_clothes_jacket_2119_around_bookshelf_124(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(clothes_jacket,bookshelf_instance)
        else:
            exp(clothes_jacket,bookshelf_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,bookshelf_instance]=True
        close[bookshelf_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_clothes_on_bed(clothes:item, bed:item):
    body:
        achieve on(clothes, bed)
        # Place the ironed clothes on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the ironed skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_clothes_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

        place_ironed_clothes_on_bed(skirt, bed)
        # Place the ironed skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation

def is_bed(bed: item):
    # Function to check if an item is a bed
    return is_bed(bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the ironed skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        achieve on(shirt, bed)
        # Place the shirt on the bed

        achieve on(skirt, bed)
        # Place the skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_gloves_2118_around_washing_machine_2079(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

behavior find_clothes_jacket_2119_around_washing_machine_2079(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_clothes_on_bed(shirt:item, skirt:item, bed:item):
    body:
        achieve clean(shirt)
        # Ensure the shirt is clean before placing it
        
        achieve clean(skirt)
        # Ensure the skirt is clean before placing it
        
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

        achieve on(skirt, bed)
        # Place the ironed skirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt item
        
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt item
        
        bind bed: item where:
            is_bed(bed)
        # Select the bed item

        place_ironed_clothes_on_bed(shirt, skirt, bed)


#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_103_around_pillow_208(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==208
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_book_2137_around_bookshelf_275(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==275
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_clothes_gloves_2118_around_washing_machine_2079(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

behavior find_lighter_2004_around_kitchen_counter_122(lighter:item):
    goal: not unknown(lighter)
    body:
        assert is_lighter(lighter)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(lighter,kitchen_counter_instance)
        else:
            exp(lighter,kitchen_counter_instance)
    eff:
        unknown[lighter]=False
        close[lighter,kitchen_counter_instance]=True
        close[kitchen_counter_instance,lighter]=True
    

behavior find_clothes_jacket_2119_around_washing_machine_2079(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_on_bed(item:item, bed:item):
    body:
        achieve on(item, bed)
        # Place the item on the bed

behavior ensure_ironed(item:item, iron:item):
    body:
        achieve_once inhand(iron)
        # Temporarily hold the iron to ensure control
        assert is_clothes(item)
        # Ensure the item is clothes
        achieve plugged(iron)
        # Ensure the iron is plugged in
        achieve is_on(iron)
        # Ensure the iron is on
        # Additional ensuring steps can be added as needed to verify the ironing process, though its abstracted here

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt instance

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt instance

        bind bed: item where:
            is_bed(bed)
        # Select a bed instance

        bind iron: item where:
            is_iron(iron)
        # Select the iron instance

        ensure_ironed(shirt, iron)
        # Ensure the shirt is ironed

        ensure_ironed(skirt, iron)
        # Ensure the skirt is ironed

        place_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

        place_on_bed(skirt, bed)
        # Place the ironed skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

behavior find_clothes_gloves_2118_around_washing_machine_2079(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

behavior find_clothes_hat_2117_around_washing_machine_2079(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_hat,washing_machine_instance)
        else:
            exp(clothes_hat,washing_machine_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,washing_machine_instance]=True
        close[washing_machine_instance,clothes_hat]=True
    

behavior find_clothes_jacket_2119_around_washing_machine_2079(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
def are_clothes_ironed(item1:item, item2:item):
    # Function to check if both clothes are clean, which assumes they are ironed
    return clean(item1) and clean(item2)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select an item that is a shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select an item that is a skirt

        bind bed: item where:
            is_bed(bed)
        # Select an item that is a bed

        if are_clothes_ironed(shirt, skirt):
            achieve on(shirt, bed)
            # Place the shirt on the bed
            achieve on(skirt, bed)
            # Place the skirt on the bed

        else:
            # If the shirt and skirt are not ironed, perform necessary actions
            if not clean(shirt):
                observe(shirt, "Check if the shirt is cleaned and ironed")
            if not clean(skirt):
                observe(skirt, "Check if the skirt is cleaned and ironed")

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_286_around_pillow_286(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==286
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_items_on_bed(item1: item, item2: item, bed: item):
    body:
        achieve on(item1, bed)
        achieve on(item2, bed)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt)
        # Select the shirt

        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt)
        # Select the skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_items_on_bed(clothes_shirt, clothes_skirt, bed)
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_shirt_and_skirt_ironed(shirt: item, skirt: item):
    # Function to check if both the shirt and skirt are ironed (clean implies ironed in this context)
    return clean(shirt) and clean(skirt)

behavior place_on_bed(item: item, bed: item):
    body:
        achieve on(item, bed)
        # Place the item on the bed

behavior __goal__():
    body:
        bind bed: item where:
            is_bed(bed)
        # Select the bed

        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        if not is_shirt_and_skirt_ironed(shirt, skirt):
            observe(shirt, "Check if the shirt is clean")
            observe(skirt, "Check if the skirt is clean")
        # Observe the items if they are not known to be clean

        place_on_bed(shirt, bed)
        # Place the shirt on the bed

        place_on_bed(skirt, bed)
        # Place the skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt) and clean(ironed_shirt)
        # Select the shirt that has been ironed and is clean

        bind ironed_skirt: item where:
            is_clothes_skirt(ironed_skirt) and clean(ironed_skirt)
        # Select the skirt that has been ironed and is clean

        bind bed: item where:
            is_bed(bed)
        # Select the bed to place the clothes on

        achieve on(ironed_shirt, bed)
        # Place the ironed shirt on the bed

        achieve on(ironed_skirt, bed)
        # Place the ironed skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_208_around_pillow_208(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==208
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_towel_2128_around_washing_machine_2079(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(towel,washing_machine_instance)
        else:
            exp(towel,washing_machine_instance)
    eff:
        unknown[towel]=False
        close[towel,washing_machine_instance]=True
        close[washing_machine_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
def is_shirt_ironed(shirt: item):
    # Function to check if a shirt is ironed
    symbol ironed_shirt = not dirty(shirt) and is_clothes(shirt)
    return ironed_shirt

def is_skirt_ironed(skirt: item):
    # Function to check if a skirt is ironed
    symbol ironed_skirt = not dirty(skirt) and is_clothes(skirt)
    return ironed_skirt

behavior place_on_bed(item: item, bed: item):
    body:
        achieve on(item, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and is_shirt_ironed(shirt)
        # Select the ironed shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and is_skirt_ironed(skirt)
        # Select the ironed skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed to place the clothes on

        place_on_bed(shirt, bed)
        # Place the shirt on the bed

        place_on_bed(skirt, bed)
        # Place the skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_on_bed(item1:item, item2:item, bed:item):
    body:
        achieve on(item1, bed)
        # Place the first item on the bed
        achieve on(item2, bed)
        # Place the second item on the bed

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and clean(clothes_shirt)
        # Select the clean shirt

        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt) and clean(clothes_skirt)
        # Select the clean skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_on_bed(clothes_shirt, clothes_skirt, bed)
        # Call the behavior to place the ironed shirt and skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_286_around_pillow_286(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==286
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_clothes_gloves_2118_around_washing_machine_2079(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

behavior find_clothes_hat_2117_around_washing_machine_2079(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_hat,washing_machine_instance)
        else:
            exp(clothes_hat,washing_machine_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,washing_machine_instance]=True
        close[washing_machine_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_clothes_on_bed(shirt:item, skirt:item, bed:item):
    body:
        achieve clean(shirt)
        # Ensure the shirt is clean
        achieve clean(skirt)
        # Ensure the skirt is clean
        achieve on(shirt, bed)
        # Place the shirt on the bed
        achieve on(skirt, bed)
        # Place the skirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the shirt that has been ironed and cleaned

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the skirt that has been ironed and cleaned

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_clothes_on_bed(shirt, skirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothes_ironed(cloth: item):
    # Function to check if a cloth is clean, indicating it is ironed
    symbol ironed = clean(cloth)
    return ironed

def is_bed_suitable(bed: item):
    # Function to check if the bed is suitable for placing clothes
    return is_bed(bed)

behavior place_clothes_on_bed(cloth1:item, cloth2:item, bed:item):
    body:
        achieve on(cloth1, bed)
        # Place the first cloth on the bed
        achieve on(cloth2, bed)
        # Place the second cloth on the bed

behavior __goal__():
    body:
        bind clothes_shirt_2158: item where:
            is_clothes_shirt(clothes_shirt_2158) and is_clothes_ironed(clothes_shirt_2158)
        # Select the shirt and verify it is ironed

        bind clothes_skirt_2160: item where:
            is_clothes_skirt(clothes_skirt_2160) and is_clothes_ironed(clothes_skirt_2160)
        # Select the skirt and verify it is ironed

        bind bed_197: item where:
            is_bed(bed_197) and is_bed_suitable(bed_197)
        # Select the bed

        place_clothes_on_bed(clothes_shirt_2158, clothes_skirt_2160, bed_197)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_ironed_and_on_bed(clothes:item, bed:item):
    # Function to check if the clothes are ironed and on the bed
    symbol ironed_on_bed=clean(clothes) and on(clothes, bed)
    return ironed_on_bed

behavior place_ironed_clothes_on_bed(clothes:item, bed:item):
    body:
        achieve clean(clothes)
        achieve on(clothes, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt for the task
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt for the task
        bind bed: item where:
            is_bed(bed)
        # Select the bed for placing the clothes

        if not is_ironed_and_on_bed(shirt, bed):
            place_ironed_clothes_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

        if not is_ironed_and_on_bed(skirt, bed):
            place_ironed_clothes_on_bed(skirt, bed)
        # Place the ironed skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the shirt that is clean

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the skirt that is clean

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        achieve on(shirt, bed)
        # Place the clean shirt on the bed

        achieve on(skirt, bed)
        # Place the clean skirt on the bed
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_108_around_pillow_208(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==208
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_chair_194_around_chair_194(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==194
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

behavior find_table_cloth_2005_around_table_199(table_cloth:item):
    goal: not unknown(table_cloth)
    body:
        assert is_table_cloth(table_cloth)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==199
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(table_cloth,table_instance)
        else:
            exp(table_cloth,table_instance)
    eff:
        unknown[table_cloth]=False
        close[table_cloth,table_instance]=True
        close[table_instance,table_cloth]=True
    

#exp_behavior_end

#goal_representation
behavior place_clothes_on_bed(clothes: item, bed: item):
    body:
        achieve on(clothes, bed)
        # Place the item on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_clothes_on_bed(shirt, bed)
        # Place the shirt on the bed

        place_clothes_on_bed(skirt, bed)
        # Place the skirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

behavior find_table_cloth_2005_around_table_199(table_cloth:item):
    goal: not unknown(table_cloth)
    body:
        assert is_table_cloth(table_cloth)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==199
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(table_cloth,table_instance)
        else:
            exp(table_cloth,table_instance)
    eff:
        unknown[table_cloth]=False
        close[table_cloth,table_instance]=True
        close[table_instance,table_cloth]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothes_ironed(clothes: item):
    # Function to check if clothes have been ironed
    exists ironed_item: item: inside(ironed_item, bed) and is_clothes(ironed_item)
    return is_clothes(ironed_item)

behavior place_on_bed(ironed_clothes: item, bed: item):
    # Behavior to place ironed clothes on the bed
    body:
        achieve on(ironed_clothes, bed)
        # Place the ironed clothes on the bed

behavior __goal__():
    # Main behavior to achieve the goal of placing ironed clothes on the bed
    body:
        bind bed: item where:
            is_bed(bed)
        # Select the bed

        foreach clothes: item:
            if is_clothes(clothes):
                place_on_bed(clothes, bed)
        # For each piece of clothing that has been ironed, place it on the bed

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Unknown variable: bed; available variables: [Variable<clothes: item>, Variable<ironed_item: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_gloves_2118_around_washing_machine_2079(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

behavior find_clothes_hat_2117_around_washing_machine_2079(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_hat,washing_machine_instance)
        else:
            exp(clothes_hat,washing_machine_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,washing_machine_instance]=True
        close[washing_machine_instance,clothes_hat]=True
    

behavior find_clothes_jacket_2119_around_washing_machine_2079(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

#goal_representation
 
def is_clothes_ironed(clothes: item):
    # Function to check if clothes have been ironed
    exists ironed_item: item: inside(ironed_item, bed) and is_clothes(ironed_item)
    return is_clothes(ironed_item)

behavior place_on_bed(ironed_clothes: item, bed: item):
    # Behavior to place ironed clothes on the bed
    body:
        achieve on(ironed_clothes, bed)
        # Place the ironed clothes on the bed

behavior __goal__():
    # Main behavior to achieve the goal of placing ironed clothes on the bed
    body:
        bind bed: item where:
            is_bed(bed)
        # Select the bed

        foreach clothes: item:
            if is_clothes(clothes):
                place_on_bed(clothes, bed)
        # For each piece of clothing that has been ironed, place it on the bed

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Unknown variable: bed; available variables: [Variable<clothes: item>, Variable<ironed_item: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_gloves_2118_around_washing_machine_2079(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

behavior find_clothes_hat_2117_around_washing_machine_2079(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_hat,washing_machine_instance)
        else:
            exp(clothes_hat,washing_machine_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,washing_machine_instance]=True
        close[washing_machine_instance,clothes_hat]=True
    

behavior find_clothes_jacket_2119_around_washing_machine_2079(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

#goal_representation
 
def is_clothes_ironed(clothes: item):
    # Function to check if clothes have been ironed
    exists ironed_item: item: inside(ironed_item, bed) and is_clothes(ironed_item)
    return is_clothes(ironed_item)

behavior place_on_bed(ironed_clothes: item, bed: item):
    # Behavior to place ironed clothes on the bed
    body:
        achieve on(ironed_clothes, bed)
        # Place the ironed clothes on the bed

behavior __goal__():
    # Main behavior to achieve the goal of placing ironed clothes on the bed
    body:
        bind bed: item where:
            is_bed(bed)
        # Select the bed

        foreach clothes: item:
            if is_clothes(clothes):
                place_on_bed(clothes, bed)
        # For each piece of clothing that has been ironed, place it on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_ironed_clothes_on_bed(clothes_shirt:item, clothes_skirt:item, bed:item):
    body:
        achieve on(clothes_shirt, bed)
        # Place the ironed shirt on the bed
        achieve on(clothes_skirt, bed)
        # Place the ironed skirt on the bed

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and not dirty(clothes_shirt)
        # Select the ironed shirt

        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt) and not dirty(clothes_skirt)
        # Select the ironed skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_clothes_on_bed(clothes_shirt, clothes_skirt, bed)
        # Call the behavior to place the ironed clothes on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothes_ironed(item: item):
    # Function to check if clothes have been ironed
    return exists iron: item: is_iron(iron) and not dirty(item)

behavior place_on_bed(item: item, bed: item):
    body:
        achieve on(item, bed)
        # Place the item on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and is_clothes_ironed(shirt)
        # Select a shirt that has been ironed

        bind skirt: item where:
            is_clothes_skirt(skirt) and is_clothes_ironed(skirt)
        # Select a skirt that has been ironed

        bind bed: item where:
            is_bed(bed)
        # Select the bed to place the clothes on

        place_on_bed(shirt, bed)
        # Place the ironed shirt on the bed
        
        place_on_bed(skirt, bed)
        # Place the ironed skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_clean_clothes_on_bed(clean_clothes:item, bed:item):
    body:
        achieve on(clean_clothes, bed)
        # Place the clean clothes on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the clean skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_clean_clothes_on_bed(shirt, bed)
        # Place the clean shirt on the bed

        place_clean_clothes_on_bed(skirt, bed)
        # Place the clean skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_ironed(clothes: item):
    # Function to check if clothes are ironed
    return is_clothes(clothes) and not dirty(clothes)

behavior place_ironed_clothes_on_bed(clothes:item, bed:item):
    body:
        achieve on(clothes, bed)
        # Place the clothes on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and is_ironed(shirt)
        # Select the ironed shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and is_ironed(skirt)
        # Select the ironed skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_clothes_on_bed(shirt, bed)
        place_ironed_clothes_on_bed(skirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_106_around_pillow_208(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==208
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_clothes_on_bed(clothes:item, bed:item):
    body:
        achieve on(clothes, bed)
        # Place the specified clothing item on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the item that is a shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the item that is a skirt

        bind bed: item where:
            is_bed(bed)
        # Select the item that is a bed

        place_clothes_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

        place_clothes_on_bed(skirt, bed)
        # Place the ironed skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_clothes_ironed(clothes: item):
    # Function to check if both the shirt and skirt are clean, meaning they have been ironed
    return is_clothes_shirt(clothes) or is_clothes_skirt(clothes) and clean(clothes)

behavior place_clothes_on_bed(shirt: item, skirt: item, bed: item):
    body:
        achieve on(shirt, bed)
        achieve on(skirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the cleaned shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the cleaned skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_clothes_on_bed(shirt, skirt, bed)
        # Place both the shirt and skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_107_around_pillow_208(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==208
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt) and clean(ironed_shirt)
        # Select the ironed shirt

        bind ironed_skirt: item where:
            is_clothes_skirt(ironed_skirt) and clean(ironed_skirt)
        # Select the ironed skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        achieve on(ironed_shirt, bed)
        # Place the ironed shirt on the bed

        achieve on(ironed_skirt, bed)
        # Place the ironed skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

behavior find_drawing_201_around_drawing_201(drawing:item):
    goal: not unknown(drawing)
    body:
        assert is_drawing(drawing)
        bind drawing_instance:item where:
            is_drawing(drawing_instance) and id[drawing_instance]==201
        achieve close_char(char,drawing_instance)
        if can_open(drawing_instance):
            achieve_once open(drawing_instance)
            exp(drawing,drawing_instance)
        else:
            exp(drawing,drawing_instance)
    eff:
        unknown[drawing]=False
        close[drawing,drawing_instance]=True
        close[drawing_instance,drawing]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothes_ironed(clothes:item):
    # Checks if the clothes are ironed and clean
    symbol ironed_and_clean = not dirty(clothes) and is_clothes(clothes)
    return ironed_and_clean

behavior place_on_bed(item:item, bed:item):
    body:
        achieve on(item, bed)
        # Place the item on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and is_clothes_ironed(shirt)
        # Select an ironed and clean shirt
        
        bind skirt: item where:
            is_clothes_skirt(skirt) and is_clothes_ironed(skirt)
        # Select an ironed and clean skirt

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

        place_on_bed(skirt, bed)
        # Place the ironed skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

behavior find_rag_2025_around_washing_machine_2079(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(rag,washing_machine_instance)
        else:
            exp(rag,washing_machine_instance)
    eff:
        unknown[rag]=False
        close[rag,washing_machine_instance]=True
        close[washing_machine_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_on_bed(shirt:item, skirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the shirt on the bed
        achieve on(skirt, bed)
        # Place the skirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the ironed skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_on_bed(shirt, skirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_gloves_2118_around_washing_machine_2079(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

behavior find_clothes_hat_2117_around_washing_machine_2079(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_hat,washing_machine_instance)
        else:
            exp(clothes_hat,washing_machine_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,washing_machine_instance]=True
        close[washing_machine_instance,clothes_hat]=True
    

behavior find_clothes_jacket_2119_around_washing_machine_2079(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
def is_on_bed(item: item, bed: item):
    # Checks if the item is on the bed
    return on(item, bed)

behavior place_item_on_bed(item: item, bed: item):
    body:
        achieve on(item, bed)
        # Place the item on the bed

behavior iron_clothes_if_not_ironed(clothes_shirt:item, clothes_skirt:item, iron:item):
    body:
        if dirty(clothes_shirt):
            scrub(clothes_shirt)
        achieve clean(clothes_shirt)
    
        if dirty(clothes_skirt):
            scrub(clothes_skirt)
        achieve clean(clothes_skirt)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt)
        # Select the item that is clothes_shirt
        
        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt)
        # Select the item that is clothes_skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_clothes_if_not_ironed(clothes_shirt, clothes_skirt, iron)
        # Iron the clothes if they are not already ironed

        if not is_on_bed(clothes_shirt, bed):
            place_item_on_bed(clothes_shirt, bed)
        # Place the shirt on the bed if its not already there
        
        if not is_on_bed(clothes_skirt, bed):
            place_item_on_bed(clothes_skirt, bed)
        # Place the skirt on the bed if its not already there

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
def are_clothes_ironed(shirt: item, skirt: item):
    # Function to check if both the shirt and skirt are ironed
    symbol ironed_clothes = is_clean(shirt) and is_clean(skirt)
    return ironed_clothes

behavior place_clothes_on_bed(shirt: item, skirt: item, bed: item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed
        achieve on(skirt, bed)
        # Place the ironed skirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Bind the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Bind the skirt

        if not are_clothes_ironed(shirt, skirt):
            observe(shirt, "Ensure the shirt is ironed")
            # Observe the shirt to ensure its ironed
            observe(skirt, "Ensure the skirt is ironed")
            # Observe the skirt to ensure its ironed
        
        bind bed: item where:
            is_bed(bed)
        # Bind the bed

        place_clothes_on_bed(shirt, skirt, bed)
        # Call behavior to place both clothes on the bed

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

'Function is_clean not found. Note that recursive function calls are not supported in the current version.'
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_pillow_106_around_pillow_207(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==207
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_towel_2128_around_washing_machine_2079(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(towel,washing_machine_instance)
        else:
            exp(towel,washing_machine_instance)
    eff:
        unknown[towel]=False
        close[towel,washing_machine_instance]=True
        close[washing_machine_instance,towel]=True
    

#goal_representation
 
def are_clothes_ironed(shirt: item, skirt: item):
    # Function to check if both the shirt and skirt are ironed
    symbol ironed_clothes = is_cleaning_solution(shirt) and is_cleaning_solution(skirt)
    return ironed_clothes

behavior place_clothes_on_bed(shirt: item, skirt: item, bed: item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed
        achieve on(skirt, bed)
        # Place the ironed skirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Bind the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Bind the skirt

        if not are_clothes_ironed(shirt, skirt):
            observe(shirt, "Ensure the shirt is ironed")
            # Observe the shirt to ensure its ironed
            observe(skirt, "Ensure the skirt is ironed")
            # Observe the skirt to ensure its ironed

        bind bed: item where:
            is_bed(bed)
        # Bind the bed

        place_clothes_on_bed(shirt, skirt, bed)
        # Call behavior to place both clothes on the bed

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def are_clothes_ironed(shirt: item, skirt: item):
    # Function to check if both the shirt and skirt are ironed
    symbol ironed_clothes = is_cleaning_solution(shirt) and is_cleaning_solution(skirt)
    return ironed_clothes

behavior place_clothes_on_bed(shirt: item, skirt: item, bed: item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed
        achieve on(skirt, bed)
        # Place the ironed skirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Bind the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Bind the skirt

        if not are_clothes_ironed(shirt, skirt):
            observe(shirt, "Ensure the shirt is ironed")
            # Observe the shirt to ensure its ironed
            observe(skirt, "Ensure the skirt is ironed")
            # Observe the skirt to ensure its ironed

        bind bed: item where:
            is_bed(bed)
        # Bind the bed

        place_clothes_on_bed(shirt, skirt, bed)
        # Call behavior to place both clothes on the bed

##############################
From agent.py-> find a plan in act()
walk_executor(clothes_shirt_2158)obs(clothes_shirt_2158, Ensure the shirt is ironed)walk_executor(clothes_skirt_2160)obs(clothes_skirt_2160, Ensure the skirt is ironed)
##############################
From agent.py
walk_executor(clothes_shirt_2158)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close bed_197. Robot is close clothes_shirt_2158. Robot is no longer inside bedroom_162.Robot is no longer close clothes_skirt_2160.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 5
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 6
##############################
From agent.py
obs(clothes_shirt_2158, Ensure the shirt is ironed)
Get this information:  clothes_shirt_2158 is close to bed_197. clothes_shirt_2158 is close to character_240. clothes_shirt_2158 is inside dining_room_41. clothes_shirt_2158 is on bed_197. clothes_shirt_2158 is CLEAN.
##############################
From agent.py
walk_executor(clothes_skirt_2160)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close bed_197. Robot is close clothes_skirt_2160. Robot is no longer close clothes_shirt_2158.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 6
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 5
##############################
From agent.py
obs(clothes_skirt_2160, Ensure the skirt is ironed)
Get this information:  clothes_skirt_2160 is close to bed_197. clothes_skirt_2160 is close to character_240. clothes_skirt_2160 is inside dining_room_41. clothes_skirt_2160 is on bed_197. clothes_skirt_2160 is CLEAN.
##############################
From agent.py
Human Instruction: The shirt and the skirt need to be ironed before placing them on the bed as specified in the instructions. You have cleaned and placed both items on the bed, but the ironing step is missing. Please ensure that both items are ironed and then placed on the bed.

The actions you have taken:
Action 1: Walk to dresser_274.
Action 2: Open dresser_274.
Action 3: look for clothes_shirt_2158 around dresser_274.
Action 4: Walk to nightstand_195.
Action 5: Open nightstand_195.
Action 6: look for clothes_shirt_2158 around nightstand_195.
Action 7: Walk to nightstand_192.
Action 8: look for clothes_shirt_2158 around nightstand_192.
Action 9: Walk to sink_120.
Action 10: look for clothes_shirt_2158 around sink_120.
Action 11: Walk to basket_for_clothes_2078.
Action 12: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 13: Observe around clothes_shirt_2158 with the question of Locate the shirt.
Action 14: Observe around clothes_skirt_2160 with the question of Locate the skirt.
Action 15: Walk to ironing_board_2144.
Action 16: look for iron_2161 around ironing_board_2144.
Action 17: Walk to table_270.
Action 18: look for iron_2161 around table_270.
Action 19: Walk to bowl_2142.
Action 20: look for iron_2161 around bowl_2142.
Action 21: Walk to iron_2161.
Action 22: Plug in iron_2161.
Action 23: Switch on iron_2161.
Action 24: Walk to clothes_shirt_2158.
Action 25: Grab clothes_shirt_2158.
Action 26: Walk to ironing_board_2144.
Action 27: Put clothes_shirt_2158 on ironing_board_2144.
Action 28: Walk to clothes_skirt_2160.
Action 29: Grab clothes_skirt_2160.
Action 30: Walk to ironing_board_2144.
Action 31: Put clothes_skirt_2160 on ironing_board_2144.
Action 32: Walk to clothes_shirt_2158.
Action 33: Wash clothes_shirt_2158.
Action 34: Walk to clothes_skirt_2160.
Action 35: Wash clothes_skirt_2160.
Action 36: Walk to iron_2161.
Action 37: Grab iron_2161.
Action 38: Walk to faucet_20.
Action 39: Switch on faucet_20.
Action 40: Switch off faucet_20.
Action 41: Walk to clothes_shirt_2158.
Action 42: Scrub clothes_shirt_2158.
Action 43: Walk to clothes_skirt_2160.
Action 44: Scrub clothes_skirt_2160.
Action 45: Walk to clothes_shirt_2158.
Action 46: Grab clothes_shirt_2158.
Action 47: Walk to bed_197.
Action 48: Put clothes_shirt_2158 on bed_197.
Action 49: Walk to clothes_skirt_2160.
Action 50: Grab clothes_skirt_2160.
Action 51: Walk to bed_197.
Action 52: Put clothes_skirt_2160 on bed_197.
Action 53: Walk to clothes_shirt_2158.
Action 54: Observe around clothes_shirt_2158 with the question of Ensure the shirt is ironed.
Action 55: Walk to clothes_skirt_2160.
Action 56: Observe around clothes_skirt_2160 with the question of Ensure the skirt is ironed.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior place_ironed_clothes_on_bed(shirt: item, skirt: item, bed: item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed
        achieve on(skirt, bed)
        # Place the ironed skirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean and ironed shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the clean and ironed skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_clothes_on_bed(shirt, skirt, bed)
        # Place both the shirt and skirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_gloves_2118_around_washing_machine_2079(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

behavior find_clothes_jacket_2119_around_washing_machine_2079(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

behavior find_food_apple_2081_around_fridge_126(food_apple:item):
    goal: not unknown(food_apple)
    body:
        assert is_food_apple(food_apple)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_apple,fridge_instance)
        else:
            exp(food_apple,fridge_instance)
    eff:
        unknown[food_apple]=False
        close[food_apple,fridge_instance]=True
        close[fridge_instance,food_apple]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_clothes_on_bed(clothes: item, bed: item):
    body:
        achieve on(clothes, bed)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and clean(clothes_shirt) and not dirty(clothes_shirt)
        # Select a shirt that is clean and not dirty

        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt) and clean(clothes_skirt) and not dirty(clothes_skirt)
        # Select a skirt that is clean and not dirty

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_clothes_on_bed(clothes_shirt, bed)
        # Place the shirt on the bed

        place_clothes_on_bed(clothes_skirt, bed)
        # Place the skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def ensure_item_ironed(item: item):
    # Function to ensure that an item is ironed
    symbol item_ironed = visited(item)
    return item_ironed

behavior place_item_on_bed(item: item, bed: item):
    body:
        if not ensure_item_ironed(item):
            observe(item, "Ensure the item is ironed")
        achieve on(item, bed)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt)
        # Select the shirt

        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt)
        # Select the skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_item_on_bed(clothes_shirt, bed)
        # Place the shirt on the bed

        place_item_on_bed(clothes_skirt, bed)
        # Place the skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_gloves_2118_around_washing_machine_2079(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

behavior find_clothes_hat_2117_around_bench_113(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==113
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(clothes_hat,bench_instance)
        else:
            exp(clothes_hat,bench_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,bench_instance]=True
        close[bench_instance,clothes_hat]=True
    

behavior find_towel_2128_around_washing_machine_2079(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(towel,washing_machine_instance)
        else:
            exp(towel,washing_machine_instance)
    eff:
        unknown[towel]=False
        close[towel,washing_machine_instance]=True
        close[washing_machine_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_on_bed(item: item, bed: item):
    body:
        achieve on(item, bed)

behavior verify_is_ironed(clothing: item):
    body:
        observe(clothing, "Ensure the item is ironed")

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the ironed shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the ironed skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        verify_is_ironed(shirt)
        verify_is_ironed(skirt)
        place_on_bed(shirt, bed)
        place_on_bed(skirt, bed)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior place_on_bed(item: item, bed: item):
    body:
        achieve on(item, bed)

behavior verify_is_ironed(clothing: item):
    body:
        observe(clothing, "Ensure the item is ironed")

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the ironed shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the ironed skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        verify_is_ironed(shirt)
        verify_is_ironed(skirt)
        place_on_bed(shirt, bed)
        place_on_bed(skirt, bed)

##############################
From agent.py-> find a plan in act()
walk_executor(clothes_shirt_2158)obs(clothes_shirt_2158, Ensure the item is ironed)walk_executor(clothes_skirt_2160)obs(clothes_skirt_2160, Ensure the item is ironed)
##############################
From agent.py
walk_executor(clothes_shirt_2158)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close bed_197. Robot is close clothes_shirt_2158. Robot is no longer close clothes_skirt_2160.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 5
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: walk_executor(clothes_skirt_2160);grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 6
##############################
From agent.py
obs(clothes_shirt_2158, Ensure the item is ironed)
Get this information:  clothes_shirt_2158 is close to bed_197. clothes_shirt_2158 is close to character_240. clothes_shirt_2158 is inside dining_room_41. clothes_shirt_2158 is on bed_197. clothes_shirt_2158 is CLEAN.
##############################
From agent.py
walk_executor(clothes_skirt_2160)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close bed_197. Robot is close clothes_skirt_2160. Robot is no longer close clothes_shirt_2158.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 6
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 5
##############################
From agent.py
obs(clothes_skirt_2160, Ensure the item is ironed)
Get this information:  clothes_skirt_2160 is close to bed_197. clothes_skirt_2160 is close to character_240. clothes_skirt_2160 is inside dining_room_41. clothes_skirt_2160 is on bed_197. clothes_skirt_2160 is CLEAN.
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 6
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 5
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k1
missed actions: walk_executor(clothes_shirt_2158);grab_executor(clothes_shirt_2158);walk_executor(ironing_board_2144);put_executor(clothes_shirt_2158, ironing_board_2144);walk_executor(clothes_shirt_2158);put_executor(iron_2161, clothes_shirt_2158);
missed action num: 6
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k2
missed actions: grab_executor(clothes_skirt_2160);walk_executor(ironing_board_2144);put_executor(clothes_skirt_2160, ironing_board_2144);walk_executor(clothes_skirt_2160);put_executor(iron_2161, clothes_skirt_2160);
missed action num: 5
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k3
missed actions: 
missed action num: 0
##############################
From evaluation.py
cdl_dataset/dataset/Iron_clothes/g6.txt
Checking k4
missed actions: 
missed action num: 0
##############################
