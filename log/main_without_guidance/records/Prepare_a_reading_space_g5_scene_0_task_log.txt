From agent.py
Reset goals: The sub-goals are: 
['1. Find the spectacles and put them on the coffee table in the home office.', '2. Find the book and put it on the coffee table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_food_2022_around_fridge_289(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_food,fridge_instance)
        else:
            exp(food_food,fridge_instance)
    eff:
        unknown[food_food]=False
        close[food_food,fridge_instance]=True
        close[fridge_instance,food_food]=True
    

behavior find_spectacles_2082_around_coffee_table_2068(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind coffee_table_instance:item where:
            is_coffee_table(coffee_table_instance) and id[coffee_table_instance]==2068
        achieve close_char(char,coffee_table_instance)
        if can_open(coffee_table_instance):
            achieve_once open(coffee_table_instance)
            exp(spectacles,coffee_table_instance)
        else:
            exp(spectacles,coffee_table_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,coffee_table_instance]=True
        close[coffee_table_instance,spectacles]=True
    

#exp_behavior_end

#goal_representation
 
def locate_home_office_coffee_table():
    # Define a function to check if there is a coffee table in the home office
    symbol home_office_coffee_table = exists table: item : is_coffee_table(table) and exists room: item : is_home_office(room) and inside(table, room)
    return home_office_coffee_table

def on_coffee_table(obj: item, coffee_table: item):
    # Function to check whether the object is on the coffee table
    symbol is_on_table = on(obj, coffee_table)
    return is_on_table

behavior place_on_coffee_table(obj: item, coffee_table: item):
    body:
        achieve on(obj, coffee_table) # Place the object on the coffee table

behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles) and not visited(spectacles)
        observe(spectacles, "Locate the spectacles")
        # Observe to locate the spectacles

        if locate_home_office_coffee_table():
            bind home_office_table: item where:
                is_coffee_table(home_office_table) and exists room: item : is_home_office(room) and inside(home_office_table, room)
            # Find the coffee table in the home office

            if not on_coffee_table(spectacles, home_office_table):
                place_on_coffee_table(spectacles, home_office_table)
                # Place spectacles on the coffee table in the home office

        else:
            # If the coffee table is not found, observe to locate one
            foreach table: item:
                if is_coffee_table(table) and not visited(table):
                    observe(table, "Find coffee tables in the home office")

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'room') at line 5841, column 94.
Expected one of: 
	* SEMICOLON
	* _NEWLINE

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_spectacles_2082_around_coffee_table_2068(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind coffee_table_instance:item where:
            is_coffee_table(coffee_table_instance) and id[coffee_table_instance]==2068
        achieve close_char(char,coffee_table_instance)
        if can_open(coffee_table_instance):
            achieve_once open(coffee_table_instance)
            exp(spectacles,coffee_table_instance)
        else:
            exp(spectacles,coffee_table_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,coffee_table_instance]=True
        close[coffee_table_instance,spectacles]=True
    

#goal_representation
 
def locate_home_office_coffee_table():
    # Define a function to check if there is a coffee table in the home office
    symbol home_office_coffee_table = exists table: item : is_coffee_table(table) and exists room: item : is_home_office(room) and inside(table, room)
    return home_office_coffee_table

def on_coffee_table(obj: item, coffee_table: item):
    # Function to check whether the object is on the coffee table
    symbol is_on_table = on(obj, coffee_table)
    return is_on_table

behavior place_on_coffee_table(obj: item, coffee_table: item):
    body:
        achieve on(obj, coffee_table) # Place the object on the coffee table

behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles) and not visited(spectacles)
        observe(spectacles, "Locate the spectacles")
        # Observe to locate the spectacles

        if locate_home_office_coffee_table():
            bind home_office_table: item where:
                is_coffee_table(home_office_table) and exists room: item : is_home_office(room) and inside(home_office_table, room)
            # Find the coffee table in the home office

            if not on_coffee_table(spectacles, home_office_table):
                place_on_coffee_table(spectacles, home_office_table)
                # Place spectacles on the coffee table in the home office

        else:
            # If the coffee table is not found, observe to locate one
            foreach table: item:
                if is_coffee_table(table) and not visited(table):
                    observe(table, "Find coffee tables in the home office")

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'room') at line 5823, column 94.
Expected one of: 
	* SEMICOLON
	* _NEWLINE

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_spectacles_2082_around_coffee_table_2068(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind coffee_table_instance:item where:
            is_coffee_table(coffee_table_instance) and id[coffee_table_instance]==2068
        achieve close_char(char,coffee_table_instance)
        if can_open(coffee_table_instance):
            achieve_once open(coffee_table_instance)
            exp(spectacles,coffee_table_instance)
        else:
            exp(spectacles,coffee_table_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,coffee_table_instance]=True
        close[coffee_table_instance,spectacles]=True
    

behavior find_chair_106_around_couch_352(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==352
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(chair,couch_instance)
        else:
            exp(chair,couch_instance)
    eff:
        unknown[chair]=False
        close[chair,couch_instance]=True
        close[couch_instance,chair]=True
    

#goal_representation
 
def locate_home_office_coffee_table():
    # Define a function to check if there is a coffee table in the home office
    symbol home_office_coffee_table = exists table: item : is_coffee_table(table) and inside(table, room) and exists room: item : is_home_office(room)
    return home_office_coffee_table

def on_coffee_table(obj: item, coffee_table: item):
    # Function to check whether the object is on the coffee table
    symbol is_on_table = on(obj, coffee_table)
    return is_on_table

behavior place_on_coffee_table(obj: item, coffee_table: item):
    body:
        achieve on(obj, coffee_table) # Place the object on the coffee table

behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles) and not visited(spectacles)
        observe(spectacles, "Locate the spectacles")
        # Observe to locate the spectacles

        if locate_home_office_coffee_table():
            bind home_office_table: item where:
                is_coffee_table(home_office_table) and exists room: item : is_home_office(room) and inside(home_office_table, room)
            # Find the coffee table in the home office

            if not on_coffee_table(spectacles, home_office_table):
                place_on_coffee_table(spectacles, home_office_table)
                # Place spectacles on the coffee table in the home office

        else:
            # If the coffee table is not found, observe to locate one
            foreach table: item:
                if is_coffee_table(table) and not visited(table):
                    observe(table, "Find coffee tables in the home office")

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_remote_control_2052_around_coffee_table_2068(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind coffee_table_instance:item where:
            is_coffee_table(coffee_table_instance) and id[coffee_table_instance]==2068
        achieve close_char(char,coffee_table_instance)
        if can_open(coffee_table_instance):
            achieve_once open(coffee_table_instance)
            exp(remote_control,coffee_table_instance)
        else:
            exp(remote_control,coffee_table_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,coffee_table_instance]=True
        close[coffee_table_instance,remote_control]=True
    

behavior find_spectacles_2082_around_coffee_table_2068(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind coffee_table_instance:item where:
            is_coffee_table(coffee_table_instance) and id[coffee_table_instance]==2068
        achieve close_char(char,coffee_table_instance)
        if can_open(coffee_table_instance):
            achieve_once open(coffee_table_instance)
            exp(spectacles,coffee_table_instance)
        else:
            exp(spectacles,coffee_table_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,coffee_table_instance]=True
        close[coffee_table_instance,spectacles]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_spectacles_on_table(spectacles: item, table: item, office: item):
    body:
        achieve inside(spectacles, office) # Ensure spectacles are in the home office
        achieve on(spectacles, table) # Place spectacles on the coffee table

behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles)
        # Identify the spectacles
        bind table: item where:
            is_coffee_table(table)
        # Identify the coffee table
        bind office: item where:
            is_home_office(office)
        # Identify the home office
        place_spectacles_on_table(spectacles, table, office)
        # Place the spectacles on the coffee table in the home office
 
#goal_representation_end

##############################
From agent.py->reset_goal
Failed to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Find the spectacles and put them on the coffee table in the home office.', '2. Find the book and put it on the coffee table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_spectacles_2082_around_coffee_table_2068(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind coffee_table_instance:item where:
            is_coffee_table(coffee_table_instance) and id[coffee_table_instance]==2068
        achieve close_char(char,coffee_table_instance)
        if can_open(coffee_table_instance):
            achieve_once open(coffee_table_instance)
            exp(spectacles,coffee_table_instance)
        else:
            exp(spectacles,coffee_table_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,coffee_table_instance]=True
        close[coffee_table_instance,spectacles]=True
    

#exp_behavior_end

#goal_representation
 
def is_home_office_space(item: item):
    # Define a function to check if an item is in the home office
    return is_home_office(item) or (exists room: item: is_home_office(room) and inside(item, room))

behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select spectacles

        bind coffee_table: item where:
            is_coffee_table(coffee_table) and is_home_office_space(coffee_table)
        # Select the coffee table in the home office

        if not visited(spectacles):
            observe(spectacles, "Check where the spectacles are")
        # Observe the spectacles location if they havent been visited

        achieve on(spectacles, coffee_table)
        # Move the spectacles onto the coffee table in the home office

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_home_office_space(item: item):
    # Define a function to check if an item is in the home office
    return is_home_office(item) or (exists room: item: is_home_office(room) and inside(item, room))

behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select spectacles

        bind coffee_table: item where:
            is_coffee_table(coffee_table) and is_home_office_space(coffee_table)
        # Select the coffee table in the home office

        if not visited(spectacles):
            observe(spectacles, "Check where the spectacles are")
        # Observe the spectacles location if they havent been visited

        achieve on(spectacles, coffee_table)
        # Move the spectacles onto the coffee table in the home office

##############################
From agent.py-> find a plan in act()
walk_executor(coffee_table_2068)exp(spectacles_2082, coffee_table_2068)walk_executor(spectacles_2082)obs(spectacles_2082, Check where the spectacles are)grab_executor(spectacles_2082)walk_executor(coffee_table_2068)put_executor(spectacles_2082, coffee_table_2068)
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot is inside home_office_319. Robot is close coffee_table_2068. Robot is no longer inside bathroom_1.
##############################
From agent.py
exp(spectacles_2082, coffee_table_2068)
Find spectacles_2082. 
##############################
From agent.py-> find a plan in act()
walk_executor(spectacles_2082)obs(spectacles_2082, Check where the spectacles are)grab_executor(spectacles_2082)walk_executor(coffee_table_2068)put_executor(spectacles_2082, coffee_table_2068)
##############################
From agent.py
walk_executor(spectacles_2082)
Robot is inside home_office_319. Robot is close spectacles_2082. Robot is close table_355. Robot is no longer close coffee_table_2068.
##############################
From agent.py
obs(spectacles_2082, Check where the spectacles are)
Get this information:  spectacles_2082 is close to table_355. spectacles_2082 is close to character_65. spectacles_2082 is inside home_office_319. spectacles_2082 is on table_355.
##############################
From agent.py
grab_executor(spectacles_2082)
Robot is inside home_office_319. Robot is close spectacles_2082. Robot is close table_355. Grabbing spectacles_2082 by right hand. 
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot is inside home_office_319. Robot is close spectacles_2082. Robot is close coffee_table_2068. Robot is no longer close table_355.
##############################
From agent.py
put_executor(spectacles_2082, coffee_table_2068)
Robot is inside home_office_319. Robot is close spectacles_2082. Robot is close coffee_table_2068. spectacles_2082 released by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_peanut_butter_2033_around_cupboard_229(food_peanut_butter:item):
    goal: not unknown(food_peanut_butter)
    body:
        assert is_food_peanut_butter(food_peanut_butter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==229
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_peanut_butter,cupboard_instance)
        else:
            exp(food_peanut_butter,cupboard_instance)
    eff:
        unknown[food_peanut_butter]=False
        close[food_peanut_butter,cupboard_instance]=True
        close[cupboard_instance,food_peanut_butter]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select an item that is a book

        bind coffee_table: item where:
            is_coffee_table(coffee_table)
        # Select an item that is a coffee table

        bind home_office: item where:
            is_home_office(home_office)
        # Select an item that is a home office

        observe(home_office, "Check if the coffee table is inside the home office")
        # Observe to confirm if the coffee table is in the home office

        achieve on(book, coffee_table)
        # Place the book on the coffee table

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select an item that is a book

        bind coffee_table: item where:
            is_coffee_table(coffee_table)
        # Select an item that is a coffee table

        bind home_office: item where:
            is_home_office(home_office)
        # Select an item that is a home office

        observe(home_office, "Check if the coffee table is inside the home office")
        # Observe to confirm if the coffee table is in the home office

        achieve on(book, coffee_table)
        # Place the book on the coffee table

##############################
From agent.py-> find a plan in act()
walk_executor(home_office_319)obs(home_office_319, Check if the coffee table is inside the home office)walk_executor(book_2066)grab_executor(book_2066)walk_executor(coffee_table_2068)put_executor(book_2066, coffee_table_2068)
##############################
From agent.py
walk_executor(home_office_319)
Robot is inside home_office_319. Robot is no longer close spectacles_2082.Robot is no longer close coffee_table_2068.
##############################
From agent.py
obs(home_office_319, Check if the coffee table is inside the home office)
Get this information:  ceilinglamp_349 is inside home_office_319. vacuum_cleaner_2070 is inside home_office_319. computer_417 is inside home_office_319. ceiling_341 is inside home_office_319. couch_352 is inside home_office_319. wall_330 is inside home_office_319. headset_2062 is inside home_office_319. curtain_409 is inside home_office_319. floor_322 is inside home_office_319. wall_333 is inside home_office_319. closetdrawer_382 is inside home_office_319. ceiling_344 is inside home_office_319. mat_401 is inside home_office_319. powersocket_412 is inside home_office_319. hanger_363 is inside home_office_319. hanger_374 is inside home_office_319. floor_325 is inside home_office_319. wall_336 is inside home_office_319. drawing_404 is inside home_office_319. table_355 is inside home_office_319. coffee_table_2068 is inside home_office_319. keyboard_415 is inside home_office_319. closetdrawer_377 is inside home_office_319. headset_2076 is inside home_office_319. floor_328 is inside home_office_319. ceiling_339 is inside home_office_319. curtain_407 is inside home_office_319. hanger_369 is inside home_office_319. doorjamb_347 is inside home_office_319. dresser_358 is inside home_office_319. wall_331 is inside home_office_319. floor_320 is inside home_office_319. closetdrawer_388 is inside home_office_319. walllamp_350 is inside home_office_319. remote_control_2052 is inside home_office_319. doorjamb_346 is between home_office_319. filing_cabinet_399 is inside home_office_319. television_410 is inside home_office_319. hanger_361 is inside home_office_319. spectacles_2082 is inside home_office_319. floor_323 is inside home_office_319. closetdrawer_380 is inside home_office_319. drawing_402 is inside home_office_319. tvstand_353 is inside home_office_319. ceiling_342 is inside home_office_319. hanger_372 is inside home_office_319. ceiling_345 is inside home_office_319. wall_334 is inside home_office_319. cat_2055 is inside home_office_319. clothes_jacket_2047 is inside home_office_319. closetdrawer_394 is inside home_office_319. floor_326 is inside home_office_319. home_office_319 is close to coffee_table_2068. chair_356 is inside home_office_319. book_2066 is inside home_office_319. phone_2077 is inside home_office_319. mouse_413 is inside home_office_319. hanger_375 is inside home_office_319. pencil_2001 is inside home_office_319. window_348 is inside home_office_319. ceiling_337 is inside home_office_319. cpuscreen_416 is inside home_office_319. pillow_405 is inside home_office_319. hanger_367 is inside home_office_319. wall_329 is inside home_office_319. ceiling_340 is inside home_office_319. hanger_359 is inside home_office_319. dvd_player_2061 is inside home_office_319. curtain_408 is inside home_office_319. floor_321 is inside home_office_319. wall_332 is inside home_office_319. drawing_400 is inside home_office_319. walllamp_351 is inside home_office_319. photoframe_430 is inside home_office_319. floor_324 is inside home_office_319. light_411 is inside home_office_319. ceiling_343 is inside home_office_319. wall_335 is inside home_office_319. closetdrawer_392 is inside home_office_319. drawing_403 is inside home_office_319. bookshelf_354 is inside home_office_319. hanger_365 is inside home_office_319. floor_327 is inside home_office_319. character_65 is inside home_office_319. closetdrawer_384 is inside home_office_319. doorjamb_346 is inside home_office_319. desk_357 is inside home_office_319. book_2067 is inside home_office_319. mousepad_414 is inside home_office_319. hanger_376 is inside home_office_319. pillow_406 is inside home_office_319. ceiling_338 is inside home_office_319. hairbrush_2002 is inside home_office_319. home_office_319 is CLEAN.
##############################
From agent.py
walk_executor(book_2066)
Robot is inside home_office_319. Robot is close book_2066. Robot is close bookshelf_354. 
##############################
From agent.py
grab_executor(book_2066)
Find drawing_241. Find drawing_242. Find drawing_243. Robot is inside home_office_319. Robot is close book_2066. Robot is close bookshelf_354. Grabbing book_2066 by right hand. 
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot is inside home_office_319. Robot is close book_2066. Robot is close coffee_table_2068. Robot is no longer close bookshelf_354.
##############################
From agent.py
put_executor(book_2066, coffee_table_2068)
Robot is inside home_office_319. Robot is close book_2066. Robot is close coffee_table_2068. book_2066 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g5.txt
Checking k1
missed actions: 
missed action num: 0
##############################
