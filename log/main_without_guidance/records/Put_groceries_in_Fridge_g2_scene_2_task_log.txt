From agent.py
Reset goals: The sub-goals are: 
['1. Wash the fish.', '2. Put the milk, turkey, eggs, fish, and chicken on the table in the dining room.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_fish_2054_around_freezer_140(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind freezer_instance:item where:
            is_freezer(freezer_instance) and id[freezer_instance]==140
        achieve close_char(char,freezer_instance)
        if can_open(freezer_instance):
            achieve_once open(freezer_instance)
            exp(food_fish,freezer_instance)
        else:
            exp(food_fish,freezer_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,freezer_instance]=True
        close[freezer_instance,food_fish]=True
    

#exp_behavior_end

#goal_representation
 
def is_dirty_fish(fish: item):
    # Function to check if the fish is dirty
    return dirty(fish)

behavior wash_the_fish(fish: item):
    body:
        wash(fish)
        # Wash the fish to ensure its clean

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        # Select the fish item

        if is_dirty_fish(fish):
            wash_the_fish(fish)
        # If the fish is dirty, wash it to achieve cleanliness

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_fish_2054_around_freezer_140(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind freezer_instance:item where:
            is_freezer(freezer_instance) and id[freezer_instance]==140
        achieve close_char(char,freezer_instance)
        if can_open(freezer_instance):
            achieve_once open(freezer_instance)
            exp(food_fish,freezer_instance)
        else:
            exp(food_fish,freezer_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,freezer_instance]=True
        close[freezer_instance,food_fish]=True
    

#exp_behavior_end

#goal_representation

behavior wash_the_fish(fish:item):
    body:
        achieve clean(fish)
        # This behavior ensures the fish is washed and clean

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        # Select an item that is fish

        wash_the_fish(fish)
        # Execute the washing behavior for the fish

#goal_representation_end

##############################
From agent.py->reset_goal

behavior wash_the_fish(fish:item):
    body:
        achieve clean(fish)
        # This behavior ensures the fish is washed and clean

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        # Select an item that is fish

        wash_the_fish(fish)
        # Execute the washing behavior for the fish

##############################
From agent.py-> find a plan in act()
walk_executor(freezer_140)switchoff_executor(freezer_140)open_executor(freezer_140)exp(food_fish_2054, freezer_140)walk_executor(food_fish_2054)wash_executor(food_fish_2054)
##############################
From agent.py
walk_executor(freezer_140)
Find food_cereal_2048. Find food_cheese_2049. Find food_chicken_2050. Find food_dessert_2051. Find food_donut_2052. Find food_egg_2053. Find food_fish_2054. Find food_food_2055. Find food_fruit_2056. Find food_hamburger_2057. Find food_ice_cream_2058. Find food_jam_2059. Find food_kiwi_2060. Find food_lemon_2061. Find food_noodles_2062. Find food_oatmeal_2063. Find food_peanut_butter_2064. Find food_pizza_2065. Find food_potato_2066. Find food_rice_2067. Find food_salt_2068. Find food_snack_2069. Find food_sugar_2070. Find food_turkey_2071. Find food_vegetable_2072. Find dry_pasta_2073. Find milk_2074. Find sauce_2101. Find food_steak_2042. Find food_apple_2043. Find food_bacon_2044. Find food_banana_2045. Find food_cake_2046. Find food_carrot_2047. Find chair_138. Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close freezer_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Robot is no longer inside home_office_161.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: switchoff_executor(freezer_140);open_executor(freezer_140);grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 5
##############################
From agent.py
switchoff_executor(freezer_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close freezer_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: open_executor(freezer_140);grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 4
##############################
From agent.py
open_executor(freezer_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close freezer_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 3
##############################
From agent.py
exp(food_fish_2054, freezer_140)
Find food_fish_2054. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Wash the fish.', '2. Put the milk, turkey, eggs, fish, and chicken on the table in the dining room.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_napkin_2014_around_sink_307(napkin:item):
    goal: not unknown(napkin)
    body:
        assert is_napkin(napkin)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(napkin,sink_instance)
        else:
            exp(napkin,sink_instance)
    eff:
        unknown[napkin]=False
        close[napkin,sink_instance]=True
        close[sink_instance,napkin]=True
    

behavior find_soap_2038_around_bathroom_cabinet_305(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_towel_2083_around_bathroom_cabinet_305(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

behavior find_cleaning_solution_2098_around_bathroom_cabinet_305(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

behavior find_detergent_2108_around_washing_machine_2041(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_fish(fish: item):
    body:
        assert dirty(fish)
        # Ensure the fish is dirty before proceeding
        
        wash(fish)
        # Wash the fish

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        # Select an item that is a fish

        wash_fish(fish)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2037_around_bathroom_cabinet_305(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_towel_2083_around_sink_307(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(towel,sink_instance)
        else:
            exp(towel,sink_instance)
    eff:
        unknown[towel]=False
        close[towel,sink_instance]=True
        close[sink_instance,towel]=True
    

behavior find_cleaning_solution_2098_around_bathroom_cabinet_305(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
behavior wash_fish(fish:item):
    body:
        achieve clean(fish)
        # Ensure the fish is clean

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        # Select the fish

        if not visited(fish):
            observe(fish, "Locate the fish and determine if it is clean")
        # Observe the fish location if it hasnt been visited

        wash_fish(fish)
        # Call the behavior to wash the fish and ensure it is clean
#goal_representation_end

##############################
From agent.py->reset_goal
behavior wash_fish(fish:item):
    body:
        achieve clean(fish)
        # Ensure the fish is clean

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        # Select the fish

        if not visited(fish):
            observe(fish, "Locate the fish and determine if it is clean")
        # Observe the fish location if it hasnt been visited

        wash_fish(fish)
        # Call the behavior to wash the fish and ensure it is clean
##############################
From agent.py-> find a plan in act()
obs(food_fish_2054, Locate the fish and determine if it is clean)
##############################
From agent.py
obs(food_fish_2054, Locate the fish and determine if it is clean)
Get this information:  food_fish_2054 is close to freezer_140. food_fish_2054 is close to character_219. food_fish_2054 is inside dining_room_1. food_fish_2054 is inside freezer_140. food_fish_2054 is CLEAN.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_tray_142_around_kitchen_counter_129(tray:item):
    goal: not unknown(tray)
    body:
        assert is_tray(tray)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(tray,kitchen_counter_instance)
        else:
            exp(tray,kitchen_counter_instance)
    eff:
        unknown[tray]=False
        close[tray,kitchen_counter_instance]=True
        close[kitchen_counter_instance,tray]=True
    

behavior find_food_bread_2016_around_cupboard_130(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_bread,cupboard_instance)
        else:
            exp(food_bread,cupboard_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,cupboard_instance]=True
        close[cupboard_instance,food_bread]=True
    

behavior find_fryingpan_2107_around_kitchen_counter_132(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

behavior find_plate_2105_around_table_123(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==123
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(plate,table_instance)
        else:
            exp(plate,table_instance)
    eff:
        unknown[plate]=False
        close[plate,table_instance]=True
        close[table_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
def locate_dining_room_table(table: item):
    # Function to check if a table is in the dining room
    symbol in_dining_room = exists room: item : is_dining_room(room) and inside(table, room)
    return in_dining_room

behavior place_item_on_table(item: item, table: item):
    body:
        achieve on(item, table)
        # Ensure the item is on the table

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk item

        bind turkey: item where:
            is_food_turkey(turkey)
        # Select the turkey item

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg item

        bind fish: item where:
            is_food_fish(fish)
        # Select the fish item

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken item

        bind table: item where:
            is_table(table) and locate_dining_room_table(table)
        # Select a table in the dining room

        place_item_on_table(milk, table)
        # Place the milk on the table in the dining room

        place_item_on_table(turkey, table)
        # Place the turkey on the table in the dining room

        place_item_on_table(egg, table)
        # Place the egg on the table in the dining room

        place_item_on_table(fish, table)
        # Place the fish on the table in the dining room

        place_item_on_table(chicken, table)
        # Place the chicken on the table in the dining room

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def locate_dining_room_table(table: item):
    # Function to check if a table is in the dining room
    symbol in_dining_room = exists room: item : is_dining_room(room) and inside(table, room)
    return in_dining_room

behavior place_item_on_table(item: item, table: item):
    body:
        achieve on(item, table)
        # Ensure the item is on the table

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk item

        bind turkey: item where:
            is_food_turkey(turkey)
        # Select the turkey item

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg item

        bind fish: item where:
            is_food_fish(fish)
        # Select the fish item

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken item

        bind table: item where:
            is_table(table) and locate_dining_room_table(table)
        # Select a table in the dining room

        place_item_on_table(milk, table)
        # Place the milk on the table in the dining room

        place_item_on_table(turkey, table)
        # Place the turkey on the table in the dining room

        place_item_on_table(egg, table)
        # Place the egg on the table in the dining room

        place_item_on_table(fish, table)
        # Place the fish on the table in the dining room

        place_item_on_table(chicken, table)
        # Place the chicken on the table in the dining room

##############################
From agent.py-> find a plan in act()
grab_executor(milk_2074)walk_executor(table_123)put_executor(milk_2074, table_123)walk_executor(food_turkey_2071)grab_executor(food_turkey_2071)walk_executor(table_123)put_executor(food_turkey_2071, table_123)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(table_123)put_executor(food_egg_2053, table_123)walk_executor(food_fish_2054)grab_executor(food_fish_2054)walk_executor(table_123)put_executor(food_fish_2054, table_123)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(table_123)put_executor(food_chicken_2050, table_123)
##############################
From agent.py
grab_executor(milk_2074)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close freezer_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Grabbing milk_2074 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 3
##############################
From agent.py
walk_executor(table_123)
Find mat_114. Find shoes_2001. Find drawing_118. Find fork_2103. Find cup_2087. Find cup_2088. Find bowl_2095. Find mouse_2003. Find homework_2011. Find laptop_2015. Robot is inside dining_room_1. Robot is close milk_2074. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer close food_cereal_2048.Robot is no longer close food_cheese_2049.Robot is no longer close food_chicken_2050.Robot is no longer close food_dessert_2051.Robot is no longer close food_donut_2052.Robot is no longer close food_egg_2053.Robot is no longer close food_fish_2054.Robot is no longer close food_food_2055.Robot is no longer close food_fruit_2056.Robot is no longer close food_hamburger_2057.Robot is no longer close food_ice_cream_2058.Robot is no longer close food_jam_2059.Robot is no longer close food_kiwi_2060.Robot is no longer close food_lemon_2061.Robot is no longer close food_noodles_2062.Robot is no longer close food_oatmeal_2063.Robot is no longer close food_peanut_butter_2064.Robot is no longer close food_pizza_2065.Robot is no longer close food_potato_2066.Robot is no longer close food_rice_2067.Robot is no longer close food_salt_2068.Robot is no longer close food_snack_2069.Robot is no longer close food_sugar_2070.Robot is no longer close food_turkey_2071.Robot is no longer close food_vegetable_2072.Robot is no longer close dry_pasta_2073.Robot is no longer close floor_22.Robot is no longer close sauce_2101.Robot is no longer close freezer_140.Robot is no longer close food_steak_2042.Robot is no longer close food_apple_2043.Robot is no longer close food_bacon_2044.Robot is no longer close food_banana_2045.Robot is no longer close food_cake_2046.Robot is no longer close food_carrot_2047.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2054);grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 4
##############################
From agent.py
put_executor(milk_2074, table_123)
Robot is inside dining_room_1. Robot is close milk_2074. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. milk_2074 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2054);grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 4
##############################
From agent.py
walk_executor(food_turkey_2071)
Robot is inside dining_room_1. Robot is close freezer_140. Robot is close food_turkey_2071. Robot is no longer close floor_17.Robot is no longer close milk_2074.Robot is no longer close table_123.Robot is no longer close mat_114.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2054);grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 4
##############################
From agent.py
grab_executor(food_turkey_2071)
Robot is inside dining_room_1. Robot is close freezer_140. Robot is close food_turkey_2071. Grabbing food_turkey_2071 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2054);grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 4
##############################
From agent.py
walk_executor(table_123)
Robot is inside dining_room_1. Robot is close food_turkey_2071. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer close freezer_140.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2054);grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 4
##############################
From agent.py
put_executor(food_turkey_2071, table_123)
Robot is inside dining_room_1. Robot is close food_turkey_2071. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. food_turkey_2071 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2054);grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 4
##############################
From agent.py
walk_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close freezer_140. Robot is close food_egg_2053. Robot is no longer close floor_17.Robot is no longer close mat_114.Robot is no longer close table_123.Robot is no longer close food_turkey_2071.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2054);grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 4
##############################
From agent.py
grab_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close freezer_140. Robot is close food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2054);grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 4
##############################
From agent.py
walk_executor(table_123)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer close freezer_140.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2054);grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 4
##############################
From agent.py
put_executor(food_egg_2053, table_123)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. food_egg_2053 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2054);grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 4
##############################
From agent.py
walk_executor(food_fish_2054)
Robot is inside dining_room_1. Robot is close freezer_140. Robot is close food_fish_2054. Robot is no longer close floor_17.Robot is no longer close mat_114.Robot is no longer close table_123.Robot is no longer close food_egg_2053.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 3
##############################
From agent.py
grab_executor(food_fish_2054)
Robot is inside dining_room_1. Robot is close freezer_140. Robot is close food_fish_2054. Grabbing food_fish_2054 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 2
##############################
From agent.py
walk_executor(table_123)
Robot is inside dining_room_1. Robot is close food_fish_2054. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer close freezer_140.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 2
##############################
From agent.py
put_executor(food_fish_2054, table_123)
Robot is inside dining_room_1. Robot is close food_fish_2054. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. food_fish_2054 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 3
##############################
From agent.py
walk_executor(food_chicken_2050)
Robot is inside dining_room_1. Robot is close food_chicken_2050. Robot is close freezer_140. Robot is no longer close floor_17.Robot is no longer close mat_114.Robot is no longer close table_123.Robot is no longer close food_fish_2054.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2054);grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 4
##############################
From agent.py
grab_executor(food_chicken_2050)
Robot is inside dining_room_1. Robot is close food_chicken_2050. Robot is close freezer_140. Grabbing food_chicken_2050 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2054);grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 4
##############################
From agent.py
walk_executor(table_123)
Robot is inside dining_room_1. Robot is close food_chicken_2050. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer close freezer_140.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2054);grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 4
##############################
From agent.py
put_executor(food_chicken_2050, table_123)
Robot is inside dining_room_1. Robot is close food_chicken_2050. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. food_chicken_2050 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2054);grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2054);grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2054);grab_executor(food_fish_2054);walk_executor(sink_133);putin_executor(food_fish_2054, sink_133);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k2
missed actions: 
missed action num: 0
##############################
