From agent.py
Reset goals: The sub-goals are: 
['Turn on the lights in the bedroom, then turn on the lights in the bathroom.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_rack_298_around_bathroom_counter_306(towel_rack:item):
    goal: not unknown(towel_rack)
    body:
        assert is_towel_rack(towel_rack)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(towel_rack,bathroom_counter_instance)
        else:
            exp(towel_rack,bathroom_counter_instance)
    eff:
        unknown[towel_rack]=False
        close[towel_rack,bathroom_counter_instance]=True
        close[bathroom_counter_instance,towel_rack]=True
    

behavior find_towel_2083_around_bathroom_cabinet_305(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

behavior find_soap_2038_around_bathroom_cabinet_305(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
def is_bedroom_light_in_room(light: item):
    # Function to check if a light is in the bedroom
    symbol in_bedroom=exists room: item : is_bedroom(room) and inside(light, room)
    return in_bedroom

def is_bathroom_light_in_room(light: item):
    # Function to check if a light is in the bathroom
    symbol in_bathroom=exists room: item : is_bathroom(room) and inside(light, room)
    return in_bathroom

behavior turn_on_light(light: item):
    body:
        achieve is_on(light) # Turn the light on

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and is_bedroom_light_in_room(bedroom_light) and is_off(bedroom_light)
        # Select an off light in the bedroom and turn it on
        turn_on_light(bedroom_light)

        bind bathroom_light: item where:
            is_light(bathroom_light) and is_bathroom_light_in_room(bathroom_light) and is_off(bathroom_light)
        # Select an off light in the bathroom and turn it on
        turn_on_light(bathroom_light)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_bedroom_light_in_room(light: item):
    # Function to check if a light is in the bedroom
    symbol in_bedroom=exists room: item : is_bedroom(room) and inside(light, room)
    return in_bedroom

def is_bathroom_light_in_room(light: item):
    # Function to check if a light is in the bathroom
    symbol in_bathroom=exists room: item : is_bathroom(room) and inside(light, room)
    return in_bathroom

behavior turn_on_light(light: item):
    body:
        achieve is_on(light) # Turn the light on

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and is_bedroom_light_in_room(bedroom_light) and is_off(bedroom_light)
        # Select an off light in the bedroom and turn it on
        turn_on_light(bedroom_light)

        bind bathroom_light: item where:
            is_light(bathroom_light) and is_bathroom_light_in_room(bathroom_light) and is_off(bathroom_light)
        # Select an off light in the bathroom and turn it on
        turn_on_light(bathroom_light)

##############################
From agent.py-> find a plan in act()
walk_executor(light_258)switchon_executor(light_258)walk_executor(light_325)switchon_executor(light_325)
##############################
From agent.py
walk_executor(light_258)
Find drawing_238. Robot is inside bedroom_220. Robot is close light_258. Robot is no longer inside home_office_161.
##############################
From agent.py
switchon_executor(light_258)
Find pillow_195. Find drawing_196. Robot is inside bedroom_220. Robot is close light_258. 
##############################
From agent.py
walk_executor(light_325)
Find mat_292. Find drawing_296. Robot is inside bathroom_265. Robot is close light_325. Robot is no longer inside bedroom_220.Robot is no longer close light_258.
##############################
From agent.py
switchon_executor(light_325)
Robot is inside bathroom_265. Robot is close light_325. 
##############################
From evaluation.py
cdl_dataset/dataset/Turn_on_light/g2.txt
Checking k1
missed actions: 
missed action num: 0
##############################
