From agent.py
Reset goals: The sub-goals are: 
['1. Find and clean the chicken and the onion.', '2. Place the chicken and onion in the oven to roast.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2032_around_cupboard_229(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==229
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_onion,cupboard_instance)
        else:
            exp(food_onion,cupboard_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,cupboard_instance]=True
        close[cupboard_instance,food_onion]=True
    

behavior find_food_chicken_2017_around_cupboard_229(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==229
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_chicken,cupboard_instance)
        else:
            exp(food_chicken,cupboard_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,cupboard_instance]=True
        close[cupboard_instance,food_chicken]=True
    

behavior find_knife_2050_around_fridge_289(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(knife,fridge_instance)
        else:
            exp(knife,fridge_instance)
    eff:
        unknown[knife]=False
        close[knife,fridge_instance]=True
        close[fridge_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_clean_chicken_and_onion(chicken:item, onion:item):
    body:
        observe(chicken, "Locate the chicken and check its cleanliness")
        # Observe the chicken to determine its location and cleanliness

        if dirty(chicken):
            wash(chicken)
            # Wash the chicken if it is dirty
        
        observe(onion, "Locate the onion and check if it is dirty")
        # Observe the onion to determine its location and cleanliness

        if dirty(onion):
            wash(onion)
            # Wash the onion if it is dirty

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select an item that is a chicken

        bind onion: item where:
            is_food_onion(onion)
        # Select an item that is an onion

        find_and_clean_chicken_and_onion(chicken, onion)
        # Call the behavior to find and clean the chicken and onion

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_and_clean_chicken_and_onion(chicken:item, onion:item):
    body:
        observe(chicken, "Locate the chicken and check its cleanliness")
        # Observe the chicken to determine its location and cleanliness

        if dirty(chicken):
            wash(chicken)
            # Wash the chicken if it is dirty
        
        observe(onion, "Locate the onion and check if it is dirty")
        # Observe the onion to determine its location and cleanliness

        if dirty(onion):
            wash(onion)
            # Wash the onion if it is dirty

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select an item that is a chicken

        bind onion: item where:
            is_food_onion(onion)
        # Select an item that is an onion

        find_and_clean_chicken_and_onion(chicken, onion)
        # Call the behavior to find and clean the chicken and onion

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_229)open_executor(cupboard_229)exp(food_chicken_2017, cupboard_229)walk_executor(food_chicken_2017)obs(food_chicken_2017, Locate the chicken and check its cleanliness)walk_executor(cupboard_229)exp(food_onion_2032, cupboard_229)walk_executor(food_onion_2032)obs(food_onion_2032, Locate the onion and check if it is dirty)
##############################
From agent.py
walk_executor(cupboard_229)
Find tray_296. Robot is inside dining_room_201. Robot is close wall_211. Robot is close cupboard_229. Robot is no longer inside bathroom_1.
##############################
From agent.py
open_executor(cupboard_229)
Robot is inside dining_room_201. Robot is close wall_211. Robot is close cupboard_229. 
##############################
From agent.py
exp(food_chicken_2017, cupboard_229)
Failed to find food_chicken_2017 around cupboard_229. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_chicken_2017, fridge_289)walk_executor(food_chicken_2017)obs(food_chicken_2017, Locate the chicken and check its cleanliness)walk_executor(kitchen_counter_230)exp(food_onion_2032, kitchen_counter_230)walk_executor(food_onion_2032)obs(food_onion_2032, Locate the onion and check if it is dirty)
##############################
From agent.py
walk_executor(fridge_289)
Find sauce_2078. Find food_steak_2008. Find food_apple_2009. Find food_bacon_2010. Find food_banana_2011. Find food_bread_2012. Find food_cake_2013. Find food_carrot_2014. Find food_cereal_2015. Find food_cheese_2016. Find food_chicken_2017. Find food_dessert_2018. Find food_donut_2019. Find food_egg_2020. Find food_fish_2021. Find food_food_2022. Find food_fruit_2023. Find food_hamburger_2024. Find food_ice_cream_2025. Find food_jam_2026. Find food_kiwi_2027. Find food_lemon_2028. Find food_noodles_2029. Find food_oatmeal_2030. Find food_orange_2031. Find food_onion_2032. Find food_peanut_butter_2033. Find food_pizza_2034. Find food_potato_2035. Find food_rice_2036. Find food_salt_2037. Find food_snack_2038. Find food_sugar_2039. Find food_turkey_2040. Find food_vegetable_2041. Find dry_pasta_2042. Find milk_2043. Find drawing_239. Find drawing_240. Robot is inside dining_room_201. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. Robot is no longer close wall_211.Robot is no longer close cupboard_229.
##############################
From agent.py
switchoff_executor(fridge_289)
Find mat_22. Find drawing_174. Robot is inside dining_room_201. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. 
##############################
From agent.py
open_executor(fridge_289)
Robot is inside dining_room_201. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. 
##############################
From agent.py
exp(food_chicken_2017, fridge_289)
Find food_chicken_2017. 
##############################
From agent.py-> find a plan in act()
obs(food_chicken_2017, Locate the chicken and check its cleanliness)obs(food_onion_2032, Locate the onion and check if it is dirty)
##############################
From agent.py
obs(food_chicken_2017, Locate the chicken and check its cleanliness)
Get this information:  food_chicken_2017 is close to fridge_289. food_chicken_2017 is close to character_65. food_chicken_2017 is inside fridge_289. food_chicken_2017 is inside dining_room_201. food_chicken_2017 is CLEAN.
##############################
From agent.py
obs(food_onion_2032, Locate the onion and check if it is dirty)
Get this information:  food_onion_2032 is inside fridge_289. food_onion_2032 is inside dining_room_201. food_onion_2032 is close to fridge_289. food_onion_2032 is close to character_65. food_onion_2032 is CLEAN.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2050_around_kitchen_counter_230(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(knife,kitchen_counter_instance)
        else:
            exp(knife,kitchen_counter_instance)
    eff:
        unknown[knife]=False
        close[knife,kitchen_counter_instance]=True
        close[kitchen_counter_instance,knife]=True
    

behavior find_cutting_board_2051_around_kitchen_counter_230(cutting_board:item):
    goal: not unknown(cutting_board)
    body:
        assert is_cutting_board(cutting_board)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cutting_board,kitchen_counter_instance)
        else:
            exp(cutting_board,kitchen_counter_instance)
    eff:
        unknown[cutting_board]=False
        close[cutting_board,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cutting_board]=True
    

#exp_behavior_end

#goal_representation
behavior roast_chicken_and_onion_in_oven(chicken: item, onion: item, oven: item):
    body:
        achieve inside(chicken, oven)
        # Place the chicken inside the oven
        
        achieve inside(onion, oven)
        # Place the onion inside the oven

behavior start_roasting_with_oven(oven: item):
    body:
        achieve closed(oven) # Ensure the oven is closed
        achieve is_on(oven) # Turn on the oven to start roasting

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken) and clean(chicken)
        # Select a cleaned chicken
        
        bind onion: item where:
            is_food_onion(onion) and clean(onion)
        # Select a cleaned onion

        bind oven: item where:
            is_oven(oven)
        # Select the oven

        roast_chicken_and_onion_in_oven(chicken, onion, oven)
        # Place the chicken and onion in the oven

        start_roasting_with_oven(oven)
        # Start the oven to begin roasting
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior roast_chicken_and_onion_in_oven(chicken: item, onion: item, oven: item):
    body:
        achieve inside(chicken, oven)
        # Place the chicken inside the oven
        
        achieve inside(onion, oven)
        # Place the onion inside the oven

behavior start_roasting_with_oven(oven: item):
    body:
        achieve closed(oven) # Ensure the oven is closed
        achieve is_on(oven) # Turn on the oven to start roasting

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken) and clean(chicken)
        # Select a cleaned chicken
        
        bind onion: item where:
            is_food_onion(onion) and clean(onion)
        # Select a cleaned onion

        bind oven: item where:
            is_oven(oven)
        # Select the oven

        roast_chicken_and_onion_in_oven(chicken, onion, oven)
        # Place the chicken and onion in the oven

        start_roasting_with_oven(oven)
        # Start the oven to begin roasting
##############################
From agent.py-> find a plan in act()
walk_executor(stove_2065)open_executor(stove_2065)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(stove_2065)putin_executor(food_chicken_2017, stove_2065)walk_executor(food_onion_2032)grab_executor(food_onion_2032)walk_executor(stove_2065)putin_executor(food_onion_2032, stove_2065)close_executor(stove_2065)switchon_executor(stove_2065)
##############################
From agent.py
walk_executor(stove_2065)
Find pot_2069. Find cup_2063. Find knife_2050. Find napkin_2005. Find cup_2064. Find cutting_board_2051. Find oil_2079. Find fryingpan_2083. Find drawing_238. Find drawing_241. Find drawing_242. Find drawing_243. Robot is inside dining_room_201. Robot is close stove_2065. Robot is close kitchen_counter_230. Robot is no longer close sauce_2078.Robot is no longer close fridge_289.Robot is no longer close floor_202.Robot is no longer close floor_203.Robot is no longer close food_steak_2008.Robot is no longer close food_apple_2009.Robot is no longer close food_bacon_2010.Robot is no longer close food_banana_2011.Robot is no longer close food_bread_2012.Robot is no longer close food_cake_2013.Robot is no longer close food_carrot_2014.Robot is no longer close food_cereal_2015.Robot is no longer close food_cheese_2016.Robot is no longer close food_chicken_2017.Robot is no longer close food_dessert_2018.Robot is no longer close food_donut_2019.Robot is no longer close food_egg_2020.Robot is no longer close food_fish_2021.Robot is no longer close food_food_2022.Robot is no longer close food_fruit_2023.Robot is no longer close food_hamburger_2024.Robot is no longer close food_ice_cream_2025.Robot is no longer close food_jam_2026.Robot is no longer close food_kiwi_2027.Robot is no longer close food_lemon_2028.Robot is no longer close food_noodles_2029.Robot is no longer close food_oatmeal_2030.Robot is no longer close food_orange_2031.Robot is no longer close food_onion_2032.Robot is no longer close food_peanut_butter_2033.Robot is no longer close food_pizza_2034.Robot is no longer close food_potato_2035.Robot is no longer close food_rice_2036.Robot is no longer close food_salt_2037.Robot is no longer close food_snack_2038.Robot is no longer close food_sugar_2039.Robot is no longer close food_turkey_2040.Robot is no longer close food_vegetable_2041.Robot is no longer close dry_pasta_2042.Robot is no longer close milk_2043.
##############################
From agent.py
open_executor(stove_2065)
Robot is inside dining_room_201. Robot is close stove_2065. Robot is close kitchen_counter_230. 
##############################
From agent.py
walk_executor(food_chicken_2017)
Robot is inside dining_room_201. Robot is close fridge_289. Robot is close food_chicken_2017. Robot is no longer close stove_2065.Robot is no longer close kitchen_counter_230.
##############################
From agent.py
grab_executor(food_chicken_2017)
Robot is inside dining_room_201. Robot is close fridge_289. Robot is close food_chicken_2017. Grabbing food_chicken_2017 by right hand. 
##############################
From agent.py
walk_executor(stove_2065)
Robot is inside dining_room_201. Robot is close food_chicken_2017. Robot is close stove_2065. Robot is close kitchen_counter_230. Robot is no longer close fridge_289.
##############################
From agent.py
putin_executor(food_chicken_2017, stove_2065)
Robot is inside dining_room_201. Robot is close food_chicken_2017. Robot is close stove_2065. Robot is close kitchen_counter_230. food_chicken_2017 released by right hand. 
##############################
From agent.py
walk_executor(food_onion_2032)
Robot is inside dining_room_201. Robot is close food_onion_2032. Robot is close fridge_289. Robot is no longer close food_chicken_2017.Robot is no longer close stove_2065.Robot is no longer close kitchen_counter_230.
##############################
From agent.py
grab_executor(food_onion_2032)
Robot is inside dining_room_201. Robot is close food_onion_2032. Robot is close fridge_289. Grabbing food_onion_2032 by right hand. 
##############################
From agent.py
walk_executor(stove_2065)
Robot is inside dining_room_201. Robot is close food_onion_2032. Robot is close stove_2065. Robot is close food_chicken_2017. Robot is close kitchen_counter_230. Robot is no longer close fridge_289.
##############################
From agent.py
putin_executor(food_onion_2032, stove_2065)
Robot is inside dining_room_201. Robot is close food_onion_2032. Robot is close stove_2065. Robot is close food_chicken_2017. Robot is close kitchen_counter_230. food_onion_2032 released by right hand. 
##############################
From agent.py
close_executor(stove_2065)
Robot is inside dining_room_201. Robot is close food_onion_2032. Robot is close stove_2065. Robot is close food_chicken_2017. Robot is close kitchen_counter_230. 
##############################
From agent.py
switchon_executor(stove_2065)
Robot is inside dining_room_201. Robot is close food_onion_2032. Robot is close stove_2065. Robot is close food_chicken_2017. Robot is close kitchen_counter_230. 
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g2.txt
Checking k1
missed actions: 
missed action num: 0
##############################
