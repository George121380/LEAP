From agent.py
Reset goals: The sub-goals are: 
['1. Find the basket that contains clothes.', '2. Put the clothes into the washing machine.', '3. Add soap to the washing machine.', '4. Run the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_pants_2157_around_washing_machine_2079(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_pants,washing_machine_instance)
        else:
            exp(clothes_pants,washing_machine_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,washing_machine_instance]=True
        close[washing_machine_instance,clothes_pants]=True
    

behavior find_clothes_shirt_2158_around_dresser_274(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==274
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_shirt,dresser_instance)
        else:
            exp(clothes_shirt,dresser_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,dresser_instance]=True
        close[dresser_instance,clothes_shirt]=True
    

behavior find_clothes_skirt_2160_around_dresser_274(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==274
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_skirt,dresser_instance)
        else:
            exp(clothes_skirt,dresser_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,dresser_instance]=True
        close[dresser_instance,clothes_skirt]=True
    

behavior find_clothes_scarf_2120_around_dresser_274(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==274
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_scarf,dresser_instance)
        else:
            exp(clothes_scarf,dresser_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,dresser_instance]=True
        close[dresser_instance,clothes_scarf]=True
    

behavior find_clothes_underwear_2121_around_dresser_274(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==274
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_underwear,dresser_instance)
        else:
            exp(clothes_underwear,dresser_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,dresser_instance]=True
        close[dresser_instance,clothes_underwear]=True
    

behavior find_clothes_dress_2116_around_dresser_274(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==274
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_dress,dresser_instance)
        else:
            exp(clothes_dress,dresser_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,dresser_instance]=True
        close[dresser_instance,clothes_dress]=True
    

behavior find_clothes_gloves_2118_around_washing_machine_2079(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

behavior find_clothes_hat_2117_around_washing_machine_2079(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_hat,washing_machine_instance)
        else:
            exp(clothes_hat,washing_machine_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,washing_machine_instance]=True
        close[washing_machine_instance,clothes_hat]=True
    

behavior find_clothes_socks_2159_around_washing_machine_2079(clothes_socks:item):
    goal: not unknown(clothes_socks)
    body:
        assert is_clothes_socks(clothes_socks)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_socks,washing_machine_instance)
        else:
            exp(clothes_socks,washing_machine_instance)
    eff:
        unknown[clothes_socks]=False
        close[clothes_socks,washing_machine_instance]=True
        close[washing_machine_instance,clothes_socks]=True
    

behavior find_clothes_jacket_2119_around_dresser_274(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==274
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_jacket,dresser_instance)
        else:
            exp(clothes_jacket,dresser_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,dresser_instance]=True
        close[dresser_instance,clothes_jacket]=True
    

behavior find_basket_for_clothes_2078_around_washing_machine_2079(basket_for_clothes:item):
    goal: not unknown(basket_for_clothes)
    body:
        assert is_basket_for_clothes(basket_for_clothes)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(basket_for_clothes,washing_machine_instance)
        else:
            exp(basket_for_clothes,washing_machine_instance)
    eff:
        unknown[basket_for_clothes]=False
        close[basket_for_clothes,washing_machine_instance]=True
        close[washing_machine_instance,basket_for_clothes]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket)
        # Select an item that is a basket for clothes

        if not visited(basket):
            observe(basket, "Check if it contains clothes")
        # Observe the basket to confirm if it contains clothes

        achieve close_char(char, basket)
        # Move closer to the basket containing clothes

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket)
        # Select an item that is a basket for clothes

        if not visited(basket):
            observe(basket, "Check if it contains clothes")
        # Observe the basket to confirm if it contains clothes

        achieve close_char(char, basket)
        # Move closer to the basket containing clothes

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2079)open_executor(washing_machine_2079)exp(basket_for_clothes_2078, washing_machine_2079)walk_executor(basket_for_clothes_2078)open_executor(basket_for_clothes_2078)obs(basket_for_clothes_2078, Check if it contains clothes)
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close washing_machine_2079. 
##############################
From agent.py
open_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close washing_machine_2079. 
##############################
From agent.py
exp(basket_for_clothes_2078, washing_machine_2079)
Failed to find basket_for_clothes_2078 around washing_machine_2079. 
##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2144)exp(basket_for_clothes_2078, ironing_board_2144)walk_executor(basket_for_clothes_2078)open_executor(basket_for_clothes_2078)obs(basket_for_clothes_2078, Check if it contains clothes)
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot is inside dining_room_41. Robot is close ironing_board_2144. Robot is no longer close washing_machine_2079.
##############################
From agent.py
exp(basket_for_clothes_2078, ironing_board_2144)
Failed to find basket_for_clothes_2078 around ironing_board_2144. 
##############################
From agent.py-> find a plan in act()
walk_executor(couch_198)exp(basket_for_clothes_2078, couch_198)walk_executor(basket_for_clothes_2078)open_executor(basket_for_clothes_2078)obs(basket_for_clothes_2078, Check if it contains clothes)
##############################
From agent.py
walk_executor(couch_198)
Find clothes_jacket_2119. Find phone_2016. Find mat_203. Find chair_2003. Find rag_2052. Find instrument_guitar_2028. Robot is inside bedroom_162. Robot is close couch_198. Robot is no longer inside dining_room_41.Robot is no longer close ironing_board_2144.
##############################
From agent.py
exp(basket_for_clothes_2078, couch_198)
Failed to find basket_for_clothes_2078 around couch_198. 
##############################
From agent.py-> find a plan in act()
walk_executor(couch_269)exp(basket_for_clothes_2078, couch_269)walk_executor(basket_for_clothes_2078)open_executor(basket_for_clothes_2078)obs(basket_for_clothes_2078, Check if it contains clothes)
##############################
From agent.py
walk_executor(couch_269)
Find brush_2002. Find drawing_288. Find pillow_287. Find shoes_2033. Find phone_2017. Find pillow_286. Robot is inside home_office_241. Robot is close couch_269. Robot is no longer inside bedroom_162.Robot is no longer close couch_198.
##############################
From agent.py
exp(basket_for_clothes_2078, couch_269)
Failed to find basket_for_clothes_2078 around couch_269. 
##############################
From agent.py-> find a plan in act()
walk_executor(bench_113)exp(basket_for_clothes_2078, bench_113)walk_executor(basket_for_clothes_2078)open_executor(basket_for_clothes_2078)obs(basket_for_clothes_2078, Check if it contains clothes)
##############################
From agent.py
walk_executor(bench_113)
Find drawing_110. Find pillow_104. Find mat_102. Find pillow_103. Find pillow_105. Find pillow_106. Robot is inside dining_room_41. Robot is close bench_113. Robot is no longer inside home_office_241.Robot is no longer close couch_269.
##############################
From agent.py
exp(basket_for_clothes_2078, bench_113)
Failed to find basket_for_clothes_2078 around bench_113. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_120)exp(basket_for_clothes_2078, sink_120)walk_executor(basket_for_clothes_2078)open_executor(basket_for_clothes_2078)obs(basket_for_clothes_2078, Check if it contains clothes)
##############################
From agent.py
walk_executor(sink_120)
Find basket_for_clothes_2078. Find soap_2010. Find pot_2138. Find tray_128. Find ice_2024. Find soap_2126. Find pot_78. Find bowl_2141. Find plate_2152. Find cutting_board_2123. Find food_salt_2041. Find fork_2150. Find bowl_2140. Find bowl_2142. Find fork_2151. Robot is inside dining_room_41. Robot is close sink_120. Robot is close kitchen_counter_119. Robot is no longer close bench_113.
##############################
From agent.py
exp(basket_for_clothes_2078, sink_120)
Find basket_for_clothes_2078. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2078)obs(basket_for_clothes_2078, Check if it contains clothes)
##############################
From agent.py
walk_executor(basket_for_clothes_2078)
Find clothes_pants_2157. Find clothes_shirt_2158. Find clothes_socks_2159. Find clothes_skirt_2160. Robot is inside dining_room_41. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close clothes_socks_2159. Robot is close clothes_skirt_2160. Robot is close basket_for_clothes_2078. Robot is no longer close sink_120.Robot is no longer close kitchen_counter_119.
##############################
From agent.py
obs(basket_for_clothes_2078, Check if it contains clothes)
Get this information:  basket_for_clothes_2078 is close to clothes_pants_2157. basket_for_clothes_2078 is close to clothes_shirt_2158. basket_for_clothes_2078 is close to clothes_socks_2159. basket_for_clothes_2078 is close to clothes_skirt_2160. basket_for_clothes_2078 is close to sink_120. basket_for_clothes_2078 is close to fridge_126. basket_for_clothes_2078 is close to character_240. clothes_shirt_2158 is inside basket_for_clothes_2078. clothes_socks_2159 is inside basket_for_clothes_2078. basket_for_clothes_2078 is inside dining_room_41. clothes_pants_2157 is inside basket_for_clothes_2078. clothes_skirt_2160 is inside basket_for_clothes_2078. basket_for_clothes_2078 is OPEN.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2120_around_light_283(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==283
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_scarf,light_instance)
        else:
            exp(clothes_scarf,light_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,light_instance]=True
        close[light_instance,clothes_scarf]=True
    

behavior find_clothes_underwear_2121_around_bed_197(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==197
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(clothes_underwear,bed_instance)
        else:
            exp(clothes_underwear,bed_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,bed_instance]=True
        close[bed_instance,clothes_underwear]=True
    

behavior find_clothes_dress_2116_around_hanger_292(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==292
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(clothes_dress,hanger_instance)
        else:
            exp(clothes_dress,hanger_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,hanger_instance]=True
        close[hanger_instance,clothes_dress]=True
    

behavior find_clothes_gloves_2118_around_light_283(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==283
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_gloves,light_instance)
        else:
            exp(clothes_gloves,light_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,light_instance]=True
        close[light_instance,clothes_gloves]=True
    

behavior find_clothes_hat_2117_around_dresser_274(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==274
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_hat,dresser_instance)
        else:
            exp(clothes_hat,dresser_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,dresser_instance]=True
        close[dresser_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
 
def is_basket_with_clothes(basket: item):
    # Function to check if a basket contains clothes
    symbol contains_clothes = exists o: item : is_clothes(o) and inside(o, basket)
    return contains_clothes

behavior transfer_clothes_to_washing_machine(clothes: item, washing_machine: item):
    body:
        achieve inside(clothes, washing_machine)
        # Place clothes inside the washing machine

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and is_basket_with_clothes(basket)
        # Select the basket which contains clothes

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        
        foreach c: item:
            if is_clothes(c) and inside(c, basket):
                transfer_clothes_to_washing_machine(c, washing_machine)
        # Transfer all clothes from the basket to the washing machine

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_basket_with_clothes(basket: item):
    # Function to check if a basket contains clothes
    symbol contains_clothes = exists o: item : is_clothes(o) and inside(o, basket)
    return contains_clothes

behavior transfer_clothes_to_washing_machine(clothes: item, washing_machine: item):
    body:
        achieve inside(clothes, washing_machine)
        # Place clothes inside the washing machine

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and is_basket_with_clothes(basket)
        # Select the basket which contains clothes

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        
        foreach c: item:
            if is_clothes(c) and inside(c, basket):
                transfer_clothes_to_washing_machine(c, washing_machine)
        # Transfer all clothes from the basket to the washing machine

##############################
From agent.py-> find a plan in act()
grab_executor(clothes_pants_2157)walk_executor(washing_machine_2079)putin_executor(clothes_pants_2157, washing_machine_2079)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(washing_machine_2079)putin_executor(clothes_shirt_2158, washing_machine_2079)walk_executor(clothes_socks_2159)grab_executor(clothes_socks_2159)walk_executor(washing_machine_2079)putin_executor(clothes_socks_2159, washing_machine_2079)walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)walk_executor(washing_machine_2079)putin_executor(clothes_skirt_2160, washing_machine_2079)
##############################
From agent.py
grab_executor(clothes_pants_2157)
Robot is inside dining_room_41. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close clothes_socks_2159. Robot is close clothes_skirt_2160. Robot is close basket_for_clothes_2078. Grabbing clothes_pants_2157 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close clothes_pants_2157. Robot is close washing_machine_2079. Robot is no longer close clothes_shirt_2158.Robot is no longer close clothes_socks_2159.Robot is no longer close clothes_skirt_2160.Robot is no longer close basket_for_clothes_2078.
##############################
From agent.py
putin_executor(clothes_pants_2157, washing_machine_2079)
Robot is inside dining_room_41. Robot is close clothes_pants_2157. Robot is close washing_machine_2079. clothes_pants_2157 released by right hand. 
##############################
From agent.py
walk_executor(clothes_shirt_2158)
Robot is inside dining_room_41. Robot is close clothes_shirt_2158. Robot is close basket_for_clothes_2078. Robot is no longer close clothes_pants_2157.Robot is no longer close washing_machine_2079.
##############################
From agent.py
grab_executor(clothes_shirt_2158)
Robot is inside dining_room_41. Robot is close clothes_shirt_2158. Robot is close basket_for_clothes_2078. Grabbing clothes_shirt_2158 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close clothes_shirt_2158. Robot is close clothes_pants_2157. Robot is close washing_machine_2079. Robot is no longer close basket_for_clothes_2078.
##############################
From agent.py
putin_executor(clothes_shirt_2158, washing_machine_2079)
Robot is inside dining_room_41. Robot is close clothes_shirt_2158. Robot is close clothes_pants_2157. Robot is close washing_machine_2079. clothes_shirt_2158 released by right hand. 
##############################
From agent.py
walk_executor(clothes_socks_2159)
Robot is inside dining_room_41. Robot is close basket_for_clothes_2078. Robot is close clothes_socks_2159. Robot is no longer close clothes_pants_2157.Robot is no longer close clothes_shirt_2158.Robot is no longer close washing_machine_2079.
##############################
From agent.py
grab_executor(clothes_socks_2159)
Robot is inside dining_room_41. Robot is close basket_for_clothes_2078. Robot is close clothes_socks_2159. Grabbing clothes_socks_2159 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close clothes_socks_2159. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close washing_machine_2079. Robot is no longer close basket_for_clothes_2078.
##############################
From agent.py
putin_executor(clothes_socks_2159, washing_machine_2079)
Robot is inside dining_room_41. Robot is close clothes_socks_2159. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close washing_machine_2079. clothes_socks_2159 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2160)
Robot is inside dining_room_41. Robot is close clothes_skirt_2160. Robot is close basket_for_clothes_2078. Robot is no longer close washing_machine_2079.Robot is no longer close clothes_pants_2157.Robot is no longer close clothes_shirt_2158.Robot is no longer close clothes_socks_2159.
##############################
From agent.py
grab_executor(clothes_skirt_2160)
Robot is inside dining_room_41. Robot is close clothes_skirt_2160. Robot is close basket_for_clothes_2078. Grabbing clothes_skirt_2160 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close clothes_skirt_2160. Robot is close clothes_socks_2159. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close washing_machine_2079. Robot is no longer close basket_for_clothes_2078.
##############################
From agent.py
putin_executor(clothes_skirt_2160, washing_machine_2079)
Robot is inside dining_room_41. Robot is close clothes_skirt_2160. Robot is close clothes_socks_2159. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close washing_machine_2079. clothes_skirt_2160 released by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2010_around_soap_2010(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind soap_instance:item where:
            is_soap(soap_instance) and id[soap_instance]==2010
        achieve close_char(char,soap_instance)
        if can_open(soap_instance):
            achieve_once open(soap_instance)
            exp(soap,soap_instance)
        else:
            exp(soap,soap_instance)
    eff:
        unknown[soap]=False
        close[soap,soap_instance]=True
        close[soap_instance,soap]=True
    

behavior find_soap_2126_around_soap_2126(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind soap_instance:item where:
            is_soap(soap_instance) and id[soap_instance]==2126
        achieve close_char(char,soap_instance)
        if can_open(soap_instance):
            achieve_once open(soap_instance)
            exp(soap,soap_instance)
        else:
            exp(soap,soap_instance)
    eff:
        unknown[soap]=False
        close[soap,soap_instance]=True
        close[soap_instance,soap]=True
    

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation

behavior add_soap_to_washing_machine(washing_machine:item, soap:item):
    body:
        achieve inside(soap, washing_machine)
        # Add soap to the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        bind soap: item where:
            is_soap(soap)
        # Select the soap to be used

        add_soap_to_washing_machine(washing_machine, soap)
        start_washing_machine(washing_machine)

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior add_soap_to_washing_machine(washing_machine:item, soap:item):
    body:
        achieve inside(soap, washing_machine)
        # Add soap to the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        bind soap: item where:
            is_soap(soap)
        # Select the soap to be used

        add_soap_to_washing_machine(washing_machine, soap)
        start_washing_machine(washing_machine)

##############################
From agent.py-> find a plan in act()
walk_executor(soap_2010)exp(soap_2125, soap_2010)walk_executor(soap_2125)grab_executor(soap_2125)walk_executor(washing_machine_2079)putin_executor(soap_2125, washing_machine_2079)close_executor(washing_machine_2079)plugin_executor(washing_machine_2079)switchon_executor(washing_machine_2079)
##############################
From agent.py
walk_executor(soap_2010)
Robot is inside dining_room_41. Robot is close sink_120. Robot is close soap_2010. Robot is no longer close clothes_pants_2157.Robot is no longer close clothes_shirt_2158.Robot is no longer close clothes_socks_2159.Robot is no longer close clothes_skirt_2160.Robot is no longer close washing_machine_2079.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find soap_2125 ?
Answer: Go to bathroom_1. Locate sink_19. You will find soap_2125 on top of sink_19.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to bathroom_1. Locate sink_19. You will find soap_2125 on top of sink_19.

The actions you have taken:
Action 1: Walk to washing_machine_2079.
Action 2: Open washing_machine_2079.
Action 3: look for basket_for_clothes_2078 around washing_machine_2079.
Action 4: Walk to ironing_board_2144.
Action 5: look for basket_for_clothes_2078 around ironing_board_2144.
Action 6: Walk to couch_198.
Action 7: look for basket_for_clothes_2078 around couch_198.
Action 8: Walk to couch_269.
Action 9: look for basket_for_clothes_2078 around couch_269.
Action 10: Walk to bench_113.
Action 11: look for basket_for_clothes_2078 around bench_113.
Action 12: Walk to sink_120.
Action 13: look for basket_for_clothes_2078 around sink_120.
Action 14: Walk to basket_for_clothes_2078.
Action 15: Observe around basket_for_clothes_2078 with the question of Check if it contains clothes.
Action 16: Grab clothes_pants_2157.
Action 17: Walk to washing_machine_2079.
Action 18: Put clothes_pants_2157 into washing_machine_2079.
Action 19: Walk to clothes_shirt_2158.
Action 20: Grab clothes_shirt_2158.
Action 21: Walk to washing_machine_2079.
Action 22: Put clothes_shirt_2158 into washing_machine_2079.
Action 23: Walk to clothes_socks_2159.
Action 24: Grab clothes_socks_2159.
Action 25: Walk to washing_machine_2079.
Action 26: Put clothes_socks_2159 into washing_machine_2079.
Action 27: Walk to clothes_skirt_2160.
Action 28: Grab clothes_skirt_2160.
Action 29: Walk to washing_machine_2079.
Action 30: Put clothes_skirt_2160 into washing_machine_2079.
Action 31: Walk to soap_2010.

##############################
From agent.py
exp(soap_2125, soap_2010)
Failed to find soap_2125 around soap_2010. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_19)exp(soap_2125, sink_19)walk_executor(soap_2125)grab_executor(soap_2125)walk_executor(washing_machine_2079)putin_executor(soap_2125, washing_machine_2079)close_executor(washing_machine_2079)plugin_executor(washing_machine_2079)switchon_executor(washing_machine_2079)
##############################
From agent.py
walk_executor(sink_19)
Find mat_32. Find detergent_2155. Find soap_2125. Find after_shave_2063. Find cleaning_solution_2143. Find drawing_33. Find phone_2029. Robot is inside bathroom_1. Robot is close bathroom_counter_18. Robot is close sink_19. Robot is no longer inside dining_room_41.Robot is no longer close sink_120.Robot is no longer close soap_2010.
##############################
From agent.py
exp(soap_2125, sink_19)
Find soap_2125. 
##############################
From agent.py-> find a plan in act()
walk_executor(soap_2125)grab_executor(soap_2125)walk_executor(washing_machine_2079)putin_executor(soap_2125, washing_machine_2079)close_executor(washing_machine_2079)plugin_executor(washing_machine_2079)switchon_executor(washing_machine_2079)
##############################
From agent.py
walk_executor(soap_2125)
Robot is inside bathroom_1. Robot is close sink_19. Robot is close soap_2125. Robot is no longer close bathroom_counter_18.
##############################
From agent.py
grab_executor(soap_2125)
Robot is inside bathroom_1. Robot is close sink_19. Robot is close soap_2125. Grabbing soap_2125 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close soap_2125. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close clothes_socks_2159. Robot is close clothes_skirt_2160. Robot is close washing_machine_2079. Robot is no longer inside bathroom_1.Robot is no longer close sink_19.
##############################
From agent.py
putin_executor(soap_2125, washing_machine_2079)
Robot is inside dining_room_41. Robot is close soap_2125. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close clothes_socks_2159. Robot is close clothes_skirt_2160. Robot is close washing_machine_2079. soap_2125 released by right hand. 
##############################
From agent.py
close_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close soap_2125. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close clothes_socks_2159. Robot is close clothes_skirt_2160. Robot is close washing_machine_2079. 
##############################
From agent.py
plugin_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close soap_2125. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close clothes_socks_2159. Robot is close clothes_skirt_2160. Robot is close washing_machine_2079. 
##############################
From agent.py
switchon_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close soap_2125. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close clothes_socks_2159. Robot is close clothes_skirt_2160. Robot is close washing_machine_2079. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2143_around_cleaning_solution_2143(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind cleaning_solution_instance:item where:
            is_cleaning_solution(cleaning_solution_instance) and id[cleaning_solution_instance]==2143
        achieve close_char(char,cleaning_solution_instance)
        if can_open(cleaning_solution_instance):
            achieve_once open(cleaning_solution_instance)
            exp(cleaning_solution,cleaning_solution_instance)
        else:
            exp(cleaning_solution,cleaning_solution_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,cleaning_solution_instance]=True
        close[cleaning_solution_instance,cleaning_solution]=True
    

behavior find_detergent_2011_around_kitchen_counter_122(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(detergent,kitchen_counter_instance)
        else:
            exp(detergent,kitchen_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,kitchen_counter_instance]=True
        close[kitchen_counter_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        achieve closed(washing_machine) 
        # Ensure the washing machine is closed

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve is_on(washing_machine)
        # Turn on the washing machine to start it running
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in
        achieve closed(washing_machine)
        # Ensure the washing machine is closed
        achieve is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for further use

        run_washing_machine(washing_machine)
        # Execute the behavior to run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)  # Ensure the washing machine is closed
        achieve plugged(washing_machine)  # Ensure the washing machine is plugged in
        achieve is_on(washing_machine)  # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine instance

        run_washing_machine(washing_machine)
        # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine) # Ensure washing machine is plugged in
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for this task

        run_washing_machine(washing_machine)
        # Run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) 
        # Ensure the washing machine is closed
        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) 
        # Switch on the washing machine to start

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        run_washing_machine(washing_machine)


#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2139_around_trashcan_99(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind trashcan_instance:item where:
            is_trashcan(trashcan_instance) and id[trashcan_instance]==99
        achieve close_char(char,trashcan_instance)
        if can_open(trashcan_instance):
            achieve_once open(trashcan_instance)
            exp(vacuum_cleaner,trashcan_instance)
        else:
            exp(vacuum_cleaner,trashcan_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,trashcan_instance]=True
        close[trashcan_instance,vacuum_cleaner]=True
    

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine: item):
    body:
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)

        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine: item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine to be used

        run_washing_machine(washing_machine)
        # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        bind soap: item where:
            is_soap(soap) and inside(soap, washing_machine)
        # Assume soap is already in the washing machine for the action

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_kitchen_counter_122(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(detergent,kitchen_counter_instance)
        else:
            exp(detergent,kitchen_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,kitchen_counter_instance]=True
        close[kitchen_counter_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Plug in the washing machine
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2079
        # Select the washing machine with ID 2079

        run_washing_machine(washing_machine)
        # Initiate the washing machine running process
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Plug in the washing machine

        achieve closed(washing_machine)
        # Close the washing machine

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        run_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) 
        # Select the washing machine by identifying its category

        achieve plugged(washing_machine)
        # Plug in the washing machine

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2136_around_bookshelf_275(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==275
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_vacuum_cleaner_2139_around_cleaning_solution_2143(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind cleaning_solution_instance:item where:
            is_cleaning_solution(cleaning_solution_instance) and id[cleaning_solution_instance]==2143
        achieve close_char(char,cleaning_solution_instance)
        if can_open(cleaning_solution_instance):
            achieve_once open(cleaning_solution_instance)
            exp(vacuum_cleaner,cleaning_solution_instance)
        else:
            exp(vacuum_cleaner,cleaning_solution_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,cleaning_solution_instance]=True
        close[cleaning_solution_instance,vacuum_cleaner]=True
    

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine: item):
    body:
        achieve closed(washing_machine)
        # Ensure the washing machine is closed before switching it on
        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in
        achieve is_on(washing_machine)
        # Turn on the washing machine to start the wash cycle

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        run_washing_machine(washing_machine)
        # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes
        
        run_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        assert closed(washing_machine)
        # Ensure the washing machine is closed before running it

        assert plugged(washing_machine)
        # Ensure the washing machine is plugged in before running it

        achieve is_on(washing_machine)
        # Turn on the washing machine to start the wash cycle

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2079
        # Select the washing machine with ID 2079

        achieve plugged(washing_machine)
        # Plug in the washing machine

        achieve closed(washing_machine)
        # Close the washing machine

        achieve is_on(washing_machine)
        # Switch on the washing machine to run it

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine to be targeted

        achieve closed(washing_machine)
        # Ensure washing machine is closed

        achieve plugged(washing_machine)
        # Plug in the washing machine

        achieve is_on(washing_machine)
        # Switch on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and is_on(washing_machine) and plugged(washing_machine)
        # Ensure the washing machine is identified, is plugged in, and already on
        
        achieve closed(washing_machine)
        # Make sure the washing machine is closed if not already

        achieve is_on(washing_machine)
        # Ensure the washing machine is switched on and running
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine instance

        if is_washing_machine(washing_machine):
            achieve plugged(washing_machine)
            # Plug the washing machine in

            achieve closed(washing_machine)
            # Ensure the washing machine is closed

            achieve is_on(washing_machine)
            # Turn on the washing machine to start the washing cycle
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        assert has_switch(washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and plugged(washing_machine) and closed(washing_machine)
        run_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Close the washing machine door before starting

        run_washing_machine(washing_machine)
        # Start the washing machine to wash clothes
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior plug_in_washing_machine(washing_machine: item):
    body:
        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

behavior close_washing_machine(washing_machine: item):
    body:
        achieve closed(washing_machine)
        # Ensure the washing machine door is closed

behavior start_washing_machine(washing_machine: item):
    body:
        achieve is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        plug_in_washing_machine(washing_machine)
        close_washing_machine(washing_machine)
        start_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) 
        # Select the washing machine

        achieve is_on(washing_machine)
        # Turn on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine instance

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed before turning it on

        achieve is_on(washing_machine)
        # Turn on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        
        achieve plugged(washing_machine)
        achieve closed(washing_machine)
        achieve is_on(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine: item):
    body:
        achieve closed(washing_machine)
        # Close the washing machine door
        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in
        achieve is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        
        run_washing_machine(washing_machine)
        # Execute the behavior to run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_kitchen_counter_122(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(detergent,kitchen_counter_instance)
        else:
            exp(detergent,kitchen_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,kitchen_counter_instance]=True
        close[kitchen_counter_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine to run

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine door is closed

        achieve is_on(washing_machine)
        # Start the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve closed(washing_machine) # Ensure the washing machine door is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        
        achieve is_on(washing_machine)
        # Ensure the washing machine is turned on

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_carrot_2015_around_kitchen_counter_122(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_carrot,kitchen_counter_instance)
        else:
            exp(food_carrot,kitchen_counter_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_carrot]=True
    

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

behavior find_towel_2128_around_shower_16(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==16
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(towel,shower_instance)
        else:
            exp(towel,shower_instance)
    eff:
        unknown[towel]=False
        close[towel,shower_instance]=True
        close[shower_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve is_on(washing_machine)
        # Turn on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine) 
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine) 
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Ensure the washing machine is turned on

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve is_on(washing_machine)
        # Ensure the washing machine is turned on
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)
        # Ensure the washing machine lid is closed before operating
        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in
        achieve is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        run_washing_machine(washing_machine)
        # Run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2139_around_cleaning_solution_2143(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind cleaning_solution_instance:item where:
            is_cleaning_solution(cleaning_solution_instance) and id[cleaning_solution_instance]==2143
        achieve close_char(char,cleaning_solution_instance)
        if can_open(cleaning_solution_instance):
            achieve_once open(cleaning_solution_instance)
            exp(vacuum_cleaner,cleaning_solution_instance)
        else:
            exp(vacuum_cleaner,cleaning_solution_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,cleaning_solution_instance]=True
        close[cleaning_solution_instance,vacuum_cleaner]=True
    

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and plugged(washing_machine) and closed(washing_machine)
        # Select the washing machine that is already plugged in and closed

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine used for clothes
        
        achieve is_on(washing_machine)
        # Turn on the washing machine to run it
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)
        achieve plugged(washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2079
        # Select the washing machine with ID 2079

        run_washing_machine(washing_machine)
        # Run the washing machine based on the defined behavior
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine to run it
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine)
        achieve closed(washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine to start the wash cycle
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine to be used

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine door is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine to start the wash cycle
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        if not is_on(washing_machine):
            observe(washing_machine, "Check if the washing machine is off")
        # Confirm the state of the washing machine if not already on

        achieve is_on(washing_machine)
        # Turn on the washing machine to start running it
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in 

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        run_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve is_on(washing_machine)
        # Turn on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine) # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine) # Ensure that the washing machine is plugged in
        achieve closed(washing_machine) # Ensure that the washing machine door is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        
        run_washing_machine(washing_machine)
        # Run the washing machine once it is properly set up and plugged in
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes
        run_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2139_around_cleaning_solution_2143(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind cleaning_solution_instance:item where:
            is_cleaning_solution(cleaning_solution_instance) and id[cleaning_solution_instance]==2143
        achieve close_char(char,cleaning_solution_instance)
        if can_open(cleaning_solution_instance):
            achieve_once open(cleaning_solution_instance)
            exp(vacuum_cleaner,cleaning_solution_instance)
        else:
            exp(vacuum_cleaner,cleaning_solution_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,cleaning_solution_instance]=True
        close[cleaning_solution_instance,vacuum_cleaner]=True
    

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine door is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Plug in the washing machine
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Execute the behavior to run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine to start the wash cycle
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        achieve is_on(washing_machine)
        # Turn on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        
        start_washing_machine(washing_machine)
        # Execute the washing machine starting behavior

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)
        # Ensure the washing machine is closed
        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in
        achieve is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        
        run_washing_machine(washing_machine)


#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        bind soap: item where:
            is_soap(soap)
        # Select the soap to be used

        achieve is_on(washing_machine) 
        # Ensure the washing machine is running

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
def is_washing_machine_running(washing_machine:item):
    # Function to check if the washing machine is running
    return is_on(washing_machine) and plugged(washing_machine)

behavior ensure_washing_machine_running(washing_machine:item):
    body:
        achieve plugged(washing_machine)
        achieve closed(washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        if not is_washing_machine_running(washing_machine):
            ensure_washing_machine_running(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        achieve plugged(washing_machine)
        achieve closed(washing_machine)
        achieve is_on(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        
        run_washing_machine(washing_machine)
        # Execute the behavior to run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in
        
        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine)
        achieve closed(washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2079
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)
        achieve plugged(washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Plug in the washing machine

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        if not plugged(washing_machine):
            achieve plugged(washing_machine)
            # Ensure the washing machine is plugged in

        if not closed(washing_machine):
            achieve closed(washing_machine)
            # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Close the washing machine door
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        run_washing_machine(washing_machine)
        # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        run_washing_machine(washing_machine)
        # Initiate the washing machine run cycle

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_cleaning_solution_2143_around_cleaning_solution_2143(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind cleaning_solution_instance:item where:
            is_cleaning_solution(cleaning_solution_instance) and id[cleaning_solution_instance]==2143
        achieve close_char(char,cleaning_solution_instance)
        if can_open(cleaning_solution_instance):
            achieve_once open(cleaning_solution_instance)
            exp(cleaning_solution,cleaning_solution_instance)
        else:
            exp(cleaning_solution,cleaning_solution_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,cleaning_solution_instance]=True
        close[cleaning_solution_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine to run

        run_washing_machine(washing_machine)
        # Execute behavior to run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Close the washing machine door

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and plugged(washing_machine)
        # Select the plugged washing machine

        achieve is_on(washing_machine)
        # Turn on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine)
        achieve closed(washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2079
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine: item):
    body:
        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        run_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine to start the wash cycle
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

behavior find_towel_2128_around_shower_16(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==16
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(towel,shower_instance)
        else:
            exp(towel,shower_instance)
    eff:
        unknown[towel]=False
        close[towel,shower_instance]=True
        close[shower_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine) # Ensure that the washing machine is plugged in
        achieve closed(washing_machine) # Ensure the washing machine door is closed
        achieve is_on(washing_machine) # Turn on the washing machine to start the cycle

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine to complete the goal of the current subtask
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve is_on(washing_machine)
        # Run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine: item):
    body:
        achieve plugged(washing_machine) # Ensure washing machine is plugged in
        achieve closed(washing_machine) # Ensure washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine instance

        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine
        
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine to run
        
        run_washing_machine(washing_machine)
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve closed(washing_machine)
        # Close the washing machine door

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine instance

        achieve plugged(washing_machine)
        # Plug in the washing machine

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine to start it
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2139_around_cleaning_solution_2143(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind cleaning_solution_instance:item where:
            is_cleaning_solution(cleaning_solution_instance) and id[cleaning_solution_instance]==2143
        achieve close_char(char,cleaning_solution_instance)
        if can_open(cleaning_solution_instance):
            achieve_once open(cleaning_solution_instance)
            exp(vacuum_cleaner,cleaning_solution_instance)
        else:
            exp(vacuum_cleaner,cleaning_solution_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,cleaning_solution_instance]=True
        close[cleaning_solution_instance,vacuum_cleaner]=True
    

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in
        run_washing_machine(washing_machine)
        # Start the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_shower_16(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==16
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(towel,shower_instance)
        else:
            exp(towel,shower_instance)
    eff:
        unknown[towel]=False
        close[towel,shower_instance]=True
        close[shower_instance,towel]=True
    

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine) # Ensure washing machine is plugged in
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2079
        # Select the washing machine with ID 2079

        run_washing_machine(washing_machine)
        # Run the washing machine as per the task requirement
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine: item):
    body:
        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in
        achieve closed(washing_machine)
        # Ensure the washing machine is closed
        achieve is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine) 
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine door is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine to start it
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine)
        achieve closed(washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes
        
        run_washing_machine(washing_machine)
        # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Plug in the washing machine
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine to start the wash cycle
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for running

        run_washing_machine(washing_machine)
        # Execute the behavior to run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        run_washing_machine(washing_machine)
        # Execute the behavior to run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2139_around_cleaning_solution_2143(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind cleaning_solution_instance:item where:
            is_cleaning_solution(cleaning_solution_instance) and id[cleaning_solution_instance]==2143
        achieve close_char(char,cleaning_solution_instance)
        if can_open(cleaning_solution_instance):
            achieve_once open(cleaning_solution_instance)
            exp(vacuum_cleaner,cleaning_solution_instance)
        else:
            exp(vacuum_cleaner,cleaning_solution_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,cleaning_solution_instance]=True
        close[cleaning_solution_instance,vacuum_cleaner]=True
    

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine) # Turn the washing machine on

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        
        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        run_washing_machine(washing_machine)
        # Execute the behavior to turn on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and plugged(washing_machine) and closed(washing_machine)
        # The washing machine should be plugged and closed before it can be turned on

        achieve is_on(washing_machine)
        # Turn on the washing machine to start the wash cycle

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for the current task

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine door is closed

        achieve is_on(washing_machine)
        # Switch on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2079
        # Select the washing machine with ID 2079
        run_washing_machine(washing_machine) # Execute the behavior to run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine instance

        assert plugged(washing_machine)
        # Ensure the washing machine is plugged in

        assert closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine and start the wash cycle
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Plug in the washing machine
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine: item):
    body:
        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in
        achieve closed(washing_machine)
        # Ensure the washing machine is closed
        achieve is_on(washing_machine)
        # Switch on the washing machine to start the wash cycle

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        
        run_washing_machine(washing_machine)
        # Execute the behavior to run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Execute the behavior to run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior plug_in_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine) # Plug in the washing machine

behavior switch_on_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        plug_in_washing_machine(washing_machine)
        switch_on_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        run_washing_machine(washing_machine)
        # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        run_washing_machine(washing_machine)
        # Start the washing machine by closing, plugging in, and turning it on
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        run_washing_machine(washing_machine) # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2139_around_cleaning_solution_2143(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind cleaning_solution_instance:item where:
            is_cleaning_solution(cleaning_solution_instance) and id[cleaning_solution_instance]==2143
        achieve close_char(char,cleaning_solution_instance)
        if can_open(cleaning_solution_instance):
            achieve_once open(cleaning_solution_instance)
            exp(vacuum_cleaner,cleaning_solution_instance)
        else:
            exp(vacuum_cleaner,cleaning_solution_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,cleaning_solution_instance]=True
        close[cleaning_solution_instance,vacuum_cleaner]=True
    

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine: item):
    body:
        achieve is_on(washing_machine)
        # Ensure the washing machine is turned on

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        run_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine to run

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Make sure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine: item):
    body:
        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in
        
        achieve closed(washing_machine)
        # Ensure the washing machine is closed
        
        achieve is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Plug in the washing machine
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve closed(washing_machine) # Ensure the washing machine door is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        run_washing_machine(washing_machine)
        # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        run_washing_machine(washing_machine)
        # Run the washing machine by closing, plugging, and turning it on
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine door is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine to run it
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine: item):
    body:
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        run_washing_machine(washing_machine)
        # Run the washing machine to complete the task
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_piano_bench_2006_around_bench_115(piano_bench:item):
    goal: not unknown(piano_bench)
    body:
        assert is_piano_bench(piano_bench)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==115
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(piano_bench,bench_instance)
        else:
            exp(piano_bench,bench_instance)
    eff:
        unknown[piano_bench]=False
        close[piano_bench,bench_instance]=True
        close[bench_instance,piano_bench]=True
    

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        run_washing_machine(washing_machine)
        # Run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine)
        achieve closed(washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes
        run_washing_machine(washing_machine)
        # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        run_washing_machine(washing_machine) # Execute the behavior to run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        run_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine: item):
    body:
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve is_on(washing_machine)
        # Switch on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine to run

        achieve is_on(washing_machine)
        # Turn on the washing machine to start the wash cycle
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine instance

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine: item):
    body:
        achieve plugged(washing_machine)
        achieve closed(washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for running

        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine to run it
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        achieve closed(washing_machine)
        # Ensure the washing machine is closed before running

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve is_on(washing_machine)
        # Turn on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine: item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine to run it
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)  # Ensure the washing machine is closed
        achieve is_on(washing_machine)  # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and plugged(washing_machine) and has_switch(washing_machine)
        # Select the washing machine that is plugged in and has a switch

        run_washing_machine(washing_machine)
        # Run the washing machine to complete the task of washing clothes
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine) # Turn the washing machine on

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        run_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine: item):
    body:
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        start_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine: item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

behavior find_tooth_paste_2059_around_bathroom_cabinet_17(tooth_paste:item):
    goal: not unknown(tooth_paste)
    body:
        assert is_tooth_paste(tooth_paste)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(tooth_paste,bathroom_cabinet_instance)
        else:
            exp(tooth_paste,bathroom_cabinet_instance)
    eff:
        unknown[tooth_paste]=False
        close[tooth_paste,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,tooth_paste]=True
    

behavior find_towel_2128_around_shower_16(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==16
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(towel,shower_instance)
        else:
            exp(towel,shower_instance)
    eff:
        unknown[towel]=False
        close[towel,shower_instance]=True
        close[shower_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and plugged(washing_machine)
        # Select the washing machine and ensure it is plugged in

        achieve closed(washing_machine) # Ensure the washing machine door is closed
        achieve is_on(washing_machine) # Turn on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2143_around_cleaning_solution_2143(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind cleaning_solution_instance:item where:
            is_cleaning_solution(cleaning_solution_instance) and id[cleaning_solution_instance]==2143
        achieve close_char(char,cleaning_solution_instance)
        if can_open(cleaning_solution_instance):
            achieve_once open(cleaning_solution_instance)
            exp(cleaning_solution,cleaning_solution_instance)
        else:
            exp(cleaning_solution,cleaning_solution_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,cleaning_solution_instance]=True
        close[cleaning_solution_instance,cleaning_solution]=True
    

behavior find_food_food_2046_around_fridge_126(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_food,fridge_instance)
        else:
            exp(food_food,fridge_instance)
    eff:
        unknown[food_food]=False
        close[food_food,fridge_instance]=True
        close[fridge_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine with ID 2079
        
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in
        
        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine: item):
    body:
        achieve closed(washing_machine)
        achieve plugged(washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        run_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        achieve closed(washing_machine)
        achieve is_on(washing_machine)
        # Ensure washing machine is plugged, closed, and turned on

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine to be operated

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine door is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine: item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine door is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        start_washing_machine(washing_machine) # Run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        run_washing_machine(washing_machine) # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine: item):
    body:
        achieve closed(washing_machine) # Close the washing machine door
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine to start the cycle

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine to begin the wash cycle
        
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior plug_in_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine)

behavior close_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)

behavior run_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        
        plug_in_washing_machine(washing_machine)
        close_washing_machine(washing_machine)
        run_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_vacuum_cleaner_2139_around_cleaning_solution_2143(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind cleaning_solution_instance:item where:
            is_cleaning_solution(cleaning_solution_instance) and id[cleaning_solution_instance]==2143
        achieve close_char(char,cleaning_solution_instance)
        if can_open(cleaning_solution_instance):
            achieve_once open(cleaning_solution_instance)
            exp(vacuum_cleaner,cleaning_solution_instance)
        else:
            exp(vacuum_cleaner,cleaning_solution_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,cleaning_solution_instance]=True
        close[cleaning_solution_instance,vacuum_cleaner]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve is_on(washing_machine)
        # Turn on the washing machine to start the cycle
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine: item):
    body:
        achieve closed(washing_machine)  # Ensure the washing machine is closed
        achieve is_on(washing_machine)  # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        run_washing_machine(washing_machine)
        # Execute the behavior to run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes
        
        achieve plugged(washing_machine) 
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine) 
        # Ensure the washing machine door is closed

        achieve is_on(washing_machine) 
        # Turn on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine: item):
    body:
        achieve closed(washing_machine) 
        achieve plugged(washing_machine) 
        achieve is_on(washing_machine) 

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine)
        achieve closed(washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine)  # Ensure washing machine is plugged in
        achieve is_on(washing_machine)  # Turn on washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) 
        # Select the washing machine to be operated on

        run_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine to be used

        achieve plugged(washing_machine)
        # Plug in the washing machine
        
        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine to start running it
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine: item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in
        
        run_washing_machine(washing_machine)
        # Activate the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve closed(washing_machine)
        # Ensure the washing machine is closed

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior close_the_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)

behavior plug_in_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine)

behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)

        close_the_washing_machine(washing_machine)
        plug_in_washing_machine(washing_machine)
        start_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for clothes

        run_washing_machine(washing_machine)
        # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        assert is_washing_machine(washing_machine)
        # Ensure it is an instance of a washing machine
        
        achieve is_on(washing_machine)
        # Turn on the washing machine to run the wash cycle

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine: item):
    body:
        achieve closed(washing_machine)  # Ensure the washing machine is closed
        achieve plugged(washing_machine)  # Ensure the washing machine is plugged in
        achieve is_on(washing_machine)   # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine for running

        run_washing_machine(washing_machine)
        # Execute the behavior to run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine)
        achieve closed(washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2079
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in

        achieve closed(washing_machine)
        # Ensure the washing machine is closed
        
        achieve is_on(washing_machine)
        # Run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2139_around_cleaning_solution_2143(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind cleaning_solution_instance:item where:
            is_cleaning_solution(cleaning_solution_instance) and id[cleaning_solution_instance]==2143
        achieve close_char(char,cleaning_solution_instance)
        if can_open(cleaning_solution_instance):
            achieve_once open(cleaning_solution_instance)
            exp(vacuum_cleaner,cleaning_solution_instance)
        else:
            exp(vacuum_cleaner,cleaning_solution_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,cleaning_solution_instance]=True
        close[cleaning_solution_instance,vacuum_cleaner]=True
    

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)
        achieve plugged(washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2139_around_cleaning_solution_2143(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind cleaning_solution_instance:item where:
            is_cleaning_solution(cleaning_solution_instance) and id[cleaning_solution_instance]==2143
        achieve close_char(char,cleaning_solution_instance)
        if can_open(cleaning_solution_instance):
            achieve_once open(cleaning_solution_instance)
            exp(vacuum_cleaner,cleaning_solution_instance)
        else:
            exp(vacuum_cleaner,cleaning_solution_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,cleaning_solution_instance]=True
        close[cleaning_solution_instance,vacuum_cleaner]=True
    

behavior find_detergent_2011_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)
        # Turn on the washing machine to start the wash cycle

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Identify the washing machine

        run_washing_machine(washing_machine)
        # Execute the behavior to start the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure washing machine is closed
        achieve plugged(washing_machine) # Plug in the washing machine
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Execute behavior to run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_iron_2161_around_curtain_291(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind curtain_instance:item where:
            is_curtain(curtain_instance) and id[curtain_instance]==291
        achieve close_char(char,curtain_instance)
        if can_open(curtain_instance):
            achieve_once open(curtain_instance)
            exp(iron,curtain_instance)
        else:
            exp(iron,curtain_instance)
    eff:
        unknown[iron]=False
        close[iron,curtain_instance]=True
        close[curtain_instance,iron]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve closed(washing_machine) # Ensure the washing machine door is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine instance

        run_washing_machine(washing_machine)
        # Run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine to run

        run_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior run_the_washing_machine(washing_machine: item):
    body:
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve closed(washing_machine) # Ensure the washing machine door is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        run_the_washing_machine(washing_machine)
        # Execute the behavior to run the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine to run

        achieve is_on(washing_machine)
        # Turn on the washing machine to start the wash cycle
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation

behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in
        
        achieve closed(washing_machine)
        # Ensure the washing machine is closed
        
        achieve is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in
        achieve closed(washing_machine)
        # Ensure the washing machine is closed
        achieve is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior run_washing_machine(washing_machine: item):
    body:
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
        # Run the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        achieve closed(washing_machine) 
        # Ensure the washing machine is closed
        
        achieve plugged(washing_machine) 
        # Ensure the washing machine is plugged in

        achieve is_on(washing_machine)
        # Turn on the washing machine to run it
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior run_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine) # Ensure the washing machine is closed
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        run_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        assert plugged(washing_machine)
        # Make sure the washing machine is plugged in

        assert closed(washing_machine)
        # Ensure the washing machine is closed

        achieve is_on(washing_machine)
        # Turn on the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
def is_washing_machine_instance(washing_machine:item):
    # Check if an item is a washing machine
    return is_washing_machine(washing_machine)

behavior run_washing_machine(washing_machine: item):
    body:
        achieve plugged(washing_machine)
        achieve closed(washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine_instance(washing_machine)
        # Bind to the washing machine instance

        if not visited(washing_machine):
            observe(washing_machine, "Ensure the washing machine is ready to run")
        # Ensure the washing machine has been checked

        run_washing_machine(washing_machine)
        # Execute the behavior to run the washing machine

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_washing_machine_instance(washing_machine:item):
    # Check if an item is a washing machine
    return is_washing_machine(washing_machine)

behavior run_washing_machine(washing_machine: item):
    body:
        achieve plugged(washing_machine)
        achieve closed(washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine_instance(washing_machine)
        # Bind to the washing machine instance

        if not visited(washing_machine):
            observe(washing_machine, "Ensure the washing machine is ready to run")
        # Ensure the washing machine has been checked

        run_washing_machine(washing_machine)
        # Execute the behavior to run the washing machine

##############################
From agent.py-> find a plan in act()
switchoff_executor(washing_machine_2079)open_executor(washing_machine_2079)obs(washing_machine_2079, Ensure the washing machine is ready to run)close_executor(washing_machine_2079)switchon_executor(washing_machine_2079)
##############################
From agent.py
switchoff_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close soap_2125. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close clothes_socks_2159. Robot is close clothes_skirt_2160. Robot is close washing_machine_2079. 
##############################
From agent.py
open_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close soap_2125. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close clothes_socks_2159. Robot is close clothes_skirt_2160. Robot is close washing_machine_2079. 
##############################
From agent.py
obs(washing_machine_2079, Ensure the washing machine is ready to run)
Get this information:  soap_2125 is inside washing_machine_2079. clothes_shirt_2158 is inside washing_machine_2079. washing_machine_2079 is close to sink_120. washing_machine_2079 is close to fridge_126. washing_machine_2079 is close to clothes_pants_2157. washing_machine_2079 is close to clothes_shirt_2158. washing_machine_2079 is close to clothes_socks_2159. washing_machine_2079 is close to clothes_skirt_2160. washing_machine_2079 is close to character_240. washing_machine_2079 is close to soap_2125. washing_machine_2079 is inside dining_room_41. clothes_socks_2159 is inside washing_machine_2079. clothes_pants_2157 is inside washing_machine_2079. clothes_skirt_2160 is inside washing_machine_2079. washing_machine_2079 is OPEN. washing_machine_2079 is CLEAN. washing_machine_2079 is PLUGGED_IN. washing_machine_2079 is OFF.
##############################
From agent.py
close_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close soap_2125. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close clothes_socks_2159. Robot is close clothes_skirt_2160. Robot is close washing_machine_2079. 
##############################
From agent.py
switchon_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close soap_2125. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close clothes_socks_2159. Robot is close clothes_skirt_2160. Robot is close washing_machine_2079. 
##############################
From evaluation.py
cdl_dataset/dataset/Wash_clothes/g2.txt
Checking k1
missed actions: 
missed action num: 0
##############################
