From agent.py
Reset goals: The sub-goals are: 
['1. Prepare a bowl of water.', '2. Put the bowl of water on the table in the home office.', '3. Find the cat and put it on the table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2141_around_kitchen_counter_122(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

behavior find_bowl_2140_around_kitchen_counter_122(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

behavior find_cup_2134_around_kitchen_counter_122(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_bowl_with_water(bowl: item):
    body:
        achieve has_water(bowl)
        # Fill the bowl with water

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl

        fill_bowl_with_water(bowl)
        # Fill the selected bowl with water

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior fill_bowl_with_water(bowl: item):
    body:
        achieve has_water(bowl)
        # Fill the bowl with water

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl

        fill_bowl_with_water(bowl)
        # Fill the selected bowl with water

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(bowl_2140, kitchen_counter_122)walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Find tray_128. Find spectacles_2153. Find fryingpan_2154. Find pot_78. Robot is inside dining_room_41. Robot is close kitchen_counter_122. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(bowl_2140);grab_executor(bowl_2140);walk_executor(faucet_20);switchon_executor(faucet_20);switchoff_executor(faucet_20);walk_executor(table_270);put_executor(bowl_2140, table_270);
missed action num: 7
##############################
From agent.py
exp(bowl_2140, kitchen_counter_122)
Failed to find bowl_2140 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_120)exp(bowl_2140, sink_120)walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(sink_120)
Find basket_for_clothes_2078. Find soap_2010. Find pot_2138. Find ice_2024. Find soap_2126. Find bowl_2141. Find plate_2152. Find cutting_board_2123. Find food_salt_2041. Find fork_2150. Find bowl_2140. Find bowl_2142. Find fork_2151. Robot is inside dining_room_41. Robot is close sink_120. Robot is close kitchen_counter_119. Robot is no longer close kitchen_counter_122.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(bowl_2140);grab_executor(bowl_2140);walk_executor(faucet_20);switchon_executor(faucet_20);switchoff_executor(faucet_20);walk_executor(table_270);put_executor(bowl_2140, table_270);
missed action num: 7
##############################
From agent.py
exp(bowl_2140, sink_120)
Find bowl_2140. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(bowl_2140)
Robot is inside dining_room_41. Robot is close kitchen_counter_119. Robot is close bowl_2140. Robot is no longer close sink_120.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: grab_executor(bowl_2140);walk_executor(faucet_20);switchon_executor(faucet_20);switchoff_executor(faucet_20);walk_executor(table_270);put_executor(bowl_2140, table_270);
missed action num: 6
##############################
From agent.py
grab_executor(bowl_2140)
Robot is inside dining_room_41. Robot is close kitchen_counter_119. Robot is close bowl_2140. Grabbing bowl_2140 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(faucet_20);switchon_executor(faucet_20);switchoff_executor(faucet_20);walk_executor(table_270);put_executor(bowl_2140, table_270);
missed action num: 5
##############################
From agent.py
walk_executor(faucet_20)
Find drawing_33. Find mat_32. Find phone_2029. Robot is inside bathroom_1. Robot is close bowl_2140. Robot is close bathroom_counter_18. Robot is close faucet_20. Robot is no longer inside dining_room_41.Robot is no longer close kitchen_counter_119.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: switchon_executor(faucet_20);switchoff_executor(faucet_20);walk_executor(table_270);put_executor(bowl_2140, table_270);
missed action num: 4
##############################
From agent.py
switchon_executor(faucet_20)
Robot is inside bathroom_1. Robot is close bowl_2140. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(table_270);put_executor(bowl_2140, table_270);
missed action num: 2
##############################
From agent.py
switchoff_executor(faucet_20)
Robot is inside bathroom_1. Robot is close bowl_2140. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(table_270);put_executor(bowl_2140, table_270);
missed action num: 2
##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2139_around_washing_machine_2079(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(vacuum_cleaner,washing_machine_instance)
        else:
            exp(vacuum_cleaner,washing_machine_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,washing_machine_instance]=True
        close[washing_machine_instance,vacuum_cleaner]=True
    

#exp_behavior_end

#goal_representation
def is_home_office_table(table: item):
    # Function to check if a table is in the home office
    return exists room: item : is_home_office(room) and inside(table, room)

behavior place_bowl_on_table(bowl: item, table: item):
    body:
        achieve on(bowl, table) # Place the bowl on the table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and has_water(bowl)
        # Select the bowl with water

        bind table: item where:
            is_table(table) and is_home_office_table(table)
        # Select a table in the home office

        place_bowl_on_table(bowl, table)
        # Place the bowl of water on the table in the home office
#goal_representation_end

##############################
From agent.py->reset_sub_goal
def is_home_office_table(table: item):
    # Function to check if a table is in the home office
    return exists room: item : is_home_office(room) and inside(table, room)

behavior place_bowl_on_table(bowl: item, table: item):
    body:
        achieve on(bowl, table) # Place the bowl on the table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and has_water(bowl)
        # Select the bowl with water

        bind table: item where:
            is_table(table) and is_home_office_table(table)
        # Select a table in the home office

        place_bowl_on_table(bowl, table)
        # Place the bowl of water on the table in the home office
##############################
From agent.py-> find a plan in act()
walk_executor(table_270)put_executor(bowl_2140, table_270)
##############################
From agent.py
walk_executor(table_270)
Find shampoo_2019. Find pillow_286. Find pencil_2014. Find pillow_287. Find brush_2002. Find drawing_288. Find shoes_2033. Find phone_2017. Robot is inside home_office_241. Robot is close bowl_2140. Robot is close couch_269. Robot is close table_270. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_18.Robot is no longer close faucet_20.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: put_executor(bowl_2140, table_270);
missed action num: 1
##############################
From agent.py
put_executor(bowl_2140, table_270)
Find check_2075. Find keyboard_278. Find blow_dryer_2057. Find stamp_2043. Find hanger_292. Find phone_2147. Find headset_2131. Find mat_284. Find cd_2145. Find stamp_2022. Find cat_2069. Find hanger_293. Find chair_271. Find cd_player_2129. Find clothes_pants_2036. Find remote_control_2124. Find pencil_2020. Find mouse_280. Find headset_2146. Find hanger_294. Find dvd_player_2130. Robot is inside home_office_241. Robot is close bowl_2140. Robot is close couch_269. Robot is close table_270. bowl_2140 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: 
missed action num: 0
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k2
missed actions: walk_executor(dresser_274);open_executor(dresser_274);walk_executor(cat_2069);grab_executor(cat_2069);walk_executor(table_270);put_executor(cat_2069, table_270);
missed action num: 6
##############################
Goal representation from planning.py

#exp_behavior

behavior find_toy_2056_around_bookshelf_275(toy:item):
    goal: not unknown(toy)
    body:
        assert is_toy(toy)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==275
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(toy,bookshelf_instance)
        else:
            exp(toy,bookshelf_instance)
    eff:
        unknown[toy]=False
        close[toy,bookshelf_instance]=True
        close[bookshelf_instance,toy]=True
    

behavior find_chair_271_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
def find_cat(cat: item):
    # Check if the item is a cat based on its category
    return is_cat(cat)

def is_home_office_space(item: item):
    # Define a function to check if an item is in the home office
    return is_home_office(item) or (exists room: item: is_home_office(room) and inside(item, room))

behavior __goal__():
    body:
        bind cat: item where:
            find_cat(cat)
        # Select an item that is a cat

        bind table: item where:
            is_table(table) and is_home_office_space(table)
        # Select a table within the home office

        if not visited(cat):
            observe(cat, "Check the location of the cat")
        # Observe the location of the cat if it hasnt been visited

        achieve on(cat, table)
        # Place the cat on the table in the home office

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def find_cat(cat: item):
    # Check if the item is a cat based on its category
    return is_cat(cat)

def is_home_office_space(item: item):
    # Define a function to check if an item is in the home office
    return is_home_office(item) or (exists room: item: is_home_office(room) and inside(item, room))

behavior __goal__():
    body:
        bind cat: item where:
            find_cat(cat)
        # Select an item that is a cat

        bind table: item where:
            is_table(table) and is_home_office_space(table)
        # Select a table within the home office

        if not visited(cat):
            observe(cat, "Check the location of the cat")
        # Observe the location of the cat if it hasnt been visited

        achieve on(cat, table)
        # Place the cat on the table in the home office

##############################
From agent.py-> find a plan in act()
walk_executor(cat_2069)obs(cat_2069, Check the location of the cat)grab_executor(cat_2069)walk_executor(table_270)put_executor(cat_2069, table_270)
##############################
From agent.py
walk_executor(cat_2069)
Robot is inside home_office_241. Robot is close dresser_274. Robot is close cat_2069. Robot is no longer close bowl_2140.Robot is no longer close couch_269.Robot is no longer close table_270.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k2
missed actions: open_executor(dresser_274);grab_executor(cat_2069);walk_executor(table_270);put_executor(cat_2069, table_270);
missed action num: 4
##############################
From agent.py
obs(cat_2069, Check the location of the cat)
Get this information:  cat_2069 is inside home_office_241. cat_2069 is inside dresser_274. cat_2069 is close to dresser_274. cat_2069 is close to character_240. cat_2069 is CLEAN.
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def find_cat(cat: item):
    # Check if the item is a cat based on its category
    return is_cat(cat)

def is_home_office_space(item: item):
    # Define a function to check if an item is in the home office
    return is_home_office(item) or (exists room: item: is_home_office(room) and inside(item, room))

behavior __goal__():
    body:
        bind cat: item where:
            find_cat(cat)
        # Select an item that is a cat

        bind table: item where:
            is_table(table) and is_home_office_space(table)
        # Select a table within the home office

        if not visited(cat):
            observe(cat, "Check the location of the cat")
        # Observe the location of the cat if it hasnt been visited

        achieve on(cat, table)
        # Place the cat on the table in the home office

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def find_cat(cat: item):
    # Check if the item is a cat based on its category
    return is_cat(cat)

def is_home_office_space(item: item):
    # Define a function to check if an item is in the home office
    return is_home_office(item) or (exists room: item: is_home_office(room) and inside(item, room))

behavior __goal__():
    body:
        bind cat: item where:
            find_cat(cat)
        # Select an item that is a cat

        bind table: item where:
            is_table(table) and is_home_office_space(table)
        # Select a table within the home office

        if not visited(cat):
            observe(cat, "Check the location of the cat")
        # Observe the location of the cat if it hasnt been visited

        achieve on(cat, table)
        # Place the cat on the table in the home office

##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k2
missed actions: open_executor(dresser_274);grab_executor(cat_2069);walk_executor(table_270);put_executor(cat_2069, table_270);
missed action num: 4
##############################
From agent.py-> find a plan in act()
obs(cat_2069, Check the location of the cat)open_executor(dresser_274)grab_executor(cat_2069)walk_executor(table_270)put_executor(cat_2069, table_270)
##############################
From agent.py
obs(cat_2069, Check the location of the cat)
Get this information:  cat_2069 is inside home_office_241. cat_2069 is inside dresser_274. cat_2069 is close to dresser_274. cat_2069 is close to character_240. cat_2069 is CLEAN.
##############################
From agent.py
open_executor(dresser_274)
Robot is inside home_office_241. Robot is close dresser_274. Robot is close cat_2069. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k2
missed actions: grab_executor(cat_2069);walk_executor(table_270);put_executor(cat_2069, table_270);
missed action num: 3
##############################
From agent.py
grab_executor(cat_2069)
Robot is inside home_office_241. Robot is close dresser_274. Robot is close cat_2069. Grabbing cat_2069 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k2
missed actions: walk_executor(table_270);put_executor(cat_2069, table_270);
missed action num: 2
##############################
From agent.py
walk_executor(table_270)
Robot is inside home_office_241. Robot is close cat_2069. Robot is close couch_269. Robot is close table_270. Robot is no longer close dresser_274.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k2
missed actions: put_executor(cat_2069, table_270);
missed action num: 1
##############################
From agent.py
put_executor(cat_2069, table_270)
Robot is inside home_office_241. Robot is close cat_2069. Robot is close couch_269. Robot is close table_270. cat_2069 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k2
missed actions: 
missed action num: 0
##############################
