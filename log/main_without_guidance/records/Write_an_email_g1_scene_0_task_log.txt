From agent.py
Reset goals: The sub-goals are: 
['Turn on the computer in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_mouse_166_around_mousepad_414(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind mousepad_instance:item where:
            is_mousepad(mousepad_instance) and id[mousepad_instance]==414
        achieve close_char(char,mousepad_instance)
        if can_open(mousepad_instance):
            achieve_once open(mousepad_instance)
            exp(mouse,mousepad_instance)
        else:
            exp(mouse,mousepad_instance)
    eff:
        unknown[mouse]=False
        close[mouse,mousepad_instance]=True
        close[mousepad_instance,mouse]=True
    

behavior find_keyboard_415_around_computer_170(keyboard:item):
    goal: not unknown(keyboard)
    body:
        assert is_keyboard(keyboard)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==170
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(keyboard,computer_instance)
        else:
            exp(keyboard,computer_instance)
    eff:
        unknown[keyboard]=False
        close[keyboard,computer_instance]=True
        close[computer_instance,keyboard]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind computer: item where:
            is_computer(computer)
        # Select the computer in the home office

        achieve is_on(computer)
        # Ensure the computer is turned on

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior __goal__():
    body:
        bind computer: item where:
            is_computer(computer)
        # Select the computer in the home office

        achieve is_on(computer)
        # Ensure the computer is turned on

##############################
From agent.py-> find a plan in act()
walk_executor(computer_170)switchon_executor(computer_170)
##############################
From agent.py
walk_executor(computer_170)
Find mouse_166. Find chair_103. Find keyboard_168. Find hanger_112. Find hanger_115. Find hanger_113. Robot is inside bedroom_67. Robot is close computer_170. Robot is no longer inside bathroom_1.
##############################
From agent.py
switchon_executor(computer_170)
Robot is inside bedroom_67. Robot is close computer_170. 
##############################
From evaluation.py
cdl_dataset/dataset/Write_an_email/g1.txt
Checking k1
missed actions: walk_executor(computer_417);switchon_executor(computer_417);
missed action num: 2
##############################
From evaluation.py
cdl_dataset/dataset/Write_an_email/g1.txt
Checking k1
missed actions: walk_executor(computer_417);switchon_executor(computer_417);
missed action num: 2
##############################
