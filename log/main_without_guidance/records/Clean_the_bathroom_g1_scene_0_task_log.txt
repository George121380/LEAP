From agent.py
Reset goals: The sub-goals are: 
['Clean the bathroom sink directly.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2053_around_bathroom_cabinet_40(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_napkin_2005_around_bathroom_cabinet_40(napkin:item):
    goal: not unknown(napkin)
    body:
        assert is_napkin(napkin)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(napkin,bathroom_cabinet_instance)
        else:
            exp(napkin,bathroom_cabinet_instance)
    eff:
        unknown[napkin]=False
        close[napkin,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,napkin]=True
    

behavior find_cleaning_solution_2073_around_bathroom_cabinet_40(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

behavior find_detergent_2084_around_bathroom_cabinet_40(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink)
        # Select the bathroom sink

        if dirty(sink):
            scrub(sink)
            # Scrub the sink if it is dirty

        rinse(sink)
        # Rinse the sink after scrubbing to ensure cleanliness

        achieve clean(sink)
        # Make sure the sink is clean

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink)
        # Select the bathroom sink

        if dirty(sink):
            scrub(sink)
            # Scrub the sink if it is dirty

        rinse(sink)
        # Rinse the sink after scrubbing to ensure cleanliness

        achieve clean(sink)
        # Make sure the sink is clean

##############################
From agent.py-> find a plan in act()
walk_executor(sink_42)scrub_executor(sink_42)rinse_executor(sink_42)
##############################
From agent.py
walk_executor(sink_42)
Find basket_for_clothes_2006. Find towel_rack_34. Find detergent_2084. Find soap_2053. Find cleaning_solution_2073. Find towel_rack_32. Find towel_rack_31. Robot is inside bathroom_1. Robot is close bathroom_counter_41. Robot is close sink_42. 
##############################
From agent.py
scrub_executor(sink_42)
Find drawing_176. Robot is inside bathroom_1. Robot is close bathroom_counter_41. Robot is close sink_42. 
##############################
From agent.py
rinse_executor(sink_42)
Robot is inside bathroom_1. Robot is close bathroom_counter_41. Robot is close sink_42. 
##############################
