From agent.py
Reset goals: The sub-goals are: 
['1. Find the ingredients needed for fried rice with egg.', '2. Wash and prepare the ingredients.', '3. Cook the rice and add the egg, mixing them together.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2026_around_kitchen_counter_132(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_onion,kitchen_counter_instance)
        else:
            exp(food_onion,kitchen_counter_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_onion]=True
    

behavior find_food_carrot_2047_around_kitchen_counter_128(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_carrot,kitchen_counter_instance)
        else:
            exp(food_carrot,kitchen_counter_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_carrot]=True
    

behavior find_food_egg_2053_around_kitchen_counter_132(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_egg,kitchen_counter_instance)
        else:
            exp(food_egg,kitchen_counter_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_egg]=True
    

behavior find_food_salt_2068_around_kitchen_counter_132(food_salt:item):
    goal: not unknown(food_salt)
    body:
        assert is_food_salt(food_salt)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_salt,kitchen_counter_instance)
        else:
            exp(food_salt,kitchen_counter_instance)
    eff:
        unknown[food_salt]=False
        close[food_salt,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_salt]=True
    

behavior find_oil_2005_around_cupboard_130(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(oil,cupboard_instance)
        else:
            exp(oil,cupboard_instance)
    eff:
        unknown[oil]=False
        close[oil,cupboard_instance]=True
        close[cupboard_instance,oil]=True
    

behavior find_food_rice_2067_around_kitchen_counter_132(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_rice,kitchen_counter_instance)
        else:
            exp(food_rice,kitchen_counter_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_rice]=True
    

#exp_behavior_end

#goal_representation
 
def has_ingredient(item: item):
    # Function to check if an item is an ingredient for fried rice with egg
    return is_food_rice(item) or is_food_egg(item) or is_food_onion(item) or is_food_carrot(item) or is_oil(item) or is_food_salt(item)

behavior __goal__():
    body:
        foreach item: item:
            if has_ingredient(item) and not visited(item):
                observe(item, "Identify if it is a necessary ingredient for fried rice with egg")
                # Observe to identify if the item is a necessary ingredient for fried rice with egg
 
#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_ingredient(item: item):
    # Function to check if an item is an ingredient for fried rice with egg
    return is_food_rice(item) or is_food_egg(item) or is_food_onion(item) or is_food_carrot(item) or is_oil(item) or is_food_salt(item)

behavior __goal__():
    body:
        foreach item: item:
            if has_ingredient(item) and not visited(item):
                observe(item, "Identify if it is a necessary ingredient for fried rice with egg")
                # Observe to identify if the item is a necessary ingredient for fried rice with egg
 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(food_carrot_2047, kitchen_counter_128)walk_executor(food_carrot_2047)obs(food_carrot_2047, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(kitchen_counter_132)exp(food_egg_2053, kitchen_counter_132)walk_executor(food_egg_2053)obs(food_egg_2053, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(kitchen_counter_132)exp(food_rice_2067, kitchen_counter_132)walk_executor(food_rice_2067)obs(food_rice_2067, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(kitchen_counter_132)exp(food_salt_2068, kitchen_counter_132)walk_executor(food_salt_2068)obs(food_salt_2068, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(cupboard_130)exp(oil_2102, cupboard_130)walk_executor(oil_2102)obs(oil_2102, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(cupboard_130)exp(oil_2005, cupboard_130)walk_executor(oil_2005)obs(oil_2005, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(kitchen_counter_132)exp(food_onion_2026, kitchen_counter_132)walk_executor(food_onion_2026)obs(food_onion_2026, Identify if it is a necessary ingredient for fried rice with egg)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Find cutting_board_2080. Find food_orange_2008. Find spectacles_2106. Robot is inside dining_room_1. Robot is close kitchen_counter_128. Robot is close floor_15. Robot is no longer inside home_office_161.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(freezer_140);switchoff_executor(freezer_140);open_executor(freezer_140);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 16
##############################
From agent.py
exp(food_carrot_2047, kitchen_counter_128)
Failed to find food_carrot_2047 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(food_carrot_2047, kitchen_counter_132)walk_executor(food_carrot_2047)obs(food_carrot_2047, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(kitchen_counter_129)exp(food_egg_2053, kitchen_counter_129)walk_executor(food_egg_2053)obs(food_egg_2053, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(kitchen_counter_132)exp(food_rice_2067, kitchen_counter_132)walk_executor(food_rice_2067)obs(food_rice_2067, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(kitchen_counter_132)exp(food_salt_2068, kitchen_counter_132)walk_executor(food_salt_2068)obs(food_salt_2068, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(kitchen_counter_129)exp(oil_2102, kitchen_counter_129)walk_executor(oil_2102)obs(oil_2102, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(kitchen_counter_129)exp(oil_2005, kitchen_counter_129)walk_executor(oil_2005)obs(oil_2005, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(kitchen_counter_129)exp(food_onion_2026, kitchen_counter_129)walk_executor(food_onion_2026)obs(food_onion_2026, Identify if it is a necessary ingredient for fried rice with egg)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Find pot_54. Find tray_142. Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is no longer close kitchen_counter_128.Robot is no longer close floor_15.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(freezer_140);switchoff_executor(freezer_140);open_executor(freezer_140);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 16
##############################
From agent.py
exp(food_carrot_2047, kitchen_counter_132)
Failed to find food_carrot_2047 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(food_carrot_2047, cupboard_130)walk_executor(food_carrot_2047)obs(food_carrot_2047, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(cupboard_130)exp(food_egg_2053, cupboard_130)walk_executor(food_egg_2053)obs(food_egg_2053, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(cupboard_130)exp(food_rice_2067, cupboard_130)walk_executor(food_rice_2067)obs(food_rice_2067, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(cupboard_130)exp(food_salt_2068, cupboard_130)walk_executor(food_salt_2068)obs(food_salt_2068, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(kitchen_counter_129)exp(oil_2102, kitchen_counter_129)walk_executor(oil_2102)obs(oil_2102, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(kitchen_counter_129)exp(oil_2005, kitchen_counter_129)walk_executor(oil_2005)obs(oil_2005, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(cupboard_130)exp(food_onion_2026, cupboard_130)walk_executor(food_onion_2026)obs(food_onion_2026, Identify if it is a necessary ingredient for fried rice with egg)
##############################
From agent.py
walk_executor(cupboard_130)
Find blender_2032. Find tea_bag_2017. Robot is inside dining_room_1. Robot is close blender_2032. Robot is close tea_bag_2017. Robot is close cupboard_130. Robot is no longer close kitchen_counter_132.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(freezer_140);switchoff_executor(freezer_140);open_executor(freezer_140);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 16
##############################
From agent.py
exp(food_carrot_2047, cupboard_130)
Failed to find food_carrot_2047 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_129)exp(food_carrot_2047, kitchen_counter_129)walk_executor(food_carrot_2047)obs(food_carrot_2047, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(freezer_140)switchoff_executor(freezer_140)open_executor(freezer_140)exp(food_egg_2053, freezer_140)walk_executor(food_egg_2053)obs(food_egg_2053, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(cupboard_131)open_executor(cupboard_131)exp(food_rice_2067, cupboard_131)walk_executor(food_rice_2067)obs(food_rice_2067, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(kitchen_counter_129)exp(food_salt_2068, kitchen_counter_129)walk_executor(food_salt_2068)obs(food_salt_2068, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(cupboard_131)exp(oil_2102, cupboard_131)walk_executor(oil_2102)obs(oil_2102, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(cupboard_131)exp(oil_2005, cupboard_131)walk_executor(oil_2005)obs(oil_2005, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(cupboard_131)exp(food_onion_2026, cupboard_131)walk_executor(food_onion_2026)obs(food_onion_2026, Identify if it is a necessary ingredient for fried rice with egg)
##############################
From agent.py
walk_executor(kitchen_counter_129)
Find oil_2102. Find pot_2093. Find fryingpan_2107. Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is no longer close blender_2032.Robot is no longer close tea_bag_2017.Robot is no longer close cupboard_130.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(freezer_140);switchoff_executor(freezer_140);open_executor(freezer_140);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 16
##############################
From agent.py
exp(food_carrot_2047, kitchen_counter_129)
Failed to find food_carrot_2047 around kitchen_counter_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(food_carrot_2047, cupboard_131)walk_executor(food_carrot_2047)obs(food_carrot_2047, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(freezer_140)switchoff_executor(freezer_140)open_executor(freezer_140)exp(food_egg_2053, freezer_140)walk_executor(food_egg_2053)obs(food_egg_2053, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(oven_141)open_executor(oven_141)exp(food_rice_2067, oven_141)walk_executor(food_rice_2067)obs(food_rice_2067, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(cupboard_131)exp(food_salt_2068, cupboard_131)walk_executor(food_salt_2068)obs(food_salt_2068, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(oil_2102)obs(oil_2102, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(stove_2090)open_executor(stove_2090)exp(oil_2005, stove_2090)walk_executor(oil_2005)obs(oil_2005, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(cupboard_131)exp(food_onion_2026, cupboard_131)walk_executor(food_onion_2026)obs(food_onion_2026, Identify if it is a necessary ingredient for fried rice with egg)
##############################
From agent.py
walk_executor(cupboard_131)
Robot is inside dining_room_1. Robot is close cupboard_131. Robot is no longer close kitchen_counter_129.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(freezer_140);switchoff_executor(freezer_140);open_executor(freezer_140);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 16
##############################
From agent.py
open_executor(cupboard_131)
Robot is inside dining_room_1. Robot is close cupboard_131. 
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(freezer_140);switchoff_executor(freezer_140);open_executor(freezer_140);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 16
##############################
From agent.py
exp(food_carrot_2047, cupboard_131)
Failed to find food_carrot_2047 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(freezer_140)switchoff_executor(freezer_140)open_executor(freezer_140)exp(food_carrot_2047, freezer_140)walk_executor(food_carrot_2047)obs(food_carrot_2047, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(freezer_140)exp(food_egg_2053, freezer_140)walk_executor(food_egg_2053)obs(food_egg_2053, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(freezer_140)exp(food_rice_2067, freezer_140)walk_executor(food_rice_2067)obs(food_rice_2067, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(stove_2090)open_executor(stove_2090)exp(food_salt_2068, stove_2090)walk_executor(food_salt_2068)obs(food_salt_2068, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(oil_2102)obs(oil_2102, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(fryingpan_2107)exp(oil_2005, fryingpan_2107)walk_executor(oil_2005)obs(oil_2005, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(sink_133)exp(food_onion_2026, sink_133)walk_executor(food_onion_2026)obs(food_onion_2026, Identify if it is a necessary ingredient for fried rice with egg)
##############################
From agent.py
walk_executor(freezer_140)
Find food_cereal_2048. Find food_cheese_2049. Find food_chicken_2050. Find food_dessert_2051. Find food_donut_2052. Find food_egg_2053. Find food_fish_2054. Find food_food_2055. Find food_fruit_2056. Find food_hamburger_2057. Find food_ice_cream_2058. Find food_jam_2059. Find food_kiwi_2060. Find food_lemon_2061. Find food_noodles_2062. Find food_oatmeal_2063. Find food_peanut_butter_2064. Find food_pizza_2065. Find food_potato_2066. Find food_rice_2067. Find food_salt_2068. Find food_snack_2069. Find food_sugar_2070. Find food_turkey_2071. Find food_vegetable_2072. Find dry_pasta_2073. Find milk_2074. Find sauce_2101. Find food_steak_2042. Find food_apple_2043. Find food_bacon_2044. Find food_banana_2045. Find food_cake_2046. Find food_carrot_2047. Find chair_138. Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close freezer_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Robot is no longer close cupboard_131.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(freezer_140);switchoff_executor(freezer_140);open_executor(freezer_140);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 16
##############################
From agent.py
switchoff_executor(freezer_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close freezer_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(freezer_140);open_executor(freezer_140);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 15
##############################
From agent.py
open_executor(freezer_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close freezer_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 13
##############################
From agent.py
exp(food_carrot_2047, freezer_140)
Find food_carrot_2047. 
##############################
From agent.py-> find a plan in act()
obs(food_carrot_2047, Identify if it is a necessary ingredient for fried rice with egg)obs(food_egg_2053, Identify if it is a necessary ingredient for fried rice with egg)obs(food_rice_2067, Identify if it is a necessary ingredient for fried rice with egg)obs(food_salt_2068, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(oil_2102)obs(oil_2102, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(fryingpan_2107)exp(oil_2005, fryingpan_2107)walk_executor(oil_2005)obs(oil_2005, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(sink_133)exp(food_onion_2026, sink_133)walk_executor(food_onion_2026)obs(food_onion_2026, Identify if it is a necessary ingredient for fried rice with egg)
##############################
From agent.py
obs(food_carrot_2047, Identify if it is a necessary ingredient for fried rice with egg)
Get this information:  food_carrot_2047 is inside dining_room_1. food_carrot_2047 is inside freezer_140. food_carrot_2047 is close to freezer_140. food_carrot_2047 is close to character_219. food_carrot_2047 is CLEAN.
##############################
From agent.py
obs(food_egg_2053, Identify if it is a necessary ingredient for fried rice with egg)
Get this information:  food_egg_2053 is inside dining_room_1. food_egg_2053 is inside freezer_140. food_egg_2053 is close to freezer_140. food_egg_2053 is close to character_219. food_egg_2053 is CLEAN.
##############################
From agent.py
obs(food_rice_2067, Identify if it is a necessary ingredient for fried rice with egg)
Get this information:  food_rice_2067 is close to freezer_140. food_rice_2067 is close to character_219. food_rice_2067 is inside dining_room_1. food_rice_2067 is inside freezer_140. food_rice_2067 is CLEAN.
##############################
From agent.py
obs(food_salt_2068, Identify if it is a necessary ingredient for fried rice with egg)
Get this information:  food_salt_2068 is close to freezer_140. food_salt_2068 is close to character_219. food_salt_2068 is inside dining_room_1. food_salt_2068 is inside freezer_140. food_salt_2068 is CLEAN.
##############################
From agent.py
walk_executor(oil_2102)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close oil_2102. Robot is no longer close food_cereal_2048.Robot is no longer close food_cheese_2049.Robot is no longer close food_chicken_2050.Robot is no longer close food_dessert_2051.Robot is no longer close food_donut_2052.Robot is no longer close food_egg_2053.Robot is no longer close food_fish_2054.Robot is no longer close food_food_2055.Robot is no longer close food_fruit_2056.Robot is no longer close food_hamburger_2057.Robot is no longer close food_ice_cream_2058.Robot is no longer close food_jam_2059.Robot is no longer close food_kiwi_2060.Robot is no longer close food_lemon_2061.Robot is no longer close food_noodles_2062.Robot is no longer close food_oatmeal_2063.Robot is no longer close food_peanut_butter_2064.Robot is no longer close food_pizza_2065.Robot is no longer close food_potato_2066.Robot is no longer close food_rice_2067.Robot is no longer close food_salt_2068.Robot is no longer close food_snack_2069.Robot is no longer close food_sugar_2070.Robot is no longer close food_turkey_2071.Robot is no longer close food_vegetable_2072.Robot is no longer close dry_pasta_2073.Robot is no longer close milk_2074.Robot is no longer close floor_22.Robot is no longer close sauce_2101.Robot is no longer close freezer_140.Robot is no longer close food_steak_2042.Robot is no longer close food_apple_2043.Robot is no longer close food_bacon_2044.Robot is no longer close food_banana_2045.Robot is no longer close food_cake_2046.Robot is no longer close food_carrot_2047.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 13
##############################
From agent.py
obs(oil_2102, Identify if it is a necessary ingredient for fried rice with egg)
Get this information:  oil_2102 is close to kitchen_counter_129. oil_2102 is close to character_219. oil_2102 is on kitchen_counter_129. oil_2102 is inside dining_room_1.
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Robot is no longer close oil_2102.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 13
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find oil_2005 ?
Answer: To find "oil_2005," go to "home_office_161." Look for "table_193" inside the room, and you will find "oil_2005" on top of "table_193."
Re-decompose: None

##############################
From agent.py
Human Instruction: To find "oil_2005," go to "home_office_161." Look for "table_193" inside the room, and you will find "oil_2005" on top of "table_193."

The actions you have taken:
Action 1: Walk to kitchen_counter_128.
Action 2: look for food_carrot_2047 around kitchen_counter_128.
Action 3: Walk to kitchen_counter_132.
Action 4: look for food_carrot_2047 around kitchen_counter_132.
Action 5: Walk to cupboard_130.
Action 6: look for food_carrot_2047 around cupboard_130.
Action 7: Walk to kitchen_counter_129.
Action 8: look for food_carrot_2047 around kitchen_counter_129.
Action 9: Walk to cupboard_131.
Action 10: Open cupboard_131.
Action 11: look for food_carrot_2047 around cupboard_131.
Action 12: Walk to freezer_140.
Action 13: Switch off freezer_140.
Action 14: Open freezer_140.
Action 15: look for food_carrot_2047 around freezer_140.
Action 16: Observe around food_carrot_2047 with the question of Identify if it is a necessary ingredient for fried rice with egg.
Action 17: Observe around food_egg_2053 with the question of Identify if it is a necessary ingredient for fried rice with egg.
Action 18: Observe around food_rice_2067 with the question of Identify if it is a necessary ingredient for fried rice with egg.
Action 19: Observe around food_salt_2068 with the question of Identify if it is a necessary ingredient for fried rice with egg.
Action 20: Walk to oil_2102.
Action 21: Observe around oil_2102 with the question of Identify if it is a necessary ingredient for fried rice with egg.
Action 22: Walk to fryingpan_2107.

##############################
From agent.py
exp(oil_2005, fryingpan_2107)
Failed to find oil_2005 around fryingpan_2107. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_193)exp(oil_2005, table_193)walk_executor(oil_2005)obs(oil_2005, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(knifeblock_52)exp(food_onion_2026, knifeblock_52)walk_executor(food_onion_2026)obs(food_onion_2026, Identify if it is a necessary ingredient for fried rice with egg)
##############################
From agent.py
walk_executor(table_193)
Find drawing_196. Find mouse_2112. Find pillow_195. Find mat_201. Find laser_pointer_2025. Find dvd_player_2000. Find oil_2005. Find keyboard_2110. Robot is inside home_office_161. Robot is close table_193. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_129.Robot is no longer close fryingpan_2107.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 13
##############################
From agent.py
exp(oil_2005, table_193)
Find oil_2005. 
##############################
From agent.py-> find a plan in act()
walk_executor(oil_2005)obs(oil_2005, Identify if it is a necessary ingredient for fried rice with egg)walk_executor(knifeblock_52)exp(food_onion_2026, knifeblock_52)walk_executor(food_onion_2026)obs(food_onion_2026, Identify if it is a necessary ingredient for fried rice with egg)
##############################
From agent.py
walk_executor(oil_2005)
Robot is inside home_office_161. Robot is close table_193. Robot is close oil_2005. 
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 13
##############################
From agent.py
obs(oil_2005, Identify if it is a necessary ingredient for fried rice with egg)
Get this information:  oil_2005 is close to table_193. oil_2005 is close to character_219. oil_2005 is on table_193. oil_2005 is inside home_office_161. oil_2005 is CLEAN.
##############################
From agent.py
walk_executor(knifeblock_52)
Robot is inside dining_room_1. Robot is close wall_2. Robot is close knifeblock_52. Robot is no longer inside home_office_161.Robot is no longer close table_193.Robot is no longer close oil_2005.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 13
##############################
From agent.py
exp(food_onion_2026, knifeblock_52)
Failed to find food_onion_2026 around knifeblock_52. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_127)exp(food_onion_2026, table_127)walk_executor(food_onion_2026)obs(food_onion_2026, Identify if it is a necessary ingredient for fried rice with egg)
##############################
From agent.py
walk_executor(table_127)
Find mat_115. Find plate_2105. Find bowl_2097. Find drawing_118. Find console_2027. Find crayon_2030. Find napkin_2014. Find fork_2104. Find bowl_2096. Robot is inside dining_room_1. Robot is close mat_115. Robot is close floor_20. Robot is close table_127. Robot is no longer close wall_2.Robot is no longer close knifeblock_52.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 13
##############################
From agent.py
exp(food_onion_2026, table_127)
Failed to find food_onion_2026 around table_127. 
##############################
From agent.py-> find a plan in act()
walk_executor(cutting_board_2080)exp(food_onion_2026, cutting_board_2080)walk_executor(food_onion_2026)obs(food_onion_2026, Identify if it is a necessary ingredient for fried rice with egg)
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close kitchen_counter_128. Robot is no longer close mat_115.Robot is no longer close floor_20.Robot is no longer close table_127.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 13
##############################
From agent.py
exp(food_onion_2026, cutting_board_2080)
Failed to find food_onion_2026 around cutting_board_2080. 
##############################
From agent.py-> find a plan in act()
walk_executor(bench_124)exp(food_onion_2026, bench_124)walk_executor(food_onion_2026)obs(food_onion_2026, Identify if it is a necessary ingredient for fried rice with egg)
##############################
From agent.py
walk_executor(bench_124)
Find mat_114. Robot is inside dining_room_1. Robot is close bench_124. Robot is no longer close cutting_board_2080.Robot is no longer close kitchen_counter_128.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 13
##############################
From agent.py
exp(food_onion_2026, bench_124)
Failed to find food_onion_2026 around bench_124. 
##############################
From agent.py-> find a plan in act()
walk_executor(curtain_294)open_executor(curtain_294)exp(food_onion_2026, curtain_294)walk_executor(food_onion_2026)obs(food_onion_2026, Identify if it is a necessary ingredient for fried rice with egg)
##############################
From agent.py
walk_executor(curtain_294)
Robot is inside bathroom_265. Robot is close curtain_293. Robot is close curtain_294. Robot is no longer inside dining_room_1.Robot is no longer close bench_124.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 13
##############################
From agent.py
open_executor(curtain_294)
Robot is inside bathroom_265. Robot is close curtain_293. Robot is close curtain_294. 
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 13
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find food_onion_2026 ?
Answer: The target item, food_onion_2026, is located inside oven_141. You will find oven_141 in dining_room_1. Please retrieve the item from inside oven_141.
Re-decompose: None

##############################
From agent.py
Human Instruction: To find "oil_2005," go to "home_office_161." Look for "table_193" inside the room, and you will find "oil_2005" on top of "table_193."
The target item, food_onion_2026, is located inside oven_141. You will find oven_141 in dining_room_1. Please retrieve the item from inside oven_141.

The actions you have taken:
Action 1: Walk to kitchen_counter_128.
Action 2: look for food_carrot_2047 around kitchen_counter_128.
Action 3: Walk to kitchen_counter_132.
Action 4: look for food_carrot_2047 around kitchen_counter_132.
Action 5: Walk to cupboard_130.
Action 6: look for food_carrot_2047 around cupboard_130.
Action 7: Walk to kitchen_counter_129.
Action 8: look for food_carrot_2047 around kitchen_counter_129.
Action 9: Walk to cupboard_131.
Action 10: Open cupboard_131.
Action 11: look for food_carrot_2047 around cupboard_131.
Action 12: Walk to freezer_140.
Action 13: Switch off freezer_140.
Action 14: Open freezer_140.
Action 15: look for food_carrot_2047 around freezer_140.
Action 16: Observe around food_carrot_2047 with the question of Identify if it is a necessary ingredient for fried rice with egg.
Action 17: Observe around food_egg_2053 with the question of Identify if it is a necessary ingredient for fried rice with egg.
Action 18: Observe around food_rice_2067 with the question of Identify if it is a necessary ingredient for fried rice with egg.
Action 19: Observe around food_salt_2068 with the question of Identify if it is a necessary ingredient for fried rice with egg.
Action 20: Walk to oil_2102.
Action 21: Observe around oil_2102 with the question of Identify if it is a necessary ingredient for fried rice with egg.
Action 22: Walk to fryingpan_2107.
Action 23: look for oil_2005 around fryingpan_2107.
Action 24: Walk to table_193.
Action 25: look for oil_2005 around table_193.
Action 26: Walk to oil_2005.
Action 27: Observe around oil_2005 with the question of Identify if it is a necessary ingredient for fried rice with egg.
Action 28: Walk to knifeblock_52.
Action 29: look for food_onion_2026 around knifeblock_52.
Action 30: Walk to table_127.
Action 31: look for food_onion_2026 around table_127.
Action 32: Walk to cutting_board_2080.
Action 33: look for food_onion_2026 around cutting_board_2080.
Action 34: Walk to bench_124.
Action 35: look for food_onion_2026 around bench_124.
Action 36: Walk to curtain_294.
Action 37: Open curtain_294.

##############################
From agent.py
exp(food_onion_2026, curtain_294)
Failed to find food_onion_2026 around curtain_294. 
##############################
From agent.py-> find a plan in act()
walk_executor(oven_141)open_executor(oven_141)exp(food_onion_2026, oven_141)walk_executor(food_onion_2026)obs(food_onion_2026, Identify if it is a necessary ingredient for fried rice with egg)
##############################
From agent.py
walk_executor(oven_141)
Find food_butter_2018. Find dough_2021. Find food_onion_2026. Robot is inside dining_room_1. Robot is close food_butter_2018. Robot is close dough_2021. Robot is close food_onion_2026. Robot is close oven_141. Robot is close tray_142. Robot is no longer inside bathroom_265.Robot is no longer close curtain_293.Robot is no longer close curtain_294.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 13
##############################
From agent.py
open_executor(oven_141)
Robot is inside dining_room_1. Robot is close food_butter_2018. Robot is close dough_2021. Robot is close food_onion_2026. Robot is close oven_141. Robot is close tray_142. 
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_dinner/g4.txt
Checking k1
missed actions: walk_executor(pot_2093);grab_executor(pot_2093);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(pot_2093);open_executor(pot_2093);walk_executor(food_rice_2067);grab_executor(food_rice_2067);walk_executor(pot_2093);putin_executor(food_rice_2067, pot_2093);walk_executor(stove_2090);put_executor(pot_2093, stove_2090);switchon_executor(stove_2090);
missed action num: 13
##############################
From agent.py
exp(food_onion_2026, oven_141)
Find food_onion_2026. 
##############################
From agent.py-> find a plan in act()
obs(food_onion_2026, Identify if it is a necessary ingredient for fried rice with egg)
##############################
From agent.py
obs(food_onion_2026, Identify if it is a necessary ingredient for fried rice with egg)
Get this information:  food_onion_2026 is close to oven_141. food_onion_2026 is close to character_219. food_onion_2026 is inside dining_room_1. food_onion_2026 is inside oven_141. food_onion_2026 is CLEAN.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2037_around_bathroom_cabinet_305(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_bowl_2097_around_bowl_2097(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind bowl_instance:item where:
            is_bowl(bowl_instance) and id[bowl_instance]==2097
        achieve close_char(char,bowl_instance)
        if can_open(bowl_instance):
            achieve_once open(bowl_instance)
            exp(bowl,bowl_instance)
        else:
            exp(bowl,bowl_instance)
    eff:
        unknown[bowl]=False
        close[bowl,bowl_instance]=True
        close[bowl_instance,bowl]=True
    

behavior find_homework_2011_around_computer_379(homework:item):
    goal: not unknown(homework)
    body:
        assert is_homework(homework)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==379
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(homework,computer_instance)
        else:
            exp(homework,computer_instance)
    eff:
        unknown[homework]=False
        close[homework,computer_instance]=True
        close[computer_instance,homework]=True
    

behavior find_soap_2038_around_bathroom_cabinet_305(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
def has_clean_ingredient(item: item):
    # Determine if an ingredient is clean
    return clean(item)

behavior wash_and_prepare_ingredient(ingredient: item, sink: item):
    body:
        achieve inside(ingredient, sink)
        # Place the ingredient in the sink

        achieve_once is_on(sink)
        # Temporarily turn on the sink (assumes sink has a water source)
        
        wash(ingredient)
        # Wash the ingredient

        rinse(ingredient)
        # Rinse the ingredient to remove excess water

behavior __goal__():
    body:
        bind carrot: item where:
            is_food_carrot(carrot) and not has_clean_ingredient(carrot)
        # Select the carrot when it is not clean

        bind onion: item where:
            is_food_onion(onion) and not has_clean_ingredient(onion)
        # Select the onion when it is not clean

        bind sink: item where:
            is_sink(sink)
        # Select a sink for washing

        wash_and_prepare_ingredient(carrot, sink)
        # Wash and prepare the carrot

        wash_and_prepare_ingredient(onion, sink)
        # Wash and prepare the onion

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2038_around_bathroom_cabinet_305(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_mat_115_around_bench_125(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==125
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(mat,bench_instance)
        else:
            exp(mat,bench_instance)
    eff:
        unknown[mat]=False
        close[mat,bench_instance]=True
        close[bench_instance,mat]=True
    

#exp_behavior_end

#goal_representation
 
def is_prepared_for_washing_and_cutting(ingredient: item):
    # Function to check if an ingredient is clean and prepared for washing and cutting
    symbol prepared = clean(ingredient)
    return prepared

def is_grabbed(ingredient: item):
    # Function to check if an ingredient has been grabbed
    symbol grabbed = inhand(ingredient)
    return grabbed

behavior wash_and_prepare_ingredient(ingredient: item, sink: item, cutting_board: item):
    body:
        achieve inside(ingredient, sink)
        # Ensure the ingredient is inside the sink

        achieve_once has_a_free_hand(char)
        # Ensure there is a free hand to hold the ingredient

        if has_a_free_hand(char) and not is_grabbed(ingredient):
            achieve_once inhand(ingredient)
            # Temporarily hold the ingredient in hand

        wash(ingredient)
        # Wash the ingredient

        if has_a_free_hand(char) and not is_grabbed(ingredient):
            achieve_once inhand(ingredient)
            # Temporarily hold the ingredient to bring it to the cutting board

        achieve on(ingredient, cutting_board)
        # Place the ingredient on the cutting board

        achieve cut(ingredient)
        # Cut the ingredient

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink)
        # Select a sink

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        foreach ingredient: item:
            if (is_food_onion(ingredient) or is_food_carrot(ingredient)) and not visited(ingredient):
                visit_ingredient(ingredient) 
                # Ensure the item has been observedvisited

        foreach ingredient: item:
            if (is_food_onion(ingredient) or is_food_carrot(ingredient)) and not is_prepared_for_washing_and_cutting(ingredient):
                wash_and_prepare_ingredient(ingredient, sink, cutting_board)
                # Wash and prepare uncut, unclean ingredients

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

'Function visit_ingredient not found. Note that recursive function calls are not supported in the current version.'
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_knife_2036_around_bench_126(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==126
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(knife,bench_instance)
        else:
            exp(knife,bench_instance)
    eff:
        unknown[knife]=False
        close[knife,bench_instance]=True
        close[bench_instance,knife]=True
    

#goal_representation
 
def is_prepared_for_washing_and_cutting(ingredient: item):
    # Function to check if an ingredient is clean and prepared for washing and cutting
    symbol prepared = clean(ingredient)
    return prepared

def is_grabbed(ingredient: item):
    # Function to check if an ingredient has been grabbed
    symbol grabbed = inhand(ingredient)
    return grabbed

behavior wash_and_prepare_ingredient(ingredient: item, sink: item, cutting_board: item):
    body:
        achieve inside(ingredient, sink)
        # Ensure the ingredient is inside the sink

        achieve_once has_a_free_hand(char)
        # Ensure there is a free hand to hold the ingredient

        if has_a_free_hand(char) and not is_grabbed(ingredient):
            achieve_once inhand(ingredient)
            # Temporarily hold the ingredient in hand

        wash(ingredient)
        # Wash the ingredient

        if has_a_free_hand(char) and not is_grabbed(ingredient):
            achieve_once inhand(ingredient)
            # Temporarily hold the ingredient to bring it to the cutting board

        achieve on(ingredient, cutting_board)
        # Place the ingredient on the cutting board

        achieve cut(ingredient)
        # Cut the ingredient

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink)
        # Select a sink

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        foreach ingredient: item:
            if (is_food_onion(ingredient) or is_food_carrot(ingredient)) and not is_food_food(ingredient):
                is_food_food(ingredient) 
                # Ensure the item has been observed

        foreach ingredient: item:
            if (is_food_onion(ingredient) or is_food_carrot(ingredient)) and not is_prepared_for_washing_and_cutting(ingredient):
                wash_and_prepare_ingredient(ingredient, sink, cutting_board)
                # Wash and prepare uncut, unclean ingredients

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Expr statements are not allowed in the current mode: SymbolicExecutionMode.BEHAVIOR
##############################
