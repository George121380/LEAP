From agent.py
Reset goals: The sub-goals are: 
['1. Locate all instances of milk, turkey, egg, fish, and chicken in the house.', '2. Place the milk, turkey, egg, fish, and chicken on the table in the dining room.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_turkey_2112_around_kitchen_counter_122(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_turkey,kitchen_counter_instance)
        else:
            exp(food_turkey,kitchen_counter_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_turkey]=True
    

behavior find_food_chicken_2089_around_fridge_126(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_food_egg_2092_around_fridge_126(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_milk_2115_around_fridge_126(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_food_fish_2093_around_fridge_126(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_fish,fridge_instance)
        else:
            exp(food_fish,fridge_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,fridge_instance]=True
        close[fridge_instance,food_fish]=True
    

#exp_behavior_end

#goal_representation
 
def is_food_item(item: item):
    # Define a function to check if an item is one of the desired food items
    return is_milk(item) or is_food_turkey(item) or is_food_egg(item) or is_food_fish(item) or is_food_chicken(item)

behavior locate_food_item(item: item):
    body:
        if not visited(item):
            observe(item, "Check where the food item is")
        # Observe the location of the food item if it has not been visited

behavior __goal__():
    body:
        foreach item: item:
            if is_food_item(item):
                locate_food_item(item)
        # Locate all instances of milk, turkey, egg, fish, and chicken in the house

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_food_item(item: item):
    # Define a function to check if an item is one of the desired food items
    return is_milk(item) or is_food_turkey(item) or is_food_egg(item) or is_food_fish(item) or is_food_chicken(item)

behavior locate_food_item(item: item):
    body:
        if not visited(item):
            observe(item, "Check where the food item is")
        # Observe the location of the food item if it has not been visited

behavior __goal__():
    body:
        foreach item: item:
            if is_food_item(item):
                locate_food_item(item)
        # Locate all instances of milk, turkey, egg, fish, and chicken in the house

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_chicken_2089, fridge_126)walk_executor(food_chicken_2089)obs(food_chicken_2089, Check where the food item is)walk_executor(fridge_126)exp(food_egg_2092, fridge_126)walk_executor(food_egg_2092)obs(food_egg_2092, Check where the food item is)walk_executor(fridge_126)exp(food_fish_2093, fridge_126)walk_executor(food_fish_2093)obs(food_fish_2093, Check where the food item is)walk_executor(kitchen_counter_122)exp(food_turkey_2112, kitchen_counter_122)walk_executor(food_turkey_2112)obs(food_turkey_2112, Check where the food item is)walk_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Check where the food item is)
##############################
From agent.py
walk_executor(fridge_126)
Find food_onion_2048. Find food_food_2046. Find food_food_2073. Find food_steak_2080. Find food_apple_2081. Find food_bacon_2082. Find food_banana_2083. Find food_cake_2085. Find food_carrot_2086. Find food_cereal_2087. Find food_cheese_2088. Find food_chicken_2089. Find food_dessert_2090. Find food_donut_2091. Find food_egg_2092. Find food_fish_2093. Find food_food_2094. Find food_fruit_2095. Find food_hamburger_2096. Find food_ice_cream_2097. Find food_jam_2098. Find food_kiwi_2099. Find food_lemon_2100. Find food_noodles_2101. Find food_oatmeal_2102. Find food_orange_2103. Find food_onion_2104. Find food_peanut_butter_2105. Find food_pizza_2106. Find food_potato_2107. Find food_rice_2108. Find food_salt_2109. Find food_snack_2110. Find food_sugar_2111. Find food_turkey_2112. Find food_vegetable_2113. Find food_food_2001. Find sauce_2148. Find basket_for_clothes_2078. Find food_food_1000. Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Find keyboard_211. Find mouse_213. Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
open_executor(fridge_126)
Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
exp(food_chicken_2089, fridge_126)
Find food_chicken_2089. 
##############################
From agent.py-> find a plan in act()
obs(food_chicken_2089, Check where the food item is)obs(food_egg_2092, Check where the food item is)obs(food_fish_2093, Check where the food item is)obs(food_turkey_2112, Check where the food item is)exp(milk_2115, fridge_126)walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Check where the food item is)
##############################
From agent.py
obs(food_chicken_2089, Check where the food item is)
Get this information:  food_chicken_2089 is close to fridge_126. food_chicken_2089 is close to character_240. food_chicken_2089 is inside dining_room_41. food_chicken_2089 is inside fridge_126. food_chicken_2089 is CLEAN.
##############################
From agent.py
obs(food_egg_2092, Check where the food item is)
Get this information:  food_egg_2092 is close to fridge_126. food_egg_2092 is close to character_240. food_egg_2092 is inside dining_room_41. food_egg_2092 is inside fridge_126. food_egg_2092 is CLEAN.
##############################
From agent.py
obs(food_fish_2093, Check where the food item is)
Get this information:  food_fish_2093 is inside dining_room_41. food_fish_2093 is inside fridge_126. food_fish_2093 is close to fridge_126. food_fish_2093 is close to character_240. food_fish_2093 is CLEAN.
##############################
From agent.py
obs(food_turkey_2112, Check where the food item is)
Get this information:  food_turkey_2112 is inside dining_room_41. food_turkey_2112 is inside fridge_126. food_turkey_2112 is close to fridge_126. food_turkey_2112 is close to character_240. food_turkey_2112 is CLEAN.
##############################
From agent.py
exp(milk_2115, fridge_126)
Failed to find milk_2115 around fridge_126. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(milk_2115, kitchen_counter_122)walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Check where the food item is)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Find tray_128. Find spectacles_2153. Find fryingpan_2154. Find pot_78. Robot is inside dining_room_41. Robot is close kitchen_counter_122. Robot is no longer close food_onion_2048.Robot is no longer close food_food_2046.Robot is no longer close food_food_2073.Robot is no longer close food_steak_2080.Robot is no longer close food_apple_2081.Robot is no longer close food_bacon_2082.Robot is no longer close food_banana_2083.Robot is no longer close food_cake_2085.Robot is no longer close food_carrot_2086.Robot is no longer close food_cereal_2087.Robot is no longer close food_cheese_2088.Robot is no longer close food_chicken_2089.Robot is no longer close food_dessert_2090.Robot is no longer close food_donut_2091.Robot is no longer close food_egg_2092.Robot is no longer close food_fish_2093.Robot is no longer close food_food_2094.Robot is no longer close food_fruit_2095.Robot is no longer close food_hamburger_2096.Robot is no longer close food_ice_cream_2097.Robot is no longer close food_jam_2098.Robot is no longer close food_kiwi_2099.Robot is no longer close food_lemon_2100.Robot is no longer close food_noodles_2101.Robot is no longer close food_oatmeal_2102.Robot is no longer close food_orange_2103.Robot is no longer close food_onion_2104.Robot is no longer close food_peanut_butter_2105.Robot is no longer close food_pizza_2106.Robot is no longer close food_potato_2107.Robot is no longer close food_rice_2108.Robot is no longer close food_salt_2109.Robot is no longer close food_snack_2110.Robot is no longer close food_sugar_2111.Robot is no longer close food_turkey_2112.Robot is no longer close food_vegetable_2113.Robot is no longer close food_food_2001.Robot is no longer close floor_44.Robot is no longer close sauce_2148.Robot is no longer close fridge_126.
##############################
From agent.py
exp(milk_2115, kitchen_counter_122)
Failed to find milk_2115 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(milk_2115, kitchen_counter_123)walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Check where the food item is)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Find oil_2149. Find knife_2035. Find food_kiwi_2054. Find food_orange_2027. Find tray_2068. Robot is inside dining_room_41. Robot is close kitchen_counter_123. Robot is close floor_45. Robot is no longer close kitchen_counter_122.
##############################
From agent.py
exp(milk_2115, kitchen_counter_123)
Failed to find milk_2115 around kitchen_counter_123. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Find the milk, turkey, egg, fish, and chicken.', '2. Place them on the table in the dining room.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_turkey_2112_around_microwave_135(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind microwave_instance:item where:
            is_microwave(microwave_instance) and id[microwave_instance]==135
        achieve close_char(char,microwave_instance)
        if can_open(microwave_instance):
            achieve_once open(microwave_instance)
            exp(food_turkey,microwave_instance)
        else:
            exp(food_turkey,microwave_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,microwave_instance]=True
        close[microwave_instance,food_turkey]=True
    

behavior find_milk_2115_around_kitchen_counter_119(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(milk,kitchen_counter_instance)
        else:
            exp(milk,kitchen_counter_instance)
    eff:
        unknown[milk]=False
        close[milk,kitchen_counter_instance]=True
        close[kitchen_counter_instance,milk]=True
    

#exp_behavior_end

#goal_representation
 
def has_food(fridge:item):
    # Function to check if an item is related to food and is close to the fridge
    symbol has_food=exists o: item : (is_food_chicken(o) or is_food_egg(o) or is_food_fish(o) or is_food_turkey(o) or is_milk(o)) and close(o, fridge)
    return has_food

behavior __goal__():
    body:
        if exists fridge: item : is_fridge(fridge) and has_food(fridge):
            # If food is already known to be around the fridge, directly bind and approach it
            bind fridge: item where:
                is_fridge(fridge) and has_food(fridge)
            achieve close_char(char, fridge)

        else:
            # If no food is around the fridge based on known information, initiate observation to search for food items
            foreach item: item:
                if not visited(item) and (is_food_chicken(item) or is_food_egg(item) or is_food_fish(item) or is_food_turkey(item) or is_milk(item)):
                    observe(item, "Check where the food item is")

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_food(fridge:item):
    # Function to check if an item is related to food and is close to the fridge
    symbol has_food=exists o: item : (is_food_chicken(o) or is_food_egg(o) or is_food_fish(o) or is_food_turkey(o) or is_milk(o)) and close(o, fridge)
    return has_food

behavior __goal__():
    body:
        if exists fridge: item : is_fridge(fridge) and has_food(fridge):
            # If food is already known to be around the fridge, directly bind and approach it
            bind fridge: item where:
                is_fridge(fridge) and has_food(fridge)
            achieve close_char(char, fridge)

        else:
            # If no food is around the fridge based on known information, initiate observation to search for food items
            foreach item: item:
                if not visited(item) and (is_food_chicken(item) or is_food_egg(item) or is_food_fish(item) or is_food_turkey(item) or is_milk(item)):
                    observe(item, "Check where the food item is")

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)
##############################
From agent.py
walk_executor(fridge_126)
Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. Robot is no longer close kitchen_counter_123.Robot is no longer close floor_45.
##############################
From agent.py
Human Instruction: You need to find the milk, as it has not been located yet. The turkey, egg, fish, and chicken have already been found inside the fridge. Continue searching for the milk in other locations.

The actions you have taken:
Action 1: Walk to fridge_126.
Action 2: Switch off fridge_126.
Action 3: Open fridge_126.
Action 4: look for food_chicken_2089 around fridge_126.
Action 5: Observe around food_chicken_2089 with the question of Check where the food item is.
Action 6: Observe around food_egg_2092 with the question of Check where the food item is.
Action 7: Observe around food_fish_2093 with the question of Check where the food item is.
Action 8: Observe around food_turkey_2112 with the question of Check where the food item is.
Action 9: look for milk_2115 around fridge_126.
Action 10: Walk to kitchen_counter_122.
Action 11: look for milk_2115 around kitchen_counter_122.
Action 12: Walk to kitchen_counter_123.
Action 13: look for milk_2115 around kitchen_counter_123.
Action 14: Walk to fridge_126.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2115_around_cupboard_118(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(milk,cupboard_instance)
        else:
            exp(milk,cupboard_instance)
    eff:
        unknown[milk]=False
        close[milk,cupboard_instance]=True
        close[cupboard_instance,milk]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk item

        if not visited(milk):
            observe(milk, "Check where the milk is")
        # Observe the milk location if it hasnt been visited

        foreach item: item:
            if is_food_turkey(item) or is_food_egg(item) or is_food_fish(item) or is_food_chicken(item):
                assert inside(item, fridge) or visited(item)
        # Verify turkey, egg, fish, and chicken are confirmed inside fridge or visited

        achieve close_char(char, milk)
        # Approach the milk based on current information


#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: fridge; available variables: [Variable<item: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_milk_2115_around_kitchen_counter_119(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(milk,kitchen_counter_instance)
        else:
            exp(milk,kitchen_counter_instance)
    eff:
        unknown[milk]=False
        close[milk,kitchen_counter_instance]=True
        close[kitchen_counter_instance,milk]=True
    

#goal_representation
 
behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk item

        bind fridge: item where:
            is_fridge(fridge)
        # Select the fridge item

        if not visited(milk):
            observe(milk, "Check where the milk is")
        # Observe the milk location if it hasnt been visited

        foreach item: item:
            if is_food_turkey(item) or is_food_egg(item) or is_food_fish(item) or is_food_chicken(item):
                assert inside(item, fridge) or visited(item)
        # Verify turkey, egg, fish, and chicken are confirmed inside fridge or visited

        achieve close_char(char, milk)
        # Approach the milk based on current information

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk item

        bind fridge: item where:
            is_fridge(fridge)
        # Select the fridge item

        if not visited(milk):
            observe(milk, "Check where the milk is")
        # Observe the milk location if it hasnt been visited

        foreach item: item:
            if is_food_turkey(item) or is_food_egg(item) or is_food_fish(item) or is_food_chicken(item):
                assert inside(item, fridge) or visited(item)
        # Verify turkey, egg, fish, and chicken are confirmed inside fridge or visited

        achieve close_char(char, milk)
        # Approach the milk based on current information

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(milk_2115, kitchen_counter_119)walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Check where the milk is)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Find pot_2138. Find bowl_2141. Find plate_2152. Find cutting_board_2123. Find food_salt_2041. Find fork_2150. Find bowl_2140. Find bowl_2142. Find fork_2151. Robot is inside dining_room_41. Robot is close kitchen_counter_119. Robot is no longer close food_onion_2048.Robot is no longer close food_food_2046.Robot is no longer close food_food_2073.Robot is no longer close food_steak_2080.Robot is no longer close food_apple_2081.Robot is no longer close food_bacon_2082.Robot is no longer close food_banana_2083.Robot is no longer close food_cake_2085.Robot is no longer close food_carrot_2086.Robot is no longer close food_cereal_2087.Robot is no longer close food_cheese_2088.Robot is no longer close food_chicken_2089.Robot is no longer close food_dessert_2090.Robot is no longer close food_donut_2091.Robot is no longer close food_egg_2092.Robot is no longer close food_fish_2093.Robot is no longer close food_food_2094.Robot is no longer close food_fruit_2095.Robot is no longer close food_hamburger_2096.Robot is no longer close food_ice_cream_2097.Robot is no longer close food_jam_2098.Robot is no longer close food_kiwi_2099.Robot is no longer close food_lemon_2100.Robot is no longer close food_noodles_2101.Robot is no longer close food_oatmeal_2102.Robot is no longer close food_orange_2103.Robot is no longer close food_onion_2104.Robot is no longer close food_peanut_butter_2105.Robot is no longer close food_pizza_2106.Robot is no longer close food_potato_2107.Robot is no longer close food_rice_2108.Robot is no longer close food_salt_2109.Robot is no longer close food_snack_2110.Robot is no longer close food_sugar_2111.Robot is no longer close food_turkey_2112.Robot is no longer close food_vegetable_2113.Robot is no longer close food_food_2001.Robot is no longer close floor_44.Robot is no longer close sauce_2148.Robot is no longer close fridge_126.
##############################
From agent.py
exp(milk_2115, kitchen_counter_119)
Failed to find milk_2115 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_199)exp(milk_2115, table_199)walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Check where the milk is)
##############################
From agent.py
walk_executor(table_199)
Find mat_203. Find wooden_spoon_2000. Find drawing_201. Find drawing_202. Find tea_bag_2023. Robot is inside bedroom_162. Robot is close table_199. Robot is no longer inside dining_room_41.Robot is no longer close kitchen_counter_119.
##############################
From agent.py
exp(milk_2115, table_199)
Failed to find milk_2115 around table_199. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(milk_2115, cupboard_118)walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Check where the milk is)
##############################
From agent.py
walk_executor(cupboard_118)
Find tea_2066. Find knife_2037. Find food_peanut_butter_2077. Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. Robot is no longer inside bedroom_162.Robot is no longer close table_199.
##############################
From agent.py
open_executor(cupboard_118)
Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. 
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find milk_2115 ?
Answer: Go to dining_room_41. Once there, locate table_114. Milk_2115 is inside table_114.
Re-decompose: None

##############################
From agent.py
Human Instruction: You need to find the milk, as it has not been located yet. The turkey, egg, fish, and chicken have already been found inside the fridge. Continue searching for the milk in other locations.
Go to dining_room_41. Once there, locate table_114. Milk_2115 is inside table_114.

The actions you have taken:
Action 1: Walk to fridge_126.
Action 2: Switch off fridge_126.
Action 3: Open fridge_126.
Action 4: look for food_chicken_2089 around fridge_126.
Action 5: Observe around food_chicken_2089 with the question of Check where the food item is.
Action 6: Observe around food_egg_2092 with the question of Check where the food item is.
Action 7: Observe around food_fish_2093 with the question of Check where the food item is.
Action 8: Observe around food_turkey_2112 with the question of Check where the food item is.
Action 9: look for milk_2115 around fridge_126.
Action 10: Walk to kitchen_counter_122.
Action 11: look for milk_2115 around kitchen_counter_122.
Action 12: Walk to kitchen_counter_123.
Action 13: look for milk_2115 around kitchen_counter_123.
Action 14: Walk to fridge_126.
Action 15: Walk to kitchen_counter_119.
Action 16: look for milk_2115 around kitchen_counter_119.
Action 17: Walk to table_199.
Action 18: look for milk_2115 around table_199.
Action 19: Walk to cupboard_118.
Action 20: Open cupboard_118.

##############################
From agent.py
exp(milk_2115, cupboard_118)
Failed to find milk_2115 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(milk_2115, table_114)walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Check where the milk is)
##############################
From agent.py
walk_executor(table_114)
Find mat_102. Find dry_pasta_2114. Find food_food_2021. Find drawing_110. Find drawing_111. Find knife_2122. Find cup_2133. Find table_cloth_2005. Find food_bread_2084. Find pillow_104. Find cup_2049. Find box_2038. Find clothes_hat_2117. Find clothes_gloves_2118. Find milk_2115. Find pillow_103. Find pillow_105. Find pillow_106. Find lighter_2004. Find lighter_2039. Find cup_2134. Find check_2058. Find cup_2132. Robot is inside dining_room_41. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close wall_68.Robot is no longer close tea_2066.Robot is no longer close knife_2037.Robot is no longer close cupboard_118.Robot is no longer close food_peanut_butter_2077.
##############################
From agent.py
exp(milk_2115, table_114)
Find milk_2115. 
##############################
From agent.py-> find a plan in act()
walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Check where the milk is)
##############################
From agent.py
walk_executor(milk_2115)
Robot is inside dining_room_41. Robot is close table_114. Robot is close milk_2115. Robot is no longer close mat_102.Robot is no longer close floor_47.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_food_2021_around_food_food_2021(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==2021
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

behavior find_food_food_2074_around_food_food_2021(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==2021
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
 
def find_milk_location(table:item):
    # Function to verify if the milk is inside a specific table
    return exists milk: item : is_milk(milk) and inside(milk, table)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select an instance of milk

        bind turkey: item where:
            is_food_turkey(turkey)
        # Select an instance of turkey

        bind egg: item where:
            is_food_egg(egg)
        # Select an instance of egg

        bind fish: item where:
            is_food_fish(fish)
        # Select an instance of fish

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select an instance of chicken

        if not visited(milk):
            foreach table: item:
                if is_table(table) and not visited(table):
                    observe(table, "Check if the milk is inside the table")
                    # Observe each unvisited table to find the milk

        bind table: item where:
            is_table(table) and find_milk_location(table)
        # Bind the table that indicates milk is inside

        achieve inside(milk, table)
        # Achieve the condition where milk is inside the located table

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def find_milk_location(table:item):
    # Function to verify if the milk is inside a specific table
    return exists milk: item : is_milk(milk) and inside(milk, table)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select an instance of milk

        bind turkey: item where:
            is_food_turkey(turkey)
        # Select an instance of turkey

        bind egg: item where:
            is_food_egg(egg)
        # Select an instance of egg

        bind fish: item where:
            is_food_fish(fish)
        # Select an instance of fish

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select an instance of chicken

        if not visited(milk):
            foreach table: item:
                if is_table(table) and not visited(table):
                    observe(table, "Check if the milk is inside the table")
                    # Observe each unvisited table to find the milk

        bind table: item where:
            is_table(table) and find_milk_location(table)
        # Bind the table that indicates milk is inside

        achieve inside(milk, table)
        # Achieve the condition where milk is inside the located table

##############################
From agent.py-> find a plan in act()
obs(table_114, Check if the milk is inside the table)walk_executor(table_199)obs(table_199, Check if the milk is inside the table)walk_executor(table_270)obs(table_270, Check if the milk is inside the table)
##############################
From agent.py
obs(table_114, Check if the milk is inside the table)
Get this information:  dry_pasta_2114 is inside table_114. food_food_2021 is on table_114. table_114 is facing drawing_110. table_114 is facing drawing_111. knife_2122 is on table_114. cup_2133 is on table_114. table_cloth_2005 is on table_114. food_bread_2084 is inside table_114. cup_2049 is on table_114. box_2038 is on table_114. clothes_hat_2117 is on table_114. milk_2115 is inside table_114. cup_2134 is on table_114. check_2058 is on table_114. clothes_gloves_2118 is on table_114. table_114 is inside dining_room_41. cup_2132 is on table_114. table_114 is on mat_102. table_114 is on floor_47. table_114 is close to cup_2049. table_114 is close to check_2058. table_114 is close to food_bread_2084. table_114 is close to floor_44. table_114 is close to floor_47. table_114 is close to floor_48. table_114 is close to floor_50. table_114 is close to dry_pasta_2114. table_114 is close to milk_2115. table_114 is close to clothes_hat_2117. table_114 is close to clothes_gloves_2118. table_114 is close to knife_2122. table_114 is close to cup_2132. table_114 is close to cup_2133. table_114 is close to cup_2134. table_114 is close to table_cloth_2005. table_114 is close to food_food_2021. table_114 is close to mat_102. table_114 is close to pillow_103. table_114 is close to pillow_104. table_114 is close to pillow_105. table_114 is close to pillow_106. table_114 is close to bench_113. table_114 is close to bench_115. table_114 is close to box_2038. table_114 is close to character_240. table_114 is DIRTY.
##############################
From agent.py
walk_executor(table_199)
Robot is inside bedroom_162. Robot is close table_199. Robot is no longer inside dining_room_41.Robot is no longer close table_114.Robot is no longer close milk_2115.
##############################
From agent.py
obs(table_199, Check if the milk is inside the table)
Get this information:  wooden_spoon_2000 is on table_199. table_199 is facing drawing_201. table_199 is facing drawing_202. table_199 is facing computer_209. tea_bag_2023 is on table_199. table_199 is close to couch_198. table_199 is close to floor_167. table_199 is close to floor_168. table_199 is close to tea_bag_2023. table_199 is close to mat_203. table_199 is close to floor_172. table_199 is close to floor_171. table_199 is close to wooden_spoon_2000. table_199 is close to wall_177. table_199 is close to character_240. table_199 is inside bedroom_162. table_199 is DIRTY.
##############################
From agent.py
walk_executor(table_270)
Find shampoo_2019. Find pillow_286. Find pencil_2014. Find pillow_287. Find brush_2002. Find drawing_288. Find shoes_2033. Find phone_2017. Robot is inside home_office_241. Robot is close couch_269. Robot is close table_270. Robot is no longer inside bedroom_162.Robot is no longer close table_199.
##############################
From agent.py
obs(table_270, Check if the milk is inside the table)
Get this information:  table_270 is close to shampoo_2019. table_270 is close to floor_264. table_270 is close to floor_265. table_270 is close to floor_266. table_270 is close to floor_267. table_270 is close to couch_269. table_270 is close to wall_248. table_270 is close to pillow_286. table_270 is close to orchid_285. table_270 is close to pencil_2014. table_270 is close to pillow_287. table_270 is close to character_240. table_270 is inside home_office_241. table_270 is inside couch_269. shampoo_2019 is on table_270. pencil_2014 is on table_270. orchid_285 is on table_270. table_270 is facing drawing_288. table_270 is facing television_281. table_270 is facing computer_276. table_270 is CLEAN.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_turkey_2112_around_cutting_board_2123(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind cutting_board_instance:item where:
            is_cutting_board(cutting_board_instance) and id[cutting_board_instance]==2123
        achieve close_char(char,cutting_board_instance)
        if can_open(cutting_board_instance):
            achieve_once open(cutting_board_instance)
            exp(food_turkey,cutting_board_instance)
        else:
            exp(food_turkey,cutting_board_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,cutting_board_instance]=True
        close[cutting_board_instance,food_turkey]=True
    

#exp_behavior_end

#goal_representation
 
def locate_dining_table(table: item):
    # Function to check if a table is in the dining room
    symbol in_dining_room_table=exists room: item: is_dining_room(room) and inside(table, room)
    return in_dining_room_table

behavior place_on_table(item: item, table: item):
    body:
        achieve on(item, table)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk item

        bind turkey: item where:
            is_food_turkey(turkey)
        # Select the turkey item

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg item

        bind fish: item where:
            is_food_fish(fish)
        # Select the fish item

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken item

        bind table: item where:
            is_table(table) and locate_dining_table(table)
        # Select a table in the dining room

        place_on_table(milk, table)
        # Place the milk on the table in the dining room

        place_on_table(turkey, table)
        # Place the turkey on the table in the dining room

        place_on_table(egg, table)
        # Place the egg on the table in the dining room

        place_on_table(fish, table)
        # Place the fish on the table in the dining room

        place_on_table(chicken, table)
        # Place the chicken on the table in the dining room

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def locate_dining_table(table: item):
    # Function to check if a table is in the dining room
    symbol in_dining_room_table=exists room: item: is_dining_room(room) and inside(table, room)
    return in_dining_room_table

behavior place_on_table(item: item, table: item):
    body:
        achieve on(item, table)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk item

        bind turkey: item where:
            is_food_turkey(turkey)
        # Select the turkey item

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg item

        bind fish: item where:
            is_food_fish(fish)
        # Select the fish item

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken item

        bind table: item where:
            is_table(table) and locate_dining_table(table)
        # Select a table in the dining room

        place_on_table(milk, table)
        # Place the milk on the table in the dining room

        place_on_table(turkey, table)
        # Place the turkey on the table in the dining room

        place_on_table(egg, table)
        # Place the egg on the table in the dining room

        place_on_table(fish, table)
        # Place the fish on the table in the dining room

        place_on_table(chicken, table)
        # Place the chicken on the table in the dining room

##############################
From agent.py-> find a plan in act()
walk_executor(milk_2115)grab_executor(milk_2115)put_executor(milk_2115, table_114)walk_executor(food_turkey_2112)grab_executor(food_turkey_2112)walk_executor(table_114)put_executor(food_turkey_2112, table_114)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(food_egg_2092, table_114)walk_executor(food_fish_2093)grab_executor(food_fish_2093)walk_executor(table_114)put_executor(food_fish_2093, table_114)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(table_114)put_executor(food_chicken_2089, table_114)
##############################
From agent.py
walk_executor(milk_2115)
Robot is inside dining_room_41. Robot is close table_114. Robot is close milk_2115. Robot is no longer inside home_office_241.Robot is no longer close couch_269.Robot is no longer close table_270.
##############################
From agent.py
grab_executor(milk_2115)
Robot is inside dining_room_41. Robot is close table_114. Robot is close milk_2115. Grabbing milk_2115 by right hand. 
##############################
From agent.py
put_executor(milk_2115, table_114)
Robot is inside dining_room_41. Robot is close table_114. Robot is close milk_2115. milk_2115 released by right hand. 
##############################
From agent.py
walk_executor(food_turkey_2112)
Robot is inside dining_room_41. Robot is close food_turkey_2112. Robot is close fridge_126. Robot is no longer close table_114.Robot is no longer close milk_2115.
##############################
From agent.py
grab_executor(food_turkey_2112)
Robot is inside dining_room_41. Robot is close food_turkey_2112. Robot is close fridge_126. Grabbing food_turkey_2112 by right hand. 
##############################
From agent.py
walk_executor(table_114)
Robot is inside dining_room_41. Robot is close food_turkey_2112. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close fridge_126.
##############################
From agent.py
put_executor(food_turkey_2112, table_114)
Robot is inside dining_room_41. Robot is close food_turkey_2112. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. food_turkey_2112 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2092)
Robot is inside dining_room_41. Robot is close food_egg_2092. Robot is close fridge_126. Robot is no longer close food_turkey_2112.Robot is no longer close table_114.Robot is no longer close mat_102.Robot is no longer close floor_47.
##############################
From agent.py
grab_executor(food_egg_2092)
Robot is inside dining_room_41. Robot is close food_egg_2092. Robot is close fridge_126. Grabbing food_egg_2092 by right hand. 
##############################
From agent.py
walk_executor(table_114)
Robot is inside dining_room_41. Robot is close food_egg_2092. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close fridge_126.
##############################
From agent.py
put_executor(food_egg_2092, table_114)
Robot is inside dining_room_41. Robot is close food_egg_2092. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. food_egg_2092 released by right hand. 
##############################
From agent.py
walk_executor(food_fish_2093)
Robot is inside dining_room_41. Robot is close food_fish_2093. Robot is close fridge_126. Robot is no longer close table_114.Robot is no longer close food_egg_2092.Robot is no longer close mat_102.Robot is no longer close floor_47.
##############################
From agent.py
grab_executor(food_fish_2093)
Robot is inside dining_room_41. Robot is close food_fish_2093. Robot is close fridge_126. Grabbing food_fish_2093 by right hand. 
##############################
From agent.py
walk_executor(table_114)
Robot is inside dining_room_41. Robot is close food_fish_2093. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close fridge_126.
##############################
From agent.py
put_executor(food_fish_2093, table_114)
Robot is inside dining_room_41. Robot is close food_fish_2093. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. food_fish_2093 released by right hand. 
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close fridge_126. Robot is no longer close table_114.Robot is no longer close food_fish_2093.Robot is no longer close mat_102.Robot is no longer close floor_47.
##############################
From agent.py
grab_executor(food_chicken_2089)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close fridge_126. Grabbing food_chicken_2089 by right hand. 
##############################
From agent.py
walk_executor(table_114)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close fridge_126.
##############################
From agent.py
put_executor(food_chicken_2089, table_114)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. food_chicken_2089 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g1.txt
Checking k1
missed actions: 
missed action num: 0
##############################
