From agent.py
Reset goals: The sub-goals are: 
['Find the book and put it on the table in home office. Then turn on the light in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2066_around_bookshelf_233(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==233
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve on(book, table)
        # Place the book on the table

behavior turn_on_light(light:item):
    body:
        achieve is_on(light)
        # Turn on the light

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select the book

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table in the home office

        bind light: item where:
            is_light(light) and inside(light, home_office)
        # Select a light in the home office

        place_book_on_table(book, table)
        turn_on_light(light)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2067_around_bookshelf_233(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==233
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_book_and_put_on_table(book:item, table:item):
    body:
        achieve inside(book, table)
        # Ensure the book is placed on the table

behavior turn_on_light(light:item):
    body:
        achieve is_on(light)
        # Turn on the light

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind book: item where:
            is_book(book)
        # Select a book

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table inside the home office

        bind light: item where:
            is_light(light) and inside(light, home_office)
        # Select a light inside the home office

        find_book_and_put_on_table(book, table)
        turn_on_light(light)

#goal_representation_end

##############################
