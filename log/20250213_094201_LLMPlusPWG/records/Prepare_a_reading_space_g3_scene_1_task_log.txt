From agent.py
Reset goals: The sub-goals are: 
['Find a book and put it on the coffe table in home office. Then open the window in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2137_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_novel_2060_around_bookshelf_124(novel:item):
    goal: not unknown(novel)
    body:
        assert is_novel(novel)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(novel,bookshelf_instance)
        else:
            exp(novel,bookshelf_instance)
    eff:
        unknown[novel]=False
        close[novel,bookshelf_instance]=True
        close[bookshelf_instance,novel]=True
    

#exp_behavior_end

#goal_representation
 
def in_home_office(item: item):
    # Function to check if an item is in the home office
    symbol inside_home_office = exists room: item : (is_home_office(room) and inside(item, room))
    return inside_home_office

behavior find_and_place_book(book: item, table: item):
    body:
        achieve_once on(book, table)

behavior open_window(window: item):
    body:
        achieve open(window)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and in_home_office(book)
        # Bind a book that is in the home office
        
        bind table: item where:
            is_table(table) and in_home_office(table)
        # Bind a table that is in the home office
        
        find_and_place_book(book, table) 
        # Place the book on the table in the home office
        
        bind window: item where:
            is_window(window) and in_home_office(window)
        # Bind a window that is in the home office

        open_window(window)
        # Open the window in the home office

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2137_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_novel_2060_around_bookshelf_124(novel:item):
    goal: not unknown(novel)
    body:
        assert is_novel(novel)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(novel,bookshelf_instance)
        else:
            exp(novel,bookshelf_instance)
    eff:
        unknown[novel]=False
        close[novel,bookshelf_instance]=True
        close[bookshelf_instance,novel]=True
    

#exp_behavior_end

#goal_representation

behavior find_and_place_book(book:item, table:item, home_office:item):
    body:
        achieve_once on(book, table)
        observe(home_office, "Locate the window to open it")

behavior open_window(window:item):
    body:
        achieve open(window)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        bind table: item where:
            is_table(table) and inside(table, home_office)
        bind home_office: item where:
            is_home_office(home_office)
        bind window: item where:
            is_window(window) and inside(window, home_office)

        find_and_place_book(book, table, home_office)
        open_window(window)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2137_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
def is_in_home_office(item:item):
    # Function to check if an item is in the home office
    symbol in_home_office=exists room: item : (is_home_office(room) and inside(item, room))
    return in_home_office

behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table)

behavior open_window(window:item):
    body:
        achieve open(window)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and not visited(book)
        # Select an unvisited book
        
        bind coffee_table: item where:
            is_table(coffee_table) and is_in_home_office(coffee_table)
        # Select a table inside the home office
        
        bind window: item where: 
            is_window(window) and is_in_home_office(window)
        # Select a window inside the home office

        place_book_on_table(book, coffee_table)
        observe(window, "Is the window open")
        open_window(window)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_in_home_office(item:item):
    # Function to check if an item is in the home office
    symbol in_home_office=exists room: item : (is_home_office(room) and inside(item, room))
    return in_home_office

behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table)

behavior open_window(window:item):
    body:
        achieve open(window)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and not visited(book)
        # Select an unvisited book
        
        bind coffee_table: item where:
            is_table(coffee_table) and is_in_home_office(coffee_table)
        # Select a table inside the home office
        
        bind window: item where: 
            is_window(window) and is_in_home_office(window)
        # Select a window inside the home office

        place_book_on_table(book, coffee_table)
        observe(window, "Is the window open")
        open_window(window)

##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_124)open_executor(bookshelf_124)exp(book_2136, bookshelf_124)walk_executor(book_2136)grab_executor(book_2136)walk_executor(table_270)put_executor(book_2136, table_270)walk_executor(window_310)open_executor(window_310)obs(window_310, Is the window open)
##############################
From agent.py
walk_executor(bookshelf_124)
Robot find: book_2136, envelope_2055, book_2137, drawing_110, drawing_111, Robot is close to the bookshelf_124. 
##############################
From agent.py
open_executor(bookshelf_124)
Robot find: Robot is close to the bookshelf_124. bookshelf_124 is opened. 
##############################
From agent.py
exp(book_2136, bookshelf_124)
Find book_2136. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2136)grab_executor(book_2136)walk_executor(table_270)put_executor(book_2136, table_270)walk_executor(window_310)open_executor(window_310)obs(window_310, Is the window open)
##############################
From agent.py
walk_executor(book_2136)
Robot find: Robot is close to the bookshelf_124. Robot is close to the book_2136. 
##############################
From agent.py
grab_executor(book_2136)
Robot find: Robot is close to the bookshelf_124. Robot is close to the book_2136. Grabbing book_2136 by right hand. 
##############################
From agent.py
walk_executor(table_270)
Robot find: shoes_2033, shampoo_2019, pillow_286, pencil_2014, phone_2017, pillow_287, drawing_288, brush_2002, Robot is close to the book_2136. Robot is close to the couch_269. Robot is close to the table_270. 
##############################
From agent.py
put_executor(book_2136, table_270)
Robot find: Robot is close to the book_2136. Robot is close to the couch_269. Robot is close to the table_270. book_2136 is on table_270. table_270 is close book_2136. book_2136 is close table_270. book_2136 released by right hand. 
##############################
From agent.py
walk_executor(window_310)
Robot find: Robot is close to the window_310. 
##############################
From agent.py
open_executor(window_310)
Robot find: Robot is close to the window_310. window_310 is opened. 
##############################
From agent.py
obs(window_310, Is the window open)
Get this information:  window_310 is close to curtain_289. window_310 is close to curtain_290. window_310 is close to curtain_291. window_310 is close to hanger_292. window_310 is close to ceiling_257. window_310 is close to hanger_293. window_310 is close to hanger_294. window_310 is close to floor_267. window_310 is close to couch_269. window_310 is close to dresser_274. window_310 is close to wall_245. window_310 is close to wall_248. window_310 is close to wall_249. window_310 is close to pillow_286. window_310 is close to pillow_287. window_310 is close to character_240. window_310 is inside home_office_241. window_310 is DIRTY. window_310 is OPEN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Find a book and put it on the coffe table in home office. Then open the window in the home office.
Action History:
['walk_executor(bookshelf_124)', 'open_executor(bookshelf_124)', 'walk_executor(book_2136)', 'grab_executor(book_2136)', 'walk_executor(table_270)', 'put_executor(book_2136, table_270)', 'walk_executor(window_310)', 'open_executor(window_310)']
Time info:
Time consume: 75 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 3
goal correct times: 0
action_num: 8

Task complete rate:
1
Scene_id: 1
##############################
