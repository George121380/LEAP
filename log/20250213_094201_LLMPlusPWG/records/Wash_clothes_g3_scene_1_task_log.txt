From agent.py
Reset goals: The sub-goals are: 
['Hand wash the jacket, then wash it by washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_clothes_jacket_2119_around_basket_for_clothes_2078(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_jacket,basket_for_clothes_instance)
        else:
            exp(clothes_jacket,basket_for_clothes_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_jacket(jacket:item):
    body:
        achieve_once clean(jacket) # Hand wash the jacket to make it clean

behavior machine_wash_jacket(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine) # Place the jacket in the washing machine
        achieve_once closed(washing_machine) # Close the washing machine door
        achieve is_on(washing_machine) # Turn on the washing machine to wash the jacket

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket to be washed

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine

        hand_wash_jacket(jacket)
        machine_wash_jacket(jacket, washing_machine)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior hand_wash_jacket(jacket:item):
    body:
        achieve_once clean(jacket) # Hand wash the jacket to make it clean

behavior machine_wash_jacket(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine) # Place the jacket in the washing machine
        achieve_once closed(washing_machine) # Close the washing machine door
        achieve is_on(washing_machine) # Turn on the washing machine to wash the jacket

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket to be washed

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine

        hand_wash_jacket(jacket)
        machine_wash_jacket(jacket, washing_machine)

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2078)exp(clothes_jacket_2119, basket_for_clothes_2078)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)walk_executor(washing_machine_2079)open_executor(washing_machine_2079)putin_executor(clothes_jacket_2119, washing_machine_2079)close_executor(washing_machine_2079)plugin_executor(washing_machine_2079)switchon_executor(washing_machine_2079)
##############################
From agent.py
walk_executor(basket_for_clothes_2078)
Robot find: clothes_pants_2157, clothes_shirt_2158, clothes_socks_2159, clothes_skirt_2160, Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the clothes_socks_2159. Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. 
##############################
From agent.py
exp(clothes_jacket_2119, basket_for_clothes_2078)
Fail to find clothes_jacket_2119 around basket_for_clothes_2078. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(clothes_jacket_2119, cupboard_117)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)walk_executor(washing_machine_2079)open_executor(washing_machine_2079)putin_executor(clothes_jacket_2119, washing_machine_2079)close_executor(washing_machine_2079)plugin_executor(washing_machine_2079)switchon_executor(washing_machine_2079)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, pot_78, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(clothes_jacket_2119, cupboard_117)
Fail to find clothes_jacket_2119 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(clothes_jacket_2119, cupboard_118)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)walk_executor(washing_machine_2079)open_executor(washing_machine_2079)putin_executor(clothes_jacket_2119, washing_machine_2079)close_executor(washing_machine_2079)plugin_executor(washing_machine_2079)switchon_executor(washing_machine_2079)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(clothes_jacket_2119, cupboard_118)
Fail to find clothes_jacket_2119 around cupboard_118. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['Hand wash the jacket, then wash it by washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_clothes_jacket_2119_around_washing_machine_2079(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

behavior find_soap_2126_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
behavior hand_wash_jacket(jacket:item):
    body:
        achieve_once dirty(jacket) # Assume jacket is initially dirty
        wash(jacket) # Wash the jacket by hand
        scrub(jacket) # Scrub the jacket to aid in cleaning
        rinse(jacket) # Rinse the jacket to remove soap
        squeeze(jacket) # Squeeze out excess water from jacket
        achieve clean(jacket) # Jacket should be clean after all processes

behavior machine_wash_jacket(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine) # Place the jacket in the washing machine
        achieve_once closed(washing_machine) # Close the washing machine door
        achieve_once is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) 
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        
        hand_wash_jacket(jacket) # Perform hand washing on the jacket
        machine_wash_jacket(jacket, washing_machine) # Perform machine washing on the jacket
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_soap_2126_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_clothes_jacket_2119_around_washing_machine_2079(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
def is_target_jacket(jacket: item):
    symbol correct_jacket = is_clothes_jacket(jacket) and (dirty(jacket) or not visited(jacket))
    return correct_jacket

behavior observe_jacket_location(jacket: item):
    body:
        observe(jacket, "Verify the location and state of the jacket")

behavior hand_wash(jacket: item):
    body:
        achieve_once clean(jacket)
        # Hand wash the jacket to clean it

behavior machine_wash(jacket: item, washing_machine: item):
    body:
        achieve_once inside(jacket, washing_machine)
        achieve_once closed(washing_machine)
        achieve_once is_on(washing_machine)
        # Place the jacket in the washing machine and turn it on

behavior __goal__():
    body:
        if exists jacket: item : is_target_jacket(jacket):
            bind jacket: item where:
                is_target_jacket(jacket)
            # If the target jacket is found, proceed to the washing tasks
            hand_wash(jacket)
            
            bind washing_machine: item where:
                is_washing_machine(washing_machine)
            machine_wash(jacket, washing_machine)
        else:
            # Search for the jacket in likely locations if not already found
            foreach jacket: item:
                if is_clothes_jacket(jacket) and not visited(jacket):
                    observe_jacket_location(jacket)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_target_jacket(jacket: item):
    symbol correct_jacket = is_clothes_jacket(jacket) and (dirty(jacket) or not visited(jacket))
    return correct_jacket

behavior observe_jacket_location(jacket: item):
    body:
        observe(jacket, "Verify the location and state of the jacket")

behavior hand_wash(jacket: item):
    body:
        achieve_once clean(jacket)
        # Hand wash the jacket to clean it

behavior machine_wash(jacket: item, washing_machine: item):
    body:
        achieve_once inside(jacket, washing_machine)
        achieve_once closed(washing_machine)
        achieve_once is_on(washing_machine)
        # Place the jacket in the washing machine and turn it on

behavior __goal__():
    body:
        if exists jacket: item : is_target_jacket(jacket):
            bind jacket: item where:
                is_target_jacket(jacket)
            # If the target jacket is found, proceed to the washing tasks
            hand_wash(jacket)
            
            bind washing_machine: item where:
                is_washing_machine(washing_machine)
            machine_wash(jacket, washing_machine)
        else:
            # Search for the jacket in likely locations if not already found
            foreach jacket: item:
                if is_clothes_jacket(jacket) and not visited(jacket):
                    observe_jacket_location(jacket)

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2079)open_executor(washing_machine_2079)exp(clothes_jacket_2119, washing_machine_2079)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)walk_executor(washing_machine_2079)putin_executor(clothes_jacket_2119, washing_machine_2079)close_executor(washing_machine_2079)plugin_executor(washing_machine_2079)switchon_executor(washing_machine_2079)
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. 
##############################
From agent.py
open_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is opened. 
##############################
From agent.py
exp(clothes_jacket_2119, washing_machine_2079)
Fail to find clothes_jacket_2119 around washing_machine_2079. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['Hand wash the jacket, then wash it by washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_soap_2126_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_jacket(jacket:item):
    body:
        wash(jacket)
        achieve_once clean(jacket)

behavior use_washing_machine(jacket:item, machine:item):
    body:
        achieve_once inside(jacket, machine)
        achieve_once closed(machine)
        achieve plugged(machine)
        achieve_once is_on(machine)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        wash_jacket(jacket)
        use_washing_machine(jacket, washing_machine)
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_clothes_jacket_2119_around_dishwasher_129(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==129
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(clothes_jacket,dishwasher_instance)
        else:
            exp(clothes_jacket,dishwasher_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,dishwasher_instance]=True
        close[dishwasher_instance,clothes_jacket]=True
    

behavior find_rag_2052_around_bathroom_counter_18(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(rag,bathroom_counter_instance)
        else:
            exp(rag,bathroom_counter_instance)
    eff:
        unknown[rag]=False
        close[rag,bathroom_counter_instance]=True
        close[bathroom_counter_instance,rag]=True
    

#exp_behavior_end

#goal_representation
behavior hand_wash_jacket(jacket: item):
    body:
        achieve clean(jacket)
        # Manually clean the jacket

behavior machine_wash(jacket: item, washing_machine: item):
    body:
        achieve_once inside(jacket, washing_machine)
        # Place the jacket inside the washing machine
        achieve_once closed(washing_machine)
        # Close the washing machine door
        achieve_once is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket to be washed
        hand_wash_jacket(jacket)
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        machine_wash(jacket, washing_machine)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior hand_wash_jacket(jacket: item):
    body:
        achieve clean(jacket)
        # Manually clean the jacket

behavior machine_wash(jacket: item, washing_machine: item):
    body:
        achieve_once inside(jacket, washing_machine)
        # Place the jacket inside the washing machine
        achieve_once closed(washing_machine)
        # Close the washing machine door
        achieve_once is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket to be washed
        hand_wash_jacket(jacket)
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        machine_wash(jacket, washing_machine)
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_129)open_executor(dishwasher_129)exp(clothes_jacket_2119, dishwasher_129)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)walk_executor(washing_machine_2079)putin_executor(clothes_jacket_2119, washing_machine_2079)close_executor(washing_machine_2079)plugin_executor(washing_machine_2079)switchon_executor(washing_machine_2079)
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the dishwasher_129. 
##############################
From agent.py
open_executor(dishwasher_129)
Robot find: detergent_2011, measuring_cup_2012, Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the measuring_cup_2012. dishwasher_129 is opened. 
##############################
From agent.py
exp(clothes_jacket_2119, dishwasher_129)
Fail to find clothes_jacket_2119 around dishwasher_129. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "hand wash the jacket, then wash it by washing machine." ?
Answer: To hand wash the jacket, put the jacket in a sink and wash it. After that, put it into the washing machine and turn on the washing machine.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_soap_2010_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
behavior wash_jacket_hand(jacket:item, sink:item):
    body:
        achieve_once inside(jacket, sink)
        # Place the jacket in the sink for washing
        wash(jacket)
        # Hand wash the jacket
        rinse(jacket)
        # Rinse the jacket

behavior wash_jacket_machine(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)
        # Place the jacket inside the washing machine
        achieve_once closed(washing_machine)
        # Close the washing machine door
        achieve is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket to be washed
        bind sink: item where:
            is_sink(sink)
        # Select a sink for hand washing the jacket
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine for machine washing the jacket
        wash_jacket_hand(jacket, sink)
        wash_jacket_machine(jacket, washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_soap_2010_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_cleaning_solution_2143_around_bathroom_cabinet_17(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_jacket(jacket:item, sink:item):
    body:
        achieve_once inside(jacket, sink)
        wash(jacket)
        rinse(jacket)
        # Hand wash and rinse the jacket in the sink

behavior machine_wash_jacket(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)
        achieve_once closed(washing_machine)
        achieve_once is_on(washing_machine)
        # Place the jacket in the washing machine, close the door, and turn it on

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket item

        bind sink: item where:
            is_sink(sink)
        # Select a sink

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine

        hand_wash_jacket(jacket, sink)
        # Hand wash the jacket in the sink

        machine_wash_jacket(jacket, washing_machine)
        # Machine wash the jacket in the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_clothes_jacket_2119_around_sink_120(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(clothes_jacket,sink_instance)
        else:
            exp(clothes_jacket,sink_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,sink_instance]=True
        close[sink_instance,clothes_jacket]=True
    

behavior find_soap_2010_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_jacket(jacket:item, sink:item):
    body:
        achieve_once inside(jacket, sink)
        # Place the jacket in the sink
        wash(jacket)
        # Hand wash the jacket

behavior machine_wash_jacket(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)
        # Place the jacket inside the washing machine
        achieve_once closed(washing_machine)
        # Close the washing machine
        achieve_once is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select any jacket
        bind sink: item where:
            is_sink(sink)
        # Select any sink
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select any washing machine

        hand_wash_jacket(jacket, sink)
        machine_wash_jacket(jacket, washing_machine)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior hand_wash_jacket(jacket:item, sink:item):
    body:
        achieve_once inside(jacket, sink)
        # Place the jacket in the sink
        wash(jacket)
        # Hand wash the jacket

behavior machine_wash_jacket(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)
        # Place the jacket inside the washing machine
        achieve_once closed(washing_machine)
        # Close the washing machine
        achieve_once is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select any jacket
        bind sink: item where:
            is_sink(sink)
        # Select any sink
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select any washing machine

        hand_wash_jacket(jacket, sink)
        machine_wash_jacket(jacket, washing_machine)

##############################
From agent.py-> find a plan in act()
walk_executor(sink_120)exp(clothes_jacket_2119, sink_120)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(sink_19)putin_executor(clothes_jacket_2119, sink_19)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)walk_executor(washing_machine_2079)putin_executor(clothes_jacket_2119, washing_machine_2079)close_executor(washing_machine_2079)plugin_executor(washing_machine_2079)switchon_executor(washing_machine_2079)
##############################
From agent.py
walk_executor(sink_120)
Robot find: fork_2150, bowl_2142, food_salt_2041, soap_2126, soap_2010, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, ice_2024, Robot is close to the sink_120. Robot is close to the kitchen_counter_119. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_jacket_2119 ?
Answer: The target item, clothes_jacket_2119, is located inside bedroom_162. You will find it on the couch_198, which is close to the clothes_jacket_2119. Look for the couch within the bedroom, and the jacket should be on top of it.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item, clothes_jacket_2119, is located inside bedroom_162. You will find it on the couch_198, which is close to the clothes_jacket_2119. Look for the couch within the bedroom, and the jacket should be on top of it.

Human Guidance: To hand wash the jacket, put the jacket in a sink and wash it. After that, put it into the washing machine and turn on the washing machine.
The actions you have taken:
Action 1: Walk to basket_for_clothes_2078.
Action 2: look for clothes_jacket_2119 around basket_for_clothes_2078.
Action 3: Walk to cupboard_117.
Action 4: look for clothes_jacket_2119 around cupboard_117.
Action 5: Walk to cupboard_118.
Action 6: Open cupboard_118.
Action 7: look for clothes_jacket_2119 around cupboard_118.
Action 8: Walk to washing_machine_2079.
Action 9: Open washing_machine_2079.
Action 10: look for clothes_jacket_2119 around washing_machine_2079.
Action 11: Walk to dishwasher_129.
Action 12: Open dishwasher_129.
Action 13: look for clothes_jacket_2119 around dishwasher_129.
Action 14: Walk to sink_120.

##############################
From agent.py
exp(clothes_jacket_2119, sink_120)
Fail to find clothes_jacket_2119 around sink_120. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['Hand wash the jacket, then wash it by washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2119_around_couch_198(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==198
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(clothes_jacket,couch_instance)
        else:
            exp(clothes_jacket,couch_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,couch_instance]=True
        close[couch_instance,clothes_jacket]=True
    

behavior find_soap_2010_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
def close_to_clothes_jacket(char:character, couch:item):
    symbol is_close=exists jacket: item : (is_clothes_jacket(jacket) and close(jacket, couch))
    return is_close

behavior discover_jacket(couch:item):
    body:
        if not visited(couch):
            observe(couch, "Look for clothes jacket on the couch")

behavior hand_wash_jacket(jacket:item, sink:item):
    body:
        achieve_once inside(jacket, sink)
        wash(jacket)
        achieve_once clean(jacket)

behavior machine_wash_jacket(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)
        achieve_once closed(washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom) and id[bedroom] == 162

        bind couch: item where:
            is_couch(couch) and inside(couch, bedroom) and close_to_clothes_jacket(char, couch)

        discover_jacket(couch)

        bind jacket: item where:
            is_clothes_jacket(jacket) and close(jacket, couch)

        bind sink: item where:
            is_sink(sink)

        hand_wash_jacket(jacket, sink)

        bind washing_machine: item where:
            is_washing_machine(washing_machine)

        machine_wash_jacket(jacket, washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_clothes_jacket_2119_around_couch_198(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==198
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(clothes_jacket,couch_instance)
        else:
            exp(clothes_jacket,couch_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,couch_instance]=True
        close[couch_instance,clothes_jacket]=True
    

behavior find_soap_2010_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_jacket_in_room(jacket:item, room:item):
    body:
        achieve_once inside(jacket, room)
        # The goal is to find the jacket inside the specified room

behavior hand_wash(jacket:item, sink:item):
    body:
        achieve_once has_water(sink)
        # Ensure the sink has water before washing
        wash(jacket)
        # Wash the jacket by hand

behavior clean_jacket(jacket:item, room:item):
    body:
        bind sink: item where:
            is_sink(sink) and close(sink, jacket)
        # Identify the sink close to the jacket
        hand_wash(jacket, sink)
        # Proceed with hand washing the jacket

behavior machine_wash(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)
        # Move the jacket to the washing machine
        achieve_once closed(washing_machine)
        # Close the washing machine door
        achieve_once is_on(washing_machine)
        # Turn on the washing machine to start the washing process

behavior wash_jacket_in_machine(jacket:item, room:item):
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and inside(washing_machine, room)
        # Bind a washing machine inside the bedroom
        machine_wash(jacket, washing_machine)
        # Wash the jacket using the machine inside the room

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket]==2119
        # Select the jacket with ID 2119

        bind room: item where:
            is_bedroom(room) and id[room]==162
        # Select the bedroom with ID 162

        if exists item1: item : (is_couch(item1) and inside(item1, room) and on(jacket, item1)):
            # If the jacket is already found on a couch inside the room
            achieve close_char(char, item1)
            # Approach the couch

        else:
            foreach item1: item:
                if is_couch(item1) and not visited(item1) and inside(item1, room):
                    observe(item1, "Check if clothes_jacket_2119 is on this couch")
                    # Look on couch for the jacket if not visited

        if exists item1: item : (is_couch(item1) and inside(item1, room) and on(jacket, item1)):
            # Once jacket is confirmed on a couch, start cleaning process
            clean_jacket(jacket, room)
            # Hand wash the jacket
            wash_jacket_in_machine(jacket, room)
            # Use washing machine to wash the jacket

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_soap_2126_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
def close_to_couch_jacket(char: character, couch: item):
    # Check if the jacket is close to the couch in the bedroom
    symbol is_close= exists jacket: item : (is_clothes_jacket(jacket) and on(jacket, couch))
    return is_close

behavior find_jacket_in_bedroom(bedroom: item, couch: item):
    body:
        if not visited(couch):
            # If the couch has not been visited, observe it for the jacket
            observe(couch, "Look for clothes_jacket_2119 on the couch")

behavior wash_jacket_by_hand(jacket: item, sink: item):
    body:
        achieve_once clean(jacket)
        # Wash the jacket in the sink

behavior wash_jacket_by_machine(jacket: item, washing_machine: item):
    body:
        achieve_once inside(jacket, washing_machine)
        # Place the jacket inside the washing machine
        achieve_once closed(washing_machine)
        # Close the washing machine door
        achieve_once is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        bind couch: item where:
            is_couch(couch) and inside(couch, bedroom)
        # Select the couch inside the bedroom
        
        find_jacket_in_bedroom(bedroom, couch)
        
        bind jacket: item where:
            is_clothes_jacket(jacket) and on(jacket, couch)
        # Find clothes_jacket_2119 on the couch
        
        bind sink: item where:
            is_sink(sink) and inside(sink, bedroom)
        # Assuming the sink is in the bedroom for hand washing purpose
        
        wash_jacket_by_hand(jacket, sink)
        
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Assume theres a washing machine to use for washing
        
        wash_jacket_by_machine(jacket, washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_soap_2010_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_jacket_in_bedroom(jacket: item, couch: item, bedroom: item):
    body:
        achieve inside(jacket, bedroom) 
        achieve on(jacket, couch)

behavior hand_wash_jacket(jacket: item, sink: item):
    body:
        achieve clean(jacket)
        achieve has_water(sink)
        # Assume both clean and has_water are maintained through the handwashing process

behavior machine_wash_jacket(jacket: item, washing_machine: item):
    body:
        achieve inside(jacket, washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        bind couch: item where:
            is_couch(couch)
        # Couch in the scene
        bind bedroom: item where:
            is_bedroom(bedroom)
        # Bedroom in the scene
        bind sink: item where:
            is_sink(sink)
        # Sink in the scene
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Washing machine in the scene

        find_jacket_in_bedroom(jacket, couch, bedroom)
        hand_wash_jacket(jacket, sink)
        machine_wash_jacket(jacket, washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_soap_2010_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
def locate_jacket_in_bedroom(jacket:item, bedroom:item):
    # Function to check if the jacket is located in the specified bedroom
    symbol is_jacket_in_bedroom= exists couch: item : (is_couch(couch) and on(jacket, couch) and close(couch, jacket) and inside(couch, bedroom))
    return is_jacket_in_bedroom

behavior pick_jacket(jacket:item):
    body:
        achieve_once inhand(jacket)

behavior hand_wash(jacket:item, sink:item):
    body:
        achieve_once inside(jacket, sink)
        wash(jacket)
        achieve_once clean(jacket)

behavior place_in_washing_machine(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)

behavior start_washing_machine(washing_machine:item):
    body:
        achieve_once closed(washing_machine)
        achieve_once is_on(washing_machine)

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom) and id[bedroom]==162

        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket]==2119 and locate_jacket_in_bedroom(jacket, bedroom)

        bind sink: item where:
            is_sink(sink)

        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2079

        pick_jacket(jacket)
        hand_wash(jacket, sink)
        place_in_washing_machine(jacket, washing_machine)
        start_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_clothes_jacket_2119_around_couch_198(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==198
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(clothes_jacket,couch_instance)
        else:
            exp(clothes_jacket,couch_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,couch_instance]=True
        close[couch_instance,clothes_jacket]=True
    

behavior find_soap_2010_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation

def is_jacket_on_couch(jacket:item, couch:item):
    # Function to check if the jacket is on the couch
    symbol is_on_couch= on(jacket, couch)
    return is_on_couch

behavior hand_wash_jacket(jacket:item, sink:item):
    body:
        bind couch: item where:
            is_couch(couch)
        # Bind the couch to search for the jacket
        if not visited(couch):
            observe(couch, "Check if clothes_jacket_2119 is on the couch")
        if is_jacket_on_couch(jacket, couch):
            achieve_once inhand(jacket)
            achieve close_char(char, sink)
            achieve_once inside(jacket, sink)
            wash(jacket)
            achieve clean(jacket)
        else:
            # If the jacket is not found on the couch, search the whole bedroom
            bind bedroom: item where:
                is_bedroom(bedroom) and close(couch, bedroom)
            foreach furniture: item:
                if inside(furniture, bedroom) and not visited(furniture):
                    observe(furniture, "Check if clothes_jacket_2119 is there")

behavior wash_by_machine(jacket:item, washing_machine:item):
    body:
        achieve close_char(char, washing_machine)
        achieve_once inside(jacket, washing_machine)
        achieve_once closed(washing_machine)
        achieve_once is_on(washing_machine)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        bind sink: item where:
            is_sink(sink)
        hand_wash_jacket(jacket, sink)
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        wash_by_machine(jacket, washing_machine)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "hand wash the jacket, then wash it by washing machine." ?
Answer: To hand wash the jacket, put the jacket in a sink and wash it. After that, put it into the washing machine and turn on the washing machine.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_soap_2010_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_jacket(jacket:item, sink:item):
    body:
        achieve_once inside(jacket, sink)
        wash(jacket)
        achieve_once clean(jacket)
        achieve_once has_water(sink)
        rinse(jacket)
        squeeze(jacket)

behavior machine_wash_jacket(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)
        achieve_once closed(washing_machine)
        achieve_once is_on(washing_machine)
        achieve_once clean(jacket)

behavior observe_jacket_location():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom) and id[bedroom] == 162
        bind couch: item where:
            is_couch(couch) and inside(couch, bedroom)
        observe(couch, "Check if clothes_jacket_2119 is on the couch")

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2119
        bind sink: item where:
            is_sink(sink)
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        if not exists jacket: item : (is_clothes_jacket(jacket) and on(jacket, couch)):
            observe_jacket_location()
        if not visited(sink):
            observe(sink, "Locate the sink to wash jacket")
        if not visited(washing_machine):
            observe(washing_machine, "Locate the washing machine for jacket")
        hand_wash_jacket(jacket, sink)
        machine_wash_jacket(jacket, washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

behavior find_soap_2125_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
def find_jacket(jacket:item, bedroom:item):
    # Function to find the jacket inside the bedroom
    symbol jacket_found = exists couch: item : (is_couch(couch) and on(jacket, couch) and inside(couch, bedroom))
    return jacket_found

behavior move_jacket_to_washing_machine(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)

behavior start_washing_machine(washing_machine:item):
    body:
        achieve_once closed(washing_machine)
        achieve_once is_on(washing_machine)

behavior hand_wash_jacket(jacket:item, sink:item):
    body:
        achieve clean(jacket)
        achieve has_water(jacket)
        achieve_once inside(jacket, sink)

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom) and id[bedroom] == 162

        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2119

        bind sink: item where:
            is_sink(sink) and id[sink] == 120

        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2079

        if find_jacket(jacket, bedroom):
            # Hand wash the jacket and then move to washing machine
            hand_wash_jacket(jacket, sink)
            move_jacket_to_washing_machine(jacket, washing_machine)
            start_washing_machine(washing_machine)
        else:
            # Search for the jacket in case it wasnt found initially
            foreach couch: item:
                if is_couch(couch) and inside(couch, bedroom) and not visited(couch):
                    observe(couch, "Check for clothes_jacket_2119 on this couch")

#goal_representation_end

##############################
From agent.py-> find a plan in act()
walk_executor(couch_198)obs(couch_198, Check for clothes_jacket_2119 on this couch)
##############################
From agent.py
walk_executor(couch_198)
Robot find: chair_2003, instrument_guitar_2028, rag_2052, mat_203, phone_2016, clothes_jacket_2119, Robot is close to the couch_198. 
##############################
From agent.py
obs(couch_198, Check for clothes_jacket_2119 on this couch)
Get this information:  chair_2003 is on couch_198. rag_2052 is on couch_198. couch_198 is close to phone_2016. couch_198 is close to rag_2052. couch_198 is close to table_199. couch_198 is close to clothes_jacket_2119. couch_198 is close to mat_203. couch_198 is close to floor_172. couch_198 is close to floor_171. couch_198 is close to wall_174. couch_198 is close to instrument_guitar_2028. couch_198 is close to wall_177. couch_198 is close to chair_2003. couch_198 is close to character_240. instrument_guitar_2028 is on couch_198. couch_198 is inside bedroom_162. clothes_jacket_2119 is on couch_198. phone_2016 is on couch_198. couch_198 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to hand wash the jacket: put the jacket in the sink and wash it. Then, the robot should transfer the jacket to the washing machine and turn on the washing machine to complete washing the jacket as instructed.
##############################
From agent.py
Human Instruction: The robot needs to hand wash the jacket: put the jacket in the sink and wash it. Then, the robot should transfer the jacket to the washing machine and turn on the washing machine to complete washing the jacket as instructed.

Human Guidance: To hand wash the jacket, put the jacket in a sink and wash it. After that, put it into the washing machine and turn on the washing machine.
The actions you have taken:
Action 1: Walk to basket_for_clothes_2078.
Action 2: look for clothes_jacket_2119 around basket_for_clothes_2078.
Action 3: Walk to cupboard_117.
Action 4: look for clothes_jacket_2119 around cupboard_117.
Action 5: Walk to cupboard_118.
Action 6: Open cupboard_118.
Action 7: look for clothes_jacket_2119 around cupboard_118.
Action 8: Walk to washing_machine_2079.
Action 9: Open washing_machine_2079.
Action 10: look for clothes_jacket_2119 around washing_machine_2079.
Action 11: Walk to dishwasher_129.
Action 12: Open dishwasher_129.
Action 13: look for clothes_jacket_2119 around dishwasher_129.
Action 14: Walk to sink_120.
Action 15: look for clothes_jacket_2119 around sink_120.
Action 16: Walk to couch_198.
Action 17: Observe around couch_198 with the question of Check for clothes_jacket_2119 on this couch.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_soap_2126_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior handwash_jacket(jacket:item, sink:item):
    body:
        achieve_once inside(jacket, sink)
        wash(jacket)

behavior machine_wash(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)
        achieve_once closed(washing_machine)
        achieve_once is_on(washing_machine)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        bind sink: item where:
            is_sink(sink)
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        handwash_jacket(jacket, sink)
        machine_wash(jacket, washing_machine)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior handwash_jacket(jacket:item, sink:item):
    body:
        achieve_once inside(jacket, sink)
        wash(jacket)

behavior machine_wash(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)
        achieve_once closed(washing_machine)
        achieve_once is_on(washing_machine)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        bind sink: item where:
            is_sink(sink)
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        handwash_jacket(jacket, sink)
        machine_wash(jacket, washing_machine)

##############################
From agent.py-> find a plan in act()
walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(sink_19)putin_executor(clothes_jacket_2119, sink_19)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)walk_executor(washing_machine_2079)putin_executor(clothes_jacket_2119, washing_machine_2079)close_executor(washing_machine_2079)plugin_executor(washing_machine_2079)switchon_executor(washing_machine_2079)
##############################
From agent.py
walk_executor(clothes_jacket_2119)
Robot find: Robot is close to the couch_198. Robot is close to the clothes_jacket_2119. 
##############################
From agent.py
grab_executor(clothes_jacket_2119)
Robot find: Robot is close to the couch_198. Robot is close to the clothes_jacket_2119. Grabbing clothes_jacket_2119 by right hand. 
##############################
From agent.py
walk_executor(sink_19)
Robot find: after_shave_2063, soap_2125, detergent_2155, mat_32, phone_2029, cleaning_solution_2143, drawing_33, Robot is close to the clothes_jacket_2119. Robot is close to the bathroom_counter_18. Robot is close to the sink_19. 
##############################
From agent.py
putin_executor(clothes_jacket_2119, sink_19)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the bathroom_counter_18. Robot is close to the sink_19. clothes_jacket_2119 is inside sink_19. sink_19 is close clothes_jacket_2119. clothes_jacket_2119 is close sink_19. clothes_jacket_2119 released by right hand. 
##############################
From agent.py
walk_executor(clothes_jacket_2119)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the sink_19. 
##############################
From agent.py
grab_executor(clothes_jacket_2119)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the sink_19. Grabbing clothes_jacket_2119 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchon_executor(faucet_20)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned on. 
##############################
From agent.py
wash_executor(clothes_jacket_2119)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. clothes_jacket_2119 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned off. 
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the washing_machine_2079. 
##############################
From agent.py
putin_executor(clothes_jacket_2119, washing_machine_2079)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the washing_machine_2079. clothes_jacket_2119 is inside washing_machine_2079. clothes_jacket_2119 is close washing_machine_2079. washing_machine_2079 is close clothes_jacket_2119. clothes_jacket_2119 released by right hand. 
##############################
From agent.py
close_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is closed. 
##############################
From agent.py
plugin_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is plugged in. 
##############################
From agent.py
switchon_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Hand wash the jacket, then wash it by washing machine.
Action History:
['walk_executor(basket_for_clothes_2078)', 'walk_executor(cupboard_117)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'walk_executor(washing_machine_2079)', 'open_executor(washing_machine_2079)', 'walk_executor(dishwasher_129)', 'open_executor(dishwasher_129)', 'walk_executor(sink_120)', 'walk_executor(couch_198)', 'walk_executor(clothes_jacket_2119)', 'grab_executor(clothes_jacket_2119)', 'walk_executor(sink_19)', 'putin_executor(clothes_jacket_2119, sink_19)', 'walk_executor(clothes_jacket_2119)', 'grab_executor(clothes_jacket_2119)', 'walk_executor(faucet_20)', 'switchon_executor(faucet_20)', 'wash_executor(clothes_jacket_2119)', 'switchoff_executor(faucet_20)', 'walk_executor(washing_machine_2079)', 'putin_executor(clothes_jacket_2119, washing_machine_2079)', 'close_executor(washing_machine_2079)', 'plugin_executor(washing_machine_2079)', 'switchon_executor(washing_machine_2079)']
Time info:
Time consume: 325 seconds
Exp_helper query times: 1
Guidance query times: 2
library scale: 0
goal generate times: 17
goal correct times: 0
action_num: 25

Task complete rate:
1
Scene_id: 1
##############################
