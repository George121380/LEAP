Goal Representation,Debug Result,Action,Add Info,LLM Answer,Plan
k1,"missed actions: walk_executor(pot_2069);grab_executor(pot_2069);walk_executor(faucet_43);switchon_ex
ecutor(faucet_43);switchoff_executor(faucet_43);walk_executor(pot_2069);open_executor(pot_2069);walk
_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);walk_executor(dry_pas
ta_2042);grab_executor(dry_pasta_2042);walk_executor(pot_2069);putin_executor(dry_pasta_2042, pot_20
69);walk_executor(stove_2065);put_executor(pot_2069, stove_2065);switchon_executor(stove_2065);",,,,
k2,"missed actions: walk_executor(pot_2069);open_executor(pot_2069);walk_executor(oil_2079);grab_executo
r(oil_2079);walk_executor(pot_2069);putin_executor(oil_2079, pot_2069);walk_executor(fridge_289);swi
tchoff_executor(fridge_289);open_executor(fridge_289);walk_executor(food_chicken_2017);grab_executor
(food_chicken_2017);walk_executor(pot_2069);putin_executor(food_chicken_2017, pot_2069);grab_executo
r(pot_2069);walk_executor(stove_2065);put_executor(pot_2069, stove_2065);switchon_executor(stove_206
5);",,,,
k3,"missed actions: walk_executor(fridge_289);switchoff_executor(fridge_289);open_executor(fridge_289);w
alk_executor(dry_pasta_2042);grab_executor(dry_pasta_2042);walk_executor(plate_1000);putin_executor(
dry_pasta_2042, plate_1000);walk_executor(food_chicken_2017);grab_executor(food_chicken_2017);walk_e
xecutor(plate_1000);putin_executor(food_chicken_2017, plate_1000);",,,,
"Reset goals: The sub-goals are: 
['1. Cook the chicken pasta.', '2. Put the chicken pasta on a plate.']",,,,,
" 
behavior cook_chicken_pasta(chicken:item, pasta:item, pot:item, stove:item):
    body:
        achieve inside(chicken, pot)
        # Place the chicken inside the pot

        achieve inside(pasta, pot)
        # Place the pasta inside the pot

        achieve on(pot, stove)
        # Place the pot on the stove

        achieve is_on(stove)
        # Turn on the stove to start cooking

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select a chicken item

        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select a dry pasta item

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        cook_chicken_pasta(chicken, pasta, pot, stove)
",From function reset_goal,,,,
,,,,"Record from func query_human in agent.py
Question: Can you tell me how to cook the chicken pasta.
Answer: I don't know.
",
,,,,"Record from func query_human in agent.py
Question: Can you tell me how to put the chicken pasta on a plate.
Answer: I don't know.
",
"Reset goals: The sub-goals are: 
['1. Cook the chicken and pasta together.', '2. Put the cooked chicken pasta on a plate.']",,,,,
" 
behavior cook_chicken_pasta(chicken:item, pasta:item, pot:item, stove:item):
    body:
        achieve inside(chicken, pot)
        # Place the chicken inside the pot
        achieve inside(pasta, pot)
        # Place the pasta inside the pot
        achieve on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to cook

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken
        
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select the pasta
        
        bind pot: item where:
            is_pot(pot)
        # Select the pot
        
        bind stove: item where:
            is_stove(stove)
        # Select the stove

        cook_chicken_pasta(chicken, pasta, pot, stove)

",From function reset_goal,,,,
,,,,,"(CrowControllerApplier<walk_executor(stove_2065)>, CrowControllerApplier<open_executor(stove_2065)>,
 CrowControllerApplier<exp(pot_2069, stove_2065)>, CrowControllerApplier<walk_executor(fridge_289)>,
 CrowControllerApplier<switchoff_executor(fridge_289)>, CrowControllerApplier<open_executor(fridge_2
89)>, CrowControllerApplier<exp(food_chicken_2017, fridge_289)>, CrowControllerApplier<walk_executor
(pot_2069)>, CrowControllerApplier<open_executor(pot_2069)>, CrowControllerApplier<walk_executor(foo
d_chicken_2017)>, CrowControllerApplier<grab_executor(food_chicken_2017)>, CrowControllerApplier<wal
k_executor(pot_2069)>, CrowControllerApplier<putin_executor(food_chicken_2017, pot_2069)>, CrowContr
ollerApplier<walk_executor(cupboard_229)>, CrowControllerApplier<open_executor(cupboard_229)>, CrowC
ontrollerApplier<exp(dry_pasta_2042, cupboard_229)>, CrowControllerApplier<walk_executor(dry_pasta_2
042)>, CrowControllerApplier<grab_executor(dry_pasta_2042)>, CrowControllerApplier<walk_executor(pot
_2069)>, CrowControllerApplier<putin_executor(dry_pasta_2042, pot_2069)>, CrowControllerApplier<grab
_executor(pot_2069)>, CrowControllerApplier<walk_executor(stove_2065)>, CrowControllerApplier<put_ex
ecutor(pot_2069, stove_2065)>, CrowControllerApplier<close_executor(stove_2065)>, CrowControllerAppl
ier<switchon_executor(stove_2065)>)"
,,walk_executor(stove_2065),"Find cleaning_solution_2073. Find remote_control_2052. Find napkin_2005. Find knife_2050. Find cutti
ng_board_2051. Find cup_2063. Find cup_2064. Find pot_2069. Find oil_2079. Find fryingpan_2083. Find
 tray_296. Find drawing_239. Find drawing_238. Find drawing_240. Find drawing_241. Find drawing_242.
 Find drawing_243. Robot is inside dining_room_201. Robot is close cleaning_solution_2073. Robot is 
close remote_control_2052. Robot is close kitchen_counter_230. Robot is close stove_2065. Grabbing c
leaning_solution_2073 by right hand. Grabbing remote_control_2052 by left hand. Robot is on couch_35
2. ",,
