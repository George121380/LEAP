From agent.py
Reset goals: The sub-goals are: 
['Make a bowl of egg salad with boiled egg, lemon, and vegetables.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2142_around_kitchen_counter_122(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

behavior find_knife_2037_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_food_lemon_2100_around_fridge_126(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_lemon,fridge_instance)
        else:
            exp(food_lemon,fridge_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,fridge_instance]=True
        close[fridge_instance,food_lemon]=True
    

behavior find_food_egg_2092_around_fridge_126(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_food_vegetable_2113_around_fridge_126(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_vegetable,fridge_instance)
        else:
            exp(food_vegetable,fridge_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,fridge_instance]=True
        close[fridge_instance,food_vegetable]=True
    

#exp_behavior_end

#goal_representation
 
def is_boiled_egg(egg:item):
    symbol boiled=exists o:item: (is_food_egg(o) and is_on(o))
    return boiled

behavior cut_food(food:item):
    body:
        achieve_once cut(food)

behavior mix_foods(food1:item, food2:item, food3:item, bowl:item):
    body:
        achieve_once inside(food1, bowl)
        achieve_once inside(food2, bowl)
        achieve_once inside(food3, bowl)

behavior __goal__():
    body:
        # Bind food ingredients
        bind egg:item where:
            is_food_egg(egg) and is_boiled_egg(egg)
            
        bind lemon:item where:
            is_food_lemon(lemon)
            
        foreach vegetable:item:
            if is_food_vegetable(vegetable):
                cut_food(vegetable)

        # Bind a bowl where the salad will be prepared
        bind bowl:item where:
            is_bowl(bowl)
            
        mix_foods(egg, lemon, vegetable, bowl)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_vegetable_2113_around_kitchen_counter_122(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_vegetable,kitchen_counter_instance)
        else:
            exp(food_vegetable,kitchen_counter_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_vegetable]=True
    

behavior find_food_lemon_2100_around_fridge_126(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_lemon,fridge_instance)
        else:
            exp(food_lemon,fridge_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,fridge_instance]=True
        close[fridge_instance,food_lemon]=True
    

behavior find_food_egg_2092_around_fridge_126(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_food_carrot_2015_around_kitchen_counter_122(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_carrot,kitchen_counter_instance)
        else:
            exp(food_carrot,kitchen_counter_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_carrot]=True
    

#exp_behavior_end

#goal_representation
 
def has_ingredients(sink: item):
    symbol has_ingredients = exists o: item : (is_food_egg(o) or is_food_lemon(o) or is_food_vegetable(o)) and inside(o, sink)
    return has_ingredients

behavior gather_ingredients(ingredient: item, fridge: item):
    body:
        achieve_once inside(ingredient, bowl)

behavior prepare_ingredients(ingredient: item):
    body:
        achieve_once cut(ingredient)

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink)
        bind fridge: item where:
            is_fridge(fridge)
        bind bowl: item where:
            is_bowl(bowl)
        foreach o: item:
            if inside(o, sink) and (is_food_egg(o) or is_food_lemon(o) or is_food_vegetable(o)):
                gather_ingredients(o, fridge)
                prepare_ingredients(o)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2141_around_kitchen_counter_122(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

behavior find_food_vegetable_2113_around_kitchen_counter_122(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_vegetable,kitchen_counter_instance)
        else:
            exp(food_vegetable,kitchen_counter_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_vegetable]=True
    

behavior find_food_lemon_2100_around_fridge_126(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_lemon,fridge_instance)
        else:
            exp(food_lemon,fridge_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,fridge_instance]=True
        close[fridge_instance,food_lemon]=True
    

behavior find_food_egg_2092_around_fridge_126(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_knife_2122_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
def has_ingredients(bowl: item):
    symbol has_ingredients = exists o: item : ((is_food_vegetable(o) or is_food_egg(o) or is_food_lemon(o)) and inside(o, bowl))
    return has_ingredients

behavior prepare_vegetables(vegetable: item, cutting_board: item):
    body:
        achieve_once on(vegetable, cutting_board)
        achieve_once cut(vegetable)

behavior add_ingredient_to_bowl(ingredient: item, bowl: item):
    body:
        achieve_once inside(ingredient, bowl)

def is_vegetable_not_in_bowl(bowl: item):
    symbol not_in_bowl = exists vegetable: item : (is_food_vegetable(vegetable) and not inside(vegetable, bowl))
    return not_in_bowl

behavior __goal__():
    body:
        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind bowl: item where:
            is_bowl(bowl)

        if not has_ingredients(bowl):
            bind vegetable: item where:
                is_food_vegetable(vegetable)
            prepare_vegetables(vegetable, cutting_board)
            add_ingredient_to_bowl(vegetable, bowl)

            bind egg: item where:
                is_food_egg(egg)
            add_ingredient_to_bowl(egg, bowl)

            bind lemon: item where:
                is_food_lemon(lemon)
            add_ingredient_to_bowl(lemon, bowl)
        else:
            foreach vegetable: item:
                if is_food_vegetable(vegetable) and is_vegetable_not_in_bowl(bowl):
                    prepare_vegetables(vegetable, cutting_board)
                    add_ingredient_to_bowl(vegetable, bowl)
#goal_representation_end

##############################
From agent.py->reset_goal
def has_ingredients(bowl: item):
    symbol has_ingredients = exists o: item : ((is_food_vegetable(o) or is_food_egg(o) or is_food_lemon(o)) and inside(o, bowl))
    return has_ingredients

behavior prepare_vegetables(vegetable: item, cutting_board: item):
    body:
        achieve_once on(vegetable, cutting_board)
        achieve_once cut(vegetable)

behavior add_ingredient_to_bowl(ingredient: item, bowl: item):
    body:
        achieve_once inside(ingredient, bowl)

def is_vegetable_not_in_bowl(bowl: item):
    symbol not_in_bowl = exists vegetable: item : (is_food_vegetable(vegetable) and not inside(vegetable, bowl))
    return not_in_bowl

behavior __goal__():
    body:
        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind bowl: item where:
            is_bowl(bowl)

        if not has_ingredients(bowl):
            bind vegetable: item where:
                is_food_vegetable(vegetable)
            prepare_vegetables(vegetable, cutting_board)
            add_ingredient_to_bowl(vegetable, bowl)

            bind egg: item where:
                is_food_egg(egg)
            add_ingredient_to_bowl(egg, bowl)

            bind lemon: item where:
                is_food_lemon(lemon)
            add_ingredient_to_bowl(lemon, bowl)
        else:
            foreach vegetable: item:
                if is_food_vegetable(vegetable) and is_vegetable_not_in_bowl(bowl):
                    prepare_vegetables(vegetable, cutting_board)
                    add_ingredient_to_bowl(vegetable, bowl)
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(food_vegetable_2113, kitchen_counter_122)walk_executor(food_vegetable_2113)grab_executor(food_vegetable_2113)walk_executor(cutting_board_2123)put_executor(food_vegetable_2113, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_vegetable_2113)cut_executor(food_vegetable_2113)walk_executor(kitchen_counter_122)exp(bowl_2141, kitchen_counter_122)walk_executor(food_vegetable_2113)grab_executor(food_vegetable_2113)walk_executor(bowl_2141)putin_executor(food_vegetable_2113, bowl_2141)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_egg_2092, fridge_126)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(bowl_2141)putin_executor(food_egg_2092, bowl_2141)walk_executor(fridge_126)exp(food_lemon_2100, fridge_126)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(bowl_2141)putin_executor(food_lemon_2100, bowl_2141)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, pot_78, fryingpan_2154, Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(food_vegetable_2113, kitchen_counter_122)
Fail to find food_vegetable_2113 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_vegetable_2113, fridge_126)walk_executor(food_vegetable_2113)grab_executor(food_vegetable_2113)walk_executor(cutting_board_2123)put_executor(food_vegetable_2113, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_vegetable_2113)cut_executor(food_vegetable_2113)walk_executor(kitchen_counter_123)exp(bowl_2141, kitchen_counter_123)walk_executor(food_vegetable_2113)grab_executor(food_vegetable_2113)walk_executor(bowl_2141)putin_executor(food_vegetable_2113, bowl_2141)walk_executor(fridge_126)exp(food_egg_2092, fridge_126)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(bowl_2141)putin_executor(food_egg_2092, bowl_2141)walk_executor(fridge_126)exp(food_lemon_2100, fridge_126)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(bowl_2141)putin_executor(food_lemon_2100, bowl_2141)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_vegetable_2113, fridge_126)
Find food_vegetable_2113. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_vegetable_2113)walk_executor(cutting_board_2123)put_executor(food_vegetable_2113, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_vegetable_2113)cut_executor(food_vegetable_2113)walk_executor(kitchen_counter_123)exp(bowl_2141, kitchen_counter_123)walk_executor(food_vegetable_2113)grab_executor(food_vegetable_2113)walk_executor(bowl_2141)putin_executor(food_vegetable_2113, bowl_2141)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(bowl_2141)putin_executor(food_egg_2092, bowl_2141)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(bowl_2141)putin_executor(food_lemon_2100, bowl_2141)
##############################
From agent.py
grab_executor(food_vegetable_2113)
Robot find: Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. Grabbing food_vegetable_2113 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the food_vegetable_2113. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_vegetable_2113, cutting_board_2123)
Robot find: Robot is close to the food_vegetable_2113. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. cutting_board_2123 is close food_vegetable_2113. food_vegetable_2113 is close cutting_board_2123. food_vegetable_2113 is on cutting_board_2123. food_vegetable_2113 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_76)
Robot find: Robot is close to the knifeblock_76. 
##############################
From agent.py
exp(knife_2122, knifeblock_76)
Fail to find knife_2122 around knifeblock_76. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(knife_2122, table_114)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_vegetable_2113)cut_executor(food_vegetable_2113)grab_executor(food_vegetable_2113)walk_executor(bowl_2141)putin_executor(food_vegetable_2113, bowl_2141)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(bowl_2141)putin_executor(food_egg_2092, bowl_2141)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(bowl_2141)putin_executor(food_lemon_2100, bowl_2141)
##############################
From agent.py
walk_executor(table_114)
Robot find: mat_102, cup_2049, pillow_103, pillow_104, pillow_105, pillow_106, lighter_2004, lighter_2039, box_2038, clothes_hat_2117, milk_2115, cup_2134, check_2058, drawing_110, drawing_111, clothes_gloves_2118, cup_2132, food_bread_2084, dry_pasta_2114, knife_2122, cup_2133, table_cloth_2005, food_food_2021, Robot is close to the table_114. Robot is close to the mat_102. 
##############################
From agent.py
exp(knife_2122, table_114)
Find knife_2122. 
##############################
From agent.py-> find a plan in act()
walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_vegetable_2113)cut_executor(food_vegetable_2113)grab_executor(food_vegetable_2113)walk_executor(bowl_2141)putin_executor(food_vegetable_2113, bowl_2141)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(bowl_2141)putin_executor(food_egg_2092, bowl_2141)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(bowl_2141)putin_executor(food_lemon_2100, bowl_2141)
##############################
From agent.py
walk_executor(knife_2122)
Robot find: Robot is close to the table_114. Robot is close to the knife_2122. 
##############################
From agent.py
grab_executor(knife_2122)
Robot find: Robot is close to the table_114. Robot is close to the knife_2122. Grabbing knife_2122 by right hand. 
##############################
From agent.py
walk_executor(food_vegetable_2113)
Robot find: Robot is close to the knife_2122. Robot is close to the food_vegetable_2113. Robot is close to the cutting_board_2123. 
##############################
From agent.py
cut_executor(food_vegetable_2113)
Robot find: Robot is close to the knife_2122. Robot is close to the food_vegetable_2113. Robot is close to the cutting_board_2123. 
##############################
From agent.py
grab_executor(food_vegetable_2113)
Robot find: Robot is close to the knife_2122. Robot is close to the food_vegetable_2113. Robot is close to the cutting_board_2123. Grabbing food_vegetable_2113 by left hand. 
##############################
From agent.py
walk_executor(bowl_2141)
Robot find: Robot is close to the knife_2122. Robot is close to the food_vegetable_2113. Robot is close to the bowl_2141. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
putin_executor(food_vegetable_2113, bowl_2141)
Robot find: Robot is close to the knife_2122. Robot is close to the food_vegetable_2113. Robot is close to the bowl_2141. Robot is close to the kitchen_counter_119. food_vegetable_2113 is inside bowl_2141. food_vegetable_2113 is close bowl_2141. bowl_2141 is close food_vegetable_2113. food_vegetable_2113 released by left hand. 
##############################
From agent.py
walk_executor(food_egg_2092)
Robot find: Robot is close to the knife_2122. Robot is close to the food_egg_2092. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_egg_2092)
Robot find: Robot is close to the knife_2122. Robot is close to the food_egg_2092. Robot is close to the fridge_126. Grabbing food_egg_2092 by left hand. 
##############################
From agent.py
walk_executor(bowl_2141)
Robot find: Robot is close to the knife_2122. Robot is close to the food_egg_2092. Robot is close to the bowl_2141. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
putin_executor(food_egg_2092, bowl_2141)
Robot find: Robot is close to the knife_2122. Robot is close to the food_egg_2092. Robot is close to the bowl_2141. Robot is close to the kitchen_counter_119. food_egg_2092 is inside bowl_2141. bowl_2141 is close food_egg_2092. food_egg_2092 is close bowl_2141. food_egg_2092 released by left hand. 
##############################
From agent.py
walk_executor(food_lemon_2100)
Robot find: Robot is close to the knife_2122. Robot is close to the food_lemon_2100. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_lemon_2100)
Robot find: Robot is close to the knife_2122. Robot is close to the food_lemon_2100. Robot is close to the fridge_126. Grabbing food_lemon_2100 by left hand. 
##############################
From agent.py
walk_executor(bowl_2141)
Robot find: Robot is close to the knife_2122. Robot is close to the food_lemon_2100. Robot is close to the bowl_2141. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
putin_executor(food_lemon_2100, bowl_2141)
Robot find: Robot is close to the knife_2122. Robot is close to the food_lemon_2100. Robot is close to the bowl_2141. Robot is close to the kitchen_counter_119. food_lemon_2100 is inside bowl_2141. food_lemon_2100 is close bowl_2141. bowl_2141 is close food_lemon_2100. food_lemon_2100 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make a bowl of egg salad with boiled egg, lemon, and vegetables.
Action History:
['walk_executor(kitchen_counter_122)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'grab_executor(food_vegetable_2113)', 'walk_executor(cutting_board_2123)', 'put_executor(food_vegetable_2113, cutting_board_2123)', 'walk_executor(knifeblock_76)', 'walk_executor(table_114)', 'walk_executor(knife_2122)', 'grab_executor(knife_2122)', 'walk_executor(food_vegetable_2113)', 'cut_executor(food_vegetable_2113)', 'grab_executor(food_vegetable_2113)', 'walk_executor(bowl_2141)', 'putin_executor(food_vegetable_2113, bowl_2141)', 'walk_executor(food_egg_2092)', 'grab_executor(food_egg_2092)', 'walk_executor(bowl_2141)', 'putin_executor(food_egg_2092, bowl_2141)', 'walk_executor(food_lemon_2100)', 'grab_executor(food_lemon_2100)', 'walk_executor(bowl_2141)', 'putin_executor(food_lemon_2100, bowl_2141)']
Time info:
Time consume: 306 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 3
goal correct times: 0
action_num: 24

Task complete rate:
Keystate: k1 - Requires: 12 steps
Keystate: k2 - Requires: 16 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
