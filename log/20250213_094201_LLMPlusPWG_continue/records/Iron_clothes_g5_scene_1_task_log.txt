From agent.py
Reset goals: The sub-goals are: 
['Iron the shirt and the skirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_ironing_board_2144(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2144
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_shirt_2158_around_ironing_board_2144(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2144
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_shirt,ironing_board_instance)
        else:
            exp(clothes_shirt,ironing_board_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,ironing_board_instance]=True
        close[ironing_board_instance,clothes_shirt]=True
    

behavior find_clothes_skirt_2160_around_basket_for_clothes_2078(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
def is_ironing_environment_ready():
    return exists iron: item : (is_iron(iron) and has_plug(iron) and can_open(ironing_board))

def is_ironing_required(garment:item):
    return is_clothes(garment) and not is_clean(garment) and can_open(ironing_board)

behavior prepare_environment():
    body:
        bind iron: item where:
            is_iron(iron)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        achieve plugged(iron)
        achieve closed(ironing_board)

behavior iron_clothes(garment:item):
    body:
        bind iron: item where:
            is_iron(iron)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        achieve plugged(iron)
        achieve is_on(iron)
        achieve_inside ironing_board(garment, ironing_board)

behavior __goal__():
    body:
        if not is_ironing_environment_ready():
            prepare_environment()

        bind shirt: item where:
            is_clothes_shirt(shirt)
        if is_ironing_required(shirt):
            iron_clothes(shirt)

        bind skirt: item where:
            is_clothes_skirt(skirt)
        if is_ironing_required(skirt):
            iron_clothes(skirt)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_ironing_board_2144(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2144
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_shirt_2158_around_ironing_board_2144(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2144
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_shirt,ironing_board_instance)
        else:
            exp(clothes_shirt,ironing_board_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,ironing_board_instance]=True
        close[ironing_board_instance,clothes_shirt]=True
    

behavior find_clothes_skirt_2160_around_ironing_board_2144(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2144
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_skirt,ironing_board_instance)
        else:
            exp(clothes_skirt,ironing_board_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,ironing_board_instance]=True
        close[ironing_board_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
def are_ironed(obj:item):
    # Function to check if both shirt and skirt are ironed
    symbol is_ironed= (is_clothes_shirt(obj) or is_clothes_skirt(obj)) and dirty(obj)
    return is_ironed

behavior iron_clothes(obj:item, iron:item):
    body:
        achieve_once clean(obj)
        # Ensure the clothes are ironed by cleaning the item

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        # Select an iron
        foreach obj: item:
        # Iron all clothes (shirt and skirt)
            if is_clothes_shirt(obj) or is_clothes_skirt(obj):
                iron_clothes(obj, iron)


#goal_representation_end

##############################
From agent.py->reset_goal
 
def are_ironed(obj:item):
    # Function to check if both shirt and skirt are ironed
    symbol is_ironed= (is_clothes_shirt(obj) or is_clothes_skirt(obj)) and dirty(obj)
    return is_ironed

behavior iron_clothes(obj:item, iron:item):
    body:
        achieve_once clean(obj)
        # Ensure the clothes are ironed by cleaning the item

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        # Select an iron
        foreach obj: item:
        # Iron all clothes (shirt and skirt)
            if is_clothes_shirt(obj) or is_clothes_skirt(obj):
                iron_clothes(obj, iron)


##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2144)exp(clothes_shirt_2158, ironing_board_2144)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(ironing_board_2144)exp(clothes_skirt_2160, ironing_board_2144)walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)walk_executor(kitchen_counter_119)put_executor(clothes_shirt_2158, kitchen_counter_119)switchon_executor(faucet_121)wash_executor(clothes_skirt_2160)switchoff_executor(faucet_121)
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot find: Robot is close to the ironing_board_2144. 
##############################
From agent.py
exp(clothes_shirt_2158, ironing_board_2144)
Fail to find clothes_shirt_2158 around ironing_board_2144. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2078)exp(clothes_shirt_2158, basket_for_clothes_2078)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(basket_for_clothes_2078)exp(clothes_skirt_2160, basket_for_clothes_2078)walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)walk_executor(kitchen_counter_119)put_executor(clothes_shirt_2158, kitchen_counter_119)switchon_executor(faucet_121)wash_executor(clothes_skirt_2160)switchoff_executor(faucet_121)
##############################
From agent.py
walk_executor(basket_for_clothes_2078)
Robot find: clothes_pants_2157, clothes_shirt_2158, clothes_socks_2159, clothes_skirt_2160, Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the clothes_socks_2159. Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. 
##############################
From agent.py
exp(clothes_shirt_2158, basket_for_clothes_2078)
Find clothes_shirt_2158. 
##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)walk_executor(kitchen_counter_119)put_executor(clothes_shirt_2158, kitchen_counter_119)switchon_executor(faucet_121)wash_executor(clothes_skirt_2160)switchoff_executor(faucet_121)
##############################
From agent.py
grab_executor(clothes_shirt_2158)
Robot find: Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the clothes_socks_2159. Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. Grabbing clothes_shirt_2158 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot find: mat_32, phone_2029, drawing_33, Robot is close to the clothes_shirt_2158. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchon_executor(faucet_20)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned on. 
##############################
From agent.py
wash_executor(clothes_shirt_2158)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. clothes_shirt_2158 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned off. 
##############################
From agent.py
walk_executor(clothes_skirt_2160)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. 
##############################
From agent.py
grab_executor(clothes_skirt_2160)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. Grabbing clothes_skirt_2160 by left hand. 
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_78, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the clothes_shirt_2158. Robot is close to the clothes_skirt_2160. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(clothes_shirt_2158, kitchen_counter_119)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the clothes_skirt_2160. Robot is close to the kitchen_counter_119. kitchen_counter_119 is close clothes_shirt_2158. clothes_shirt_2158 is close kitchen_counter_119. clothes_shirt_2158 is on kitchen_counter_119. clothes_shirt_2158 released by right hand. 
##############################
From agent.py
switchon_executor(faucet_121)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the clothes_skirt_2160. Robot is close to the kitchen_counter_119. faucet_121 is turned on. 
##############################
From agent.py
wash_executor(clothes_skirt_2160)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the clothes_skirt_2160. Robot is close to the kitchen_counter_119. clothes_skirt_2160 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_121)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the clothes_skirt_2160. Robot is close to the kitchen_counter_119. faucet_121 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to iron both the shirt and the skirt after washing them.
##############################
From agent.py
Human Instruction: You need to iron both the shirt and the skirt after washing them.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to basket_for_clothes_2078.
Action 4: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 5: Grab clothes_shirt_2158.
Action 6: Walk to faucet_20.
Action 7: Switch on faucet_20.
Action 8: Wash clothes_shirt_2158.
Action 9: Switch off faucet_20.
Action 10: Walk to clothes_skirt_2160.
Action 11: Grab clothes_skirt_2160.
Action 12: Walk to kitchen_counter_119.
Action 13: Put clothes_shirt_2158 on kitchen_counter_119.
Action 14: Switch on faucet_121.
Action 15: Wash clothes_skirt_2160.
Action 16: Switch off faucet_121.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_cupboard_118(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(iron,cupboard_instance)
        else:
            exp(iron,cupboard_instance)
    eff:
        unknown[iron]=False
        close[iron,cupboard_instance]=True
        close[cupboard_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior dry_clothes(clothes:item):
    body:
        achieve_once clean(clothes)
        achieve_once not has_water(clothes)

behavior plug_in_iron(iron:item):
    body:
        achieve_once plugged(iron)

behavior heat_up_iron(iron:item):
    body:
        achieve_once is_on(iron)

behavior iron_clothes(clothes:item, iron:item):
    body:
        achieve_once on(clothes, ironing_board)
        achieve_once clean(clothes)

behavior unplug_iron(iron:item):
    body:
        achieve_once is_off(iron)
        achieve_once unplugged(iron)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and clean(clothes_shirt) and not has_water(clothes_shirt)
        
        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt) and clean(clothes_skirt) and not has_water(clothes_skirt)
        
        bind iron: item where:
            is_iron(iron)
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)

        dry_clothes(clothes_shirt)
        dry_clothes(clothes_skirt)
        
        plug_in_iron(iron)
        heat_up_iron(iron)
        
        iron_clothes(clothes_shirt, iron)
        iron_clothes(clothes_skirt, iron)
        
        unplug_iron(iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_kitchen_counter_122(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(iron,kitchen_counter_instance)
        else:
            exp(iron,kitchen_counter_instance)
    eff:
        unknown[iron]=False
        close[iron,kitchen_counter_instance]=True
        close[kitchen_counter_instance,iron]=True
    

#exp_behavior_end

#goal_representation
def is_ironed(clothes: item):
    # Function to check whether the clothes are ironed
    symbol ironed = not dirty(clothes) and is_clothes(clothes)
    return ironed

behavior iron_clothes(clothes: item, ironing_board: item, iron: item):
    body:
        achieve_once on(clothes, ironing_board)
        # Place the clothes on the ironing board
        achieve is_on(iron)
        # Turn on the iron
        achieve_once clean(clothes)
        # Iron the clothes
        achieve is_off(iron)
        # Turn off the iron

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt] == 2158
        # Select the shirt

        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt) and id[clothes_skirt] == 2160
        # Select the skirt

        if not is_ironed(clothes_shirt):
            iron_clothes(clothes_shirt, ironing_board, iron)

        if not is_ironed(clothes_skirt):
            iron_clothes(clothes_skirt, ironing_board, iron)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_kitchen_counter_122(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(iron,kitchen_counter_instance)
        else:
            exp(iron,kitchen_counter_instance)
    eff:
        unknown[iron]=False
        close[iron,kitchen_counter_instance]=True
        close[kitchen_counter_instance,iron]=True
    

#exp_behavior_end

#goal_representation

# Define behavior to dry the washed clothes
behavior dry_clothes(clothes: item):
    body:
        achieve clean(clothes)

# Define behavior to iron an item of clothing
behavior iron_clothes(clothes: item, iron: item):
    body:
        achieve_once plugged(iron)
        achieve_once on(clothes, ironing_board)

behavior __goal__():
    body:
        # Bind the shirt and skirt
        bind clothes_shirt_2158: item where:
            is_clothes_shirt(clothes_shirt_2158)
        
        bind clothes_skirt_2160: item where:
            is_clothes_skirt(clothes_skirt_2160)
        
        # Bind the iron and ironing board
        bind iron: item where:
            is_iron(iron)
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        # Dry the clothes before ironing
        dry_clothes(clothes_shirt_2158)
        dry_clothes(clothes_skirt_2160)
        
        # Iron both the shirt and skirt
        iron_clothes(clothes_shirt_2158, iron)
        iron_clothes(clothes_skirt_2160, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_cupboard_118(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(iron,cupboard_instance)
        else:
            exp(iron,cupboard_instance)
    eff:
        unknown[iron]=False
        close[iron,cupboard_instance]=True
        close[cupboard_instance,iron]=True
    

#exp_behavior_end

#goal_representation
behavior iron_clothes(clothes: item, ironing_board: item, iron: item):
    body:
        achieve_once on(clothes, ironing_board)
        achieve_once plugged(iron)
        achieve is_on(iron)
        achieve clean(clothes)
        achieve_once is_off(iron)

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)

        bind ironing_board: item where:
            is_ironing_board(ironing_board)

        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt)

        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt)

        iron_clothes(clothes_shirt, ironing_board, iron)
        iron_clothes(clothes_skirt, ironing_board, iron)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_kitchen_counter_122(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(iron,kitchen_counter_instance)
        else:
            exp(iron,kitchen_counter_instance)
    eff:
        unknown[iron]=False
        close[iron,kitchen_counter_instance]=True
        close[kitchen_counter_instance,iron]=True
    

#exp_behavior_end

#goal_representation

behavior iron_clothes(clothing:item, iron:item):
    body:
        achieve_once close_char(char, iron)
        achieve_close_char(clothing, iron)
        achieve clean(clothing)

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        
        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        
        iron_clothes(shirt, iron)
        iron_clothes(skirt, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_kitchen_counter_122(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(iron,kitchen_counter_instance)
        else:
            exp(iron,kitchen_counter_instance)
    eff:
        unknown[iron]=False
        close[iron,kitchen_counter_instance]=True
        close[kitchen_counter_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
def is_ironed(clothes:item):
    return not has_water(clothes) and clean(clothes)

behavior iron_clothes(clothes:item, ironing_board:item, iron:item):
    body:
        achieve close_char(char, ironing_board)
        bind board: item where:
            is_ironing_board(board)
        achieve_once plugged(iron)
        achieve_once is_on(iron)
        achieve_once on(clothes, board)
        achieve_once is_ironed(clothes)
        achieve_once unplugged(iron)
        achieve_once is_off(iron)

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board]==2144
        bind iron: item where:
            is_iron(iron)
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and clean(clothes_shirt) and has_water(clothes_shirt)
        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt) and clean(clothes_skirt) and has_water(clothes_skirt)
        iron_clothes(clothes_shirt, ironing_board, iron)
        iron_clothes(clothes_skirt, ironing_board, iron)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "iron the shirt and the skirt." ?
Answer: For each piece of clothing, place it on the ironing board. Turn on the iron, then put the iron on the clothing, push and pull the iron.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_kitchen_counter_122(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(iron,kitchen_counter_instance)
        else:
            exp(iron,kitchen_counter_instance)
    eff:
        unknown[iron]=False
        close[iron,kitchen_counter_instance]=True
        close[kitchen_counter_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(clothing:item, ironing_board:item, iron:item):
    body:
        achieve_once on(clothing, ironing_board)
        achieve_once is_on(iron)
        achieve_once clean(clothing)

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        bind iron: item where:
            is_iron(iron)
        bind shirt: item where:
            is_clothes_shirt(shirt)
            and clean(shirt)
        bind skirt: item where:
            is_clothes_skirt(skirt)
            and clean(skirt)
        iron_clothes(shirt, ironing_board, iron)
        iron_clothes(skirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_kitchen_counter_122(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(iron,kitchen_counter_instance)
        else:
            exp(iron,kitchen_counter_instance)
    eff:
        unknown[iron]=False
        close[iron,kitchen_counter_instance]=True
        close[kitchen_counter_instance,iron]=True
    

#exp_behavior_end

#goal_representation

def is_ironing_board_in_kitchen(ironing_board:item):
    symbol in_kitchen=exists room: item : (is_kitchen(room) and inside(ironing_board, room))
    return in_kitchen

def is_iron_on(ironing_board:item):
    symbol iron_on_board=exists iron: item : (is_iron(iron) and close(iron, ironing_board))
    return iron_on_board

def is_clean(x:item):
    symbol clean_item=is_clothes(x) and clean(x)
    return clean_item

behavior place_on_ironing_board(clothes:item, ironing_board:item):
    body:
        achieve_once on(clothes, ironing_board)

behavior turn_on_iron(iron:item):
    body:
        achieve is_on(iron)

behavior iron_clothes(clothes:item, iron:item):
    body:
        achieve clean(clothes)

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and is_ironing_board_in_kitchen(ironing_board)
        bind iron: item where:
            is_iron(iron)
        if not is_iron_on(ironing_board):
            turn_on_iron(iron)
        # Iron the shirt
        bind shirt: item where:
            is_clothes_shirt(shirt) and not is_clean(shirt)
        place_on_ironing_board(shirt, ironing_board)
        iron_clothes(shirt, iron)
        # Iron the skirt
        bind skirt: item where:
            is_clothes_skirt(skirt) and not is_clean(skirt)
        place_on_ironing_board(skirt, ironing_board)
        iron_clothes(skirt, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_kitchen_counter_122(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(iron,kitchen_counter_instance)
        else:
            exp(iron,kitchen_counter_instance)
    eff:
        unknown[iron]=False
        close[iron,kitchen_counter_instance]=True
        close[kitchen_counter_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(clothes:item, ironing_board:item, iron:item):
    body:
        achieve_once on(clothes, ironing_board)
        achieve_once clean(clothes)
        achieve_once is_on(iron)
        achieve_once inhand(clothes)

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        bind iron: item where:
            is_iron(iron)
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt)
        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt)
        
        iron_clothes(clothes_shirt, ironing_board, iron)
        iron_clothes(clothes_skirt, ironing_board, iron)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_clothes(clothes:item, ironing_board:item, iron:item):
    body:
        achieve_once on(clothes, ironing_board)
        achieve_once clean(clothes)
        achieve_once is_on(iron)
        achieve_once inhand(clothes)

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        bind iron: item where:
            is_iron(iron)
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt)
        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt)
        
        iron_clothes(clothes_shirt, ironing_board, iron)
        iron_clothes(clothes_skirt, ironing_board, iron)

##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2158)walk_executor(ironing_board_2144)put_executor(clothes_shirt_2158, ironing_board_2144)walk_executor(kitchen_counter_122)exp(iron_2161, kitchen_counter_122)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(ironing_board_2144)put_executor(clothes_skirt_2160, ironing_board_2144)walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)
##############################
From agent.py
grab_executor(clothes_shirt_2158)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the clothes_skirt_2160. Robot is close to the kitchen_counter_119. Grabbing clothes_shirt_2158 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the clothes_skirt_2160. Robot is close to the ironing_board_2144. 
##############################
From agent.py
put_executor(clothes_shirt_2158, ironing_board_2144)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the clothes_skirt_2160. Robot is close to the ironing_board_2144. ironing_board_2144 is close clothes_shirt_2158. clothes_shirt_2158 is close ironing_board_2144. clothes_shirt_2158 is on ironing_board_2144. clothes_shirt_2158 released by right hand. 
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, fryingpan_2154, Robot is close to the clothes_skirt_2160. Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(iron_2161, kitchen_counter_122)
Fail to find iron_2161 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(iron_2161, cupboard_118)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(ironing_board_2144)put_executor(clothes_skirt_2160, ironing_board_2144)walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the clothes_skirt_2160. Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(iron_2161, cupboard_118)
Fail to find iron_2161 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(iron_2161, cupboard_117)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(ironing_board_2144)put_executor(clothes_skirt_2160, ironing_board_2144)walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, Robot is close to the clothes_skirt_2160. Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(iron_2161, cupboard_117)
Fail to find iron_2161 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(cutting_board_2123)exp(iron_2161, cutting_board_2123)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(ironing_board_2144)put_executor(clothes_skirt_2160, ironing_board_2144)walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(iron_2161, cutting_board_2123)
Fail to find iron_2161 around cutting_board_2123. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(iron_2161, kitchen_counter_123)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(ironing_board_2144)put_executor(clothes_skirt_2160, ironing_board_2144)walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Robot find: tray_2068, oil_2149, knife_2035, food_kiwi_2054, food_orange_2027, Robot is close to the clothes_skirt_2160. Robot is close to the kitchen_counter_123. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find iron_2161 ?
Answer: The iron_2161 can be found inside the dining_room_41. It is on top of the bowl_2142. To help locate it, look for the bowl_2142, and you will find the iron_2161 placed directly on it.
Re-decompose: None

##############################
From agent.py
Human Instruction: You need to iron both the shirt and the skirt after washing them.
The iron_2161 can be found inside the dining_room_41. It is on top of the bowl_2142. To help locate it, look for the bowl_2142, and you will find the iron_2161 placed directly on it.

Human Guidance: For each piece of clothing, place it on the ironing board. Turn on the iron, then put the iron on the clothing, push and pull the iron.
The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to basket_for_clothes_2078.
Action 4: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 5: Grab clothes_shirt_2158.
Action 6: Walk to faucet_20.
Action 7: Switch on faucet_20.
Action 8: Wash clothes_shirt_2158.
Action 9: Switch off faucet_20.
Action 10: Walk to clothes_skirt_2160.
Action 11: Grab clothes_skirt_2160.
Action 12: Walk to kitchen_counter_119.
Action 13: Put clothes_shirt_2158 on kitchen_counter_119.
Action 14: Switch on faucet_121.
Action 15: Wash clothes_skirt_2160.
Action 16: Switch off faucet_121.
Action 17: Grab clothes_shirt_2158.
Action 18: Walk to ironing_board_2144.
Action 19: Put clothes_shirt_2158 on ironing_board_2144.
Action 20: Walk to kitchen_counter_122.
Action 21: look for iron_2161 around kitchen_counter_122.
Action 22: Walk to cupboard_118.
Action 23: Open cupboard_118.
Action 24: look for iron_2161 around cupboard_118.
Action 25: Walk to cupboard_117.
Action 26: look for iron_2161 around cupboard_117.
Action 27: Walk to cutting_board_2123.
Action 28: look for iron_2161 around cutting_board_2123.
Action 29: Walk to kitchen_counter_123.

##############################
From agent.py
exp(iron_2161, kitchen_counter_123)
Fail to find iron_2161 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2142)exp(iron_2161, bowl_2142)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(ironing_board_2144)put_executor(clothes_skirt_2160, ironing_board_2144)walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)
##############################
From agent.py
walk_executor(bowl_2142)
Robot find: iron_2161, Robot is close to the clothes_skirt_2160. Robot is close to the bowl_2142. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(iron_2161, bowl_2142)
Find iron_2161. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(ironing_board_2144)put_executor(clothes_skirt_2160, ironing_board_2144)walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)
##############################
From agent.py
walk_executor(iron_2161)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the bowl_2142. Robot is close to the iron_2161. 
##############################
From agent.py
plugin_executor(iron_2161)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the bowl_2142. Robot is close to the iron_2161. iron_2161 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2161)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the bowl_2142. Robot is close to the iron_2161. iron_2161 is turned on. 
##############################
From agent.py
walk_executor(clothes_shirt_2158)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the ironing_board_2144. Robot is close to the clothes_shirt_2158. 
##############################
From agent.py
grab_executor(clothes_shirt_2158)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the ironing_board_2144. Robot is close to the clothes_shirt_2158. Grabbing clothes_shirt_2158 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the ironing_board_2144. Robot is close to the clothes_shirt_2158. 
##############################
From agent.py
put_executor(clothes_skirt_2160, ironing_board_2144)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the ironing_board_2144. Robot is close to the clothes_shirt_2158. clothes_skirt_2160 is close ironing_board_2144. ironing_board_2144 is close clothes_skirt_2160. clothes_skirt_2160 is on ironing_board_2144. clothes_skirt_2160 released by left hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2160)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the ironing_board_2144. Robot is close to the clothes_shirt_2158. 
##############################
From agent.py
grab_executor(clothes_skirt_2160)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the ironing_board_2144. Robot is close to the clothes_shirt_2158. Grabbing clothes_skirt_2160 by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to put the iron on both the shirt and the skirt and push and pull the iron to complete the ironing process.
##############################
From agent.py
Human Instruction: The robot needs to put the iron on both the shirt and the skirt and push and pull the iron to complete the ironing process.

Human Guidance: For each piece of clothing, place it on the ironing board. Turn on the iron, then put the iron on the clothing, push and pull the iron.
The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to basket_for_clothes_2078.
Action 4: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 5: Grab clothes_shirt_2158.
Action 6: Walk to faucet_20.
Action 7: Switch on faucet_20.
Action 8: Wash clothes_shirt_2158.
Action 9: Switch off faucet_20.
Action 10: Walk to clothes_skirt_2160.
Action 11: Grab clothes_skirt_2160.
Action 12: Walk to kitchen_counter_119.
Action 13: Put clothes_shirt_2158 on kitchen_counter_119.
Action 14: Switch on faucet_121.
Action 15: Wash clothes_skirt_2160.
Action 16: Switch off faucet_121.
Action 17: Grab clothes_shirt_2158.
Action 18: Walk to ironing_board_2144.
Action 19: Put clothes_shirt_2158 on ironing_board_2144.
Action 20: Walk to kitchen_counter_122.
Action 21: look for iron_2161 around kitchen_counter_122.
Action 22: Walk to cupboard_118.
Action 23: Open cupboard_118.
Action 24: look for iron_2161 around cupboard_118.
Action 25: Walk to cupboard_117.
Action 26: look for iron_2161 around cupboard_117.
Action 27: Walk to cutting_board_2123.
Action 28: look for iron_2161 around cutting_board_2123.
Action 29: Walk to kitchen_counter_123.
Action 30: look for iron_2161 around kitchen_counter_123.
Action 31: Walk to bowl_2142.
Action 32: look for iron_2161 around bowl_2142.
Action 33: Walk to iron_2161.
Action 34: Plug in iron_2161.
Action 35: Switch on iron_2161.
Action 36: Walk to clothes_shirt_2158.
Action 37: Grab clothes_shirt_2158.
Action 38: Walk to ironing_board_2144.
Action 39: Put clothes_skirt_2160 on ironing_board_2144.
Action 40: Walk to clothes_skirt_2160.
Action 41: Grab clothes_skirt_2160.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2120_around_washing_machine_2079(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_scarf,washing_machine_instance)
        else:
            exp(clothes_scarf,washing_machine_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,washing_machine_instance]=True
        close[washing_machine_instance,clothes_scarf]=True
    

behavior find_clothes_gloves_2118_around_washing_machine_2079(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

behavior find_clothes_pants_2036_around_washing_machine_2079(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_pants,washing_machine_instance)
        else:
            exp(clothes_pants,washing_machine_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,washing_machine_instance]=True
        close[washing_machine_instance,clothes_pants]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(cloth: item, iron: item, board: item):
    body:
        achieve_once on(cloth, board)
        achieve is_on(iron)
        achieve_once close_char(char, board)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind iron: item where:
            is_iron(iron)
        bind board: item where:
            is_ironing_board(board)
        iron_clothes(shirt, iron, board)
        iron_clothes(skirt, iron, board)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_clothes(cloth: item, iron: item, board: item):
    body:
        achieve_once on(cloth, board)
        achieve is_on(iron)
        achieve_once close_char(char, board)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind iron: item where:
            is_iron(iron)
        bind board: item where:
            is_ironing_board(board)
        iron_clothes(shirt, iron, board)
        iron_clothes(skirt, iron, board)

##############################
From agent.py-> find a plan in act()
put_executor(clothes_shirt_2158, ironing_board_2144)put_executor(clothes_skirt_2160, ironing_board_2144)
##############################
From agent.py
put_executor(clothes_shirt_2158, ironing_board_2144)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the ironing_board_2144. Robot is close to the clothes_shirt_2158. clothes_shirt_2158 is close ironing_board_2144. clothes_shirt_2158 is on ironing_board_2144. clothes_shirt_2158 released by right hand. 
##############################
From agent.py
put_executor(clothes_skirt_2160, ironing_board_2144)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the ironing_board_2144. Robot is close to the clothes_shirt_2158. clothes_skirt_2160 is close ironing_board_2144. clothes_skirt_2160 is on ironing_board_2144. clothes_skirt_2160 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: To complete the task, make sure to put the iron on both the shirt and the skirt and push and pull the iron to complete the ironing process.
##############################
Task Summary:
Task Goal:
Iron the shirt and the skirt.
Action History:
['walk_executor(ironing_board_2144)', 'walk_executor(basket_for_clothes_2078)', 'grab_executor(clothes_shirt_2158)', 'walk_executor(faucet_20)', 'switchon_executor(faucet_20)', 'wash_executor(clothes_shirt_2158)', 'switchoff_executor(faucet_20)', 'walk_executor(clothes_skirt_2160)', 'grab_executor(clothes_skirt_2160)', 'walk_executor(kitchen_counter_119)', 'put_executor(clothes_shirt_2158, kitchen_counter_119)', 'switchon_executor(faucet_121)', 'wash_executor(clothes_skirt_2160)', 'switchoff_executor(faucet_121)', 'grab_executor(clothes_shirt_2158)', 'walk_executor(ironing_board_2144)', 'put_executor(clothes_shirt_2158, ironing_board_2144)', 'walk_executor(kitchen_counter_122)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'walk_executor(cupboard_117)', 'walk_executor(cutting_board_2123)', 'walk_executor(kitchen_counter_123)', 'walk_executor(bowl_2142)', 'walk_executor(iron_2161)', 'plugin_executor(iron_2161)', 'switchon_executor(iron_2161)', 'walk_executor(clothes_shirt_2158)', 'grab_executor(clothes_shirt_2158)', 'walk_executor(ironing_board_2144)', 'put_executor(clothes_skirt_2160, ironing_board_2144)', 'walk_executor(clothes_skirt_2160)', 'grab_executor(clothes_skirt_2160)', 'put_executor(clothes_shirt_2158, ironing_board_2144)', 'put_executor(clothes_skirt_2160, ironing_board_2144)']
Time info:
Time consume: 397 seconds
Exp_helper query times: 1
Guidance query times: 1
library scale: 0
goal generate times: 12
goal correct times: 0
action_num: 35

Task complete rate:
Keystate: k1 - Requires: 4 steps
Keystate: k2 - Requires: 4 steps
Action Completion Rate: 0.0
Scene_id: 1
##############################
