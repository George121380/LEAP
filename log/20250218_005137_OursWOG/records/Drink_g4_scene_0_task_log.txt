From agent.py
Reset goals: The sub-goals are: 
['Cut the apple.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_apple_2009_around_cutting_board_2051(food_apple:item):
    goal: not unknown(food_apple)
    body:
        assert is_food_apple(food_apple)
        bind cutting_board_instance:item where:
            is_cutting_board(cutting_board_instance) and id[cutting_board_instance]==2051
        achieve close_char(char,cutting_board_instance)
        if can_open(cutting_board_instance):
            achieve_once open(cutting_board_instance)
            exp(food_apple,cutting_board_instance)
        else:
            exp(food_apple,cutting_board_instance)
    eff:
        unknown[food_apple]=False
        close[food_apple,cutting_board_instance]=True
        close[cutting_board_instance,food_apple]=True
    

behavior find_knife_2050_around_oven_295(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==295
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(knife,oven_instance)
        else:
            exp(knife,oven_instance)
    eff:
        unknown[knife]=False
        close[knife,oven_instance]=True
        close[oven_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior cut_the_apple(apple:item):
    body:
        achieve_once cut(apple)

behavior __goal__():
    body:
        bind apple: item where:
            is_food_apple(apple)
        cut_the_apple(apple)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior cut_the_apple(apple:item):
    body:
        achieve_once cut(apple)

behavior __goal__():
    body:
        bind apple: item where:
            is_food_apple(apple)
        cut_the_apple(apple)

##############################
