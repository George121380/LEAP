From agent.py
Reset goals: The sub-goals are: 
['1. Locate the spectacles and place them on the coffee table in the home office.', '2. Locate the book and place it on the coffee table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_spectacles_2106_around_home_office_161(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==161
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(spectacles,home_office_instance)
        else:
            exp(spectacles,home_office_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,home_office_instance]=True
        close[home_office_instance,spectacles]=True
    

behavior find_food_rice_2067_around_kitchen_counter_128(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_rice,kitchen_counter_instance)
        else:
            exp(food_rice,kitchen_counter_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_rice]=True
    

#exp_behavior_end

#goal_representation
 
behavior locate_spectacles_and_place_coffee_table(spectacles:item, coffee_table:item):
    body:
        achieve on(spectacles, coffee_table)

behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select spectacles

        bind coffee_table: item where:
            is_table(coffee_table) and surfaces(coffee_table)
        # Select a table that can be used as a coffee table
        
        locate_spectacles_and_place_coffee_table(spectacles, coffee_table)
        # Execute the behavior to locate spectacles and place them on the coffee table

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior locate_spectacles_and_place_coffee_table(spectacles:item, coffee_table:item):
    body:
        achieve on(spectacles, coffee_table)

behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select spectacles

        bind coffee_table: item where:
            is_table(coffee_table) and surfaces(coffee_table)
        # Select a table that can be used as a coffee table
        
        locate_spectacles_and_place_coffee_table(spectacles, coffee_table)
        # Execute the behavior to locate spectacles and place them on the coffee table

##############################
From agent.py-> find a plan in act()
walk_executor(home_office_161)exp(spectacles_2106, home_office_161)walk_executor(spectacles_2106)grab_executor(spectacles_2106)walk_executor(table_123)put_executor(spectacles_2106, table_123)
##############################
From agent.py
walk_executor(home_office_161)
Robot is inside home_office_161. 
##############################
From agent.py
exp(spectacles_2106, home_office_161)
Failed to find spectacles_2106 around home_office_161. 
##############################
From agent.py-> find a plan in act()
walk_executor(desk_375)exp(spectacles_2106, desk_375)walk_executor(spectacles_2106)grab_executor(spectacles_2106)walk_executor(table_123)put_executor(spectacles_2106, table_123)
##############################
From agent.py
walk_executor(desk_375)
Find glue_2013. Find keyboard_382. Find chair_374. Find mouse_380. Robot is inside bedroom_327. Robot is close floor_337. Robot is close desk_375. Robot is no longer inside home_office_161.
##############################
From agent.py
exp(spectacles_2106, desk_375)
Failed to find spectacles_2106 around desk_375. 
##############################
From agent.py-> find a plan in act()
walk_executor(photoframe_246)exp(spectacles_2106, photoframe_246)walk_executor(spectacles_2106)grab_executor(spectacles_2106)walk_executor(table_123)put_executor(spectacles_2106, table_123)
##############################
From agent.py
walk_executor(photoframe_246)
Find mat_237. Find chair_263. Find drawing_238. Robot is inside bedroom_220. Robot is close bookshelf_260. Robot is close photoframe_246. Robot is no longer inside bedroom_327.Robot is no longer close floor_337.Robot is no longer close desk_375.
##############################
From agent.py
exp(spectacles_2106, photoframe_246)
Failed to find spectacles_2106 around photoframe_246. 
##############################
From agent.py-> find a plan in act()
walk_executor(window_2109)open_executor(window_2109)exp(spectacles_2106, window_2109)walk_executor(spectacles_2106)grab_executor(spectacles_2106)walk_executor(table_123)put_executor(spectacles_2106, table_123)
##############################
From agent.py
walk_executor(window_2109)
Robot is inside dining_room_1. Robot is close window_2109. Robot is no longer inside bedroom_220.Robot is no longer close bookshelf_260.Robot is no longer close photoframe_246.
##############################
From agent.py
open_executor(window_2109)
Robot is inside dining_room_1. Robot is close window_2109. 
##############################
From agent.py
exp(spectacles_2106, window_2109)
Failed to find spectacles_2106 around window_2109. 
##############################
From agent.py-> find a plan in act()
walk_executor(photoframe_210)exp(spectacles_2106, photoframe_210)walk_executor(spectacles_2106)grab_executor(spectacles_2106)walk_executor(table_123)put_executor(spectacles_2106, table_123)
##############################
From agent.py
walk_executor(photoframe_210)
Robot is inside home_office_161. Robot is close photoframe_210. Robot is close wallshelf_187. Robot is no longer inside dining_room_1.Robot is no longer close window_2109.
##############################
From agent.py
exp(spectacles_2106, photoframe_210)
Failed to find spectacles_2106 around photoframe_210. 
##############################
From agent.py-> find a plan in act()
walk_executor(oven_141)open_executor(oven_141)exp(spectacles_2106, oven_141)walk_executor(spectacles_2106)grab_executor(spectacles_2106)walk_executor(table_123)put_executor(spectacles_2106, table_123)
##############################
From agent.py
walk_executor(oven_141)
Find food_butter_2018. Find dough_2021. Find food_onion_2026. Find tray_142. Find pot_54. Robot is inside dining_room_1. Robot is close food_butter_2018. Robot is close dough_2021. Robot is close food_onion_2026. Robot is close oven_141. Robot is close tray_142. Robot is no longer inside home_office_161.Robot is no longer close photoframe_210.Robot is no longer close wallshelf_187.
##############################
From agent.py
open_executor(oven_141)
Robot is inside dining_room_1. Robot is close food_butter_2018. Robot is close dough_2021. Robot is close food_onion_2026. Robot is close oven_141. Robot is close tray_142. 
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find spectacles_2106 ?
Answer: The spectacles_2106 are located inside dining_room_1. They are on top of the kitchen_counter_128. Look for the spectacles on the kitchen counter within that room.

##############################
From agent.py
Human Instruction: The spectacles_2106 are located inside dining_room_1. They are on top of the kitchen_counter_128. Look for the spectacles on the kitchen counter within that room.

The actions you have taken:
Action 1: Walk to home_office_161.
Action 2: look for spectacles_2106 around home_office_161.
Action 3: Walk to desk_375.
Action 4: look for spectacles_2106 around desk_375.
Action 5: Walk to photoframe_246.
Action 6: look for spectacles_2106 around photoframe_246.
Action 7: Walk to window_2109.
Action 8: Open window_2109.
Action 9: look for spectacles_2106 around window_2109.
Action 10: Walk to photoframe_210.
Action 11: look for spectacles_2106 around photoframe_210.
Action 12: Walk to oven_141.
Action 13: Open oven_141.

##############################
From agent.py
exp(spectacles_2106, oven_141)
Failed to find spectacles_2106 around oven_141. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(spectacles_2106, kitchen_counter_128)walk_executor(spectacles_2106)grab_executor(spectacles_2106)walk_executor(table_123)put_executor(spectacles_2106, table_123)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Find cutting_board_2080. Find food_orange_2008. Find spectacles_2106. Robot is inside dining_room_1. Robot is close kitchen_counter_128. Robot is close floor_15. Robot is no longer close food_butter_2018.Robot is no longer close dough_2021.Robot is no longer close food_onion_2026.Robot is no longer close oven_141.Robot is no longer close tray_142.
##############################
From agent.py
exp(spectacles_2106, kitchen_counter_128)
Find spectacles_2106. 
##############################
From agent.py-> find a plan in act()
walk_executor(spectacles_2106)grab_executor(spectacles_2106)walk_executor(table_123)put_executor(spectacles_2106, table_123)
##############################
From agent.py
walk_executor(spectacles_2106)
Robot is inside dining_room_1. Robot is close kitchen_counter_128. Robot is close spectacles_2106. Robot is no longer close floor_15.
##############################
From agent.py
grab_executor(spectacles_2106)
Robot is inside dining_room_1. Robot is close kitchen_counter_128. Robot is close spectacles_2106. Grabbing spectacles_2106 by right hand. 
##############################
From agent.py
walk_executor(table_123)
Find mat_114. Find shoes_2001. Find drawing_118. Find fork_2103. Find cup_2087. Find cup_2088. Find bowl_2095. Find mouse_2003. Find homework_2011. Find laptop_2015. Robot is inside dining_room_1. Robot is close spectacles_2106. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer close kitchen_counter_128.
##############################
From agent.py
put_executor(spectacles_2106, table_123)
Robot is inside dining_room_1. Robot is close spectacles_2106. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. spectacles_2106 released by right hand. 
##############################
From agent.py
Human Instruction: You need to place the spectacles on the coffee table in the home office, not on table_123 in the dining room. Walk back to table_123, grab spectacles_2106, then walk to the coffee table in home_office_161 and place the spectacles there.

The actions you have taken:
Action 1: Walk to home_office_161.
Action 2: look for spectacles_2106 around home_office_161.
Action 3: Walk to desk_375.
Action 4: look for spectacles_2106 around desk_375.
Action 5: Walk to photoframe_246.
Action 6: look for spectacles_2106 around photoframe_246.
Action 7: Walk to window_2109.
Action 8: Open window_2109.
Action 9: look for spectacles_2106 around window_2109.
Action 10: Walk to photoframe_210.
Action 11: look for spectacles_2106 around photoframe_210.
Action 12: Walk to oven_141.
Action 13: Open oven_141.
Action 14: look for spectacles_2106 around oven_141.
Action 15: Walk to kitchen_counter_128.
Action 16: look for spectacles_2106 around kitchen_counter_128.
Action 17: Walk to spectacles_2106.
Action 18: Grab spectacles_2106.
Action 19: Walk to table_123.
Action 20: Put spectacles_2106 on table_123.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_spectacles_on_table(spectacles:item, table:item):
    body:
        achieve on(spectacles, table)

def inside_home_office(item:item):
    symbol is_inside_home_office=exists room: item : is_home_office(room) and inside(item, room)
    return is_inside_home_office

behavior find_spectacles(table:item):
    body:
        foreach spectacles: item:
            if is_spectacles(spectacles) and not visited(spectacles):
                observe(spectacles, "Locate spectacles and check if they are near the table")
            if on(spectacles, table):
                return # No need to observe further if spectacles are already on the table
        
behavior __goal__():
    body:
        bind table: item where:
            is_table(table) and inside_home_office(table)
        # Select a table in the home office
        find_spectacles(table)
        bind spectacles: item where:
            is_spectacles(spectacles) and inside_home_office(spectacles)
            # Bind spectacles located inside home office
        place_spectacles_on_table(spectacles, table)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('_NEWLINE', '# No need to observe further if spectacles are already on the table\n        \n') at line 5958, column 24.
Expected one of: 
	* FINDALL
	* LPAR
	* FALSE
	* HEX_NUMBER
	* DEC_NUMBER
	* PLUS
	* TRUE
	* IMAG_NUMBER
	* OCT_NUMBER
	* NONE
	* ELLIPSIS
	* FORALL
	* FLOAT_NUMBER
	* LONG_STRING
	* COLON
	* DO
	* EXISTS
	* MINUS
	* NOT
	* LSQB
	* TILDE
	* STRING
	* VARNAME
	* FINDONE
	* BIN_NUMBER

##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation
 
behavior place_spectacles_on_table(spectacles:item, table:item):
    body:
        achieve on(spectacles, table)

def inside_home_office(item:item):
    symbol is_inside_home_office=exists room: item : is_home_office(room) and inside(item, room)
    return is_inside_home_office

behavior find_spectacles(table:item):
    body:
        foreach spectacles: item:
            if is_spectacles(spectacles) and not visited(spectacles):
                observe(spectacles, "Locate spectacles and check if they are near the table")
            if on(spectacles, table):
                return
        
behavior __goal__():
    body:
        bind table: item where:
            is_table(table) and inside_home_office(table)
        find_spectacles(table)
        bind spectacles: item where:
            is_spectacles(spectacles) and not inside_home_office(spectacles)
            # Bind spectacles located outside home office
        place_spectacles_on_table(spectacles, table)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('_NEWLINE', '\n        \n') at line 5958, column 23.
Expected one of: 
	* FINDALL
	* LPAR
	* FALSE
	* HEX_NUMBER
	* DEC_NUMBER
	* PLUS
	* TRUE
	* IMAG_NUMBER
	* OCT_NUMBER
	* NONE
	* ELLIPSIS
	* FORALL
	* FLOAT_NUMBER
	* LONG_STRING
	* COLON
	* DO
	* EXISTS
	* MINUS
	* NOT
	* LSQB
	* TILDE
	* STRING
	* VARNAME
	* FINDONE
	* BIN_NUMBER

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_needle_2024_around_laser_pointer_2025(needle:item):
    goal: not unknown(needle)
    body:
        assert is_needle(needle)
        bind laser_pointer_instance:item where:
            is_laser_pointer(laser_pointer_instance) and id[laser_pointer_instance]==2025
        achieve close_char(char,laser_pointer_instance)
        if can_open(laser_pointer_instance):
            achieve_once open(laser_pointer_instance)
            exp(needle,laser_pointer_instance)
        else:
            exp(needle,laser_pointer_instance)
    eff:
        unknown[needle]=False
        close[needle,laser_pointer_instance]=True
        close[laser_pointer_instance,needle]=True
    

behavior find_plate_2105_around_bowl_2095(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind bowl_instance:item where:
            is_bowl(bowl_instance) and id[bowl_instance]==2095
        achieve close_char(char,bowl_instance)
        if can_open(bowl_instance):
            achieve_once open(bowl_instance)
            exp(plate,bowl_instance)
        else:
            exp(plate,bowl_instance)
    eff:
        unknown[plate]=False
        close[plate,bowl_instance]=True
        close[bowl_instance,plate]=True
    

#goal_representation
 
behavior place_spectacles_on_table(spectacles:item, table:item):
    body:
        achieve on(spectacles, table)

behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles) and inside(spectacles, table_123)
        # Spectacles are on table_123
        bind table: item where:
            is_table(table) and inside_home_office(table)
        # Select the table in the home office
        place_spectacles_on_table(spectacles, table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_remote_control_2081_around_television_216(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind television_instance:item where:
            is_television(television_instance) and id[television_instance]==216
        achieve close_char(char,television_instance)
        if can_open(television_instance):
            achieve_once open(television_instance)
            exp(remote_control,television_instance)
        else:
            exp(remote_control,television_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,television_instance]=True
        close[television_instance,remote_control]=True
    

behavior find_phone_47_around_powersocket_48(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind powersocket_instance:item where:
            is_powersocket(powersocket_instance) and id[powersocket_instance]==48
        achieve close_char(char,powersocket_instance)
        if can_open(powersocket_instance):
            achieve_once open(powersocket_instance)
            exp(phone,powersocket_instance)
        else:
            exp(phone,powersocket_instance)
    eff:
        unknown[phone]=False
        close[phone,powersocket_instance]=True
        close[powersocket_instance,phone]=True
    

#exp_behavior_end

#goal_representation
 
def is_on_coffee_table(spectacles: item):
    # Function to check if spectacles are on the coffee table in the home office
    symbol on_table = exists t: item : is_table(t) and on(spectacles, t) and inside(t, home_office)
    return on_table

behavior place_spectacles_on_coffee_table(spectacles: item, coffee_table: item):
    body:
        achieve on(spectacles, coffee_table)
        # Place the spectacles on the coffee table

behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles) and not is_on_coffee_table(spectacles)
        # Select spectacles that are not already on the coffee table
        
        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table in the home office
        
        place_spectacles_on_coffee_table(spectacles, coffee_table)
        # Place the spectacles on the coffee table

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Unknown variable: home_office; available variables: [Variable<spectacles: item>, Variable<t: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_check_2033_around_bookshelf_188(check:item):
    goal: not unknown(check)
    body:
        assert is_check(check)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==188
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(check,bookshelf_instance)
        else:
            exp(check,bookshelf_instance)
    eff:
        unknown[check]=False
        close[check,bookshelf_instance]=True
        close[bookshelf_instance,check]=True
    

#goal_representation
 
def is_on_coffee_table(spectacles: item, home_office: item):
    # Function to check if spectacles are on the coffee table in the home office
    symbol on_table = exists t: item : is_table(t) and on(spectacles, t) and inside(t, home_office)
    return on_table

behavior place_spectacles_on_coffee_table(spectacles: item, coffee_table: item):
    body:
        achieve on(spectacles, coffee_table)
        # Place the spectacles on the coffee table

behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles) and not is_on_coffee_table(spectacles, home_office)
        # Select spectacles that are not already on the coffee table
        
        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table in the home office

        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        place_spectacles_on_coffee_table(spectacles, coffee_table)
        # Place the spectacles on the coffee table

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: home_office; available variables: [Variable<spectacles: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_plate_2105_around_kitchen_counter_132(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(plate,kitchen_counter_instance)
        else:
            exp(plate,kitchen_counter_instance)
    eff:
        unknown[plate]=False
        close[plate,kitchen_counter_instance]=True
        close[kitchen_counter_instance,plate]=True
    

behavior find_cup_2089_around_cup_2088(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2088
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(cup,cup_instance)
        else:
            exp(cup,cup_instance)
    eff:
        unknown[cup]=False
        close[cup,cup_instance]=True
        close[cup_instance,cup]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#goal_representation
 
def is_on_coffee_table(spectacles: item, home_office: item):
    # Function to check if spectacles are on the coffee table in the home office
    symbol on_table = exists t: item : is_table(t) and on(spectacles, t) and inside(t, home_office)
    return on_table

behavior place_spectacles_on_coffee_table(spectacles: item, coffee_table: item):
    body:
        achieve on(spectacles, coffee_table)
        # Place the spectacles on the coffee table

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office
        
        bind spectacles: item where:
            is_spectacles(spectacles) and not is_on_coffee_table(spectacles, home_office)
        # Select spectacles that are not already on the coffee table
        
        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table in the home office

        place_spectacles_on_coffee_table(spectacles, coffee_table)
        # Place the spectacles on the coffee table

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_on_coffee_table(spectacles: item, home_office: item):
    # Function to check if spectacles are on the coffee table in the home office
    symbol on_table = exists t: item : is_table(t) and on(spectacles, t) and inside(t, home_office)
    return on_table

behavior place_spectacles_on_coffee_table(spectacles: item, coffee_table: item):
    body:
        achieve on(spectacles, coffee_table)
        # Place the spectacles on the coffee table

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office
        
        bind spectacles: item where:
            is_spectacles(spectacles) and not is_on_coffee_table(spectacles, home_office)
        # Select spectacles that are not already on the coffee table
        
        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table in the home office

        place_spectacles_on_coffee_table(spectacles, coffee_table)
        # Place the spectacles on the coffee table

##############################
From agent.py-> find a plan in act()
grab_executor(spectacles_2106)walk_executor(table_193)put_executor(spectacles_2106, table_193)
##############################
From agent.py
grab_executor(spectacles_2106)
Robot is inside dining_room_1. Robot is close spectacles_2106. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Grabbing spectacles_2106 by right hand. 
##############################
From agent.py
walk_executor(table_193)
Robot is inside home_office_161. Robot is close spectacles_2106. Robot is close table_193. Robot is no longer inside dining_room_1.Robot is no longer close floor_17.Robot is no longer close table_123.Robot is no longer close mat_114.
##############################
From agent.py
put_executor(spectacles_2106, table_193)
Robot is inside home_office_161. Robot is close spectacles_2106. Robot is close table_193. spectacles_2106 released by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2092_around_bookshelf_137(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==137
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
def is_book_on_table(table:item):
    # Function to check if there is a book on a specified table
    symbol has_book=exists b: item : is_book(b) and on(b, table)
    return has_book

behavior locate_and_place_book(table_with_spectacles:item):
    body:
        if exists book: item : is_book(book) and on(book, table_with_spectacles):
            # If the table already has a book, place it there
            bind book: item where:
                is_book(book) and on(book, table_with_spectacles)
            achieve on(book, table_with_spectacles)
        else:
            foreach book: item:
                if is_book(book) and not visited(book):
                    observe(book, "Check if this book can be placed on the coffee table in home_office_161")            

behavior __goal__():
    body:
        bind table: item where:
            is_table(table) and inside(table, home_office_161) and is_table_on(table,table_with_spectacles)
        # Select the coffee table in home_office_161 where the spectacles are already placed
        
        locate_and_place_book(table)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: home_office_161; available variables: [Variable<table: item>].
##############################
