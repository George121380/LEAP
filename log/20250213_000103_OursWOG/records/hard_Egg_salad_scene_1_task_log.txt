From agent.py
Reset goals: The sub-goals are: 
['1. Boil the eggs.', '2. Wash and slice the vegetables and lemon.', '3. Mix the boiled eggs, sliced vegetables, and lemon in a bowl.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_2138_around_cupboard_117(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(pot,cupboard_instance)
        else:
            exp(pot,cupboard_instance)
    eff:
        unknown[pot]=False
        close[pot,cupboard_instance]=True
        close[cupboard_instance,pot]=True
    

behavior find_food_egg_2092_around_fridge_126(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_cat_2069_around_kitchen_counter_122(cat:item):
    goal: not unknown(cat)
    body:
        assert is_cat(cat)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cat,kitchen_counter_instance)
        else:
            exp(cat,kitchen_counter_instance)
    eff:
        unknown[cat]=False
        close[cat,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cat]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_egg_in_pot(egg:item, pot:item):
    body:
        achieve_once inside(egg, pot)

behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)

        bind pot: item where:
            is_pot(pot)

        bind stove: item where:
            is_stove(stove)

        place_egg_in_pot(egg, pot)
        fill_pot_with_water(pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior place_egg_in_pot(egg:item, pot:item):
    body:
        achieve_once inside(egg, pot)

behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)

        bind pot: item where:
            is_pot(pot)

        bind stove: item where:
            is_stove(stove)

        place_egg_in_pot(egg, pot)
        fill_pot_with_water(pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(pot_2138, cupboard_117)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_egg_2092, fridge_126)walk_executor(pot_2138)open_executor(pot_2138)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(pot_2138)putin_executor(food_egg_2092, pot_2138)grab_executor(pot_2138)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(stove_2135)put_executor(pot_2138, stove_2135)switchon_executor(stove_2135)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, pot_78, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(pot_2138, cupboard_117)
Fail to find pot_2138 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_egg_2092, fridge_126)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(pot_78)putin_executor(food_egg_2092, pot_78)grab_executor(pot_78)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(stove_2135)put_executor(pot_78, stove_2135)switchon_executor(stove_2135)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_egg_2092, fridge_126)
Find food_egg_2092. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_egg_2092)walk_executor(pot_78)putin_executor(food_egg_2092, pot_78)grab_executor(pot_78)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(stove_2135)put_executor(pot_78, stove_2135)switchon_executor(stove_2135)
##############################
From agent.py
grab_executor(food_egg_2092)
Robot find: Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. Grabbing food_egg_2092 by right hand. 
##############################
From agent.py
walk_executor(pot_78)
Robot find: food_food_2064, Robot is close to the food_egg_2092. Robot is close to the pot_78. Robot is close to the oven_127. 
##############################
From agent.py
putin_executor(food_egg_2092, pot_78)
Robot find: Robot is close to the food_egg_2092. Robot is close to the pot_78. Robot is close to the oven_127. pot_78 is close food_egg_2092. food_egg_2092 is inside pot_78. food_egg_2092 is close pot_78. food_egg_2092 released by right hand. 
##############################
From agent.py
grab_executor(pot_78)
Robot find: Robot is close to the food_egg_2092. Robot is close to the pot_78. Robot is close to the oven_127. Grabbing pot_78 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot find: mat_32, phone_2029, drawing_33, Robot is close to the pot_78. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchon_executor(faucet_20)
Robot find: Robot is close to the pot_78. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot find: Robot is close to the pot_78. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned off. 
##############################
From agent.py
walk_executor(stove_2135)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the pot_78. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. 
##############################
From agent.py
put_executor(pot_78, stove_2135)
Robot find: Robot is close to the pot_78. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. pot_78 is close stove_2135. pot_78 is on stove_2135. stove_2135 is close pot_78. pot_78 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2135)
Robot find: Robot is close to the pot_78. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. stove_2135 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2122_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_food_onion_2104_around_kitchen_counter_122(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_onion,kitchen_counter_instance)
        else:
            exp(food_onion,kitchen_counter_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_onion]=True
    

behavior find_food_carrot_2086_around_dishwasher_129(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==129
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(food_carrot,dishwasher_instance)
        else:
            exp(food_carrot,dishwasher_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,dishwasher_instance]=True
        close[dishwasher_instance,food_carrot]=True
    

#exp_behavior_end

#goal_representation
behavior wash_and_slice_vegetables(vegetable:item, knife:item, board:item):
    body:
        achieve_once clean(vegetable)
        # Wash the vegetable
        achieve_once on(vegetable, board)
        # Place the vegetable on the cutting board
        achieve_once cut(vegetable)
        # Slice the vegetable

behavior wash_and_slice_lemon(lemon:item, knife:item, board:item):
    body:
        achieve_once clean(lemon)
        # Wash the lemon
        achieve_once on(lemon, board)
        # Place the lemon on the cutting board
        achieve_once cut(lemon)
        # Slice the lemon

behavior __goal__():
    body:
        foreach vegetable: item:
            if is_food_vegetable(vegetable) and not cut(vegetable):
                bind knife: item where:
                    is_knife(knife)

                bind board: item where:
                    is_cutting_board(board)

                wash_and_slice_vegetables(vegetable, knife, board)

        bind lemon: item where:
            is_food_lemon(lemon)

        bind knife: item where:
            is_knife(knife)

        bind board: item where:
            is_cutting_board(board)

        wash_and_slice_lemon(lemon, knife, board)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior wash_and_slice_vegetables(vegetable:item, knife:item, board:item):
    body:
        achieve_once clean(vegetable)
        # Wash the vegetable
        achieve_once on(vegetable, board)
        # Place the vegetable on the cutting board
        achieve_once cut(vegetable)
        # Slice the vegetable

behavior wash_and_slice_lemon(lemon:item, knife:item, board:item):
    body:
        achieve_once clean(lemon)
        # Wash the lemon
        achieve_once on(lemon, board)
        # Place the lemon on the cutting board
        achieve_once cut(lemon)
        # Slice the lemon

behavior __goal__():
    body:
        foreach vegetable: item:
            if is_food_vegetable(vegetable) and not cut(vegetable):
                bind knife: item where:
                    is_knife(knife)

                bind board: item where:
                    is_cutting_board(board)

                wash_and_slice_vegetables(vegetable, knife, board)

        bind lemon: item where:
            is_food_lemon(lemon)

        bind knife: item where:
            is_knife(knife)

        bind board: item where:
            is_cutting_board(board)

        wash_and_slice_lemon(lemon, knife, board)
##############################
From agent.py-> find a plan in act()
walk_executor(food_vegetable_2113)grab_executor(food_vegetable_2113)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_vegetable_2113)switchoff_executor(faucet_20)walk_executor(cutting_board_2123)put_executor(food_vegetable_2113, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_vegetable_2113)cut_executor(food_vegetable_2113)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(cutting_board_2123)put_executor(food_lemon_2100, cutting_board_2123)walk_executor(food_lemon_2100)cut_executor(food_lemon_2100)
##############################
From agent.py
walk_executor(food_vegetable_2113)
Robot find: Robot is close to the food_vegetable_2113. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_vegetable_2113)
Robot find: Robot is close to the food_vegetable_2113. Robot is close to the fridge_126. Grabbing food_vegetable_2113 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot find: Robot is close to the food_vegetable_2113. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchon_executor(faucet_20)
Robot find: Robot is close to the food_vegetable_2113. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned on. 
##############################
From agent.py
wash_executor(food_vegetable_2113)
Robot find: Robot is close to the food_vegetable_2113. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. food_vegetable_2113 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot find: Robot is close to the food_vegetable_2113. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned off. 
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot find: Robot is close to the food_vegetable_2113. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_vegetable_2113, cutting_board_2123)
Robot find: Robot is close to the food_vegetable_2113. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. cutting_board_2123 is close food_vegetable_2113. food_vegetable_2113 is close cutting_board_2123. food_vegetable_2113 is on cutting_board_2123. food_vegetable_2113 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_76)
Robot find: Robot is close to the knifeblock_76. 
##############################
From agent.py
exp(knife_2122, knifeblock_76)
Fail to find knife_2122 around knifeblock_76. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(knife_2122, kitchen_counter_122)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_vegetable_2113)cut_executor(food_vegetable_2113)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(cutting_board_2123)put_executor(food_lemon_2100, cutting_board_2123)walk_executor(food_lemon_2100)cut_executor(food_lemon_2100)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, fryingpan_2154, Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(knife_2122, kitchen_counter_122)
Fail to find knife_2122 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_129)open_executor(dishwasher_129)exp(knife_2122, dishwasher_129)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_vegetable_2113)cut_executor(food_vegetable_2113)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(cutting_board_2123)put_executor(food_lemon_2100, cutting_board_2123)walk_executor(food_lemon_2100)cut_executor(food_lemon_2100)
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the dishwasher_129. 
##############################
From agent.py
open_executor(dishwasher_129)
Robot find: detergent_2011, measuring_cup_2012, Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the measuring_cup_2012. dishwasher_129 is opened. 
##############################
From agent.py
exp(knife_2122, dishwasher_129)
Fail to find knife_2122 around dishwasher_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(computer_209)exp(knife_2122, computer_209)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_vegetable_2113)cut_executor(food_vegetable_2113)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(cutting_board_2123)put_executor(food_lemon_2100, cutting_board_2123)walk_executor(food_lemon_2100)cut_executor(food_lemon_2100)
##############################
From agent.py
walk_executor(computer_209)
Robot find: chair_194, keyboard_211, mouse_213, Robot is close to the computer_209. 
##############################
From agent.py
exp(knife_2122, computer_209)
Fail to find knife_2122 around computer_209. 
##############################
From agent.py-> find a plan in act()
walk_executor(window_2156)open_executor(window_2156)exp(knife_2122, window_2156)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_vegetable_2113)cut_executor(food_vegetable_2113)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(cutting_board_2123)put_executor(food_lemon_2100, cutting_board_2123)walk_executor(food_lemon_2100)cut_executor(food_lemon_2100)
##############################
From agent.py
walk_executor(window_2156)
Robot find: Robot is close to the window_2156. 
##############################
From agent.py
open_executor(window_2156)
Robot find: Robot is close to the window_2156. window_2156 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find knife_2122 ?
Answer: Go to dining_room_41. Locate table_114, and you will find knife_2122 on top of it.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_41. Locate table_114, and you will find knife_2122 on top of it.

The actions you have taken:
Action 1: Walk to cupboard_117.
Action 2: look for pot_2138 around cupboard_117.
Action 3: Walk to fridge_126.
Action 4: Switch off fridge_126.
Action 5: Open fridge_126.
Action 6: look for food_egg_2092 around fridge_126.
Action 7: Grab food_egg_2092.
Action 8: Walk to pot_78.
Action 9: Put food_egg_2092 into pot_78.
Action 10: Grab pot_78.
Action 11: Walk to faucet_20.
Action 12: Switch on faucet_20.
Action 13: Switch off faucet_20.
Action 14: Walk to stove_2135.
Action 15: Put pot_78 on stove_2135.
Action 16: Switch on stove_2135.
Action 17: Walk to food_vegetable_2113.
Action 18: Grab food_vegetable_2113.
Action 19: Walk to faucet_20.
Action 20: Switch on faucet_20.
Action 21: Wash food_vegetable_2113.
Action 22: Switch off faucet_20.
Action 23: Walk to cutting_board_2123.
Action 24: Put food_vegetable_2113 on cutting_board_2123.
Action 25: Walk to knifeblock_76.
Action 26: look for knife_2122 around knifeblock_76.
Action 27: Walk to kitchen_counter_122.
Action 28: look for knife_2122 around kitchen_counter_122.
Action 29: Walk to dishwasher_129.
Action 30: Open dishwasher_129.
Action 31: look for knife_2122 around dishwasher_129.
Action 32: Walk to computer_209.
Action 33: look for knife_2122 around computer_209.
Action 34: Walk to window_2156.
Action 35: Open window_2156.

##############################
From agent.py
exp(knife_2122, window_2156)
Fail to find knife_2122 around window_2156. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(knife_2122, table_114)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_vegetable_2113)cut_executor(food_vegetable_2113)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(cutting_board_2123)put_executor(food_lemon_2100, cutting_board_2123)walk_executor(food_lemon_2100)cut_executor(food_lemon_2100)
##############################
From agent.py
walk_executor(table_114)
Robot find: mat_102, cup_2049, pillow_103, pillow_104, pillow_105, pillow_106, lighter_2004, lighter_2039, box_2038, clothes_hat_2117, milk_2115, cup_2134, check_2058, drawing_110, drawing_111, clothes_gloves_2118, cup_2132, food_bread_2084, dry_pasta_2114, knife_2122, cup_2133, table_cloth_2005, food_food_2021, Robot is close to the table_114. Robot is close to the mat_102. 
##############################
From agent.py
exp(knife_2122, table_114)
Find knife_2122. 
##############################
From agent.py-> find a plan in act()
walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_vegetable_2113)cut_executor(food_vegetable_2113)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(cutting_board_2123)put_executor(food_lemon_2100, cutting_board_2123)walk_executor(food_lemon_2100)cut_executor(food_lemon_2100)
##############################
From agent.py
walk_executor(knife_2122)
Robot find: Robot is close to the table_114. Robot is close to the knife_2122. 
##############################
From agent.py
grab_executor(knife_2122)
Robot find: Robot is close to the table_114. Robot is close to the knife_2122. Grabbing knife_2122 by right hand. 
##############################
From agent.py
walk_executor(food_vegetable_2113)
Robot find: Robot is close to the knife_2122. Robot is close to the food_vegetable_2113. Robot is close to the cutting_board_2123. 
##############################
From agent.py
cut_executor(food_vegetable_2113)
Robot find: Robot is close to the knife_2122. Robot is close to the food_vegetable_2113. Robot is close to the cutting_board_2123. 
##############################
From agent.py
walk_executor(food_lemon_2100)
Robot find: Robot is close to the knife_2122. Robot is close to the food_lemon_2100. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_lemon_2100)
Robot find: Robot is close to the knife_2122. Robot is close to the food_lemon_2100. Robot is close to the fridge_126. Grabbing food_lemon_2100 by left hand. 
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot find: Robot is close to the knife_2122. Robot is close to the food_lemon_2100. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_lemon_2100, cutting_board_2123)
Robot find: Robot is close to the knife_2122. Robot is close to the food_lemon_2100. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. cutting_board_2123 is close food_lemon_2100. food_lemon_2100 is close cutting_board_2123. food_lemon_2100 is on cutting_board_2123. food_lemon_2100 released by left hand. 
##############################
From agent.py
walk_executor(food_lemon_2100)
Robot find: Robot is close to the knife_2122. Robot is close to the food_lemon_2100. Robot is close to the cutting_board_2123. 
##############################
From agent.py
cut_executor(food_lemon_2100)
Robot find: Robot is close to the knife_2122. Robot is close to the food_lemon_2100. Robot is close to the cutting_board_2123. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_78_around_food_food_1000(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==1000
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(pot,food_food_instance)
        else:
            exp(pot,food_food_instance)
    eff:
        unknown[pot]=False
        close[pot,food_food_instance]=True
        close[food_food_instance,pot]=True
    

behavior find_knife_2037_around_sink_19(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==19
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(knife,sink_instance)
        else:
            exp(knife,sink_instance)
    eff:
        unknown[knife]=False
        close[knife,sink_instance]=True
        close[sink_instance,knife]=True
    

#exp_behavior_end

#goal_representation

behavior mix_boiled_eggs_vegetables_and_lemon(bowl:item, egg:item, vegetable:item, lemon:item):
    body:
        achieve_once inside(egg, bowl)
        achieve_once inside(vegetable, bowl)
        achieve_once inside(lemon, bowl)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)

        bind egg: item where:
            is_food_egg(egg) and cut(egg)

        bind vegetable: item where:
            is_food_vegetable(vegetable) and cut(vegetable)

        bind lemon: item where:
            is_food_lemon(lemon) and cut(lemon)

        mix_boiled_eggs_vegetables_and_lemon(bowl, egg, vegetable, lemon)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_78_around_desk_193(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==193
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(pot,desk_instance)
        else:
            exp(pot,desk_instance)
    eff:
        unknown[pot]=False
        close[pot,desk_instance]=True
        close[desk_instance,pot]=True
    

behavior find_knife_2037_around_bathroom_cabinet_17(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(knife,bathroom_cabinet_instance)
        else:
            exp(knife,bathroom_cabinet_instance)
    eff:
        unknown[knife]=False
        close[knife,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,knife]=True
    

behavior find_brush_2002_around_bathroom_cabinet_17(brush:item):
    goal: not unknown(brush)
    body:
        assert is_brush(brush)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(brush,bathroom_cabinet_instance)
        else:
            exp(brush,bathroom_cabinet_instance)
    eff:
        unknown[brush]=False
        close[brush,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,brush]=True
    

#exp_behavior_end

#goal_representation
 
behavior mix_ingredients(eggs:item, vegetables:item, lemon:item, bowl:item):
    body:
        achieve_once inside(eggs, bowl)
        achieve_once inside(vegetables, bowl)
        achieve_once inside(lemon, bowl)

behavior __goal__():
    body:
        bind eggs: item where:
            is_food_egg(eggs)

        bind vegetables: item where:
            is_food_vegetable(vegetables) and cut(vegetables)

        bind lemon: item where:
            is_food_lemon(lemon) and cut(lemon)

        bind bowl: item where:
            is_bowl(bowl)

        mix_ingredients(eggs, vegetables, lemon, bowl)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior mix_ingredients(eggs:item, vegetables:item, lemon:item, bowl:item):
    body:
        achieve_once inside(eggs, bowl)
        achieve_once inside(vegetables, bowl)
        achieve_once inside(lemon, bowl)

behavior __goal__():
    body:
        bind eggs: item where:
            is_food_egg(eggs)

        bind vegetables: item where:
            is_food_vegetable(vegetables) and cut(vegetables)

        bind lemon: item where:
            is_food_lemon(lemon) and cut(lemon)

        bind bowl: item where:
            is_bowl(bowl)

        mix_ingredients(eggs, vegetables, lemon, bowl)

##############################
From agent.py-> find a plan in act()
walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(bowl_2141)putin_executor(food_egg_2092, bowl_2141)walk_executor(food_vegetable_2113)grab_executor(food_vegetable_2113)walk_executor(bowl_2141)putin_executor(food_vegetable_2113, bowl_2141)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(bowl_2141)putin_executor(food_lemon_2100, bowl_2141)
##############################
From agent.py
walk_executor(food_egg_2092)
Robot find: Robot is close to the knife_2122. Robot is close to the food_egg_2092. Robot is close to the pot_78. 
##############################
From agent.py
grab_executor(food_egg_2092)
Robot find: Robot is close to the knife_2122. Robot is close to the food_egg_2092. Robot is close to the pot_78. Grabbing food_egg_2092 by left hand. 
##############################
From agent.py
walk_executor(bowl_2141)
Robot find: Robot is close to the knife_2122. Robot is close to the food_egg_2092. Robot is close to the bowl_2141. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
putin_executor(food_egg_2092, bowl_2141)
Robot find: Robot is close to the knife_2122. Robot is close to the food_egg_2092. Robot is close to the bowl_2141. Robot is close to the kitchen_counter_119. food_egg_2092 is inside bowl_2141. bowl_2141 is close food_egg_2092. food_egg_2092 is close bowl_2141. food_egg_2092 released by left hand. 
##############################
From agent.py
walk_executor(food_vegetable_2113)
Robot find: Robot is close to the knife_2122. Robot is close to the food_vegetable_2113. Robot is close to the cutting_board_2123. 
##############################
From agent.py
grab_executor(food_vegetable_2113)
Robot find: Robot is close to the knife_2122. Robot is close to the food_vegetable_2113. Robot is close to the cutting_board_2123. Grabbing food_vegetable_2113 by left hand. 
##############################
From agent.py
walk_executor(bowl_2141)
Robot find: Robot is close to the knife_2122. Robot is close to the food_vegetable_2113. Robot is close to the bowl_2141. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
putin_executor(food_vegetable_2113, bowl_2141)
Robot find: Robot is close to the knife_2122. Robot is close to the food_vegetable_2113. Robot is close to the bowl_2141. Robot is close to the kitchen_counter_119. food_vegetable_2113 is inside bowl_2141. food_vegetable_2113 is close bowl_2141. bowl_2141 is close food_vegetable_2113. food_vegetable_2113 released by left hand. 
##############################
From agent.py
walk_executor(food_lemon_2100)
Robot find: Robot is close to the knife_2122. Robot is close to the cutting_board_2123. Robot is close to the food_lemon_2100. 
##############################
From agent.py
grab_executor(food_lemon_2100)
Robot find: Robot is close to the knife_2122. Robot is close to the cutting_board_2123. Robot is close to the food_lemon_2100. Grabbing food_lemon_2100 by left hand. 
##############################
From agent.py
walk_executor(bowl_2141)
Robot find: Robot is close to the knife_2122. Robot is close to the food_lemon_2100. Robot is close to the bowl_2141. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
putin_executor(food_lemon_2100, bowl_2141)
Robot find: Robot is close to the knife_2122. Robot is close to the food_lemon_2100. Robot is close to the bowl_2141. Robot is close to the kitchen_counter_119. food_lemon_2100 is inside bowl_2141. food_lemon_2100 is close bowl_2141. bowl_2141 is close food_lemon_2100. food_lemon_2100 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make a bowl of egg salad with boiled egg, lemon, and vegetables.
Action History:
['walk_executor(cupboard_117)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'grab_executor(food_egg_2092)', 'walk_executor(pot_78)', 'putin_executor(food_egg_2092, pot_78)', 'grab_executor(pot_78)', 'walk_executor(faucet_20)', 'switchon_executor(faucet_20)', 'switchoff_executor(faucet_20)', 'walk_executor(stove_2135)', 'put_executor(pot_78, stove_2135)', 'switchon_executor(stove_2135)', 'walk_executor(food_vegetable_2113)', 'grab_executor(food_vegetable_2113)', 'walk_executor(faucet_20)', 'switchon_executor(faucet_20)', 'wash_executor(food_vegetable_2113)', 'switchoff_executor(faucet_20)', 'walk_executor(cutting_board_2123)', 'put_executor(food_vegetable_2113, cutting_board_2123)', 'walk_executor(knifeblock_76)', 'walk_executor(kitchen_counter_122)', 'walk_executor(dishwasher_129)', 'open_executor(dishwasher_129)', 'walk_executor(computer_209)', 'walk_executor(window_2156)', 'open_executor(window_2156)', 'walk_executor(table_114)', 'walk_executor(knife_2122)', 'grab_executor(knife_2122)', 'walk_executor(food_vegetable_2113)', 'cut_executor(food_vegetable_2113)', 'walk_executor(food_lemon_2100)', 'grab_executor(food_lemon_2100)', 'walk_executor(cutting_board_2123)', 'put_executor(food_lemon_2100, cutting_board_2123)', 'walk_executor(food_lemon_2100)', 'cut_executor(food_lemon_2100)', 'walk_executor(food_egg_2092)', 'grab_executor(food_egg_2092)', 'walk_executor(bowl_2141)', 'putin_executor(food_egg_2092, bowl_2141)', 'walk_executor(food_vegetable_2113)', 'grab_executor(food_vegetable_2113)', 'walk_executor(bowl_2141)', 'putin_executor(food_vegetable_2113, bowl_2141)', 'walk_executor(food_lemon_2100)', 'grab_executor(food_lemon_2100)', 'walk_executor(bowl_2141)', 'putin_executor(food_lemon_2100, bowl_2141)']
Time info:
Time consume: 514 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 80
goal generate times: 4
goal correct times: 0
action_num: 52

Task complete rate:
1
Scene_id: 1
##############################
