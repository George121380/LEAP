From agent.py
Reset goals: The sub-goals are: 
['Boil some rice in a pot.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_54_around_cupboard_130(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(pot,cupboard_instance)
        else:
            exp(pot,cupboard_instance)
    eff:
        unknown[pot]=False
        close[pot,cupboard_instance]=True
        close[cupboard_instance,pot]=True
    

behavior find_food_rice_2067_around_cupboard_130(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_rice,cupboard_instance)
        else:
            exp(food_rice,cupboard_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,cupboard_instance]=True
        close[cupboard_instance,food_rice]=True
    

behavior find_stamp_2031_around_photoframe_246(stamp:item):
    goal: not unknown(stamp)
    body:
        assert is_stamp(stamp)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==246
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(stamp,photoframe_instance)
        else:
            exp(stamp,photoframe_instance)
    eff:
        unknown[stamp]=False
        close[stamp,photoframe_instance]=True
        close[photoframe_instance,stamp]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_rice_in_pot(rice:item, pot:item):
    body:
        achieve_once inside(rice, pot)

behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)

        bind pot: item where:
            is_pot(pot)

        bind stove: item where:
            is_stove(stove)

        place_rice_in_pot(rice, pot)
        fill_pot_with_water(pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior place_rice_in_pot(rice:item, pot:item):
    body:
        achieve_once inside(rice, pot)

behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)

        bind pot: item where:
            is_pot(pot)

        bind stove: item where:
            is_stove(stove)

        place_rice_in_pot(rice, pot)
        fill_pot_with_water(pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(pot_2093, cupboard_130)exp(food_rice_2067, cupboard_130)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(pot_2093)putin_executor(food_rice_2067, pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, pot_54, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(pot_2093, cupboard_130)
Fail to find pot_2093 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_187)exp(food_rice_2067, wallshelf_187)walk_executor(pot_54)open_executor(pot_54)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(pot_54)putin_executor(food_rice_2067, pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(wallshelf_187)
Robot find: Robot is close to the wallshelf_187. 
##############################
From agent.py
exp(food_rice_2067, wallshelf_187)
Fail to find food_rice_2067 around wallshelf_187. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_191)exp(food_rice_2067, wallshelf_191)walk_executor(pot_54)open_executor(pot_54)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(pot_54)putin_executor(food_rice_2067, pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(wallshelf_191)
Robot find: Robot is close to the wallshelf_191. 
##############################
From agent.py
exp(food_rice_2067, wallshelf_191)
Fail to find food_rice_2067 around wallshelf_191. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_190)exp(food_rice_2067, wallshelf_190)walk_executor(pot_54)open_executor(pot_54)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(pot_54)putin_executor(food_rice_2067, pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(wallshelf_190)
Robot find: Robot is close to the wallshelf_190. 
##############################
From agent.py
exp(food_rice_2067, wallshelf_190)
Fail to find food_rice_2067 around wallshelf_190. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['Boil some rice by pot.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_54_around_pot_54(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==54
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(pot,pot_instance)
        else:
            exp(pot,pot_instance)
    eff:
        unknown[pot]=False
        close[pot,pot_instance]=True
        close[pot_instance,pot]=True
    

behavior find_food_rice_2067_around_kitchen_counter_128(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_rice,kitchen_counter_instance)
        else:
            exp(food_rice,kitchen_counter_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_rice]=True
    

behavior find_stamp_2031_around_bookshelf_189(stamp:item):
    goal: not unknown(stamp)
    body:
        assert is_stamp(stamp)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==189
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(stamp,bookshelf_instance)
        else:
            exp(stamp,bookshelf_instance)
    eff:
        unknown[stamp]=False
        close[stamp,bookshelf_instance]=True
        close[bookshelf_instance,stamp]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_rice_in_pot(rice:item, pot:item):
    body:
        achieve_once inside(rice, pot)

behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)

        bind pot: item where:
            is_pot(pot)

        bind stove: item where:
            is_stove(stove)

        place_rice_in_pot(rice, pot)
        fill_pot_with_water(pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior place_rice_in_pot(rice:item, pot:item):
    body:
        achieve_once inside(rice, pot)

behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)

        bind pot: item where:
            is_pot(pot)

        bind stove: item where:
            is_stove(stove)

        place_rice_in_pot(rice, pot)
        fill_pot_with_water(pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(food_rice_2067, kitchen_counter_128)walk_executor(pot_54)open_executor(pot_54)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(pot_54)putin_executor(food_rice_2067, pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(food_rice_2067, kitchen_counter_128)
Fail to find food_rice_2067 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_rice_2067, fridge_140)walk_executor(pot_54)open_executor(pot_54)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(pot_54)putin_executor(food_rice_2067, pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_rice_2067, fridge_140)
Find food_rice_2067. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_54)open_executor(pot_54)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(pot_54)putin_executor(food_rice_2067, pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
open_executor(pot_54)
Robot find: Robot is close to the oven_141. Robot is close to the pot_54. pot_54 is opened. 
##############################
From agent.py
walk_executor(food_rice_2067)
Robot find: Robot is close to the food_rice_2067. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_rice_2067)
Robot find: Robot is close to the food_rice_2067. Robot is close to the fridge_140. Grabbing food_rice_2067 by right hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the food_rice_2067. Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
putin_executor(food_rice_2067, pot_54)
Robot find: Robot is close to the food_rice_2067. Robot is close to the oven_141. Robot is close to the pot_54. food_rice_2067 is inside pot_54. pot_54 is close food_rice_2067. food_rice_2067 is close pot_54. food_rice_2067 released by right hand. 
##############################
From agent.py
grab_executor(pot_54)
Robot find: Robot is close to the food_rice_2067. Robot is close to the oven_141. Robot is close to the pot_54. Grabbing pot_54 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(pot_54, stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. pot_54 is on stove_2090. pot_54 is close stove_2090. stove_2090 is close pot_54. pot_54 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to fill the pot with water to achieve the "fill_pot_with_water(pot:item)" goal.
##############################
From agent.py
Human Instruction: The robot needs to fill the pot with water to achieve the "fill_pot_with_water(pot:item)" goal.

The actions you have taken:
Action 1: Walk to cupboard_130.
Action 2: look for pot_2093 around cupboard_130.
Action 3: Walk to wallshelf_187.
Action 4: look for food_rice_2067 around wallshelf_187.
Action 5: Walk to wallshelf_191.
Action 6: look for food_rice_2067 around wallshelf_191.
Action 7: Walk to wallshelf_190.
Action 8: look for food_rice_2067 around wallshelf_190.
Action 9: Walk to kitchen_counter_128.
Action 10: look for food_rice_2067 around kitchen_counter_128.
Action 11: Walk to fridge_140.
Action 12: Switch off fridge_140.
Action 13: Open fridge_140.
Action 14: look for food_rice_2067 around fridge_140.
Action 15: Walk to pot_54.
Action 16: Open pot_54.
Action 17: Walk to food_rice_2067.
Action 18: Grab food_rice_2067.
Action 19: Walk to pot_54.
Action 20: Put food_rice_2067 into pot_54.
Action 21: Grab pot_54.
Action 22: Walk to faucet_134.
Action 23: Switch off faucet_134.
Action 24: Walk to stove_2090.
Action 25: Put pot_54 on stove_2090.
Action 26: Switch on stove_2090.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cat_2082_around_fryingpan_2107(cat:item):
    goal: not unknown(cat)
    body:
        assert is_cat(cat)
        bind fryingpan_instance:item where:
            is_fryingpan(fryingpan_instance) and id[fryingpan_instance]==2107
        achieve close_char(char,fryingpan_instance)
        if can_open(fryingpan_instance):
            achieve_once open(fryingpan_instance)
            exp(cat,fryingpan_instance)
        else:
            exp(cat,fryingpan_instance)
    eff:
        unknown[cat]=False
        close[cat,fryingpan_instance]=True
        close[fryingpan_instance,cat]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_rice_in_pot(rice:item, pot:item):
    body:
        achieve_once inside(rice, pot)

behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)

        bind pot: item where:
            is_pot(pot)

        bind stove: item where:
            is_stove(stove)

        place_rice_in_pot(rice, pot)
        fill_pot_with_water(pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior place_rice_in_pot(rice:item, pot:item):
    body:
        achieve_once inside(rice, pot)

behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)

        bind pot: item where:
            is_pot(pot)

        bind stove: item where:
            is_stove(stove)

        place_rice_in_pot(rice, pot)
        fill_pot_with_water(pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

##############################
From agent.py-> find a plan in act()
grab_executor(pot_54)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(stove_2090)put_executor(pot_54, stove_2090)
##############################
From agent.py
grab_executor(pot_54)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. Grabbing pot_54 by right hand. 
##############################
From agent.py
walk_executor(faucet_308)
Robot find: drawing_296, towel_rack_298, Robot is close to the pot_54. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. 
##############################
From agent.py
switchoff_executor(faucet_308)
Robot find: Robot is close to the pot_54. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. faucet_308 is turned off. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(pot_54, stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. pot_54 is on stove_2090. pot_54 is close stove_2090. pot_54 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to fill pot_54 with water to complete the "fill_pot_with_water(pot:item)" goal.
##############################
From agent.py
Human Instruction: The robot needs to fill pot_54 with water to complete the "fill_pot_with_water(pot:item)" goal.

The actions you have taken:
Action 1: Walk to cupboard_130.
Action 2: look for pot_2093 around cupboard_130.
Action 3: Walk to wallshelf_187.
Action 4: look for food_rice_2067 around wallshelf_187.
Action 5: Walk to wallshelf_191.
Action 6: look for food_rice_2067 around wallshelf_191.
Action 7: Walk to wallshelf_190.
Action 8: look for food_rice_2067 around wallshelf_190.
Action 9: Walk to kitchen_counter_128.
Action 10: look for food_rice_2067 around kitchen_counter_128.
Action 11: Walk to fridge_140.
Action 12: Switch off fridge_140.
Action 13: Open fridge_140.
Action 14: look for food_rice_2067 around fridge_140.
Action 15: Walk to pot_54.
Action 16: Open pot_54.
Action 17: Walk to food_rice_2067.
Action 18: Grab food_rice_2067.
Action 19: Walk to pot_54.
Action 20: Put food_rice_2067 into pot_54.
Action 21: Grab pot_54.
Action 22: Walk to faucet_134.
Action 23: Switch off faucet_134.
Action 24: Walk to stove_2090.
Action 25: Put pot_54 on stove_2090.
Action 26: Switch on stove_2090.
Action 27: Grab pot_54.
Action 28: Walk to faucet_308.
Action 29: Switch off faucet_308.
Action 30: Walk to stove_2090.
Action 31: Put pot_54 on stove_2090.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2102_around_oil_2102(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind oil_instance:item where:
            is_oil(oil_instance) and id[oil_instance]==2102
        achieve close_char(char,oil_instance)
        if can_open(oil_instance):
            achieve_once open(oil_instance)
            exp(oil,oil_instance)
        else:
            exp(oil,oil_instance)
    eff:
        unknown[oil]=False
        close[oil,oil_instance]=True
        close[oil_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_rice_in_pot(rice:item, pot:item):
    body:
        achieve_once inside(rice, pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot] == 54
        # Select the pot with ID 54
        
        bind rice: item where:
            is_food_rice(rice)
        # Select food rice
        
        bind stove: item where:
            is_stove(stove) and id[stove] == 2090
        # Select the stove with ID 2090 

        fill_pot_with_water(pot)
        place_rice_in_pot(rice, pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_rice_in_pot(rice:item, pot:item):
    body:
        achieve_once inside(rice, pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot] == 54
        # Select the pot with ID 54
        
        bind rice: item where:
            is_food_rice(rice)
        # Select food rice
        
        bind stove: item where:
            is_stove(stove) and id[stove] == 2090
        # Select the stove with ID 2090 

        fill_pot_with_water(pot)
        place_rice_in_pot(rice, pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

##############################
From agent.py-> find a plan in act()
grab_executor(pot_54)walk_executor(faucet_134)switchon_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)
##############################
From agent.py
grab_executor(pot_54)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. Grabbing pot_54 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(pot_54, stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. pot_54 is on stove_2090. pot_54 is close stove_2090. pot_54 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to ensure that pot_54 is filled with water. The current actions do not confirm that this has been done.
##############################
Task Summary:
Task Goal:
Boil some rice by pot.
Action History:
['walk_executor(cupboard_130)', 'walk_executor(wallshelf_187)', 'walk_executor(wallshelf_191)', 'walk_executor(wallshelf_190)', 'walk_executor(kitchen_counter_128)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'walk_executor(pot_54)', 'open_executor(pot_54)', 'walk_executor(food_rice_2067)', 'grab_executor(food_rice_2067)', 'walk_executor(pot_54)', 'putin_executor(food_rice_2067, pot_54)', 'grab_executor(pot_54)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(stove_2090)', 'put_executor(pot_54, stove_2090)', 'switchon_executor(stove_2090)', 'grab_executor(pot_54)', 'walk_executor(faucet_308)', 'switchoff_executor(faucet_308)', 'walk_executor(stove_2090)', 'put_executor(pot_54, stove_2090)', 'grab_executor(pot_54)', 'walk_executor(faucet_134)', 'switchon_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(stove_2090)', 'put_executor(pot_54, stove_2090)']
Time info:
Time consume: 187 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 7
goal generate times: 4
goal correct times: 0
action_num: 31

Task complete rate:
1
Scene_id: 2
##############################
