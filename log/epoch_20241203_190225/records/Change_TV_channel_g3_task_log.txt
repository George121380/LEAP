From agent.py
Reset goals: The sub-goals are: 
['1. Sit on the couch.', '2. Find the remote control and turn on the TV.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior sit_on_couch(couch:item):
    body:
        sit_somewhere(couch)

behavior __goal__():
    body:
        bind couch: item where:
            is_couch(couch)
        sit_on_couch(couch)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior sit_on_couch(couch:item):
    body:
        sit_somewhere(couch)

behavior __goal__():
    body:
        bind couch: item where:
            is_couch(couch)
        sit_on_couch(couch)

##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you tell me how to sit on the couch.
Answer: Need to replan: No  
Guidance: Sit on the couch.

##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you tell me how to find the remote control and turn on the tv.
Answer: Need to replan: Yes  
Guidance: You can turn on the TV by touching the remote control.

##############################
From agent.py-> find a plan in act()
walk_executor(couch_352)sit_executor(couch_352)
##############################
From agent.py
walk_executor(couch_352)
Find mat_401. Find remote_control_2052. Find clothes_jacket_2047. Find cat_2055. Find pillow_405. Find drawing_400. Find pillow_406. Find hairbrush_2002. Find vacuum_cleaner_2070. Robot is inside home_office_319. Robot is close couch_352. Robot is close mat_401. Robot is no longer inside bathroom_1.
##############################
From agent.py
sit_executor(couch_352)
Find headset_2062. Find hanger_363. Find hanger_374. Find drawing_404. Find keyboard_415. Find headset_2076. Find hanger_369. Find hanger_361. Find spectacles_2082. Find drawing_402. Find hanger_372. Find chair_356. Find book_2066. Find phone_2077. Find mouse_413. Find hanger_375. Find pencil_2001. Find hanger_367. Find hanger_359. Find dvd_player_2061. Find drawing_403. Find hanger_365. Find book_2067. Find hanger_376. Robot is inside home_office_319. Robot is close couch_352. Robot is close mat_401. Robot is on couch_352. Robot is facing television_410. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_phone_247_around_couch_352(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==352
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(phone,couch_instance)
        else:
            exp(phone,couch_instance)
    eff:
        unknown[phone]=False
        close[phone,couch_instance]=True
        close[couch_instance,phone]=True
    

behavior find_cd_player_2060_around_couch_352(cd_player:item):
    goal: not unknown(cd_player)
    body:
        assert is_cd_player(cd_player)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==352
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(cd_player,couch_instance)
        else:
            exp(cd_player,couch_instance)
    eff:
        unknown[cd_player]=False
        close[cd_player,couch_instance]=True
        close[couch_instance,cd_player]=True
    

#exp_behavior_end

#goal_representation
 
def is_television_close(remote:item, tv:item):
    # Function to check if the remote is close to the television
    symbol close_tv=exists tv: item : is_television(tv) and close(remote, tv)
    return close_tv

behavior pick_up_remote(remote:item, tv: item):
    body:
        achieve_once inhand(remote)
        assert is_television_close(remote, tv) # Confirm that the remote is close to the TV

behavior turn_on_tv(remote:item, tv:item):
    body:
        achieve is_on(tv) # Turn on the television using the remote

behavior __goal__():
    body:
        bind remote: item where:
            is_remote_control(remote)
        bind tv: item where:
            is_television(tv)
        pick_up_remote(remote, tv)
        turn_on_tv(remote, tv)

#goal_representation_end

##############################
