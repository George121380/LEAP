From agent.py
Reset goals: The sub-goals are: 
['make a cup of coffee using the coffee maker, then add milk and sugar.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_sugar_2111_around_cupboard_117(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_sugar,cupboard_instance)
        else:
            exp(food_sugar,cupboard_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,cupboard_instance]=True
        close[cupboard_instance,food_sugar]=True
    

behavior find_milk_2115_around_fridge_126(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_cup_2134_around_table_114(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==114
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(cup,table_instance)
        else:
            exp(cup,table_instance)
    eff:
        unknown[cup]=False
        close[cup,table_instance]=True
        close[table_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
def has_coffee_inside(mug:item):
    # Function to check if there is coffee inside the mug
    symbol has_coffee=exists o: item : (is_cup(o) and drinkable(o) and inside(coffee, mug))
    return has_coffee

def has_milk_inside(mug:item):
    # Function to check if there is milk inside the mug
    symbol has_milk=exists o: item : (is_cup(o) and inside(milk, mug))
    return has_milk

def has_sugar_inside(mug:item):
    # Function to check if there is sugar inside the mug
    symbol has_sugar=exists o: item : (is_cup(o) and inside(sugar, mug))
    return has_sugar

behavior make_coffee(coffee_maker:item, mug:item):
    body:
        achieve_once inside(coffee, mug)
        # Brew coffee using the coffee maker into the mug

behavior add_milk(milk:item, mug:item):
    body:
        achieve_once inside(milk, mug)
        # Add milk into the coffee mug

behavior add_sugar(sugar:item, mug:item):
    body:
        achieve_once inside(sugar, mug)
        # Add sugar into the coffee mug

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select a coffee maker
        
        bind mug: item where:
            is_cup(mug)
        # Select a mug

        make_coffee(coffee_maker, mug)
        
        bind milk: item where:
            is_milk(milk)
        # Select milk
        
        add_milk(milk, mug)
        
        bind sugar: item where:
            is_food_sugar(sugar)
        # Select sugar

        add_sugar(sugar, mug)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_sugar_2111_around_cupboard_117(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_sugar,cupboard_instance)
        else:
            exp(food_sugar,cupboard_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,cupboard_instance]=True
        close[cupboard_instance,food_sugar]=True
    

behavior find_milk_2115_around_fridge_126(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_cup_2132_around_coffe_maker_130(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind coffe_maker_instance:item where:
            is_coffe_maker(coffe_maker_instance) and id[coffe_maker_instance]==130
        achieve close_char(char,coffe_maker_instance)
        if can_open(coffe_maker_instance):
            achieve_once open(coffe_maker_instance)
            exp(cup,coffe_maker_instance)
        else:
            exp(cup,coffe_maker_instance)
    eff:
        unknown[cup]=False
        close[cup,coffe_maker_instance]=True
        close[coffe_maker_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior make_coffee(cup:item, coffee_maker:item):
    body:
        achieve_once is_on(coffee_maker)
        achieve_once has_water(cup)

behavior add_milk_sugar(cup:item, milk:item, sugar:item):
    body:
        achieve_once inside(milk, cup)
        achieve_once inside(sugar, cup)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select a coffee maker

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select sugar

        make_coffee(cup, coffee_maker)
        add_milk_sugar(cup, milk, sugar)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior make_coffee(cup:item, coffee_maker:item):
    body:
        achieve_once is_on(coffee_maker)
        achieve_once has_water(cup)

behavior add_milk_sugar(cup:item, milk:item, sugar:item):
    body:
        achieve_once inside(milk, cup)
        achieve_once inside(sugar, cup)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select a coffee maker

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select sugar

        make_coffee(cup, coffee_maker)
        add_milk_sugar(cup, milk, sugar)

##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)switchon_executor(coffe_maker_130)switchoff_executor(coffe_maker_130)open_executor(coffe_maker_130)exp(cup_2132, coffe_maker_130)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(cupboard_117)exp(food_sugar_2111, cupboard_117)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot find: spectacles_2153, pot_78, fryingpan_2154, Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. 
##############################
From agent.py
switchon_executor(coffe_maker_130)
Robot find: Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. coffe_maker_130 is turned on. 
##############################
From agent.py
switchoff_executor(coffe_maker_130)
Robot find: Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. coffe_maker_130 is turned off. 
##############################
From agent.py
open_executor(coffe_maker_130)
Robot find: coffee_filter_2065, Robot is close to the coffee_filter_2065. Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. coffe_maker_130 is opened. 
##############################
From agent.py
exp(cup_2132, coffe_maker_130)
Fail to find cup_2132 around coffe_maker_130. 
##############################
From agent.py-> find a plan in act()
close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)walk_executor(kitchen_counter_123)exp(cup_2132, kitchen_counter_123)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(cupboard_117)exp(food_sugar_2111, cupboard_117)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
close_executor(coffe_maker_130)
Robot find: Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. coffe_maker_130 is closed. 
##############################
From agent.py
switchon_executor(coffe_maker_130)
Robot find: Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. coffe_maker_130 is turned on. 
##############################
From agent.py
walk_executor(kitchen_counter_123)
Robot find: tray_2068, oil_2149, knife_2035, food_kiwi_2054, food_orange_2027, Robot is close to the kitchen_counter_123. 
##############################
From agent.py
exp(cup_2132, kitchen_counter_123)
Fail to find cup_2132 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(cup_2132, kitchen_counter_119)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(cupboard_117)exp(food_sugar_2111, cupboard_117)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(cup_2132, kitchen_counter_119)
Fail to find cup_2132 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(cup_2132, cupboard_117)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(cupboard_117)exp(food_sugar_2111, cupboard_117)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(cup_2132, cupboard_117)
Fail to find cup_2132 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(cup_2132, cupboard_118)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(cupboard_118)exp(food_sugar_2111, cupboard_118)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(cup_2132, cupboard_118)
Fail to find cup_2132 around cupboard_118. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['make a cup of coffee using the coffee maker, then add milk and sugar.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_sugar_2111_around_fridge_126(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_sugar,fridge_instance)
        else:
            exp(food_sugar,fridge_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,fridge_instance]=True
        close[fridge_instance,food_sugar]=True
    

behavior find_milk_2115_around_fridge_126(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_cup_2133_around_oven_127(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==127
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(cup,oven_instance)
        else:
            exp(cup,oven_instance)
    eff:
        unknown[cup]=False
        close[cup,oven_instance]=True
        close[oven_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_coffee(cup:item, coffe_maker:item):
    body:
        achieve_once inside(cup, coffe_maker) # Place the cup in the coffee maker
        achieve_once is_on(coffe_maker) # Turn on the coffee maker

behavior add_milk_and_sugar(cup:item, milk:item, sugar:item):
    body:
        achieve_once inside(milk, cup) # Add milk to the cup
        achieve_once inside(sugar, cup) # Add sugar to the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and grabbable(cup) # Find a cup that can be grabbed

        bind coffe_maker: item where: 
            is_coffe_maker(coffe_maker) and has_switch(coffe_maker) # Find a coffee maker with a switch

        bind milk: item where:
            is_milk(milk) # Identify milk to add to the coffee

        bind sugar: item where:
            is_food_sugar(sugar) # Identify sugar to add to the coffee

        prepare_coffee(cup, coffe_maker) # Prepare coffee using the coffee maker with the cup
        add_milk_and_sugar(cup, milk, sugar) # Add milk and sugar to the prepared coffee

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior prepare_coffee(cup:item, coffe_maker:item):
    body:
        achieve_once inside(cup, coffe_maker) # Place the cup in the coffee maker
        achieve_once is_on(coffe_maker) # Turn on the coffee maker

behavior add_milk_and_sugar(cup:item, milk:item, sugar:item):
    body:
        achieve_once inside(milk, cup) # Add milk to the cup
        achieve_once inside(sugar, cup) # Add sugar to the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and grabbable(cup) # Find a cup that can be grabbed

        bind coffe_maker: item where: 
            is_coffe_maker(coffe_maker) and has_switch(coffe_maker) # Find a coffee maker with a switch

        bind milk: item where:
            is_milk(milk) # Identify milk to add to the coffee

        bind sugar: item where:
            is_food_sugar(sugar) # Identify sugar to add to the coffee

        prepare_coffee(cup, coffe_maker) # Prepare coffee using the coffee maker with the cup
        add_milk_and_sugar(cup, milk, sugar) # Add milk and sugar to the prepared coffee

##############################
From agent.py-> find a plan in act()
walk_executor(oven_127)open_executor(oven_127)exp(cup_2133, oven_127)walk_executor(coffe_maker_130)switchoff_executor(coffe_maker_130)open_executor(coffe_maker_130)walk_executor(cup_2133)grab_executor(cup_2133)walk_executor(coffe_maker_130)putin_executor(cup_2133, coffe_maker_130)close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2133)putin_executor(milk_2115, cup_2133)walk_executor(fridge_126)exp(food_sugar_2111, fridge_126)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2133)putin_executor(food_sugar_2111, cup_2133)
##############################
From agent.py
walk_executor(oven_127)
Robot find: food_food_2064, Robot is close to the oven_127. 
##############################
From agent.py
open_executor(oven_127)
Robot find: tray_128, food_cheese_2072, oil_2013, food_carrot_2015, Robot is close to the tray_128. Robot is close to the food_cheese_2072. Robot is close to the oven_127. Robot is close to the oil_2013. Robot is close to the food_carrot_2015. oven_127 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2133 ?
Answer: Cup_2133 is located in dining_room_41. You can find it on table_114. Look for table_114, and cup_2133 should be on top of it.
Re-decompose: None

##############################
From agent.py
Human Instruction: Cup_2133 is located in dining_room_41. You can find it on table_114. Look for table_114, and cup_2133 should be on top of it.

The actions you have taken:
Action 1: Walk to coffe_maker_130.
Action 2: Switch on coffe_maker_130.
Action 3: Switch off coffe_maker_130.
Action 4: Open coffe_maker_130.
Action 5: look for cup_2132 around coffe_maker_130.
Action 6: Close coffe_maker_130.
Action 7: Switch on coffe_maker_130.
Action 8: Walk to kitchen_counter_123.
Action 9: look for cup_2132 around kitchen_counter_123.
Action 10: Walk to kitchen_counter_119.
Action 11: look for cup_2132 around kitchen_counter_119.
Action 12: Walk to cupboard_117.
Action 13: look for cup_2132 around cupboard_117.
Action 14: Walk to cupboard_118.
Action 15: Open cupboard_118.
Action 16: look for cup_2132 around cupboard_118.
Action 17: Walk to oven_127.
Action 18: Open oven_127.

##############################
From agent.py
exp(cup_2133, oven_127)
Fail to find cup_2133 around oven_127. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(cup_2133, table_114)walk_executor(coffe_maker_130)switchoff_executor(coffe_maker_130)open_executor(coffe_maker_130)walk_executor(cup_2133)grab_executor(cup_2133)walk_executor(coffe_maker_130)putin_executor(cup_2133, coffe_maker_130)close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2133)putin_executor(milk_2115, cup_2133)walk_executor(fridge_126)exp(food_sugar_2111, fridge_126)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2133)putin_executor(food_sugar_2111, cup_2133)
##############################
From agent.py
walk_executor(table_114)
Robot find: mat_102, cup_2049, pillow_103, pillow_104, pillow_105, pillow_106, lighter_2004, lighter_2039, box_2038, clothes_hat_2117, milk_2115, cup_2134, check_2058, drawing_110, drawing_111, clothes_gloves_2118, cup_2132, food_bread_2084, dry_pasta_2114, knife_2122, cup_2133, table_cloth_2005, food_food_2021, Robot is close to the table_114. Robot is close to the mat_102. 
##############################
From agent.py
exp(cup_2133, table_114)
Find cup_2133. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)switchoff_executor(coffe_maker_130)open_executor(coffe_maker_130)walk_executor(cup_2133)grab_executor(cup_2133)walk_executor(coffe_maker_130)putin_executor(cup_2133, coffe_maker_130)close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2133)putin_executor(milk_2115, cup_2133)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_sugar_2111, fridge_126)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2133)putin_executor(food_sugar_2111, cup_2133)
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot find: Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. 
##############################
From agent.py
switchoff_executor(coffe_maker_130)
Robot find: Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. coffe_maker_130 is turned off. 
##############################
From agent.py
open_executor(coffe_maker_130)
Robot find: Robot is close to the coffee_filter_2065. Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. coffe_maker_130 is opened. 
##############################
From agent.py
walk_executor(cup_2133)
Robot find: Robot is close to the table_114. Robot is close to the cup_2133. 
##############################
From agent.py
grab_executor(cup_2133)
Robot find: Robot is close to the table_114. Robot is close to the cup_2133. Grabbing cup_2133 by right hand. 
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot find: Robot is close to the cup_2133. Robot is close to the coffee_filter_2065. Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. 
##############################
From agent.py
putin_executor(cup_2133, coffe_maker_130)
Robot find: Robot is close to the cup_2133. Robot is close to the coffee_filter_2065. Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. coffe_maker_130 is close cup_2133. cup_2133 is inside coffe_maker_130. cup_2133 is close coffe_maker_130. cup_2133 released by right hand. 
##############################
From agent.py
close_executor(coffe_maker_130)
Robot find: Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. coffe_maker_130 is closed. 
##############################
From agent.py
switchon_executor(coffe_maker_130)
Robot find: Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. coffe_maker_130 is turned on. 
##############################
From agent.py
walk_executor(milk_2115)
Robot find: Robot is close to the table_114. Robot is close to the milk_2115. 
##############################
From agent.py
grab_executor(milk_2115)
Robot find: Robot is close to the table_114. Robot is close to the milk_2115. Grabbing milk_2115 by right hand. 
##############################
From agent.py
walk_executor(cup_2133)
Robot find: Robot is close to the milk_2115. Robot is close to the coffe_maker_130. 
##############################
From agent.py
putin_executor(milk_2115, cup_2133)
Robot find: Robot is close to the milk_2115. Robot is close to the coffe_maker_130. milk_2115 released by right hand. 
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_sugar_2111, fridge_126)
Find food_sugar_2111. 
##############################
From agent.py-> find a plan in act()
walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2133)putin_executor(milk_2115, cup_2133)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2133)putin_executor(food_sugar_2111, cup_2133)
##############################
From agent.py
walk_executor(milk_2115)
Robot find: Robot is close to the milk_2115. 
##############################
From agent.py
grab_executor(milk_2115)
Robot find: Robot is close to the milk_2115. Grabbing milk_2115 by right hand. 
##############################
From agent.py
walk_executor(cup_2133)
Robot find: Robot is close to the milk_2115. Robot is close to the coffe_maker_130. 
##############################
From agent.py
putin_executor(milk_2115, cup_2133)
Robot find: Robot is close to the milk_2115. Robot is close to the coffe_maker_130. milk_2115 released by right hand. 
##############################
From agent.py
walk_executor(food_sugar_2111)
Robot find: Robot is close to the fridge_126. Robot is close to the food_sugar_2111. 
##############################
From agent.py
grab_executor(food_sugar_2111)
Robot find: Robot is close to the fridge_126. Robot is close to the food_sugar_2111. Grabbing food_sugar_2111 by right hand. 
##############################
From agent.py
walk_executor(cup_2133)
Robot find: Robot is close to the food_sugar_2111. Robot is close to the coffe_maker_130. 
##############################
From agent.py
putin_executor(food_sugar_2111, cup_2133)
Robot find: Robot is close to the food_sugar_2111. Robot is close to the coffe_maker_130. food_sugar_2111 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
make a cup of coffee using the coffee maker, then add milk and sugar.
Action History:
['walk_executor(coffe_maker_130)', 'switchon_executor(coffe_maker_130)', 'switchoff_executor(coffe_maker_130)', 'open_executor(coffe_maker_130)', 'close_executor(coffe_maker_130)', 'switchon_executor(coffe_maker_130)', 'walk_executor(kitchen_counter_123)', 'walk_executor(kitchen_counter_119)', 'walk_executor(cupboard_117)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'walk_executor(oven_127)', 'open_executor(oven_127)', 'walk_executor(table_114)', 'walk_executor(coffe_maker_130)', 'switchoff_executor(coffe_maker_130)', 'open_executor(coffe_maker_130)', 'walk_executor(cup_2133)', 'grab_executor(cup_2133)', 'walk_executor(coffe_maker_130)', 'putin_executor(cup_2133, coffe_maker_130)', 'close_executor(coffe_maker_130)', 'switchon_executor(coffe_maker_130)', 'walk_executor(milk_2115)', 'grab_executor(milk_2115)', 'walk_executor(cup_2133)', 'putin_executor(milk_2115, cup_2133)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'walk_executor(milk_2115)', 'grab_executor(milk_2115)', 'walk_executor(cup_2133)', 'putin_executor(milk_2115, cup_2133)', 'walk_executor(food_sugar_2111)', 'grab_executor(food_sugar_2111)', 'walk_executor(cup_2133)', 'putin_executor(food_sugar_2111, cup_2133)']
Time info:
Time consume: 230 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 3
goal correct times: 0
action_num: 38

Task complete rate:
Keystate: k1 - Requires: 8 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
