Goal Representation,Debug Result,Action,Add Info,LLM Answer,Plan
Turn on the lights in the bedroom. Then turn on the lights in the bathroom.,,,,,
"['1. Turn on the lights in the bedroom.', '2. Turn on the lights in the bathroom.']",,,,,
"behavior turn_on_light(light:item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light)
        turn_on_light(bedroom_light)",,,,,['']
"['1. Turn on the lights in the bedroom.', '2. Turn on the lights in the bathroom.']",,,,,
"behavior turn_on_light(light:item):
    body:
        achieve is_on(light)

behavior find_and_turn_on_bedroom_light():
    body:
        foreach light: item:
            if is_light(light) and is_bedroom(bedroom) and inside(light, bedroom) and not visited(li
ght):
                observe(light, ""Check if its the bedroom light"")
                turn_on_light(light)

behavior __goal__():
    body:
        find_and_turn_on_bedroom_light()","Error trying to process rule ""behavior_definition"":

Unknown variable: bedroom; available variables: [Variable<light: item>].",,,,
"behavior turn_on_light(light:item):
    body:
        achieve is_on(light)

behavior find_and_turn_on_bedroom_light(bedroom: item):
    body:
        foreach light: item:
            if is_light(light) and is_bedroom(bedroom) and inside(light, bedroom) and not visited(li
ght):
                observe(light, ""Check if its the bedroom light"")
                turn_on_light(light)

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        find_and_turn_on_bedroom_light(bedroom)",,,,,"['walk_executor(light_169); obs(light_169, Check if its the bedroom light)']"
"['1. Find the lights in the bedroom and turn them on.', '2. Find the lights in the bathroom and turn
 them on.']",,,,,
"behavior search_and_turn_on_bedroom_lights(light:item, room:item):
    body:
        if not visited(light) and inside(light, room) and is_bedroom(room):
            observe(light, ""Check the state of the light"")
        if is_off(light):
            achieve is_on(light)

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        foreach light: item:
            if is_light(light):
                search_and_turn_on_bedroom_lights(light, bedroom)",,,,,"['walk_executor(light_169); obs(light_169, Check the state of the light)']"
"['1. Turn on the lights in the bedroom.', '2. Turn on the lights in the bathroom.']",,,,,
