Goal Representation,Debug Result,Action,Add Info,LLM Answer,Plan
wash the bowls and the plates with dishwasher,,,,,
"['1. Find the bowls and plates that need to be washed.', '2. Wash the bowls and plates using the dis
hwasher.']",,,,,
"
def has_dirty_bowls_or_plates(item:item):
    symbol has_dirty_bowls_or_plates=exists o: item : (is_bowl(o) or is_plate(o)) and dirty(o) and c
lose(o, item)
    return has_dirty_bowls_or_plates

behavior __goal__():
    body:
        if exists item: item : has_dirty_bowls_or_plates(item):
            bind item: item where:
                has_dirty_bowls_or_plates(item)
            achieve close_char(char, item)
        else:
            foreach item: item:
                if not visited(item):
                    observe(item, ""Check is there any dirty bowls or plates close by"")
",,,,,[]
"['1. Find the bowls and plates that need washing.', '2. Use the dishwasher to wash the bowls and pla
tes.']",,,,,
" 
def is_bowl_or_plate(item: item):
    symbol is_bowl_or_plate = is_bowl(item) or is_plate(item)
    return is_bowl_or_plate

def should_be_washed(item: item):
    symbol needs_washing = dirty(item)
    return needs_washing

behavior __goal__():
    body:
        foreach item: item:
            if is_bowl_or_plate(item) and not visited(item):
                observe(item, ""Check if the bowl or plate is dirty and needs washing"")

",,,,,"['walk_executor(sink_42); exp(bowl_2071, sink_42); walk_executor(bowl_2071); obs(bowl_2071, Check if
 the bowl or plate is dirty and needs washing); walk_executor(sink_42); exp(bowl_2072, sink_42); wal
k_executor(bowl_2072); obs(bowl_2072, Check if the bowl or plate is dirty and needs washing); walk_e
xecutor(sink_42); exp(plate_1000, sink_42); walk_executor(plate_1000); obs(plate_1000, Check if the 
bowl or plate is dirty and needs washing)']"
,,,,,"(CrowControllerApplier<walk_executor(sink_42)>, CrowControllerApplier<exp(bowl_2071, sink_42)>, Crow
ControllerApplier<walk_executor(bowl_2071)>, CrowControllerApplier<obs(bowl_2071, Check if the bowl 
or plate is dirty and needs washing)>, CrowControllerApplier<walk_executor(sink_42)>, CrowController
Applier<exp(bowl_2072, sink_42)>, CrowControllerApplier<walk_executor(bowl_2072)>, CrowControllerApp
lier<obs(bowl_2072, Check if the bowl or plate is dirty and needs washing)>, CrowControllerApplier<w
alk_executor(sink_42)>, CrowControllerApplier<exp(plate_1000, sink_42)>, CrowControllerApplier<walk_
executor(plate_1000)>, CrowControllerApplier<obs(plate_1000, Check if the bowl or plate is dirty and
 needs washing)>)"
,,walk_executor(sink_42),"Find soap_2053. Find towel_rack_31. Find basket_for_clothes_2006. Find towel_rack_34. Find towel_rac
k_32. Robot is inside bathroom_1. Robot is close bathroom_counter_41. Robot is close sink_42. ",,
