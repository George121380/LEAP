Goal Representation,Debug Result,Action,Add Info,LLM Answer,Plan
"Find the basket of clothes, wash them in the washing machine.",,,,,
"['1. Find the basket containing clothes.', '2. Wash the clothes in the washing machine.']",,,,,
" 
behavior __goal__():
    body:
        foreach basket: item:
            if is_basket_for_clothes(basket) and not visited(basket):
                observe(basket, ""Check if the basket contains any clothes"")
",,,,,"['walk_executor(basket_for_clothes_2006); obs(basket_for_clothes_2006, Check if the basket contains 
any clothes)']"
"['1. Find the basket with clothes.', '2. Wash the clothes in the washing machine.']",,,,,
"def in_basket_for_clothes(basket:item):
    symbol in_basket=exists o: item: is_clothes(o) and inside(o, basket)
    return in_basket

behavior __goal__():
    body:
        if exists basket: item : is_basket_for_clothes(basket) and in_basket_for_clothes(basket):
            bind basket: item where:
                is_basket_for_clothes(basket) and in_basket_for_clothes(basket)
            achieve close_char(char, basket)
        else:
            foreach basket: item:
                if is_basket_for_clothes(basket) and not visited(basket):
                    observe(basket,""Check is there any clothes in the basket"")",,,,,"['walk_executor(washing_machine_2007); exp(basket_for_clothes_2006, washing_machine_2007); walk_exec
utor(basket_for_clothes_2006); obs(basket_for_clothes_2006, Check is there any clothes in the basket
)']"
,,,,,"(CrowControllerApplier<walk_executor(washing_machine_2007)>, CrowControllerApplier<exp(basket_for_cl
othes_2006, washing_machine_2007)>, CrowControllerApplier<walk_executor(basket_for_clothes_2006)>, C
rowControllerApplier<obs(basket_for_clothes_2006, Check is there any clothes in the basket)>)"
,,walk_executor(washing_machine_2007),Robot is inside bathroom_1. Robot is close washing_machine_2007. ,,
