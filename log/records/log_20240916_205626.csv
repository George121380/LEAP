Goal Representation,Debug Result,Action,Add Info,LLM Answer,Plan
Scramble eggs and make toast.,,,,,
"['1. Prepare the ingredients and tools for scrambled eggs and toast.', '2. Cook the scrambled eggs.'
, '3. Toast the bread.', '4. Serve the scrambled eggs and toast.']",,,,,
"
behavior gather_items_for_cooking(ingredient:item, location:item):
    body:
        achieve inside(ingredient, location)

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select an egg

        bind bread: item where:
            is_food_bread(bread)
        # Select bread

        bind butter: item where:
            is_food(butter) and id[butter] == 1
        # Select butter

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind salt: item where:
            is_food_salt(salt)
        # Select salt

        bind pepper: item where:
            is_food_pepper(pepper)
        # Select pepper

        bind stove: item where:
            is_stove(stove)
        # Select stove

        bind pan: item where:
            is_pot(pan)
        # Select a pan

        gather_items_for_cooking(egg, stove)
        gather_items_for_cooking(bread, stove)
        gather_items_for_cooking(butter, stove)
        gather_items_for_cooking(milk, stove)
        gather_items_for_cooking(salt, stove)
        gather_items_for_cooking(pepper, stove)
        gather_items_for_cooking(pan, stove)
","Error trying to process rule ""behavior_definition"":

'Function is_food_pepper not found. Note that recursive function calls are not supported in the curr
ent version.'",,,,
"## Formal Representation:

behavior gather_items_for_cooking(ingredient:item, location:item):
    body:
        achieve inside(ingredient, location)

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select an egg

        bind bread: item where:
            is_food_bread(bread)
        # Select bread

        bind butter: item where:
            is_food(butter) and id[butter] == 1
        # Select butter

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind salt: item where:
            is_food_salt(salt)
        # Select salt

        bind pepper: item where:
            is_food_food(pepper)
        # Select pepper

        bind stove: item where:
            is_stove(stove)
        # Select stove

        bind pan: item where:
            is_pot(pan)
        # Select a pan

        gather_items_for_cooking(egg, stove)
        gather_items_for_cooking(bread, stove)
        gather_items_for_cooking(butter, stove)
        gather_items_for_cooking(milk, stove)
        gather_items_for_cooking(salt, stove)
        gather_items_for_cooking(pepper, stove)
        gather_items_for_cooking(pan, stove)",,,,,[]
"['1. Scramble the eggs.', '2. Make the toast.']",,,,,
"
def is_pot_on_stove(pot:item):
    # Function to check if a pot is on the stove
    symbol on_stove=exists stove: item : is_stove(stove) and on(pot, stove)
    return on_stove

behavior observe_ingredients():
    body:
        foreach o: item:
            if is_food_egg(o) and not visited(o):
                observe(o, ""Check if these are the eggs for scrambling"")

behavior prepare_eggs_for_scrambling(pot:item):
    body:
        bind stove: item where:
            is_stove(stove)
        if not is_on(stove):
            achieve is_on(stove)
        achieve on(pot, stove)
        achieve facing_char(char, pot)
        observe_ingredients()

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        if not is_pot_on_stove(pot):
            achieve close_char(char, pot)
            prepare_eggs_for_scrambling(pot)
        achieve close_char(char, pot)
",,,,,[]
"['1. Prepare the eggs and bread.', '2. Cook the scrambled eggs and toast the bread.']",,,,,
" 
behavior __goal__():
    body:
        # Select an egg and bread
        bind egg: item where:
            is_food_egg(egg)
        bind bread: item where:
            is_food_bread(bread)
        # Ensure they are clean If needed, wash them
        if dirty(egg):
            bind sink: item where:
                is_sink(sink)
            achieve_once inside(egg, sink)
            wash(egg)
            achieve clean(egg)
        
        if dirty(bread):
            bind sink: item where:
                is_sink(sink)
            achieve_once inside(bread, sink)
            wash(bread)
            achieve clean(bread)
",,,,,['']
"['1. Scramble the eggs.', '2. Make the toast.']",,,,,
"behavior crack_eggs():
    body:
        bind bowl: item where:
            is_container(bowl) and inside_char(char, bowl)
        bind egg: item where:
            is_food_egg(egg) and inside_char(char, egg)
        achieve_once inhand(egg)
        achieve inside(egg, bowl)
        achieve cut(egg)

behavior beat_eggs():
    body:
        bind fork: item where:
            is_utensil(fork) and inside_char(char, fork)
        bind bowl: item where:
            is_container(bowl) and inside_char(char, bowl)
        achieve_once inhand(fork)
        achieve cut(bowl)

behavior heat_pan():
    body:
        bind stove: item where:
            is_stove(stove) and close_char(char, stove)
        bind pan: item where:
            is_pan(pan) and on(pan, stove)
        achieve plugged(stove)
        achieve is_on(stove)
        achieve on(pan, stove)

behavior cook_eggs():
    body:
        bind stove: item where:
            is_stove(stove) and close_char(char, stove)
        bind pan: item where:
            is_pan(pan) and on(pan, stove)
        bind bowl: item where:
            is_container(bowl)
        bind eggs: item where:
            is_food_egg(eggs) and inside(bowl, eggs)
        achieve inside(eggs, pan)
        observe(pan, ""Are the eggs cooked"")
        foreach eggs: item where:
            is_food_egg(eggs) and on(pan, eggs):
            observe(eggs, ""Check if eggs are cooked"")

behavior turn_off_stove():
    body:
        bind stove: item where:
            is_stove(stove) and close_char(char, stove)
        achieve is_off(stove)
        achieve unplugged(stove)

behavior serve_eggs():
    body:
        bind plate: item where:
            is_plate(plate) and close_char(char, plate)
        bind pan: item where:
            is_pan(pan) and on(pan, stove)
        foreach eggs: item where:
            is_food_egg(eggs) and on(pan, eggs):
            achieve on(eggs, plate)

behavior __goal__():
    body:
        crack_eggs()
        beat_eggs()
        heat_pan()
        cook_eggs()
        turn_off_stove()
        serve_eggs()","Unexpected token Token('WHERE', 'where') at line 5827, column 28.
Expected one of: 
	* COLON
",,,,
"behavior crack_eggs():
    body:
        bind bowl: item where:
            is_container(bowl) and inside_char(char, bowl)
        bind egg: item where:
            is_food_egg(egg) and inside_char(char, egg)
        achieve_once inhand(egg)
        achieve inside(egg, bowl)
        achieve cut(egg)

behavior beat_eggs():
    body:
        bind fork: item where:
            is_utensil(fork) and inside_char(char, fork)
        bind bowl: item where:
            is_container(bowl) and inside_char(char, bowl)
        achieve_once inhand(fork)
        achieve cut(bowl)

behavior heat_pan():
    body:
        bind stove: item where:
            is_stove(stove) and close_char(char, stove)
        bind pan: item where:
            is_pan(pan) and on(pan, stove)
        achieve plugged(stove)
        achieve is_on(stove)
        achieve on(pan, stove)

behavior cook_eggs():
    body:
        bind stove: item where:
            is_stove(stove) and close_char(char, stove)
        bind pan: item where:
            is_pan(pan) and on(pan, stove)
        bind bowl: item where:
            is_container(bowl)
        bind eggs: item where:
            is_food_egg(eggs) and inside(bowl, eggs)
        achieve inside(eggs, pan)
        observe(pan, ""Are the eggs cooked"")
        foreach eggs: item:
            if is_food_egg(eggs) and on(pan, eggs):
                observe(eggs, ""Check if eggs are cooked"")

behavior turn_off_stove():
    body:
        bind stove: item where:
            is_stove(stove) and close_char(char, stove)
        achieve is_off(stove)
        achieve unplugged(stove)

behavior serve_eggs():
    body:
        bind plate: item where:
            is_plate(plate) and close_char(char, plate)
        bind pan: item where:
            is_pan(pan) and on(pan, stove)
        foreach eggs: item:
            if is_food_egg(eggs) and on(pan, eggs):
                achieve on(eggs, plate)

behavior __goal__():
    body:
        crack_eggs()
        beat_eggs()
        heat_pan()
        cook_eggs()
        turn_off_stove()
        serve_eggs()
","Error trying to process rule ""behavior_definition"":

'Function is_container not found. Note that recursive function calls are not supported in the curren
t version.'",,,,
"## Formal Representation:
behavior crack_eggs():
    body:
        bind bowl: item where:
            is_cupboard(bowl) and inside_char(char, bowl)
        bind egg: item where:
            is_food_egg(egg) and inside_char(char, egg)
        achieve_once inhand(egg)
        achieve inside(egg, bowl)
        achieve cut(egg)

behavior beat_eggs():
    body:
        bind fork: item where:
            is_utensil(fork) and inside_char(char, fork)
        bind bowl: item where:
            is_cupboard(bowl) and inside_char(char, bowl)
        achieve_once inhand(fork)
        achieve cut(bowl)

behavior heat_pan():
    body:
        bind stove: item where:
            is_stove(stove) and close_char(char, stove)
        bind pan: item where:
            is_pot(pan) and on(pan, stove)
        achieve plugged(stove)
        achieve is_on(stove)
        achieve on(pan, stove)

behavior cook_eggs():
    body:
        bind stove: item where:
            is_stove(stove) and close_char(char, stove)
        bind pan: item where:
            is_pot(pan) and on(pan, stove)
        bind bowl: item where:
            is_cupboard(bowl)
        bind eggs: item where:
            is_food_egg(eggs) and inside(bowl, eggs)
        achieve inside(eggs, pan)
        observe(pan, ""Are the eggs cooked"")
        foreach eggs: item:
            if is_food_egg(eggs) and on(pan, eggs):
                observe(eggs, ""Check if eggs are cooked"")

behavior turn_off_stove():
    body:
        bind stove: item where:
            is_stove(stove) and close_char(char, stove)
        achieve is_off(stove)
        achieve unplugged(stove)

behavior serve_eggs():
    body:
        bind plate: item where:
            is_plate(plate) and close_char(char, plate)
        bind pan: item where:
            is_pot(pan) and on(pan, stove)
        foreach eggs: item:
            if is_food_egg(eggs) and on(pan, eggs):
                achieve on(eggs, plate)

behavior __goal__():
    body:
        crack_eggs()
        beat_eggs()
        heat_pan()
        cook_eggs()
        turn_off_stove()
        serve_eggs()","Error trying to process rule ""behavior_definition"":

'Function is_utensil not found. Note that recursive function calls are not supported in the current 
version.'",,,,
