Goal Representation,Debug Result,Action,Add Info,LLM Answer,Plan
"Find the basket of clothes in bathroom, wash them in the washing machine.",,,,,
"['1. Find the basket of clothes in the bathroom.', '2. Wash the clothes in the washing machine.']",,,,,
"def is_basket_in_bathroom(basket: item):
    # Function to check if a basket is in the bathroom
    symbol in_bathroom = exists room: item : is_bathroom(room) and inside(basket, room)
    return in_bathroom

behavior __goal__():
    body:
        if exists basket: item : is_basket_for_clothes(basket) and is_basket_in_bathroom(basket):
            # If we have already found the basket of clothes in the bathroom, we can directly approa
ch it
            bind basket: item where:
                is_basket_for_clothes(basket) and is_basket_in_bathroom(basket)
            achieve close_char(char, basket)
        else:
            # Check all baskets in the scene that have not been visited
            foreach basket: item:
                if is_basket_for_clothes(basket) and not visited(basket):
                    observe(basket, ""Check if the basket of clothes is in the bathroom"")",,,,,"['walk_executor(bathroom_counter_41); exp(basket_for_clothes_2006, bathroom_counter_41); walk_execut
or(basket_for_clothes_2006); obs(basket_for_clothes_2006, Check if the basket of clothes is in the b
athroom)']"
,,,,,"(CrowControllerApplier<walk_executor(bathroom_counter_41)>, CrowControllerApplier<exp(basket_for_clo
thes_2006, bathroom_counter_41)>, CrowControllerApplier<walk_executor(basket_for_clothes_2006)>, Cro
wControllerApplier<obs(basket_for_clothes_2006, Check if the basket of clothes is in the bathroom)>)"
,,walk_executor(bathroom_counter_41),"Find towel_rack_31. Find towel_rack_34. Find towel_rack_32. Robot is inside bathroom_1. Robot is clo
se bathroom_counter_41. ",,
,,"exp(basket_for_clothes_2006, bathroom_counter_41)",Failed to find basket_for_clothes_2006 around bathroom_counter_41. ,,
,,,,,"(CrowControllerApplier<walk_executor(bathroom_cabinet_40)>, CrowControllerApplier<exp(basket_for_clo
thes_2006, bathroom_cabinet_40)>, CrowControllerApplier<walk_executor(basket_for_clothes_2006)>, Cro
wControllerApplier<obs(basket_for_clothes_2006, Check if the basket of clothes is in the bathroom)>)"
,,walk_executor(bathroom_cabinet_40),"Robot is inside bathroom_1. Robot is close bathroom_cabinet_40. Robot is close wall_12. Robot is no 
longer close bathroom_counter_41.",,
,,"exp(basket_for_clothes_2006, bathroom_cabinet_40)",Failed to find basket_for_clothes_2006 around bathroom_cabinet_40. ,,
,,,,,"(CrowControllerApplier<walk_executor(bathtub_30)>, CrowControllerApplier<exp(basket_for_clothes_2006
, bathtub_30)>, CrowControllerApplier<walk_executor(basket_for_clothes_2006)>, CrowControllerApplier
<obs(basket_for_clothes_2006, Check if the basket of clothes is in the bathroom)>)"
,,walk_executor(bathtub_30),"Find basket_for_clothes_2006. Find towel_rack_33. Robot is inside bathroom_1. Robot is close floor_5
. Robot is close bathtub_30. Robot is no longer close bathroom_cabinet_40.Robot is no longer close w
all_12.",,
,,"exp(basket_for_clothes_2006, bathtub_30)",Find basket_for_clothes_2006. ,,
,,walk_executor(basket_for_clothes_2006),"Robot is inside bathroom_1. Robot is close basket_for_clothes_2006. Robot is no longer close floor_5
.Robot is no longer close bathtub_30.",,
,,,,The basket of clothes is in the bathroom.,
,,"obs(basket_for_clothes_2006, Check if the basket of clothes is in the bathroom)","Get this information: The basket of clothes is in the bathroom.
",,
,,,,"- Sub-Task Completed: Yes
- Next Steps: You found the basket of clothes in the bathroom near the bathtub_30. Now proceed to wa
sh the clothes in the washing machine.",
"behavior load_washing_machine(clothes:item, washing_machine:item):
    body:
        achieve inside(clothes, washing_machine)
        # Place the clothes inside the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)
        # Close the washing machine door
        achieve is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind basket_for_clothes: item where:
            is_basket_for_clothes(basket_for_clothes) and id[basket_for_clothes]==2006
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket_for_clothes):
                load_washing_machine(clothes, washing_machine)
        start_washing_machine(washing_machine)",,,,,"['walk_executor(washing_machine_2007); plugin_executor(washing_machine_2007); switchon_executor(wash
ing_machine_2007)']"
,,,,,"(CrowControllerApplier<walk_executor(washing_machine_2007)>, CrowControllerApplier<plugin_executor(w
ashing_machine_2007)>, CrowControllerApplier<switchon_executor(washing_machine_2007)>)"
,,walk_executor(washing_machine_2007),"Robot is inside bathroom_1. Robot is close washing_machine_2007. Robot is no longer close basket_for
_clothes_2006.",,
,,plugin_executor(washing_machine_2007),Robot is inside bathroom_1. Robot is close washing_machine_2007. ,,
,,switchon_executor(washing_machine_2007),Robot is inside bathroom_1. Robot is close washing_machine_2007. ,,
,,,,"- Sub-Task Completed: No
- Next Steps: You still need to load the clothes into the washing machine, close the washing machine
 door, and then start the washing machine.",
,,,"Human Instruction: You still need to load the clothes into the washing machine, close the washing ma
chine door, and then start the washing machine.

The actions you have taken:
Action 1: Walk to bathroom_counter_41. -> effect: Find towel_rack_31. Find towel_rack_34. Find towel
_rack_32. Robot is inside bathroom_1. Robot is close bathroom_counter_41. 
Action 2: look for basket_for_clothes_2006 around bathroom_counter_41. -> effect: Failed to find bas
ket_for_clothes_2006 around bathroom_counter_41. 
Action 3: Walk to bathroom_cabinet_40. -> effect: Robot is inside bathroom_1. Robot is close bathroo
m_cabinet_40. Robot is close wall_12. Robot is no longer close bathroom_counter_41.
Action 4: look for basket_for_clothes_2006 around bathroom_cabinet_40. -> effect: Failed to find bas
ket_for_clothes_2006 around bathroom_cabinet_40. 
Action 5: Walk to bathtub_30. -> effect: Find basket_for_clothes_2006. Find towel_rack_33. Robot is 
inside bathroom_1. Robot is close floor_5. Robot is close bathtub_30. Robot is no longer close bathr
oom_cabinet_40.Robot is no longer close wall_12.
Action 6: look for basket_for_clothes_2006 around bathtub_30. -> effect: Find basket_for_clothes_200
6. 
Action 7: Walk to basket_for_clothes_2006. -> effect: Robot is inside bathroom_1. Robot is close bas
ket_for_clothes_2006. Robot is no longer close floor_5.Robot is no longer close bathtub_30.
Action 8: Observe around basket_for_clothes_2006 with the question of Check if the basket of clothes
 is in the bathroom. -> effect: Get this information: The basket of clothes is in the bathroom.

Action 9: Walk to washing_machine_2007. -> effect: Robot is inside bathroom_1. Robot is close washin
g_machine_2007. Robot is no longer close basket_for_clothes_2006.
Action 10: Plug in washing_machine_2007. -> effect: Robot is inside bathroom_1. Robot is close washi
ng_machine_2007. 
Action 11: Switch on washing_machine_2007. -> effect: Robot is inside bathroom_1. Robot is close was
hing_machine_2007. 
",,
"behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket]==2006
        # Select the basket of clothes
        
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2007
        # Select the washing machine

        foreach c: item:
        # Load all clothes from the basket into the washing machine
            if is_clothes(c) and inside(c, basket):
                achieve inside(c, washing_machine)
        
        if can_open(washing_machine):
            achieve open(washing_machine)
        
        if has_switch(washing_machine):
            achieve plugged(washing_machine)
            achieve is_on(washing_machine)

        achieve closed(washing_machine) # Close the washing machine door",,,,,[]
"behavior load_clothes(washing_machine:item, basket:item):
    body:
        foreach c: item:
            if is_clothes(c) and inside(c, basket):
                achieve inside(c, washing_machine)

behavior close_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)

behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket)
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        load_clothes(washing_machine, basket)
        close_washing_machine(washing_machine)
        start_washing_machine(washing_machine)",,,,,"['walk_executor(washing_machine_2007); plugin_executor(washing_machine_2007); switchon_executor(wash
ing_machine_2007)']"
" 
behavior load_clothes_into_washing_machine(clothes: item, washing_machine: item):
    body:
        achieve inside(clothes, washing_machine)

behavior close_washing_machine_door(washing_machine: item):
    body:
        achieve closed(washing_machine)

behavior start_washing_machine(washing_machine: item):
    body:
        achieve plugged(washing_machine)
        achieve is_on(washing_machine)
        
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket_for_clothes_2006):
                load_clothes_into_washing_machine(clothes, washing_machine)
        close_washing_machine_door(washing_machine)
        start_washing_machine(washing_machine)
","Error trying to process rule ""behavior_definition"":

Unknown variable: basket_for_clothes_2006; available variables: [Variable<clothes: item>].",,,,
"behavior load_clothes_into_washing_machine(clothes: item, washing_machine: item):
    body:
        achieve inside(clothes, washing_machine)

behavior close_washing_machine_door(washing_machine: item):
    body:
        achieve closed(washing_machine)

behavior start_washing_machine(washing_machine: item):
    body:
        achieve plugged(washing_machine)
        achieve is_on(washing_machine)
        
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        bind basket_for_clothes_2006: item where:
            is_basket_for_clothes(basket_for_clothes_2006)
        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket_for_clothes_2006):
                load_clothes_into_washing_machine(clothes, washing_machine)
        close_washing_machine_door(washing_machine)
        start_washing_machine(washing_machine)",,,,,"['walk_executor(washing_machine_2007); plugin_executor(washing_machine_2007); switchon_executor(wash
ing_machine_2007)']"
"behavior load_clothes(clothes:item, washing_machine:item):
    body:
        achieve inside(clothes, washing_machine)

behavior close_washing_machine_door(washing_machine:item):
    body:
        achieve closed(washing_machine)

behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind clothes: item where:
            is_clothes(clothes) and inside(clothes, basket_for_clothes_2006)
        # Select clothes in the basket
        
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2007
        # Select the washing machine

        load_clothes(clothes, washing_machine)
        close_washing_machine_door(washing_machine)
        start_washing_machine(washing_machine)","Error trying to process rule ""behavior_definition"":

Unknown variable: basket_for_clothes_2006; available variables: [Variable<clothes: item>].",,,,
"behavior load_clothes(clothes: item, washing_machine: item):
    body:
        achieve inside(clothes, washing_machine)

behavior close_washing_machine_door(washing_machine: item):
    body:
        achieve closed(washing_machine)

behavior start_washing_machine(washing_machine: item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2006
        
        bind clothes: item where:
            is_clothes(clothes) and inside(clothes, basket)
        # Select clothes in the basket
        
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2007
        # Select the washing machine

        load_clothes(clothes, washing_machine)
        close_washing_machine_door(washing_machine)
        start_washing_machine(washing_machine)",,,,,[]
,,,,"To wash the clothes in the washing machine, start by making sure the washing machine is turned off. 
Next, open the washing machine and place the clothes you want to wash inside. After you’ve loaded th
e clothes, close the washing machine door securely. Now, turn on the washing machine, and select the
 appropriate settings for your load. Once the washing cycle is complete, turn off the washing machin
e. Then, open the washing machine door, take out the washed clothes, and finally, close the washing 
machine door.",
"## Output:
behavior load_clothes_into_washing_machine(clothes:item, washing_machine:item):
    body:
        achieve inside(clothes, washing_machine)
        # Place the clothes inside the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)
        # Close the washing machine door
        achieve is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        
        bind basket: item where:
            is_basket_for_clothes(basket) and visited(basket)
        # Select the clothes basket found earlier
        
        foreach clothes: item:
        # Load all clothes from the basket into the washing machine
            if is_clothes(clothes) and inside(clothes, basket):
                load_clothes_into_washing_machine(clothes, washing_machine)
        
        start_washing_machine(washing_machine)
        # Start the washing machine",,,,,[]
"behavior load_clothes_into_washing_machine(washing_machine:item, clothes_basket:item):
    body:
        foreach c: item:
            if is_clothes(c) and inside(c, clothes_basket):
                achieve inside(c, washing_machine)

behavior start_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        bind clothes_basket: item where:
            is_basket_for_clothes(clothes_basket) and inside(clothes_basket, bathroom_1)
        load_clothes_into_washing_machine(washing_machine, clothes_basket)
        start_washing_machine(washing_machine)","Error trying to process rule ""behavior_definition"":

Unknown variable: bathroom_1; available variables: [Variable<clothes_basket: item>].",,,,
"behavior load_clothes_into_washing_machine(washing_machine:item, clothes_basket:item):
    body:
        foreach c: item:
            if is_clothes(c) and inside(c, clothes_basket):
                achieve inside(c, washing_machine)

behavior start_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind bathroom_1: item where:
            is_bathroom(bathroom_1)
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        bind clothes_basket: item where:
            is_basket_for_clothes(clothes_basket) and inside(clothes_basket, bathroom_1)
        load_clothes_into_washing_machine(washing_machine, clothes_basket)
        start_washing_machine(washing_machine)",,,,,[]
"behavior open_washing_machine(door: item):
    body:
        if can_open(door):
            achieve open(door)

behavior load_clothes_into_machine(clothes: item, washer: item):
    body:
        achieve inside(clothes, washer)

behavior close_washing_machine(door: item):
    body:
        achieve closed(door)

behavior start_washing_machine(washer: item):
    body:
        achieve is_on(washer)

behavior __goal__():
    body:
        bind washer: item where:
            is_washing_machine(washer)
        
        bind door: item where:
            can_open(door) and close(door, washer)
        
        foreach clothes: item:
            if is_clothes(clothes) and dirty(clothes):
                if not exists item: item: inside(item, washer) and is_clothes(item):
                    open_washing_machine(door)
                load_clothes_into_machine(clothes, washer)
        close_washing_machine(door)
        start_washing_machine(washer)","Unexpected token Token('VARNAME', 'item') at line 5783, column 31.
Expected one of: 
	* COLON
",,,,
"behavior open_washing_machine(door: item):
    body:
        if can_open(door):
            achieve open(door)

behavior load_clothes_into_machine(clothes: item, washer: item):
    body:
        achieve inside(clothes, washer)

behavior close_washing_machine(door: item):
    body:
        achieve closed(door)

behavior start_washing_machine(washer: item):
    body:
        achieve is_on(washer)

behavior __goal__():
    body:
        bind washer: item where:
            is_washing_machine(washer)
        
        bind door: item where:
            can_open(door) and close(door, washer)
        
        foreach clothes: item:
            if is_clothes(clothes) and dirty(clothes):
                if not exists item2: item : inside(item2, washer) and is_clothes(item2):
                    open_washing_machine(door)
                load_clothes_into_machine(clothes, washer)
        close_washing_machine(door)
        start_washing_machine(washer)
","Unexpected token Token('VARNAME', 'item2') at line 5798, column 31.
Expected one of: 
	* COLON
",,,,
"behavior open_washing_machine(door: item):
    body:
        if can_open(door):
            achieve open(door)

behavior load_clothes_into_machine(clothes: item, washer: item):
    body:
        achieve inside(clothes, washer)

behavior close_washing_machine(door: item):
    body:
        achieve closed(door)

behavior start_washing_machine(washer: item):
    body:
        achieve is_on(washer)

behavior __goal__():
    body:
        bind washer: item where:
            is_washing_machine(washer)

        bind door: item where:
            can_open(door) and close(door, washer)

        foreach clothes: item:
            if is_clothes(clothes) and dirty(clothes):
                if not exists item2: item : inside(item2, washer) and is_clothes(item2):
                    open_washing_machine(door)
                load_clothes_into_machine(clothes, washer)
        close_washing_machine(door)
        start_washing_machine(washer)
","Unexpected token Token('VARNAME', 'item2') at line 5783, column 31.
Expected one of: 
	* COLON
",,,,
"behavior open_washing_machine(door: item):
    body:
        if can_open(door):
            achieve open(door)

behavior load_clothes_into_machine(clothes: item, washer: item):
    body:
        achieve inside(clothes, washer)

behavior close_washing_machine(door: item):
    body:
        achieve closed(door)

behavior start_washing_machine(washer: item):
    body:
        achieve is_on(washer)

behavior __goal__():
    body:
        bind washer: item where:
            is_washing_machine(washer)

        bind door: item where:
            can_open(door) and close(door, washer)

        foreach clothes: item:
            if is_clothes(clothes) and dirty(clothes) and not exists item2: item: inside(item2, wash
er) and is_clothes(item2):
                open_washing_machine(door)
                load_clothes_into_machine(clothes, washer)
        close_washing_machine(door)
        start_washing_machine(washer)","Unexpected token Token('VARNAME', 'item2') at line 5782, column 70.
Expected one of: 
	* COLON
",,,,
"goal
behavior open_washing_machine(door: item):
    body:
        if can_open(door):
            achieve open(door)

behavior load_clothes_into_machine(clothes: item, washer: item):
    body:
        achieve inside(clothes, washer)

behavior close_washing_machine(door: item):
    body:
        achieve closed(door)

behavior start_washing_machine(washer: item):
    body:
        achieve is_on(washer)

behavior __goal__():
    body:
        bind washer: item where:
            is_washing_machine(washer)

        bind door: item where:
            can_open(door) and close(door, washer)

        foreach clothes: item:
            if is_clothes(clothes) and dirty(clothes) and not exists item2: item: inside(item2, wash
er) and is_clothes(item2):
                open_washing_machine(door)
                load_clothes_into_machine(clothes, washer)
        close_washing_machine(door)
        start_washing_machine(washer)
","Unexpected token Token('_NEWLINE', '\n') at line 5756, column 5.
Expected one of: 
	* COLON
",,,,
"behavior load_clothes_into_washing_machine(clothes:item, machine:item):
    body:
        achieve inside(clothes, machine)

behavior close_washing_machine_door(machine:item):
    body:
        achieve closed(machine)

behavior start_washing_machine(machine:item):
    body:
        achieve is_on(machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        foreach clothes: item:
            if is_clothes(clothes) and dirty(clothes) and inside(clothes, basket_for_clothes_2006):
                load_clothes_into_washing_machine(clothes, washing_machine)
        close_washing_machine_door(washing_machine)
        start_washing_machine(washing_machine)","Error trying to process rule ""behavior_definition"":

Unknown variable: basket_for_clothes_2006; available variables: [Variable<clothes: item>].",,,,
"behavior load_clothes_into_washing_machine(clothes:item, machine:item):
    body:
        achieve inside(clothes, machine)

behavior close_washing_machine_door(machine:item):
    body:
        achieve closed(machine)

behavior start_washing_machine(machine:item):
    body:
        achieve is_on(machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        bind basket_for_clothes_2006: item where:
            is_basket_for_clothes(basket_for_clothes_2006)
        foreach clothes: item:
            if is_clothes(clothes) and dirty(clothes) and inside(clothes, basket_for_clothes_2006):
                load_clothes_into_washing_machine(clothes, washing_machine)
        close_washing_machine_door(washing_machine)
        start_washing_machine(washing_machine)",,,,,"['walk_executor(washing_machine_2007); plugin_executor(washing_machine_2007); switchon_executor(wash
ing_machine_2007)']"
"behavior load_clothes_into_washing_machine(clothes: item, washing_machine: item):
    body:
        achieve inside(clothes, washing_machine) # Place the clothes inside the washing machine

behavior close_washing_machine_door(washing_machine: item):
    body:
        achieve closed(washing_machine) # Close the washing machine door

behavior start_washing_machine(washing_machine: item):
    body:
        achieve is_on(washing_machine) # Turn on the washing machine

behavior take_out_clothes_from_washing_machine(clothes: item, washing_machine: item):
    body:
        achieve clean(clothes) # Ensure the clothes are clean
        achieve inside_char(char, bathroom_1) # Ensure that the robot remains inside the bathroom
        achieve outside(clothes, washing_machine) # Remove the clothes from the washing machine

behavior close_washing_machine_finalize(washing_machine: item):
    body:
        achieve closed(washing_machine) # Finalize by ensuring the washing machine door is closed

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket]==2006
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2007
        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket):
                load_clothes_into_washing_machine(clothes, washing_machine)
        close_washing_machine_door(washing_machine)
        start_washing_machine(washing_machine)
        foreach clean_clothes: item:
            if is_clothes(clean_clothes) and inside(clean_clothes, washing_machine):
                take_out_clothes_from_washing_machine(clean_clothes, washing_machine)
        close_washing_machine_finalize(washing_machine)","Error trying to process rule ""behavior_definition"":

Unknown variable: bathroom_1; available variables: [Variable<clothes: item>, Variable<washing_machin
e: item>].",,,,
"behavior load_clothes_into_washing_machine(clothes: item, washing_machine: item):
    body:
        achieve inside(clothes, washing_machine) # Place the clothes inside the washing machine

behavior close_washing_machine_door(washing_machine: item):
    body:
        achieve closed(washing_machine) # Close the washing machine door

behavior start_washing_machine(washing_machine: item):
    body:
        achieve is_on(washing_machine) # Turn on the washing machine

behavior take_out_clothes_from_washing_machine(clothes: item, washing_machine: item, bathroom: item)
:
    body:
        achieve clean(clothes) # Ensure the clothes are clean
        achieve inside_char(char, bathroom) # Ensure that the robot remains inside the bathroom
        achieve outside(clothes, washing_machine) # Remove the clothes from the washing machine

behavior close_washing_machine_finalize(washing_machine: item):
    body:
        achieve closed(washing_machine) # Finalize by ensuring the washing machine door is closed

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket]==2006
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2007
        bind bathroom: item where:
            is_bathroom(bathroom) and id[bathroom]==1
        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket):
                load_clothes_into_washing_machine(clothes, washing_machine)
        close_washing_machine_door(washing_machine)
        start_washing_machine(washing_machine)
        foreach clean_clothes: item:
            if is_clothes(clean_clothes) and inside(clean_clothes, washing_machine):
                take_out_clothes_from_washing_machine(clean_clothes, washing_machine, bathroom)
        close_washing_machine_finalize(washing_machine)","Error trying to process rule ""behavior_definition"":

'Function outside not found. Note that recursive function calls are not supported in the current ver
sion.'",,,,
" 
behavior load_clothes_into_washing_machine(clothes: item, washing_machine: item):
    body:
        achieve inside(clothes, washing_machine) # Place the clothes inside the washing machine

behavior close_washing_machine_door(washing_machine: item):
    body:
        achieve closed(washing_machine) # Close the washing machine door

behavior start_washing_machine(washing_machine: item):
    body:
        achieve is_on(washing_machine) # Turn on the washing machine

behavior take_out_clothes_from_washing_machine(clothes: item, washing_machine: item, bathroom: item)
:
    body:
        achieve clean(clothes) # Ensure the clothes are clean
        achieve inside_char(char, bathroom) # Ensure that the robot remains inside the bathroom
        achieve inside(bathroom, washing_machine) # Remove the clothes from the washing machine

behavior close_washing_machine_finalize(washing_machine: item):
    body:
        achieve closed(washing_machine) # Finalize by ensuring the washing machine door is closed

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket]==2006
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2007
        bind bathroom: item where:
            is_bathroom(bathroom) and id[bathroom]==1
        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket):
                load_clothes_into_washing_machine(clothes, washing_machine)
        close_washing_machine_door(washing_machine)
        start_washing_machine(washing_machine)
        foreach clean_clothes: item:
            if is_clothes(clean_clothes) and inside(clean_clothes, washing_machine):
                take_out_clothes_from_washing_machine(clean_clothes, washing_machine, bathroom)
        close_washing_machine_finalize(washing_machine)
",,,,,"['walk_executor(washing_machine_2007); plugin_executor(washing_machine_2007); switchon_executor(wash
ing_machine_2007)']"
7,walk_executor(bathroom_counter_41),,,,
7,walk_executor(bathroom_cabinet_40),,,,
7,walk_executor(bathtub_30),,,,
7,walk_executor(basket_for_clothes_2006),,,,
7,walk_executor(washing_machine_2007),,,,
7,plugin_executor(washing_machine_2007),,,,
7,switchon_executor(washing_machine_2007),,,,
