Goal Representation,Debug Result,Action,Add Info,LLM Answer,Plan
"['1. Prepare the necessary ingredients and equipment for scrambling eggs.', '2. Cook the eggs in the
 pan.']",,,,,
" 
behavior prepare_ingredient(egg:item, milk:item):
    body:
        bind egg: item where:
            is_food_egg(egg)
        bind milk: item where:
            is_milk(milk)
        achieve clean(egg)
        achieve clean(milk)

behavior prepare_equipment(skillet:item, spatula:item, bowl:item, whisk:item):
    body:
        bind skillet: item where:
            is_pan(skillet)
        bind spatula: item where:
            is_spatula(spatula)
        bind bowl: item where:
            is_bowl(bowl)
        bind whisk: item where:
            is_whisk(whisk)
        achieve clean(skillet)
        achieve clean(spatula)
        achieve clean(bowl)
        achieve clean(whisk)

behavior __goal__():
    body:
        prepare_ingredient(egg, milk)
        prepare_equipment(skillet, spatula, bowl, whisk)
","Error trying to process rule ""behavior_definition"":

Variable egg already exists.",,,,
" 
behavior prepare_ingredient(egg:item, milk:item):
    body:
        achieve is_food_egg(egg)
        achieve is_milk(milk)
        achieve clean(egg)
        achieve clean(milk)

behavior prepare_equipment(skillet:item, spatula:item, bowl:item, whisk:item):
    body:
        achieve is_pan(skillet)
        achieve is_spatula(spatula)
        achieve is_bowl(bowl)
        achieve is_whisk(whisk)
        achieve clean(skillet)
        achieve clean(spatula)
        achieve clean(bowl)
        achieve clean(whisk)

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        bind milk: item where:
            is_milk(milk)
        bind skillet: item where:
            is_pan(skillet)
        bind spatula: item where:
            is_spatula(spatula)
        bind bowl: item where:
            is_bowl(bowl)
        bind whisk: item where:
            is_whisk(whisk)
        prepare_ingredient(egg, milk)
        prepare_equipment(skillet, spatula, bowl, whisk)
","Error trying to process rule ""behavior_definition"":

'Function is_pan not found. Note that recursive function calls are not supported in the current vers
ion.'",,,,
"
behavior prepare_ingredient(egg:item, milk:item):
    body:
        achieve is_food_egg(egg)
        achieve is_milk(milk)
        achieve clean(egg)
        achieve clean(milk)

behavior prepare_equipment(skillet:item, spatula:item, bowl:item, whisk:item):
    body:
        achieve is_stove(skillet)
        achieve is_spatula(spatula)
        achieve is_bowl(bowl)
        achieve is_whisk(whisk)
        achieve clean(skillet)
        achieve clean(spatula)
        achieve clean(bowl)
        achieve clean(whisk)

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        bind milk: item where:
            is_milk(milk)
        bind skillet: item where:
            is_stove(skillet)
        bind spatula: item where:
            is_spatula(spatula)
        bind bowl: item where:
            is_bowl(bowl)
        bind whisk: item where:
            is_whisk(whisk)
        prepare_ingredient(egg, milk)
        prepare_equipment(skillet, spatula, bowl, whisk)","Error trying to process rule ""behavior_definition"":

'Function is_spatula not found. Note that recursive function calls are not supported in the current 
version.'",,,,
" 
def has_needed_items(area:item):
    symbol has_items=exists o: item : (is_food_egg(o) or is_knife(o) or is_bowl(o) or is_fork(o) or 
is_plate(o) or is_food_salt(o) or is_food_pepper(o)) and inside(o, area)
    return has_items

behavior __goal__():
    body:
        if exists kitchen_counter: item : is_kitchen_counter(kitchen_counter) and has_needed_items(k
itchen_counter):
            bind kitchen_counter: item where:
                is_kitchen_counter(kitchen_counter) and has_needed_items(kitchen_counter)
            achieve close_char(char, kitchen_counter)

        else:
            foreach kitchen_counter: item:
                if is_kitchen_counter(kitchen_counter) and not visited(kitchen_counter):
                    observe(kitchen_counter,""Check if kitchen counter has necessary ingredients and 
equipment for scrambling eggs"")
","Error trying to process rule ""function_definition"":

'Function is_food_pepper not found. Note that recursive function calls are not supported in the curr
ent version.'",,,,
" 
def has_needed_items(area:item):
    symbol has_items=exists o: item : (is_food_egg(o) or is_knife(o) or is_bowl(o) or is_fork(o) or 
is_plate(o) or is_food_salt(o) or is_food_potato(o)) and inside(o, area)
    return has_items

behavior __goal__():
    body:
        if exists kitchen_counter: item : is_kitchen_counter(kitchen_counter) and has_needed_items(k
itchen_counter):
            bind kitchen_counter: item where:
                is_kitchen_counter(kitchen_counter) and has_needed_items(kitchen_counter)
            achieve close_char(char, kitchen_counter)

        else:
            foreach kitchen_counter: item:
                if is_kitchen_counter(kitchen_counter) and not visited(kitchen_counter):
                    observe(kitchen_counter,""Check if kitchen counter has necessary ingredients and 
equipment for scrambling eggs"")
",,,,,"['walk_executor(kitchen_counter_230); obs(kitchen_counter_230, Check if kitchen counter has necessar
y ingredients and equipment for scrambling eggs)']"
,,,,,"(CrowControllerApplier<walk_executor(kitchen_counter_230)>, CrowControllerApplier<obs(kitchen_counte
r_230, Check if kitchen counter has necessary ingredients and equipment for scrambling eggs)>)"
,,walk_executor(kitchen_counter_230),"Find oil_2079. Find cutting_board_2051. Find bowl_2071. Find napkin_2005. Find knife_2050. Find cup_
2063. Find cup_2064. Find pot_2069. Find bowl_2072. Find tray_296. Find drawing_239. Find drawing_23
8. Find drawing_240. Find drawing_241. Find drawing_242. Find drawing_243. Robot is inside dining_ro
om_201. Robot is close kitchen_counter_230. Robot is no longer inside bathroom_1.",,
