From agent.py
Reset goals: The sub-goals are: 
['1. Sit on the chair in front of the computer in the home office.', '2. Touch the mouse near the computer to turn it on.', '3. Type the keyboard to send an e-mail.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_2003_around_home_office_241(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(chair,home_office_instance)
        else:
            exp(chair,home_office_instance)
    eff:
        unknown[chair]=False
        close[chair,home_office_instance]=True
        close[home_office_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind chair: item where:
            is_chair(chair) and sittable(chair)
        # Select a chair that is sittable
        
        bind computer: item where:
            is_computer(computer) and inside(computer, home_office)
        # Select the computer inside the home office

        achieve on_char(char, chair)
        # Sit on the chair in front of the computer

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: home_office; available variables: [Variable<computer: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_fruit_2095_around_fridge_126(food_fruit:item):
    goal: not unknown(food_fruit)
    body:
        assert is_food_fruit(food_fruit)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_fruit,fridge_instance)
        else:
            exp(food_fruit,fridge_instance)
    eff:
        unknown[food_fruit]=False
        close[food_fruit,fridge_instance]=True
        close[fridge_instance,food_fruit]=True
    

#goal_representation

behavior __goal__():
    body:
        bind chair: item where:
            is_chair(chair) and sittable(chair)

        bind computer: item where:
            is_computer(computer) and inside(computer, home_office)
        
        bind home_office: item where:
            is_home_office(home_office)
        
        achieve on_char(char, chair)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: home_office; available variables: [Variable<computer: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_fruit_2095_around_fridge_126(food_fruit:item):
    goal: not unknown(food_fruit)
    body:
        assert is_food_fruit(food_fruit)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_fruit,fridge_instance)
        else:
            exp(food_fruit,fridge_instance)
    eff:
        unknown[food_fruit]=False
        close[food_fruit,fridge_instance]=True
        close[fridge_instance,food_fruit]=True
    

#goal_representation

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        
        bind chair: item where:
            is_chair(chair) and sittable(chair)

        bind computer: item where:
            is_computer(computer) and inside(computer, home_office)
        
        achieve on_char(char, chair)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_194_around_home_office_241(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(chair,home_office_instance)
        else:
            exp(chair,home_office_instance)
    eff:
        unknown[chair]=False
        close[chair,home_office_instance]=True
        close[home_office_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior sit_on_chair(chair:item):
    body:
        achieve on_char(char, chair)

behavior __goal__():
    body:
        bind chair: item where:
            is_chair(chair)
        # Select a chair

        bind home_office: item where:
            is_home_office(home_office)
        # Select a home office

        achieve inside_char(char, home_office)
        # Ensure that the character is inside the home office

        sit_on_chair(chair)
        # Sit on the chair

#goal_representation_end

##############################
From agent.py->reset_goal
Failed to generate the goal representation
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "1. sit on the chair in front of the computer in the home office." ?
Answer: Get close to the computer in the home office. Then sit on the chair in front of the computer.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_194_around_home_office_241(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(chair,home_office_instance)
        else:
            exp(chair,home_office_instance)
    eff:
        unknown[chair]=False
        close[chair,home_office_instance]=True
        close[home_office_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Identify the home office

        bind chair: item where:
            is_chair(chair) and inside(chair, home_office)
        # Bind a chair inside the home office

        bind computer: item where:
            is_computer(computer) and inside(computer, home_office)
        # Bind a computer inside the home office

        achieve close_char(char, computer)
        # Move close to the computer in the home office

        achieve on_char(char, chair)
        # Sit on the chair in front of the computer

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_2003_around_home_office_241(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(chair,home_office_instance)
        else:
            exp(chair,home_office_instance)
    eff:
        unknown[chair]=False
        close[chair,home_office_instance]=True
        close[home_office_instance,chair]=True
    

behavior find_mouse_213_around_computer_276(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==276
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(mouse,computer_instance)
        else:
            exp(mouse,computer_instance)
    eff:
        unknown[mouse]=False
        close[mouse,computer_instance]=True
        close[computer_instance,mouse]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office
        
        bind chair: item where:
            is_chair(chair) and inside(chair, home_office)
        # Select the chair inside the home office
        
        achieve sit_somewhere(chair)
        # Sit on the selected chair
        
        achieve facing_char(char, computer)
        # Ensure character is facing the computer
        
        achieve close_char(char, mouse)
        # Get close to the mouse near the computer

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: computer; available variables: [].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_chair_2003_around_home_office_241(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(chair,home_office_instance)
        else:
            exp(chair,home_office_instance)
    eff:
        unknown[chair]=False
        close[chair,home_office_instance]=True
        close[home_office_instance,chair]=True
    

behavior find_mouse_280_around_computer_276(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==276
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(mouse,computer_instance)
        else:
            exp(mouse,computer_instance)
    eff:
        unknown[mouse]=False
        close[mouse,computer_instance]=True
        close[computer_instance,mouse]=True
    

#goal_representation

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind chair: item where:
            is_chair(chair) and inside(chair, home_office)
        # Select the chair inside the home office

        bind computer: item where:
            is_computer(computer) and inside(computer, home_office)
        # Select the computer inside the home office

        bind mouse: item where:
            is_mouse(mouse) and close(mouse, computer)
        # Select the mouse close to the computer

        achieve sit_somewhere(chair)
        # Sit on the selected chair

        achieve facing_char(char, computer)
        # Ensure character is facing the computer

        achieve close_char(char, mouse)
        # Get close to the mouse near the computer

#goal_representation_end

##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Get close to the computer in the home office and sit on the chair in front of it.', '2. Touch the mouse near the computer to turn it on.', '3. Type on the keyboard to send an email.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_194_around_home_office_241(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(chair,home_office_instance)
        else:
            exp(chair,home_office_instance)
    eff:
        unknown[chair]=False
        close[chair,home_office_instance]=True
        close[home_office_instance,chair]=True
    

behavior find_mouse_213_around_home_office_241(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(mouse,home_office_instance)
        else:
            exp(mouse,home_office_instance)
    eff:
        unknown[mouse]=False
        close[mouse,home_office_instance]=True
        close[home_office_instance,mouse]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind computer: item where:
            is_computer(computer) and inside(computer, home_office)
        # Select the computer in the home office

        bind chair: item where:
            is_chair(chair) and close(chair, computer) and sittable(chair)
        # Select the chair close to the computer that can be sat on

        achieve close_char(char, computer)
        # Move closer to the computer

        achieve on_char(char, chair)
        # Sit on the chair in front of the computer

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_dessert_2090_around_fridge_126(food_dessert:item):
    goal: not unknown(food_dessert)
    body:
        assert is_food_dessert(food_dessert)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_dessert,fridge_instance)
        else:
            exp(food_dessert,fridge_instance)
    eff:
        unknown[food_dessert]=False
        close[food_dessert,fridge_instance]=True
        close[fridge_instance,food_dessert]=True
    

behavior find_chair_271_around_desk_272(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==272
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind chair: item where:
            is_chair(chair) and inside(chair, home_office)
        # Select the chair inside the home office

        bind computer: item where:
            is_computer(computer) and inside(computer, home_office)
        # Select the computer inside the home office

        achieve close_char(char, computer)
        # Approach the computer

        achieve on_char(char, chair)
        # Sit on the chair

#goal_representation_end

##############################
From agent.py->reset_goal
Failed to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Go to the home office and sit on the chair in front of the computer.', '2. Touch the mouse near the computer to turn it on.', '3. Type on the keyboard to send an email.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_271_around_home_office_241(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(chair,home_office_instance)
        else:
            exp(chair,home_office_instance)
    eff:
        unknown[chair]=False
        close[chair,home_office_instance]=True
        close[home_office_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Locate the home office
        
        bind computer: item where:
            is_computer(computer) and inside(computer, home_office)
        # Locate the computer inside the home office
        
        bind chair: item where:
            is_chair(chair) and close(chair, computer)
        # Locate the chair close to the computer
        
        achieve close_char(char, computer)
        # Get close to the computer

        sit_somewhere(chair)
        # Sit on the chair in front of the computer

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_194_around_home_office_241(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(chair,home_office_instance)
        else:
            exp(chair,home_office_instance)
    eff:
        unknown[chair]=False
        close[chair,home_office_instance]=True
        close[home_office_instance,chair]=True
    

behavior find_keyboard_211_around_computer_276(keyboard:item):
    goal: not unknown(keyboard)
    body:
        assert is_keyboard(keyboard)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==276
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(keyboard,computer_instance)
        else:
            exp(keyboard,computer_instance)
    eff:
        unknown[keyboard]=False
        close[keyboard,computer_instance]=True
        close[computer_instance,keyboard]=True
    

#exp_behavior_end

#goal_representation
 
behavior sit_on_chair(char: character, chair: item):
    body:
        achieve on_char(char, chair)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Find the home office
        
        bind chair: item where:
            is_chair(chair) and inside(chair, home_office)
        # Select the chair inside the home office

        achieve close_char(char, chair)
        # Move close to the chair

        sit_on_chair(char, chair)
        # Sit on the chair in front of the computer

#goal_representation_end

##############################
From agent.py->reset_goal
Failed to generate the goal representation
##############################
From evaluation.py
cdl_dataset/dataset/Write_an_email/g3.txt
Checking k1
missed actions: walk_executor(computer_276);switchon_executor(computer_276);walk_executor(chair_271);sit_executor(chair_271);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Write_an_email/g3.txt
Checking k1
missed actions: walk_executor(computer_276);switchon_executor(computer_276);walk_executor(chair_271);sit_executor(chair_271);
missed action num: 4
##############################
