From agent.py
Reset goals: The sub-goals are: 
['1. Find the book.', '2. Put the book on the table in the bedroom.', '3. Turn on the light in the bedroom.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_novel_2010_around_bookshelf_372(novel:item):
    goal: not unknown(novel)
    body:
        assert is_novel(novel)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==372
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(novel,bookshelf_instance)
        else:
            exp(novel,bookshelf_instance)
    eff:
        unknown[novel]=False
        close[novel,bookshelf_instance]=True
        close[bookshelf_instance,novel]=True
    

behavior find_book_2091_around_bookshelf_372(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==372
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
def is_book_found(book: item):
    # Check if the book has already been visited
    symbol found = visited(book)
    return found

behavior find_book(book:item):
    body:
        if is_book_found(book):
            # If the book is already found, move close to it
            achieve close_char(char, book)
        else:
            # Observe all unvisited books to locate the book
            foreach item: item:
                if is_book(item) and not visited(item):
                    observe(item, "Locate the book")

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        find_book(book)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_book_found(book: item):
    # Check if the book has already been visited
    symbol found = visited(book)
    return found

behavior find_book(book:item):
    body:
        if is_book_found(book):
            # If the book is already found, move close to it
            achieve close_char(char, book)
        else:
            # Observe all unvisited books to locate the book
            foreach item: item:
                if is_book(item) and not visited(item):
                    observe(item, "Locate the book")

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        find_book(book)

##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_372)open_executor(bookshelf_372)exp(book_2091, bookshelf_372)walk_executor(book_2091)open_executor(book_2091)obs(book_2091, Locate the book)walk_executor(bookshelf_372)exp(book_2092, bookshelf_372)walk_executor(book_2092)open_executor(book_2092)obs(book_2092, Locate the book)walk_executor(bookshelf_372)exp(novel_2010, bookshelf_372)walk_executor(novel_2010)open_executor(novel_2010)obs(novel_2010, Locate the book)
##############################
From agent.py
walk_executor(bookshelf_372)
Find drawing_389. Find stamp_2031. Robot is inside bedroom_327. Robot is close floor_331. Robot is close bookshelf_372. Robot is no longer inside home_office_161.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g2.txt
Checking k1
missed actions: walk_executor(book_2091);grab_executor(book_2091);walk_executor(table_193);put_executor(book_2091, table_193);
missed action num: 4
##############################
From agent.py
open_executor(bookshelf_372)
Find towel_rack_298. Find drawing_296. Robot is inside bedroom_327. Robot is close floor_331. Robot is close bookshelf_372. 
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g2.txt
Checking k1
missed actions: walk_executor(book_2091);grab_executor(book_2091);walk_executor(table_193);put_executor(book_2091, table_193);
missed action num: 4
##############################
From agent.py
exp(book_2091, bookshelf_372)
Failed to find book_2091 around bookshelf_372. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_137)open_executor(bookshelf_137)exp(book_2091, bookshelf_137)walk_executor(book_2091)open_executor(book_2091)obs(book_2091, Locate the book)walk_executor(bookshelf_137)exp(book_2092, bookshelf_137)walk_executor(book_2092)open_executor(book_2092)obs(book_2092, Locate the book)walk_executor(bookshelf_137)exp(novel_2010, bookshelf_137)walk_executor(novel_2010)open_executor(novel_2010)obs(novel_2010, Locate the book)
##############################
From agent.py
walk_executor(bookshelf_137)
Find cup_2089. Find book_2092. Find drawing_118. Robot is inside dining_room_1. Robot is close floor_24. Robot is close bookshelf_137. Robot is close photoframe_102. Robot is no longer inside bedroom_327.Robot is no longer close floor_331.Robot is no longer close bookshelf_372.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g2.txt
Checking k1
missed actions: walk_executor(book_2091);grab_executor(book_2091);walk_executor(table_193);put_executor(book_2091, table_193);
missed action num: 4
##############################
From agent.py
open_executor(bookshelf_137)
Find drawing_387. Robot is inside dining_room_1. Robot is close floor_24. Robot is close bookshelf_137. Robot is close photoframe_102. 
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g2.txt
Checking k1
missed actions: walk_executor(book_2091);grab_executor(book_2091);walk_executor(table_193);put_executor(book_2091, table_193);
missed action num: 4
##############################
From agent.py
exp(book_2091, bookshelf_137)
Failed to find book_2091 around bookshelf_137. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_189)open_executor(bookshelf_189)exp(book_2091, bookshelf_189)walk_executor(book_2091)open_executor(book_2091)obs(book_2091, Locate the book)walk_executor(book_2092)open_executor(book_2092)obs(book_2092, Locate the book)walk_executor(bookshelf_189)exp(novel_2010, bookshelf_189)walk_executor(novel_2010)open_executor(novel_2010)obs(novel_2010, Locate the book)
##############################
From agent.py
walk_executor(bookshelf_189)
Robot is inside home_office_161. Robot is close bookshelf_189. Robot is close floor_167. Robot is no longer inside dining_room_1.Robot is no longer close floor_24.Robot is no longer close bookshelf_137.Robot is no longer close photoframe_102.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g2.txt
Checking k1
missed actions: walk_executor(book_2091);grab_executor(book_2091);walk_executor(table_193);put_executor(book_2091, table_193);
missed action num: 4
##############################
From agent.py
open_executor(bookshelf_189)
Find dvd_player_2000. Find clothes_underwear_2022. Find cat_2082. Find mouse_2112. Find cup_2006. Find laser_pointer_2025. Find keyboard_2110. Find pillow_195. Find vacuum_cleaner_2094. Find stereo_2007. Find mat_201. Find cd_2100. Find drawing_196. Find oil_2005. Find video_game_controller_2019. Robot is inside home_office_161. Robot is close bookshelf_189. Robot is close floor_167. 
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g2.txt
Checking k1
missed actions: walk_executor(book_2091);grab_executor(book_2091);walk_executor(table_193);put_executor(book_2091, table_193);
missed action num: 4
##############################
From agent.py
exp(book_2091, bookshelf_189)
Failed to find book_2091 around bookshelf_189. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_260)open_executor(bookshelf_260)exp(book_2091, bookshelf_260)walk_executor(book_2091)open_executor(book_2091)obs(book_2091, Locate the book)walk_executor(book_2092)open_executor(book_2092)obs(book_2092, Locate the book)walk_executor(bookshelf_260)exp(novel_2010, bookshelf_260)walk_executor(novel_2010)open_executor(novel_2010)obs(novel_2010, Locate the book)
##############################
From agent.py
walk_executor(bookshelf_260)
Find mat_237. Find chair_263. Find drawing_238. Robot is inside bedroom_220. Robot is close floor_222. Robot is close bookshelf_260. Robot is close floor_221. Robot is close photoframe_246. Robot is no longer inside home_office_161.Robot is no longer close bookshelf_189.Robot is no longer close floor_167.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g2.txt
Checking k1
missed actions: walk_executor(book_2091);grab_executor(book_2091);walk_executor(table_193);put_executor(book_2091, table_193);
missed action num: 4
##############################
From agent.py
open_executor(bookshelf_260)
Robot is inside bedroom_220. Robot is close floor_222. Robot is close bookshelf_260. Robot is close floor_221. Robot is close photoframe_246. 
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g2.txt
Checking k1
missed actions: walk_executor(book_2091);grab_executor(book_2091);walk_executor(table_193);put_executor(book_2091, table_193);
missed action num: 4
##############################
From agent.py
exp(book_2091, bookshelf_260)
Failed to find book_2091 around bookshelf_260. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_136)exp(book_2091, bookshelf_136)walk_executor(book_2091)open_executor(book_2091)obs(book_2091, Locate the book)walk_executor(book_2092)open_executor(book_2092)obs(book_2092, Locate the book)walk_executor(bookshelf_136)exp(novel_2010, bookshelf_136)walk_executor(novel_2010)open_executor(novel_2010)obs(novel_2010, Locate the book)
##############################
From agent.py
walk_executor(bookshelf_136)
Find book_2091. Robot is inside dining_room_1. Robot is close bookshelf_136. Robot is close floor_12. Robot is close floor_13. Robot is no longer inside bedroom_220.Robot is no longer close bookshelf_260.Robot is no longer close floor_221.Robot is no longer close floor_222.Robot is no longer close photoframe_246.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g2.txt
Checking k1
missed actions: walk_executor(book_2091);grab_executor(book_2091);walk_executor(table_193);put_executor(book_2091, table_193);
missed action num: 4
##############################
From agent.py
exp(book_2091, bookshelf_136)
Find book_2091. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2091)open_executor(book_2091)obs(book_2091, Locate the book)walk_executor(book_2092)open_executor(book_2092)obs(book_2092, Locate the book)walk_executor(bookshelf_136)exp(novel_2010, bookshelf_136)walk_executor(novel_2010)open_executor(novel_2010)obs(novel_2010, Locate the book)
##############################
From agent.py
walk_executor(book_2091)
Robot is inside dining_room_1. Robot is close bookshelf_136. Robot is close book_2091. Robot is no longer close floor_12.Robot is no longer close floor_13.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g2.txt
Checking k1
missed actions: grab_executor(book_2091);walk_executor(table_193);put_executor(book_2091, table_193);
missed action num: 3
##############################
From agent.py
open_executor(book_2091)
Robot is inside dining_room_1. Robot is close bookshelf_136. Robot is close book_2091. 
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g2.txt
Checking k1
missed actions: grab_executor(book_2091);walk_executor(table_193);put_executor(book_2091, table_193);
missed action num: 3
##############################
From agent.py
obs(book_2091, Locate the book)
Get this information:  book_2091 is inside dining_room_1. book_2091 is close to bookshelf_136. book_2091 is close to character_219. book_2091 is on bookshelf_136. book_2091 is OPEN.
##############################
From agent.py
walk_executor(book_2092)
Robot is inside dining_room_1. Robot is close bookshelf_137. Robot is close book_2092. Robot is no longer close bookshelf_136.Robot is no longer close book_2091.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g2.txt
Checking k1
missed actions: walk_executor(book_2091);grab_executor(book_2091);walk_executor(table_193);put_executor(book_2091, table_193);
missed action num: 4
##############################
From agent.py
open_executor(book_2092)
Robot is inside dining_room_1. Robot is close bookshelf_137. Robot is close book_2092. 
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g2.txt
Checking k1
missed actions: walk_executor(book_2091);grab_executor(book_2091);walk_executor(table_193);put_executor(book_2091, table_193);
missed action num: 4
##############################
From agent.py
obs(book_2092, Locate the book)
Get this information:  book_2092 is close to bookshelf_137. book_2092 is close to character_219. book_2092 is on bookshelf_137. book_2092 is inside dining_room_1. book_2092 is OPEN.
##############################
From agent.py
walk_executor(bookshelf_136)
Robot is inside dining_room_1. Robot is close bookshelf_136. Robot is close floor_12. Robot is close floor_13. Robot is no longer close bookshelf_137.Robot is no longer close book_2092.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g2.txt
Checking k1
missed actions: walk_executor(book_2091);grab_executor(book_2091);walk_executor(table_193);put_executor(book_2091, table_193);
missed action num: 4
##############################
From agent.py
exp(novel_2010, bookshelf_136)
Failed to find novel_2010 around bookshelf_136. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2091)
##############################
From agent.py
walk_executor(book_2091)
Robot is inside dining_room_1. Robot is close bookshelf_136. Robot is close book_2091. Robot is no longer close floor_12.Robot is no longer close floor_13.
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g2.txt
Checking k1
missed actions: grab_executor(book_2091);walk_executor(table_193);put_executor(book_2091, table_193);
missed action num: 3
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2092_around_bookshelf_188(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==188
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve on(book, table)
        # Place the book on the table

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book]==2091
        # Select book with ID 2091

        bind bedroom: item where:
            is_bedroom(bedroom)
        # Select the bedroom

        bind table: item where:
            is_table(table) and inside(table, bedroom)
        # Select a table inside the bedroom

        place_book_on_table(book, table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_novel_2010_around_bookshelf_188(novel:item):
    goal: not unknown(novel)
    body:
        assert is_novel(novel)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==188
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(novel,bookshelf_instance)
        else:
            exp(novel,bookshelf_instance)
    eff:
        unknown[novel]=False
        close[novel,bookshelf_instance]=True
        close[bookshelf_instance,novel]=True
    

behavior find_book_2092_around_kitchen_counter_132(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(book,kitchen_counter_instance)
        else:
            exp(book,kitchen_counter_instance)
    eff:
        unknown[book]=False
        close[book,kitchen_counter_instance]=True
        close[kitchen_counter_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve on(book, table)
        # Place the book on the table

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book]==2091
        # Select the book with ID 2091

        bind bedroom: item where:
            is_bedroom(bedroom)
        # Select the bedroom

        bind table: item where:
            is_table(table) and inside(table, bedroom)
        # Select a table inside the bedroom

        place_book_on_table(book, table)

#goal_representation_end

##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "2. put the book on the table in the bedroom." ?
Answer: Put the book on the table in the bedroom.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2092_around_doorjamb_37(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind doorjamb_instance:item where:
            is_doorjamb(doorjamb_instance) and id[doorjamb_instance]==37
        achieve close_char(char,doorjamb_instance)
        if can_open(doorjamb_instance):
            achieve_once open(doorjamb_instance)
            exp(book,doorjamb_instance)
        else:
            exp(book,doorjamb_instance)
    eff:
        unknown[book]=False
        close[book,doorjamb_instance]=True
        close[doorjamb_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_book_on_bedroom_table(book:item, table:item):
    body:
        achieve on(book, table)
        # Place the book on the table in the bedroom

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2091
        # Select book with ID 2091

        bind bedroom: item where:
            is_bedroom(bedroom)
        # Select the bedroom

        bind table: item where:
            is_table(table) and inside(table, bedroom)
        # Select a table inside the bedroom

        place_book_on_bedroom_table(book, table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_novel_2010_around_bookshelf_188(novel:item):
    goal: not unknown(novel)
    body:
        assert is_novel(novel)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==188
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(novel,bookshelf_instance)
        else:
            exp(novel,bookshelf_instance)
    eff:
        unknown[novel]=False
        close[novel,bookshelf_instance]=True
        close[bookshelf_instance,novel]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve on(book, table)
        # Place the book on the table

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book]==2091
        # Select book with ID 2091

        bind bedroom: item where:
            is_bedroom(bedroom)
        # Select the bedroom

        bind table: item where:
            is_table(table) and inside(table, bedroom)
        # Select a table inside the bedroom

        place_book_on_table(book, table) 

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2092_around_bookshelf_188(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==188
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve on(book, table)
        # Place the book on the table

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book]==2091
        # Select the book with ID 2091

        bind bedroom: item where:
            is_bedroom(bedroom)
        # Select the bedroom

        bind table: item where:
            is_table(table) and inside(table, bedroom)
        # Select the table inside the bedroom

        place_book_on_table(book, table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2092_around_table_193(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==193
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(book,table_instance)
        else:
            exp(book,table_instance)
    eff:
        unknown[book]=False
        close[book,table_instance]=True
        close[table_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_book_on_bedroom_table(book:item, table:item):
    body:
        achieve on(book, table)
        # Place the book on the table in the bedroom

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book]==2091
        # Select the book with ID 2091

        bind bedroom: item where:
            is_bedroom(bedroom)
        # Select the bedroom

        bind table: item where:
            is_table(table) and inside(table, bedroom)
        # Select a table inside the bedroom

        place_book_on_bedroom_table(book, table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2092_around_table_193(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==193
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(book,table_instance)
        else:
            exp(book,table_instance)
    eff:
        unknown[book]=False
        close[book,table_instance]=True
        close[table_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve on(book, table)
        # Place the book on the table

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2091
        # Select book with ID 2091

        bind bedroom: item where:
            is_bedroom(bedroom)
        # Select the bedroom

        bind table: item where:
            is_table(table) and inside(table, bedroom)
        # Select a table inside the bedroom

        place_book_on_table(book, table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_novel_2010_around_bookshelf_188(novel:item):
    goal: not unknown(novel)
    body:
        assert is_novel(novel)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==188
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(novel,bookshelf_instance)
        else:
            exp(novel,bookshelf_instance)
    eff:
        unknown[novel]=False
        close[novel,bookshelf_instance]=True
        close[bookshelf_instance,novel]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve on(book, table)
        # Place the book on the table

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        # Select the bedroom

        bind book: item where:
            is_book(book) and id[book]==2091
        # Select book with ID 2091

        bind table: item where:
            is_table(table) and inside(table, bedroom)
        # Select a table inside the bedroom

        place_book_on_table(book, table)

#goal_representation_end

##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g2.txt
Checking k1
missed actions: grab_executor(book_2091);walk_executor(table_193);put_executor(book_2091, table_193);
missed action num: 3
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g2.txt
Checking k1
missed actions: grab_executor(book_2091);walk_executor(table_193);put_executor(book_2091, table_193);
missed action num: 3
##############################
From evaluation.py
cdl_dataset/dataset/Prepare_a_reading_space/g2.txt
Checking k2
missed actions: walk_executor(light_258);switchon_executor(light_258);
missed action num: 2
##############################
