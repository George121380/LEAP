From agent.py
Reset goals: The sub-goals are: 
['Boil the egg.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_food_egg_2053_around_cupboard_131(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_egg,cupboard_instance)
        else:
            exp(food_egg,cupboard_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,cupboard_instance]=True
        close[cupboard_instance,food_egg]=True
    

behavior find_pot_2093_around_cupboard_131(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(pot,cupboard_instance)
        else:
            exp(pot,cupboard_instance)
    eff:
        unknown[pot]=False
        close[pot,cupboard_instance]=True
        close[cupboard_instance,pot]=True
    

#exp_behavior_end

#goal_representation
 
behavior pour_water_into_pot(pot:item):
    body:
        achieve has_water(pot)
        # Fill the pot with water

behavior transfer_egg_to_pot(egg:item, pot:item):
    body:
        achieve inside(egg, pot)
        # Place the egg inside the pot

behavior heat_pot_on_stove(pot:item, stove:item):
    body:
        achieve on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil the egg

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select the egg

        bind pot: item where:
            is_pot(pot)
        # Select the pot

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        pour_water_into_pot(pot)
        transfer_egg_to_pot(egg, pot)
        heat_pot_on_stove(pot, stove)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior pour_water_into_pot(pot:item):
    body:
        achieve has_water(pot)
        # Fill the pot with water

behavior transfer_egg_to_pot(egg:item, pot:item):
    body:
        achieve inside(egg, pot)
        # Place the egg inside the pot

behavior heat_pot_on_stove(pot:item, stove:item):
    body:
        achieve on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil the egg

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select the egg

        bind pot: item where:
            is_pot(pot)
        # Select the pot

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        pour_water_into_pot(pot)
        transfer_egg_to_pot(egg, pot)
        heat_pot_on_stove(pot, stove)

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(pot_2093, cupboard_131)walk_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(cupboard_131)exp(food_egg_2053, cupboard_131)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_2093)putin_executor(food_egg_2053, pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(cupboard_131)
Find pot_54. Find tray_142. Robot is inside dining_room_1. Robot is close cupboard_131. Robot is no longer inside home_office_161.
##############################
From agent.py
open_executor(cupboard_131)
Robot is inside dining_room_1. Robot is close cupboard_131. 
##############################
From agent.py
exp(pot_2093, cupboard_131)
Failed to find pot_2093 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_54)open_executor(pot_54)exp(pot_2093, pot_54)walk_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(sink_133)exp(food_egg_2053, sink_133)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_2093)putin_executor(food_egg_2053, pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(pot_54)
Find food_butter_2018. Find dough_2021. Find food_onion_2026. Robot is inside dining_room_1. Robot is close oven_141. Robot is close pot_54. Robot is no longer close cupboard_131.
##############################
From agent.py
open_executor(pot_54)
Robot is inside dining_room_1. Robot is close oven_141. Robot is close pot_54. 
##############################
From agent.py
exp(pot_2093, pot_54)
Failed to find pot_2093 around pot_54. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(pot_2093, kitchen_counter_132)walk_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(kitchen_counter_132)exp(food_egg_2053, kitchen_counter_132)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_2093)putin_executor(food_egg_2053, pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is no longer close oven_141.Robot is no longer close pot_54.
##############################
From agent.py
exp(pot_2093, kitchen_counter_132)
Failed to find pot_2093 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(pot_2093, kitchen_counter_128)walk_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(kitchen_counter_128)exp(food_egg_2053, kitchen_counter_128)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_2093)putin_executor(food_egg_2053, pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Find cutting_board_2080. Find food_orange_2008. Find spectacles_2106. Robot is inside dining_room_1. Robot is close kitchen_counter_128. Robot is close floor_15. Robot is no longer close kitchen_counter_132.
##############################
From agent.py
exp(pot_2093, kitchen_counter_128)
Failed to find pot_2093 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_129)exp(pot_2093, kitchen_counter_129)walk_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(kitchen_counter_129)exp(food_egg_2053, kitchen_counter_129)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_2093)putin_executor(food_egg_2053, pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(kitchen_counter_129)
Find oil_2102. Find pot_2093. Find fryingpan_2107. Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is no longer close kitchen_counter_128.Robot is no longer close floor_15.
##############################
From agent.py
exp(pot_2093, kitchen_counter_129)
Find pot_2093. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(kitchen_counter_129)exp(food_egg_2053, kitchen_counter_129)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_2093)putin_executor(food_egg_2053, pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(pot_2093)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close pot_2093. 
##############################
From agent.py
grab_executor(pot_2093)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close pot_2093. Grabbing pot_2093 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close kitchen_counter_129.
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(kitchen_counter_129)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_129. Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
exp(food_egg_2053, kitchen_counter_129)
Failed to find food_egg_2053 around kitchen_counter_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)switchon_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(sink_307)exp(food_egg_2053, sink_307)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_2093)putin_executor(food_egg_2053, pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close kitchen_counter_129.
##############################
From agent.py
switchon_executor(faucet_134)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(sink_307)
Find detergent_2108. Find drawing_296. Find towel_rack_298. Robot is inside bathroom_265. Robot is close pot_2093. Robot is close bathroom_counter_306. Robot is close sink_307. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find food_egg_2053 ?
Answer: The target item, food_egg_2053, is located inside dining_room_1. You will find it inside freezer_140. Look inside the freezer, and you should locate food_egg_2053 near the interior wall, close to other refrigerated items.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item, food_egg_2053, is located inside dining_room_1. You will find it inside freezer_140. Look inside the freezer, and you should locate food_egg_2053 near the interior wall, close to other refrigerated items.

The actions you have taken:
Action 1: Walk to cupboard_131.
Action 2: Open cupboard_131.
Action 3: look for pot_2093 around cupboard_131.
Action 4: Walk to pot_54.
Action 5: Open pot_54.
Action 6: look for pot_2093 around pot_54.
Action 7: Walk to kitchen_counter_132.
Action 8: look for pot_2093 around kitchen_counter_132.
Action 9: Walk to kitchen_counter_128.
Action 10: look for pot_2093 around kitchen_counter_128.
Action 11: Walk to kitchen_counter_129.
Action 12: look for pot_2093 around kitchen_counter_129.
Action 13: Walk to pot_2093.
Action 14: Grab pot_2093.
Action 15: Walk to faucet_134.
Action 16: Switch off faucet_134.
Action 17: Walk to kitchen_counter_129.
Action 18: look for food_egg_2053 around kitchen_counter_129.
Action 19: Walk to faucet_134.
Action 20: Switch on faucet_134.
Action 21: Switch off faucet_134.
Action 22: Walk to sink_307.

##############################
From agent.py
exp(food_egg_2053, sink_307)
Failed to find food_egg_2053 around sink_307. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['Boil the egg.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_food_egg_2053_around_freezer_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind freezer_instance:item where:
            is_freezer(freezer_instance) and id[freezer_instance]==140
        achieve close_char(char,freezer_instance)
        if can_open(freezer_instance):
            achieve_once open(freezer_instance)
            exp(food_egg,freezer_instance)
        else:
            exp(food_egg,freezer_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,freezer_instance]=True
        close[freezer_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
 
def in_dining_room(freezer: item):
    # Function to check if the freezer is inside the dining room
    symbol in_dining_room = exists room: item : is_dining_room(room) and inside(freezer, room)
    return in_dining_room

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg) and id[egg] == 2053
        # Select the egg with the specific ID

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind freezer: item where:
            is_freezer(freezer) and in_dining_room(freezer)
        # Select the freezer inside the dining room

        achieve inside(egg, pot_2093)
        # Place the egg inside the pot

        achieve close_char(char, stove_2093)
        # Move the character close to the stove

        achieve is_on(stove_2093)
        # Turn on the stove

        achieve boil(egg, pot_2093)
        # Boil the egg in the pot

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: pot_2093; available variables: [].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_food_egg_2053_around_freezer_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind freezer_instance:item where:
            is_freezer(freezer_instance) and id[freezer_instance]==140
        achieve close_char(char,freezer_instance)
        if can_open(freezer_instance):
            achieve_once open(freezer_instance)
            exp(food_egg,freezer_instance)
        else:
            exp(food_egg,freezer_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,freezer_instance]=True
        close[freezer_instance,food_egg]=True
    

#goal_representation
 
def in_dining_room(freezer: item):
    # Function to check if the freezer is inside the dining room
    symbol in_dining_room = exists room: item : is_dining_room(room) and inside(freezer, room)
    return in_dining_room

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg) and id[egg] == 2053
        # Select the egg with the specific ID

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind freezer: item where:
            is_freezer(freezer) and in_dining_room(freezer)
        # Select the freezer inside the dining room
        
        bind pot_2093: item where:
            is_pot(pot_2093) and id[pot_2093] == 2093
        # Select the pot with the specific ID

        achieve inside(egg, pot_2093)
        # Place the egg inside the pot

        achieve close_char(char, stove_2093)
        # Move the character close to the stove

        achieve is_on(stove_2093)
        # Turn on the stove

        achieve boil(egg, pot_2093)
        # Boil the egg in the pot

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: stove_2093; available variables: [].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_food_egg_2053_around_freezer_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind freezer_instance:item where:
            is_freezer(freezer_instance) and id[freezer_instance]==140
        achieve close_char(char,freezer_instance)
        if can_open(freezer_instance):
            achieve_once open(freezer_instance)
            exp(food_egg,freezer_instance)
        else:
            exp(food_egg,freezer_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,freezer_instance]=True
        close[freezer_instance,food_egg]=True
    

#goal_representation
 
def in_dining_room(freezer: item):
    # Function to check if the freezer is inside the dining room
    symbol in_dining_room = exists room: item : is_dining_room(room) and inside(freezer, room)
    return in_dining_room

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg) and id[egg] == 2053
        # Select the egg with the specific ID

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind freezer: item where:
            is_freezer(freezer) and in_dining_room(freezer)
        # Select the freezer inside the dining room
        
        bind pot_2093: item where:
            is_pot(pot_2093) and id[pot_2093] == 2093
        # Select the pot with the specific ID

        bind stove_2093: item where:
            is_stove(stove_2093) and id[stove_2093] == 2093
        # Select the stove with the specific ID

        achieve inside(egg, pot_2093)
        # Place the egg inside the pot

        achieve close_char(char, stove_2093)
        # Move the character close to the stove

        achieve is_on(stove_2093)
        # Turn on the stove

        achieve boil(egg, pot_2093)
        # Boil the egg in the pot

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_food_egg_2053_around_freezer_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind freezer_instance:item where:
            is_freezer(freezer_instance) and id[freezer_instance]==140
        achieve close_char(char,freezer_instance)
        if can_open(freezer_instance):
            achieve_once open(freezer_instance)
            exp(food_egg,freezer_instance)
        else:
            exp(food_egg,freezer_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,freezer_instance]=True
        close[freezer_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
 
def locate_egg_in_freezer(freezer: item):
    # Function to check if the egg is inside the freezer
    symbol has_egg = exists egg: item : is_food_egg(egg) and inside(egg, freezer)
    return has_egg

def find_freezer_with_egg(dining_room: item):
    # Function to find the freezer containing the egg within the dining room
    bind freezer: item where:
        is_freezer(freezer) and inside(freezer, dining_room)

    if locate_egg_in_freezer(freezer):
        return freezer
    else:
        foreach freezer: item:
            if is_freezer(freezer) and inside(freezer, dining_room) and not visited(freezer):
                observe(freezer, "Check if the egg is inside this freezer")
        return freezer

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room
        
        bind freezer: item where:
            is_freezer(freezer) and inside(freezer, dining_room)
        # Find the freezer in the dining room

        bind egg: item where:
            is_food_egg(egg) and locate_egg_in_freezer(freezer)
        # Locate the egg in the freezer
        
        find_freezer_with_egg(dining_room)
        
        achieve_once inhand(egg)
        # Temporarily take the egg in hand

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        achieve on(pot, stove)
        # Place the pot on the stove

        bind faucet: item where:
            is_faucet(faucet) and close(faucet, pot)
        # Find the faucet close to the pot

        water(pot)
        # Fill the pot with water

        achieve is_on(stove)
        # Turn on the stove to boil water

        achieve inside(egg, pot)
        # Place the egg inside the pot to boil

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Behavior body statement bind:
  CSList(freezer: item)
  and(is_freezer(V::freezer), inside(V::freezer, V::dining_room)) are not allowed in the current mode: SymbolicExecutionMode.DERIVED
##############################
