From agent.py
Reset goals: The sub-goals are: 
['Sit on the couch and turn on the TV with the remote control.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_194_around_desk_193(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==193
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

behavior find_remote_control_2124_around_tvstand_116(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==116
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(remote_control,tvstand_instance)
        else:
            exp(remote_control,tvstand_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,tvstand_instance]=True
        close[tvstand_instance,remote_control]=True
    

behavior find_dvd_player_2130_around_tvstand_273(dvd_player:item):
    goal: not unknown(dvd_player)
    body:
        assert is_dvd_player(dvd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==273
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(dvd_player,tvstand_instance)
        else:
            exp(dvd_player,tvstand_instance)
    eff:
        unknown[dvd_player]=False
        close[dvd_player,tvstand_instance]=True
        close[tvstand_instance,dvd_player]=True
    

#exp_behavior_end

#goal_representation
 
behavior observe_remote_control(remote_control:item):
    body:
        observe(remote_control, "Is it functional and within reach")

behavior turn_on_television(tv:item, remote_control:item):
    body:
        achieve is_on(tv)

behavior __goal__():
    body:
        bind couch: item where:
            is_couch(couch)
        # Select the couch

        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select the remote control

        bind television: item where:
            is_television(television)
        # Select the television

        achieve on_char(char, couch)
        # Sit on the couch

        observe_remote_control(remote_control)
        # Ensure the remote control is operational

        turn_on_television(television, remote_control)
        # Use the remote control to turn on the television

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior observe_remote_control(remote_control:item):
    body:
        observe(remote_control, "Is it functional and within reach")

behavior turn_on_television(tv:item, remote_control:item):
    body:
        achieve is_on(tv)

behavior __goal__():
    body:
        bind couch: item where:
            is_couch(couch)
        # Select the couch

        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select the remote control

        bind television: item where:
            is_television(television)
        # Select the television

        achieve on_char(char, couch)
        # Sit on the couch

        observe_remote_control(remote_control)
        # Ensure the remote control is operational

        turn_on_television(television, remote_control)
        # Use the remote control to turn on the television

##############################
From agent.py-> find a plan in act()
walk_executor(couch_198)sit_executor(couch_198)walk_executor(tvstand_116)exp(remote_control_2124, tvstand_116)walk_executor(remote_control_2124)obs(remote_control_2124, Is it functional and within reach)walk_executor(television_281)switchon_executor(television_281)
##############################
From agent.py
walk_executor(couch_198)
Find clothes_jacket_2119. Find phone_2016. Find mat_203. Find chair_2003. Find rag_2052. Find instrument_guitar_2028. Robot is inside bedroom_162. Robot is close couch_198. Robot is no longer inside dining_room_41.
##############################
From agent.py
sit_executor(couch_198)
Robot is inside bedroom_162. Robot is close couch_198. Robot is on couch_198. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_remote_control_2124_around_television_281(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind television_instance:item where:
            is_television(television_instance) and id[television_instance]==281
        achieve close_char(char,television_instance)
        if can_open(television_instance):
            achieve_once open(television_instance)
            exp(remote_control,television_instance)
        else:
            exp(remote_control,television_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,television_instance]=True
        close[television_instance,remote_control]=True
    

#exp_behavior_end

#goal_representation
 
behavior turn_on_tv_with_remote_control(tv:item, remote_control:item):
    body:
        achieve_once inhand(remote_control)
        # Temporarily hold the remote control in hand
        achieve is_on(tv)
        # Turn on the TV

behavior __goal__():
    body:
        bind couch: item where:
            is_couch(couch) and id[couch] == 198
        # Select the couch with ID 198

        bind tv: item where:
            is_television(tv)
        # Select the TV

        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select the remote control

        achieve on_char(char, couch)
        # Sit on the couch

        turn_on_tv_with_remote_control(tv, remote_control)
        # Turn on the TV with the remote

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior turn_on_tv_with_remote_control(tv:item, remote_control:item):
    body:
        achieve_once inhand(remote_control)
        # Temporarily hold the remote control in hand
        achieve is_on(tv)
        # Turn on the TV

behavior __goal__():
    body:
        bind couch: item where:
            is_couch(couch) and id[couch] == 198
        # Select the couch with ID 198

        bind tv: item where:
            is_television(tv)
        # Select the TV

        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select the remote control

        achieve on_char(char, couch)
        # Sit on the couch

        turn_on_tv_with_remote_control(tv, remote_control)
        # Turn on the TV with the remote

##############################
From agent.py-> find a plan in act()
standup_executor(char)walk_executor(television_281)exp(remote_control_2124, television_281)standup_executor(char)walk_executor(remote_control_2124)grab_executor(remote_control_2124)standup_executor(char)walk_executor(television_281)switchon_executor(television_281)
##############################
From agent.py
standup_executor(char)
Robot is inside bedroom_162. Robot is close couch_198. Robot is on couch_198. 
##############################
From agent.py
walk_executor(television_281)
Find cd_2145. Find remote_control_2124. Find cd_player_2129. Find dvd_player_2130. Find headset_2131. Find mat_284. Find drawing_288. Robot is inside home_office_241. Robot is close television_281. Robot is close tvstand_273. Robot is on couch_198. Robot is no longer inside bedroom_162.Robot is no longer close couch_198.
##############################
From agent.py
exp(remote_control_2124, television_281)
Find remote_control_2124. 
##############################
From agent.py-> find a plan in act()
walk_executor(remote_control_2124)grab_executor(remote_control_2124)walk_executor(television_281)switchon_executor(television_281)
##############################
From agent.py
walk_executor(remote_control_2124)
Robot is inside home_office_241. Robot is close tvstand_273. Robot is close remote_control_2124. Robot is on couch_198. Robot is no longer close television_281.
##############################
From agent.py
grab_executor(remote_control_2124)
Robot is inside home_office_241. Robot is close tvstand_273. Robot is close remote_control_2124. Robot is on couch_198. Grabbing remote_control_2124 by right hand. 
##############################
From agent.py
walk_executor(television_281)
Robot is inside home_office_241. Robot is close tvstand_273. Robot is close remote_control_2124. Robot is close television_281. Robot is on couch_198. 
##############################
From agent.py
switchon_executor(television_281)
Robot is inside home_office_241. Robot is close tvstand_273. Robot is close remote_control_2124. Robot is close television_281. Robot is on couch_198. 
##############################
From agent.py
Human Instruction: You need to sit on the couch after turning on the TV. Currently, you are standing close to the television and not sitting on the couch. Return to the couch and sit down to complete the sub-task.

Trial and Error: You can not walk tvstand_116
The actions you have taken:
Action 1: Walk to couch_198.
Action 2: Sit on couch_198.
Action 3: char stand up.
Action 4: Walk to television_281.
Action 5: look for remote_control_2124 around television_281.
Action 6: Walk to remote_control_2124.
Action 7: Grab remote_control_2124.
Action 8: Walk to television_281.
Action 9: Switch on television_281.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_2003_around_chair_2003(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==2003
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

behavior find_stereo_2050_around_cd_player_2129(stereo:item):
    goal: not unknown(stereo)
    body:
        assert is_stereo(stereo)
        bind cd_player_instance:item where:
            is_cd_player(cd_player_instance) and id[cd_player_instance]==2129
        achieve close_char(char,cd_player_instance)
        if can_open(cd_player_instance):
            achieve_once open(cd_player_instance)
            exp(stereo,cd_player_instance)
        else:
            exp(stereo,cd_player_instance)
    eff:
        unknown[stereo]=False
        close[stereo,cd_player_instance]=True
        close[cd_player_instance,stereo]=True
    

#exp_behavior_end

#goal_representation

def is_close_to_television(television:item):
    # Determine if the character is close to the television
    symbol is_close = close_char(char, television)
    return is_close

behavior sit_on_couch(couch:item):
    body:
        achieve on_char(char, couch)
        # Sit on the couch

behavior turn_on_television(remote:item, television:item):
    body:
        achieve_once inhand(remote)
        # Hold the remote control temporarily
        achieve is_on(television)
        # Turn on the TV

behavior __goal__():
    body:
        bind couch: item where:
            is_couch(couch)
        # Select the couch

        bind television: item where:
            is_television(television)
        # Select the television

        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select the remote control
        
        if is_close_to_television(television):
            turn_on_television(remote_control, television)
            sit_on_couch(couch)
        else:
            achieve close_char(char, television)
            # Move closer to the television if not already close
            turn_on_television(remote_control, television)
            sit_on_couch(couch)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cd_player_2129_around_cd_player_2129(cd_player:item):
    goal: not unknown(cd_player)
    body:
        assert is_cd_player(cd_player)
        bind cd_player_instance:item where:
            is_cd_player(cd_player_instance) and id[cd_player_instance]==2129
        achieve close_char(char,cd_player_instance)
        if can_open(cd_player_instance):
            achieve_once open(cd_player_instance)
            exp(cd_player,cd_player_instance)
        else:
            exp(cd_player,cd_player_instance)
    eff:
        unknown[cd_player]=False
        close[cd_player,cd_player_instance]=True
        close[cd_player_instance,cd_player]=True
    

behavior find_stereo_2050_around_tvstand_116(stereo:item):
    goal: not unknown(stereo)
    body:
        assert is_stereo(stereo)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==116
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(stereo,tvstand_instance)
        else:
            exp(stereo,tvstand_instance)
    eff:
        unknown[stereo]=False
        close[stereo,tvstand_instance]=True
        close[tvstand_instance,stereo]=True
    

#exp_behavior_end

#goal_representation
behavior sit_on_couch(couch:item):
    body:
        achieve on_char(char, couch)
        # Sit on the couch

behavior turn_on_tv(tv:item, remote_control:item):
    body:
        achieve is_on(tv)
        # Turn on the TV

behavior __goal__():
    body:
        bind couch: item where:
            is_couch(couch)
        # Select the couch

        bind television: item where:
            is_television(television)
        # Select the television

        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select the remote control

        sit_on_couch(couch)
        # Sit on the couch

        achieve_once inhand(remote_control)
        # Hold the remote control temporarily

        achieve facing_char(char, television)
        # Face the television

        turn_on_tv(television, remote_control)
        # Turn on the TV using the remote control
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior sit_on_couch(couch:item):
    body:
        achieve on_char(char, couch)
        # Sit on the couch

behavior turn_on_tv(tv:item, remote_control:item):
    body:
        achieve is_on(tv)
        # Turn on the TV

behavior __goal__():
    body:
        bind couch: item where:
            is_couch(couch)
        # Select the couch

        bind television: item where:
            is_television(television)
        # Select the television

        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select the remote control

        sit_on_couch(couch)
        # Sit on the couch

        achieve_once inhand(remote_control)
        # Hold the remote control temporarily

        achieve facing_char(char, television)
        # Face the television

        turn_on_tv(television, remote_control)
        # Turn on the TV using the remote control
##############################
From agent.py-> find a plan in act()
turnto_executor(television_281)
##############################
From agent.py
turnto_executor(television_281)
Robot is inside home_office_241. Robot is close tvstand_273. Robot is close remote_control_2124. Robot is close television_281. Robot is on couch_198. Robot is facing television_281. 
##############################
From agent.py
Human Instruction: You need to return to the couch and sit down after you have turned on the TV to complete the sub-task.

Trial and Error: You can not walk tvstand_116
The actions you have taken:
Action 1: Walk to couch_198.
Action 2: Sit on couch_198.
Action 3: char stand up.
Action 4: Walk to television_281.
Action 5: look for remote_control_2124 around television_281.
Action 6: Walk to remote_control_2124.
Action 7: Grab remote_control_2124.
Action 8: Walk to television_281.
Action 9: Switch on television_281.
Action 10: Turn to television_281.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_2003_around_chair_2003(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==2003
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior sit_on_couch(couch: item):
    body:
        achieve on_char(char, couch)

behavior turn_on_television_with_remote(television: item, remote_control: item):
    body:
        achieve_once inhand(remote_control)
        achieve is_on(television)

behavior __goal__():
    body:
        bind couch: item where:
            is_couch(couch)
        # Select the couch

        bind television: item where:
            is_television(television)
        # Select the television

        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select the remote control

        sit_on_couch(couch)
        turn_on_television_with_remote(television, remote_control)
        achieve on_char(char, couch)
        # Return to the couch after turning on the television

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_stereo_2050_around_cupboard_117(stereo:item):
    goal: not unknown(stereo)
    body:
        assert is_stereo(stereo)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(stereo,cupboard_instance)
        else:
            exp(stereo,cupboard_instance)
    eff:
        unknown[stereo]=False
        close[stereo,cupboard_instance]=True
        close[cupboard_instance,stereo]=True
    

behavior find_check_2075_around_tvstand_116(check:item):
    goal: not unknown(check)
    body:
        assert is_check(check)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==116
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(check,tvstand_instance)
        else:
            exp(check,tvstand_instance)
    eff:
        unknown[check]=False
        close[check,tvstand_instance]=True
        close[tvstand_instance,check]=True
    

#exp_behavior_end

#goal_representation
 
def is_remote_control_found(remote: item):
    # Function to check if the remote control is found and observed
    symbol found = visited(remote)
    return found

behavior find_remote(remote:item):
    body:
        if not is_remote_control_found(remote):
            # If the remote control is not found, observe all unvisited remote controls
            foreach item: item:
                if is_remote_control(item) and not visited(item):
                    observe(item, "Locate the remote control")

behavior turn_on_tv_with_remote(tv:item, remote:item):
    body:
        achieve_once inhand(remote)
        # Temporarily hold the remote control in hand
        achieve is_on(tv)
        # Turn on the TV with the remote control

behavior return_to_couch(couch:item):
    body:
        achieve on_char(char, couch)
        # Return to the couch and sit

behavior __goal__():
    body:
        bind couch: item where:
            is_couch(couch) and id[couch]==198
        # Select the couch with ID 198

        bind television: item where:
            is_television(television) and id[television]==281
        # Select the television with ID 281

        bind remote_control: item where:
            is_remote_control(remote_control) and id[remote_control]==2124
        # Select the remote control with ID 2124

        find_remote(remote_control)
        turn_on_tv_with_remote(television, remote_control)
        return_to_couch(couch)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_remote_control_found(remote: item):
    # Function to check if the remote control is found and observed
    symbol found = visited(remote)
    return found

behavior find_remote(remote:item):
    body:
        if not is_remote_control_found(remote):
            # If the remote control is not found, observe all unvisited remote controls
            foreach item: item:
                if is_remote_control(item) and not visited(item):
                    observe(item, "Locate the remote control")

behavior turn_on_tv_with_remote(tv:item, remote:item):
    body:
        achieve_once inhand(remote)
        # Temporarily hold the remote control in hand
        achieve is_on(tv)
        # Turn on the TV with the remote control

behavior return_to_couch(couch:item):
    body:
        achieve on_char(char, couch)
        # Return to the couch and sit

behavior __goal__():
    body:
        bind couch: item where:
            is_couch(couch) and id[couch]==198
        # Select the couch with ID 198

        bind television: item where:
            is_television(television) and id[television]==281
        # Select the television with ID 281

        bind remote_control: item where:
            is_remote_control(remote_control) and id[remote_control]==2124
        # Select the remote control with ID 2124

        find_remote(remote_control)
        turn_on_tv_with_remote(television, remote_control)
        return_to_couch(couch)

##############################
From agent.py-> find a plan in act()
obs(remote_control_2124, Locate the remote control)
##############################
From agent.py
obs(remote_control_2124, Locate the remote control)
Get this information:  remote_control_2124 is inside home_office_241. remote_control_2124 is close to character_240. remote_control_2124 is OFF.
##############################
From evaluation.py
cdl_dataset/dataset/Change_TV_channel/g3.txt
Checking k1
missed actions: 
missed action num: 0
##############################
