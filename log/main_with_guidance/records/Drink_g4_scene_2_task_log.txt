From agent.py
Reset goals: The sub-goals are: 
['1. Find a cup and fill it with milk.', '2. Heat the cup of milk in the microwave.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2074_around_cupboard_131(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(milk,cupboard_instance)
        else:
            exp(milk,cupboard_instance)
    eff:
        unknown[milk]=False
        close[milk,cupboard_instance]=True
        close[cupboard_instance,milk]=True
    

behavior find_cup_2006_around_kitchen_counter_132(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
def is_cup_and_milk_in_kitchen(cup:item):
    # Function to check if a cup in the kitchen and if milk is present
    symbol is_cup_and_milk_present = is_cup(cup) and exists milk: item : is_milk(milk) and inside(milk, kitchen)
    return is_cup_and_milk_present

behavior fill_cup_with_milk(cup: item, milk: item):
    body:
        achieve inside(milk, cup)
        # Fill the cup with milk

behavior __goal__():
    body:
        foreach cup: item:
            if is_cup(cup) and not visited(cup):
                observe(cup, "Check if the cup is suitable to fill with milk")

        if exists cup: item : is_cup_and_milk_in_kitchen(cup):
            bind cup: item where:
                is_cup_and_milk_in_kitchen(cup)
            bind milk: item where:
                is_milk(milk) and inside(milk, kitchen)
            fill_cup_with_milk(cup, milk)
        else:
            observe(kitchen, "Find a cup and check milk availability")

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'milk') at line 5866, column 61.
Expected one of: 
	* _NEWLINE
	* SEMICOLON

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_milk_2074_around_kitchen_counter_132(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(milk,kitchen_counter_instance)
        else:
            exp(milk,kitchen_counter_instance)
    eff:
        unknown[milk]=False
        close[milk,kitchen_counter_instance]=True
        close[kitchen_counter_instance,milk]=True
    

behavior find_cup_2087_around_kitchen_counter_132(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

behavior find_cup_2006_around_table_193(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==193
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(cup,table_instance)
        else:
            exp(cup,table_instance)
    eff:
        unknown[cup]=False
        close[cup,table_instance]=True
        close[table_instance,cup]=True
    

#goal_representation
 
def is_cup_and_milk_in_kitchen(cup: item):
    # Function to check if a cup is in the kitchen and if milk is present
    symbol is_cup_and_milk_present = is_cup(cup) and exists milk: item : is_milk(milk) and inside(milk, kitchen)
    return is_cup_and_milk_present

behavior fill_cup_with_milk(cup: item, milk: item):
    body:
        achieve inside(milk, cup)
        # Fill the cup with milk

behavior __goal__():
    body:
        foreach cup: item:
            if is_cup(cup) and not visited(cup):
                observe(cup, "Check if the cup is suitable to fill with milk")

        if exists cup: item : is_cup_and_milk_in_kitchen(cup):
            bind cup: item where:
                is_cup_and_milk_in_kitchen(cup)
            bind milk: item where:
                is_milk(milk) and inside(milk, kitchen)
            fill_cup_with_milk(cup, milk)
        else:
            observe(kitchen, "Find a cup and check milk availability")

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'milk') at line 5884, column 61.
Expected one of: 
	* _NEWLINE
	* SEMICOLON

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_milk_2074_around_cupboard_131(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(milk,cupboard_instance)
        else:
            exp(milk,cupboard_instance)
    eff:
        unknown[milk]=False
        close[milk,cupboard_instance]=True
        close[cupboard_instance,milk]=True
    

behavior find_cup_2006_around_cupboard_131(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

#goal_representation
 
def is_cup_and_milk_in_kitchen(cup: item):
    # Function to check if a cup is in the kitchen and if milk is present
    symbol is_cup_and_milk_present = is_cup(cup) and exists milk: item : is_milk(milk) and inside(milk, kitchen)
    return is_cup_and_milk_present

behavior fill_cup_with_milk(cup: item, milk: item):
    body:
        achieve inside(milk, cup)
        # Fill the cup with milk

behavior __goal__():
    body:
        foreach cup: item:
            if is_cup(cup) and not visited(cup):
                observe(cup, "Check if the cup is suitable to fill with milk")

        if exists cup: item : is_cup_and_milk_in_kitchen(cup):
            bind cup: item where:
                is_cup_and_milk_in_kitchen(cup)
            bind milk: item where:
                is_milk(milk) and inside(milk, kitchen)
            fill_cup_with_milk(cup, milk)
        else:
            observe(kitchen, "Find a cup and check milk availability")

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2074_around_cupboard_131(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(milk,cupboard_instance)
        else:
            exp(milk,cupboard_instance)
    eff:
        unknown[milk]=False
        close[milk,cupboard_instance]=True
        close[cupboard_instance,milk]=True
    

behavior find_cup_2088_around_kitchen_counter_132(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

#exp_behavior_end

#goal_representation
behavior find_cup(cup:item):
    body:
        if visited(cup):
            achieve close_char(char, cup)
        else:
            observe(cup, "Locate the cup")
            achieve close_char(char, cup)

behavior fill_cup_with_milk(cup:item, milk:item):
    body:
        achieve inside(milk, cup)
        
behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        find_cup(cup)

        bind milk: item where:
            is_milk(milk)
        fill_cup_with_milk(cup, milk)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior find_cup(cup:item):
    body:
        if visited(cup):
            achieve close_char(char, cup)
        else:
            observe(cup, "Locate the cup")
            achieve close_char(char, cup)

behavior fill_cup_with_milk(cup:item, milk:item):
    body:
        achieve inside(milk, cup)
        
behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        find_cup(cup)

        bind milk: item where:
            is_milk(milk)
        fill_cup_with_milk(cup, milk)
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(cup_2087, kitchen_counter_132)walk_executor(cup_2087)obs(cup_2087, Locate the cup)walk_executor(cupboard_131)open_executor(cupboard_131)exp(milk_2074, cupboard_131)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Find pot_54. Find tray_142. Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is no longer inside home_office_161.
##############################
From agent.py
exp(cup_2087, kitchen_counter_132)
Failed to find cup_2087 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(cup_2087, cupboard_131)walk_executor(cup_2087)obs(cup_2087, Locate the cup)walk_executor(cupboard_131)exp(milk_2074, cupboard_131)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(cupboard_131)
Robot is inside dining_room_1. Robot is close cupboard_131. Robot is no longer close kitchen_counter_132.
##############################
From agent.py
open_executor(cupboard_131)
Robot is inside dining_room_1. Robot is close cupboard_131. 
##############################
From agent.py
exp(cup_2087, cupboard_131)
Failed to find cup_2087 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(cup_2087, cupboard_130)walk_executor(cup_2087)obs(cup_2087, Locate the cup)walk_executor(sink_133)exp(milk_2074, sink_133)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(cupboard_130)
Find blender_2032. Find tea_bag_2017. Robot is inside dining_room_1. Robot is close blender_2032. Robot is close tea_bag_2017. Robot is close cupboard_130. Robot is no longer close cupboard_131.
##############################
From agent.py
exp(cup_2087, cupboard_130)
Failed to find cup_2087 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_147)open_executor(coffe_maker_147)exp(cup_2087, coffe_maker_147)walk_executor(cup_2087)obs(cup_2087, Locate the cup)walk_executor(freezer_140)switchoff_executor(freezer_140)open_executor(freezer_140)exp(milk_2074, freezer_140)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(coffe_maker_147)
Find oil_2102. Find pot_2093. Find fryingpan_2107. Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close coffe_maker_147. Robot is no longer close blender_2032.Robot is no longer close tea_bag_2017.Robot is no longer close cupboard_130.
##############################
From agent.py
open_executor(coffe_maker_147)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close coffe_maker_147. 
##############################
From agent.py
exp(cup_2087, coffe_maker_147)
Failed to find cup_2087 around coffe_maker_147. 
##############################
From agent.py-> find a plan in act()
walk_executor(toaster_144)exp(cup_2087, toaster_144)walk_executor(cup_2087)obs(cup_2087, Locate the cup)walk_executor(freezer_140)switchoff_executor(freezer_140)open_executor(freezer_140)exp(milk_2074, freezer_140)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(toaster_144)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close toaster_144. Robot is no longer close coffe_maker_147.
##############################
From agent.py
exp(cup_2087, toaster_144)
Failed to find cup_2087 around toaster_144. 
##############################
From agent.py-> find a plan in act()
walk_executor(microwave_149)open_executor(microwave_149)exp(cup_2087, microwave_149)walk_executor(cup_2087)obs(cup_2087, Locate the cup)walk_executor(freezer_140)switchoff_executor(freezer_140)open_executor(freezer_140)exp(milk_2074, freezer_140)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(microwave_149)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close microwave_149. Robot is no longer close toaster_144.Robot is no longer close kitchen_counter_129.
##############################
From agent.py
open_executor(microwave_149)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close microwave_149. 
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2087 ?
Answer: The cup_2087 is located on table_123 inside dining_room_1. Look for table_123 to find cup_2087 resting on its surface.
Re-decompose: None

##############################
From agent.py
Human Instruction: The cup_2087 is located on table_123 inside dining_room_1. Look for table_123 to find cup_2087 resting on its surface.

The actions you have taken:
Action 1: Walk to kitchen_counter_132.
Action 2: look for cup_2087 around kitchen_counter_132.
Action 3: Walk to cupboard_131.
Action 4: Open cupboard_131.
Action 5: look for cup_2087 around cupboard_131.
Action 6: Walk to cupboard_130.
Action 7: look for cup_2087 around cupboard_130.
Action 8: Walk to coffe_maker_147.
Action 9: Open coffe_maker_147.
Action 10: look for cup_2087 around coffe_maker_147.
Action 11: Walk to toaster_144.
Action 12: look for cup_2087 around toaster_144.
Action 13: Walk to microwave_149.
Action 14: Open microwave_149.

##############################
From agent.py
exp(cup_2087, microwave_149)
Failed to find cup_2087 around microwave_149. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_193)exp(cup_2087, table_193)walk_executor(cup_2087)obs(cup_2087, Locate the cup)walk_executor(sink_307)exp(milk_2074, sink_307)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(table_193)
Find drawing_196. Find mouse_2112. Find pillow_195. Find mat_201. Find laser_pointer_2025. Find dvd_player_2000. Find oil_2005. Find keyboard_2110. Robot is inside home_office_161. Robot is close table_193. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_132.Robot is no longer close microwave_149.
##############################
From agent.py
exp(cup_2087, table_193)
Failed to find cup_2087 around table_193. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(cup_2087, table_123)walk_executor(cup_2087)obs(cup_2087, Locate the cup)walk_executor(faucet_134)exp(milk_2074, faucet_134)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(table_123)
Find mat_114. Find shoes_2001. Find drawing_118. Find fork_2103. Find cup_2087. Find cup_2088. Find bowl_2095. Find mouse_2003. Find homework_2011. Find laptop_2015. Robot is inside dining_room_1. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer inside home_office_161.Robot is no longer close table_193.
##############################
From agent.py
exp(cup_2087, table_123)
Find cup_2087. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2087)obs(cup_2087, Locate the cup)walk_executor(faucet_134)exp(milk_2074, faucet_134)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(cup_2087)
Robot is inside dining_room_1. Robot is close table_123. Robot is close cup_2087. Robot is no longer close floor_17.Robot is no longer close mat_114.
##############################
From agent.py
obs(cup_2087, Locate the cup)
Get this information:  cup_2087 is close to table_123. cup_2087 is close to character_219. cup_2087 is on table_123. cup_2087 is inside dining_room_1.
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close table_123.Robot is no longer close cup_2087.
##############################
From agent.py
exp(milk_2074, faucet_134)
Failed to find milk_2074 around faucet_134. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2087)walk_executor(freezer_140)switchoff_executor(freezer_140)open_executor(freezer_140)exp(milk_2074, freezer_140)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(cup_2087)
Robot is inside dining_room_1. Robot is close table_123. Robot is close cup_2087. Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
walk_executor(freezer_140)
Find food_cereal_2048. Find food_cheese_2049. Find food_chicken_2050. Find food_dessert_2051. Find food_donut_2052. Find food_egg_2053. Find food_fish_2054. Find food_food_2055. Find food_fruit_2056. Find food_hamburger_2057. Find food_ice_cream_2058. Find food_jam_2059. Find food_kiwi_2060. Find food_lemon_2061. Find food_noodles_2062. Find food_oatmeal_2063. Find food_peanut_butter_2064. Find food_pizza_2065. Find food_potato_2066. Find food_rice_2067. Find food_salt_2068. Find food_snack_2069. Find food_sugar_2070. Find food_turkey_2071. Find food_vegetable_2072. Find dry_pasta_2073. Find milk_2074. Find sauce_2101. Find food_steak_2042. Find food_apple_2043. Find food_bacon_2044. Find food_banana_2045. Find food_cake_2046. Find food_carrot_2047. Find chair_138. Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close freezer_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Robot is no longer close table_123.Robot is no longer close cup_2087.
##############################
From agent.py
switchoff_executor(freezer_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close freezer_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
open_executor(freezer_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close freezer_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
exp(milk_2074, freezer_140)
Find milk_2074. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2087)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(cup_2087)
Robot is inside dining_room_1. Robot is close table_123. Robot is close cup_2087. Robot is no longer close food_cereal_2048.Robot is no longer close food_cheese_2049.Robot is no longer close food_chicken_2050.Robot is no longer close food_dessert_2051.Robot is no longer close food_donut_2052.Robot is no longer close food_egg_2053.Robot is no longer close food_fish_2054.Robot is no longer close food_food_2055.Robot is no longer close food_fruit_2056.Robot is no longer close food_hamburger_2057.Robot is no longer close food_ice_cream_2058.Robot is no longer close food_jam_2059.Robot is no longer close food_kiwi_2060.Robot is no longer close food_lemon_2061.Robot is no longer close food_noodles_2062.Robot is no longer close food_oatmeal_2063.Robot is no longer close food_peanut_butter_2064.Robot is no longer close food_pizza_2065.Robot is no longer close food_potato_2066.Robot is no longer close food_rice_2067.Robot is no longer close food_salt_2068.Robot is no longer close food_snack_2069.Robot is no longer close food_sugar_2070.Robot is no longer close food_turkey_2071.Robot is no longer close food_vegetable_2072.Robot is no longer close dry_pasta_2073.Robot is no longer close milk_2074.Robot is no longer close floor_22.Robot is no longer close sauce_2101.Robot is no longer close freezer_140.Robot is no longer close food_steak_2042.Robot is no longer close food_apple_2043.Robot is no longer close food_bacon_2044.Robot is no longer close food_banana_2045.Robot is no longer close food_cake_2046.Robot is no longer close food_carrot_2047.
##############################
From agent.py
walk_executor(milk_2074)
Robot is inside dining_room_1. Robot is close milk_2074. Robot is close freezer_140. Robot is no longer close table_123.Robot is no longer close cup_2087.
##############################
From agent.py
grab_executor(milk_2074)
Robot is inside dining_room_1. Robot is close milk_2074. Robot is close freezer_140. Grabbing milk_2074 by right hand. 
##############################
From agent.py
walk_executor(cup_2087)
Robot is inside dining_room_1. Robot is close milk_2074. Robot is close table_123. Robot is close cup_2087. Robot is no longer close freezer_140.
##############################
From agent.py
putin_executor(milk_2074, cup_2087)
Robot is inside dining_room_1. Robot is close milk_2074. Robot is close table_123. Robot is close cup_2087. milk_2074 released by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2088_around_cup_2088(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2088
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(cup,cup_instance)
        else:
            exp(cup,cup_instance)
    eff:
        unknown[cup]=False
        close[cup,cup_instance]=True
        close[cup_instance,cup]=True
    

behavior find_cup_2089_around_table_127(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(cup,table_instance)
        else:
            exp(cup,table_instance)
    eff:
        unknown[cup]=False
        close[cup,table_instance]=True
        close[table_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior locate_microwave(microwave:item):
    body:
        observe(microwave, "Find the microwave")

behavior heat_milk_in_microwave(cup:item, microwave:item):
    body:
        achieve inside(cup, microwave)
        # Place the cup inside the microwave
        achieve closed(microwave)
        # Close the microwave door to ensure proper heating
        achieve is_on(microwave)
        # Turn on the microwave to start heating

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup] == 2087
        # Select the milk cup with ID 2087
        
        if exists microwave: item : is_microwave(microwave) and close_char(char, microwave):
            # If we already know where the microwave is, proceed to use it
            bind microwave: item where:
                is_microwave(microwave) and close_char(char, microwave)
            heat_milk_in_microwave(cup, microwave)

        else:
            # If the microwave is not known, locate it first
            foreach microwave: item:
                if is_microwave(microwave) and not visited(microwave):
                    locate_microwave(microwave)
                    # Locate an unvisited microwave and proceed once found
                    heat_milk_in_microwave(cup, microwave)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior locate_microwave(microwave:item):
    body:
        observe(microwave, "Find the microwave")

behavior heat_milk_in_microwave(cup:item, microwave:item):
    body:
        achieve inside(cup, microwave)
        # Place the cup inside the microwave
        achieve closed(microwave)
        # Close the microwave door to ensure proper heating
        achieve is_on(microwave)
        # Turn on the microwave to start heating

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup] == 2087
        # Select the milk cup with ID 2087
        
        if exists microwave: item : is_microwave(microwave) and close_char(char, microwave):
            # If we already know where the microwave is, proceed to use it
            bind microwave: item where:
                is_microwave(microwave) and close_char(char, microwave)
            heat_milk_in_microwave(cup, microwave)

        else:
            # If the microwave is not known, locate it first
            foreach microwave: item:
                if is_microwave(microwave) and not visited(microwave):
                    locate_microwave(microwave)
                    # Locate an unvisited microwave and proceed once found
                    heat_milk_in_microwave(cup, microwave)

##############################
From agent.py-> find a plan in act()
walk_executor(microwave_149)obs(microwave_149, Find the microwave)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(microwave_149)putin_executor(cup_2087, microwave_149)close_executor(microwave_149)switchon_executor(microwave_149)
##############################
From agent.py
walk_executor(microwave_149)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close microwave_149. Robot is no longer close milk_2074.Robot is no longer close table_123.Robot is no longer close cup_2087.
##############################
From agent.py
obs(microwave_149, Find the microwave)
Get this information:  microwave_149 is inside dining_room_1. microwave_149 is close to kitchen_counter_128. microwave_149 is close to cupboard_130. microwave_149 is close to wall_2. microwave_149 is close to kitchen_counter_132. microwave_149 is close to sink_133. microwave_149 is close to faucet_134. microwave_149 is close to wall_6. microwave_149 is close to wall_172. microwave_149 is close to walllamp_45. microwave_149 is close to floor_15. microwave_149 is close to ceiling_27. microwave_149 is close to character_219. microwave_149 is on kitchen_counter_132. microwave_149 is PLUGGED_IN. microwave_149 is OFF. microwave_149 is OPEN. microwave_149 is CLEAN.
##############################
From agent.py
walk_executor(cup_2087)
Robot is inside dining_room_1. Robot is close table_123. Robot is close cup_2087. Robot is no longer close kitchen_counter_132.Robot is no longer close microwave_149.
##############################
From agent.py
grab_executor(cup_2087)
Robot is inside dining_room_1. Robot is close table_123. Robot is close cup_2087. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(microwave_149)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close microwave_149. Robot is no longer close table_123.
##############################
From agent.py
putin_executor(cup_2087, microwave_149)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close microwave_149. cup_2087 released by right hand. 
##############################
From agent.py
close_executor(microwave_149)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close microwave_149. 
##############################
From agent.py
switchon_executor(microwave_149)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close microwave_149. 
##############################
From evaluation.py
cdl_dataset/dataset/Drink/g4.txt
Checking k1
missed actions: 
missed action num: 0
##############################
