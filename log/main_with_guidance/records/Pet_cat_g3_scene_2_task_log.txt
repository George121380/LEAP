From agent.py
Reset goals: The sub-goals are: 
['1. Fill a bowl with water.', '2. Place the bowl on the table in the home office.', '3. Find your cat and put it on the table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2096_around_table_193(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==193
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(bowl,table_instance)
        else:
            exp(bowl,table_instance)
    eff:
        unknown[bowl]=False
        close[bowl,table_instance]=True
        close[table_instance,bowl]=True
    

behavior find_food_dessert_2051_around_cupboard_131(food_dessert:item):
    goal: not unknown(food_dessert)
    body:
        assert is_food_dessert(food_dessert)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_dessert,cupboard_instance)
        else:
            exp(food_dessert,cupboard_instance)
    eff:
        unknown[food_dessert]=False
        close[food_dessert,cupboard_instance]=True
        close[cupboard_instance,food_dessert]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl to fill with water

        achieve has_water(bowl)
        # Fill the bowl with water
#goal_representation_end

##############################
From agent.py->reset_goal
behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl to fill with water

        achieve has_water(bowl)
        # Fill the bowl with water
##############################
From agent.py-> find a plan in act()
walk_executor(table_193)exp(bowl_2095, table_193)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(table_193)
Find drawing_196. Find mouse_2112. Find pillow_195. Find mat_201. Find laser_pointer_2025. Find dvd_player_2000. Find oil_2005. Find keyboard_2110. Robot is inside home_office_161. Robot is close table_193. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(bowl_2095);grab_executor(bowl_2095);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 6
##############################
From agent.py
exp(bowl_2095, table_193)
Failed to find bowl_2095 around table_193. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(bowl_2095, cupboard_131)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(cupboard_131)
Find pot_54. Find tray_142. Robot is inside dining_room_1. Robot is close cupboard_131. Robot is no longer inside home_office_161.Robot is no longer close table_193.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(bowl_2095);grab_executor(bowl_2095);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 6
##############################
From agent.py
open_executor(cupboard_131)
Robot is inside dining_room_1. Robot is close cupboard_131. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(bowl_2095);grab_executor(bowl_2095);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 6
##############################
From agent.py
exp(bowl_2095, cupboard_131)
Failed to find bowl_2095 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_372)open_executor(bookshelf_372)exp(bowl_2095, bookshelf_372)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(bookshelf_372)
Find drawing_389. Find stamp_2031. Robot is inside bedroom_327. Robot is close floor_331. Robot is close bookshelf_372. Robot is no longer inside dining_room_1.Robot is no longer close cupboard_131.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(bowl_2095);grab_executor(bowl_2095);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 6
##############################
From agent.py
open_executor(bookshelf_372)
Find towel_rack_298. Find drawing_296. Robot is inside bedroom_327. Robot is close floor_331. Robot is close bookshelf_372. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(bowl_2095);grab_executor(bowl_2095);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 6
##############################
From agent.py
exp(bowl_2095, bookshelf_372)
Failed to find bowl_2095 around bookshelf_372. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_137)open_executor(bookshelf_137)exp(bowl_2095, bookshelf_137)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(bookshelf_137)
Find cup_2089. Find book_2092. Find drawing_118. Robot is inside dining_room_1. Robot is close floor_24. Robot is close bookshelf_137. Robot is close photoframe_102. Robot is no longer inside bedroom_327.Robot is no longer close floor_331.Robot is no longer close bookshelf_372.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(bowl_2095);grab_executor(bowl_2095);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 6
##############################
From agent.py
open_executor(bookshelf_137)
Find drawing_387. Robot is inside dining_room_1. Robot is close floor_24. Robot is close bookshelf_137. Robot is close photoframe_102. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(bowl_2095);grab_executor(bowl_2095);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 6
##############################
From agent.py
exp(bowl_2095, bookshelf_137)
Failed to find bowl_2095 around bookshelf_137. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(bowl_2095, kitchen_counter_132)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is no longer close floor_24.Robot is no longer close bookshelf_137.Robot is no longer close photoframe_102.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(bowl_2095);grab_executor(bowl_2095);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 6
##############################
From agent.py
exp(bowl_2095, kitchen_counter_132)
Failed to find bowl_2095 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(bowl_2095, kitchen_counter_128)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Find cutting_board_2080. Find food_orange_2008. Find spectacles_2106. Robot is inside dining_room_1. Robot is close kitchen_counter_128. Robot is close floor_15. Robot is no longer close kitchen_counter_132.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(bowl_2095);grab_executor(bowl_2095);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 6
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2095 ?
Answer: Go to dining_room_1 and locate table_123. Bowl_2095 is on top of table_123. Look for a bowl directly on the table surface.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_1 and locate table_123. Bowl_2095 is on top of table_123. Look for a bowl directly on the table surface.

The actions you have taken:
Action 1: Walk to table_193.
Action 2: look for bowl_2095 around table_193.
Action 3: Walk to cupboard_131.
Action 4: Open cupboard_131.
Action 5: look for bowl_2095 around cupboard_131.
Action 6: Walk to bookshelf_372.
Action 7: Open bookshelf_372.
Action 8: look for bowl_2095 around bookshelf_372.
Action 9: Walk to bookshelf_137.
Action 10: Open bookshelf_137.
Action 11: look for bowl_2095 around bookshelf_137.
Action 12: Walk to kitchen_counter_132.
Action 13: look for bowl_2095 around kitchen_counter_132.
Action 14: Walk to kitchen_counter_128.

##############################
From agent.py
exp(bowl_2095, kitchen_counter_128)
Failed to find bowl_2095 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_127)exp(bowl_2095, table_127)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(table_127)
Find mat_115. Find plate_2105. Find bowl_2097. Find console_2027. Find crayon_2030. Find napkin_2014. Find fork_2104. Find bowl_2096. Robot is inside dining_room_1. Robot is close mat_115. Robot is close floor_20. Robot is close table_127. Robot is no longer close kitchen_counter_128.Robot is no longer close floor_15.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(bowl_2095);grab_executor(bowl_2095);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 6
##############################
From agent.py
exp(bowl_2095, table_127)
Failed to find bowl_2095 around table_127. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2097)exp(bowl_2095, bowl_2097)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(bowl_2097)
Robot is inside dining_room_1. Robot is close table_127. Robot is close bowl_2097. Robot is no longer close mat_115.Robot is no longer close floor_20.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(bowl_2095);grab_executor(bowl_2095);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 6
##############################
From agent.py
exp(bowl_2095, bowl_2097)
Failed to find bowl_2095 around bowl_2097. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2096)exp(bowl_2095, bowl_2096)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(bowl_2096)
Robot is inside dining_room_1. Robot is close table_127. Robot is close bowl_2096. Robot is no longer close bowl_2097.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(bowl_2095);grab_executor(bowl_2095);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 6
##############################
From agent.py
exp(bowl_2095, bowl_2096)
Failed to find bowl_2095 around bowl_2096. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(bowl_2095, table_123)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(table_123)
Find mat_114. Find shoes_2001. Find fork_2103. Find cup_2087. Find cup_2088. Find bowl_2095. Find mouse_2003. Find homework_2011. Find laptop_2015. Robot is inside dining_room_1. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer close bowl_2096.Robot is no longer close table_127.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(bowl_2095);grab_executor(bowl_2095);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 6
##############################
From agent.py
exp(bowl_2095, table_123)
Find bowl_2095. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(bowl_2095)
Robot is inside dining_room_1. Robot is close table_123. Robot is close bowl_2095. Robot is no longer close floor_17.Robot is no longer close mat_114.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: grab_executor(bowl_2095);walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 5
##############################
From agent.py
grab_executor(bowl_2095)
Robot is inside dining_room_1. Robot is close table_123. Robot is close bowl_2095. Grabbing bowl_2095 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 4
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close bowl_2095. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close table_123.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: switchoff_executor(faucet_134);walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 3
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close bowl_2095. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: switchon_executor(faucet_134);switchoff_executor(faucet_134);walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 4
##############################
From agent.py
Human Instruction: You need to switch on the faucet to fill the bowl with water, as the current action only involved switching it off.

The actions you have taken:
Action 1: Walk to table_193.
Action 2: look for bowl_2095 around table_193.
Action 3: Walk to cupboard_131.
Action 4: Open cupboard_131.
Action 5: look for bowl_2095 around cupboard_131.
Action 6: Walk to bookshelf_372.
Action 7: Open bookshelf_372.
Action 8: look for bowl_2095 around bookshelf_372.
Action 9: Walk to bookshelf_137.
Action 10: Open bookshelf_137.
Action 11: look for bowl_2095 around bookshelf_137.
Action 12: Walk to kitchen_counter_132.
Action 13: look for bowl_2095 around kitchen_counter_132.
Action 14: Walk to kitchen_counter_128.
Action 15: look for bowl_2095 around kitchen_counter_128.
Action 16: Walk to table_127.
Action 17: look for bowl_2095 around table_127.
Action 18: Walk to bowl_2097.
Action 19: look for bowl_2095 around bowl_2097.
Action 20: Walk to bowl_2096.
Action 21: look for bowl_2095 around bowl_2096.
Action 22: Walk to table_123.
Action 23: look for bowl_2095 around table_123.
Action 24: Walk to bowl_2095.
Action 25: Grab bowl_2095.
Action 26: Walk to faucet_134.
Action 27: Switch off faucet_134.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_mat_386_around_mat_201(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind mat_instance:item where:
            is_mat(mat_instance) and id[mat_instance]==201
        achieve close_char(char,mat_instance)
        if can_open(mat_instance):
            achieve_once open(mat_instance)
            exp(mat,mat_instance)
        else:
            exp(mat,mat_instance)
    eff:
        unknown[mat]=False
        close[mat,mat_instance]=True
        close[mat_instance,mat]=True
    

behavior find_food_carrot_2047_around_kitchen_counter_129(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_carrot,kitchen_counter_instance)
        else:
            exp(food_carrot,kitchen_counter_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_carrot]=True
    

behavior find_pillow_370_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_bowl_with_water(bowl:item, faucet:item):
    body:
        achieve inside(bowl, faucet)
        # Ensure the bowl is positioned to receive water from the faucet
        
        achieve_once is_on(faucet)
        # Activate the faucet to fill the bowl

        achieve has_water(bowl)
        # Confirm the bowl has been filled with water

        achieve_once is_off(faucet)
        # Deactivate the faucet after the bowl is filled

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2095
        # Select the bowl with ID 2095

        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 134
        # Select the faucet with ID 134
        
        fill_bowl_with_water(bowl, faucet)
        # Perform the action of filling the bowl with water using the faucet

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_cleaning_solution_2098_around_bathroom_cabinet_305(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_bowl(bowl:item):
    body:
        if visited(bowl):
            achieve close_char(char, bowl)
        else:
            observe(bowl, "Locate the bowl")
            achieve close_char(char, bowl)

behavior fill_bowl_with_water(bowl:item):
    body:
        achieve has_water(bowl)
        # Fill the bowl with water

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        find_bowl(bowl)
        
        bind faucet: item where:
            is_faucet(faucet)
        # Ensure faucet status for water filling
        
        fill_bowl_with_water(bowl)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior find_bowl(bowl:item):
    body:
        if visited(bowl):
            achieve close_char(char, bowl)
        else:
            observe(bowl, "Locate the bowl")
            achieve close_char(char, bowl)

behavior fill_bowl_with_water(bowl:item):
    body:
        achieve has_water(bowl)
        # Fill the bowl with water

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        find_bowl(bowl)
        
        bind faucet: item where:
            is_faucet(faucet)
        # Ensure faucet status for water filling
        
        fill_bowl_with_water(bowl)

##############################
From agent.py-> find a plan in act()
obs(bowl_2095, Locate the bowl)switchon_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
obs(bowl_2095, Locate the bowl)
Get this information:  bowl_2095 is close to character_219. bowl_2095 is inside dining_room_1. bowl_2095 is DIRTY.
##############################
From agent.py
switchon_executor(faucet_134)
Robot is inside dining_room_1. Robot is close bowl_2095. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 2
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close bowl_2095. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 2
##############################
From agent.py
Human Instruction: You need to fill bowl_2095 with water by ensuring the faucet is switched on for a sufficient amount of time. The brief on Action 29 and Action 30 does not indicate the bowl was actually filled. Make sure the bowl gets enough water before continuing to the next task.

The actions you have taken:
Action 1: Walk to table_193.
Action 2: look for bowl_2095 around table_193.
Action 3: Walk to cupboard_131.
Action 4: Open cupboard_131.
Action 5: look for bowl_2095 around cupboard_131.
Action 6: Walk to bookshelf_372.
Action 7: Open bookshelf_372.
Action 8: look for bowl_2095 around bookshelf_372.
Action 9: Walk to bookshelf_137.
Action 10: Open bookshelf_137.
Action 11: look for bowl_2095 around bookshelf_137.
Action 12: Walk to kitchen_counter_132.
Action 13: look for bowl_2095 around kitchen_counter_132.
Action 14: Walk to kitchen_counter_128.
Action 15: look for bowl_2095 around kitchen_counter_128.
Action 16: Walk to table_127.
Action 17: look for bowl_2095 around table_127.
Action 18: Walk to bowl_2097.
Action 19: look for bowl_2095 around bowl_2097.
Action 20: Walk to bowl_2096.
Action 21: look for bowl_2095 around bowl_2096.
Action 22: Walk to table_123.
Action 23: look for bowl_2095 around table_123.
Action 24: Walk to bowl_2095.
Action 25: Grab bowl_2095.
Action 26: Walk to faucet_134.
Action 27: Switch off faucet_134.
Action 28: Observe around bowl_2095 with the question of Locate the bowl.
Action 29: Switch on faucet_134.
Action 30: Switch off faucet_134.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior fill_bowl_with_water(bowl:item, faucet:item):
    body:
        achieve close_char(char, bowl)
        # Move close to the bowl

        achieve has_water(bowl)
        # Ensure the bowl is filled with water

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2095
        # Select the bowl with ID 2095

        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 134
        # Select the faucet with ID 134

        fill_bowl_with_water(bowl, faucet)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_cleaning_solution_2098_around_sink_307(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(cleaning_solution,sink_instance)
        else:
            exp(cleaning_solution,sink_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,sink_instance]=True
        close[sink_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
behavior water_bowl(bowl:item, faucet:item):
    body:
        achieve close_char(char, bowl)
        # Ensure character is close to the bowl

        achieve close_char(char, faucet)
        # Ensure character is close to the faucet

        achieve_once is_on(faucet)
        # Turn on the faucet

        achieve has_water(bowl)
        # Ensure the bowl is filled with water

        achieve_once is_off(faucet)
        # Turn off the faucet after filling the bowl

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2095
        # Select the bowl with ID 2095

        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 134
        # Select the faucet with ID 134

        water_bowl(bowl, faucet)
        # Fill the selected bowl with water using the selected faucet
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior water_bowl(bowl:item, faucet:item):
    body:
        achieve close_char(char, bowl)
        # Ensure character is close to the bowl

        achieve close_char(char, faucet)
        # Ensure character is close to the faucet

        achieve_once is_on(faucet)
        # Turn on the faucet

        achieve has_water(bowl)
        # Ensure the bowl is filled with water

        achieve_once is_off(faucet)
        # Turn off the faucet after filling the bowl

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2095
        # Select the bowl with ID 2095

        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 134
        # Select the faucet with ID 134

        water_bowl(bowl, faucet)
        # Fill the selected bowl with water using the selected faucet
##############################
From agent.py-> find a plan in act()
switchon_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
switchon_executor(faucet_134)
Robot is inside dining_room_1. Robot is close bowl_2095. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 2
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close bowl_2095. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: walk_executor(table_193);put_executor(bowl_2095, table_193);
missed action num: 2
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_dessert_2051_around_kitchen_counter_129(food_dessert:item):
    goal: not unknown(food_dessert)
    body:
        assert is_food_dessert(food_dessert)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_dessert,kitchen_counter_instance)
        else:
            exp(food_dessert,kitchen_counter_instance)
    eff:
        unknown[food_dessert]=False
        close[food_dessert,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_dessert]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_food_vegetable_2072_around_kitchen_counter_129(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_vegetable,kitchen_counter_instance)
        else:
            exp(food_vegetable,kitchen_counter_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_vegetable]=True
    

#exp_behavior_end

#goal_representation
behavior place_bowl_on_table(bowl:item, table:item):
    body:
        achieve on(bowl, table)
        # Place the bowl on the table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2095
        # Select the bowl with ID 2095

        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table inside the home office

        place_bowl_on_table(bowl, table)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior place_bowl_on_table(bowl:item, table:item):
    body:
        achieve on(bowl, table)
        # Place the bowl on the table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2095
        # Select the bowl with ID 2095

        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table inside the home office

        place_bowl_on_table(bowl, table)
##############################
From agent.py-> find a plan in act()
walk_executor(table_193)put_executor(bowl_2095, table_193)
##############################
From agent.py
walk_executor(table_193)
Robot is inside home_office_161. Robot is close bowl_2095. Robot is close table_193. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: put_executor(bowl_2095, table_193);
missed action num: 1
##############################
From agent.py
put_executor(bowl_2095, table_193)
Robot is inside home_office_161. Robot is close bowl_2095. Robot is close table_193. bowl_2095 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k1
missed actions: 
missed action num: 0
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k2
missed actions: walk_executor(cat_2082);grab_executor(cat_2082);walk_executor(table_193);put_executor(cat_2082, table_193);
missed action num: 4
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_374_around_desk_375(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==375
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
def is_cat_found(cat: item):
    # Determine if the cat has been observed or is known to be in a specific location
    symbol found = visited(cat)
    return found

behavior find_cat(cat:item):
    body:
        if is_cat_found(cat):
            # If the cat is already found, ensure the character is close to it
            achieve close_char(char, cat)
        else:
            # If the cat is not found, observe all unvisited items that could be the cat to locate it
            foreach item: item:
                if is_cat(item) and not visited(item):
                    observe(item, "Locate the cat")

behavior place_cat_on_table(cat:item, table:item):
    body:
        achieve on(cat, table)
        # Place the cat on the table

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat)
        find_cat(cat)

        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table inside the home office

        place_cat_on_table(cat, table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_cat_found(cat: item):
    # Determine if the cat has been observed or is known to be in a specific location
    symbol found = visited(cat)
    return found

behavior find_cat(cat:item):
    body:
        if is_cat_found(cat):
            # If the cat is already found, ensure the character is close to it
            achieve close_char(char, cat)
        else:
            # If the cat is not found, observe all unvisited items that could be the cat to locate it
            foreach item: item:
                if is_cat(item) and not visited(item):
                    observe(item, "Locate the cat")

behavior place_cat_on_table(cat:item, table:item):
    body:
        achieve on(cat, table)
        # Place the cat on the table

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat)
        find_cat(cat)

        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table inside the home office

        place_cat_on_table(cat, table)

##############################
From agent.py-> find a plan in act()
walk_executor(cat_2082)obs(cat_2082, Locate the cat)grab_executor(cat_2082)walk_executor(table_193)put_executor(cat_2082, table_193)
##############################
From agent.py
walk_executor(cat_2082)
Robot is inside home_office_161. Robot is close couch_192. Robot is close cat_2082. Robot is no longer close table_193.Robot is no longer close bowl_2095.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k2
missed actions: grab_executor(cat_2082);walk_executor(table_193);put_executor(cat_2082, table_193);
missed action num: 3
##############################
From agent.py
obs(cat_2082, Locate the cat)
Get this information:  cat_2082 is inside home_office_161. cat_2082 is close to couch_192. cat_2082 is close to character_219. cat_2082 is on couch_192.
##############################
From agent.py
grab_executor(cat_2082)
Robot is inside home_office_161. Robot is close couch_192. Robot is close cat_2082. Grabbing cat_2082 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k2
missed actions: walk_executor(table_193);put_executor(cat_2082, table_193);
missed action num: 2
##############################
From agent.py
walk_executor(table_193)
Robot is inside home_office_161. Robot is close cat_2082. Robot is close table_193. Robot is no longer close couch_192.
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k2
missed actions: put_executor(cat_2082, table_193);
missed action num: 1
##############################
From agent.py
put_executor(cat_2082, table_193)
Robot is inside home_office_161. Robot is close cat_2082. Robot is close table_193. cat_2082 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Pet_cat/g3.txt
Checking k2
missed actions: 
missed action num: 0
##############################
