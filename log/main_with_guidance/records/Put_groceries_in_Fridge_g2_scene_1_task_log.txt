From agent.py
Reset goals: The sub-goals are: 
['1. Wash the fish.', '2. Put the milk, turkey, eggs, fish, and chicken on the table in the dining room.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_food_2064_around_fridge_126(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_food,fridge_instance)
        else:
            exp(food_food,fridge_instance)
    eff:
        unknown[food_food]=False
        close[food_food,fridge_instance]=True
        close[fridge_instance,food_food]=True
    

behavior find_food_fish_2093_around_fridge_126(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_fish,fridge_instance)
        else:
            exp(food_fish,fridge_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,fridge_instance]=True
        close[fridge_instance,food_fish]=True
    

behavior find_cleaning_solution_2143_around_bathroom_cabinet_17(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

behavior find_soap_2010_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_the_fish(fish:item):
    body:
        achieve dirty(fish)
        wash(fish)
        achieve clean(fish)

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        wash_the_fish(fish)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2143_around_bathroom_cabinet_17(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

behavior find_soap_2010_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_food_fish_2093_around_fridge_126(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_fish,fridge_instance)
        else:
            exp(food_fish,fridge_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,fridge_instance]=True
        close[fridge_instance,food_fish]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_the_fish(fish:item):
    body:
        achieve clean(fish)
        # Make the fish clean

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        # Select the fish item

        wash_the_fish(fish)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior wash_the_fish(fish:item):
    body:
        achieve clean(fish)
        # Make the fish clean

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        # Select the fish item

        wash_the_fish(fish)

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_fish_2093, fridge_126)walk_executor(food_fish_2093)wash_executor(food_fish_2093)
##############################
From agent.py
walk_executor(fridge_126)
Find food_onion_2048. Find food_food_2046. Find food_food_2073. Find food_steak_2080. Find food_apple_2081. Find food_bacon_2082. Find food_banana_2083. Find food_cake_2085. Find food_carrot_2086. Find food_cereal_2087. Find food_cheese_2088. Find food_chicken_2089. Find food_dessert_2090. Find food_donut_2091. Find food_egg_2092. Find food_fish_2093. Find food_food_2094. Find food_fruit_2095. Find food_hamburger_2096. Find food_ice_cream_2097. Find food_jam_2098. Find food_kiwi_2099. Find food_lemon_2100. Find food_noodles_2101. Find food_oatmeal_2102. Find food_orange_2103. Find food_onion_2104. Find food_peanut_butter_2105. Find food_pizza_2106. Find food_potato_2107. Find food_rice_2108. Find food_salt_2109. Find food_snack_2110. Find food_sugar_2111. Find food_turkey_2112. Find food_vegetable_2113. Find food_food_2001. Find sauce_2148. Find basket_for_clothes_2078. Find food_food_1000. Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: switchoff_executor(fridge_126);open_executor(fridge_126);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 5
##############################
From agent.py
switchoff_executor(fridge_126)
Find keyboard_211. Find mouse_213. Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: open_executor(fridge_126);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
open_executor(fridge_126)
Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 3
##############################
From agent.py
exp(food_fish_2093, fridge_126)
Find food_fish_2093. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Wash the fish.', '2. Find the milk, turkey, eggs, and chicken.', '3. Put the milk, turkey, eggs, fish, and chicken on the table in the dining room.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2143_around_bathroom_cabinet_17(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

behavior find_soap_2125_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_food_turkey_2112_around_cupboard_118(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_turkey,cupboard_instance)
        else:
            exp(food_turkey,cupboard_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,cupboard_instance]=True
        close[cupboard_instance,food_turkey]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_fish(fish:item):
    body:
        achieve clean(fish)
        # Ensure the fish is clean after washing

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish) and dirty(fish)
        # Select the fish that is dirty and needs to be washed
        
        wash_fish(fish)
        # Perform the wash operation on the dirty fish

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2010_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_cleaning_solution_2143_around_bathroom_cabinet_17(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

behavior find_food_food_1000_around_food_food_1000(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==1000
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        # Select the fish item to be washed
        
        achieve dirty(fish)
        # Ensure the initial state of the fish is dirty

        wash(fish)
        # Wash the fish until it is clean
        
        achieve clean(fish)
        # Ensure the final state of the fish is clean

#goal_representation_end

##############################
From agent.py->reset_goal
Failed to generate the goal representation
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "1. wash the fish." ?
Answer: Wash the fish at first.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2037_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_cleaning_solution_2143_around_bathroom_cabinet_17(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

behavior find_soap_2126_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_rag_2052_around_sink_120(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(rag,sink_instance)
        else:
            exp(rag,sink_instance)
    eff:
        unknown[rag]=False
        close[rag,sink_instance]=True
        close[sink_instance,rag]=True
    

#exp_behavior_end

#goal_representation

behavior wash_fish(fish:item):
    body:
        achieve clean(fish)
        # Ensure the fish is clean

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish) and id[fish]==2093
        # Select the fish with ID 2093

        wash_fish(fish)
        # Wash the fish

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2143_around_sink_120(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(cleaning_solution,sink_instance)
        else:
            exp(cleaning_solution,sink_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,sink_instance]=True
        close[sink_instance,cleaning_solution]=True
    

behavior find_soap_2126_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_rag_2025_around_sink_120(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(rag,sink_instance)
        else:
            exp(rag,sink_instance)
    eff:
        unknown[rag]=False
        close[rag,sink_instance]=True
        close[sink_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_fish(fish:item):
    body:
        achieve dirty(fish)
        wash(fish)
        scrub(fish)
        rinse(fish)

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish) and dirty(fish)
        # Select the fish that is dirty

        wash_fish(fish)
        # Wash the fish

#goal_representation_end

##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Wash the fish.', '2. Put the milk, turkey, eggs, fish, and chicken on the table in the dining room.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2122_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_knife_2037_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_food_food_2094_around_cupboard_117(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_food,cupboard_instance)
        else:
            exp(food_food,cupboard_instance)
    eff:
        unknown[food_food]=False
        close[food_food,cupboard_instance]=True
        close[cupboard_instance,food_food]=True
    

behavior find_cleaning_solution_2143_around_sink_120(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(cleaning_solution,sink_instance)
        else:
            exp(cleaning_solution,sink_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,sink_instance]=True
        close[sink_instance,cleaning_solution]=True
    

behavior find_rag_2052_around_sink_120(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(rag,sink_instance)
        else:
            exp(rag,sink_instance)
    eff:
        unknown[rag]=False
        close[rag,sink_instance]=True
        close[sink_instance,rag]=True
    

behavior find_bowl_2141_around_sink_120(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(bowl,sink_instance)
        else:
            exp(bowl,sink_instance)
    eff:
        unknown[bowl]=False
        close[bowl,sink_instance]=True
        close[sink_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_the_fish(fish:item):
    body:
        observe(fish, "Ensure it is dirty and needs washing")
        wash(fish)
        # Wash the fish

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        # Select the fish item

        achieve dirty(fish)
        # Ensure the fish is dirty before washing

        wash_the_fish(fish)
        # Wash the designated fish item

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2035_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_cleaning_solution_2143_around_sink_120(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(cleaning_solution,sink_instance)
        else:
            exp(cleaning_solution,sink_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,sink_instance]=True
        close[sink_instance,cleaning_solution]=True
    

behavior find_food_food_1000_around_food_food_1000(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==1000
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
 
def is_food_fish_clean(fish:item):
    # Determine if the fish is clean
    symbol fish_clean = clean(fish)
    return fish_clean

behavior wash_fish(fish:item):
    body:
        achieve dirty(fish)
        wash(fish)
        achieve clean(fish)

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        # Select the fish item

        if not is_food_fish_clean(fish):
            wash_fish(fish)

#goal_representation_end

##############################
From agent.py->reset_goal
Failed to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Wash the fish.', '2. Put the milk, turkey, eggs, fish, and chicken on the table in the dining room.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2037_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_food_food_2021_around_food_food_1000(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==1000
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

behavior find_soap_2125_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_detergent_2155_around_sink_120(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(detergent,sink_instance)
        else:
            exp(detergent,sink_instance)
    eff:
        unknown[detergent]=False
        close[detergent,sink_instance]=True
        close[sink_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior wash_fish(fish:item):
    body:
        wash(fish)
        # Wash the fish item

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        # Select the fish item

        wash_fish(fish)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior wash_fish(fish:item):
    body:
        wash(fish)
        # Wash the fish item

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        # Select the fish item

        wash_fish(fish)
##############################
From agent.py-> find a plan in act()
wash_executor(food_fish_2093)
##############################
From agent.py
wash_executor(food_fish_2093)
Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 3
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2037_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_knife_2035_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_food_food_1000_around_food_food_1000(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==1000
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

behavior find_milk_2115_around_cupboard_117(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(milk,cupboard_instance)
        else:
            exp(milk,cupboard_instance)
    eff:
        unknown[milk]=False
        close[milk,cupboard_instance]=True
        close[cupboard_instance,milk]=True
    

behavior find_food_food_2064_around_cupboard_118(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_food,cupboard_instance)
        else:
            exp(food_food,cupboard_instance)
    eff:
        unknown[food_food]=False
        close[food_food,cupboard_instance]=True
        close[cupboard_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
behavior place_item_on_table(item:item, table:item):
    body:
        achieve on(item, table)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)

        bind table: item where:
            is_table(table) and inside(table, dining_room)

        bind milk: item where:
            is_milk(milk)

        bind turkey: item where:
            is_food_turkey(turkey)

        bind egg: item where:
            is_food_egg(egg)

        bind fish: item where:
            is_food_fish(fish)

        bind chicken: item where:
            is_food_chicken(chicken)

        place_item_on_table(milk, table)
        place_item_on_table(turkey, table)
        place_item_on_table(egg, table)
        place_item_on_table(fish, table)
        place_item_on_table(chicken, table)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior place_item_on_table(item:item, table:item):
    body:
        achieve on(item, table)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)

        bind table: item where:
            is_table(table) and inside(table, dining_room)

        bind milk: item where:
            is_milk(milk)

        bind turkey: item where:
            is_food_turkey(turkey)

        bind egg: item where:
            is_food_egg(egg)

        bind fish: item where:
            is_food_fish(fish)

        bind chicken: item where:
            is_food_chicken(chicken)

        place_item_on_table(milk, table)
        place_item_on_table(turkey, table)
        place_item_on_table(egg, table)
        place_item_on_table(fish, table)
        place_item_on_table(chicken, table)
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(milk_2115, cupboard_117)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(table_114)put_executor(milk_2115, table_114)walk_executor(food_turkey_2112)grab_executor(food_turkey_2112)walk_executor(table_114)put_executor(food_turkey_2112, table_114)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(food_egg_2092, table_114)walk_executor(food_fish_2093)grab_executor(food_fish_2093)walk_executor(table_114)put_executor(food_fish_2093, table_114)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(table_114)put_executor(food_chicken_2089, table_114)
##############################
From agent.py
walk_executor(cupboard_117)
Find coffee_filter_2053. Find tray_128. Find pot_78. Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close wall_67. Robot is close cupboard_117. Robot is no longer close food_onion_2048.Robot is no longer close food_food_2046.Robot is no longer close food_food_2073.Robot is no longer close food_steak_2080.Robot is no longer close food_apple_2081.Robot is no longer close food_bacon_2082.Robot is no longer close food_banana_2083.Robot is no longer close food_cake_2085.Robot is no longer close food_carrot_2086.Robot is no longer close food_cereal_2087.Robot is no longer close food_cheese_2088.Robot is no longer close food_chicken_2089.Robot is no longer close food_dessert_2090.Robot is no longer close food_donut_2091.Robot is no longer close food_egg_2092.Robot is no longer close food_fish_2093.Robot is no longer close food_food_2094.Robot is no longer close food_fruit_2095.Robot is no longer close food_hamburger_2096.Robot is no longer close food_ice_cream_2097.Robot is no longer close food_jam_2098.Robot is no longer close food_kiwi_2099.Robot is no longer close food_lemon_2100.Robot is no longer close food_noodles_2101.Robot is no longer close food_oatmeal_2102.Robot is no longer close food_orange_2103.Robot is no longer close food_onion_2104.Robot is no longer close food_peanut_butter_2105.Robot is no longer close food_pizza_2106.Robot is no longer close food_potato_2107.Robot is no longer close food_rice_2108.Robot is no longer close food_salt_2109.Robot is no longer close food_snack_2110.Robot is no longer close food_sugar_2111.Robot is no longer close food_turkey_2112.Robot is no longer close food_vegetable_2113.Robot is no longer close food_food_2001.Robot is no longer close floor_44.Robot is no longer close sauce_2148.Robot is no longer close fridge_126.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
exp(milk_2115, cupboard_117)
Failed to find milk_2115 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_129)open_executor(dishwasher_129)exp(milk_2115, dishwasher_129)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(table_114)put_executor(milk_2115, table_114)walk_executor(food_turkey_2112)grab_executor(food_turkey_2112)walk_executor(table_114)put_executor(food_turkey_2112, table_114)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(food_egg_2092, table_114)walk_executor(food_fish_2093)grab_executor(food_fish_2093)walk_executor(table_114)put_executor(food_fish_2093, table_114)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(table_114)put_executor(food_chicken_2089, table_114)
##############################
From agent.py
walk_executor(dishwasher_129)
Find detergent_2011. Find measuring_cup_2012. Robot is inside dining_room_41. Robot is close dishwasher_129. Robot is close detergent_2011. Robot is close measuring_cup_2012. Robot is no longer close coffee_filter_2053.Robot is no longer close wall_67.Robot is no longer close cupboard_117.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
open_executor(dishwasher_129)
Robot is inside dining_room_41. Robot is close dishwasher_129. Robot is close detergent_2011. Robot is close measuring_cup_2012. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
exp(milk_2115, dishwasher_129)
Failed to find milk_2115 around dishwasher_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(milk_2115, cupboard_118)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(table_114)put_executor(milk_2115, table_114)walk_executor(food_turkey_2112)grab_executor(food_turkey_2112)walk_executor(table_114)put_executor(food_turkey_2112, table_114)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(food_egg_2092, table_114)walk_executor(food_fish_2093)grab_executor(food_fish_2093)walk_executor(table_114)put_executor(food_fish_2093, table_114)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(table_114)put_executor(food_chicken_2089, table_114)
##############################
From agent.py
walk_executor(cupboard_118)
Find tea_2066. Find knife_2037. Find food_peanut_butter_2077. Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. Robot is no longer close dishwasher_129.Robot is no longer close detergent_2011.Robot is no longer close measuring_cup_2012.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
open_executor(cupboard_118)
Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
exp(milk_2115, cupboard_118)
Failed to find milk_2115 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(milk_2115, kitchen_counter_119)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(table_114)put_executor(milk_2115, table_114)walk_executor(food_turkey_2112)grab_executor(food_turkey_2112)walk_executor(table_114)put_executor(food_turkey_2112, table_114)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(food_egg_2092, table_114)walk_executor(food_fish_2093)grab_executor(food_fish_2093)walk_executor(table_114)put_executor(food_fish_2093, table_114)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(table_114)put_executor(food_chicken_2089, table_114)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Find pot_2138. Find bowl_2141. Find plate_2152. Find cutting_board_2123. Find food_salt_2041. Find fork_2150. Find bowl_2140. Find bowl_2142. Find fork_2151. Robot is inside dining_room_41. Robot is close kitchen_counter_119. Robot is no longer close wall_68.Robot is no longer close tea_2066.Robot is no longer close knife_2037.Robot is no longer close cupboard_118.Robot is no longer close food_peanut_butter_2077.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
exp(milk_2115, kitchen_counter_119)
Failed to find milk_2115 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(milk_2115, kitchen_counter_123)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(table_114)put_executor(milk_2115, table_114)walk_executor(food_turkey_2112)grab_executor(food_turkey_2112)walk_executor(table_114)put_executor(food_turkey_2112, table_114)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(food_egg_2092, table_114)walk_executor(food_fish_2093)grab_executor(food_fish_2093)walk_executor(table_114)put_executor(food_fish_2093, table_114)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(table_114)put_executor(food_chicken_2089, table_114)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Find oil_2149. Find knife_2035. Find food_kiwi_2054. Find food_orange_2027. Find tray_2068. Robot is inside dining_room_41. Robot is close kitchen_counter_123. Robot is close floor_45. Robot is no longer close kitchen_counter_119.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
exp(milk_2115, kitchen_counter_123)
Failed to find milk_2115 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(milk_2115, kitchen_counter_122)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(table_114)put_executor(milk_2115, table_114)walk_executor(food_turkey_2112)grab_executor(food_turkey_2112)walk_executor(table_114)put_executor(food_turkey_2112, table_114)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(food_egg_2092, table_114)walk_executor(food_fish_2093)grab_executor(food_fish_2093)walk_executor(table_114)put_executor(food_fish_2093, table_114)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(table_114)put_executor(food_chicken_2089, table_114)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Find spectacles_2153. Find fryingpan_2154. Robot is inside dining_room_41. Robot is close kitchen_counter_122. Robot is no longer close kitchen_counter_123.Robot is no longer close floor_45.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find milk_2115 ?
Answer: Go to dining_room_41. Locate table_114 in the room. milk_2115 is inside table_114. Retrieve milk_2115 from inside table_114.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_41. Locate table_114 in the room. milk_2115 is inside table_114. Retrieve milk_2115 from inside table_114.

The actions you have taken:
Action 1: Walk to fridge_126.
Action 2: Switch off fridge_126.
Action 3: Open fridge_126.
Action 4: look for food_fish_2093 around fridge_126.
Action 5: Wash food_fish_2093.
Action 6: Walk to cupboard_117.
Action 7: look for milk_2115 around cupboard_117.
Action 8: Walk to dishwasher_129.
Action 9: Open dishwasher_129.
Action 10: look for milk_2115 around dishwasher_129.
Action 11: Walk to cupboard_118.
Action 12: Open cupboard_118.
Action 13: look for milk_2115 around cupboard_118.
Action 14: Walk to kitchen_counter_119.
Action 15: look for milk_2115 around kitchen_counter_119.
Action 16: Walk to kitchen_counter_123.
Action 17: look for milk_2115 around kitchen_counter_123.
Action 18: Walk to kitchen_counter_122.

##############################
From agent.py
exp(milk_2115, kitchen_counter_122)
Failed to find milk_2115 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(milk_2115, table_114)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(table_114)put_executor(milk_2115, table_114)walk_executor(food_turkey_2112)grab_executor(food_turkey_2112)walk_executor(table_114)put_executor(food_turkey_2112, table_114)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(food_egg_2092, table_114)walk_executor(food_fish_2093)grab_executor(food_fish_2093)walk_executor(table_114)put_executor(food_fish_2093, table_114)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(table_114)put_executor(food_chicken_2089, table_114)
##############################
From agent.py
walk_executor(table_114)
Find mat_102. Find dry_pasta_2114. Find food_food_2021. Find drawing_110. Find drawing_111. Find knife_2122. Find cup_2133. Find table_cloth_2005. Find food_bread_2084. Find pillow_104. Find cup_2049. Find box_2038. Find clothes_hat_2117. Find clothes_gloves_2118. Find milk_2115. Find pillow_103. Find pillow_105. Find pillow_106. Find lighter_2004. Find lighter_2039. Find cup_2134. Find check_2058. Find cup_2132. Robot is inside dining_room_41. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close kitchen_counter_122.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
exp(milk_2115, table_114)
Find milk_2115. 
##############################
From agent.py-> find a plan in act()
walk_executor(milk_2115)grab_executor(milk_2115)put_executor(milk_2115, table_114)walk_executor(food_turkey_2112)grab_executor(food_turkey_2112)walk_executor(table_114)put_executor(food_turkey_2112, table_114)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(food_egg_2092, table_114)walk_executor(food_fish_2093)grab_executor(food_fish_2093)walk_executor(table_114)put_executor(food_fish_2093, table_114)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(table_114)put_executor(food_chicken_2089, table_114)
##############################
From agent.py
walk_executor(milk_2115)
Robot is inside dining_room_41. Robot is close table_114. Robot is close milk_2115. Robot is no longer close mat_102.Robot is no longer close floor_47.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
grab_executor(milk_2115)
Robot is inside dining_room_41. Robot is close table_114. Robot is close milk_2115. Grabbing milk_2115 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
put_executor(milk_2115, table_114)
Robot is inside dining_room_41. Robot is close table_114. Robot is close milk_2115. milk_2115 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
walk_executor(food_turkey_2112)
Robot is inside dining_room_41. Robot is close food_turkey_2112. Robot is close fridge_126. Robot is no longer close table_114.Robot is no longer close milk_2115.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
grab_executor(food_turkey_2112)
Robot is inside dining_room_41. Robot is close food_turkey_2112. Robot is close fridge_126. Grabbing food_turkey_2112 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
walk_executor(table_114)
Robot is inside dining_room_41. Robot is close food_turkey_2112. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close fridge_126.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
put_executor(food_turkey_2112, table_114)
Robot is inside dining_room_41. Robot is close food_turkey_2112. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. food_turkey_2112 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
walk_executor(food_egg_2092)
Robot is inside dining_room_41. Robot is close food_egg_2092. Robot is close fridge_126. Robot is no longer close food_turkey_2112.Robot is no longer close table_114.Robot is no longer close mat_102.Robot is no longer close floor_47.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
grab_executor(food_egg_2092)
Robot is inside dining_room_41. Robot is close food_egg_2092. Robot is close fridge_126. Grabbing food_egg_2092 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
walk_executor(table_114)
Robot is inside dining_room_41. Robot is close food_egg_2092. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close fridge_126.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
put_executor(food_egg_2092, table_114)
Robot is inside dining_room_41. Robot is close food_egg_2092. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. food_egg_2092 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
walk_executor(food_fish_2093)
Robot is inside dining_room_41. Robot is close food_fish_2093. Robot is close fridge_126. Robot is no longer close table_114.Robot is no longer close food_egg_2092.Robot is no longer close mat_102.Robot is no longer close floor_47.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 3
##############################
From agent.py
grab_executor(food_fish_2093)
Robot is inside dining_room_41. Robot is close food_fish_2093. Robot is close fridge_126. Grabbing food_fish_2093 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 2
##############################
From agent.py
walk_executor(table_114)
Robot is inside dining_room_41. Robot is close food_fish_2093. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close fridge_126.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 2
##############################
From agent.py
put_executor(food_fish_2093, table_114)
Robot is inside dining_room_41. Robot is close food_fish_2093. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. food_fish_2093 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 3
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close fridge_126. Robot is no longer close table_114.Robot is no longer close food_fish_2093.Robot is no longer close mat_102.Robot is no longer close floor_47.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
grab_executor(food_chicken_2089)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close fridge_126. Grabbing food_chicken_2089 by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
walk_executor(table_114)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close fridge_126.
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From agent.py
put_executor(food_chicken_2089, table_114)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. food_chicken_2089 released by right hand. 
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k1
missed actions: walk_executor(food_fish_2093);grab_executor(food_fish_2093);walk_executor(sink_120);putin_executor(food_fish_2093, sink_120);
missed action num: 4
##############################
From evaluation.py
cdl_dataset/dataset/Put_groceries_in_Fridge/g2.txt
Checking k2
missed actions: 
missed action num: 0
##############################
