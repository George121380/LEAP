From agent.py
Reset goals: The sub-goals are: 
['1. Cook the pasta and the chicken.', '2. Combine the cooked pasta and chicken on a plate.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_turkey_2071_around_fridge_140(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_turkey,fridge_instance)
        else:
            exp(food_turkey,fridge_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,fridge_instance]=True
        close[fridge_instance,food_turkey]=True
    

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_dry_pasta_2073_around_stove_2090(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(dry_pasta,stove_instance)
        else:
            exp(dry_pasta,stove_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,stove_instance]=True
        close[stove_instance,dry_pasta]=True
    

behavior find_pot_54_around_stove_2090(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(pot,stove_instance)
        else:
            exp(pot,stove_instance)
    eff:
        unknown[pot]=False
        close[pot,stove_instance]=True
        close[stove_instance,pot]=True
    

#exp_behavior_end

#goal_representation

def is_clean_fryingpan_on_stove(fryingpan: item, stove: item):
    # Determine if the fryingpan is clean and placed on the stove
    symbol on_stove_and_clean = on(fryingpan, stove) and clean(fryingpan)
    return on_stove_and_clean

behavior cook_chicken_in_fryingpan(chicken:item, stove:item, fryingpan:item):
    body:
        achieve cut(chicken)
        # Ensure that the chicken is cut before cooking

        achieve inside(chicken, fryingpan)
        # Place the cut chicken inside the clean fryingpan on the stove

behavior cook_pasta_in_pot(pasta:item, stove:item, pot:item):
    body:
        achieve has_water(pot)
        # Ensure there is water in the pot

        achieve inside(pasta, pot)
        # Place the dry pasta in the pot with water

        achieve is_on(stove)
        # Ensure the stove is turned on to boil the pasta

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove)
        # Select the stove

        bind fryingpan: item where:
            is_fryingpan(fryingpan) and is_clean_fryingpan_on_stove(fryingpan, stove)
        # Select a clean fryingpan that is already on the stove

        bind pot: item where:
            is_pot(pot) and on(pot, stove)
        # Select the pot on the stove

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken

        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select the dry pasta

        cook_chicken_in_fryingpan(chicken, stove, fryingpan)
        cook_pasta_in_pot(pasta, stove, pot)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2050_around_stove_2090(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(food_chicken,stove_instance)
        else:
            exp(food_chicken,stove_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,stove_instance]=True
        close[stove_instance,food_chicken]=True
    

behavior find_dry_pasta_2073_around_stove_2090(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(dry_pasta,stove_instance)
        else:
            exp(dry_pasta,stove_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,stove_instance]=True
        close[stove_instance,dry_pasta]=True
    

behavior find_food_turkey_2071_around_fridge_140(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_turkey,fridge_instance)
        else:
            exp(food_turkey,fridge_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,fridge_instance]=True
        close[fridge_instance,food_turkey]=True
    

behavior find_pot_2093_around_kitchen_counter_132(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(pot,kitchen_counter_instance)
        else:
            exp(pot,kitchen_counter_instance)
    eff:
        unknown[pot]=False
        close[pot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,pot]=True
    

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

#exp_behavior_end

#goal_representation
 
behavior boil_water(pot:item, stove:item):
    body:
        achieve has_water(pot)
        # Ensure pot has water
        achieve on(pot, stove)
        # Place pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil water

behavior cook_chicken(chicken:item, pan:item, stove:item):
    body:
        achieve_once inhand(chicken)
        # Temporarily hold the chicken to place it in the pan
        achieve inside(chicken, pan)
        # Place the chicken in the pan
        achieve on(pan, stove)
        # Place the pan on the stove
        achieve is_on(stove)
        # Turn on the stove to cook chicken

behavior cook_pasta(dry_pasta:item, pot:item):
    body:
        achieve inside(dry_pasta, pot)
        # Place the dry pasta into the boiling water in the pot

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken

        bind pan: item where:
            is_fryingpan(pan)
        # Select the frying pan

        bind dry_pasta: item where:
            is_dry_pasta(dry_pasta)
        # Select the dry pasta

        boil_water(pot, stove)
        cook_chicken(chicken, pan, stove)
        cook_pasta(dry_pasta, pot)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior boil_water(pot:item, stove:item):
    body:
        achieve has_water(pot)
        # Ensure pot has water
        achieve on(pot, stove)
        # Place pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil water

behavior cook_chicken(chicken:item, pan:item, stove:item):
    body:
        achieve_once inhand(chicken)
        # Temporarily hold the chicken to place it in the pan
        achieve inside(chicken, pan)
        # Place the chicken in the pan
        achieve on(pan, stove)
        # Place the pan on the stove
        achieve is_on(stove)
        # Turn on the stove to cook chicken

behavior cook_pasta(dry_pasta:item, pot:item):
    body:
        achieve inside(dry_pasta, pot)
        # Place the dry pasta into the boiling water in the pot

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken

        bind pan: item where:
            is_fryingpan(pan)
        # Select the frying pan

        bind dry_pasta: item where:
            is_dry_pasta(dry_pasta)
        # Select the dry pasta

        boil_water(pot, stove)
        cook_chicken(chicken, pan, stove)
        cook_pasta(dry_pasta, pot)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(pot_2093, kitchen_counter_132)walk_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)switchoff_executor(stove_2090)open_executor(stove_2090)exp(food_chicken_2050, stove_2090)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(stove_2090)exp(fryingpan_2107, stove_2090)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)close_executor(stove_2090)switchon_executor(stove_2090)switchoff_executor(stove_2090)open_executor(stove_2090)exp(dry_pasta_2073, stove_2090)open_executor(pot_2093)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Find pot_54. Find tray_142. Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is no longer inside home_office_161.
##############################
From agent.py
exp(pot_2093, kitchen_counter_132)
Failed to find pot_2093 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(pot_2093, cupboard_130)walk_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(stove_2090)switchoff_executor(stove_2090)open_executor(stove_2090)exp(fryingpan_2107, stove_2090)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)close_executor(stove_2090)switchon_executor(stove_2090)walk_executor(cupboard_130)exp(dry_pasta_2073, cupboard_130)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)
##############################
From agent.py
walk_executor(cupboard_130)
Find blender_2032. Find tea_bag_2017. Robot is inside dining_room_1. Robot is close blender_2032. Robot is close tea_bag_2017. Robot is close cupboard_130. Robot is no longer close kitchen_counter_132.
##############################
From agent.py
exp(pot_2093, cupboard_130)
Failed to find pot_2093 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(pot_2093, cupboard_131)walk_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(cupboard_131)exp(fryingpan_2107, cupboard_131)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)walk_executor(cupboard_131)exp(dry_pasta_2073, cupboard_131)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)
##############################
From agent.py
walk_executor(cupboard_131)
Robot is inside dining_room_1. Robot is close cupboard_131. Robot is no longer close blender_2032.Robot is no longer close tea_bag_2017.Robot is no longer close cupboard_130.
##############################
From agent.py
open_executor(cupboard_131)
Robot is inside dining_room_1. Robot is close cupboard_131. 
##############################
From agent.py
exp(pot_2093, cupboard_131)
Failed to find pot_2093 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(oven_141)open_executor(oven_141)exp(pot_2093, oven_141)walk_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(stove_2090)switchoff_executor(stove_2090)open_executor(stove_2090)exp(fryingpan_2107, stove_2090)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)close_executor(stove_2090)switchon_executor(stove_2090)walk_executor(kitchen_counter_129)exp(dry_pasta_2073, kitchen_counter_129)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)
##############################
From agent.py
walk_executor(oven_141)
Find food_butter_2018. Find dough_2021. Find food_onion_2026. Robot is inside dining_room_1. Robot is close food_butter_2018. Robot is close dough_2021. Robot is close food_onion_2026. Robot is close oven_141. Robot is close tray_142. Robot is no longer close cupboard_131.
##############################
From agent.py
open_executor(oven_141)
Robot is inside dining_room_1. Robot is close food_butter_2018. Robot is close dough_2021. Robot is close food_onion_2026. Robot is close oven_141. Robot is close tray_142. 
##############################
From agent.py
exp(pot_2093, oven_141)
Failed to find pot_2093 around oven_141. 
##############################
From agent.py-> find a plan in act()
walk_executor(stove_2090)open_executor(stove_2090)exp(pot_2093, stove_2090)walk_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)close_executor(stove_2090)switchon_executor(stove_2090)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(stove_2090)switchoff_executor(stove_2090)open_executor(stove_2090)exp(fryingpan_2107, stove_2090)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)close_executor(stove_2090)switchon_executor(stove_2090)walk_executor(wallshelf_191)exp(dry_pasta_2073, wallshelf_191)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)
##############################
From agent.py
walk_executor(stove_2090)
Find pot_2093. Find oil_2102. Find fryingpan_2107. Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close stove_2090. Robot is no longer close food_butter_2018.Robot is no longer close dough_2021.Robot is no longer close food_onion_2026.Robot is no longer close oven_141.Robot is no longer close tray_142.
##############################
From agent.py
open_executor(stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close stove_2090. 
##############################
From agent.py
exp(pot_2093, stove_2090)
Find pot_2093. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)close_executor(stove_2090)switchon_executor(stove_2090)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)walk_executor(wallshelf_191)exp(dry_pasta_2073, wallshelf_191)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)
##############################
From agent.py
walk_executor(pot_2093)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close pot_2093. Robot is no longer close stove_2090.
##############################
From agent.py
grab_executor(pot_2093)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close pot_2093. Grabbing pot_2093 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close kitchen_counter_129.
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
