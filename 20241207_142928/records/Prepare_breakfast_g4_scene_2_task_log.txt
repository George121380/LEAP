From agent.py
Reset goals: The sub-goals are: 
['1. Cook the chicken and pasta.', '2. Combine the cooked chicken and pasta.', '3. Put the chicken pasta on a plate.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_dry_pasta_2073_around_cupboard_131(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(dry_pasta,cupboard_instance)
        else:
            exp(dry_pasta,cupboard_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,cupboard_instance]=True
        close[cupboard_instance,dry_pasta]=True
    

behavior find_food_chicken_2050_around_fridge_140(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_pot_2093_around_cupboard_131(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(pot,cupboard_instance)
        else:
            exp(pot,cupboard_instance)
    eff:
        unknown[pot]=False
        close[pot,cupboard_instance]=True
        close[cupboard_instance,pot]=True
    

behavior find_food_vegetable_2072_around_fridge_140(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_vegetable,fridge_instance)
        else:
            exp(food_vegetable,fridge_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,fridge_instance]=True
        close[fridge_instance,food_vegetable]=True
    

#exp_behavior_end

#goal_representation
 
behavior cook_chicken_in_pot(chicken:item, pot:item, stove:item):
    body:
        achieve inside(chicken, pot)
        # Place the chicken inside the pot

        achieve on(pot, stove)
        # Place the pot on the stove

        achieve is_on(stove)
        # Turn on the stove to cook the chicken

behavior cook_pasta_in_pot(pasta:item, pot:item, stove:item):
    body:
        achieve inside(pasta, pot)
        # Place the pasta inside the pot

        achieve on(pot, stove)
        # Place the pot on the stove

        achieve is_on(stove)
        # Turn on the stove to cook the pasta

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken

        bind dry_pasta: item where:
            is_dry_pasta(dry_pasta)
        # Select the pasta

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select the stove
        
        cook_chicken_in_pot(chicken, pot, stove)
        cook_pasta_in_pot(dry_pasta, pot, stove)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior cook_chicken_in_pot(chicken:item, pot:item, stove:item):
    body:
        achieve inside(chicken, pot)
        # Place the chicken inside the pot

        achieve on(pot, stove)
        # Place the pot on the stove

        achieve is_on(stove)
        # Turn on the stove to cook the chicken

behavior cook_pasta_in_pot(pasta:item, pot:item, stove:item):
    body:
        achieve inside(pasta, pot)
        # Place the pasta inside the pot

        achieve on(pot, stove)
        # Place the pot on the stove

        achieve is_on(stove)
        # Turn on the stove to cook the pasta

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken

        bind dry_pasta: item where:
            is_dry_pasta(dry_pasta)
        # Select the pasta

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select the stove
        
        cook_chicken_in_pot(chicken, pot, stove)
        cook_pasta_in_pot(dry_pasta, pot, stove)

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(pot_2093, cupboard_131)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(pot_2093)putin_executor(food_chicken_2050, pot_2093)grab_executor(pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)walk_executor(cupboard_131)exp(dry_pasta_2073, cupboard_131)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)
##############################
From agent.py
walk_executor(cupboard_131)
Find tray_142. Find pot_54. Robot is inside dining_room_1. Robot is close cupboard_131. Robot is no longer inside home_office_161.
##############################
From agent.py
open_executor(cupboard_131)
Robot is inside dining_room_1. Robot is close cupboard_131. 
##############################
From agent.py
exp(pot_2093, cupboard_131)
Failed to find pot_2093 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(stove_2090)open_executor(stove_2090)exp(pot_2093, stove_2090)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(pot_2093)putin_executor(food_chicken_2050, pot_2093)grab_executor(pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)close_executor(stove_2090)switchon_executor(stove_2090)walk_executor(cupboard_130)exp(dry_pasta_2073, cupboard_130)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)
##############################
From agent.py
walk_executor(stove_2090)
Find pot_2093. Find oil_2102. Find fryingpan_2107. Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close stove_2090. Robot is no longer close cupboard_131.
##############################
From agent.py
open_executor(stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close stove_2090. 
##############################
From agent.py
exp(pot_2093, stove_2090)
Find pot_2093. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(pot_2093)putin_executor(food_chicken_2050, pot_2093)grab_executor(pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)close_executor(stove_2090)switchon_executor(stove_2090)walk_executor(cupboard_130)exp(dry_pasta_2073, cupboard_130)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)
##############################
From agent.py
walk_executor(fridge_140)
Find food_cereal_2048. Find food_cheese_2049. Find food_chicken_2050. Find food_dessert_2051. Find food_donut_2052. Find food_egg_2053. Find food_fish_2054. Find food_food_2055. Find food_fruit_2056. Find food_hamburger_2057. Find food_ice_cream_2058. Find food_jam_2059. Find food_kiwi_2060. Find food_lemon_2061. Find food_noodles_2062. Find food_oatmeal_2063. Find food_peanut_butter_2064. Find food_pizza_2065. Find food_potato_2066. Find food_rice_2067. Find food_salt_2068. Find food_snack_2069. Find food_sugar_2070. Find food_turkey_2071. Find food_vegetable_2072. Find dry_pasta_2073. Find milk_2074. Find sauce_2101. Find food_steak_2042. Find food_apple_2043. Find food_bacon_2044. Find food_banana_2045. Find food_cake_2046. Find food_carrot_2047. Find chair_138. Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Robot is no longer close kitchen_counter_129.Robot is no longer close stove_2090.
##############################
From agent.py
switchoff_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
open_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
exp(food_chicken_2050, fridge_140)
Find food_chicken_2050. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_2093)open_executor(pot_2093)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(pot_2093)putin_executor(food_chicken_2050, pot_2093)grab_executor(pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)close_executor(stove_2090)switchon_executor(stove_2090)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)
##############################
From agent.py
walk_executor(pot_2093)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close pot_2093. Robot is no longer close food_cereal_2048.Robot is no longer close food_cheese_2049.Robot is no longer close food_chicken_2050.Robot is no longer close food_dessert_2051.Robot is no longer close food_donut_2052.Robot is no longer close food_egg_2053.Robot is no longer close food_fish_2054.Robot is no longer close food_food_2055.Robot is no longer close food_fruit_2056.Robot is no longer close food_hamburger_2057.Robot is no longer close food_ice_cream_2058.Robot is no longer close food_jam_2059.Robot is no longer close food_kiwi_2060.Robot is no longer close food_lemon_2061.Robot is no longer close food_noodles_2062.Robot is no longer close food_oatmeal_2063.Robot is no longer close food_peanut_butter_2064.Robot is no longer close food_pizza_2065.Robot is no longer close food_potato_2066.Robot is no longer close food_rice_2067.Robot is no longer close food_salt_2068.Robot is no longer close food_snack_2069.Robot is no longer close food_sugar_2070.Robot is no longer close food_turkey_2071.Robot is no longer close food_vegetable_2072.Robot is no longer close dry_pasta_2073.Robot is no longer close milk_2074.Robot is no longer close floor_22.Robot is no longer close sauce_2101.Robot is no longer close fridge_140.Robot is no longer close food_steak_2042.Robot is no longer close food_apple_2043.Robot is no longer close food_bacon_2044.Robot is no longer close food_banana_2045.Robot is no longer close food_cake_2046.Robot is no longer close food_carrot_2047.
##############################
From agent.py
open_executor(pot_2093)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close pot_2093. 
##############################
From agent.py
walk_executor(food_chicken_2050)
Robot is inside dining_room_1. Robot is close food_chicken_2050. Robot is close fridge_140. Robot is no longer close kitchen_counter_129.Robot is no longer close pot_2093.
##############################
From agent.py
grab_executor(food_chicken_2050)
Robot is inside dining_room_1. Robot is close food_chicken_2050. Robot is close fridge_140. Grabbing food_chicken_2050 by right hand. 
##############################
From agent.py
walk_executor(pot_2093)
Robot is inside dining_room_1. Robot is close food_chicken_2050. Robot is close kitchen_counter_129. Robot is close pot_2093. Robot is no longer close fridge_140.
##############################
From agent.py
putin_executor(food_chicken_2050, pot_2093)
Robot is inside dining_room_1. Robot is close food_chicken_2050. Robot is close kitchen_counter_129. Robot is close pot_2093. food_chicken_2050 released by right hand. 
##############################
From agent.py
grab_executor(pot_2093)
Robot is inside dining_room_1. Robot is close food_chicken_2050. Robot is close kitchen_counter_129. Robot is close pot_2093. Grabbing pot_2093 by right hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close pot_2093. Robot is close stove_2090. Robot is no longer close food_chicken_2050.
##############################
From agent.py
put_executor(pot_2093, stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close pot_2093. Robot is close stove_2090. pot_2093 released by right hand. 
##############################
From agent.py
close_executor(stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close pot_2093. Robot is close stove_2090. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close pot_2093. Robot is close stove_2090. 
##############################
From agent.py
walk_executor(dry_pasta_2073)
Robot is inside dining_room_1. Robot is close dry_pasta_2073. Robot is close fridge_140. Robot is no longer close kitchen_counter_129.Robot is no longer close stove_2090.Robot is no longer close pot_2093.
##############################
From agent.py
grab_executor(dry_pasta_2073)
Robot is inside dining_room_1. Robot is close dry_pasta_2073. Robot is close fridge_140. Grabbing dry_pasta_2073 by right hand. 
##############################
From agent.py
walk_executor(pot_2093)
Robot is inside dining_room_1. Robot is close dry_pasta_2073. Robot is close food_chicken_2050. Robot is close stove_2090. Robot is close pot_2093. Robot is no longer close fridge_140.
##############################
From agent.py
putin_executor(dry_pasta_2073, pot_2093)
Robot is inside dining_room_1. Robot is close dry_pasta_2073. Robot is close food_chicken_2050. Robot is close stove_2090. Robot is close pot_2093. dry_pasta_2073 released by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2095_around_kitchen_counter_128(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior combine_chicken_and_pasta(cooked_chicken:item, cooked_pasta:item, pot:item):
    body:
        achieve inside(cooked_chicken, pot)
        achieve inside(cooked_pasta, pot)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot] == 2093
        # Select the pot with ID 2093

        bind cooked_chicken: item where:
            is_food_chicken(cooked_chicken) and id[cooked_chicken] == 2050 and inside(cooked_chicken, pot)
        # Select the cooked chicken already inside the pot with ID 2050

        bind cooked_pasta: item where:
            is_dry_pasta(cooked_pasta) and inside(cooked_pasta, pot)
        # Select the cooked pasta that is already inside the pot

        combine_chicken_and_pasta(cooked_chicken, cooked_pasta, pot)
        # Combine the cooked chicken and pasta inside the pot

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_blender_2032_around_kitchen_counter_132(blender:item):
    goal: not unknown(blender)
    body:
        assert is_blender(blender)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(blender,kitchen_counter_instance)
        else:
            exp(blender,kitchen_counter_instance)
    eff:
        unknown[blender]=False
        close[blender,kitchen_counter_instance]=True
        close[kitchen_counter_instance,blender]=True
    

behavior find_plate_2105_around_kitchen_counter_128(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(plate,kitchen_counter_instance)
        else:
            exp(plate,kitchen_counter_instance)
    eff:
        unknown[plate]=False
        close[plate,kitchen_counter_instance]=True
        close[kitchen_counter_instance,plate]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior combine_chicken_and_pasta(cooked_chicken: item, cooked_pasta: item, pot: item):
    body:
        achieve inside(cooked_chicken, pot)
        # Ensure the cooked chicken is placed inside the pot

        achieve inside(cooked_pasta, pot)
        # Ensure the cooked pasta is placed inside the pot

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and clean(pot)
        # Select a clean pot

        bind cooked_chicken: item where:
            is_food_chicken(cooked_chicken) and inside(cooked_chicken, pot)
        # Select the cooked chicken inside the pot

        bind cooked_pasta: item where:
            is_dry_pasta(cooked_pasta) and inside(cooked_pasta, pot)
        # Select the cooked pasta inside the pot

        combine_chicken_and_pasta(cooked_chicken, cooked_pasta, pot)
        # Combine the chicken and pasta

#goal_representation_end

##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "2. combine the cooked chicken and pasta." ?
Answer: After cooking the chicken and boiling the pasta, simply combine them together.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_bowl_2096_around_kitchen_counter_132(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior combine_chicken_and_pasta(cooked_chicken:item, cooked_pasta:item, pot:item):
    body:
        achieve inside(cooked_chicken, pot)
        # Place the cooked chicken inside the pot

        achieve inside(cooked_pasta, pot)
        # Place the cooked pasta inside the pot

behavior __goal__():
    body:
        bind cooked_chicken: item where:
            is_food_chicken(cooked_chicken) and cut(cooked_chicken)
        # Select the cooked chicken

        bind cooked_pasta: item where:
            is_dry_pasta(cooked_pasta) and has_water(cooked_pasta)
        # Select the cooked pasta

        bind pot: item where:
            is_pot(pot) and id[pot] == 2093
        # Select the pot with ID 2093

        combine_chicken_and_pasta(cooked_chicken, cooked_pasta, pot)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2095_around_kitchen_counter_128(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

behavior find_plate_2105_around_kitchen_counter_128(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(plate,kitchen_counter_instance)
        else:
            exp(plate,kitchen_counter_instance)
    eff:
        unknown[plate]=False
        close[plate,kitchen_counter_instance]=True
        close[kitchen_counter_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior combine_chicken_and_pasta(pot:item, chicken:item, pasta:item):
    body:
        achieve inside(chicken, pot)
        achieve inside(pasta, pot)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot] == 2093
        # Select the pot with ID 2093

        bind chicken: item where:
            is_food_chicken(chicken) and inside(chicken, pot)
        # Select the chicken that is inside the pot

        bind pasta: item where:
            is_dry_pasta(pasta) and inside(pasta, pot)
        # Select the pasta that is inside the pot

        combine_chicken_and_pasta(pot, chicken, pasta)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_shoes_2001_around_couch_192(shoes:item):
    goal: not unknown(shoes)
    body:
        assert is_shoes(shoes)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==192
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(shoes,couch_instance)
        else:
            exp(shoes,couch_instance)
    eff:
        unknown[shoes]=False
        close[shoes,couch_instance]=True
        close[couch_instance,shoes]=True
    

behavior find_spectacles_2106_around_kitchen_counter_132(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(spectacles,kitchen_counter_instance)
        else:
            exp(spectacles,kitchen_counter_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,kitchen_counter_instance]=True
        close[kitchen_counter_instance,spectacles]=True
    

#exp_behavior_end

#goal_representation
 
behavior combine_cooked_chicken_pasta(cooked_chicken:item, cooked_pasta:item, pot:item):
    body:
        achieve inside(cooked_chicken, pot)
        achieve inside(cooked_pasta, pot)

behavior __goal__():
    body:
        bind cooked_chicken: item where:
            is_food_chicken(cooked_chicken) and cut(cooked_chicken)
        # Select the cooked chicken which is already sliced

        bind cooked_pasta: item where:
            is_dry_pasta(cooked_pasta) and boiled(cooked_pasta)
        # Select the cooked pasta which is already boiled

        bind pot: item where:
            is_pot(pot) and clean(pot)
        # Select a clean pot

        combine_cooked_chicken_pasta(cooked_chicken, cooked_pasta, pot)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

'Function boiled not found. Note that recursive function calls are not supported in the current version.'
##############################
