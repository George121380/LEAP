From agent.py
Reset goals: The sub-goals are: 
['make a cup of coffee using the coffee maker.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_coffee_filter_2053_around_cupboard_117(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(coffee_filter,cupboard_instance)
        else:
            exp(coffee_filter,cupboard_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,cupboard_instance]=True
        close[cupboard_instance,coffee_filter]=True
    

behavior find_cup_2132_around_kitchen_counter_123(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_water_reservoir(coffee_maker:item):
    body:
        achieve has_water(coffee_maker)
        # Ensure the coffee maker has water in its reservoir

behavior insert_coffee_filter(coffee_maker:item, coffee_filter:item):
    body:
        achieve inside(coffee_filter, coffee_maker)
        # Place the coffee filter inside the coffee maker

behavior start_coffee_maker(coffee_maker:item):
    body:
        achieve is_on(coffee_maker)
        # Turn on the coffee maker to start brewing

behavior pour_coffee(coffee_maker:item, cup:item):
    body:
        achieve has_water(cup)
        # Ensure brewed coffee is poured into the cup

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind coffee_filter: item where:
            is_coffee_filter(coffee_filter)
        # Select a coffee filter

        bind cup: item where:
            is_cup(cup) and not has_water(cup)
        # Select a cup that does not have water

        fill_water_reservoir(coffee_maker)
        insert_coffee_filter(coffee_maker, coffee_filter)
        start_coffee_maker(coffee_maker)
        pour_coffee(coffee_maker, cup)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior fill_water_reservoir(coffee_maker:item):
    body:
        achieve has_water(coffee_maker)
        # Ensure the coffee maker has water in its reservoir

behavior insert_coffee_filter(coffee_maker:item, coffee_filter:item):
    body:
        achieve inside(coffee_filter, coffee_maker)
        # Place the coffee filter inside the coffee maker

behavior start_coffee_maker(coffee_maker:item):
    body:
        achieve is_on(coffee_maker)
        # Turn on the coffee maker to start brewing

behavior pour_coffee(coffee_maker:item, cup:item):
    body:
        achieve has_water(cup)
        # Ensure brewed coffee is poured into the cup

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind coffee_filter: item where:
            is_coffee_filter(coffee_filter)
        # Select a coffee filter

        bind cup: item where:
            is_cup(cup) and not has_water(cup)
        # Select a cup that does not have water

        fill_water_reservoir(coffee_maker)
        insert_coffee_filter(coffee_maker, coffee_filter)
        start_coffee_maker(coffee_maker)
        pour_coffee(coffee_maker, cup)

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(coffee_filter_2053, cupboard_117)walk_executor(coffe_maker_130)open_executor(coffe_maker_130)walk_executor(coffee_filter_2053)grab_executor(coffee_filter_2053)walk_executor(coffe_maker_130)putin_executor(coffee_filter_2053, coffe_maker_130)close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)walk_executor(kitchen_counter_123)exp(cup_2132, kitchen_counter_123)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(cupboard_117)
Find coffee_filter_2053. Find tray_128. Find pot_78. Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close wall_67. Robot is close cupboard_117. 
##############################
From agent.py
exp(coffee_filter_2053, cupboard_117)
Find coffee_filter_2053. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)open_executor(coffe_maker_130)walk_executor(coffee_filter_2053)grab_executor(coffee_filter_2053)walk_executor(coffe_maker_130)putin_executor(coffee_filter_2053, coffe_maker_130)close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)walk_executor(kitchen_counter_123)exp(cup_2132, kitchen_counter_123)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(coffe_maker_130)
Find coffee_filter_2065. Find spectacles_2153. Find fryingpan_2154. Robot is inside dining_room_41. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. Robot is no longer close coffee_filter_2053.Robot is no longer close wall_67.Robot is no longer close cupboard_117.
##############################
From agent.py
open_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
From agent.py
walk_executor(coffee_filter_2053)
Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close cupboard_117. Robot is no longer close coffee_filter_2065.Robot is no longer close kitchen_counter_122.Robot is no longer close coffe_maker_130.
##############################
From agent.py
grab_executor(coffee_filter_2053)
Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close cupboard_117. Grabbing coffee_filter_2053 by right hand. 
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. Robot is no longer close cupboard_117.
##############################
From agent.py
putin_executor(coffee_filter_2053, coffe_maker_130)
Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. coffee_filter_2053 released by right hand. 
##############################
From agent.py
close_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
From agent.py
switchon_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
From agent.py
walk_executor(kitchen_counter_123)
Find oil_2149. Find knife_2035. Find food_kiwi_2054. Find food_orange_2027. Find tray_2068. Robot is inside dining_room_41. Robot is close kitchen_counter_123. Robot is close floor_45. Robot is no longer close coffee_filter_2065.Robot is no longer close kitchen_counter_122.Robot is no longer close coffee_filter_2053.Robot is no longer close coffe_maker_130.
##############################
From agent.py
exp(cup_2132, kitchen_counter_123)
Fail to find cup_2132 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_270)exp(cup_2132, table_270)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(table_270)
Find shampoo_2019. Find pillow_286. Find pencil_2014. Find pillow_287. Find brush_2002. Find drawing_288. Find shoes_2033. Find phone_2017. Robot is inside home_office_241. Robot is close couch_269. Robot is close table_270. Robot is no longer inside dining_room_41.Robot is no longer close kitchen_counter_123.Robot is no longer close floor_45.
##############################
From agent.py
exp(cup_2132, table_270)
Fail to find cup_2132 around table_270. 
##############################
From agent.py-> find a plan in act()
walk_executor(tray_128)exp(cup_2132, tray_128)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(tray_128)
Find oil_2013. Find food_cheese_2072. Find food_food_2064. Find food_carrot_2015. Robot is inside dining_room_41. Robot is close tray_128. Robot is close oven_127. Robot is no longer inside home_office_241.Robot is no longer close couch_269.Robot is no longer close table_270.
##############################
From agent.py
exp(cup_2132, tray_128)
Fail to find cup_2132 around tray_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(microwave_135)open_executor(microwave_135)exp(cup_2132, microwave_135)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(microwave_135)
Find pot_2040. Robot is inside dining_room_41. Robot is close pot_2040. Robot is close kitchen_counter_122. Robot is close microwave_135. Robot is no longer close tray_128.Robot is no longer close oven_127.
##############################
From agent.py
open_executor(microwave_135)
Robot is inside dining_room_41. Robot is close pot_2040. Robot is close kitchen_counter_122. Robot is close microwave_135. 
##############################
From agent.py
exp(cup_2132, microwave_135)
Fail to find cup_2132 around microwave_135. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_199)exp(cup_2132, table_199)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(table_199)
Find mat_203. Find wooden_spoon_2000. Find drawing_201. Find drawing_202. Find tea_bag_2023. Robot is inside bedroom_162. Robot is close table_199. Robot is no longer inside dining_room_41.Robot is no longer close pot_2040.Robot is no longer close kitchen_counter_122.Robot is no longer close microwave_135.
##############################
From agent.py
exp(cup_2132, table_199)
Fail to find cup_2132 around table_199. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(cup_2132, kitchen_counter_119)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Find pot_2138. Find bowl_2141. Find plate_2152. Find cutting_board_2123. Find food_salt_2041. Find fork_2150. Find bowl_2140. Find bowl_2142. Find fork_2151. Robot is inside dining_room_41. Robot is close kitchen_counter_119. Robot is no longer inside bedroom_162.Robot is no longer close table_199.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2132 ?
Answer: Robot, to find cup_2132, go to dining_room_41. Once you are there, locate table_114. The cup is on table_114 and very close to it.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, to find cup_2132, go to dining_room_41. Once you are there, locate table_114. The cup is on table_114 and very close to it.

The actions you have taken:
Action 1: Walk to cupboard_117.
Action 2: look for coffee_filter_2053 around cupboard_117.
Action 3: Walk to coffe_maker_130.
Action 4: Open coffe_maker_130.
Action 5: Walk to coffee_filter_2053.
Action 6: Grab coffee_filter_2053.
Action 7: Walk to coffe_maker_130.
Action 8: Put coffee_filter_2053 into coffe_maker_130.
Action 9: Close coffe_maker_130.
Action 10: Switch on coffe_maker_130.
Action 11: Walk to kitchen_counter_123.
Action 12: look for cup_2132 around kitchen_counter_123.
Action 13: Walk to table_270.
Action 14: look for cup_2132 around table_270.
Action 15: Walk to tray_128.
Action 16: look for cup_2132 around tray_128.
Action 17: Walk to microwave_135.
Action 18: Open microwave_135.
Action 19: look for cup_2132 around microwave_135.
Action 20: Walk to table_199.
Action 21: look for cup_2132 around table_199.
Action 22: Walk to kitchen_counter_119.

##############################
From agent.py
exp(cup_2132, kitchen_counter_119)
Fail to find cup_2132 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(cup_2132, table_114)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(table_114)
Find mat_102. Find dry_pasta_2114. Find food_food_2021. Find drawing_110. Find drawing_111. Find knife_2122. Find cup_2133. Find table_cloth_2005. Find food_bread_2084. Find pillow_104. Find cup_2049. Find box_2038. Find clothes_hat_2117. Find clothes_gloves_2118. Find milk_2115. Find pillow_103. Find pillow_105. Find pillow_106. Find lighter_2004. Find lighter_2039. Find cup_2134. Find check_2058. Find cup_2132. Robot is inside dining_room_41. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close kitchen_counter_119.
##############################
From agent.py
exp(cup_2132, table_114)
Find cup_2132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(cup_2132)
Robot is inside dining_room_41. Robot is close table_114. Robot is close cup_2132. Robot is no longer close mat_102.Robot is no longer close floor_47.
##############################
From agent.py
grab_executor(cup_2132)
Robot is inside dining_room_41. Robot is close table_114. Robot is close cup_2132. Grabbing cup_2132 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Find drawing_33. Find mat_32. Find phone_2029. Robot is inside bathroom_1. Robot is close cup_2132. Robot is close bathroom_counter_18. Robot is close faucet_20. Robot is no longer inside dining_room_41.Robot is no longer close table_114.
##############################
From agent.py
switchon_executor(faucet_20)
Robot is inside bathroom_1. Robot is close cup_2132. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot is inside bathroom_1. Robot is close cup_2132. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
From agent.py
Human Instruction: Finish pouring the brewed coffee into the cup. You have already filled the water reservoir, inserted the coffee filter, and turned on the coffee maker. Now, you need to pour the brewed coffee from the coffee maker into cup_2132.

The actions you have taken:
Action 1: Walk to cupboard_117.
Action 2: look for coffee_filter_2053 around cupboard_117.
Action 3: Walk to coffe_maker_130.
Action 4: Open coffe_maker_130.
Action 5: Walk to coffee_filter_2053.
Action 6: Grab coffee_filter_2053.
Action 7: Walk to coffe_maker_130.
Action 8: Put coffee_filter_2053 into coffe_maker_130.
Action 9: Close coffe_maker_130.
Action 10: Switch on coffe_maker_130.
Action 11: Walk to kitchen_counter_123.
Action 12: look for cup_2132 around kitchen_counter_123.
Action 13: Walk to table_270.
Action 14: look for cup_2132 around table_270.
Action 15: Walk to tray_128.
Action 16: look for cup_2132 around tray_128.
Action 17: Walk to microwave_135.
Action 18: Open microwave_135.
Action 19: look for cup_2132 around microwave_135.
Action 20: Walk to table_199.
Action 21: look for cup_2132 around table_199.
Action 22: Walk to kitchen_counter_119.
Action 23: look for cup_2132 around kitchen_counter_119.
Action 24: Walk to table_114.
Action 25: look for cup_2132 around table_114.
Action 26: Walk to cup_2132.
Action 27: Grab cup_2132.
Action 28: Walk to faucet_20.
Action 29: Switch on faucet_20.
Action 30: Switch off faucet_20.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_orange_2061_around_fridge_126(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_orange,fridge_instance)
        else:
            exp(food_orange,fridge_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,fridge_instance]=True
        close[fridge_instance,food_orange]=True
    

behavior find_food_dessert_2090_around_food_food_2064(food_dessert:item):
    goal: not unknown(food_dessert)
    body:
        assert is_food_dessert(food_dessert)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==2064
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_dessert,food_food_instance)
        else:
            exp(food_dessert,food_food_instance)
    eff:
        unknown[food_dessert]=False
        close[food_dessert,food_food_instance]=True
        close[food_food_instance,food_dessert]=True
    

#exp_behavior_end

#goal_representation
 
behavior pour_coffee_into_cup(coffee_maker:item, cup:item):
    body:
        achieve inside(coffee_maker, cup)
        # Pour the brewed coffee into the cup

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker) and is_on(coffee_maker)
        # Select the coffee maker that is turned on

        bind cup: item where:
            is_cup(cup) and id[cup] == 2132
        # Select the cup with ID 2132

        pour_coffee_into_cup(coffee_maker, cup)
        # Pour the brewed coffee into the selected cup

#goal_representation_end

##############################
From agent.py
Reset goals: The sub-goals are: 
['make a cup of coffee using the coffee maker.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_measuring_cup_2012_around_cupboard_118(measuring_cup:item):
    goal: not unknown(measuring_cup)
    body:
        assert is_measuring_cup(measuring_cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(measuring_cup,cupboard_instance)
        else:
            exp(measuring_cup,cupboard_instance)
    eff:
        unknown[measuring_cup]=False
        close[measuring_cup,cupboard_instance]=True
        close[cupboard_instance,measuring_cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior pour_coffee_into_cup(coffee_maker:item, cup:item):
    body:
        achieve inside(cup, coffee_maker)
        # Ensure the brewed coffee is poured into the cup

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind cup: item where:
            is_cup(cup) and id[cup]==2132
        # Select the cup with ID 2132

        pour_coffee_into_cup(coffee_maker, cup)
        # Pour the coffee into the selected cup

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior pour_coffee_into_cup(coffee_maker:item, cup:item):
    body:
        achieve inside(cup, coffee_maker)
        # Ensure the brewed coffee is poured into the cup

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind cup: item where:
            is_cup(cup) and id[cup]==2132
        # Select the cup with ID 2132

        pour_coffee_into_cup(coffee_maker, cup)
        # Pour the coffee into the selected cup

##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)switchoff_executor(coffe_maker_130)open_executor(coffe_maker_130)putin_executor(cup_2132, coffe_maker_130)
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close coffee_filter_2053. Robot is close kitchen_counter_122. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_18.Robot is no longer close faucet_20.
##############################
From agent.py
switchoff_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close coffee_filter_2053. Robot is close kitchen_counter_122. 
##############################
From agent.py
open_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close coffee_filter_2053. Robot is close kitchen_counter_122. 
##############################
From agent.py
putin_executor(cup_2132, coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close coffee_filter_2053. Robot is close kitchen_counter_122. cup_2132 released by right hand. 
##############################
From agent.py
Human Instruction: You need to pour the brewed coffee from the coffee maker into cup_2132. Currently, cup_2132 has only been placed inside the coffee maker, but the pouring action has not been performed. Make sure the coffee is transferred from the pot into the cup.

The actions you have taken:
Action 1: Walk to cupboard_117.
Action 2: look for coffee_filter_2053 around cupboard_117.
Action 3: Walk to coffe_maker_130.
Action 4: Open coffe_maker_130.
Action 5: Walk to coffee_filter_2053.
Action 6: Grab coffee_filter_2053.
Action 7: Walk to coffe_maker_130.
Action 8: Put coffee_filter_2053 into coffe_maker_130.
Action 9: Close coffe_maker_130.
Action 10: Switch on coffe_maker_130.
Action 11: Walk to kitchen_counter_123.
Action 12: look for cup_2132 around kitchen_counter_123.
Action 13: Walk to table_270.
Action 14: look for cup_2132 around table_270.
Action 15: Walk to tray_128.
Action 16: look for cup_2132 around tray_128.
Action 17: Walk to microwave_135.
Action 18: Open microwave_135.
Action 19: look for cup_2132 around microwave_135.
Action 20: Walk to table_199.
Action 21: look for cup_2132 around table_199.
Action 22: Walk to kitchen_counter_119.
Action 23: look for cup_2132 around kitchen_counter_119.
Action 24: Walk to table_114.
Action 25: look for cup_2132 around table_114.
Action 26: Walk to cup_2132.
Action 27: Grab cup_2132.
Action 28: Walk to faucet_20.
Action 29: Switch on faucet_20.
Action 30: Switch off faucet_20.
Action 31: Walk to coffe_maker_130.
Action 32: Switch off coffe_maker_130.
Action 33: Open coffe_maker_130.
Action 34: Put cup_2132 into coffe_maker_130.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_measuring_cup_2012_around_cupboard_118(measuring_cup:item):
    goal: not unknown(measuring_cup)
    body:
        assert is_measuring_cup(measuring_cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(measuring_cup,cupboard_instance)
        else:
            exp(measuring_cup,cupboard_instance)
    eff:
        unknown[measuring_cup]=False
        close[measuring_cup,cupboard_instance]=True
        close[cupboard_instance,measuring_cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior pour_coffee_from_maker_to_cup(pot:item, cup:item):
    body:
        achieve inside(cup, pot) 
        # Pour coffee from the coffee makers pot into the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup] == 2132
        # Select cup with ID 2132

        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind pot: item where:
            is_pot(pot) and inside(pot, coffee_maker)
        # Select the pot inside the coffee maker

        pour_coffee_from_maker_to_cup(pot, cup)

#goal_representation_end

##############################
From agent.py
Reset goals: The sub-goals are: 
['make a cup of coffee using the coffee maker.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_food_2021_around_food_food_2021(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==2021
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

behavior find_phone_2029_around_phone_2029(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind phone_instance:item where:
            is_phone(phone_instance) and id[phone_instance]==2029
        achieve close_char(char,phone_instance)
        if can_open(phone_instance):
            achieve_once open(phone_instance)
            exp(phone,phone_instance)
        else:
            exp(phone,phone_instance)
    eff:
        unknown[phone]=False
        close[phone,phone_instance]=True
        close[phone_instance,phone]=True
    

behavior find_mouse_213_around_mousepad_214(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind mousepad_instance:item where:
            is_mousepad(mousepad_instance) and id[mousepad_instance]==214
        achieve close_char(char,mousepad_instance)
        if can_open(mousepad_instance):
            achieve_once open(mousepad_instance)
            exp(mouse,mousepad_instance)
        else:
            exp(mouse,mousepad_instance)
    eff:
        unknown[mouse]=False
        close[mouse,mousepad_instance]=True
        close[mousepad_instance,mouse]=True
    

#exp_behavior_end

#goal_representation
 
behavior pour_coffee(coffee_pot:item, cup:item):
    body:
        achieve inside(coffee_pot, coffe_maker)
        # Ensure the coffee pot is inside the coffee maker
        
        achieve close_char(char, coffee_pot)
        # Get close to the coffee pot

        achieve inside(cup, coffe_maker)
        # Ensure the cup is inside the coffee maker for pouring

        achieve on(cup, kitchen_counter_123) 
        # Place the cup on the kitchen counter

        assert is_pourable(coffee)
        # Assert that the coffee is pourable before pouring

behavior __goal__():
    body:
        bind coffe_maker: item where:
            is_coffe_maker(coffe_maker)
        # Select the coffee maker

        bind coffee_pot: item where:
            inside(coffee_pot, coffe_maker)
        # Select the coffee pot inside the coffee maker

        bind cup: item where:
            inside(cup, coffe_maker) and id[cup]==2132
        # Select the target cup inside the coffee maker

        pour_coffee(coffee_pot, cup)

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
