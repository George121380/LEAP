From agent.py
Reset goals: The sub-goals are: 
['Fried rice with egg.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_rice_2067_around_kitchen_counter_129(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_rice,kitchen_counter_instance)
        else:
            exp(food_rice,kitchen_counter_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_rice]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_pot_54_around_kitchen_counter_129(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(pot,kitchen_counter_instance)
        else:
            exp(pot,kitchen_counter_instance)
    eff:
        unknown[pot]=False
        close[pot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,pot]=True
    

behavior find_coffee_filter_2035_around_kitchen_counter_128(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(coffee_filter,kitchen_counter_instance)
        else:
            exp(coffee_filter,kitchen_counter_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,kitchen_counter_instance]=True
        close[kitchen_counter_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_rice_in_pot(rice:item, pot:item):
    body:
        achieve inside(rice, pot)
        # Place rice inside the pot

behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)
        # Ensure the pot has water for boiling

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve on(pot, stove)
        # Place the pot on the stove

behavior boil_rice(stove:item):
    body:
        achieve is_on(stove)
        # Turn on the stove to boil rice

behavior crack_egg(egg:item, surface:item):
    body:
        achieve cut(egg)
        # Crack the egg open on a surface

behavior cook_egg_with_rice(pot:item, egg:item):
    body:
        achieve inside(egg, pot)
        # Place the egg into the pot with rice

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select the pot to use
        
        bind rice: item where:
            is_food_rice(rice)
        # Select the rice to boil

        bind stove: item where:
            is_stove(stove)
        # Select the stove to use

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg to boil with rice

        bind surface: item where:
            surfaces(surface)
        # Select a surface to crack the egg

        put_rice_in_pot(rice, pot)
        fill_pot_with_water(pot)
        place_pot_on_stove(pot, stove)
        boil_rice(stove)
        crack_egg(egg, surface)
        cook_egg_with_rice(pot, egg)

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['Fried rice with egg.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_rice_2067_around_kitchen_counter_129(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_rice,kitchen_counter_instance)
        else:
            exp(food_rice,kitchen_counter_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_rice]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_fryingpan_2107_around_kitchen_counter_129(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

behavior find_coffee_filter_2035_around_coffe_maker_147(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind coffe_maker_instance:item where:
            is_coffe_maker(coffe_maker_instance) and id[coffe_maker_instance]==147
        achieve close_char(char,coffe_maker_instance)
        if can_open(coffe_maker_instance):
            achieve_once open(coffe_maker_instance)
            exp(coffee_filter,coffe_maker_instance)
        else:
            exp(coffee_filter,coffe_maker_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,coffe_maker_instance]=True
        close[coffe_maker_instance,coffee_filter]=True
    

behavior find_oil_2005_around_kitchen_counter_128(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(oil,kitchen_counter_instance)
        else:
            exp(oil,kitchen_counter_instance)
    eff:
        unknown[oil]=False
        close[oil,kitchen_counter_instance]=True
        close[kitchen_counter_instance,oil]=True
    

#exp_behavior_end

#goal_representation
behavior prepare_fried_rice_with_egg(rice:item, egg:item, frying_pan:item, stove:item, oil:item):
    body:
        achieve has_water(rice)
        # Ensure the rice has water for boiling

        achieve inside(rice, frying_pan)
        # Place the rice inside the frying pan

        achieve inside(egg, frying_pan)
        # Crack the egg and place it inside the frying pan

        achieve on(frying_pan, stove)
        # Ensure the frying pan is on the stove

        achieve inside(oil, frying_pan)
        # Add oil to the frying pan

        achieve is_on(stove)
        # Turn on the stove to cook the fried rice with egg

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select the rice to use

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg to use

        bind frying_pan: item where:
            is_fryingpan(frying_pan)
        # Select the frying pan to use

        bind stove: item where:
            is_stove(stove)
        # Select the stove to use

        bind oil: item where:
            is_oil(oil)
        # Select the oil to use

        prepare_fried_rice_with_egg(rice, egg, frying_pan, stove, oil)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior prepare_fried_rice_with_egg(rice:item, egg:item, frying_pan:item, stove:item, oil:item):
    body:
        achieve has_water(rice)
        # Ensure the rice has water for boiling

        achieve inside(rice, frying_pan)
        # Place the rice inside the frying pan

        achieve inside(egg, frying_pan)
        # Crack the egg and place it inside the frying pan

        achieve on(frying_pan, stove)
        # Ensure the frying pan is on the stove

        achieve inside(oil, frying_pan)
        # Add oil to the frying pan

        achieve is_on(stove)
        # Turn on the stove to cook the fried rice with egg

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select the rice to use

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg to use

        bind frying_pan: item where:
            is_fryingpan(frying_pan)
        # Select the frying pan to use

        bind stove: item where:
            is_stove(stove)
        # Select the stove to use

        bind oil: item where:
            is_oil(oil)
        # Select the oil to use

        prepare_fried_rice_with_egg(rice, egg, frying_pan, stove, oil)
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_129)exp(food_rice_2067, kitchen_counter_129)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(kitchen_counter_129)exp(fryingpan_2107, kitchen_counter_129)walk_executor(fryingpan_2107)putin_executor(food_rice_2067, fryingpan_2107)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)walk_executor(kitchen_counter_128)exp(oil_2102, kitchen_counter_128)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(kitchen_counter_129)
Find pot_54. Find pot_2093. Find tray_142. Find oil_2102. Find fryingpan_2107. Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is no longer inside home_office_161.
##############################
From agent.py
exp(food_rice_2067, kitchen_counter_129)
Fail to find food_rice_2067 around kitchen_counter_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_rice_2067, fridge_140)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(fryingpan_2107)putin_executor(food_rice_2067, fryingpan_2107)walk_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(fridge_140)
Find food_cereal_2048. Find food_cheese_2049. Find food_chicken_2050. Find food_dessert_2051. Find food_donut_2052. Find food_egg_2053. Find food_fish_2054. Find food_food_2055. Find food_fruit_2056. Find food_hamburger_2057. Find food_ice_cream_2058. Find food_jam_2059. Find food_kiwi_2060. Find food_lemon_2061. Find food_noodles_2062. Find food_oatmeal_2063. Find food_peanut_butter_2064. Find food_pizza_2065. Find food_potato_2066. Find food_rice_2067. Find food_salt_2068. Find food_snack_2069. Find food_sugar_2070. Find food_turkey_2071. Find food_vegetable_2072. Find dry_pasta_2073. Find milk_2074. Find sauce_2101. Find food_steak_2042. Find food_apple_2043. Find food_bacon_2044. Find food_banana_2045. Find food_cake_2046. Find food_carrot_2047. Find chair_138. Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Robot is no longer close kitchen_counter_129.
##############################
From agent.py
switchoff_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
open_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
exp(food_rice_2067, fridge_140)
Find food_rice_2067. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_rice_2067)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(fryingpan_2107)putin_executor(food_rice_2067, fryingpan_2107)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
grab_executor(food_rice_2067)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Grabbing food_rice_2067 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close food_rice_2067. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close food_cereal_2048.Robot is no longer close food_cheese_2049.Robot is no longer close food_chicken_2050.Robot is no longer close food_dessert_2051.Robot is no longer close food_donut_2052.Robot is no longer close food_egg_2053.Robot is no longer close food_fish_2054.Robot is no longer close food_food_2055.Robot is no longer close food_fruit_2056.Robot is no longer close food_hamburger_2057.Robot is no longer close food_ice_cream_2058.Robot is no longer close food_jam_2059.Robot is no longer close food_kiwi_2060.Robot is no longer close food_lemon_2061.Robot is no longer close food_noodles_2062.Robot is no longer close food_oatmeal_2063.Robot is no longer close food_peanut_butter_2064.Robot is no longer close food_pizza_2065.Robot is no longer close food_potato_2066.Robot is no longer close food_salt_2068.Robot is no longer close food_snack_2069.Robot is no longer close food_sugar_2070.Robot is no longer close food_turkey_2071.Robot is no longer close food_vegetable_2072.Robot is no longer close dry_pasta_2073.Robot is no longer close milk_2074.Robot is no longer close floor_22.Robot is no longer close sauce_2101.Robot is no longer close fridge_140.Robot is no longer close food_steak_2042.Robot is no longer close food_apple_2043.Robot is no longer close food_bacon_2044.Robot is no longer close food_banana_2045.Robot is no longer close food_cake_2046.Robot is no longer close food_carrot_2047.
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close food_rice_2067. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot is inside dining_room_1. Robot is close food_rice_2067. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
putin_executor(food_rice_2067, fryingpan_2107)
Robot is inside dining_room_1. Robot is close food_rice_2067. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. food_rice_2067 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close fridge_140. Robot is close food_egg_2053. Robot is no longer close fryingpan_2107.Robot is no longer close kitchen_counter_129.Robot is no longer close food_rice_2067.
##############################
From agent.py
grab_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close fridge_140. Robot is close food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Robot is no longer close fridge_140.
##############################
From agent.py
putin_executor(food_egg_2053, fryingpan_2107)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. food_egg_2053 released by right hand. 
##############################
From agent.py
grab_executor(fryingpan_2107)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Grabbing fryingpan_2107 by right hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Robot is close stove_2090. Robot is no longer close food_egg_2053.
##############################
From agent.py
put_executor(fryingpan_2107, stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Robot is close stove_2090. fryingpan_2107 released by right hand. 
##############################
From agent.py
walk_executor(oil_2102)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close oil_2102. Robot is no longer close stove_2090.Robot is no longer close fryingpan_2107.
##############################
From agent.py
grab_executor(oil_2102)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close oil_2102. Grabbing oil_2102 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot is inside dining_room_1. Robot is close oil_2102. Robot is close stove_2090. Robot is close fryingpan_2107. Robot is no longer close kitchen_counter_129.
##############################
From agent.py
putin_executor(oil_2102, fryingpan_2107)
Robot is inside dining_room_1. Robot is close oil_2102. Robot is close stove_2090. Robot is close fryingpan_2107. oil_2102 released by right hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot is inside dining_room_1. Robot is close stove_2090. Robot is close kitchen_counter_129. Robot is no longer close fryingpan_2107.Robot is no longer close oil_2102.
##############################
From agent.py
switchon_executor(stove_2090)
Robot is inside dining_room_1. Robot is close stove_2090. Robot is close kitchen_counter_129. 
##############################
From agent.py
Human Instruction: Ensure the rice has water for boiling before adding it to the frying pan. This step seems to have been overlooked.

The actions you have taken:
Action 1: Walk to kitchen_counter_129.
Action 2: look for food_rice_2067 around kitchen_counter_129.
Action 3: Walk to fridge_140.
Action 4: Switch off fridge_140.
Action 5: Open fridge_140.
Action 6: look for food_rice_2067 around fridge_140.
Action 7: Grab food_rice_2067.
Action 8: Walk to faucet_134.
Action 9: Switch off faucet_134.
Action 10: Walk to fryingpan_2107.
Action 11: Put food_rice_2067 into fryingpan_2107.
Action 12: Walk to food_egg_2053.
Action 13: Grab food_egg_2053.
Action 14: Walk to fryingpan_2107.
Action 15: Put food_egg_2053 into fryingpan_2107.
Action 16: Grab fryingpan_2107.
Action 17: Walk to stove_2090.
Action 18: Put fryingpan_2107 on stove_2090.
Action 19: Walk to oil_2102.
Action 20: Grab oil_2102.
Action 21: Walk to fryingpan_2107.
Action 22: Put oil_2102 into fryingpan_2107.
Action 23: Walk to stove_2090.
Action 24: Switch on stove_2090.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_pants_2113_around_washing_machine_2041(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_pants,washing_machine_instance)
        else:
            exp(clothes_pants,washing_machine_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,washing_machine_instance]=True
        close[washing_machine_instance,clothes_pants]=True
    

behavior find_alcohol_2002_around_cupboard_130(alcohol:item):
    goal: not unknown(alcohol)
    body:
        assert is_alcohol(alcohol)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(alcohol,cupboard_instance)
        else:
            exp(alcohol,cupboard_instance)
    eff:
        unknown[alcohol]=False
        close[alcohol,cupboard_instance]=True
        close[cupboard_instance,alcohol]=True
    

#exp_behavior_end

#goal_representation
behavior prepare_fried_rice_with_egg(rice:item, egg:item, stove:item, pan:item, oil:item, faucet:item):
    body:
        achieve inside(rice, pan)
        # Ensure the rice is placed in the pan

        achieve has_water(rice)
        # Ensure the rice has water for boiling

        achieve inside(egg, pan)
        # Ensure the egg is added to the pan

        achieve on(pan, stove)
        # Ensure the pan is on the stove
        
        achieve is_on(stove)
        # Turn on the stove to start cooking

behavior add_oil_to_pan(oil:item, pan:item):
    body:
        achieve inside(oil, pan)
        # Add oil to the pan for frying

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select the rice

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg
        
        bind stove: item where:
            is_stove(stove)
        # Select the stove

        bind pan: item where:
            is_fryingpan(pan)
        # Select the frying pan
        
        bind oil: item where:
            is_oil(oil)
        # Select the oil

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        prepare_fried_rice_with_egg(rice, egg, stove, pan, oil, faucet)
        add_oil_to_pan(oil, pan)
#goal_representation_end

##############################
From agent.py
Reset goals: The sub-goals are: 
['Fried rice with egg.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2102_around_cupboard_130(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(oil,cupboard_instance)
        else:
            exp(oil,cupboard_instance)
    eff:
        unknown[oil]=False
        close[oil,cupboard_instance]=True
        close[cupboard_instance,oil]=True
    

#exp_behavior_end

#goal_representation
behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)
        # Ensure the pot is filled with water

behavior put_rice_in_pot(rice:item, pot:item):
    body:
        achieve inside(rice, pot)
        # Ensure the rice is inside the pot

behavior put_egg_in_pot(egg:item, pot:item):
    body:
        achieve inside(egg, pot)
        # Ensure the egg is inside the pot

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve on(pot, stove)
        # Ensure the pot is on the stove

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)
        # Turn on the stove

behavior move_contents_to_fryingpan(rice:item, egg:item, fryingpan:item):
    body:
        achieve inside(rice, fryingpan)
        # Move rice to frying pan
        achieve inside(egg, fryingpan)
        # Move egg to frying pan

behavior fry_food(fryingpan:item, stove:item, oil:item):
    body:
        achieve on(fryingpan, stove)
        # Ensure frying pan is on stove
        achieve inside(oil, fryingpan)
        # Pour oil into frying pan
        achieve is_on(stove)
        # Ensure the stove is on

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind rice: item where:
            is_food_rice(rice)
        # Select rice

        bind egg: item where:
            is_food_egg(egg)
        # Select an egg

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan

        bind oil: item where:
            is_oil(oil)
        # Select oil

        fill_pot_with_water(pot)
        put_rice_in_pot(rice, pot)
        put_egg_in_pot(egg, pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

        move_contents_to_fryingpan(rice, egg, fryingpan)
        fry_food(fryingpan, stove, oil)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)
        # Ensure the pot is filled with water

behavior put_rice_in_pot(rice:item, pot:item):
    body:
        achieve inside(rice, pot)
        # Ensure the rice is inside the pot

behavior put_egg_in_pot(egg:item, pot:item):
    body:
        achieve inside(egg, pot)
        # Ensure the egg is inside the pot

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve on(pot, stove)
        # Ensure the pot is on the stove

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)
        # Turn on the stove

behavior move_contents_to_fryingpan(rice:item, egg:item, fryingpan:item):
    body:
        achieve inside(rice, fryingpan)
        # Move rice to frying pan
        achieve inside(egg, fryingpan)
        # Move egg to frying pan

behavior fry_food(fryingpan:item, stove:item, oil:item):
    body:
        achieve on(fryingpan, stove)
        # Ensure frying pan is on stove
        achieve inside(oil, fryingpan)
        # Pour oil into frying pan
        achieve is_on(stove)
        # Ensure the stove is on

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind rice: item where:
            is_food_rice(rice)
        # Select rice

        bind egg: item where:
            is_food_egg(egg)
        # Select an egg

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan

        bind oil: item where:
            is_oil(oil)
        # Select oil

        fill_pot_with_water(pot)
        put_rice_in_pot(rice, pot)
        put_egg_in_pot(egg, pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

        move_contents_to_fryingpan(rice, egg, fryingpan)
        fry_food(fryingpan, stove, oil)
##############################
From agent.py-> find a plan in act()
walk_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchon_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(pot_2093)putin_executor(food_rice_2067, pot_2093)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_2093)putin_executor(food_egg_2053, pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(fryingpan_2107)putin_executor(food_rice_2067, fryingpan_2107)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(pot_2093)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close pot_2093. Robot is no longer close stove_2090.
##############################
From agent.py
grab_executor(pot_2093)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close pot_2093. Grabbing pot_2093 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close kitchen_counter_129.
##############################
From agent.py
switchon_executor(faucet_134)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(pot_2093)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
open_executor(pot_2093)
Robot is inside dining_room_1. Robot is close pot_2093. 
##############################
From agent.py
walk_executor(food_rice_2067)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close food_rice_2067. Robot is close fryingpan_2107. 
##############################
From agent.py
grab_executor(food_rice_2067)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close food_rice_2067. Robot is close fryingpan_2107. Grabbing food_rice_2067 by left hand. 
##############################
From agent.py
walk_executor(pot_2093)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close food_rice_2067. Robot is no longer close fryingpan_2107.
##############################
From agent.py
putin_executor(food_rice_2067, pot_2093)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close food_rice_2067. food_rice_2067 released by left hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close fryingpan_2107. Robot is close food_egg_2053. Robot is no longer close food_rice_2067.
##############################
From agent.py
grab_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close fryingpan_2107. Robot is close food_egg_2053. Grabbing food_egg_2053 by left hand. 
##############################
From agent.py
walk_executor(pot_2093)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close food_egg_2053. Robot is close food_rice_2067. Robot is no longer close fryingpan_2107.
##############################
From agent.py
putin_executor(food_egg_2053, pot_2093)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close food_egg_2053. Robot is close food_rice_2067. food_egg_2053 released by left hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_129. Robot is close stove_2090. Robot is no longer close food_rice_2067.Robot is no longer close food_egg_2053.
##############################
From agent.py
put_executor(pot_2093, stove_2090)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_129. Robot is close stove_2090. pot_2093 released by right hand. 
##############################
From agent.py
walk_executor(food_rice_2067)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close food_rice_2067. Robot is no longer close kitchen_counter_129.Robot is no longer close stove_2090.
##############################
From agent.py
grab_executor(food_rice_2067)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close food_rice_2067. Grabbing food_rice_2067 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot is inside dining_room_1. Robot is close food_rice_2067. Robot is close stove_2090. Robot is close fryingpan_2107. Robot is no longer close pot_2093.
##############################
From agent.py
putin_executor(food_rice_2067, fryingpan_2107)
Robot is inside dining_room_1. Robot is close food_rice_2067. Robot is close stove_2090. Robot is close fryingpan_2107. food_rice_2067 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close pot_2093. Robot is no longer close fryingpan_2107.Robot is no longer close stove_2090.Robot is no longer close food_rice_2067.
##############################
From agent.py
grab_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close pot_2093. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close stove_2090. Robot is close fryingpan_2107. Robot is no longer close pot_2093.
##############################
From agent.py
putin_executor(food_egg_2053, fryingpan_2107)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close stove_2090. Robot is close fryingpan_2107. food_egg_2053 released by right hand. 
##############################
From agent.py
Human Instruction: Ensure the rice is properly boiled with water before adding it to the frying pan. Revisit the step to make sure the pot is filled with water and the rice is cooked before proceeding to fry it with the egg.

The actions you have taken:
Action 1: Walk to kitchen_counter_129.
Action 2: look for food_rice_2067 around kitchen_counter_129.
Action 3: Walk to fridge_140.
Action 4: Switch off fridge_140.
Action 5: Open fridge_140.
Action 6: look for food_rice_2067 around fridge_140.
Action 7: Grab food_rice_2067.
Action 8: Walk to faucet_134.
Action 9: Switch off faucet_134.
Action 10: Walk to fryingpan_2107.
Action 11: Put food_rice_2067 into fryingpan_2107.
Action 12: Walk to food_egg_2053.
Action 13: Grab food_egg_2053.
Action 14: Walk to fryingpan_2107.
Action 15: Put food_egg_2053 into fryingpan_2107.
Action 16: Grab fryingpan_2107.
Action 17: Walk to stove_2090.
Action 18: Put fryingpan_2107 on stove_2090.
Action 19: Walk to oil_2102.
Action 20: Grab oil_2102.
Action 21: Walk to fryingpan_2107.
Action 22: Put oil_2102 into fryingpan_2107.
Action 23: Walk to stove_2090.
Action 24: Switch on stove_2090.
Action 25: Walk to pot_2093.
Action 26: Grab pot_2093.
Action 27: Walk to faucet_134.
Action 28: Switch on faucet_134.
Action 29: Switch off faucet_134.
Action 30: Walk to pot_2093.
Action 31: Open pot_2093.
Action 32: Walk to food_rice_2067.
Action 33: Grab food_rice_2067.
Action 34: Walk to pot_2093.
Action 35: Put food_rice_2067 into pot_2093.
Action 36: Walk to food_egg_2053.
Action 37: Grab food_egg_2053.
Action 38: Walk to pot_2093.
Action 39: Put food_egg_2053 into pot_2093.
Action 40: Walk to stove_2090.
Action 41: Put pot_2093 on stove_2090.
Action 42: Walk to food_rice_2067.
Action 43: Grab food_rice_2067.
Action 44: Walk to fryingpan_2107.
Action 45: Put food_rice_2067 into fryingpan_2107.
Action 46: Walk to food_egg_2053.
Action 47: Grab food_egg_2053.
Action 48: Walk to fryingpan_2107.
Action 49: Put food_egg_2053 into fryingpan_2107.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2005_around_cupboard_130(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(oil,cupboard_instance)
        else:
            exp(oil,cupboard_instance)
    eff:
        unknown[oil]=False
        close[oil,cupboard_instance]=True
        close[cupboard_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_ingredients(rice:item, egg:item, oil:item, fryingpan:item):
    body:
        achieve inside(rice, fryingpan)
        # Place the rice into the frying pan

        achieve inside(egg, fryingpan)
        # Place the egg into the frying pan

        achieve inside(oil, fryingpan)
        # Add oil to the frying pan

behavior fry_rice_with_egg(stove:item, fryingpan:item):
    body:
        achieve on(fryingpan, stove)
        # Place the frying pan on the stove

        achieve is_on(stove)
        # Turn on the stove to fry the rice with egg

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select the rice to fry

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg to fry with rice

        bind oil: item where:
            is_oil(oil)
        # Select the oil for frying

        bind stove: item where:
            is_stove(stove)
        # Select the stove to use

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select the frying pan to fry the rice and egg

        prepare_ingredients(rice, egg, oil, fryingpan)
        fry_rice_with_egg(stove, fryingpan)

#goal_representation_end

##############################
