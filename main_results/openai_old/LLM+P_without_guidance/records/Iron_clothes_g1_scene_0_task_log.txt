From agent.py
Reset goals: The sub-goals are: 
['Clean a shirt and iron this shirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2073_around_washing_machine_2007(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(cleaning_solution,washing_machine_instance)
        else:
            exp(cleaning_solution,washing_machine_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,washing_machine_instance]=True
        close[washing_machine_instance,cleaning_solution]=True
    

behavior find_clothes_shirt_2086_around_closetdrawer_150(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==150
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior clean_shirt(shirt: item, sink: item, cleaner: item):
    body:
        achieve inside(shirt, sink)
        # Place the shirt inside the sink

        achieve inside(cleaner, sink)
        # Add cleaning solution to the sink

        wash(shirt)
        # Wash the shirt

behavior iron_shirt(shirt: item, ironing_board: item, iron: item):
    body:
        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board

        achieve plugged(iron)
        # Ensure the iron is plugged in

        achieve is_on(iron)
        # Turn on the iron

        achieve clean(shirt)
        # Achieve the state of the shirt being ironed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and dirty(shirt)
        # Select a dirty shirt

        bind sink: item where:
            is_sink(sink)
        # Select a sink for washing the shirt

        bind cleaner: item where:
            is_cleaning_solution(cleaner)
        # Select cleaning solution

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        clean_shirt(shirt, sink, cleaner)
        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['Clean a shirt and iron this shirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2086_around_closetdrawer_150(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==150
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior clean_shirt(shirt:item, sink:item):
    body:
        achieve inside(shirt, sink)
        # Place the shirt inside the sink for washing

        wash(shirt)
        # Wash the shirt

behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve once plugged(iron)
        # Plug in the iron to prepare it for use

        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board for ironing

        achieve is_on(iron)
        # Turn on the iron for ironing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to clean and iron

        bind sink: item where:
            is_sink(sink)
        # Select a sink for washing the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board for ironing the shirt

        bind iron: item where:
            is_iron(iron)
        # Select an iron for ironing

        clean_shirt(shirt, sink)
        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
