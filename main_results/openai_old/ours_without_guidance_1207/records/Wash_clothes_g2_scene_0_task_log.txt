From agent.py
Reset goals: The sub-goals are: 
['1. Locate the basket with clothes in it.', '2. Add soap and the clothes to the washing machine.', '3. Run the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_basket_for_clothes_2006_around_coffee_table_2068(basket_for_clothes:item):
    goal: not unknown(basket_for_clothes)
    body:
        assert is_basket_for_clothes(basket_for_clothes)
        bind coffee_table_instance:item where:
            is_coffee_table(coffee_table_instance) and id[coffee_table_instance]==2068
        achieve close_char(char,coffee_table_instance)
        if can_open(coffee_table_instance):
            achieve_once open(coffee_table_instance)
            exp(basket_for_clothes,coffee_table_instance)
        else:
            exp(basket_for_clothes,coffee_table_instance)
    eff:
        unknown[basket_for_clothes]=False
        close[basket_for_clothes,coffee_table_instance]=True
        close[coffee_table_instance,basket_for_clothes]=True
    

#exp_behavior_end

#goal_representation
def is_basket_for_clothes_present():
    # Function to check if there is a basket for clothes
    symbol basket_existence=exists basket: item: is_basket_for_clothes(basket)
    return basket_existence

behavior __goal__():
    body:
        if is_basket_for_clothes_present():
            # If a basket for clothes is already known to exist, find and approach it
            bind basket: item where:
                is_basket_for_clothes(basket)
            achieve close_char(char, basket)
        else:
            # If no known basket for clothes exists, explore the environment for one
            foreach basket: item:
                if is_basket_for_clothes(basket) and not visited(basket):
                    observe(basket, "Locate the basket containing clothes")
#goal_representation_end

##############################
From agent.py->reset_goal
def is_basket_for_clothes_present():
    # Function to check if there is a basket for clothes
    symbol basket_existence=exists basket: item: is_basket_for_clothes(basket)
    return basket_existence

behavior __goal__():
    body:
        if is_basket_for_clothes_present():
            # If a basket for clothes is already known to exist, find and approach it
            bind basket: item where:
                is_basket_for_clothes(basket)
            achieve close_char(char, basket)
        else:
            # If no known basket for clothes exists, explore the environment for one
            foreach basket: item:
                if is_basket_for_clothes(basket) and not visited(basket):
                    observe(basket, "Locate the basket containing clothes")
##############################
From agent.py-> find a plan in act()
walk_executor(coffee_table_2068)exp(basket_for_clothes_2006, coffee_table_2068)walk_executor(basket_for_clothes_2006)
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot is inside home_office_319. Robot is close coffee_table_2068. Robot is no longer inside bathroom_1.
##############################
From agent.py
exp(basket_for_clothes_2006, coffee_table_2068)
Failed to find basket_for_clothes_2006 around coffee_table_2068. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_388)exp(basket_for_clothes_2006, closetdrawer_388)walk_executor(basket_for_clothes_2006)
##############################
From agent.py
walk_executor(closetdrawer_388)
Robot is inside home_office_319. Robot is close closetdrawer_394. Robot is close closetdrawer_388. Robot is close dresser_358. Robot is no longer close coffee_table_2068.
##############################
From agent.py
exp(basket_for_clothes_2006, closetdrawer_388)
Failed to find basket_for_clothes_2006 around closetdrawer_388. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_384)exp(basket_for_clothes_2006, closetdrawer_384)walk_executor(basket_for_clothes_2006)
##############################
From agent.py
walk_executor(closetdrawer_384)
Robot is inside home_office_319. Robot is close closetdrawer_388. Robot is close dresser_358. Robot is close closetdrawer_384. Robot is no longer close closetdrawer_394.
##############################
From agent.py
exp(basket_for_clothes_2006, closetdrawer_384)
Failed to find basket_for_clothes_2006 around closetdrawer_384. 
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2007)open_executor(washing_machine_2007)exp(basket_for_clothes_2006, washing_machine_2007)walk_executor(basket_for_clothes_2006)
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot is inside bathroom_1. Robot is close washing_machine_2007. Robot is no longer inside home_office_319.Robot is no longer close closetdrawer_384.Robot is no longer close closetdrawer_388.Robot is no longer close dresser_358.
##############################
From agent.py
open_executor(washing_machine_2007)
Robot is inside bathroom_1. Robot is close washing_machine_2007. 
##############################
From agent.py
exp(basket_for_clothes_2006, washing_machine_2007)
Failed to find basket_for_clothes_2006 around washing_machine_2007. 
##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_counter_41)exp(basket_for_clothes_2006, bathroom_counter_41)walk_executor(basket_for_clothes_2006)
##############################
From agent.py
walk_executor(bathroom_counter_41)
Find towel_rack_34. Find towel_rack_32. Find towel_rack_31. Robot is inside bathroom_1. Robot is close bathroom_counter_41. Robot is no longer close washing_machine_2007.
##############################
From agent.py
exp(basket_for_clothes_2006, bathroom_counter_41)
Failed to find basket_for_clothes_2006 around bathroom_counter_41. 
##############################
From agent.py-> find a plan in act()
walk_executor(curtain_407)exp(basket_for_clothes_2006, curtain_407)walk_executor(basket_for_clothes_2006)
##############################
From agent.py
walk_executor(curtain_407)
Robot is inside home_office_319. Robot is close curtain_408. Robot is close curtain_407. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_41.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find basket_for_clothes_2006 ?
Answer: Robot, to find the basket_for_clothes_2006, please go to bathroom_1. Inside, look for the following items to help locate the basket:

- It is situated near multiple towel racks, specifically towel_rack_31, towel_rack_32, towel_rack_33, and towel_rack_34.
- The basket is located close to the shower_36 and bathtub_30.
- It is also near the toilet_37, sink_42, and faucet_43.
- On the ground, you will also find it close to mat_22.
- Additionally, there are clothes nearby, such as clothes_pants_2085, clothes_shirt_2086, clothes_skirt_2088, and clothes_socks_2087, some of which are inside the basket itself.

These surrounding signs should help you recognize and retrieve basket_for_clothes_2006 efficiently.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, to find the basket_for_clothes_2006, please go to bathroom_1. Inside, look for the following items to help locate the basket:

- It is situated near multiple towel racks, specifically towel_rack_31, towel_rack_32, towel_rack_33, and towel_rack_34.
- The basket is located close to the shower_36 and bathtub_30.
- It is also near the toilet_37, sink_42, and faucet_43.
- On the ground, you will also find it close to mat_22.
- Additionally, there are clothes nearby, such as clothes_pants_2085, clothes_shirt_2086, clothes_skirt_2088, and clothes_socks_2087, some of which are inside the basket itself.

These surrounding signs should help you recognize and retrieve basket_for_clothes_2006 efficiently.

The actions you have taken:
Action 1: Walk to coffee_table_2068.
Action 2: look for basket_for_clothes_2006 around coffee_table_2068.
Action 3: Walk to closetdrawer_388.
Action 4: look for basket_for_clothes_2006 around closetdrawer_388.
Action 5: Walk to closetdrawer_384.
Action 6: look for basket_for_clothes_2006 around closetdrawer_384.
Action 7: Walk to washing_machine_2007.
Action 8: Open washing_machine_2007.
Action 9: look for basket_for_clothes_2006 around washing_machine_2007.
Action 10: Walk to bathroom_counter_41.
Action 11: look for basket_for_clothes_2006 around bathroom_counter_41.
Action 12: Walk to curtain_407.

##############################
From agent.py
exp(basket_for_clothes_2006, curtain_407)
Failed to find basket_for_clothes_2006 around curtain_407. 
##############################
From agent.py-> find a plan in act()
walk_executor(towel_rack_32)exp(basket_for_clothes_2006, towel_rack_32)walk_executor(basket_for_clothes_2006)
##############################
From agent.py
walk_executor(towel_rack_32)
Find basket_for_clothes_2006. Find towel_2057. Robot is inside bathroom_1. Robot is close towel_rack_32. Robot is no longer inside home_office_319.Robot is no longer close curtain_408.Robot is no longer close curtain_407.
##############################
From agent.py
exp(basket_for_clothes_2006, towel_rack_32)
Find basket_for_clothes_2006. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Find clothes_pants_2085. Find clothes_shirt_2086. Find clothes_socks_2087. Find clothes_skirt_2088. Find towel_rack_33. Find mat_22. Robot is inside bathroom_1. Robot is close clothes_pants_2085. Robot is close clothes_shirt_2086. Robot is close clothes_socks_2087. Robot is close clothes_skirt_2088. Robot is close basket_for_clothes_2006. Robot is no longer close towel_rack_32.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_bathroom_cabinet_40(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_detergent_2084_around_bathroom_cabinet_40(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
def is_basket_for_clothes_filled(basket:item):
    # Determine whether the basket of clothes has clothes inside
    symbol basket_filled=exists clothes: item: is_clothes(clothes) and inside(clothes, basket)
    return basket_filled

def has_detergent(washing_machine:item):
    # Check if there is detergent inside the washing machine
    symbol inside_detergent=exists detergent: item: is_detergent(detergent) and inside(detergent, washing_machine)
    return inside_detergent

behavior add_soap_and_clothes_to_washing_machine(clothes:item, washing_machine:item, detergent:item):
    body:
        achieve inside(clothes, washing_machine)
        achieve inside(detergent, washing_machine)

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2006
        # Select the basket with clothes, with the given ID

        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2007
        # Select the washing machine, with the given ID

        bind detergent: item where:
            is_detergent(detergent)
        # Select detergent for adding to the washing machine

        if is_basket_for_clothes_filled(basket) and not has_detergent(washing_machine):
            foreach clothes: item:
                if is_clothes(clothes) and inside(clothes, basket):
                    add_soap_and_clothes_to_washing_machine(clothes, washing_machine, detergent)
            # Add both detergent and clothes to the washing machine

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_basket_for_clothes_filled(basket:item):
    # Determine whether the basket of clothes has clothes inside
    symbol basket_filled=exists clothes: item: is_clothes(clothes) and inside(clothes, basket)
    return basket_filled

def has_detergent(washing_machine:item):
    # Check if there is detergent inside the washing machine
    symbol inside_detergent=exists detergent: item: is_detergent(detergent) and inside(detergent, washing_machine)
    return inside_detergent

behavior add_soap_and_clothes_to_washing_machine(clothes:item, washing_machine:item, detergent:item):
    body:
        achieve inside(clothes, washing_machine)
        achieve inside(detergent, washing_machine)

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2006
        # Select the basket with clothes, with the given ID

        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2007
        # Select the washing machine, with the given ID

        bind detergent: item where:
            is_detergent(detergent)
        # Select detergent for adding to the washing machine

        if is_basket_for_clothes_filled(basket) and not has_detergent(washing_machine):
            foreach clothes: item:
                if is_clothes(clothes) and inside(clothes, basket):
                    add_soap_and_clothes_to_washing_machine(clothes, washing_machine, detergent)
            # Add both detergent and clothes to the washing machine

##############################
From agent.py-> find a plan in act()
grab_executor(clothes_pants_2085)walk_executor(washing_machine_2007)putin_executor(clothes_pants_2085, washing_machine_2007)walk_executor(bathroom_cabinet_40)open_executor(bathroom_cabinet_40)exp(detergent_2084, bathroom_cabinet_40)walk_executor(detergent_2084)grab_executor(detergent_2084)walk_executor(washing_machine_2007)putin_executor(detergent_2084, washing_machine_2007)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(washing_machine_2007)putin_executor(clothes_shirt_2086, washing_machine_2007)walk_executor(clothes_socks_2087)grab_executor(clothes_socks_2087)walk_executor(washing_machine_2007)putin_executor(clothes_socks_2087, washing_machine_2007)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(washing_machine_2007)putin_executor(clothes_skirt_2088, washing_machine_2007)
##############################
From agent.py
grab_executor(clothes_pants_2085)
Robot is inside bathroom_1. Robot is close clothes_pants_2085. Robot is close clothes_shirt_2086. Robot is close clothes_socks_2087. Robot is close clothes_skirt_2088. Robot is close basket_for_clothes_2006. Grabbing clothes_pants_2085 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot is inside bathroom_1. Robot is close clothes_pants_2085. Robot is close washing_machine_2007. Robot is no longer close clothes_shirt_2086.Robot is no longer close clothes_socks_2087.Robot is no longer close clothes_skirt_2088.Robot is no longer close basket_for_clothes_2006.
##############################
From agent.py
putin_executor(clothes_pants_2085, washing_machine_2007)
Robot is inside bathroom_1. Robot is close clothes_pants_2085. Robot is close washing_machine_2007. clothes_pants_2085 released by right hand. 
##############################
From agent.py
walk_executor(bathroom_cabinet_40)
Robot is inside bathroom_1. Robot is close bathroom_cabinet_40. Robot is close wall_12. Robot is no longer close clothes_pants_2085.Robot is no longer close washing_machine_2007.
##############################
From agent.py
open_executor(bathroom_cabinet_40)
Robot is inside bathroom_1. Robot is close bathroom_cabinet_40. Robot is close wall_12. 
##############################
From agent.py
exp(detergent_2084, bathroom_cabinet_40)
Failed to find detergent_2084 around bathroom_cabinet_40. 
##############################
From agent.py-> find a plan in act()
walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(washing_machine_2007)putin_executor(clothes_shirt_2086, washing_machine_2007)walk_executor(cupboard_229)open_executor(cupboard_229)exp(detergent_2084, cupboard_229)walk_executor(detergent_2084)grab_executor(detergent_2084)walk_executor(washing_machine_2007)putin_executor(detergent_2084, washing_machine_2007)walk_executor(clothes_socks_2087)grab_executor(clothes_socks_2087)walk_executor(washing_machine_2007)putin_executor(clothes_socks_2087, washing_machine_2007)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(washing_machine_2007)putin_executor(clothes_skirt_2088, washing_machine_2007)
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close basket_for_clothes_2006. Robot is no longer close bathroom_cabinet_40.Robot is no longer close wall_12.
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close basket_for_clothes_2006. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close clothes_pants_2085. Robot is close washing_machine_2007. Robot is no longer close basket_for_clothes_2006.
##############################
From agent.py
putin_executor(clothes_shirt_2086, washing_machine_2007)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close clothes_pants_2085. Robot is close washing_machine_2007. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
walk_executor(cupboard_229)
Find tray_296. Robot is inside dining_room_201. Robot is close wall_211. Robot is close cupboard_229. Robot is no longer inside bathroom_1.Robot is no longer close clothes_pants_2085.Robot is no longer close clothes_shirt_2086.Robot is no longer close washing_machine_2007.
##############################
From agent.py
open_executor(cupboard_229)
Robot is inside dining_room_201. Robot is close wall_211. Robot is close cupboard_229. 
##############################
From agent.py
exp(detergent_2084, cupboard_229)
Failed to find detergent_2084 around cupboard_229. 
##############################
From agent.py-> find a plan in act()
walk_executor(clothes_socks_2087)grab_executor(clothes_socks_2087)walk_executor(washing_machine_2007)putin_executor(clothes_socks_2087, washing_machine_2007)walk_executor(wallshelf_35)exp(detergent_2084, wallshelf_35)walk_executor(detergent_2084)grab_executor(detergent_2084)walk_executor(washing_machine_2007)putin_executor(detergent_2084, washing_machine_2007)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(washing_machine_2007)putin_executor(clothes_skirt_2088, washing_machine_2007)
##############################
From agent.py
walk_executor(clothes_socks_2087)
Robot is inside bathroom_1. Robot is close basket_for_clothes_2006. Robot is close clothes_socks_2087. Robot is no longer inside dining_room_201.Robot is no longer close wall_211.Robot is no longer close cupboard_229.
##############################
From agent.py
grab_executor(clothes_socks_2087)
Robot is inside bathroom_1. Robot is close basket_for_clothes_2006. Robot is close clothes_socks_2087. Grabbing clothes_socks_2087 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot is inside bathroom_1. Robot is close clothes_socks_2087. Robot is close clothes_pants_2085. Robot is close clothes_shirt_2086. Robot is close washing_machine_2007. Robot is no longer close basket_for_clothes_2006.
##############################
From agent.py
putin_executor(clothes_socks_2087, washing_machine_2007)
Robot is inside bathroom_1. Robot is close clothes_socks_2087. Robot is close clothes_pants_2085. Robot is close clothes_shirt_2086. Robot is close washing_machine_2007. clothes_socks_2087 released by right hand. 
##############################
From agent.py
walk_executor(wallshelf_35)
Robot is inside bathroom_1. Robot is close wallshelf_35. Robot is no longer close washing_machine_2007.Robot is no longer close clothes_pants_2085.Robot is no longer close clothes_shirt_2086.Robot is no longer close clothes_socks_2087.
##############################
From agent.py
exp(detergent_2084, wallshelf_35)
Failed to find detergent_2084 around wallshelf_35. 
##############################
From agent.py-> find a plan in act()
walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(washing_machine_2007)putin_executor(clothes_skirt_2088, washing_machine_2007)walk_executor(towel_rack_33)exp(detergent_2084, towel_rack_33)walk_executor(detergent_2084)grab_executor(detergent_2084)walk_executor(washing_machine_2007)putin_executor(detergent_2084, washing_machine_2007)
##############################
From agent.py
walk_executor(clothes_skirt_2088)
Robot is inside bathroom_1. Robot is close clothes_skirt_2088. Robot is close basket_for_clothes_2006. Robot is no longer close wallshelf_35.
##############################
From agent.py
grab_executor(clothes_skirt_2088)
Robot is inside bathroom_1. Robot is close clothes_skirt_2088. Robot is close basket_for_clothes_2006. Grabbing clothes_skirt_2088 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot is inside bathroom_1. Robot is close clothes_skirt_2088. Robot is close clothes_socks_2087. Robot is close clothes_pants_2085. Robot is close clothes_shirt_2086. Robot is close washing_machine_2007. Robot is no longer close basket_for_clothes_2006.
##############################
From agent.py
putin_executor(clothes_skirt_2088, washing_machine_2007)
Robot is inside bathroom_1. Robot is close clothes_skirt_2088. Robot is close clothes_socks_2087. Robot is close clothes_pants_2085. Robot is close clothes_shirt_2086. Robot is close washing_machine_2007. clothes_skirt_2088 released by right hand. 
##############################
From agent.py
walk_executor(towel_rack_33)
Find towel_2058. Robot is inside bathroom_1. Robot is close towel_rack_33. Robot is no longer close clothes_pants_2085.Robot is no longer close clothes_shirt_2086.Robot is no longer close clothes_socks_2087.Robot is no longer close clothes_skirt_2088.Robot is no longer close washing_machine_2007.
##############################
From agent.py
exp(detergent_2084, towel_rack_33)
Failed to find detergent_2084 around towel_rack_33. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_toilet_37(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind toilet_instance:item where:
            is_toilet(toilet_instance) and id[toilet_instance]==37
        achieve close_char(char,toilet_instance)
        if can_open(toilet_instance):
            achieve_once open(toilet_instance)
            exp(soap,toilet_instance)
        else:
            exp(soap,toilet_instance)
    eff:
        unknown[soap]=False
        close[soap,toilet_instance]=True
        close[toilet_instance,soap]=True
    

behavior find_detergent_2084_around_toilet_37(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind toilet_instance:item where:
            is_toilet(toilet_instance) and id[toilet_instance]==37
        achieve close_char(char,toilet_instance)
        if can_open(toilet_instance):
            achieve_once open(toilet_instance)
            exp(detergent,toilet_instance)
        else:
            exp(detergent,toilet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,toilet_instance]=True
        close[toilet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior add_soap_and_clothes_to_washing_machine(clothes:item, soap:item, washing_machine:item):
    body:
        achieve inside(clothes, washing_machine) # Place the clothes inside the washing machine
        achieve inside(soap, washing_machine) # Add soap inside the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2006
        # Select the basket with clothes

        bind detergent: item where:
            is_detergent(detergent) and not visited(detergent)
        # Ensure detergent is selected and not visited for potential observation

        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket):
                add_soap_and_clothes_to_washing_machine(clothes, detergent, washing_machine)
        # Add all clothes from the basket and soap into the washing machine
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_sink_42(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==42
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_soap_2053_around_sink_42(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==42
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_detergent_2084_around_shower_36(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==36
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(detergent,shower_instance)
        else:
            exp(detergent,shower_instance)
    eff:
        unknown[detergent]=False
        close[detergent,shower_instance]=True
        close[shower_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
def has_detergent():
    # Function to check if detergent is found
    symbol detergent_found=exists detergent: item: is_detergent(detergent) and visited(detergent)
    return detergent_found

behavior add_clothes_and_soap_to_washing_machine(clothes:item, washing_machine:item, detergent:item):
    body:
        achieve inside(clothes, washing_machine)
        achieve inside(detergent, washing_machine)

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2006
        # Select the basket with clothes

        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2007
        # Select the washing machine

        if not has_detergent():
            foreach location: item:
                if (is_bathroom_cabinet(location) or is_cupboard(location) or is_wallshelf(location)) and not visited(location):
                    observe(location, "Locate detergent_2084")

        bind detergent: item where:
            is_detergent(detergent)
        # Select detergent

        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket):
                add_clothes_and_soap_to_washing_machine(clothes, washing_machine, detergent)
        # Add all clothes and detergent to the washing machine

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def has_detergent():
    # Function to check if detergent is found
    symbol detergent_found=exists detergent: item: is_detergent(detergent) and visited(detergent)
    return detergent_found

behavior add_clothes_and_soap_to_washing_machine(clothes:item, washing_machine:item, detergent:item):
    body:
        achieve inside(clothes, washing_machine)
        achieve inside(detergent, washing_machine)

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2006
        # Select the basket with clothes

        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2007
        # Select the washing machine

        if not has_detergent():
            foreach location: item:
                if (is_bathroom_cabinet(location) or is_cupboard(location) or is_wallshelf(location)) and not visited(location):
                    observe(location, "Locate detergent_2084")

        bind detergent: item where:
            is_detergent(detergent)
        # Select detergent

        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket):
                add_clothes_and_soap_to_washing_machine(clothes, washing_machine, detergent)
        # Add all clothes and detergent to the washing machine

##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_35)obs(wallshelf_35, Locate detergent_2084)walk_executor(bathroom_cabinet_40)obs(bathroom_cabinet_40, Locate detergent_2084)walk_executor(cupboard_229)obs(cupboard_229, Locate detergent_2084)walk_executor(wallshelf_234)obs(wallshelf_234, Locate detergent_2084)walk_executor(wallshelf_235)obs(wallshelf_235, Locate detergent_2084)
##############################
From agent.py
walk_executor(wallshelf_35)
Robot is inside bathroom_1. Robot is close wallshelf_35. Robot is no longer close towel_rack_33.
##############################
From agent.py
obs(wallshelf_35, Locate detergent_2084)
Get this information:  wallshelf_35 is close to towel_rack_33. wallshelf_35 is close to towel_rack_34. wallshelf_35 is close to wall_9. wallshelf_35 is close to wall_13. wallshelf_35 is close to ceiling_20. wallshelf_35 is close to ceiling_21. wallshelf_35 is close to curtain_23. wallshelf_35 is close to curtain_24. wallshelf_35 is close to walllamp_27. wallshelf_35 is close to bathtub_30. wallshelf_35 is close to character_65. wallshelf_35 is inside bathroom_1. wallshelf_35 is CLEAN.
##############################
From agent.py
walk_executor(bathroom_cabinet_40)
Robot is inside bathroom_1. Robot is close bathroom_cabinet_40. Robot is close wall_12. Robot is no longer close wallshelf_35.
##############################
From agent.py
obs(bathroom_cabinet_40, Locate detergent_2084)
Get this information:  bathroom_cabinet_40 is close to bathroom_counter_41. bathroom_cabinet_40 is close to sink_42. bathroom_cabinet_40 is close to faucet_43. bathroom_cabinet_40 is close to wall_12. bathroom_cabinet_40 is close to wall_9. bathroom_cabinet_40 is close to ceiling_16. bathroom_cabinet_40 is close to drawing_176. bathroom_cabinet_40 is close to ceiling_21. bathroom_cabinet_40 is close to walllamp_27. bathroom_cabinet_40 is close to walllamp_28. bathroom_cabinet_40 is close to towel_rack_31. bathroom_cabinet_40 is close to character_65. bathroom_cabinet_40 is on wall_12. bathroom_cabinet_40 is inside bathroom_1. bathroom_cabinet_40 is CLEAN. bathroom_cabinet_40 is OPEN.
##############################
From agent.py
walk_executor(cupboard_229)
Robot is inside dining_room_201. Robot is close wall_211. Robot is close cupboard_229. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_cabinet_40.Robot is no longer close wall_12.
##############################
From agent.py
obs(cupboard_229, Locate detergent_2084)
Get this information:  cupboard_229 is on wall_211. cupboard_229 is close to stovefan_288. cupboard_229 is close to fridge_289. cupboard_229 is close to coffe_maker_290. cupboard_229 is close to toaster_292. cupboard_229 is close to shower_36. cupboard_229 is close to kitchen_counter_230. cupboard_229 is close to sink_231. cupboard_229 is close to faucet_232. cupboard_229 is close to microwave_297. cupboard_229 is close to tray_296. cupboard_229 is close to wall_11. cupboard_229 is close to oven_295. cupboard_229 is close to wall_15. cupboard_229 is close to ceiling_18. cupboard_229 is close to wall_211. cupboard_229 is close to wall_212. cupboard_229 is close to ceiling_216. cupboard_229 is close to ceiling_221. cupboard_229 is close to character_65. cupboard_229 is inside dining_room_201. cupboard_229 is CLEAN. cupboard_229 is OPEN.
##############################
From agent.py
walk_executor(wallshelf_234)
Find drawing_241. Find drawing_240. Find drawing_238. Find drawing_239. Find drawing_242. Find drawing_243. Robot is inside dining_room_201. Robot is close wallshelf_234. Robot is close wall_212. Robot is no longer close wall_211.Robot is no longer close cupboard_229.
##############################
From agent.py
obs(wallshelf_234, Locate detergent_2084)
Get this information:  wallshelf_234 is inside dining_room_201. wallshelf_234 is facing drawing_240. wallshelf_234 is facing drawing_238. wallshelf_234 is facing drawing_239. wallshelf_234 is on wall_212. wallshelf_234 is close to stovefan_288. wallshelf_234 is close to bookshelf_354. wallshelf_234 is close to oven_295. wallshelf_234 is close to wall_332. wallshelf_234 is close to photoframe_430. wallshelf_234 is close to drawing_241. wallshelf_234 is close to drawing_242. wallshelf_234 is close to drawing_243. wallshelf_234 is close to wall_212. wallshelf_234 is close to drawing_403. wallshelf_234 is close to wall_214. wallshelf_234 is close to wall_215. wallshelf_234 is close to ceiling_337. wallshelf_234 is close to ceiling_220. wallshelf_234 is close to ceiling_221. wallshelf_234 is close to character_65. wallshelf_234 is CLEAN.
##############################
From agent.py
walk_executor(wallshelf_235)
Robot is inside dining_room_201. Robot is close wallshelf_235. Robot is no longer close wallshelf_234.Robot is no longer close wall_212.
##############################
From agent.py
obs(wallshelf_235, Locate detergent_2084)
Get this information:  wallshelf_235 is inside dining_room_201. wallshelf_235 is facing television_248. wallshelf_235 is close to table_226. wallshelf_235 is close to wall_331. wallshelf_235 is close to wall_332. wallshelf_235 is close to filing_cabinet_399. wallshelf_235 is close to drawing_241. wallshelf_235 is close to drawing_242. wallshelf_235 is close to drawing_402. wallshelf_235 is close to drawing_404. wallshelf_235 is close to drawing_403. wallshelf_235 is close to wall_214. wallshelf_235 is close to drawing_243. wallshelf_235 is close to wall_213. wallshelf_235 is close to ceiling_337. wallshelf_235 is close to doorjamb_346. wallshelf_235 is close to ceiling_219. wallshelf_235 is close to ceiling_220. wallshelf_235 is close to light_411. wallshelf_235 is close to ceiling_342. wallshelf_235 is close to character_65. wallshelf_235 is CLEAN.
##############################
From agent.py
Human Instruction: You need to locate and add detergent to the washing machine to complete the sub-task of adding soap and clothes. Make sure all clothes from the basket are also inside the washing machine.

The actions you have taken:
Action 1: Walk to coffee_table_2068.
Action 2: look for basket_for_clothes_2006 around coffee_table_2068.
Action 3: Walk to closetdrawer_388.
Action 4: look for basket_for_clothes_2006 around closetdrawer_388.
Action 5: Walk to closetdrawer_384.
Action 6: look for basket_for_clothes_2006 around closetdrawer_384.
Action 7: Walk to washing_machine_2007.
Action 8: Open washing_machine_2007.
Action 9: look for basket_for_clothes_2006 around washing_machine_2007.
Action 10: Walk to bathroom_counter_41.
Action 11: look for basket_for_clothes_2006 around bathroom_counter_41.
Action 12: Walk to curtain_407.
Action 13: look for basket_for_clothes_2006 around curtain_407.
Action 14: Walk to towel_rack_32.
Action 15: look for basket_for_clothes_2006 around towel_rack_32.
Action 16: Walk to basket_for_clothes_2006.
Action 17: Grab clothes_pants_2085.
Action 18: Walk to washing_machine_2007.
Action 19: Put clothes_pants_2085 into washing_machine_2007.
Action 20: Walk to bathroom_cabinet_40.
Action 21: Open bathroom_cabinet_40.
Action 22: look for detergent_2084 around bathroom_cabinet_40.
Action 23: Walk to clothes_shirt_2086.
Action 24: Grab clothes_shirt_2086.
Action 25: Walk to washing_machine_2007.
Action 26: Put clothes_shirt_2086 into washing_machine_2007.
Action 27: Walk to cupboard_229.
Action 28: Open cupboard_229.
Action 29: look for detergent_2084 around cupboard_229.
Action 30: Walk to clothes_socks_2087.
Action 31: Grab clothes_socks_2087.
Action 32: Walk to washing_machine_2007.
Action 33: Put clothes_socks_2087 into washing_machine_2007.
Action 34: Walk to wallshelf_35.
Action 35: look for detergent_2084 around wallshelf_35.
Action 36: Walk to clothes_skirt_2088.
Action 37: Grab clothes_skirt_2088.
Action 38: Walk to washing_machine_2007.
Action 39: Put clothes_skirt_2088 into washing_machine_2007.
Action 40: Walk to towel_rack_33.
Action 41: look for detergent_2084 around towel_rack_33.
Action 42: Walk to wallshelf_35.
Action 43: Observe around wallshelf_35 with the question of Locate detergent_2084.
Action 44: Walk to bathroom_cabinet_40.
Action 45: Observe around bathroom_cabinet_40 with the question of Locate detergent_2084.
Action 46: Walk to cupboard_229.
Action 47: Observe around cupboard_229 with the question of Locate detergent_2084.
Action 48: Walk to wallshelf_234.
Action 49: Observe around wallshelf_234 with the question of Locate detergent_2084.
Action 50: Walk to wallshelf_235.
Action 51: Observe around wallshelf_235 with the question of Locate detergent_2084.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2053_around_sink_231(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_detergent_2084_around_closetdrawer_382(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==382
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(detergent,closetdrawer_instance)
        else:
            exp(detergent,closetdrawer_instance)
    eff:
        unknown[detergent]=False
        close[detergent,closetdrawer_instance]=True
        close[closetdrawer_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
def locate_detergent():
    symbol found_detergent=exists detergent: item : is_detergent(detergent) and visited(detergent)
    return found_detergent

behavior add_clothes_and_detergent_to_washing_machine(clothes:item, washing_machine:item, detergent:item):
    body:
        achieve inside(clothes, washing_machine)
        # Place clothes inside the washing machine
        achieve inside(detergent, washing_machine)
        # Add detergent to the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2006
        # Select the basket with clothes
        
        if locate_detergent():
            bind detergent: item where:
                is_detergent(detergent)
            # Bind the detergent if already found
        else:
            foreach storage: item:
                if (is_bathroom_cabinet(storage) or is_cupboard(storage) or is_wallshelf(storage) or is_towel_rack(storage)) and not visited(storage):
                    observe(storage, "Locate detergent_2084")
            bind detergent: item where:
                is_detergent(detergent) and visited(detergent)
            # Once detergent is found, bind it

        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket):
                add_clothes_and_detergent_to_washing_machine(clothes, washing_machine, detergent)
        # Add all clothes from the basket, and detergent to the washing machine

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: detergent; available variables: [Variable<clothes: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_soap_2054_around_shower_38(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==38
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(soap,shower_instance)
        else:
            exp(soap,shower_instance)
    eff:
        unknown[soap]=False
        close[soap,shower_instance]=True
        close[shower_instance,soap]=True
    

behavior find_soap_2053_around_sink_231(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_detergent_2084_around_drawing_241(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind drawing_instance:item where:
            is_drawing(drawing_instance) and id[drawing_instance]==241
        achieve close_char(char,drawing_instance)
        if can_open(drawing_instance):
            achieve_once open(drawing_instance)
            exp(detergent,drawing_instance)
        else:
            exp(detergent,drawing_instance)
    eff:
        unknown[detergent]=False
        close[detergent,drawing_instance]=True
        close[drawing_instance,detergent]=True
    

#goal_representation
 
def locate_detergent():
    symbol found_detergent=exists detergent: item : is_detergent(detergent) and visited(detergent)
    return found_detergent

behavior add_clothes_and_detergent_to_washing_machine(clothes:item, washing_machine:item, detergent:item):
    body:
        achieve inside(clothes, washing_machine)
        # Place clothes inside the washing machine
        achieve inside(detergent, washing_machine)
        # Add detergent to the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2006
        # Select the basket with clothes

        if locate_detergent():
            bind detergent: item where:
                is_detergent(detergent)
            # Bind the detergent if already found
        else:
            foreach storage: item:
                if (is_bathroom_cabinet(storage) or is_cupboard(storage) or is_wallshelf(storage) or is_towel_rack(storage)) and not visited(storage):
                    observe(storage, "Locate detergent_2084")
            bind detergent: item where:
                is_detergent(detergent) and visited(detergent)
            # Once detergent is found, bind it

        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket):
                add_clothes_and_detergent_to_washing_machine(clothes, washing_machine, detergent)
        # Add all clothes from the basket, and detergent to the washing machine

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: detergent; available variables: [Variable<clothes: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_soap_2054_around_sink_231(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_soap_2053_around_sink_231(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#goal_representation
 
def locate_detergent():
    symbol found_detergent=exists detergent: item : is_detergent(detergent) and visited(detergent)
    return found_detergent

behavior add_clothes_and_detergent_to_washing_machine(clothes:item, washing_machine:item, detergent:item):
    body:
        achieve inside(clothes, washing_machine)
        # Place clothes inside the washing machine
        achieve inside(detergent, washing_machine)
        # Add detergent to the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2006
        # Select the basket with clothes

        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket):
                if locate_detergent():
                    bind detergent: item where:
                        is_detergent(detergent)
                    # Bind the detergent if already found
                    add_clothes_and_detergent_to_washing_machine(clothes, washing_machine, detergent)
                else:
                    foreach storage: item:
                        if (is_bathroom_cabinet(storage) or is_cupboard(storage) or is_wallshelf(storage) or is_towel_rack(storage)) and not visited(storage):
                            observe(storage, "Locate detergent_2084")
                    bind detergent: item where:
                        is_detergent(detergent) and visited(detergent)
                    # Once detergent is found, bind it
                    add_clothes_and_detergent_to_washing_machine(clothes, washing_machine, detergent)
        # Add all clothes from the basket, and detergent to the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_sink_231(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_soap_2053_around_sink_231(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_detergent_2084_around_closetdrawer_392(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==392
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(detergent,closetdrawer_instance)
        else:
            exp(detergent,closetdrawer_instance)
    eff:
        unknown[detergent]=False
        close[detergent,closetdrawer_instance]=True
        close[closetdrawer_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior add_clothes_and_soap_to_washing_machine(clothes:item, soap:item, washing_machine:item):
    body:
        achieve inside(clothes, washing_machine)
        achieve inside(soap, washing_machine)

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2006
        # Select the basket with clothes

        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2007
        # Select the washing machine

        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket):
                achieve inside(clothes, washing_machine)
        # Place all clothes from the basket into the washing machine

        if not exists detergent: item: is_detergent(detergent) and inside(detergent, washing_machine):
            foreach location: item where not visited(location):
                observe(location, "Locate detergent_2084")
            bind detergent: item where:
                is_detergent(detergent)
            add_clothes_and_soap_to_washing_machine(clothes, detergent, washing_machine)
#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'detergent') at line 6052, column 23.
Expected one of: 
	* COLON

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_soap_2054_around_sink_231(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_soap_2053_around_sink_42(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==42
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_cleaning_solution_2073_around_shower_38(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==38
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(cleaning_solution,shower_instance)
        else:
            exp(cleaning_solution,shower_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,shower_instance]=True
        close[shower_instance,cleaning_solution]=True
    

behavior find_detergent_2084_around_hanger_359(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==359
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(detergent,hanger_instance)
        else:
            exp(detergent,hanger_instance)
    eff:
        unknown[detergent]=False
        close[detergent,hanger_instance]=True
        close[hanger_instance,detergent]=True
    

#goal_representation

behavior add_clothes_and_soap_to_washing_machine(clothes:item, soap:item, washing_machine:item):
    body:
        achieve inside(clothes, washing_machine)
        achieve inside(soap, washing_machine)

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2006
        # Select the basket with clothes

        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2007
        # Select the washing machine

        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket):
                achieve inside(clothes, washing_machine)
        # Place all clothes from the basket into the washing machine

        if not exists detergent: item: is_detergent(detergent) and inside(detergent, washing_machine):
            foreach location: item:
                if not visited(location):
                    observe(location, "Locate detergent_2084")
            bind detergent: item where:
                is_detergent(detergent)
            add_clothes_and_soap_to_washing_machine(detergent, detergent, washing_machine)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'detergent') at line 6071, column 23.
Expected one of: 
	* COLON

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_soap_2054_around_sink_231(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_detergent_2084_around_kitchen_counter_230(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(detergent,kitchen_counter_instance)
        else:
            exp(detergent,kitchen_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,kitchen_counter_instance]=True
        close[kitchen_counter_instance,detergent]=True
    

#goal_representation
 
behavior add_clothes_and_soap_to_washing_machine(clothes:item, soap:item, washing_machine:item):
    body:
        achieve inside(clothes, washing_machine)
        achieve inside(soap, washing_machine)

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2006
        # Select the basket with clothes

        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2007
        # Select the washing machine

        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket):
                achieve inside(clothes, washing_machine)
        # Place all clothes from the basket into the washing machine

        if not exists detergent: item : is_detergent(detergent) and inside(detergent, washing_machine):
            foreach location: item:
                if not visited(location):
                    observe(location, "Locate detergent_2084")
            bind detergent: item where:
                is_detergent(detergent) and not inside(detergent, washing_machine)
            add_clothes_and_soap_to_washing_machine(detergent, detergent, washing_machine)

#goal_representation_end

##############################
