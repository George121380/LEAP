From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the underwear with soap.  ', '2. Put the underwear in the washing machine and add some detergent for a thorough clean.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_bathroom_cabinet_40(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_clothes_underwear_2049_around_closetdrawer_388(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==388
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_underwear,closetdrawer_instance)
        else:
            exp(clothes_underwear,closetdrawer_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_underwear]=True
    

#exp_behavior_end

#goal_representation
 
def has_faucet(sink:item):
    # Determine whether this sink has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet,sink)
    return has_faucet

behavior hand_wash_underwear(underwear:item, sink:item):
    body:
        achieve inside(underwear, sink)
        # Ensure the underwear is placed inside the sink

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet,sink)
            achieve_once is_on(faucet)
            # If the sink has a faucet, turn it on

        bind soap: item where:
            is_soap(soap)
        achieve inside(soap, sink)
        # Add soap to the sink

        wash(underwear) 
        # Wash the underwear by hand

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet,sink)
            achieve_once is_off(faucet)
            # Turn off the faucet after washing

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select the underwear

        bind sink: item where:
            is_sink(sink)
        # Select a sink

        hand_wash_underwear(underwear, sink)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_faucet(sink:item):
    # Determine whether this sink has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet,sink)
    return has_faucet

behavior hand_wash_underwear(underwear:item, sink:item):
    body:
        achieve inside(underwear, sink)
        # Ensure the underwear is placed inside the sink

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet,sink)
            achieve_once is_on(faucet)
            # If the sink has a faucet, turn it on

        bind soap: item where:
            is_soap(soap)
        achieve inside(soap, sink)
        # Add soap to the sink

        wash(underwear) 
        # Wash the underwear by hand

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet,sink)
            achieve_once is_off(faucet)
            # Turn off the faucet after washing

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select the underwear

        bind sink: item where:
            is_sink(sink)
        # Select a sink

        hand_wash_underwear(underwear, sink)

##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_388)exp(clothes_underwear_2049, closetdrawer_388)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(sink_42)putin_executor(clothes_underwear_2049, sink_42)walk_executor(faucet_43)switchon_executor(faucet_43)walk_executor(bathroom_cabinet_40)open_executor(bathroom_cabinet_40)exp(soap_2053, bathroom_cabinet_40)walk_executor(soap_2053)grab_executor(soap_2053)walk_executor(sink_42)putin_executor(soap_2053, sink_42)walk_executor(clothes_underwear_2049)wash_executor(clothes_underwear_2049)
##############################
From agent.py
walk_executor(closetdrawer_388)
Find hanger_361. Find hanger_372. Find hanger_363. Find hanger_374. Find hanger_375. Find hanger_367. Find hanger_359. Find hanger_369. Find hanger_365. Find hanger_376. Robot is inside home_office_319. Robot is close closetdrawer_394. Robot is close closetdrawer_388. Robot is close dresser_358. Robot is no longer inside bathroom_1.
##############################
From agent.py
exp(clothes_underwear_2049, closetdrawer_388)
Failed to find clothes_underwear_2049 around closetdrawer_388. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_120)exp(clothes_underwear_2049, closetdrawer_120)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(sink_42)putin_executor(clothes_underwear_2049, sink_42)walk_executor(faucet_43)switchon_executor(faucet_43)walk_executor(bathroom_counter_41)exp(soap_2053, bathroom_counter_41)walk_executor(soap_2053)grab_executor(soap_2053)walk_executor(sink_42)putin_executor(soap_2053, sink_42)walk_executor(clothes_underwear_2049)wash_executor(clothes_underwear_2049)
##############################
From agent.py
walk_executor(closetdrawer_120)
Find hanger_110. Find hanger_140. Find hanger_109. Find hanger_132. Find hanger_113. Find hanger_112. Find mat_173. Find hanger_124. Find hanger_115. Find hanger_128. Find hanger_130. Find hanger_134. Find hanger_136. Find hanger_138. Find hanger_141. Find hanger_142. Find hanger_111. Find hanger_114. Find hanger_126. Robot is inside bedroom_67. Robot is close closetdrawer_120. Robot is close closetdrawer_122. Robot is close dresser_108. Robot is no longer inside home_office_319.Robot is no longer close closetdrawer_394.Robot is no longer close closetdrawer_388.Robot is no longer close dresser_358.
##############################
From agent.py
exp(clothes_underwear_2049, closetdrawer_120)
Failed to find clothes_underwear_2049 around closetdrawer_120. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the underwear with soap.', '2. Put the underwear in the washing machine and add detergent for a thorough clean.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2053_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_underwear(underwear:item, soap:item, sink:item):
    body:
        achieve inside(underwear, sink)
        achieve inside(soap, sink)
        wash(underwear)

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select the underwear

        bind soap: item where:
            is_soap(soap)
        # Select the soap

        bind sink: item where:
            is_sink(sink)
        # Select a sink

        hand_wash_underwear(underwear, soap, sink)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothes_underwear_found():
    # Function to check if the underwear has already been found
    symbol underwear_found=visited(clothes_underwear)
    return underwear_found

behavior observe_for_underwear(closetdrawer:item):
    body:
        observe(closetdrawer, "Locate clothes_underwear_2049")

behavior hand_wash_underwear(underwear:item, soap:item, sink:item):
    body:
        achieve inside(underwear, sink)
        wash(underwear)
        scrub(underwear)
        rinse(underwear)

behavior __goal__():
    body:
        bind clothes_underwear: item where:
            is_clothes_underwear(clothes_underwear) and not visited(clothes_underwear)

        if not is_clothes_underwear_found():
            bind closetdrawer_388: item where:
                is_closetdrawer(closetdrawer_388)
            observe_for_underwear(closetdrawer_388)

            bind closetdrawer_120: item where:
                is_closetdrawer(closetdrawer_120)
            observe_for_underwear(closetdrawer_120)

        bind clothes_underwear: item where:
            is_clothes_underwear(clothes_underwear) and visited(clothes_underwear)

        bind soap: item where:
            is_soap(soap)

        bind sink: item where:
            is_sink(sink)

        hand_wash_underwear(clothes_underwear, soap, sink)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Unknown variable: clothes_underwear; available variables: [].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_soap_2054_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_soap_2053_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

#goal_representation
 
def is_clothes_underwear_found(clothes_underwear:item):
    # Function to check if the underwear has already been found
    symbol underwear_found=visited(clothes_underwear)
    return underwear_found

behavior observe_for_underwear(closetdrawer:item):
    body:
        observe(closetdrawer, "Locate clothes_underwear_2049")

behavior hand_wash_underwear(underwear:item, soap:item, sink:item):
    body:
        achieve inside(underwear, sink)
        wash(underwear)
        scrub(underwear)
        rinse(underwear)

behavior __goal__():
    body:
        if not exists clothes_underwear: item : is_clothes_underwear(clothes_underwear) and is_clothes_underwear_found(clothes_underwear):
            bind closetdrawer_388: item where:
                is_closetdrawer(closetdrawer_388)
            observe_for_underwear(closetdrawer_388)

            bind closetdrawer_120: item where:
                is_closetdrawer(closetdrawer_120)
            observe_for_underwear(closetdrawer_120)

        bind clothes_underwear: item where:
            is_clothes_underwear(clothes_underwear) and visited(clothes_underwear)

        bind soap: item where:
            is_soap(soap)

        bind sink: item where:
            is_sink(sink)

        hand_wash_underwear(clothes_underwear, soap, sink)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'clothes_underwear') at line 5948, column 23.
Expected one of: 
	* COLON

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_soap_2053_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_soap_2054_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

#goal_representation
 
def is_clothes_underwear_found(clothes_underwear:item):
    # Function to check if the underwear has already been found
    symbol underwear_found=visited(clothes_underwear)
    return underwear_found

behavior observe_for_underwear(closetdrawer:item):
    body:
        observe(closetdrawer, "Locate clothes_underwear_2049")

behavior hand_wash_underwear(underwear:item, soap:item, sink:item):
    body:
        achieve inside(underwear, sink)
        wash(underwear)
        scrub(underwear)
        rinse(underwear)

behavior __goal__():
    body:
        if not exists clothes_underwear: item : is_clothes_underwear(clothes_underwear) and is_clothes_underwear_found(clothes_underwear):
            bind closetdrawer_388: item where:
                is_closetdrawer(closetdrawer_388)
            observe_for_underwear(closetdrawer_388)

            bind closetdrawer_120: item where:
                is_closetdrawer(closetdrawer_120)
            observe_for_underwear(closetdrawer_120)

        bind clothes_underwear: item where:
            is_clothes_underwear(clothes_underwear) and visited(clothes_underwear)

        bind soap: item where:
            is_soap(soap)

        bind sink: item where:
            is_sink(sink)

        hand_wash_underwear(clothes_underwear, soap, sink)

#goal_representation_end

##############################
From agent.py->reset_goal
Failed to generate the goal representation
##############################
