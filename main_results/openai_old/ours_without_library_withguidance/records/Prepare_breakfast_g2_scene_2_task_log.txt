From agent.py
Reset goals: The sub-goals are: 
['Scramble the egg using the frying pan.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
 
behavior hold_frying_pan_and_scramble_egg(egg: item, frying_pan: item):
    body:
        achieve_once inhand(frying_pan)
        # Hold the frying pan with one hand

        achieve cut(egg)
        # Crack the egg

behavior place_frying_egg_in_frying_pan(egg: item, frying_pan: item):
    body:
        achieve on(egg, frying_pan)
        # Place the egg onto the frying pan
        
behavior scramble_egg(frying_pan: item):
    body:
        achieve dirty(frying_pan)
        # Ensure the frying pan is used for scrambling the egg

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select an instance of an egg

        bind frying_pan: item where:
            is_fryingpan(frying_pan)
        # Select an instance of a frying pan

        hold_frying_pan_and_scramble_egg(egg, frying_pan)
        # Hold the frying pan and crack the egg

        place_frying_egg_in_frying_pan(egg, frying_pan)
        # Place the egg onto the frying pan

        scramble_egg(frying_pan)
        # Scramble the egg in the frying pan

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_oil_2005_around_kitchen_counter_132(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(oil,kitchen_counter_instance)
        else:
            exp(oil,kitchen_counter_instance)
    eff:
        unknown[oil]=False
        close[oil,kitchen_counter_instance]=True
        close[kitchen_counter_instance,oil]=True
    

#exp_behavior_end

#goal_representation
behavior scramble_egg(fryingpan: item):
    body:
        achieve cut(fryingpan)
        # Ensure the egg in the frying pan is scrambled

behavior __goal__():
    body:
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select an instance of a frying pan

        scramble_egg(fryingpan)
        # Scramble the egg using the frying pan
#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "scramble the egg using the frying pan." ?
Answer: Put the pan on the stove. Turn on the stove. Put oil in the pan. Put the egg in the pan.
Re-decompose: True

##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Put the pan on the stove.', '2. Turn on the stove.', '3. Add oil to the pan.', '4. Crack the egg into the pan and scramble it.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_jam_2059_around_doorjamb_356(food_jam:item):
    goal: not unknown(food_jam)
    body:
        assert is_food_jam(food_jam)
        bind doorjamb_instance:item where:
            is_doorjamb(doorjamb_instance) and id[doorjamb_instance]==356
        achieve close_char(char,doorjamb_instance)
        if can_open(doorjamb_instance):
            achieve_once open(doorjamb_instance)
            exp(food_jam,doorjamb_instance)
        else:
            exp(food_jam,doorjamb_instance)
    eff:
        unknown[food_jam]=False
        close[food_jam,doorjamb_instance]=True
        close[doorjamb_instance,food_jam]=True
    

behavior find_fryingpan_2107_around_kitchen_counter_128(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

behavior find_oil_2102_around_kitchen_counter_128(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(oil,kitchen_counter_instance)
        else:
            exp(oil,kitchen_counter_instance)
    eff:
        unknown[oil]=False
        close[oil,kitchen_counter_instance]=True
        close[kitchen_counter_instance,oil]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_pan_on_stove(pan: item, stove: item):
    body:
        achieve on(pan, stove)
        # Place the pan on the stove

behavior __goal__():
    body:
        bind pan: item where:
            is_fryingpan(pan)
        # Select an instance of a frying pan

        bind stove: item where:
            is_stove(stove)
        # Select an instance of a stove

        put_pan_on_stove(pan, stove)
        # Put the pan on the stove

#goal_representation_end

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(fryingpan_2107, kitchen_counter_128)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Find spectacles_2106. Find cutting_board_2080. Find food_orange_2008. Robot is inside dining_room_1. Robot is close kitchen_counter_128. Robot is close floor_15. Robot is no longer inside home_office_161.
##############################
From agent.py
exp(fryingpan_2107, kitchen_counter_128)
Fail to find fryingpan_2107 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(stove_2090)open_executor(stove_2090)exp(fryingpan_2107, stove_2090)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)
##############################
From agent.py
walk_executor(stove_2090)
Find pot_54. Find pot_2093. Find tray_142. Find oil_2102. Find fryingpan_2107. Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close stove_2090. Robot is no longer close kitchen_counter_128.Robot is no longer close floor_15.
##############################
From agent.py
open_executor(stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close stove_2090. 
##############################
From agent.py
exp(fryingpan_2107, stove_2090)
Find fryingpan_2107. 
##############################
From agent.py-> find a plan in act()
walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Robot is no longer close stove_2090.
##############################
From agent.py
grab_executor(fryingpan_2107)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Grabbing fryingpan_2107 by right hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Robot is close stove_2090. 
##############################
From agent.py
put_executor(fryingpan_2107, stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Robot is close stove_2090. fryingpan_2107 released by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2005_around_oil_2102(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind oil_instance:item where:
            is_oil(oil_instance) and id[oil_instance]==2102
        achieve close_char(char,oil_instance)
        if can_open(oil_instance):
            achieve_once open(oil_instance)
            exp(oil,oil_instance)
        else:
            exp(oil,oil_instance)
    eff:
        unknown[oil]=False
        close[oil,oil_instance]=True
        close[oil_instance,oil]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
 
behavior turn_on_stove(stove: item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove) and id[stove] == 2090
        turn_on_stove(stove)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior turn_on_stove(stove: item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove) and id[stove] == 2090
        turn_on_stove(stove)

##############################
From agent.py-> find a plan in act()
close_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
close_executor(stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Robot is close stove_2090. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Robot is close stove_2090. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2005_around_cupboard_130(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(oil,cupboard_instance)
        else:
            exp(oil,cupboard_instance)
    eff:
        unknown[oil]=False
        close[oil,cupboard_instance]=True
        close[cupboard_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_add_oil(stove: item, pan: item, oil: item):
    body:
        assert close_char(char, stove)
        # Ensure that the character is close to the stove
        achieve on(pan, stove)
        # Ensure the pan is on the stove
        achieve_once inhand(oil)
        # Temporarily hold the oil
        achieve_once inside(oil, pan)
        # Add oil to the pan

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove) and id[stove] == 2090
        # Select the stove with ID 2090
        
        bind pan: item where:
            is_fryingpan(pan) and on(pan, stove)
        # Select the frying pan that is on the stove
        
        bind oil: item where:
            is_oil(oil)
        # Select an instance of oil

        find_and_add_oil(stove, pan, oil)
        # Add oil to the pan on the stove

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior find_and_add_oil(stove: item, pan: item, oil: item):
    body:
        assert close_char(char, stove)
        # Ensure that the character is close to the stove
        achieve on(pan, stove)
        # Ensure the pan is on the stove
        achieve_once inhand(oil)
        # Temporarily hold the oil
        achieve_once inside(oil, pan)
        # Add oil to the pan

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove) and id[stove] == 2090
        # Select the stove with ID 2090
        
        bind pan: item where:
            is_fryingpan(pan) and on(pan, stove)
        # Select the frying pan that is on the stove
        
        bind oil: item where:
            is_oil(oil)
        # Select an instance of oil

        find_and_add_oil(stove, pan, oil)
        # Add oil to the pan on the stove

##############################
From agent.py-> find a plan in act()
walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)
##############################
From agent.py
walk_executor(oil_2102)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close oil_2102. Robot is no longer close stove_2090.Robot is no longer close fryingpan_2107.
##############################
From agent.py
grab_executor(oil_2102)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close oil_2102. Grabbing oil_2102 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot is inside dining_room_1. Robot is close oil_2102. Robot is close stove_2090. Robot is close fryingpan_2107. Robot is no longer close kitchen_counter_129.
##############################
From agent.py
putin_executor(oil_2102, fryingpan_2107)
Robot is inside dining_room_1. Robot is close oil_2102. Robot is close stove_2090. Robot is close fryingpan_2107. oil_2102 released by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
 
behavior crack_egg_and_scramble(egg: item, fryingpan: item):
    body:
        achieve_once inhand(egg)
        # Temporarily hold the egg to crack it into the fryingpan

        achieve crack(egg)
        # Crack the egg

        achieve inside(egg, fryingpan)
        # Ensure the egg is inside the fryingpan

        achieve clean(fryingpan)
        # Scramble the egg in the fryingpan

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select an instance of an egg

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select the fryingpan

        crack_egg_and_scramble(egg, fryingpan)
        # Crack the egg and scramble it in the fryingpan

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

'Function crack not found. Note that recursive function calls are not supported in the current version.'
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_egg_2053_around_cupboard_130(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_egg,cupboard_instance)
        else:
            exp(food_egg,cupboard_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,cupboard_instance]=True
        close[cupboard_instance,food_egg]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#goal_representation

behavior crack_egg_and_scramble(egg: item, fryingpan: item):
    body:
        achieve_once inhand(egg)
        # Temporarily hold the egg to crack it into the fryingpan

        achieve cut(egg)
        # Use cut instead of crack due to the available states

        achieve inside(egg, fryingpan)
        # Ensure the egg is inside the fryingpan

        achieve clean(fryingpan)
        # Scramble the egg in the fryingpan

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select an instance of an egg

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select the fryingpan

        crack_egg_and_scramble(egg, fryingpan)
        # Crack the egg and scramble it in the fryingpan

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior crack_egg_and_scramble(egg: item, fryingpan: item):
    body:
        achieve_once inhand(egg)
        # Temporarily hold the egg to crack it into the fryingpan

        achieve cut(egg)
        # Use cut instead of crack due to the available states

        achieve inside(egg, fryingpan)
        # Ensure the egg is inside the fryingpan

        achieve clean(fryingpan)
        # Scramble the egg in the fryingpan

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select an instance of an egg

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select the fryingpan

        crack_egg_and_scramble(egg, fryingpan)
        # Crack the egg and scramble it in the fryingpan

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(food_egg_2053, cupboard_130)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(cupboard_130)
Find blender_2032. Find tea_bag_2017. Robot is inside dining_room_1. Robot is close blender_2032. Robot is close tea_bag_2017. Robot is close cupboard_130. Robot is no longer close stove_2090.Robot is no longer close fryingpan_2107.Robot is no longer close oil_2102.
##############################
From agent.py
exp(food_egg_2053, cupboard_130)
Fail to find food_egg_2053 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(fridge_140)
Find food_cereal_2048. Find food_cheese_2049. Find food_chicken_2050. Find food_dessert_2051. Find food_donut_2052. Find food_egg_2053. Find food_fish_2054. Find food_food_2055. Find food_fruit_2056. Find food_hamburger_2057. Find food_ice_cream_2058. Find food_jam_2059. Find food_kiwi_2060. Find food_lemon_2061. Find food_noodles_2062. Find food_oatmeal_2063. Find food_peanut_butter_2064. Find food_pizza_2065. Find food_potato_2066. Find food_rice_2067. Find food_salt_2068. Find food_snack_2069. Find food_sugar_2070. Find food_turkey_2071. Find food_vegetable_2072. Find dry_pasta_2073. Find milk_2074. Find sauce_2101. Find food_steak_2042. Find food_apple_2043. Find food_bacon_2044. Find food_banana_2045. Find food_cake_2046. Find food_carrot_2047. Find chair_138. Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Robot is no longer close blender_2032.Robot is no longer close tea_bag_2017.Robot is no longer close cupboard_130.
##############################
From agent.py
switchoff_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
open_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
exp(food_egg_2053, fridge_140)
Find food_egg_2053. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
grab_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close cutting_board_2080. Robot is close kitchen_counter_128. Robot is no longer close food_cereal_2048.Robot is no longer close food_cheese_2049.Robot is no longer close food_chicken_2050.Robot is no longer close food_dessert_2051.Robot is no longer close food_donut_2052.Robot is no longer close food_fish_2054.Robot is no longer close food_food_2055.Robot is no longer close food_fruit_2056.Robot is no longer close food_hamburger_2057.Robot is no longer close food_ice_cream_2058.Robot is no longer close food_jam_2059.Robot is no longer close food_kiwi_2060.Robot is no longer close food_lemon_2061.Robot is no longer close food_noodles_2062.Robot is no longer close food_oatmeal_2063.Robot is no longer close food_peanut_butter_2064.Robot is no longer close food_pizza_2065.Robot is no longer close food_potato_2066.Robot is no longer close food_rice_2067.Robot is no longer close food_salt_2068.Robot is no longer close food_snack_2069.Robot is no longer close food_sugar_2070.Robot is no longer close food_turkey_2071.Robot is no longer close food_vegetable_2072.Robot is no longer close dry_pasta_2073.Robot is no longer close milk_2074.Robot is no longer close floor_22.Robot is no longer close sauce_2101.Robot is no longer close fridge_140.Robot is no longer close food_steak_2042.Robot is no longer close food_apple_2043.Robot is no longer close food_bacon_2044.Robot is no longer close food_banana_2045.Robot is no longer close food_cake_2046.Robot is no longer close food_carrot_2047.
##############################
From agent.py
put_executor(food_egg_2053, cutting_board_2080)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close cutting_board_2080. Robot is close kitchen_counter_128. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_52)
Robot is inside dining_room_1. Robot is close wall_2. Robot is close knifeblock_52. Robot is no longer close cutting_board_2080.Robot is no longer close kitchen_counter_128.Robot is no longer close food_egg_2053.
##############################
From agent.py
exp(knife_2036, knifeblock_52)
Fail to find knife_2036 around knifeblock_52. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(bench_125)exp(knife_2036, bench_125)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Robot is no longer close wall_2.Robot is no longer close knifeblock_52.
##############################
From agent.py
grab_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Robot is close kitchen_counter_128. 
##############################
From agent.py
put_executor(food_egg_2053, cutting_board_2080)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Robot is close kitchen_counter_128. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(bench_125)
Find drawing_118. Find mat_115. Robot is inside dining_room_1. Robot is close bench_125. Robot is no longer close cutting_board_2080.Robot is no longer close kitchen_counter_128.Robot is no longer close food_egg_2053.
##############################
From agent.py
exp(knife_2036, bench_125)
Fail to find knife_2036 around bench_125. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(wallshelf_191)exp(knife_2036, wallshelf_191)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Robot is no longer close bench_125.
##############################
From agent.py
grab_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Robot is close kitchen_counter_128. 
##############################
From agent.py
put_executor(food_egg_2053, cutting_board_2080)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Robot is close kitchen_counter_128. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(wallshelf_191)
Robot is inside home_office_161. Robot is close wallshelf_191. Robot is no longer inside dining_room_1.Robot is no longer close cutting_board_2080.Robot is no longer close kitchen_counter_128.Robot is no longer close food_egg_2053.
##############################
From agent.py
exp(knife_2036, wallshelf_191)
Fail to find knife_2036 around wallshelf_191. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(pot_54)open_executor(pot_54)exp(knife_2036, pot_54)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Robot is no longer inside home_office_161.Robot is no longer close wallshelf_191.
##############################
From agent.py
grab_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Robot is close kitchen_counter_128. 
##############################
From agent.py
put_executor(food_egg_2053, cutting_board_2080)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Robot is close kitchen_counter_128. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(pot_54)
Find food_butter_2018. Find food_onion_2026. Find dough_2021. Robot is inside dining_room_1. Robot is close oven_141. Robot is close pot_54. Robot is no longer close cutting_board_2080.Robot is no longer close kitchen_counter_128.Robot is no longer close food_egg_2053.
##############################
From agent.py
open_executor(pot_54)
Robot is inside dining_room_1. Robot is close oven_141. Robot is close pot_54. 
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find knife_2036 ?
Answer: Locate dining_room_1 and find dishwasher_143. Inside dishwasher_143, you will find knife_2036.
Re-decompose: None

##############################
From agent.py
Human Instruction: Locate dining_room_1 and find dishwasher_143. Inside dishwasher_143, you will find knife_2036.

The actions you have taken:
Action 1: Walk to kitchen_counter_128.
Action 2: look for fryingpan_2107 around kitchen_counter_128.
Action 3: Walk to stove_2090.
Action 4: Open stove_2090.
Action 5: look for fryingpan_2107 around stove_2090.
Action 6: Walk to fryingpan_2107.
Action 7: Grab fryingpan_2107.
Action 8: Walk to stove_2090.
Action 9: Put fryingpan_2107 on stove_2090.
Action 10: Close stove_2090.
Action 11: Switch on stove_2090.
Action 12: Walk to oil_2102.
Action 13: Grab oil_2102.
Action 14: Walk to fryingpan_2107.
Action 15: Put oil_2102 into fryingpan_2107.
Action 16: Walk to cupboard_130.
Action 17: look for food_egg_2053 around cupboard_130.
Action 18: Walk to fridge_140.
Action 19: Switch off fridge_140.
Action 20: Open fridge_140.
Action 21: look for food_egg_2053 around fridge_140.
Action 22: Grab food_egg_2053.
Action 23: Walk to cutting_board_2080.
Action 24: Put food_egg_2053 on cutting_board_2080.
Action 25: Walk to knifeblock_52.
Action 26: look for knife_2036 around knifeblock_52.
Action 27: Walk to food_egg_2053.
Action 28: Grab food_egg_2053.
Action 29: Walk to cutting_board_2080.
Action 30: Put food_egg_2053 on cutting_board_2080.
Action 31: Walk to bench_125.
Action 32: look for knife_2036 around bench_125.
Action 33: Walk to food_egg_2053.
Action 34: Grab food_egg_2053.
Action 35: Walk to cutting_board_2080.
Action 36: Put food_egg_2053 on cutting_board_2080.
Action 37: Walk to wallshelf_191.
Action 38: look for knife_2036 around wallshelf_191.
Action 39: Walk to food_egg_2053.
Action 40: Grab food_egg_2053.
Action 41: Walk to cutting_board_2080.
Action 42: Put food_egg_2053 on cutting_board_2080.
Action 43: Walk to pot_54.
Action 44: Open pot_54.

##############################
From agent.py
exp(knife_2036, pot_54)
Fail to find knife_2036 around pot_54. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(knife_2036, dishwasher_143)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Robot is no longer close oven_141.Robot is no longer close pot_54.
##############################
From agent.py
grab_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Robot is close kitchen_counter_128. 
##############################
From agent.py
put_executor(food_egg_2053, cutting_board_2080)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Robot is close kitchen_counter_128. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Find knife_2036. Robot is inside dining_room_1. Robot is close knife_2036. Robot is close floor_21. Robot is close dishwasher_143. Robot is no longer close cutting_board_2080.Robot is no longer close kitchen_counter_128.Robot is no longer close food_egg_2053.
##############################
From agent.py
open_executor(dishwasher_143)
Robot is inside dining_room_1. Robot is close knife_2036. Robot is close floor_21. Robot is close dishwasher_143. 
##############################
From agent.py
exp(knife_2036, dishwasher_143)
Find knife_2036. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Robot is no longer close knife_2036.Robot is no longer close floor_21.Robot is no longer close dishwasher_143.
##############################
From agent.py
grab_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Robot is close kitchen_counter_128. 
##############################
From agent.py
put_executor(food_egg_2053, cutting_board_2080)
Robot is inside dining_room_1. Robot is close cutting_board_2080. Robot is close food_egg_2053. Robot is close kitchen_counter_128. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(knife_2036)
Robot is inside dining_room_1. Robot is close knife_2036. Robot is close dishwasher_143. Robot is no longer close cutting_board_2080.Robot is no longer close kitchen_counter_128.Robot is no longer close food_egg_2053.
##############################
From agent.py
grab_executor(knife_2036)
Robot is inside dining_room_1. Robot is close knife_2036. Robot is close dishwasher_143. Grabbing knife_2036 by right hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close knife_2036. Robot is close cutting_board_2080. Robot is close food_egg_2053. Robot is no longer close dishwasher_143.
##############################
From agent.py
cut_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close knife_2036. Robot is close cutting_board_2080. Robot is close food_egg_2053. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close knife_2036. Robot is close cutting_board_2080. Robot is close food_egg_2053. Grabbing food_egg_2053 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot is inside dining_room_1. Robot is close knife_2036. Robot is close food_egg_2053. Robot is close stove_2090. Robot is close fryingpan_2107. Robot is no longer close cutting_board_2080.
##############################
From agent.py
putin_executor(food_egg_2053, fryingpan_2107)
Robot is inside dining_room_1. Robot is close knife_2036. Robot is close food_egg_2053. Robot is close stove_2090. Robot is close fryingpan_2107. food_egg_2053 released by left hand. 
##############################
From agent.py
Human Instruction: You need to scramble the egg in the frying pan after putting it in. This involves ensuring the egg is sufficiently mixed or stirred in the pan on the stove.

The actions you have taken:
Action 1: Walk to kitchen_counter_128.
Action 2: look for fryingpan_2107 around kitchen_counter_128.
Action 3: Walk to stove_2090.
Action 4: Open stove_2090.
Action 5: look for fryingpan_2107 around stove_2090.
Action 6: Walk to fryingpan_2107.
Action 7: Grab fryingpan_2107.
Action 8: Walk to stove_2090.
Action 9: Put fryingpan_2107 on stove_2090.
Action 10: Close stove_2090.
Action 11: Switch on stove_2090.
Action 12: Walk to oil_2102.
Action 13: Grab oil_2102.
Action 14: Walk to fryingpan_2107.
Action 15: Put oil_2102 into fryingpan_2107.
Action 16: Walk to cupboard_130.
Action 17: look for food_egg_2053 around cupboard_130.
Action 18: Walk to fridge_140.
Action 19: Switch off fridge_140.
Action 20: Open fridge_140.
Action 21: look for food_egg_2053 around fridge_140.
Action 22: Grab food_egg_2053.
Action 23: Walk to cutting_board_2080.
Action 24: Put food_egg_2053 on cutting_board_2080.
Action 25: Walk to knifeblock_52.
Action 26: look for knife_2036 around knifeblock_52.
Action 27: Walk to food_egg_2053.
Action 28: Grab food_egg_2053.
Action 29: Walk to cutting_board_2080.
Action 30: Put food_egg_2053 on cutting_board_2080.
Action 31: Walk to bench_125.
Action 32: look for knife_2036 around bench_125.
Action 33: Walk to food_egg_2053.
Action 34: Grab food_egg_2053.
Action 35: Walk to cutting_board_2080.
Action 36: Put food_egg_2053 on cutting_board_2080.
Action 37: Walk to wallshelf_191.
Action 38: look for knife_2036 around wallshelf_191.
Action 39: Walk to food_egg_2053.
Action 40: Grab food_egg_2053.
Action 41: Walk to cutting_board_2080.
Action 42: Put food_egg_2053 on cutting_board_2080.
Action 43: Walk to pot_54.
Action 44: Open pot_54.
Action 45: look for knife_2036 around pot_54.
Action 46: Walk to food_egg_2053.
Action 47: Grab food_egg_2053.
Action 48: Walk to cutting_board_2080.
Action 49: Put food_egg_2053 on cutting_board_2080.
Action 50: Walk to dishwasher_143.
Action 51: Open dishwasher_143.
Action 52: look for knife_2036 around dishwasher_143.
Action 53: Walk to food_egg_2053.
Action 54: Grab food_egg_2053.
Action 55: Walk to cutting_board_2080.
Action 56: Put food_egg_2053 on cutting_board_2080.
Action 57: Walk to knife_2036.
Action 58: Grab knife_2036.
Action 59: Walk to food_egg_2053.
Action 60: Cut food_egg_2053.
Action 61: Grab food_egg_2053.
Action 62: Walk to fryingpan_2107.
Action 63: Put food_egg_2053 into fryingpan_2107.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior crack_egg_over_pan_and_scramble(egg:item, fryingpan:item):
    body:
        achieve inside(egg, fryingpan)
        # Crack the egg into the frying pan

        achieve cut(egg)
        # Scramble the egg in the pan

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg) and id[egg] == 2053
        # Select the egg with ID 2053

        bind fryingpan: item where:
            is_fryingpan(fryingpan) and id[fryingpan] == 2107
        # Select the frying pan with ID 2107

        crack_egg_over_pan_and_scramble(egg, fryingpan)
        # Crack the egg into the frying pan and scramble it

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_drawing_118_around_drawing_118(drawing:item):
    goal: not unknown(drawing)
    body:
        assert is_drawing(drawing)
        bind drawing_instance:item where:
            is_drawing(drawing_instance) and id[drawing_instance]==118
        achieve close_char(char,drawing_instance)
        if can_open(drawing_instance):
            achieve_once open(drawing_instance)
            exp(drawing,drawing_instance)
        else:
            exp(drawing,drawing_instance)
    eff:
        unknown[drawing]=False
        close[drawing,drawing_instance]=True
        close[drawing_instance,drawing]=True
    

behavior find_food_bread_2016_around_cupboard_131(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_bread,cupboard_instance)
        else:
            exp(food_bread,cupboard_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,cupboard_instance]=True
        close[cupboard_instance,food_bread]=True
    

#exp_behavior_end

#goal_representation
behavior crack_and_scramble_egg_in_pan(egg: item, fryingpan: item):
    body:
        achieve inside(egg, fryingpan)
        # Crack the egg into the frying pan
        
        achieve cut(egg)
        # Scramble the egg which indicates mixing or stirring it in the pan

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select an instance of an egg

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select an instance of the frying pan

        crack_and_scramble_egg_in_pan(egg, fryingpan)
        # Perform the behavior to crack and scramble the egg in the frying pan
#goal_representation_end

##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "4. crack the egg into the pan and scramble it." ?
Answer: Put the egg in the pan.
Re-decompose: True

##############################
From agent.py
Reset goals: The sub-goals are: 
['Put the egg in the pan to scramble it.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2078_around_washing_machine_2041(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

behavior find_book_2092_around_bookshelf_260(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==260
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation

def has_fryingpan(stove: item):
    # Determine if there is a frying pan on the stove
    symbol pan_existence = exists pan: item : is_fryingpan(pan) and on(pan, stove)
    return pan_existence

behavior place_egg_in_fryingpan(egg: item, fryingpan: item):
    body:
        achieve inside(egg, fryingpan)
        # Place the egg inside the frying pan

behavior scramble_egg(egg: item, fryingpan: item, stove: item):
    body:
        achieve has_a_free_hand(char)
        # Ensure the character has a free hand to stir
        achieve is_on(stove)
        # Ensure the stove is on for cooking

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove)
        
        if has_fryingpan(stove):
            bind fryingpan: item where:
                is_fryingpan(fryingpan) and on(fryingpan, stove)
        else:
            observe(stove, "Verify the presence of a frying pan")
        
        bind egg: item where:
            is_food_egg(egg)
        
        place_egg_in_fryingpan(egg, fryingpan)
        scramble_egg(egg, fryingpan, stove)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: fryingpan; available variables: [].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_tape_2028_around_washing_machine_2041(tape:item):
    goal: not unknown(tape)
    body:
        assert is_tape(tape)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(tape,washing_machine_instance)
        else:
            exp(tape,washing_machine_instance)
    eff:
        unknown[tape]=False
        close[tape,washing_machine_instance]=True
        close[washing_machine_instance,tape]=True
    

behavior find_juice_2034_around_cup_2006(juice:item):
    goal: not unknown(juice)
    body:
        assert is_juice(juice)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2006
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(juice,cup_instance)
        else:
            exp(juice,cup_instance)
    eff:
        unknown[juice]=False
        close[juice,cup_instance]=True
        close[cup_instance,juice]=True
    

behavior find_clothes_jacket_2078_around_washing_machine_2041(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

behavior find_book_2092_around_bookshelf_260(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==260
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#goal_representation
 
def has_fryingpan_on_stove(stove: item):
    # Determine if there is a frying pan on the stove
    symbol pan_existence = exists pan: item : is_fryingpan(pan) and on(pan, stove)
    return pan_existence

behavior place_egg_in_fryingpan(egg: item, fryingpan: item):
    body:
        achieve inside(egg, fryingpan)
        # Place the egg inside the frying pan

behavior scramble_egg(egg: item, fryingpan: item, stove: item):
    body:
        achieve has_a_free_hand(char)
        # Ensure the character has a free hand to stir
        achieve is_on(stove)
        # Ensure the stove is on for cooking

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove)
        
        if has_fryingpan_on_stove(stove):
            bind fryingpan: item where:
                is_fryingpan(fryingpan) and on(fryingpan, stove)
        else:
            observe(stove, "Verify the presence of a frying pan")
        
        bind egg: item where:
            is_food_egg(egg)
        
        place_egg_in_fryingpan(egg, fryingpan)
        scramble_egg(egg, fryingpan, stove)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: fryingpan; available variables: [].
##############################
