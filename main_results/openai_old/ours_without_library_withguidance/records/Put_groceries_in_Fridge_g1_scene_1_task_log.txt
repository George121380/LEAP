From agent.py
Reset goals: The sub-goals are: 
['1. Identify milk, turkey, egg, fish, and chicken in the household.', '2. Place each item on the table in the dining room.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_fish_2093_around_fridge_126(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_fish,fridge_instance)
        else:
            exp(food_fish,fridge_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,fridge_instance]=True
        close[fridge_instance,food_fish]=True
    

behavior find_food_turkey_2112_around_fridge_126(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_turkey,fridge_instance)
        else:
            exp(food_turkey,fridge_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,fridge_instance]=True
        close[fridge_instance,food_turkey]=True
    

behavior find_milk_2115_around_fridge_126(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_food_food_2046_around_fridge_126(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_food,fridge_instance)
        else:
            exp(food_food,fridge_instance)
    eff:
        unknown[food_food]=False
        close[food_food,fridge_instance]=True
        close[fridge_instance,food_food]=True
    

behavior find_food_chicken_2089_around_fridge_126(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_food_egg_2092_around_fridge_126(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        foreach item: item:
            if is_milk(item) or is_food_turkey(item) or is_food_egg(item) or is_food_fish(item) or is_food_chicken(item):
                observe(item, "Identify milk, turkey, egg, fish, and chicken")
#goal_representation_end

##############################
From agent.py->reset_goal
behavior __goal__():
    body:
        foreach item: item:
            if is_milk(item) or is_food_turkey(item) or is_food_egg(item) or is_food_fish(item) or is_food_chicken(item):
                observe(item, "Identify milk, turkey, egg, fish, and chicken")
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_chicken_2089, fridge_126)walk_executor(food_chicken_2089)obs(food_chicken_2089, Identify milk, turkey, egg, fish, and chicken)walk_executor(fridge_126)exp(food_egg_2092, fridge_126)walk_executor(food_egg_2092)obs(food_egg_2092, Identify milk, turkey, egg, fish, and chicken)walk_executor(fridge_126)exp(food_fish_2093, fridge_126)walk_executor(food_fish_2093)obs(food_fish_2093, Identify milk, turkey, egg, fish, and chicken)walk_executor(fridge_126)exp(food_turkey_2112, fridge_126)walk_executor(food_turkey_2112)obs(food_turkey_2112, Identify milk, turkey, egg, fish, and chicken)walk_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Identify milk, turkey, egg, fish, and chicken)
##############################
From agent.py
walk_executor(fridge_126)
Find food_onion_2048. Find food_food_2046. Find food_food_2073. Find food_steak_2080. Find food_apple_2081. Find food_bacon_2082. Find food_banana_2083. Find food_cake_2085. Find food_carrot_2086. Find food_cereal_2087. Find food_cheese_2088. Find food_chicken_2089. Find food_dessert_2090. Find food_donut_2091. Find food_egg_2092. Find food_fish_2093. Find food_food_2094. Find food_fruit_2095. Find food_hamburger_2096. Find food_ice_cream_2097. Find food_jam_2098. Find food_kiwi_2099. Find food_lemon_2100. Find food_noodles_2101. Find food_oatmeal_2102. Find food_orange_2103. Find food_onion_2104. Find food_peanut_butter_2105. Find food_pizza_2106. Find food_potato_2107. Find food_rice_2108. Find food_salt_2109. Find food_snack_2110. Find food_sugar_2111. Find food_turkey_2112. Find food_vegetable_2113. Find food_food_2001. Find sauce_2148. Find basket_for_clothes_2078. Find food_food_1000. Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Find keyboard_211. Find mouse_213. Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
open_executor(fridge_126)
Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
exp(food_chicken_2089, fridge_126)
Find food_chicken_2089. 
##############################
From agent.py-> find a plan in act()
obs(food_chicken_2089, Identify milk, turkey, egg, fish, and chicken)obs(food_egg_2092, Identify milk, turkey, egg, fish, and chicken)obs(food_fish_2093, Identify milk, turkey, egg, fish, and chicken)obs(food_turkey_2112, Identify milk, turkey, egg, fish, and chicken)exp(milk_2115, fridge_126)walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Identify milk, turkey, egg, fish, and chicken)
##############################
From agent.py
obs(food_chicken_2089, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_chicken_2089 is close to fridge_126. food_chicken_2089 is close to character_240. food_chicken_2089 is inside dining_room_41. food_chicken_2089 is inside fridge_126. food_chicken_2089 is CLEAN.
##############################
From agent.py
obs(food_egg_2092, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_egg_2092 is close to fridge_126. food_egg_2092 is close to character_240. food_egg_2092 is inside dining_room_41. food_egg_2092 is inside fridge_126. food_egg_2092 is CLEAN.
##############################
From agent.py
obs(food_fish_2093, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_fish_2093 is inside dining_room_41. food_fish_2093 is inside fridge_126. food_fish_2093 is close to fridge_126. food_fish_2093 is close to character_240. food_fish_2093 is CLEAN.
##############################
From agent.py
obs(food_turkey_2112, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_turkey_2112 is inside dining_room_41. food_turkey_2112 is inside fridge_126. food_turkey_2112 is close to fridge_126. food_turkey_2112 is close to character_240. food_turkey_2112 is CLEAN.
##############################
From agent.py
exp(milk_2115, fridge_126)
Fail to find milk_2115 around fridge_126. 
##############################
From agent.py-> find a plan in act()
obs(food_chicken_2089, Identify milk, turkey, egg, fish, and chicken)obs(food_egg_2092, Identify milk, turkey, egg, fish, and chicken)obs(food_fish_2093, Identify milk, turkey, egg, fish, and chicken)obs(food_turkey_2112, Identify milk, turkey, egg, fish, and chicken)walk_executor(cupboard_118)open_executor(cupboard_118)exp(milk_2115, cupboard_118)walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Identify milk, turkey, egg, fish, and chicken)
##############################
From agent.py
obs(food_chicken_2089, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_chicken_2089 is close to fridge_126. food_chicken_2089 is close to character_240. food_chicken_2089 is inside dining_room_41. food_chicken_2089 is inside fridge_126. food_chicken_2089 is CLEAN.
##############################
From agent.py
obs(food_egg_2092, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_egg_2092 is close to fridge_126. food_egg_2092 is close to character_240. food_egg_2092 is inside dining_room_41. food_egg_2092 is inside fridge_126. food_egg_2092 is CLEAN.
##############################
From agent.py
obs(food_fish_2093, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_fish_2093 is inside dining_room_41. food_fish_2093 is inside fridge_126. food_fish_2093 is close to fridge_126. food_fish_2093 is close to character_240. food_fish_2093 is CLEAN.
##############################
From agent.py
obs(food_turkey_2112, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_turkey_2112 is inside dining_room_41. food_turkey_2112 is inside fridge_126. food_turkey_2112 is close to fridge_126. food_turkey_2112 is close to character_240. food_turkey_2112 is CLEAN.
##############################
From agent.py
walk_executor(cupboard_118)
Find tea_2066. Find knife_2037. Find food_peanut_butter_2077. Find tray_128. Find pot_78. Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. Robot is no longer close food_onion_2048.Robot is no longer close food_food_2046.Robot is no longer close food_food_2073.Robot is no longer close food_steak_2080.Robot is no longer close food_apple_2081.Robot is no longer close food_bacon_2082.Robot is no longer close food_banana_2083.Robot is no longer close food_cake_2085.Robot is no longer close food_carrot_2086.Robot is no longer close food_cereal_2087.Robot is no longer close food_cheese_2088.Robot is no longer close food_chicken_2089.Robot is no longer close food_dessert_2090.Robot is no longer close food_donut_2091.Robot is no longer close food_egg_2092.Robot is no longer close food_fish_2093.Robot is no longer close food_food_2094.Robot is no longer close food_fruit_2095.Robot is no longer close food_hamburger_2096.Robot is no longer close food_ice_cream_2097.Robot is no longer close food_jam_2098.Robot is no longer close food_kiwi_2099.Robot is no longer close food_lemon_2100.Robot is no longer close food_noodles_2101.Robot is no longer close food_oatmeal_2102.Robot is no longer close food_orange_2103.Robot is no longer close food_onion_2104.Robot is no longer close food_peanut_butter_2105.Robot is no longer close food_pizza_2106.Robot is no longer close food_potato_2107.Robot is no longer close food_rice_2108.Robot is no longer close food_salt_2109.Robot is no longer close food_snack_2110.Robot is no longer close food_sugar_2111.Robot is no longer close food_turkey_2112.Robot is no longer close food_vegetable_2113.Robot is no longer close food_food_2001.Robot is no longer close floor_44.Robot is no longer close sauce_2148.Robot is no longer close fridge_126.
##############################
From agent.py
open_executor(cupboard_118)
Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. 
##############################
From agent.py
exp(milk_2115, cupboard_118)
Fail to find milk_2115 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_chicken_2089)obs(food_chicken_2089, Identify milk, turkey, egg, fish, and chicken)walk_executor(food_egg_2092)obs(food_egg_2092, Identify milk, turkey, egg, fish, and chicken)walk_executor(food_fish_2093)obs(food_fish_2093, Identify milk, turkey, egg, fish, and chicken)walk_executor(food_turkey_2112)obs(food_turkey_2112, Identify milk, turkey, egg, fish, and chicken)walk_executor(walllamp_139)exp(milk_2115, walllamp_139)walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Identify milk, turkey, egg, fish, and chicken)
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close fridge_126. Robot is no longer close wall_68.Robot is no longer close tea_2066.Robot is no longer close knife_2037.Robot is no longer close cupboard_118.Robot is no longer close food_peanut_butter_2077.
##############################
From agent.py
obs(food_chicken_2089, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_chicken_2089 is close to fridge_126. food_chicken_2089 is close to character_240. food_chicken_2089 is inside dining_room_41. food_chicken_2089 is inside fridge_126. food_chicken_2089 is CLEAN.
##############################
From agent.py
walk_executor(food_egg_2092)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_egg_2092. Robot is no longer close food_chicken_2089.
##############################
From agent.py
obs(food_egg_2092, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_egg_2092 is close to fridge_126. food_egg_2092 is close to character_240. food_egg_2092 is inside dining_room_41. food_egg_2092 is inside fridge_126. food_egg_2092 is CLEAN.
##############################
From agent.py
walk_executor(food_fish_2093)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_fish_2093. Robot is no longer close food_egg_2092.
##############################
From agent.py
obs(food_fish_2093, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_fish_2093 is inside dining_room_41. food_fish_2093 is inside fridge_126. food_fish_2093 is close to fridge_126. food_fish_2093 is close to character_240. food_fish_2093 is CLEAN.
##############################
From agent.py
walk_executor(food_turkey_2112)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_turkey_2112. Robot is no longer close food_fish_2093.
##############################
From agent.py
obs(food_turkey_2112, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_turkey_2112 is inside dining_room_41. food_turkey_2112 is inside fridge_126. food_turkey_2112 is close to fridge_126. food_turkey_2112 is close to character_240. food_turkey_2112 is CLEAN.
##############################
From agent.py
walk_executor(walllamp_139)
Robot is inside dining_room_41. Robot is close walllamp_139. Robot is no longer close food_turkey_2112.Robot is no longer close fridge_126.
##############################
From agent.py
exp(milk_2115, walllamp_139)
Fail to find milk_2115 around walllamp_139. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_chicken_2089)obs(food_chicken_2089, Identify milk, turkey, egg, fish, and chicken)walk_executor(food_egg_2092)obs(food_egg_2092, Identify milk, turkey, egg, fish, and chicken)walk_executor(food_fish_2093)obs(food_fish_2093, Identify milk, turkey, egg, fish, and chicken)walk_executor(food_turkey_2112)obs(food_turkey_2112, Identify milk, turkey, egg, fish, and chicken)walk_executor(cupboard_117)exp(milk_2115, cupboard_117)walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Identify milk, turkey, egg, fish, and chicken)
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close fridge_126. Robot is no longer close walllamp_139.
##############################
From agent.py
obs(food_chicken_2089, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_chicken_2089 is close to fridge_126. food_chicken_2089 is close to character_240. food_chicken_2089 is inside dining_room_41. food_chicken_2089 is inside fridge_126. food_chicken_2089 is CLEAN.
##############################
From agent.py
walk_executor(food_egg_2092)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_egg_2092. Robot is no longer close food_chicken_2089.
##############################
From agent.py
obs(food_egg_2092, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_egg_2092 is close to fridge_126. food_egg_2092 is close to character_240. food_egg_2092 is inside dining_room_41. food_egg_2092 is inside fridge_126. food_egg_2092 is CLEAN.
##############################
From agent.py
walk_executor(food_fish_2093)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_fish_2093. Robot is no longer close food_egg_2092.
##############################
From agent.py
obs(food_fish_2093, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_fish_2093 is inside dining_room_41. food_fish_2093 is inside fridge_126. food_fish_2093 is close to fridge_126. food_fish_2093 is close to character_240. food_fish_2093 is CLEAN.
##############################
From agent.py
walk_executor(food_turkey_2112)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_turkey_2112. Robot is no longer close food_fish_2093.
##############################
From agent.py
obs(food_turkey_2112, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_turkey_2112 is inside dining_room_41. food_turkey_2112 is inside fridge_126. food_turkey_2112 is close to fridge_126. food_turkey_2112 is close to character_240. food_turkey_2112 is CLEAN.
##############################
From agent.py
walk_executor(cupboard_117)
Find coffee_filter_2053. Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close wall_67. Robot is close cupboard_117. Robot is no longer close food_turkey_2112.Robot is no longer close fridge_126.
##############################
From agent.py
exp(milk_2115, cupboard_117)
Fail to find milk_2115 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_chicken_2089)obs(food_chicken_2089, Identify milk, turkey, egg, fish, and chicken)walk_executor(food_egg_2092)obs(food_egg_2092, Identify milk, turkey, egg, fish, and chicken)walk_executor(food_fish_2093)obs(food_fish_2093, Identify milk, turkey, egg, fish, and chicken)walk_executor(food_turkey_2112)obs(food_turkey_2112, Identify milk, turkey, egg, fish, and chicken)walk_executor(dishwasher_129)open_executor(dishwasher_129)exp(milk_2115, dishwasher_129)walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Identify milk, turkey, egg, fish, and chicken)
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close fridge_126. Robot is no longer close coffee_filter_2053.Robot is no longer close wall_67.Robot is no longer close cupboard_117.
##############################
From agent.py
obs(food_chicken_2089, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_chicken_2089 is close to fridge_126. food_chicken_2089 is close to character_240. food_chicken_2089 is inside dining_room_41. food_chicken_2089 is inside fridge_126. food_chicken_2089 is CLEAN.
##############################
From agent.py
walk_executor(food_egg_2092)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_egg_2092. Robot is no longer close food_chicken_2089.
##############################
From agent.py
obs(food_egg_2092, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_egg_2092 is close to fridge_126. food_egg_2092 is close to character_240. food_egg_2092 is inside dining_room_41. food_egg_2092 is inside fridge_126. food_egg_2092 is CLEAN.
##############################
From agent.py
walk_executor(food_fish_2093)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_fish_2093. Robot is no longer close food_egg_2092.
##############################
From agent.py
obs(food_fish_2093, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_fish_2093 is inside dining_room_41. food_fish_2093 is inside fridge_126. food_fish_2093 is close to fridge_126. food_fish_2093 is close to character_240. food_fish_2093 is CLEAN.
##############################
From agent.py
walk_executor(food_turkey_2112)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_turkey_2112. Robot is no longer close food_fish_2093.
##############################
From agent.py
obs(food_turkey_2112, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_turkey_2112 is inside dining_room_41. food_turkey_2112 is inside fridge_126. food_turkey_2112 is close to fridge_126. food_turkey_2112 is close to character_240. food_turkey_2112 is CLEAN.
##############################
From agent.py
walk_executor(dishwasher_129)
Find detergent_2011. Find measuring_cup_2012. Robot is inside dining_room_41. Robot is close dishwasher_129. Robot is close detergent_2011. Robot is close measuring_cup_2012. Robot is no longer close food_turkey_2112.Robot is no longer close fridge_126.
##############################
From agent.py
open_executor(dishwasher_129)
Robot is inside dining_room_41. Robot is close dishwasher_129. Robot is close detergent_2011. Robot is close measuring_cup_2012. 
##############################
From agent.py
exp(milk_2115, dishwasher_129)
Fail to find milk_2115 around dishwasher_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_chicken_2089)obs(food_chicken_2089, Identify milk, turkey, egg, fish, and chicken)walk_executor(food_egg_2092)obs(food_egg_2092, Identify milk, turkey, egg, fish, and chicken)walk_executor(food_fish_2093)obs(food_fish_2093, Identify milk, turkey, egg, fish, and chicken)walk_executor(food_turkey_2112)obs(food_turkey_2112, Identify milk, turkey, egg, fish, and chicken)walk_executor(curtain_291)open_executor(curtain_291)exp(milk_2115, curtain_291)walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Identify milk, turkey, egg, fish, and chicken)
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close fridge_126. Robot is no longer close dishwasher_129.Robot is no longer close detergent_2011.Robot is no longer close measuring_cup_2012.
##############################
From agent.py
obs(food_chicken_2089, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_chicken_2089 is close to fridge_126. food_chicken_2089 is close to character_240. food_chicken_2089 is inside dining_room_41. food_chicken_2089 is inside fridge_126. food_chicken_2089 is CLEAN.
##############################
From agent.py
walk_executor(food_egg_2092)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_egg_2092. Robot is no longer close food_chicken_2089.
##############################
From agent.py
obs(food_egg_2092, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_egg_2092 is close to fridge_126. food_egg_2092 is close to character_240. food_egg_2092 is inside dining_room_41. food_egg_2092 is inside fridge_126. food_egg_2092 is CLEAN.
##############################
From agent.py
walk_executor(food_fish_2093)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_fish_2093. Robot is no longer close food_egg_2092.
##############################
From agent.py
obs(food_fish_2093, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_fish_2093 is inside dining_room_41. food_fish_2093 is inside fridge_126. food_fish_2093 is close to fridge_126. food_fish_2093 is close to character_240. food_fish_2093 is CLEAN.
##############################
From agent.py
walk_executor(food_turkey_2112)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_turkey_2112. Robot is no longer close food_fish_2093.
##############################
From agent.py
obs(food_turkey_2112, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_turkey_2112 is inside dining_room_41. food_turkey_2112 is inside fridge_126. food_turkey_2112 is close to fridge_126. food_turkey_2112 is close to character_240. food_turkey_2112 is CLEAN.
##############################
From agent.py
walk_executor(curtain_291)
Find brush_2002. Find drawing_288. Find pillow_287. Find shoes_2033. Find phone_2017. Find pillow_286. Robot is inside home_office_241. Robot is close curtain_291. Robot is close couch_269. Robot is no longer inside dining_room_41.Robot is no longer close food_turkey_2112.Robot is no longer close fridge_126.
##############################
From agent.py
open_executor(curtain_291)
Find check_2075. Find keyboard_278. Find blow_dryer_2057. Find stamp_2043. Find hanger_292. Find phone_2147. Find headset_2131. Find mat_284. Find cd_2145. Find shampoo_2019. Find stamp_2022. Find cat_2069. Find hanger_293. Find chair_271. Find cd_player_2129. Find pencil_2014. Find clothes_pants_2036. Find remote_control_2124. Find pencil_2020. Find mouse_280. Find headset_2146. Find hanger_294. Find dvd_player_2130. Robot is inside home_office_241. Robot is close curtain_291. Robot is close couch_269. 
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find milk_2115 ?
Answer: Go to the dining room, specifically near table_114. Inside table_114, you will find milk_2115. The item is within the table, and is close to the surrounding area of the table itself.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to the dining room, specifically near table_114. Inside table_114, you will find milk_2115. The item is within the table, and is close to the surrounding area of the table itself.

The actions you have taken:
Action 1: Walk to fridge_126.
Action 2: Switch off fridge_126.
Action 3: Open fridge_126.
Action 4: look for food_chicken_2089 around fridge_126.
Action 5: Invalid parameter input.
Action 6: Invalid parameter input.
Action 7: Invalid parameter input.
Action 8: Invalid parameter input.
Action 9: look for milk_2115 around fridge_126.
Action 10: Invalid parameter input.
Action 11: Invalid parameter input.
Action 12: Invalid parameter input.
Action 13: Invalid parameter input.
Action 14: Walk to cupboard_118.
Action 15: Open cupboard_118.
Action 16: look for milk_2115 around cupboard_118.
Action 17: Walk to food_chicken_2089.
Action 18: Invalid parameter input.
Action 19: Walk to food_egg_2092.
Action 20: Invalid parameter input.
Action 21: Walk to food_fish_2093.
Action 22: Invalid parameter input.
Action 23: Walk to food_turkey_2112.
Action 24: Invalid parameter input.
Action 25: Walk to walllamp_139.
Action 26: look for milk_2115 around walllamp_139.
Action 27: Walk to food_chicken_2089.
Action 28: Invalid parameter input.
Action 29: Walk to food_egg_2092.
Action 30: Invalid parameter input.
Action 31: Walk to food_fish_2093.
Action 32: Invalid parameter input.
Action 33: Walk to food_turkey_2112.
Action 34: Invalid parameter input.
Action 35: Walk to cupboard_117.
Action 36: look for milk_2115 around cupboard_117.
Action 37: Walk to food_chicken_2089.
Action 38: Invalid parameter input.
Action 39: Walk to food_egg_2092.
Action 40: Invalid parameter input.
Action 41: Walk to food_fish_2093.
Action 42: Invalid parameter input.
Action 43: Walk to food_turkey_2112.
Action 44: Invalid parameter input.
Action 45: Walk to dishwasher_129.
Action 46: Open dishwasher_129.
Action 47: look for milk_2115 around dishwasher_129.
Action 48: Walk to food_chicken_2089.
Action 49: Invalid parameter input.
Action 50: Walk to food_egg_2092.
Action 51: Invalid parameter input.
Action 52: Walk to food_fish_2093.
Action 53: Invalid parameter input.
Action 54: Walk to food_turkey_2112.
Action 55: Invalid parameter input.
Action 56: Walk to curtain_291.
Action 57: Open curtain_291.

##############################
From agent.py
exp(milk_2115, curtain_291)
Fail to find milk_2115 around curtain_291. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_chicken_2089)obs(food_chicken_2089, Identify milk, turkey, egg, fish, and chicken)walk_executor(food_egg_2092)obs(food_egg_2092, Identify milk, turkey, egg, fish, and chicken)walk_executor(food_fish_2093)obs(food_fish_2093, Identify milk, turkey, egg, fish, and chicken)walk_executor(food_turkey_2112)obs(food_turkey_2112, Identify milk, turkey, egg, fish, and chicken)walk_executor(table_114)exp(milk_2115, table_114)walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Identify milk, turkey, egg, fish, and chicken)
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close fridge_126. Robot is no longer inside home_office_241.Robot is no longer close curtain_291.Robot is no longer close couch_269.
##############################
From agent.py
obs(food_chicken_2089, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_chicken_2089 is close to fridge_126. food_chicken_2089 is close to character_240. food_chicken_2089 is inside dining_room_41. food_chicken_2089 is inside fridge_126. food_chicken_2089 is CLEAN.
##############################
From agent.py
walk_executor(food_egg_2092)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_egg_2092. Robot is no longer close food_chicken_2089.
##############################
From agent.py
obs(food_egg_2092, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_egg_2092 is close to fridge_126. food_egg_2092 is close to character_240. food_egg_2092 is inside dining_room_41. food_egg_2092 is inside fridge_126. food_egg_2092 is CLEAN.
##############################
From agent.py
walk_executor(food_fish_2093)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_fish_2093. Robot is no longer close food_egg_2092.
##############################
From agent.py
obs(food_fish_2093, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_fish_2093 is inside dining_room_41. food_fish_2093 is inside fridge_126. food_fish_2093 is close to fridge_126. food_fish_2093 is close to character_240. food_fish_2093 is CLEAN.
##############################
From agent.py
walk_executor(food_turkey_2112)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_turkey_2112. Robot is no longer close food_fish_2093.
##############################
From agent.py
obs(food_turkey_2112, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_turkey_2112 is inside dining_room_41. food_turkey_2112 is inside fridge_126. food_turkey_2112 is close to fridge_126. food_turkey_2112 is close to character_240. food_turkey_2112 is CLEAN.
##############################
From agent.py
walk_executor(table_114)
Find mat_102. Find dry_pasta_2114. Find food_food_2021. Find drawing_110. Find drawing_111. Find knife_2122. Find cup_2133. Find table_cloth_2005. Find food_bread_2084. Find pillow_104. Find cup_2049. Find box_2038. Find clothes_hat_2117. Find clothes_gloves_2118. Find milk_2115. Find pillow_103. Find pillow_105. Find pillow_106. Find lighter_2004. Find lighter_2039. Find cup_2134. Find check_2058. Find cup_2132. Robot is inside dining_room_41. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close food_turkey_2112.Robot is no longer close fridge_126.
##############################
From agent.py
exp(milk_2115, table_114)
Find milk_2115. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_chicken_2089)obs(food_chicken_2089, Identify milk, turkey, egg, fish, and chicken)walk_executor(food_egg_2092)obs(food_egg_2092, Identify milk, turkey, egg, fish, and chicken)walk_executor(food_fish_2093)obs(food_fish_2093, Identify milk, turkey, egg, fish, and chicken)walk_executor(food_turkey_2112)obs(food_turkey_2112, Identify milk, turkey, egg, fish, and chicken)walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Identify milk, turkey, egg, fish, and chicken)
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close fridge_126. Robot is no longer close table_114.Robot is no longer close mat_102.Robot is no longer close floor_47.
##############################
From agent.py
obs(food_chicken_2089, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_chicken_2089 is close to fridge_126. food_chicken_2089 is close to character_240. food_chicken_2089 is inside dining_room_41. food_chicken_2089 is inside fridge_126. food_chicken_2089 is CLEAN.
##############################
From agent.py
walk_executor(food_egg_2092)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_egg_2092. Robot is no longer close food_chicken_2089.
##############################
From agent.py
obs(food_egg_2092, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_egg_2092 is close to fridge_126. food_egg_2092 is close to character_240. food_egg_2092 is inside dining_room_41. food_egg_2092 is inside fridge_126. food_egg_2092 is CLEAN.
##############################
From agent.py
walk_executor(food_fish_2093)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_fish_2093. Robot is no longer close food_egg_2092.
##############################
From agent.py
obs(food_fish_2093, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_fish_2093 is inside dining_room_41. food_fish_2093 is inside fridge_126. food_fish_2093 is close to fridge_126. food_fish_2093 is close to character_240. food_fish_2093 is CLEAN.
##############################
From agent.py
walk_executor(food_turkey_2112)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_turkey_2112. Robot is no longer close food_fish_2093.
##############################
From agent.py
obs(food_turkey_2112, Identify milk, turkey, egg, fish, and chicken)
Get this information:  food_turkey_2112 is inside dining_room_41. food_turkey_2112 is inside fridge_126. food_turkey_2112 is close to fridge_126. food_turkey_2112 is close to character_240. food_turkey_2112 is CLEAN.
##############################
From agent.py
walk_executor(milk_2115)
Robot is inside dining_room_41. Robot is close table_114. Robot is close milk_2115. Robot is no longer close food_turkey_2112.Robot is no longer close fridge_126.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_food_2001_around_food_food_2021(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==2021
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
 
def has_relevant_food_location(item: item):
    # Function to check if the item location is relevant for searching milk, turkey, egg, fish, or chicken
    symbol has_food_item = (
        exists o: item: (is_milk(o) or is_food_turkey(o) or is_food_egg(o) or is_food_fish(o) or is_food_chicken(o))
        and close(o, item)
    )
    return has_food_item

behavior __goal__():
    body:
        if exists item: item : (
            (is_cupboard(item) or is_fridge(item) or is_table(item))
            and has_relevant_food_location(item)
        ):
            # If relevant food items are found, observe their location
            bind item: item where:
                (is_cupboard(item) or is_fridge(item) or is_table(item))
                and has_relevant_food_location(item)
            observe(item, "Locate milk, turkey, egg, fish, and chicken")

        else:
            # Otherwise, iterate through potential item locations
            foreach item: item:
                if (is_cupboard(item) or is_fridge(item) or is_table(item)) and not visited(item):
                    observe(item, "Attempt to locate milk, turkey, egg, fish, and chicken")

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'has_relevant_food_location') at line 5869, column 21.
Expected one of: 
	* MINUS
	* VBAR
	* AT
	* LESS_EQ
	* OR
	* PERCENT
	* __ANON_4
	* AMPERSAND
	* AND
	* RSHIFT
	* SEMICOLON
	* __ANON_5
	* SLASH
	* FLOORDIV
	* LESSTHAN
	* __ANON_7
	* PLUS
	* __ANON_0
	* IF
	* DOUBLE_EQUAL
	* GREATER_EQ
	* MORETHAN
	* CIRCUMFLEX
	* NOT_EQ
	* EQUAL
	* __ANON_8
	* _NEWLINE
	* __ANON_6
	* __ANON_1
	* COMMA
	* STAR
	* __ANON_3
	* LSHIFT
	* __ANON_2

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_food_2001_around_food_food_2021(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==2021
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

#goal_representation
 
def has_relevant_food_location(item: item):
    # Function to check if the item location is relevant for searching milk, turkey, egg, fish, or chicken
    symbol has_food_item = (
        exists o: item: (is_milk(o) or is_food_turkey(o) or is_food_egg(o) or is_food_fish(o) or is_food_chicken(o))
        and close(o, item)
    )
    return has_food_item

behavior __goal__():
    body:
        if exists item: item : (
            (is_cupboard(item) or is_fridge(item) or is_table(item))
            and has_relevant_food_location(item)
        ):
            # If relevant food items are found, observe their location
            bind item: item where:
                (is_cupboard(item) or is_fridge(item) or is_table(item))
                and has_relevant_food_location(item)
            observe(item, "Locate milk, turkey, egg, fish, and chicken")

        else:
            # Otherwise, iterate through potential item locations
            foreach item: item:
                if (is_cupboard(item) or is_fridge(item) or is_table(item)) and not visited(item):
                    observe(item, "Attempt to locate milk, turkey, egg, fish, and chicken")

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'has_relevant_food_location') at line 5869, column 21.
Expected one of: 
	* MINUS
	* VBAR
	* AT
	* LESS_EQ
	* OR
	* PERCENT
	* __ANON_4
	* AMPERSAND
	* AND
	* RSHIFT
	* SEMICOLON
	* __ANON_5
	* SLASH
	* FLOORDIV
	* LESSTHAN
	* __ANON_7
	* PLUS
	* __ANON_0
	* IF
	* DOUBLE_EQUAL
	* GREATER_EQ
	* MORETHAN
	* CIRCUMFLEX
	* NOT_EQ
	* EQUAL
	* __ANON_8
	* _NEWLINE
	* __ANON_6
	* __ANON_1
	* COMMA
	* STAR
	* __ANON_3
	* LSHIFT
	* __ANON_2

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_food_2046_around_food_food_2021(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==2021
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

#goal_representation
 
def has_relevant_food_location(item: item):
    # Function to check if the item location is relevant for searching milk, turkey, egg, fish, or chicken
    symbol has_food_item = exists o: item: (
        (is_milk(o) or is_food_turkey(o) or is_food_egg(o) or is_food_fish(o) or is_food_chicken(o))
        and close(o, item)
    )
    return has_food_item

behavior __goal__():
    body:
        if exists item: item : (
            (is_cupboard(item) or is_fridge(item) or is_table(item))
            and has_relevant_food_location(item)
        ):
            # If relevant food items are found, observe their location
            bind item: item where:
                (is_cupboard(item) or is_fridge(item) or is_table(item))
                and has_relevant_food_location(item)
            observe(item, "Locate milk, turkey, egg, fish, and chicken")

        else:
            # Otherwise, iterate through potential item locations
            foreach item: item:
                if (is_cupboard(item) or is_fridge(item) or is_table(item)) and not visited(item):
                    observe(item, "Attempt to locate milk, turkey, egg, fish, and chicken")

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_food_2001_around_food_food_1000(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==1000
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
 
def has_relevant_food():
    # Determine if the specific food items are identified
    symbol identified_all = exists milk: item : is_milk(milk) and visited(milk)
    symbol identified_turkey = exists turkey: item : is_food_turkey(turkey) and visited(turkey)
    symbol identified_egg = exists egg: item : is_food_egg(egg) and visited(egg)
    symbol identified_fish = exists fish: item : is_food_fish(fish) and visited(fish)
    symbol identified_chicken = exists chicken: item : is_food_chicken(chicken) and visited(chicken)
    return identified_all and identified_turkey and identified_egg and identified_fish and identified_chicken

behavior __goal__():
    body:
        if not has_relevant_food():
            foreach food_item: item:
                if is_milk(food_item) or is_food_turkey(food_item) or is_food_egg(food_item) or is_food_fish(food_item) or is_food_chicken(food_item) and not visited(food_item):
                    observe(food_item, "Identify milk, turkey, egg, fish, or chicken")

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def has_relevant_food():
    # Determine if the specific food items are identified
    symbol identified_all = exists milk: item : is_milk(milk) and visited(milk)
    symbol identified_turkey = exists turkey: item : is_food_turkey(turkey) and visited(turkey)
    symbol identified_egg = exists egg: item : is_food_egg(egg) and visited(egg)
    symbol identified_fish = exists fish: item : is_food_fish(fish) and visited(fish)
    symbol identified_chicken = exists chicken: item : is_food_chicken(chicken) and visited(chicken)
    return identified_all and identified_turkey and identified_egg and identified_fish and identified_chicken

behavior __goal__():
    body:
        if not has_relevant_food():
            foreach food_item: item:
                if is_milk(food_item) or is_food_turkey(food_item) or is_food_egg(food_item) or is_food_fish(food_item) or is_food_chicken(food_item) and not visited(food_item):
                    observe(food_item, "Identify milk, turkey, egg, fish, or chicken")

##############################
From agent.py-> find a plan in act()
walk_executor(food_chicken_2089)obs(food_chicken_2089, Identify milk, turkey, egg, fish, or chicken)walk_executor(food_egg_2092)obs(food_egg_2092, Identify milk, turkey, egg, fish, or chicken)walk_executor(food_fish_2093)obs(food_fish_2093, Identify milk, turkey, egg, fish, or chicken)walk_executor(food_turkey_2112)obs(food_turkey_2112, Identify milk, turkey, egg, fish, or chicken)walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Identify milk, turkey, egg, fish, or chicken)
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close fridge_126. Robot is no longer close table_114.Robot is no longer close milk_2115.
##############################
From agent.py
obs(food_chicken_2089, Identify milk, turkey, egg, fish, or chicken)
Get this information:  food_chicken_2089 is close to fridge_126. food_chicken_2089 is close to character_240. food_chicken_2089 is inside dining_room_41. food_chicken_2089 is inside fridge_126. food_chicken_2089 is CLEAN.
##############################
From agent.py
walk_executor(food_egg_2092)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_egg_2092. Robot is no longer close food_chicken_2089.
##############################
From agent.py
obs(food_egg_2092, Identify milk, turkey, egg, fish, or chicken)
Get this information:  food_egg_2092 is close to fridge_126. food_egg_2092 is close to character_240. food_egg_2092 is inside dining_room_41. food_egg_2092 is inside fridge_126. food_egg_2092 is CLEAN.
##############################
From agent.py
walk_executor(food_fish_2093)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_fish_2093. Robot is no longer close food_egg_2092.
##############################
From agent.py
obs(food_fish_2093, Identify milk, turkey, egg, fish, or chicken)
Get this information:  food_fish_2093 is inside dining_room_41. food_fish_2093 is inside fridge_126. food_fish_2093 is close to fridge_126. food_fish_2093 is close to character_240. food_fish_2093 is CLEAN.
##############################
From agent.py
walk_executor(food_turkey_2112)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_turkey_2112. Robot is no longer close food_fish_2093.
##############################
From agent.py
obs(food_turkey_2112, Identify milk, turkey, egg, fish, or chicken)
Get this information:  food_turkey_2112 is inside dining_room_41. food_turkey_2112 is inside fridge_126. food_turkey_2112 is close to fridge_126. food_turkey_2112 is close to character_240. food_turkey_2112 is CLEAN.
##############################
From agent.py
walk_executor(milk_2115)
Robot is inside dining_room_41. Robot is close table_114. Robot is close milk_2115. Robot is no longer close food_turkey_2112.Robot is no longer close fridge_126.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_food_2001_around_food_food_2021(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==2021
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
 
def has_goal_items(item: item):
    # Check if the item is one of milk, turkey, egg, fish, or chicken
    return is_milk(item) or is_food_turkey(item) or is_food_egg(item) or is_food_fish(item) or is_food_chicken(item)

behavior __goal__():
    body:
        foreach item: item:
            if has_goal_items(item) and not visited(item):
                observe(item, "Identify the item to verify if it is milk, turkey, egg, fish, or chicken")

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def has_goal_items(item: item):
    # Check if the item is one of milk, turkey, egg, fish, or chicken
    return is_milk(item) or is_food_turkey(item) or is_food_egg(item) or is_food_fish(item) or is_food_chicken(item)

behavior __goal__():
    body:
        foreach item: item:
            if has_goal_items(item) and not visited(item):
                observe(item, "Identify the item to verify if it is milk, turkey, egg, fish, or chicken")

##############################
From agent.py-> find a plan in act()
walk_executor(food_chicken_2089)obs(food_chicken_2089, Identify the item to verify if it is milk, turkey, egg, fish, or chicken)walk_executor(food_egg_2092)obs(food_egg_2092, Identify the item to verify if it is milk, turkey, egg, fish, or chicken)walk_executor(food_fish_2093)obs(food_fish_2093, Identify the item to verify if it is milk, turkey, egg, fish, or chicken)walk_executor(food_turkey_2112)obs(food_turkey_2112, Identify the item to verify if it is milk, turkey, egg, fish, or chicken)walk_executor(milk_2115)open_executor(milk_2115)obs(milk_2115, Identify the item to verify if it is milk, turkey, egg, fish, or chicken)
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close fridge_126. Robot is no longer close table_114.Robot is no longer close milk_2115.
##############################
From agent.py
obs(food_chicken_2089, Identify the item to verify if it is milk, turkey, egg, fish, or chicken)
Get this information:  food_chicken_2089 is close to fridge_126. food_chicken_2089 is close to character_240. food_chicken_2089 is inside dining_room_41. food_chicken_2089 is inside fridge_126. food_chicken_2089 is CLEAN.
##############################
From agent.py
walk_executor(food_egg_2092)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_egg_2092. Robot is no longer close food_chicken_2089.
##############################
From agent.py
obs(food_egg_2092, Identify the item to verify if it is milk, turkey, egg, fish, or chicken)
Get this information:  food_egg_2092 is close to fridge_126. food_egg_2092 is close to character_240. food_egg_2092 is inside dining_room_41. food_egg_2092 is inside fridge_126. food_egg_2092 is CLEAN.
##############################
From agent.py
walk_executor(food_fish_2093)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_fish_2093. Robot is no longer close food_egg_2092.
##############################
From agent.py
obs(food_fish_2093, Identify the item to verify if it is milk, turkey, egg, fish, or chicken)
Get this information:  food_fish_2093 is inside dining_room_41. food_fish_2093 is inside fridge_126. food_fish_2093 is close to fridge_126. food_fish_2093 is close to character_240. food_fish_2093 is CLEAN.
##############################
From agent.py
walk_executor(food_turkey_2112)
Robot is inside dining_room_41. Robot is close fridge_126. Robot is close food_turkey_2112. Robot is no longer close food_fish_2093.
##############################
From agent.py
obs(food_turkey_2112, Identify the item to verify if it is milk, turkey, egg, fish, or chicken)
Get this information:  food_turkey_2112 is inside dining_room_41. food_turkey_2112 is inside fridge_126. food_turkey_2112 is close to fridge_126. food_turkey_2112 is close to character_240. food_turkey_2112 is CLEAN.
##############################
From agent.py
walk_executor(milk_2115)
Robot is inside dining_room_41. Robot is close table_114. Robot is close milk_2115. Robot is no longer close food_turkey_2112.Robot is no longer close fridge_126.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_turkey_2112_around_oven_127(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==127
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_turkey,oven_instance)
        else:
            exp(food_turkey,oven_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,oven_instance]=True
        close[oven_instance,food_turkey]=True
    

behavior find_food_carrot_2086_around_food_food_2021(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==2021
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_carrot,food_food_instance)
        else:
            exp(food_carrot,food_food_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,food_food_instance]=True
        close[food_food_instance,food_carrot]=True
    

behavior find_soap_2126_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_food_onion_2009_around_oven_127(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==127
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_onion,oven_instance)
        else:
            exp(food_onion,oven_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,oven_instance]=True
        close[oven_instance,food_onion]=True
    

#exp_behavior_end

#goal_representation

def has_relevant_food(item: item):
    # Function to check if there are milk, turkey, egg, fish, or chicken in the specified location
    symbol contains_milk = exists o: item : is_milk(o) and close(o, item)
    symbol contains_turkey = exists o: item : is_food_turkey(o) and close(o, item)
    symbol contains_egg = exists o: item : is_food_egg(o) and close(o, item)
    symbol contains_fish = exists o: item : is_food_fish(o) and close(o, item)
    symbol contains_chicken = exists o: item : is_food_chicken(o) and close(o, item)
    return contains_milk or contains_turkey or contains_egg or contains_fish or contains_chicken

behavior __goal__():
    body:
        if exists item: item : has_relevant_food(item):
            # If relevant food is found, we can directly observe the item
            bind item: item where:
                has_relevant_food(item)
            observe(item, "Check for milk, turkey, egg, fish, and chicken")
        else:
            # Check all items in the scene that have not been visited
            foreach item: item:
                if not visited(item):
                    observe(item, "Locate milk, turkey, egg, fish, and chicken")

#goal_representation_end

##############################
From agent.py->reset_sub_goal

def has_relevant_food(item: item):
    # Function to check if there are milk, turkey, egg, fish, or chicken in the specified location
    symbol contains_milk = exists o: item : is_milk(o) and close(o, item)
    symbol contains_turkey = exists o: item : is_food_turkey(o) and close(o, item)
    symbol contains_egg = exists o: item : is_food_egg(o) and close(o, item)
    symbol contains_fish = exists o: item : is_food_fish(o) and close(o, item)
    symbol contains_chicken = exists o: item : is_food_chicken(o) and close(o, item)
    return contains_milk or contains_turkey or contains_egg or contains_fish or contains_chicken

behavior __goal__():
    body:
        if exists item: item : has_relevant_food(item):
            # If relevant food is found, we can directly observe the item
            bind item: item where:
                has_relevant_food(item)
            observe(item, "Check for milk, turkey, egg, fish, and chicken")
        else:
            # Check all items in the scene that have not been visited
            foreach item: item:
                if not visited(item):
                    observe(item, "Locate milk, turkey, egg, fish, and chicken")

##############################
From agent.py-> find a plan in act()
obs(table_114, Check for milk, turkey, egg, fish, and chicken)
##############################
From agent.py
obs(table_114, Check for milk, turkey, egg, fish, and chicken)
Get this information:  dry_pasta_2114 is inside table_114. food_food_2021 is on table_114. table_114 is facing drawing_110. table_114 is facing drawing_111. knife_2122 is on table_114. cup_2133 is on table_114. table_cloth_2005 is on table_114. food_bread_2084 is inside table_114. cup_2049 is on table_114. box_2038 is on table_114. clothes_hat_2117 is on table_114. milk_2115 is inside table_114. cup_2134 is on table_114. check_2058 is on table_114. clothes_gloves_2118 is on table_114. table_114 is inside dining_room_41. cup_2132 is on table_114. table_114 is on mat_102. table_114 is on floor_47. table_114 is close to cup_2049. table_114 is close to check_2058. table_114 is close to food_bread_2084. table_114 is close to floor_44. table_114 is close to floor_47. table_114 is close to floor_48. table_114 is close to floor_50. table_114 is close to dry_pasta_2114. table_114 is close to milk_2115. table_114 is close to clothes_hat_2117. table_114 is close to clothes_gloves_2118. table_114 is close to knife_2122. table_114 is close to cup_2132. table_114 is close to cup_2133. table_114 is close to cup_2134. table_114 is close to table_cloth_2005. table_114 is close to food_food_2021. table_114 is close to mat_102. table_114 is close to pillow_103. table_114 is close to pillow_104. table_114 is close to pillow_105. table_114 is close to pillow_106. table_114 is close to bench_113. table_114 is close to bench_115. table_114 is close to box_2038. table_114 is close to character_240. table_114 is DIRTY.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_snack_2110_around_kitchen_counter_122(food_snack:item):
    goal: not unknown(food_snack)
    body:
        assert is_food_snack(food_snack)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_snack,kitchen_counter_instance)
        else:
            exp(food_snack,kitchen_counter_instance)
    eff:
        unknown[food_snack]=False
        close[food_snack,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_snack]=True
    

behavior find_food_food_2001_around_food_food_2021(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==2021
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

behavior find_food_cereal_2087_around_kitchen_counter_123(food_cereal:item):
    goal: not unknown(food_cereal)
    body:
        assert is_food_cereal(food_cereal)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_cereal,kitchen_counter_instance)
        else:
            exp(food_cereal,kitchen_counter_instance)
    eff:
        unknown[food_cereal]=False
        close[food_cereal,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_cereal]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_items_on_table(item: item, table: item):
    body:
        achieve on(item, table)

behavior __goal__():
    body:
        bind table: item where:
            is_table(table) and id[table] == 114

        bind milk: item where:
            is_milk(milk)

        bind turkey: item where:
            is_food_turkey(turkey)

        bind egg: item where:
            is_food_egg(egg)

        bind fish: item where:
            is_food_fish(fish)

        bind chicken: item where:
            is_food_chicken(chicken)

        place_items_on_table(milk, table)
        place_items_on_table(turkey, table)
        place_items_on_table(egg, table)
        place_items_on_table(fish, table)
        place_items_on_table(chicken, table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior place_items_on_table(item: item, table: item):
    body:
        achieve on(item, table)

behavior __goal__():
    body:
        bind table: item where:
            is_table(table) and id[table] == 114

        bind milk: item where:
            is_milk(milk)

        bind turkey: item where:
            is_food_turkey(turkey)

        bind egg: item where:
            is_food_egg(egg)

        bind fish: item where:
            is_food_fish(fish)

        bind chicken: item where:
            is_food_chicken(chicken)

        place_items_on_table(milk, table)
        place_items_on_table(turkey, table)
        place_items_on_table(egg, table)
        place_items_on_table(fish, table)
        place_items_on_table(chicken, table)

##############################
From agent.py-> find a plan in act()
grab_executor(milk_2115)put_executor(milk_2115, table_114)walk_executor(food_turkey_2112)grab_executor(food_turkey_2112)walk_executor(table_114)put_executor(food_turkey_2112, table_114)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(food_egg_2092, table_114)walk_executor(food_fish_2093)grab_executor(food_fish_2093)walk_executor(table_114)put_executor(food_fish_2093, table_114)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(table_114)put_executor(food_chicken_2089, table_114)
##############################
From agent.py
grab_executor(milk_2115)
Robot is inside dining_room_41. Robot is close table_114. Robot is close milk_2115. Grabbing milk_2115 by right hand. 
##############################
From agent.py
put_executor(milk_2115, table_114)
Robot is inside dining_room_41. Robot is close table_114. Robot is close milk_2115. milk_2115 released by right hand. 
##############################
From agent.py
walk_executor(food_turkey_2112)
Robot is inside dining_room_41. Robot is close food_turkey_2112. Robot is close fridge_126. Robot is no longer close table_114.Robot is no longer close milk_2115.
##############################
From agent.py
grab_executor(food_turkey_2112)
Robot is inside dining_room_41. Robot is close food_turkey_2112. Robot is close fridge_126. Grabbing food_turkey_2112 by right hand. 
##############################
From agent.py
walk_executor(table_114)
Robot is inside dining_room_41. Robot is close food_turkey_2112. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close fridge_126.
##############################
From agent.py
put_executor(food_turkey_2112, table_114)
Robot is inside dining_room_41. Robot is close food_turkey_2112. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. food_turkey_2112 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2092)
Robot is inside dining_room_41. Robot is close food_egg_2092. Robot is close fridge_126. Robot is no longer close food_turkey_2112.Robot is no longer close table_114.Robot is no longer close mat_102.Robot is no longer close floor_47.
##############################
From agent.py
grab_executor(food_egg_2092)
Robot is inside dining_room_41. Robot is close food_egg_2092. Robot is close fridge_126. Grabbing food_egg_2092 by right hand. 
##############################
From agent.py
walk_executor(table_114)
Robot is inside dining_room_41. Robot is close food_egg_2092. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close fridge_126.
##############################
From agent.py
put_executor(food_egg_2092, table_114)
Robot is inside dining_room_41. Robot is close food_egg_2092. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. food_egg_2092 released by right hand. 
##############################
From agent.py
walk_executor(food_fish_2093)
Robot is inside dining_room_41. Robot is close food_fish_2093. Robot is close fridge_126. Robot is no longer close table_114.Robot is no longer close food_egg_2092.Robot is no longer close mat_102.Robot is no longer close floor_47.
##############################
From agent.py
grab_executor(food_fish_2093)
Robot is inside dining_room_41. Robot is close food_fish_2093. Robot is close fridge_126. Grabbing food_fish_2093 by right hand. 
##############################
From agent.py
walk_executor(table_114)
Robot is inside dining_room_41. Robot is close food_fish_2093. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close fridge_126.
##############################
From agent.py
put_executor(food_fish_2093, table_114)
Robot is inside dining_room_41. Robot is close food_fish_2093. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. food_fish_2093 released by right hand. 
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close fridge_126. Robot is no longer close table_114.Robot is no longer close food_fish_2093.Robot is no longer close mat_102.Robot is no longer close floor_47.
##############################
From agent.py
grab_executor(food_chicken_2089)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close fridge_126. Grabbing food_chicken_2089 by right hand. 
##############################
From agent.py
walk_executor(table_114)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close fridge_126.
##############################
From agent.py
put_executor(food_chicken_2089, table_114)
Robot is inside dining_room_41. Robot is close food_chicken_2089. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. food_chicken_2089 released by right hand. 
##############################
