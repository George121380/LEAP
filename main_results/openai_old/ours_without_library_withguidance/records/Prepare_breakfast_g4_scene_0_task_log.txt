From agent.py
Reset goals: The sub-goals are: 
['1. Boil the pasta and cook the chicken.', '2. Mix the cooked pasta and chicken together.', '3. Put the chicken pasta on a plate.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_dry_pasta_2042_around_kitchen_counter_230(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(dry_pasta,kitchen_counter_instance)
        else:
            exp(dry_pasta,kitchen_counter_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,kitchen_counter_instance]=True
        close[kitchen_counter_instance,dry_pasta]=True
    

behavior find_fryingpan_2083_around_kitchen_counter_230(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

behavior find_pot_2069_around_kitchen_counter_230(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(pot,kitchen_counter_instance)
        else:
            exp(pot,kitchen_counter_instance)
    eff:
        unknown[pot]=False
        close[pot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,pot]=True
    

behavior find_food_turkey_2040_around_fridge_289(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_turkey,fridge_instance)
        else:
            exp(food_turkey,fridge_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,fridge_instance]=True
        close[fridge_instance,food_turkey]=True
    

#exp_behavior_end

#goal_representation
behavior place_pasta_in_pot(pasta: item, pot: item):
    body:
        achieve inside(pasta, pot)

behavior place_chicken_in_fryingpan(chicken: item, fryingpan: item):
    body:
        achieve inside(chicken, fryingpan)

behavior add_water_to_pot(pot:item, sink:item):
    body:
        achieve_once inside(pot, sink)
        # Ensure the pot is placed inside the sink for filling

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            # If the sink has a faucet, turn it on to fill the pot with water

        achieve has_water(pot)
        # Ensure that the pot is filled with water

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_off(faucet)
            # Turn off the faucet after filling the pot with water

behavior place_pot_on_stove(pot: item, stove: item):
    body:
        achieve on(pot, stove)

behavior turn_on_stove(stove: item):
    body:
        achieve is_on(stove)

behavior place_fryingpan_on_stove(fryingpan: item, stove: item):
    body:
        achieve on(fryingpan, stove)

behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select an instance of dry pasta

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select an instance of chicken

        bind pot: item where:
            is_pot(pot)
        # Select an instance of a pot

        bind stove: item where:
            is_stove(stove)
        # Select an instance of a stove

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select an instance of a frying pan

        bind sink: item where:
            is_sink(sink)
        # Select an instance of a sink

        add_water_to_pot(pot, sink)
        place_pasta_in_pot(pasta, pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)
        place_chicken_in_fryingpan(chicken, fryingpan)
        place_fryingpan_on_stove(fryingpan, stove)
        turn_on_stove(stove)
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

'Function has_faucet not found. Note that recursive function calls are not supported in the current version.'
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_dry_pasta_2042_around_cupboard_229(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==229
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(dry_pasta,cupboard_instance)
        else:
            exp(dry_pasta,cupboard_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,cupboard_instance]=True
        close[cupboard_instance,dry_pasta]=True
    

behavior find_fryingpan_2083_around_kitchen_counter_230(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

behavior find_pot_2069_around_stove_2065(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2065
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(pot,stove_instance)
        else:
            exp(pot,stove_instance)
    eff:
        unknown[pot]=False
        close[pot,stove_instance]=True
        close[stove_instance,pot]=True
    

behavior find_food_turkey_2040_around_fridge_289(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_turkey,fridge_instance)
        else:
            exp(food_turkey,fridge_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,fridge_instance]=True
        close[fridge_instance,food_turkey]=True
    

#goal_representation
def has_faucet(sink:item):
    # Determine whether the sink has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet,sink)
    return has_faucet

behavior place_pasta_in_pot(pasta: item, pot: item):
    body:
        achieve inside(pasta, pot)

behavior place_chicken_in_fryingpan(chicken: item, fryingpan: item):
    body:
        achieve inside(chicken, fryingpan)

behavior add_water_to_pot(pot:item, sink:item):
    body:
        achieve_once inside(pot, sink)
        # Ensure the pot is placed inside the sink for filling

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            # If the sink has a faucet, turn it on to fill the pot with water

        achieve has_water(pot)
        # Ensure that the pot is filled with water

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_off(faucet)
            # Turn off the faucet after filling the pot with water

behavior place_pot_on_stove(pot: item, stove: item):
    body:
        achieve on(pot, stove)

behavior turn_on_stove(stove: item):
    body:
        achieve is_on(stove)

behavior place_fryingpan_on_stove(fryingpan: item, stove: item):
    body:
        achieve on(fryingpan, stove)

behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select an instance of dry pasta

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select an instance of chicken

        bind pot: item where:
            is_pot(pot)
        # Select an instance of a pot

        bind stove: item where:
            is_stove(stove)
        # Select an instance of a stove

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select an instance of a frying pan

        bind sink: item where:
            is_sink(sink)
        # Select an instance of a sink

        add_water_to_pot(pot, sink)
        place_pasta_in_pot(pasta, pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)
        place_chicken_in_fryingpan(chicken, fryingpan)
        place_fryingpan_on_stove(fryingpan, stove)
        turn_on_stove(stove)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_dry_pasta_2042_around_cupboard_229(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==229
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(dry_pasta,cupboard_instance)
        else:
            exp(dry_pasta,cupboard_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,cupboard_instance]=True
        close[cupboard_instance,dry_pasta]=True
    

behavior find_fryingpan_2083_around_kitchen_counter_230(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

behavior find_pot_2069_around_kitchen_counter_230(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(pot,kitchen_counter_instance)
        else:
            exp(pot,kitchen_counter_instance)
    eff:
        unknown[pot]=False
        close[pot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,pot]=True
    

behavior find_food_chicken_2017_around_fridge_289(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

#exp_behavior_end

#goal_representation
 
behavior boil_pasta(pasta: item, pot: item, stove: item):
    body:
        achieve has_water(pot)
        # Ensure the pot is filled with water
        
        achieve inside(pasta, pot)
        # Ensure the pasta is placed inside the pot
        
        achieve on(pot, stove)
        # Place the pot on the stove to start boiling
        
        achieve is_on(stove)
        # Turn on the stove to boil the pasta
        
behavior cook_chicken(chicken: item, fryingpan: item, stove: item):
    body:
        achieve inside(chicken, fryingpan)
        # Place the chicken in the frying pan to cook
        
        achieve on(fryingpan, stove)
        # Place the frying pan on the stove to start cooking
        
        achieve is_on(stove)
        # Turn on the stove to cook the chicken

behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select the dry pasta
        
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken
        
        bind pot: item where:
            is_pot(pot)
        # Select a pot
        
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan
        
        bind stove: item where:
            is_stove(stove)
        # Select a stove
        
        boil_pasta(pasta, pot, stove)
        # Boil the pasta in the pot on the stove
        
        cook_chicken(chicken, fryingpan, stove)
        # Cook the chicken in the frying pan on the stove

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior boil_pasta(pasta: item, pot: item, stove: item):
    body:
        achieve has_water(pot)
        # Ensure the pot is filled with water
        
        achieve inside(pasta, pot)
        # Ensure the pasta is placed inside the pot
        
        achieve on(pot, stove)
        # Place the pot on the stove to start boiling
        
        achieve is_on(stove)
        # Turn on the stove to boil the pasta
        
behavior cook_chicken(chicken: item, fryingpan: item, stove: item):
    body:
        achieve inside(chicken, fryingpan)
        # Place the chicken in the frying pan to cook
        
        achieve on(fryingpan, stove)
        # Place the frying pan on the stove to start cooking
        
        achieve is_on(stove)
        # Turn on the stove to cook the chicken

behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select the dry pasta
        
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken
        
        bind pot: item where:
            is_pot(pot)
        # Select a pot
        
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan
        
        bind stove: item where:
            is_stove(stove)
        # Select a stove
        
        boil_pasta(pasta, pot, stove)
        # Boil the pasta in the pot on the stove
        
        cook_chicken(chicken, fryingpan, stove)
        # Cook the chicken in the frying pan on the stove

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)exp(pot_2069, kitchen_counter_230)walk_executor(pot_2069)grab_executor(pot_2069)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(cupboard_229)open_executor(cupboard_229)exp(dry_pasta_2042, cupboard_229)walk_executor(pot_2069)open_executor(pot_2069)walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(pot_2069)putin_executor(dry_pasta_2042, pot_2069)walk_executor(stove_2065)put_executor(pot_2069, stove_2065)switchon_executor(stove_2065)walk_executor(kitchen_counter_230)exp(fryingpan_2083, kitchen_counter_230)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_chicken_2017, fridge_289)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(fryingpan_2083)putin_executor(food_chicken_2017, fryingpan_2083)grab_executor(fryingpan_2083)walk_executor(stove_2065)put_executor(fryingpan_2083, stove_2065)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Find pot_2069. Find cup_2063. Find knife_2050. Find napkin_2005. Find cup_2064. Find cutting_board_2051. Find oil_2079. Find fryingpan_2083. Find tray_296. Find drawing_239. Find drawing_238. Find drawing_240. Find drawing_241. Find drawing_242. Find drawing_243. Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is no longer inside bathroom_1.
##############################
From agent.py
exp(pot_2069, kitchen_counter_230)
Find pot_2069. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_2069)grab_executor(pot_2069)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(cupboard_229)open_executor(cupboard_229)exp(dry_pasta_2042, cupboard_229)walk_executor(pot_2069)open_executor(pot_2069)walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(pot_2069)putin_executor(dry_pasta_2042, pot_2069)walk_executor(stove_2065)put_executor(pot_2069, stove_2065)switchon_executor(stove_2065)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_chicken_2017, fridge_289)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(fryingpan_2083)putin_executor(food_chicken_2017, fryingpan_2083)grab_executor(fryingpan_2083)walk_executor(stove_2065)put_executor(fryingpan_2083, stove_2065)
##############################
From agent.py
walk_executor(pot_2069)
Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is close pot_2069. 
##############################
From agent.py
grab_executor(pot_2069)
Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is close pot_2069. Grabbing pot_2069 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Find basket_for_clothes_2006. Find towel_rack_34. Find towel_rack_32. Find towel_rack_31. Robot is inside bathroom_1. Robot is close pot_2069. Robot is close bathroom_counter_41. Robot is close faucet_43. Robot is no longer inside dining_room_201.Robot is no longer close kitchen_counter_230.
##############################
From agent.py
switchon_executor(faucet_43)
Find drawing_176. Robot is inside bathroom_1. Robot is close pot_2069. Robot is close bathroom_counter_41. Robot is close faucet_43. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot is inside bathroom_1. Robot is close pot_2069. Robot is close bathroom_counter_41. Robot is close faucet_43. 
##############################
From agent.py
walk_executor(cupboard_229)
Robot is inside dining_room_201. Robot is close pot_2069. Robot is close wall_211. Robot is close cupboard_229. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_41.Robot is no longer close faucet_43.
##############################
From agent.py
open_executor(cupboard_229)
Robot is inside dining_room_201. Robot is close pot_2069. Robot is close wall_211. Robot is close cupboard_229. 
##############################
From agent.py
exp(dry_pasta_2042, cupboard_229)
Fail to find dry_pasta_2042 around cupboard_229. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_234)exp(dry_pasta_2042, wallshelf_234)walk_executor(pot_2069)open_executor(pot_2069)walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(pot_2069)putin_executor(dry_pasta_2042, pot_2069)walk_executor(stove_2065)put_executor(pot_2069, stove_2065)switchon_executor(stove_2065)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_chicken_2017, fridge_289)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(fryingpan_2083)putin_executor(food_chicken_2017, fryingpan_2083)grab_executor(fryingpan_2083)walk_executor(stove_2065)put_executor(fryingpan_2083, stove_2065)
##############################
From agent.py
walk_executor(wallshelf_234)
Robot is inside dining_room_201. Robot is close pot_2069. Robot is close wallshelf_234. Robot is close wall_212. Robot is no longer close cupboard_229.Robot is no longer close wall_211.
##############################
From agent.py
exp(dry_pasta_2042, wallshelf_234)
Fail to find dry_pasta_2042 around wallshelf_234. 
##############################
From agent.py-> find a plan in act()
walk_executor(ceilinglamp_26)exp(dry_pasta_2042, ceilinglamp_26)walk_executor(pot_2069)open_executor(pot_2069)walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(pot_2069)putin_executor(dry_pasta_2042, pot_2069)walk_executor(stove_2065)put_executor(pot_2069, stove_2065)switchon_executor(stove_2065)switchoff_executor(stove_2065)open_executor(stove_2065)exp(food_chicken_2017, stove_2065)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(fryingpan_2083)putin_executor(food_chicken_2017, fryingpan_2083)grab_executor(fryingpan_2083)walk_executor(stove_2065)put_executor(fryingpan_2083, stove_2065)close_executor(stove_2065)switchon_executor(stove_2065)
##############################
From agent.py
walk_executor(ceilinglamp_26)
Robot is inside bathroom_1. Robot is close pot_2069. Robot is close ceilinglamp_26. Robot is no longer inside dining_room_201.Robot is no longer close wallshelf_234.Robot is no longer close wall_212.
##############################
From agent.py
exp(dry_pasta_2042, ceilinglamp_26)
Fail to find dry_pasta_2042 around ceilinglamp_26. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_35)exp(dry_pasta_2042, wallshelf_35)walk_executor(pot_2069)open_executor(pot_2069)walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(pot_2069)putin_executor(dry_pasta_2042, pot_2069)walk_executor(stove_2065)put_executor(pot_2069, stove_2065)switchon_executor(stove_2065)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_chicken_2017, fridge_289)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(fryingpan_2083)putin_executor(food_chicken_2017, fryingpan_2083)grab_executor(fryingpan_2083)walk_executor(stove_2065)put_executor(fryingpan_2083, stove_2065)
##############################
From agent.py
walk_executor(wallshelf_35)
Find towel_rack_33. Robot is inside bathroom_1. Robot is close pot_2069. Robot is close wallshelf_35. Robot is no longer close ceilinglamp_26.
##############################
From agent.py
exp(dry_pasta_2042, wallshelf_35)
Fail to find dry_pasta_2042 around wallshelf_35. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_233)open_executor(bookshelf_233)exp(dry_pasta_2042, bookshelf_233)walk_executor(pot_2069)open_executor(pot_2069)walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(pot_2069)putin_executor(dry_pasta_2042, pot_2069)walk_executor(stove_2065)put_executor(pot_2069, stove_2065)switchon_executor(stove_2065)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_chicken_2017, fridge_289)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(fryingpan_2083)putin_executor(food_chicken_2017, fryingpan_2083)grab_executor(fryingpan_2083)walk_executor(stove_2065)put_executor(fryingpan_2083, stove_2065)
##############################
From agent.py
walk_executor(bookshelf_233)
Robot is inside dining_room_201. Robot is close pot_2069. Robot is close bookshelf_233. Robot is close floor_207. Robot is no longer inside bathroom_1.Robot is no longer close wallshelf_35.
##############################
From agent.py
open_executor(bookshelf_233)
Find mouse_166. Find keyboard_168. Find chair_103. Robot is inside dining_room_201. Robot is close pot_2069. Robot is close bookshelf_233. Robot is close floor_207. 
##############################
From agent.py
exp(dry_pasta_2042, bookshelf_233)
Fail to find dry_pasta_2042 around bookshelf_233. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(dry_pasta_2042, fridge_289)walk_executor(pot_2069)open_executor(pot_2069)walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(pot_2069)putin_executor(dry_pasta_2042, pot_2069)walk_executor(stove_2065)put_executor(pot_2069, stove_2065)switchon_executor(stove_2065)walk_executor(fridge_289)exp(food_chicken_2017, fridge_289)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(fryingpan_2083)putin_executor(food_chicken_2017, fryingpan_2083)grab_executor(fryingpan_2083)walk_executor(stove_2065)put_executor(fryingpan_2083, stove_2065)
##############################
From agent.py
walk_executor(fridge_289)
Find sauce_2078. Find food_steak_2008. Find food_apple_2009. Find food_bacon_2010. Find food_banana_2011. Find food_bread_2012. Find food_cake_2013. Find food_carrot_2014. Find food_cereal_2015. Find food_cheese_2016. Find food_chicken_2017. Find food_dessert_2018. Find food_donut_2019. Find food_egg_2020. Find food_fish_2021. Find food_food_2022. Find food_fruit_2023. Find food_hamburger_2024. Find food_ice_cream_2025. Find food_jam_2026. Find food_kiwi_2027. Find food_lemon_2028. Find food_noodles_2029. Find food_oatmeal_2030. Find food_orange_2031. Find food_onion_2032. Find food_peanut_butter_2033. Find food_pizza_2034. Find food_potato_2035. Find food_rice_2036. Find food_salt_2037. Find food_snack_2038. Find food_sugar_2039. Find food_turkey_2040. Find food_vegetable_2041. Find dry_pasta_2042. Find milk_2043. Robot is inside dining_room_201. Robot is close pot_2069. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. Robot is no longer close bookshelf_233.Robot is no longer close floor_207.
##############################
From agent.py
switchoff_executor(fridge_289)
Find mat_22. Robot is inside dining_room_201. Robot is close pot_2069. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. 
##############################
From agent.py
open_executor(fridge_289)
Robot is inside dining_room_201. Robot is close pot_2069. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. 
##############################
From agent.py
exp(dry_pasta_2042, fridge_289)
Find dry_pasta_2042. 
##############################
From agent.py-> find a plan in act()
open_executor(pot_2069)grab_executor(dry_pasta_2042)putin_executor(dry_pasta_2042, pot_2069)walk_executor(stove_2065)put_executor(pot_2069, stove_2065)switchon_executor(stove_2065)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(fryingpan_2083)putin_executor(food_chicken_2017, fryingpan_2083)grab_executor(fryingpan_2083)walk_executor(stove_2065)put_executor(fryingpan_2083, stove_2065)
##############################
From agent.py
open_executor(pot_2069)
Robot is inside dining_room_201. Robot is close pot_2069. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. 
##############################
From agent.py
grab_executor(dry_pasta_2042)
Robot is inside dining_room_201. Robot is close pot_2069. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. Grabbing dry_pasta_2042 by left hand. 
##############################
From agent.py
putin_executor(dry_pasta_2042, pot_2069)
Robot is inside dining_room_201. Robot is close pot_2069. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. dry_pasta_2042 released by left hand. 
##############################
From agent.py
walk_executor(stove_2065)
Robot is inside dining_room_201. Robot is close pot_2069. Robot is close stove_2065. Robot is close kitchen_counter_230. Robot is no longer close sauce_2078.Robot is no longer close fridge_289.Robot is no longer close floor_202.Robot is no longer close floor_203.Robot is no longer close food_steak_2008.Robot is no longer close food_apple_2009.Robot is no longer close food_bacon_2010.Robot is no longer close food_banana_2011.Robot is no longer close food_bread_2012.Robot is no longer close food_cake_2013.Robot is no longer close food_carrot_2014.Robot is no longer close food_cereal_2015.Robot is no longer close food_cheese_2016.Robot is no longer close food_chicken_2017.Robot is no longer close food_dessert_2018.Robot is no longer close food_donut_2019.Robot is no longer close food_egg_2020.Robot is no longer close food_fish_2021.Robot is no longer close food_food_2022.Robot is no longer close food_fruit_2023.Robot is no longer close food_hamburger_2024.Robot is no longer close food_ice_cream_2025.Robot is no longer close food_jam_2026.Robot is no longer close food_kiwi_2027.Robot is no longer close food_lemon_2028.Robot is no longer close food_noodles_2029.Robot is no longer close food_oatmeal_2030.Robot is no longer close food_orange_2031.Robot is no longer close food_onion_2032.Robot is no longer close food_peanut_butter_2033.Robot is no longer close food_pizza_2034.Robot is no longer close food_potato_2035.Robot is no longer close food_rice_2036.Robot is no longer close food_salt_2037.Robot is no longer close food_snack_2038.Robot is no longer close food_sugar_2039.Robot is no longer close food_turkey_2040.Robot is no longer close food_vegetable_2041.Robot is no longer close dry_pasta_2042.Robot is no longer close milk_2043.
##############################
From agent.py
put_executor(pot_2069, stove_2065)
Robot is inside dining_room_201. Robot is close pot_2069. Robot is close stove_2065. Robot is close kitchen_counter_230. pot_2069 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2065)
Robot is inside dining_room_201. Robot is close pot_2069. Robot is close stove_2065. Robot is close kitchen_counter_230. 
##############################
From agent.py
walk_executor(food_chicken_2017)
Robot is inside dining_room_201. Robot is close fridge_289. Robot is close food_chicken_2017. Robot is no longer close stove_2065.Robot is no longer close pot_2069.Robot is no longer close kitchen_counter_230.
##############################
From agent.py
grab_executor(food_chicken_2017)
Robot is inside dining_room_201. Robot is close fridge_289. Robot is close food_chicken_2017. Grabbing food_chicken_2017 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2083)
Robot is inside dining_room_201. Robot is close food_chicken_2017. Robot is close fryingpan_2083. Robot is close kitchen_counter_230. Robot is no longer close fridge_289.
##############################
From agent.py
putin_executor(food_chicken_2017, fryingpan_2083)
Robot is inside dining_room_201. Robot is close food_chicken_2017. Robot is close fryingpan_2083. Robot is close kitchen_counter_230. food_chicken_2017 released by right hand. 
##############################
From agent.py
grab_executor(fryingpan_2083)
Robot is inside dining_room_201. Robot is close food_chicken_2017. Robot is close fryingpan_2083. Robot is close kitchen_counter_230. Grabbing fryingpan_2083 by right hand. 
##############################
From agent.py
walk_executor(stove_2065)
Robot is inside dining_room_201. Robot is close fryingpan_2083. Robot is close kitchen_counter_230. Robot is close stove_2065. Robot is no longer close food_chicken_2017.
##############################
From agent.py
put_executor(fryingpan_2083, stove_2065)
Robot is inside dining_room_201. Robot is close fryingpan_2083. Robot is close kitchen_counter_230. Robot is close stove_2065. fryingpan_2083 released by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2071_around_dishwasher_1001(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==1001
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(bowl,dishwasher_instance)
        else:
            exp(bowl,dishwasher_instance)
    eff:
        unknown[bowl]=False
        close[bowl,dishwasher_instance]=True
        close[dishwasher_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
behavior prepare_to_mix(pasta:item, chicken:item, bowl:item):
    body:
        achieve inside(pasta, bowl)
        # Ensure that the pasta is inside the bowl

        achieve inside(chicken, bowl)
        # Ensure that the chicken is inside the bowl

behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta) and id[pasta] == 2042
        # Select the cooked pasta with ID 2042

        bind chicken: item where:
            is_food_chicken(chicken) and id[chicken] == 2017
        # Select the cooked chicken with ID 2017

        bind bowl: item where:
            is_bowl(bowl)
        # Select an instance of a bowl

        prepare_to_mix(pasta, chicken, bowl)
        # Mix the cooked pasta and chicken in the bowl
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior prepare_to_mix(pasta:item, chicken:item, bowl:item):
    body:
        achieve inside(pasta, bowl)
        # Ensure that the pasta is inside the bowl

        achieve inside(chicken, bowl)
        # Ensure that the chicken is inside the bowl

behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta) and id[pasta] == 2042
        # Select the cooked pasta with ID 2042

        bind chicken: item where:
            is_food_chicken(chicken) and id[chicken] == 2017
        # Select the cooked chicken with ID 2017

        bind bowl: item where:
            is_bowl(bowl)
        # Select an instance of a bowl

        prepare_to_mix(pasta, chicken, bowl)
        # Mix the cooked pasta and chicken in the bowl
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_1001)open_executor(dishwasher_1001)exp(bowl_2071, dishwasher_1001)walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(bowl_2071)putin_executor(dry_pasta_2042, bowl_2071)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(bowl_2071)putin_executor(food_chicken_2017, bowl_2071)
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot is inside dining_room_201. Robot is close dishwasher_1001. Robot is no longer close stove_2065.Robot is no longer close fryingpan_2083.Robot is no longer close kitchen_counter_230.
##############################
From agent.py
open_executor(dishwasher_1001)
Robot is inside dining_room_201. Robot is close dishwasher_1001. 
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2071 ?
Answer: The target object, bowl_2071, is located inside dining_room_201. It is on top of table_226. Look for the table in the dining room, and you will find bowl_2071 positioned on it.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target object, bowl_2071, is located inside dining_room_201. It is on top of table_226. Look for the table in the dining room, and you will find bowl_2071 positioned on it.

The actions you have taken:
Action 1: Walk to kitchen_counter_230.
Action 2: look for pot_2069 around kitchen_counter_230.
Action 3: Walk to pot_2069.
Action 4: Grab pot_2069.
Action 5: Walk to faucet_43.
Action 6: Switch on faucet_43.
Action 7: Switch off faucet_43.
Action 8: Walk to cupboard_229.
Action 9: Open cupboard_229.
Action 10: look for dry_pasta_2042 around cupboard_229.
Action 11: Walk to wallshelf_234.
Action 12: look for dry_pasta_2042 around wallshelf_234.
Action 13: Walk to ceilinglamp_26.
Action 14: look for dry_pasta_2042 around ceilinglamp_26.
Action 15: Walk to wallshelf_35.
Action 16: look for dry_pasta_2042 around wallshelf_35.
Action 17: Walk to bookshelf_233.
Action 18: Open bookshelf_233.
Action 19: look for dry_pasta_2042 around bookshelf_233.
Action 20: Walk to fridge_289.
Action 21: Switch off fridge_289.
Action 22: Open fridge_289.
Action 23: look for dry_pasta_2042 around fridge_289.
Action 24: Open pot_2069.
Action 25: Grab dry_pasta_2042.
Action 26: Put dry_pasta_2042 into pot_2069.
Action 27: Walk to stove_2065.
Action 28: Put pot_2069 on stove_2065.
Action 29: Switch on stove_2065.
Action 30: Walk to food_chicken_2017.
Action 31: Grab food_chicken_2017.
Action 32: Walk to fryingpan_2083.
Action 33: Put food_chicken_2017 into fryingpan_2083.
Action 34: Grab fryingpan_2083.
Action 35: Walk to stove_2065.
Action 36: Put fryingpan_2083 on stove_2065.
Action 37: Walk to dishwasher_1001.
Action 38: Open dishwasher_1001.

##############################
From agent.py
exp(bowl_2071, dishwasher_1001)
Fail to find bowl_2071 around dishwasher_1001. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_226)exp(bowl_2071, table_226)walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(bowl_2071)putin_executor(dry_pasta_2042, bowl_2071)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(bowl_2071)putin_executor(food_chicken_2017, bowl_2071)
##############################
From agent.py
walk_executor(table_226)
Find coffee_filter_2000. Find bowl_2071. Find drawing_2003. Find bowl_2072. Find mat_236. Find fork_2080. Find fork_2081. Find mat_237. Robot is inside dining_room_201. Robot is close table_226. Robot is no longer close dishwasher_1001.
##############################
From agent.py
exp(bowl_2071, table_226)
Find bowl_2071. 
##############################
From agent.py-> find a plan in act()
walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(bowl_2071)putin_executor(dry_pasta_2042, bowl_2071)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(bowl_2071)putin_executor(food_chicken_2017, bowl_2071)
##############################
From agent.py
walk_executor(dry_pasta_2042)
Robot is inside dining_room_201. Robot is close dry_pasta_2042. Robot is close pot_2069. Robot is no longer close table_226.
##############################
From agent.py
grab_executor(dry_pasta_2042)
Robot is inside dining_room_201. Robot is close dry_pasta_2042. Robot is close pot_2069. Grabbing dry_pasta_2042 by right hand. 
##############################
From agent.py
walk_executor(bowl_2071)
Robot is inside dining_room_201. Robot is close dry_pasta_2042. Robot is close table_226. Robot is close bowl_2071. Robot is no longer close pot_2069.
##############################
From agent.py
putin_executor(dry_pasta_2042, bowl_2071)
Robot is inside dining_room_201. Robot is close dry_pasta_2042. Robot is close table_226. Robot is close bowl_2071. dry_pasta_2042 released by right hand. 
##############################
From agent.py
walk_executor(food_chicken_2017)
Robot is inside dining_room_201. Robot is close food_chicken_2017. Robot is close fryingpan_2083. Robot is no longer close dry_pasta_2042.Robot is no longer close table_226.Robot is no longer close bowl_2071.
##############################
From agent.py
grab_executor(food_chicken_2017)
Robot is inside dining_room_201. Robot is close food_chicken_2017. Robot is close fryingpan_2083. Grabbing food_chicken_2017 by right hand. 
##############################
From agent.py
walk_executor(bowl_2071)
Robot is inside dining_room_201. Robot is close food_chicken_2017. Robot is close table_226. Robot is close bowl_2071. Robot is no longer close fryingpan_2083.
##############################
From agent.py
putin_executor(food_chicken_2017, bowl_2071)
Robot is inside dining_room_201. Robot is close food_chicken_2017. Robot is close table_226. Robot is close bowl_2071. food_chicken_2017 released by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_1000_around_toaster_292(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind toaster_instance:item where:
            is_toaster(toaster_instance) and id[toaster_instance]==292
        achieve close_char(char,toaster_instance)
        if can_open(toaster_instance):
            achieve_once open(toaster_instance)
            exp(plate,toaster_instance)
        else:
            exp(plate,toaster_instance)
    eff:
        unknown[plate]=False
        close[plate,toaster_instance]=True
        close[toaster_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_pasta_on_plate(pasta: item, plate: item):
    body:
        achieve on(pasta, plate)

behavior __goal__():
    body:
        bind pasta: item where:
            is_food_food(pasta) and id[pasta] == 2042
        # Select the instance of chicken pasta with ID 2042

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind table: item where:
            is_table(table) and inside(table, dining_room)
        # Select the table inside the dining room

        bind bowl: item where:
            is_bowl(bowl) and on(bowl, table)
        # Select the bowl containing the chicken pasta on the table

        bind plate: item where:
            is_plate(plate) and inside_char(plate, dining_room)
        # Select a plate available in the dining room

        place_pasta_on_plate(bowl, plate)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Error during applying inside_char[observation, state](x: character, y: item).
  Arguments: V::plate, V::dining_room
Argument #0 type does not match: expect character, got item.
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_plate_1000_around_table_355(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==355
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(plate,table_instance)
        else:
            exp(plate,table_instance)
    eff:
        unknown[plate]=False
        close[plate,table_instance]=True
        close[table_instance,plate]=True
    

#goal_representation
behavior place_pasta_on_plate(pasta: item, plate: item):
    body:
        achieve on(pasta, plate)

behavior __goal__():
    body:
        bind pasta: item where:
            is_food_food(pasta) and id[pasta] == 2042
        # Select the instance of chicken pasta with ID 2042

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind table: item where:
            is_table(table) and inside(table, dining_room)
        # Select the table inside the dining room

        bind bowl: item where:
            is_bowl(bowl) and on(bowl, table)
        # Select the bowl containing the chicken pasta on the table

        bind plate: item where:
            is_plate(plate) and inside(plate, dining_room)
        # Select a plate available in the dining room

        place_pasta_on_plate(bowl, plate)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_1000_around_tray_296(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind tray_instance:item where:
            is_tray(tray_instance) and id[tray_instance]==296
        achieve close_char(char,tray_instance)
        if can_open(tray_instance):
            achieve_once open(tray_instance)
            exp(plate,tray_instance)
        else:
            exp(plate,tray_instance)
    eff:
        unknown[plate]=False
        close[plate,tray_instance]=True
        close[tray_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_pasta_on_plate(pasta: item, plate: item):
    body:
        achieve on(pasta, plate)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2071

        bind pasta: item where:
            inside(pasta, bowl)
        
        bind dining_room: item where:
            is_dining_room(dining_room)

        bind table: item where:
            is_table(table) and inside(table, dining_room)

        bind plate: item where:
            is_plate(plate) and inside(plate, table)
        
        place_pasta_on_plate(pasta, plate)

#goal_representation_end

##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "3. put the chicken pasta on a plate." ?
Answer: Put the chicken pasta on a plate.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_1000_around_table_355(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==355
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(plate,table_instance)
        else:
            exp(plate,table_instance)
    eff:
        unknown[plate]=False
        close[plate,table_instance]=True
        close[table_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_chicken_pasta_on_plate(chicken_pasta: item, plate: item):
    body:
        achieve on(chicken_pasta, plate)

behavior __goal__():
    body:
        bind chicken_pasta: item where:
            is_food_food(chicken_pasta) and id[chicken_pasta] == 2042
        # Select the cooked chicken pasta with ID 2042

        bind plate: item where:
            is_plate(plate)
        # Select an instance of a plate
        
        put_chicken_pasta_on_plate(chicken_pasta, plate)
        # Place the chicken pasta on the plate

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_1000_around_table_355(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==355
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(plate,table_instance)
        else:
            exp(plate,table_instance)
    eff:
        unknown[plate]=False
        close[plate,table_instance]=True
        close[table_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_chicken_pasta_on_plate(chicken_pasta: item, plate: item):
    body:
        achieve on(chicken_pasta, plate)
        # Put the chicken pasta on the plate

behavior __goal__():
    body:
        bind plate: item where:
            is_plate(plate)
        # Select an instance of a plate

        bind dining_room: item where:
            is_dining_room(dining_room)

        bind table: item where:
            is_table(table) and inside(table, dining_room)
        # Select a table inside the dining room

        bind bowl_2071: item where:
            is_bowl(bowl_2071) and on(bowl_2071, table)
        # Bowl is identified on the table

        observe(bowl_2071, "Check for chicken pasta inside bowl 2071")
        # Observe the contents of bowl_2071 to verify the chicken pasta

        bind chicken_pasta: item where:
            is_food_food(chicken_pasta) and inside(chicken_pasta, bowl_2071)
        # Bind the chicken pasta from the bowl

        put_chicken_pasta_on_plate(chicken_pasta, plate)
        # Place chicken pasta on the plate

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_1000_around_tvstand_225(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==225
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(plate,tvstand_instance)
        else:
            exp(plate,tvstand_instance)
    eff:
        unknown[plate]=False
        close[plate,tvstand_instance]=True
        close[tvstand_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_chicken_pasta_on_plate(chicken_pasta: item, plate: item):
    body:
        achieve on(chicken_pasta, plate)

behavior __goal__():
    body:
        bind chicken_pasta: item where:
            is_food(chicken_pasta) and inside(chicken_pasta, bowl_2071)
        # Select the chicken pasta inside bowl_2071

        bind plate: item where:
            is_plate(plate) and not visited(plate)
        # Select an instance of a plate

        place_chicken_pasta_on_plate(chicken_pasta, plate)
        # Put the chicken pasta on the plate

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: bowl_2071; available variables: [Variable<chicken_pasta: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_plate_1000_around_table_355(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==355
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(plate,table_instance)
        else:
            exp(plate,table_instance)
    eff:
        unknown[plate]=False
        close[plate,table_instance]=True
        close[table_instance,plate]=True
    

#goal_representation
behavior place_chicken_pasta_on_plate(chicken_pasta: item, plate: item):
    body:
        achieve on(chicken_pasta, plate)

behavior __goal__():
    body:
        bind chicken_pasta: item where:
            is_food(chicken_pasta) and inside(chicken_pasta, bowl_2071)
        # Select the chicken pasta inside bowl_2071

        bind plate: item where:
            is_plate(plate) and not visited(plate)
        # Select an instance of a plate

        place_chicken_pasta_on_plate(chicken_pasta, plate)
        # Put the chicken pasta on the plate

        bind bowl_2071: item where:
            is_bowl(bowl_2071) and id[bowl_2071] == 2071
        # Select bowl with ID 2071
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: bowl_2071; available variables: [Variable<chicken_pasta: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_plate_1000_around_tray_296(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind tray_instance:item where:
            is_tray(tray_instance) and id[tray_instance]==296
        achieve close_char(char,tray_instance)
        if can_open(tray_instance):
            achieve_once open(tray_instance)
            exp(plate,tray_instance)
        else:
            exp(plate,tray_instance)
    eff:
        unknown[plate]=False
        close[plate,tray_instance]=True
        close[tray_instance,plate]=True
    

#goal_representation

behavior place_chicken_pasta_on_plate(chicken_pasta: item, plate: item):
    body:
        achieve on(chicken_pasta, plate)

behavior __goal__():
    body:
        bind bowl_2071: item where:
            is_bowl(bowl_2071) and id[bowl_2071] == 2071
        # Select bowl with ID 2071

        bind chicken_pasta: item where:
            is_food(chicken_pasta) and inside(chicken_pasta, bowl_2071)
        # Select the chicken pasta inside bowl_2071

        bind plate: item where:
            is_plate(plate) and not visited(plate)
        # Select an instance of a plate

        place_chicken_pasta_on_plate(chicken_pasta, plate)
        # Put the chicken pasta on the plate

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior place_chicken_pasta_on_plate(chicken_pasta: item, plate: item):
    body:
        achieve on(chicken_pasta, plate)

behavior __goal__():
    body:
        bind bowl_2071: item where:
            is_bowl(bowl_2071) and id[bowl_2071] == 2071
        # Select bowl with ID 2071

        bind chicken_pasta: item where:
            is_food(chicken_pasta) and inside(chicken_pasta, bowl_2071)
        # Select the chicken pasta inside bowl_2071

        bind plate: item where:
            is_plate(plate) and not visited(plate)
        # Select an instance of a plate

        place_chicken_pasta_on_plate(chicken_pasta, plate)
        # Put the chicken pasta on the plate

##############################
From agent.py-> find a plan in act()
walk_executor(tray_296)exp(plate_1000, tray_296)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(plate_1000)put_executor(food_chicken_2017, plate_1000)
##############################
From agent.py
walk_executor(tray_296)
Robot is inside dining_room_201. Robot is close tray_296. Robot is close oven_295. Robot is no longer close food_chicken_2017.Robot is no longer close table_226.Robot is no longer close bowl_2071.
##############################
From agent.py
exp(plate_1000, tray_296)
Fail to find plate_1000 around tray_296. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_355)exp(plate_1000, table_355)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(plate_1000)put_executor(food_chicken_2017, plate_1000)
##############################
From agent.py
walk_executor(table_355)
Find mat_401. Find remote_control_2052. Find spectacles_2082. Find clothes_jacket_2047. Find cat_2055. Find pillow_405. Find drawing_400. Find pillow_406. Find drawing_404. Find hairbrush_2002. Find vacuum_cleaner_2070. Find headset_2062. Robot is inside home_office_319. Robot is close couch_352. Robot is close mat_401. Robot is close table_355. Robot is no longer inside dining_room_201.Robot is no longer close tray_296.Robot is no longer close oven_295.
##############################
From agent.py
exp(plate_1000, table_355)
Fail to find plate_1000 around table_355. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_235)exp(plate_1000, wallshelf_235)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(plate_1000)put_executor(food_chicken_2017, plate_1000)
##############################
From agent.py
walk_executor(wallshelf_235)
Robot is inside dining_room_201. Robot is close wallshelf_235. Robot is no longer inside home_office_319.Robot is no longer close couch_352.Robot is no longer close mat_401.Robot is no longer close table_355.
##############################
From agent.py
exp(plate_1000, wallshelf_235)
Fail to find plate_1000 around wallshelf_235. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffee_table_2068)exp(plate_1000, coffee_table_2068)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(plate_1000)put_executor(food_chicken_2017, plate_1000)
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot is inside home_office_319. Robot is close coffee_table_2068. Robot is no longer inside dining_room_201.Robot is no longer close wallshelf_235.
##############################
From agent.py
exp(plate_1000, coffee_table_2068)
Fail to find plate_1000 around coffee_table_2068. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_42)exp(plate_1000, sink_42)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(plate_1000)put_executor(food_chicken_2017, plate_1000)
##############################
From agent.py
walk_executor(sink_42)
Find detergent_2084. Find soap_2053. Find cleaning_solution_2073. Robot is inside bathroom_1. Robot is close bathroom_counter_41. Robot is close sink_42. Robot is no longer inside home_office_319.Robot is no longer close coffee_table_2068.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find plate_1000 ?
Answer: The target item, plate_1000, is located on sink_231. To find it, go to the dining room identified as dining_room_201. Once there, locate sink_231; plate_1000 is directly on it.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target object, bowl_2071, is located inside dining_room_201. It is on top of table_226. Look for the table in the dining room, and you will find bowl_2071 positioned on it.
The target item, plate_1000, is located on sink_231. To find it, go to the dining room identified as dining_room_201. Once there, locate sink_231; plate_1000 is directly on it.

Human Guidance: Put the chicken pasta on a plate.
The actions you have taken:
Action 1: Walk to kitchen_counter_230.
Action 2: look for pot_2069 around kitchen_counter_230.
Action 3: Walk to pot_2069.
Action 4: Grab pot_2069.
Action 5: Walk to faucet_43.
Action 6: Switch on faucet_43.
Action 7: Switch off faucet_43.
Action 8: Walk to cupboard_229.
Action 9: Open cupboard_229.
Action 10: look for dry_pasta_2042 around cupboard_229.
Action 11: Walk to wallshelf_234.
Action 12: look for dry_pasta_2042 around wallshelf_234.
Action 13: Walk to ceilinglamp_26.
Action 14: look for dry_pasta_2042 around ceilinglamp_26.
Action 15: Walk to wallshelf_35.
Action 16: look for dry_pasta_2042 around wallshelf_35.
Action 17: Walk to bookshelf_233.
Action 18: Open bookshelf_233.
Action 19: look for dry_pasta_2042 around bookshelf_233.
Action 20: Walk to fridge_289.
Action 21: Switch off fridge_289.
Action 22: Open fridge_289.
Action 23: look for dry_pasta_2042 around fridge_289.
Action 24: Open pot_2069.
Action 25: Grab dry_pasta_2042.
Action 26: Put dry_pasta_2042 into pot_2069.
Action 27: Walk to stove_2065.
Action 28: Put pot_2069 on stove_2065.
Action 29: Switch on stove_2065.
Action 30: Walk to food_chicken_2017.
Action 31: Grab food_chicken_2017.
Action 32: Walk to fryingpan_2083.
Action 33: Put food_chicken_2017 into fryingpan_2083.
Action 34: Grab fryingpan_2083.
Action 35: Walk to stove_2065.
Action 36: Put fryingpan_2083 on stove_2065.
Action 37: Walk to dishwasher_1001.
Action 38: Open dishwasher_1001.
Action 39: look for bowl_2071 around dishwasher_1001.
Action 40: Walk to table_226.
Action 41: look for bowl_2071 around table_226.
Action 42: Walk to dry_pasta_2042.
Action 43: Grab dry_pasta_2042.
Action 44: Walk to bowl_2071.
Action 45: Put dry_pasta_2042 into bowl_2071.
Action 46: Walk to food_chicken_2017.
Action 47: Grab food_chicken_2017.
Action 48: Walk to bowl_2071.
Action 49: Put food_chicken_2017 into bowl_2071.
Action 50: Walk to tray_296.
Action 51: look for plate_1000 around tray_296.
Action 52: Walk to table_355.
Action 53: look for plate_1000 around table_355.
Action 54: Walk to wallshelf_235.
Action 55: look for plate_1000 around wallshelf_235.
Action 56: Walk to coffee_table_2068.
Action 57: look for plate_1000 around coffee_table_2068.
Action 58: Walk to sink_42.

##############################
From agent.py
exp(plate_1000, sink_42)
Fail to find plate_1000 around sink_42. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_231)exp(plate_1000, sink_231)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(plate_1000)put_executor(food_chicken_2017, plate_1000)
##############################
From agent.py
walk_executor(sink_231)
Find plate_1000. Find soap_2054. Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is close sink_231. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_41.Robot is no longer close sink_42.
##############################
From agent.py
exp(plate_1000, sink_231)
Find plate_1000. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(plate_1000)put_executor(food_chicken_2017, plate_1000)
##############################
From agent.py
walk_executor(food_chicken_2017)
Robot is inside dining_room_201. Robot is close food_chicken_2017. Robot is close bowl_2071. Robot is no longer close kitchen_counter_230.Robot is no longer close sink_231.
##############################
From agent.py
grab_executor(food_chicken_2017)
Robot is inside dining_room_201. Robot is close food_chicken_2017. Robot is close bowl_2071. Grabbing food_chicken_2017 by right hand. 
##############################
From agent.py
walk_executor(plate_1000)
Robot is inside dining_room_201. Robot is close food_chicken_2017. Robot is close plate_1000. Robot is close sink_231. Robot is no longer close bowl_2071.
##############################
From agent.py
put_executor(food_chicken_2017, plate_1000)
Robot is inside dining_room_201. Robot is close food_chicken_2017. Robot is close plate_1000. Robot is close sink_231. food_chicken_2017 released by right hand. 
##############################
