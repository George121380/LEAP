From agent.py
Reset goals: The sub-goals are: 
['Scramble the egg using the frying pan.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_needle_2012_around_stove_2090(needle:item):
    goal: not unknown(needle)
    body:
        assert is_needle(needle)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(needle,stove_instance)
        else:
            exp(needle,stove_instance)
    eff:
        unknown[needle]=False
        close[needle,stove_instance]=True
        close[stove_instance,needle]=True
    

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
 
def has_egg_and_fryingpan_in_kitchen(egg:item, fryingpan:item):
    # Function to check if there is an egg and frying pan available in the kitchen
    symbol has_egg_pan=exists e: item, fp: item : is_food_egg(e) and is_fryingpan(fp) and inside(e, kitchen) and inside(fp, kitchen)
    return has_egg_pan

def has_stove_in_kitchen(kitchen:item):
    # Function to check if there is a stove inside the kitchen
    symbol has_stove=exists stove: item : is_stove(stove) and inside(stove, kitchen)
    return has_stove

def has_faucet_in_kitchen(kitchen:item):
    # Determine whether the kitchen has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and inside(faucet, kitchen)
    return has_faucet

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior crack_egg_and_scramble(egg:item, fryingpan:item):
    body:
        achieve inside(egg, fryingpan)

behavior clean_fryingpan(fryingpan:item, sink:item):
    body:
        achieve inside(fryingpan, sink)
        if has_faucet_in_kitchen(sink):
            bind faucet: item where:
                is_faucet(faucet) and inside(faucet, sink)
            achieve_once is_on(faucet)
            scrub(fryingpan)
            achieve_once is_off(faucet)
        else:
            scrub(fryingpan)

behavior __goal__():
    body:
        bind kitchen: item where:
            is_kitchen(kitchen)
        # Select a kitchen

        if exists egg: item, fryingpan: item : has_egg_and_fryingpan_in_kitchen(egg, fryingpan):
            bind egg: item where:
                is_food_egg(egg) and inside(egg, kitchen)
            bind fryingpan: item where:
                is_fryingpan(fryingpan) and inside(fryingpan, kitchen)
        else:
            observe(kitchen, "Find egg and frying pan in kitchen")

        bind stove: item where:
            is_stove(stove) and inside(stove, kitchen)
        
        turn_on_stove(stove)
        # Turn on the stove for cooking

        crack_egg_and_scramble(egg, fryingpan)
        # Crack the egg and scramble it in the frying pan

        bind sink: item where:
            is_sink(sink) and inside(sink, kitchen)

        clean_fryingpan(fryingpan,sink)
        # Clean the frying pan after use

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Unknown variable: kitchen; available variables: [Variable<egg: item>, Variable<fryingpan: item>, Variable<e: item>, Variable<fp: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_needle_2024_around_bookshelf_372(needle:item):
    goal: not unknown(needle)
    body:
        assert is_needle(needle)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==372
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(needle,bookshelf_instance)
        else:
            exp(needle,bookshelf_instance)
    eff:
        unknown[needle]=False
        close[needle,bookshelf_instance]=True
        close[bookshelf_instance,needle]=True
    

#goal_representation
 
def has_egg_and_fryingpan_in_kitchen(kitchen:item):
    # Function to check if there is an egg and frying pan available in the kitchen
    symbol has_egg_pan=exists e: item, fp: item : is_food_egg(e) and is_fryingpan(fp) and inside(e, kitchen) and inside(fp, kitchen)
    return has_egg_pan

def has_stove_in_kitchen(kitchen:item):
    # Function to check if there is a stove inside the kitchen
    symbol has_stove=exists stove: item : is_stove(stove) and inside(stove, kitchen)
    return has_stove

def has_faucet_in_kitchen(kitchen:item):
    # Determine whether the kitchen has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and inside(faucet, kitchen)
    return has_faucet

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior crack_egg_and_scramble(egg:item, fryingpan:item):
    body:
        achieve inside(egg, fryingpan)

behavior clean_fryingpan(fryingpan:item, sink:item):
    body:
        achieve inside(fryingpan, sink)
        if has_faucet_in_kitchen(sink):
            bind faucet: item where:
                is_faucet(faucet) and inside(faucet, sink)
            achieve_once is_on(faucet)
            scrub(fryingpan)
            achieve_once is_off(faucet)
        else:
            scrub(fryingpan)

behavior __goal__():
    body:
        bind kitchen: item where:
            is_kitchen(kitchen)
        # Select a kitchen

        if exists egg: item, fryingpan: item : has_egg_and_fryingpan_in_kitchen(kitchen):
            bind egg: item where:
                is_food_egg(egg) and inside(egg, kitchen)
            bind fryingpan: item where:
                is_fryingpan(fryingpan) and inside(fryingpan, kitchen)
        else:
            observe(kitchen, "Find egg and frying pan in kitchen")

        bind stove: item where:
            is_stove(stove) and inside(stove, kitchen)
        
        turn_on_stove(stove)
        # Turn on the stove for cooking

        crack_egg_and_scramble(egg, fryingpan)
        # Crack the egg and scramble it in the frying pan

        bind sink: item where:
            is_sink(sink) and inside(sink, kitchen)

        clean_fryingpan(fryingpan,sink)
        # Clean the frying pan after use

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: egg; available variables: [].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_needle_2024_around_kitchen_counter_128(needle:item):
    goal: not unknown(needle)
    body:
        assert is_needle(needle)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(needle,kitchen_counter_instance)
        else:
            exp(needle,kitchen_counter_instance)
    eff:
        unknown[needle]=False
        close[needle,kitchen_counter_instance]=True
        close[kitchen_counter_instance,needle]=True
    

#goal_representation
 
def has_egg_and_fryingpan_in_kitchen(kitchen:item):
    # Function to check if there is an egg and frying pan available in the kitchen
    symbol has_egg_pan=exists e: item, fp: item : is_food_egg(e) and is_fryingpan(fp) and inside(e, kitchen) and inside(fp, kitchen)
    return has_egg_pan

def has_stove_in_kitchen(kitchen:item):
    # Function to check if there is a stove inside the kitchen
    symbol has_stove=exists stove: item : is_stove(stove) and inside(stove, kitchen)
    return has_stove

def has_faucet_in_kitchen(kitchen:item):
    # Determine whether the kitchen has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and inside(faucet, kitchen)
    return has_faucet

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior crack_egg_and_scramble(egg:item, fryingpan:item):
    body:
        achieve inside(egg, fryingpan)

behavior clean_fryingpan(fryingpan:item, sink:item):
    body:
        achieve inside(fryingpan, sink)
        if has_faucet_in_kitchen(sink):
            bind faucet: item where:
                is_faucet(faucet) and inside(faucet, sink)
            achieve_once is_on(faucet)
            scrub(fryingpan)
            achieve_once is_off(faucet)
        else:
            scrub(fryingpan)

behavior __goal__():
    body:
        bind kitchen: item where:
            is_kitchen(kitchen)
        # Select a kitchen

        if exists egg: item, fryingpan: item : has_egg_and_fryingpan_in_kitchen(kitchen):
            bind egg: item where:
                is_food_egg(egg) and inside(egg, kitchen)
            bind fryingpan: item where:
                is_fryingpan(fryingpan) and inside(fryingpan, kitchen)
        else:
            observe(kitchen, "Find egg and frying pan in kitchen")

            bind egg: item where:
                is_food_egg(egg) and inside(egg, kitchen)
            bind fryingpan: item where:
                is_fryingpan(fryingpan) and inside(fryingpan, kitchen)

        bind stove: item where:
            is_stove(stove) and inside(stove, kitchen)
        
        turn_on_stove(stove)
        # Turn on the stove for cooking

        crack_egg_and_scramble(egg, fryingpan)
        # Crack the egg and scramble it in the frying pan

        bind sink: item where:
            is_sink(sink) and inside(sink, kitchen)

        clean_fryingpan(fryingpan,sink)
        # Clean the frying pan after use

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_needle_2012_around_stove_2090(needle:item):
    goal: not unknown(needle)
    body:
        assert is_needle(needle)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(needle,stove_instance)
        else:
            exp(needle,stove_instance)
    eff:
        unknown[needle]=False
        close[needle,stove_instance]=True
        close[stove_instance,needle]=True
    

#exp_behavior_end

#goal_representation
 
behavior scramble_egg_in_fryingpan(egg: item, fryingpan: item):
    body:
        achieve inside(egg, fryingpan)
        # Place the egg inside the frying pan

behavior cook_egg_in_fryingpan(fryingpan: item, stove: item):
    body:
        achieve on(fryingpan, stove)
        # Place the frying pan on the stove
        achieve is_on(stove)
        # Turn the stove on to start cooking the egg

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select the egg to be scrambled

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        scramble_egg_in_fryingpan(egg, fryingpan)
        cook_egg_in_fryingpan(fryingpan, stove)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior scramble_egg_in_fryingpan(egg: item, fryingpan: item):
    body:
        achieve inside(egg, fryingpan)
        # Place the egg inside the frying pan

behavior cook_egg_in_fryingpan(fryingpan: item, stove: item):
    body:
        achieve on(fryingpan, stove)
        # Place the frying pan on the stove
        achieve is_on(stove)
        # Turn the stove on to start cooking the egg

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select the egg to be scrambled

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        scramble_egg_in_fryingpan(egg, fryingpan)
        cook_egg_in_fryingpan(fryingpan, stove)

##############################
From agent.py-> find a plan in act()
walk_executor(stove_2090)open_executor(stove_2090)exp(fryingpan_2107, stove_2090)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)close_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(stove_2090)
Find pot_54. Find pot_2093. Find tray_142. Find oil_2102. Find fryingpan_2107. Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close stove_2090. Robot is no longer inside home_office_161.
##############################
From agent.py
open_executor(stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close stove_2090. 
##############################
From agent.py
exp(fryingpan_2107, stove_2090)
Find fryingpan_2107. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)close_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(fridge_140)
Find food_cereal_2048. Find food_cheese_2049. Find food_chicken_2050. Find food_dessert_2051. Find food_donut_2052. Find food_egg_2053. Find food_fish_2054. Find food_food_2055. Find food_fruit_2056. Find food_hamburger_2057. Find food_ice_cream_2058. Find food_jam_2059. Find food_kiwi_2060. Find food_lemon_2061. Find food_noodles_2062. Find food_oatmeal_2063. Find food_peanut_butter_2064. Find food_pizza_2065. Find food_potato_2066. Find food_rice_2067. Find food_salt_2068. Find food_snack_2069. Find food_sugar_2070. Find food_turkey_2071. Find food_vegetable_2072. Find dry_pasta_2073. Find milk_2074. Find sauce_2101. Find food_steak_2042. Find food_apple_2043. Find food_bacon_2044. Find food_banana_2045. Find food_cake_2046. Find food_carrot_2047. Find chair_138. Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Robot is no longer close kitchen_counter_129.Robot is no longer close stove_2090.
##############################
From agent.py
switchoff_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
open_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
exp(food_egg_2053, fridge_140)
Find food_egg_2053. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)close_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
grab_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Robot is no longer close food_cereal_2048.Robot is no longer close food_cheese_2049.Robot is no longer close food_chicken_2050.Robot is no longer close food_dessert_2051.Robot is no longer close food_donut_2052.Robot is no longer close food_fish_2054.Robot is no longer close food_food_2055.Robot is no longer close food_fruit_2056.Robot is no longer close food_hamburger_2057.Robot is no longer close food_ice_cream_2058.Robot is no longer close food_jam_2059.Robot is no longer close food_kiwi_2060.Robot is no longer close food_lemon_2061.Robot is no longer close food_noodles_2062.Robot is no longer close food_oatmeal_2063.Robot is no longer close food_peanut_butter_2064.Robot is no longer close food_pizza_2065.Robot is no longer close food_potato_2066.Robot is no longer close food_rice_2067.Robot is no longer close food_salt_2068.Robot is no longer close food_snack_2069.Robot is no longer close food_sugar_2070.Robot is no longer close food_turkey_2071.Robot is no longer close food_vegetable_2072.Robot is no longer close dry_pasta_2073.Robot is no longer close milk_2074.Robot is no longer close floor_22.Robot is no longer close sauce_2101.Robot is no longer close fridge_140.Robot is no longer close food_steak_2042.Robot is no longer close food_apple_2043.Robot is no longer close food_bacon_2044.Robot is no longer close food_banana_2045.Robot is no longer close food_cake_2046.Robot is no longer close food_carrot_2047.
##############################
From agent.py
putin_executor(food_egg_2053, fryingpan_2107)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. food_egg_2053 released by right hand. 
##############################
From agent.py
grab_executor(fryingpan_2107)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Grabbing fryingpan_2107 by right hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Robot is close stove_2090. Robot is no longer close food_egg_2053.
##############################
From agent.py
put_executor(fryingpan_2107, stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Robot is close stove_2090. fryingpan_2107 released by right hand. 
##############################
From agent.py
close_executor(stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Robot is close stove_2090. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Robot is close stove_2090. 
##############################
