From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the underwear with soap.', '2. Put the underwear in the washing machine and add some detergent for a thorough clean.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_underwear_2121_around_dresser_274(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==274
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_underwear,dresser_instance)
        else:
            exp(clothes_underwear,dresser_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,dresser_instance]=True
        close[dresser_instance,clothes_underwear]=True
    

behavior find_soap_2126_around_sink_19(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==19
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_underwear_by_hand(underwear:item, soap:item, sink:item):
    body:
        achieve_once inside(underwear, sink)
        # Ensure the underwear is placed inside the sink for washing

        achieve_once inside(soap, sink)
        # Place soap inside the sink with the underwear

        achieve has_water(sink)
        # Ensure there is water in the sink

        wash(underwear)
        # Wash the underwear by hand

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select the underwear

        bind soap: item where:
            is_soap(soap)
        # Select soap for washing

        bind sink: item where:
            is_sink(sink) and has_water(sink)
        # Select a sink with water for washing

        wash_underwear_by_hand(underwear, soap, sink)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_underwear_2121_around_bed_197(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==197
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(clothes_underwear,bed_instance)
        else:
            exp(clothes_underwear,bed_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,bed_instance]=True
        close[bed_instance,clothes_underwear]=True
    

behavior find_soap_2125_around_bathroom_counter_18(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_food_vegetable_2113_around_kitchen_counter_119(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_vegetable,kitchen_counter_instance)
        else:
            exp(food_vegetable,kitchen_counter_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_vegetable]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_underwear(underwear:item, soap:item, faucet:item):
    body:
        achieve_once inside(underwear, sink)
        # Ensure the underwear is placed inside the sink for washing

        achieve_once is_on(faucet)
        # Turn on the faucet to fill the sink with water

        achieve has_water(sink)
        # Ensure there is water in the sink

        wash(underwear)
        # Wash the underwear by hand using soap

        achieve_once is_off(faucet)
        # Turn off the faucet after washing

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select the underwear to be hand washed

        bind soap: item where:
            is_soap(soap)
        # Select soap to wash the underwear

        bind sink: item where:
            is_sink(sink)
        # Select a sink

        bind faucet: item where:
            is_faucet(faucet) and close(faucet, sink)
        # Select the faucet close to the sink

        hand_wash_underwear(underwear, soap, faucet)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: sink; available variables: [Variable<underwear: item>, Variable<soap: item>, Variable<faucet: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_underwear_2121_around_bed_197(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==197
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(clothes_underwear,bed_instance)
        else:
            exp(clothes_underwear,bed_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,bed_instance]=True
        close[bed_instance,clothes_underwear]=True
    

behavior find_soap_2126_around_sink_19(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==19
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#goal_representation
 
behavior hand_wash_underwear(underwear:item, soap:item, sink:item, faucet:item):
    body:
        achieve_once inside(underwear, sink)
        # Ensure the underwear is placed inside the sink for washing

        achieve_once is_on(faucet)
        # Turn on the faucet to fill the sink with water

        achieve has_water(sink)
        # Ensure there is water in the sink

        wash(underwear)
        # Wash the underwear by hand using soap

        achieve_once is_off(faucet)
        # Turn off the faucet after washing

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select the underwear to be hand washed

        bind soap: item where:
            is_soap(soap)
        # Select soap to wash the underwear

        bind sink: item where:
            is_sink(sink)
        # Select a sink

        bind faucet: item where:
            is_faucet(faucet) and close(faucet, sink)
        # Select the faucet close to the sink

        hand_wash_underwear(underwear, soap, sink, faucet)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior hand_wash_underwear(underwear:item, soap:item, sink:item, faucet:item):
    body:
        achieve_once inside(underwear, sink)
        # Ensure the underwear is placed inside the sink for washing

        achieve_once is_on(faucet)
        # Turn on the faucet to fill the sink with water

        achieve has_water(sink)
        # Ensure there is water in the sink

        wash(underwear)
        # Wash the underwear by hand using soap

        achieve_once is_off(faucet)
        # Turn off the faucet after washing

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select the underwear to be hand washed

        bind soap: item where:
            is_soap(soap)
        # Select soap to wash the underwear

        bind sink: item where:
            is_sink(sink)
        # Select a sink

        bind faucet: item where:
            is_faucet(faucet) and close(faucet, sink)
        # Select the faucet close to the sink

        hand_wash_underwear(underwear, soap, sink, faucet)

##############################
From agent.py-> find a plan in act()
walk_executor(bed_197)exp(clothes_underwear_2121, bed_197)walk_executor(clothes_underwear_2121)grab_executor(clothes_underwear_2121)walk_executor(sink_19)putin_executor(clothes_underwear_2121, sink_19)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(clothes_underwear_2121)wash_executor(clothes_underwear_2121)
##############################
From agent.py
walk_executor(bed_197)
Find clothes_dress_2116. Find clothes_scarf_2120. Find clothes_underwear_2121. Find drawing_201. Find pillow_207. Find pillow_208. Robot is inside bedroom_162. Robot is close bed_197. Robot is no longer inside dining_room_41.
##############################
From agent.py
exp(clothes_underwear_2121, bed_197)
Find clothes_underwear_2121. 
##############################
From agent.py-> find a plan in act()
walk_executor(clothes_underwear_2121)grab_executor(clothes_underwear_2121)walk_executor(sink_19)putin_executor(clothes_underwear_2121, sink_19)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(clothes_underwear_2121)wash_executor(clothes_underwear_2121)
##############################
From agent.py
walk_executor(clothes_underwear_2121)
Robot is inside bedroom_162. Robot is close bed_197. Robot is close clothes_underwear_2121. 
##############################
From agent.py
grab_executor(clothes_underwear_2121)
Robot is inside bedroom_162. Robot is close bed_197. Robot is close clothes_underwear_2121. Grabbing clothes_underwear_2121 by right hand. 
##############################
From agent.py
walk_executor(sink_19)
Find mat_32. Find detergent_2155. Find soap_2125. Find after_shave_2063. Find cleaning_solution_2143. Find drawing_33. Find phone_2029. Robot is inside bathroom_1. Robot is close clothes_underwear_2121. Robot is close bathroom_counter_18. Robot is close sink_19. Robot is no longer inside bedroom_162.Robot is no longer close bed_197.
##############################
From agent.py
putin_executor(clothes_underwear_2121, sink_19)
Robot is inside bathroom_1. Robot is close clothes_underwear_2121. Robot is close bathroom_counter_18. Robot is close sink_19. clothes_underwear_2121 released by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot is inside bathroom_1. Robot is close bathroom_counter_18. Robot is close faucet_20. Robot is no longer close clothes_underwear_2121.Robot is no longer close sink_19.
##############################
From agent.py
switchon_executor(faucet_20)
Robot is inside bathroom_1. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot is inside bathroom_1. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
From agent.py
walk_executor(clothes_underwear_2121)
Robot is inside bedroom_162. Robot is close clothes_underwear_2121. Robot is close sink_19. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_18.Robot is no longer close faucet_20.
##############################
From agent.py
wash_executor(clothes_underwear_2121)
Robot is inside bedroom_162. Robot is close clothes_underwear_2121. Robot is close sink_19. 
##############################
From agent.py
Human Instruction: You need to ensure the clothes_underwear_2121 are washed with soap. The soap was located near sink_19 but was not mentioned in the washing process. Make sure to include soap in the washing action.

The actions you have taken:
Action 1: Walk to bed_197.
Action 2: look for clothes_underwear_2121 around bed_197.
Action 3: Walk to clothes_underwear_2121.
Action 4: Grab clothes_underwear_2121.
Action 5: Walk to sink_19.
Action 6: Put clothes_underwear_2121 into sink_19.
Action 7: Walk to faucet_20.
Action 8: Switch on faucet_20.
Action 9: Switch off faucet_20.
Action 10: Walk to clothes_underwear_2121.
Action 11: Wash clothes_underwear_2121.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2126_around_sink_120(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_soap_2010_around_photoframe_219(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(soap,photoframe_instance)
        else:
            exp(soap,photoframe_instance)
    eff:
        unknown[soap]=False
        close[soap,photoframe_instance]=True
        close[photoframe_instance,soap]=True
    

#exp_behavior_end

#goal_representation
behavior hand_wash_underwear(with_soap: item, underwear: item, sink: item, faucet: item):
    body:
        achieve_once inside(underwear,sink)
        # Ensure the underwear is placed inside the sink for washing

        achieve_once inside(with_soap,sink)
        # Ensure soap is added to the sink for washing

        if exists faucet: item: is_faucet(faucet) and close(faucet, sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            # Turn on the faucet to fill the sink with water

        wash(underwear)
        # Wash the underwear by hand with soap

        if exists faucet: item: is_faucet(faucet) and close(faucet, sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_off(faucet)
            # Ensure the faucet is turned off after washing

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear) and id[underwear] == 2121
        # Select the specified underwear

        bind soap: item where:
            is_soap(soap)
        # Select an item categorized as soap

        bind sink: item where:
            is_sink(sink) and id[sink] == 19
        # Select the sink with ID 19

        bind faucet: item where:
            is_faucet(faucet) and close(faucet, sink)
        # Select the faucet close to sink ID 19

        hand_wash_underwear(soap, underwear, sink, faucet)
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Variable faucet already exists.
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_detergent_2011_around_cupboard_118(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(detergent,cupboard_instance)
        else:
            exp(detergent,cupboard_instance)
    eff:
        unknown[detergent]=False
        close[detergent,cupboard_instance]=True
        close[cupboard_instance,detergent]=True
    

behavior find_soap_2010_around_sink_120(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_soap_2125_around_soap_2125(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind soap_instance:item where:
            is_soap(soap_instance) and id[soap_instance]==2125
        achieve close_char(char,soap_instance)
        if can_open(soap_instance):
            achieve_once open(soap_instance)
            exp(soap,soap_instance)
        else:
            exp(soap,soap_instance)
    eff:
        unknown[soap]=False
        close[soap,soap_instance]=True
        close[soap_instance,soap]=True
    

#goal_representation
 
def has_faucet(sink:item):
    # Determine whether the sink has a faucet
    symbol faucet_present=exists faucet:item: is_faucet(faucet) and close(faucet,sink)
    return faucet_present

behavior hand_wash_underwear(with_soap: item, underwear: item, sink: item):
    body:
        achieve_once inside(underwear, sink)
        # Ensure the underwear is placed inside the sink for washing

        achieve_once inside(with_soap, sink)
        # Ensure soap is added to the sink for washing

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            # Turn on the faucet to fill the sink with water

        wash(underwear)
        # Wash the underwear by hand with soap

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_off(faucet)
            # Ensure the faucet is turned off after washing

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear) and id[underwear] == 2121
        # Select the specified underwear

        bind soap: item where:
            is_soap(soap)
        # Select an item categorized as soap

        bind sink: item where:
            is_sink(sink) and id[sink] == 19
        # Select the sink with ID 19

        hand_wash_underwear(soap, underwear, sink)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def has_faucet(sink:item):
    # Determine whether the sink has a faucet
    symbol faucet_present=exists faucet:item: is_faucet(faucet) and close(faucet,sink)
    return faucet_present

behavior hand_wash_underwear(with_soap: item, underwear: item, sink: item):
    body:
        achieve_once inside(underwear, sink)
        # Ensure the underwear is placed inside the sink for washing

        achieve_once inside(with_soap, sink)
        # Ensure soap is added to the sink for washing

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            # Turn on the faucet to fill the sink with water

        wash(underwear)
        # Wash the underwear by hand with soap

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_off(faucet)
            # Ensure the faucet is turned off after washing

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear) and id[underwear] == 2121
        # Select the specified underwear

        bind soap: item where:
            is_soap(soap)
        # Select an item categorized as soap

        bind sink: item where:
            is_sink(sink) and id[sink] == 19
        # Select the sink with ID 19

        hand_wash_underwear(soap, underwear, sink)

##############################
From agent.py-> find a plan in act()
walk_executor(soap_2125)grab_executor(soap_2125)walk_executor(sink_19)putin_executor(soap_2125, sink_19)walk_executor(faucet_20)switchon_executor(faucet_20)walk_executor(clothes_underwear_2121)wash_executor(clothes_underwear_2121)
##############################
From agent.py
walk_executor(soap_2125)
Robot is inside bathroom_1. Robot is close sink_19. Robot is close soap_2125. Robot is no longer inside bedroom_162.Robot is no longer close clothes_underwear_2121.
##############################
From agent.py
grab_executor(soap_2125)
Robot is inside bathroom_1. Robot is close sink_19. Robot is close soap_2125. Grabbing soap_2125 by right hand. 
##############################
From agent.py
walk_executor(sink_19)
Robot is inside bathroom_1. Robot is close sink_19. Robot is close soap_2125. Robot is close bathroom_counter_18. 
##############################
From agent.py
putin_executor(soap_2125, sink_19)
Robot is inside bathroom_1. Robot is close sink_19. Robot is close soap_2125. Robot is close bathroom_counter_18. soap_2125 released by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot is inside bathroom_1. Robot is close bathroom_counter_18. Robot is close faucet_20. Robot is no longer close sink_19.Robot is no longer close soap_2125.
##############################
From agent.py
switchon_executor(faucet_20)
Robot is inside bathroom_1. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
From agent.py
walk_executor(clothes_underwear_2121)
Robot is inside bedroom_162. Robot is close clothes_underwear_2121. Robot is close sink_19. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_18.Robot is no longer close faucet_20.
##############################
From agent.py
wash_executor(clothes_underwear_2121)
Robot is inside bedroom_162. Robot is close clothes_underwear_2121. Robot is close sink_19. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_washing_machine_2079(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_soap_2010_around_sink_120(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_underwear_into_washing_machine(underwear:item, washing_machine:item):
    body:
        achieve inside(underwear, washing_machine)
        # Place the underwear inside the washing machine

behavior add_detergent_to_washing_machine(detergent:item, washing_machine:item):
    body:
        achieve inside(detergent, washing_machine)
        # Add detergent to the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)
        # Start the washing machine for a thorough clean

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear) and id[underwear] == 2121
        # Select the washed underwear with the known ID 2121

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        bind detergent: item where:
            is_detergent(detergent)
        # Select a detergent

        load_underwear_into_washing_machine(underwear, washing_machine)
        add_detergent_to_washing_machine(detergent, washing_machine)
        start_washing_machine(washing_machine)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_underwear_into_washing_machine(underwear:item, washing_machine:item):
    body:
        achieve inside(underwear, washing_machine)
        # Place the underwear inside the washing machine

behavior add_detergent_to_washing_machine(detergent:item, washing_machine:item):
    body:
        achieve inside(detergent, washing_machine)
        # Add detergent to the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)
        # Start the washing machine for a thorough clean

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear) and id[underwear] == 2121
        # Select the washed underwear with the known ID 2121

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        bind detergent: item where:
            is_detergent(detergent)
        # Select a detergent

        load_underwear_into_washing_machine(underwear, washing_machine)
        add_detergent_to_washing_machine(detergent, washing_machine)
        start_washing_machine(washing_machine)

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2079)open_executor(washing_machine_2079)walk_executor(clothes_underwear_2121)grab_executor(clothes_underwear_2121)walk_executor(washing_machine_2079)putin_executor(clothes_underwear_2121, washing_machine_2079)walk_executor(detergent_2155)grab_executor(detergent_2155)walk_executor(washing_machine_2079)putin_executor(detergent_2155, washing_machine_2079)plugin_executor(washing_machine_2079)close_executor(washing_machine_2079)switchon_executor(washing_machine_2079)
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close washing_machine_2079. Robot is no longer inside bedroom_162.Robot is no longer close clothes_underwear_2121.Robot is no longer close sink_19.
##############################
From agent.py
open_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close washing_machine_2079. 
##############################
From agent.py
walk_executor(clothes_underwear_2121)
Robot is inside bedroom_162. Robot is close clothes_underwear_2121. Robot is close sink_19. Robot is no longer inside dining_room_41.Robot is no longer close washing_machine_2079.
##############################
From agent.py
grab_executor(clothes_underwear_2121)
Robot is inside bedroom_162. Robot is close clothes_underwear_2121. Robot is close sink_19. Grabbing clothes_underwear_2121 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close clothes_underwear_2121. Robot is close washing_machine_2079. Robot is no longer inside bedroom_162.Robot is no longer close sink_19.
##############################
From agent.py
putin_executor(clothes_underwear_2121, washing_machine_2079)
Robot is inside dining_room_41. Robot is close clothes_underwear_2121. Robot is close washing_machine_2079. clothes_underwear_2121 released by right hand. 
##############################
From agent.py
walk_executor(detergent_2155)
Robot is inside bathroom_1. Robot is close sink_19. Robot is close detergent_2155. Robot is no longer inside dining_room_41.Robot is no longer close clothes_underwear_2121.Robot is no longer close washing_machine_2079.
##############################
From agent.py
grab_executor(detergent_2155)
Robot is inside bathroom_1. Robot is close sink_19. Robot is close detergent_2155. Grabbing detergent_2155 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close detergent_2155. Robot is close clothes_underwear_2121. Robot is close washing_machine_2079. Robot is no longer inside bathroom_1.Robot is no longer close sink_19.
##############################
From agent.py
putin_executor(detergent_2155, washing_machine_2079)
Robot is inside dining_room_41. Robot is close detergent_2155. Robot is close clothes_underwear_2121. Robot is close washing_machine_2079. detergent_2155 released by right hand. 
##############################
From agent.py
plugin_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close detergent_2155. Robot is close clothes_underwear_2121. Robot is close washing_machine_2079. 
##############################
From agent.py
close_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close detergent_2155. Robot is close clothes_underwear_2121. Robot is close washing_machine_2079. 
##############################
From agent.py
switchon_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close detergent_2155. Robot is close clothes_underwear_2121. Robot is close washing_machine_2079. 
##############################
