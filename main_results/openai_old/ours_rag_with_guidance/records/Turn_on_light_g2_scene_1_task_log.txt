From agent.py
Reset goals: The sub-goals are: 
['1. Turn on the lights in the bedroom.  ', '2. Turn on the lights in the bathroom.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior ensure_light_in_bedroom(light:item):
    body:
        achieve is_on(light)
        # Turn on the light in the bedroom

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        # Bind to the bedroom

        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)
        # Bind to the light in the bedroom

        ensure_light_in_bedroom(bedroom_light)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior ensure_light_in_bedroom(light:item):
    body:
        achieve is_on(light)
        # Turn on the light in the bedroom

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        # Bind to the bedroom

        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)
        # Bind to the light in the bedroom

        ensure_light_in_bedroom(bedroom_light)
##############################
From agent.py-> find a plan in act()
walk_executor(light_212)switchon_executor(light_212)
##############################
From agent.py
walk_executor(light_212)
Find drawing_202. Robot is inside bedroom_162. Robot is close light_212. Robot is no longer inside dining_room_41.
##############################
From agent.py
switchon_executor(light_212)
Find drawing_110. Robot is inside bedroom_162. Robot is close light_212. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_blow_dryer_2057_around_bathroom_cabinet_17(blow_dryer:item):
    goal: not unknown(blow_dryer)
    body:
        assert is_blow_dryer(blow_dryer)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(blow_dryer,bathroom_cabinet_instance)
        else:
            exp(blow_dryer,bathroom_cabinet_instance)
    eff:
        unknown[blow_dryer]=False
        close[blow_dryer,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,blow_dryer]=True
    

behavior find_toilet_paper_2076_around_bathroom_cabinet_17(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(toilet_paper,bathroom_cabinet_instance)
        else:
            exp(toilet_paper,bathroom_cabinet_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,toilet_paper]=True
    

#exp_behavior_end

#goal_representation
 
behavior ensure_light_in_bathroom(light:item):
    body:
        achieve is_on(light)
        # Turn on the light in the bathroom

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        # Bind to the bathroom

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)
        # Bind to the light in the bathroom
        ensure_light_in_bathroom(bathroom_light)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior ensure_light_in_bathroom(light:item):
    body:
        achieve is_on(light)
        # Turn on the light in the bathroom

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        # Bind to the bathroom

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)
        # Bind to the light in the bathroom
        ensure_light_in_bathroom(bathroom_light)

##############################
From agent.py-> find a plan in act()
walk_executor(light_39)switchon_executor(light_39)
##############################
From agent.py
walk_executor(light_39)
Robot is inside bathroom_1. Robot is close light_39. Robot is no longer inside bedroom_162.Robot is no longer close light_212.
##############################
From agent.py
switchon_executor(light_39)
Find pillow_108. Find drawing_111. Robot is inside bathroom_1. Robot is close light_39. 
##############################
