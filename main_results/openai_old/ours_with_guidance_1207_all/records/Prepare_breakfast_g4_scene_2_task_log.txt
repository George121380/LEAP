From agent.py
Reset goals: The sub-goals are: 
['1. Boil the pasta and cook the chicken.', '2. Combine chicken and pasta, then put them on a plate.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2050_around_fridge_140(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_dry_pasta_2073_around_cupboard_131(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(dry_pasta,cupboard_instance)
        else:
            exp(dry_pasta,cupboard_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,cupboard_instance]=True
        close[cupboard_instance,dry_pasta]=True
    

behavior find_pot_54_around_cupboard_131(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(pot,cupboard_instance)
        else:
            exp(pot,cupboard_instance)
    eff:
        unknown[pot]=False
        close[pot,cupboard_instance]=True
        close[cupboard_instance,pot]=True
    

#exp_behavior_end

#goal_representation
behavior boil_pasta(pasta:item, pot:item, stove:item):
    body:
        achieve inside(pasta, pot)
        # Place the pasta inside the pot

        achieve on(pot, stove)
        # Ensure the pot is on the stove

        achieve is_on(stove)
        # Turn on the stove to boil the pasta

behavior cook_chicken(chicken:item, fryingpan:item, stove:item):
    body:
        achieve inside(chicken, fryingpan)
        # Place the chicken in the frying pan

        achieve on(fryingpan, stove)
        # Ensure the frying pan is on the stove

        achieve is_on(stove)
        # Turn on the stove to cook the chicken

behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select the dry pasta instance

        bind pot: item where:
            is_pot(pot)
        # Select the pot instance

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken instance

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select the frying pan instance

        bind stove: item where:
            is_stove(stove)
        # Select the stove instance

        boil_pasta(pasta, pot, stove)
        cook_chicken(chicken, fryingpan, stove)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior boil_pasta(pasta:item, pot:item, stove:item):
    body:
        achieve inside(pasta, pot)
        # Place the pasta inside the pot

        achieve on(pot, stove)
        # Ensure the pot is on the stove

        achieve is_on(stove)
        # Turn on the stove to boil the pasta

behavior cook_chicken(chicken:item, fryingpan:item, stove:item):
    body:
        achieve inside(chicken, fryingpan)
        # Place the chicken in the frying pan

        achieve on(fryingpan, stove)
        # Ensure the frying pan is on the stove

        achieve is_on(stove)
        # Turn on the stove to cook the chicken

behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select the dry pasta instance

        bind pot: item where:
            is_pot(pot)
        # Select the pot instance

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken instance

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select the frying pan instance

        bind stove: item where:
            is_stove(stove)
        # Select the stove instance

        boil_pasta(pasta, pot, stove)
        cook_chicken(chicken, fryingpan, stove)
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(pot_2093, cupboard_131)exp(dry_pasta_2073, cupboard_131)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)grab_executor(pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)switchoff_executor(stove_2090)open_executor(stove_2090)exp(fryingpan_2107, stove_2090)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)close_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(cupboard_131)
Find tray_142. Find pot_54. Robot is inside dining_room_1. Robot is close cupboard_131. Robot is no longer inside home_office_161.
##############################
From agent.py
open_executor(cupboard_131)
Robot is inside dining_room_1. Robot is close cupboard_131. 
##############################
From agent.py
exp(pot_2093, cupboard_131)
Fail to find pot_2093 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(pot_2093, cupboard_130)exp(dry_pasta_2073, cupboard_130)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)grab_executor(pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)walk_executor(kitchen_counter_129)exp(fryingpan_2107, kitchen_counter_129)walk_executor(cupboard_130)exp(food_chicken_2050, cupboard_130)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)
##############################
From agent.py
walk_executor(cupboard_130)
Find blender_2032. Find tea_bag_2017. Robot is inside dining_room_1. Robot is close blender_2032. Robot is close tea_bag_2017. Robot is close cupboard_130. Robot is no longer close cupboard_131.
##############################
From agent.py
exp(pot_2093, cupboard_130)
Fail to find pot_2093 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_129)exp(pot_2093, kitchen_counter_129)exp(dry_pasta_2073, kitchen_counter_129)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)grab_executor(pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)switchoff_executor(stove_2090)open_executor(stove_2090)exp(fryingpan_2107, stove_2090)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)close_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(kitchen_counter_129)
Find pot_2093. Find oil_2102. Find fryingpan_2107. Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is no longer close blender_2032.Robot is no longer close tea_bag_2017.Robot is no longer close cupboard_130.
##############################
From agent.py
exp(pot_2093, kitchen_counter_129)
Find pot_2093. 
##############################
From agent.py-> find a plan in act()
exp(dry_pasta_2073, kitchen_counter_129)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)grab_executor(pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)
##############################
From agent.py
exp(dry_pasta_2073, kitchen_counter_129)
Fail to find dry_pasta_2073 around kitchen_counter_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_190)exp(dry_pasta_2073, wallshelf_190)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)grab_executor(pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)
##############################
From agent.py
walk_executor(wallshelf_190)
Robot is inside home_office_161. Robot is close wallshelf_190. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_129.
##############################
From agent.py
exp(dry_pasta_2073, wallshelf_190)
Fail to find dry_pasta_2073 around wallshelf_190. 
##############################
From agent.py-> find a plan in act()
walk_executor(walllamp_289)exp(dry_pasta_2073, walllamp_289)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)grab_executor(pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)
##############################
From agent.py
walk_executor(walllamp_289)
Find drawing_296. Find towel_rack_300. Robot is inside bathroom_265. Robot is close walllamp_289. Robot is no longer inside home_office_161.Robot is no longer close wallshelf_190.
##############################
From agent.py
exp(dry_pasta_2073, walllamp_289)
Fail to find dry_pasta_2073 around walllamp_289. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Boil the pasta and the chicken.', '2. Mix the chicken with the pasta and sauce.', '3. Put the chicken pasta on a plate.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2050_around_fridge_140(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_dry_pasta_2073_around_wallshelf_191(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==191
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(dry_pasta,wallshelf_instance)
        else:
            exp(dry_pasta,wallshelf_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,wallshelf_instance]=True
        close[wallshelf_instance,dry_pasta]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot:item, sink:item):
    body:
        achieve_once inside(pot, sink)
        # Place the pot inside the sink

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            # Turn on the faucet to fill the pot with water

        achieve has_water(pot)
        # Ensure the pot is filled with water

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_off(faucet)
            # Turn off the faucet after filling the pot

behavior boil_on_stove(pot:item, stove:item):
    body:
        achieve on(pot, stove)
        # Place the pot on the stove

        achieve is_on(stove)
        # Turn on the stove to start boiling

behavior place_in_pot(cooked_item:item, pot:item):
    body:
        achieve inside(cooked_item, pot)
        # Place the item inside the pot to be boiled

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select the pot instance

        bind stove: item where:
            is_stove(stove)
        # Select the stove instance

        bind sink: item where:
            is_sink(sink)
        # Select a sink instance

        fill_pot_with_water(pot, sink)
        # Fill the pot with water from the sink

        bind dry_pasta: item where:
            is_dry_pasta(dry_pasta)
        # Select dry pasta item

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select raw chicken item

        place_in_pot(dry_pasta, pot)
        # Place the dry pasta in the pot

        place_in_pot(chicken, pot)
        # Place the chicken in the pot

        boil_on_stove(pot, stove)
        # Boil the pasta and chicken in the pot on the stove

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

'Function has_faucet not found. Note that recursive function calls are not supported in the current version.'
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_food_2055_around_fridge_140(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_food,fridge_instance)
        else:
            exp(food_food,fridge_instance)
    eff:
        unknown[food_food]=False
        close[food_food,fridge_instance]=True
        close[fridge_instance,food_food]=True
    

behavior find_food_chicken_2050_around_fridge_140(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_dry_pasta_2073_around_wallshelf_191(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==191
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(dry_pasta,wallshelf_instance)
        else:
            exp(dry_pasta,wallshelf_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,wallshelf_instance]=True
        close[wallshelf_instance,dry_pasta]=True
    

#goal_representation
 
def has_faucet_adjacent_to_sink(sink:item):
    # Determine whether there is a faucet close to this sink
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet,sink)
    return has_faucet

behavior fill_pot_with_water(pot:item, sink:item):
    body:
        achieve_once inside(pot, sink)
        # Place the pot inside the sink

        if has_faucet_adjacent_to_sink(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            # Turn on the faucet to fill the pot with water

        achieve has_water(pot)
        # Ensure the pot is filled with water

        if has_faucet_adjacent_to_sink(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_off(faucet)
            # Turn off the faucet after filling the pot

behavior boil_on_stove(pot:item, stove:item):
    body:
        achieve on(pot, stove)
        # Place the pot on the stove

        achieve is_on(stove)
        # Turn on the stove to start boiling

behavior place_in_pot(cooked_item:item, pot:item):
    body:
        achieve inside(cooked_item, pot)
        # Place the item inside the pot to be boiled

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select the pot instance

        bind stove: item where:
            is_stove(stove)
        # Select the stove instance

        bind sink: item where:
            is_sink(sink)
        # Select a sink instance

        fill_pot_with_water(pot, sink)
        # Fill the pot with water from the sink

        bind dry_pasta: item where:
            is_dry_pasta(dry_pasta)
        # Select dry pasta item

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select raw chicken item

        place_in_pot(dry_pasta, pot)
        # Place the dry pasta in the pot

        place_in_pot(chicken, pot)
        # Place the chicken in the pot

        boil_on_stove(pot, stove)
        # Boil the pasta and chicken in the pot on the stove

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_faucet_adjacent_to_sink(sink:item):
    # Determine whether there is a faucet close to this sink
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet,sink)
    return has_faucet

behavior fill_pot_with_water(pot:item, sink:item):
    body:
        achieve_once inside(pot, sink)
        # Place the pot inside the sink

        if has_faucet_adjacent_to_sink(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            # Turn on the faucet to fill the pot with water

        achieve has_water(pot)
        # Ensure the pot is filled with water

        if has_faucet_adjacent_to_sink(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_off(faucet)
            # Turn off the faucet after filling the pot

behavior boil_on_stove(pot:item, stove:item):
    body:
        achieve on(pot, stove)
        # Place the pot on the stove

        achieve is_on(stove)
        # Turn on the stove to start boiling

behavior place_in_pot(cooked_item:item, pot:item):
    body:
        achieve inside(cooked_item, pot)
        # Place the item inside the pot to be boiled

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select the pot instance

        bind stove: item where:
            is_stove(stove)
        # Select the stove instance

        bind sink: item where:
            is_sink(sink)
        # Select a sink instance

        fill_pot_with_water(pot, sink)
        # Fill the pot with water from the sink

        bind dry_pasta: item where:
            is_dry_pasta(dry_pasta)
        # Select dry pasta item

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select raw chicken item

        place_in_pot(dry_pasta, pot)
        # Place the dry pasta in the pot

        place_in_pot(chicken, pot)
        # Place the chicken in the pot

        boil_on_stove(pot, stove)
        # Boil the pasta and chicken in the pot on the stove

##############################
From agent.py-> find a plan in act()
walk_executor(pot_2093)grab_executor(pot_2093)walk_executor(sink_133)putin_executor(pot_2093, sink_133)walk_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(wallshelf_191)exp(dry_pasta_2073, wallshelf_191)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(pot_2093)putin_executor(food_chicken_2050, pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(pot_2093)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close pot_2093. Robot is no longer inside bathroom_265.Robot is no longer close walllamp_289.
##############################
From agent.py
grab_executor(pot_2093)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close pot_2093. Grabbing pot_2093 by right hand. 
##############################
From agent.py
walk_executor(sink_133)
Find juice_2034. Find after_shave_2029. Find cleaning_solution_2098. Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close sink_133. Robot is no longer close kitchen_counter_129.
##############################
From agent.py
putin_executor(pot_2093, sink_133)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close sink_133. pot_2093 released by right hand. 
##############################
From agent.py
walk_executor(pot_2093)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close sink_133. Robot is no longer close kitchen_counter_132.
##############################
From agent.py
grab_executor(pot_2093)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close sink_133. Grabbing pot_2093 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close sink_133.
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(wallshelf_191)
Robot is inside home_office_161. Robot is close pot_2093. Robot is close wallshelf_191. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find dry_pasta_2073 ?
Answer: Go to the dining room and locate fridge_140. Inside fridge_140, you will find dry_pasta_2073.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to the dining room and locate fridge_140. Inside fridge_140, you will find dry_pasta_2073.

The actions you have taken:
Action 1: Walk to cupboard_131.
Action 2: Open cupboard_131.
Action 3: look for pot_2093 around cupboard_131.
Action 4: Walk to cupboard_130.
Action 5: look for pot_2093 around cupboard_130.
Action 6: Walk to kitchen_counter_129.
Action 7: look for pot_2093 around kitchen_counter_129.
Action 8: look for dry_pasta_2073 around kitchen_counter_129.
Action 9: Walk to wallshelf_190.
Action 10: look for dry_pasta_2073 around wallshelf_190.
Action 11: Walk to walllamp_289.
Action 12: look for dry_pasta_2073 around walllamp_289.
Action 13: Walk to pot_2093.
Action 14: Grab pot_2093.
Action 15: Walk to sink_133.
Action 16: Put pot_2093 into sink_133.
Action 17: Walk to pot_2093.
Action 18: Grab pot_2093.
Action 19: Walk to faucet_134.
Action 20: Switch off faucet_134.
Action 21: Walk to wallshelf_191.

##############################
From agent.py
exp(dry_pasta_2073, wallshelf_191)
Fail to find dry_pasta_2073 around wallshelf_191. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)putin_executor(pot_2093, sink_133)walk_executor(faucet_134)switchon_executor(faucet_134)walk_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(dry_pasta_2073, fridge_140)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)walk_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(pot_2093)putin_executor(food_chicken_2050, pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(sink_133)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close sink_133. Robot is no longer inside home_office_161.Robot is no longer close wallshelf_191.
##############################
From agent.py
putin_executor(pot_2093, sink_133)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close sink_133. pot_2093 released by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close pot_2093.Robot is no longer close sink_133.
##############################
From agent.py
switchon_executor(faucet_134)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(pot_2093)
Robot is inside home_office_161. Robot is close pot_2093. Robot is close sink_133. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
grab_executor(pot_2093)
Robot is inside home_office_161. Robot is close pot_2093. Robot is close sink_133. Grabbing pot_2093 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer inside home_office_161.Robot is no longer close sink_133.
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(fridge_140)
Find food_cereal_2048. Find food_cheese_2049. Find food_chicken_2050. Find food_dessert_2051. Find food_donut_2052. Find food_egg_2053. Find food_fish_2054. Find food_food_2055. Find food_fruit_2056. Find food_hamburger_2057. Find food_ice_cream_2058. Find food_jam_2059. Find food_kiwi_2060. Find food_lemon_2061. Find food_noodles_2062. Find food_oatmeal_2063. Find food_peanut_butter_2064. Find food_pizza_2065. Find food_potato_2066. Find food_rice_2067. Find food_salt_2068. Find food_snack_2069. Find food_sugar_2070. Find food_turkey_2071. Find food_vegetable_2072. Find dry_pasta_2073. Find milk_2074. Find sauce_2101. Find food_steak_2042. Find food_apple_2043. Find food_bacon_2044. Find food_banana_2045. Find food_cake_2046. Find food_carrot_2047. Find chair_138. Robot is inside dining_room_1. Robot is close pot_2093. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
switchoff_executor(fridge_140)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
open_executor(fridge_140)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
exp(dry_pasta_2073, fridge_140)
Find dry_pasta_2073. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)putin_executor(pot_2093, sink_133)walk_executor(faucet_134)switchon_executor(faucet_134)walk_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(pot_2093)putin_executor(food_chicken_2050, pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(sink_133)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close sink_133. Robot is no longer close food_cereal_2048.Robot is no longer close food_cheese_2049.Robot is no longer close food_chicken_2050.Robot is no longer close food_dessert_2051.Robot is no longer close food_donut_2052.Robot is no longer close food_egg_2053.Robot is no longer close food_fish_2054.Robot is no longer close food_food_2055.Robot is no longer close food_fruit_2056.Robot is no longer close food_hamburger_2057.Robot is no longer close food_ice_cream_2058.Robot is no longer close food_jam_2059.Robot is no longer close food_kiwi_2060.Robot is no longer close food_lemon_2061.Robot is no longer close food_noodles_2062.Robot is no longer close food_oatmeal_2063.Robot is no longer close food_peanut_butter_2064.Robot is no longer close food_pizza_2065.Robot is no longer close food_potato_2066.Robot is no longer close food_rice_2067.Robot is no longer close food_salt_2068.Robot is no longer close food_snack_2069.Robot is no longer close food_sugar_2070.Robot is no longer close food_turkey_2071.Robot is no longer close food_vegetable_2072.Robot is no longer close dry_pasta_2073.Robot is no longer close milk_2074.Robot is no longer close floor_22.Robot is no longer close sauce_2101.Robot is no longer close fridge_140.Robot is no longer close food_steak_2042.Robot is no longer close food_apple_2043.Robot is no longer close food_bacon_2044.Robot is no longer close food_banana_2045.Robot is no longer close food_cake_2046.Robot is no longer close food_carrot_2047.
##############################
From agent.py
putin_executor(pot_2093, sink_133)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close sink_133. pot_2093 released by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close pot_2093.Robot is no longer close sink_133.
##############################
From agent.py
switchon_executor(faucet_134)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(pot_2093)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close sink_133. Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
grab_executor(pot_2093)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close sink_133. Grabbing pot_2093 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close sink_133.
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(pot_2093)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
open_executor(pot_2093)
Robot is inside dining_room_1. Robot is close pot_2093. 
##############################
From agent.py
walk_executor(dry_pasta_2073)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close dry_pasta_2073. Robot is close fridge_140. 
##############################
From agent.py
grab_executor(dry_pasta_2073)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close dry_pasta_2073. Robot is close fridge_140. Grabbing dry_pasta_2073 by left hand. 
##############################
From agent.py
walk_executor(pot_2093)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close dry_pasta_2073. Robot is no longer close fridge_140.
##############################
From agent.py
putin_executor(dry_pasta_2073, pot_2093)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close dry_pasta_2073. dry_pasta_2073 released by left hand. 
##############################
From agent.py
walk_executor(food_chicken_2050)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close food_chicken_2050. Robot is close fridge_140. Robot is no longer close dry_pasta_2073.
##############################
From agent.py
grab_executor(food_chicken_2050)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close food_chicken_2050. Robot is close fridge_140. Grabbing food_chicken_2050 by left hand. 
##############################
From agent.py
walk_executor(pot_2093)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close food_chicken_2050. Robot is close dry_pasta_2073. Robot is no longer close fridge_140.
##############################
From agent.py
putin_executor(food_chicken_2050, pot_2093)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close food_chicken_2050. Robot is close dry_pasta_2073. food_chicken_2050 released by left hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_129. Robot is close stove_2090. Robot is no longer close dry_pasta_2073.Robot is no longer close food_chicken_2050.
##############################
From agent.py
put_executor(pot_2093, stove_2090)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_129. Robot is close stove_2090. pot_2093 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_129. Robot is close stove_2090. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_butter_2018_around_oven_141(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_butter,oven_instance)
        else:
            exp(food_butter,oven_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,oven_instance]=True
        close[oven_instance,food_butter]=True
    

behavior find_bowl_2097_around_kitchen_counter_128(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

behavior find_plate_2105_around_table_127(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(plate,table_instance)
        else:
            exp(plate,table_instance)
    eff:
        unknown[plate]=False
        close[plate,table_instance]=True
        close[table_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
def contains_chicken_pasta_mixture(pot: item):
    # Function to check if the pot contains a mixture of chicken, pasta, and sauce
    symbol has_chicken=exists o: item : is_food_chicken(o) and inside(o, pot)
    symbol has_pasta=exists o: item : is_dry_pasta(o) and inside(o, pot)
    symbol has_sauce=exists o: item : is_sauce(o) and inside(o, pot)
    return has_chicken and has_pasta and has_sauce

behavior mix_chicken_pasta_sauce(chicken: item, pasta: item, sauce: item, pot: item):
    body:
        achieve inside(chicken, pot)
        achieve inside(pasta, pot)
        achieve inside(sauce, pot)
        assert contains_chicken_pasta_mixture(pot)
          
behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken instance

        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select the pasta instance

        bind sauce: item where:
            is_sauce(sauce)
        # Select the sauce instance

        bind pot: item where:
            is_pot(pot) and on(pot, stove_2090)
        # Select the pot on the stove

        mix_chicken_pasta_sauce(chicken, pasta, sauce, pot)
        # Execute the behavior to mix the ingredients in the pot

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: stove_2090; available variables: [Variable<pot: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_cup_2089_around_table_127(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(cup,table_instance)
        else:
            exp(cup,table_instance)
    eff:
        unknown[cup]=False
        close[cup,table_instance]=True
        close[table_instance,cup]=True
    

behavior find_food_bread_2016_around_toaster_144(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind toaster_instance:item where:
            is_toaster(toaster_instance) and id[toaster_instance]==144
        achieve close_char(char,toaster_instance)
        if can_open(toaster_instance):
            achieve_once open(toaster_instance)
            exp(food_bread,toaster_instance)
        else:
            exp(food_bread,toaster_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,toaster_instance]=True
        close[toaster_instance,food_bread]=True
    

#goal_representation
 
def contains_chicken_pasta_mixture(pot: item):
    # Function to check if the pot contains a mixture of chicken, pasta, and sauce
    symbol has_chicken=exists o: item : is_food_chicken(o) and inside(o, pot)
    symbol has_pasta=exists o: item : is_dry_pasta(o) and inside(o, pot)
    symbol has_sauce=exists o: item : is_sauce(o) and inside(o, pot)
    return has_chicken and has_pasta and has_sauce

behavior mix_chicken_pasta_sauce(chicken: item, pasta: item, sauce: item, pot: item):
    body:
        achieve inside(chicken, pot)
        achieve inside(pasta, pot)
        achieve inside(sauce, pot)
        assert contains_chicken_pasta_mixture(pot)
          
behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken instance

        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select the pasta instance

        bind sauce: item where:
            is_sauce(sauce)
        # Select the sauce instance

        bind stove: item where:
            is_stove(stove) and id[stove]==2090
        # Select the stove with ID 2090

        bind pot: item where:
            is_pot(pot) and on(pot, stove)
        # Select the pot on the stove

        mix_chicken_pasta_sauce(chicken, pasta, sauce, pot)
        # Execute the behavior to mix the ingredients in the pot

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def contains_chicken_pasta_mixture(pot: item):
    # Function to check if the pot contains a mixture of chicken, pasta, and sauce
    symbol has_chicken=exists o: item : is_food_chicken(o) and inside(o, pot)
    symbol has_pasta=exists o: item : is_dry_pasta(o) and inside(o, pot)
    symbol has_sauce=exists o: item : is_sauce(o) and inside(o, pot)
    return has_chicken and has_pasta and has_sauce

behavior mix_chicken_pasta_sauce(chicken: item, pasta: item, sauce: item, pot: item):
    body:
        achieve inside(chicken, pot)
        achieve inside(pasta, pot)
        achieve inside(sauce, pot)
        assert contains_chicken_pasta_mixture(pot)
          
behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken instance

        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select the pasta instance

        bind sauce: item where:
            is_sauce(sauce)
        # Select the sauce instance

        bind stove: item where:
            is_stove(stove) and id[stove]==2090
        # Select the stove with ID 2090

        bind pot: item where:
            is_pot(pot) and on(pot, stove)
        # Select the pot on the stove

        mix_chicken_pasta_sauce(chicken, pasta, sauce, pot)
        # Execute the behavior to mix the ingredients in the pot

##############################
From agent.py-> find a plan in act()
walk_executor(sauce_2101)grab_executor(sauce_2101)walk_executor(pot_2093)putin_executor(sauce_2101, pot_2093)
##############################
From agent.py
walk_executor(sauce_2101)
Robot is inside dining_room_1. Robot is close fridge_140. Robot is close sauce_2101. Robot is no longer close kitchen_counter_129.Robot is no longer close stove_2090.Robot is no longer close pot_2093.
##############################
From agent.py
grab_executor(sauce_2101)
Robot is inside dining_room_1. Robot is close fridge_140. Robot is close sauce_2101. Grabbing sauce_2101 by right hand. 
##############################
From agent.py
walk_executor(pot_2093)
Robot is inside dining_room_1. Robot is close sauce_2101. Robot is close dry_pasta_2073. Robot is close food_chicken_2050. Robot is close stove_2090. Robot is close pot_2093. Robot is no longer close fridge_140.
##############################
From agent.py
putin_executor(sauce_2101, pot_2093)
Robot is inside dining_room_1. Robot is close sauce_2101. Robot is close dry_pasta_2073. Robot is close food_chicken_2050. Robot is close stove_2090. Robot is close pot_2093. sauce_2101 released by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_kitchen_counter_128(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(plate,kitchen_counter_instance)
        else:
            exp(plate,kitchen_counter_instance)
    eff:
        unknown[plate]=False
        close[plate,kitchen_counter_instance]=True
        close[kitchen_counter_instance,plate]=True
    

behavior find_chair_263_around_desk_261(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==261
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

#exp_behavior_end

#goal_representation
behavior put_chicken_pasta_on_plate(chicken_pasta:item, plate:item):
    body:
        achieve on(chicken_pasta, plate)

behavior __goal__():
    body:
        bind chicken_pasta: item where:
            is_food_food(chicken_pasta)
        # Select the chicken pasta instance

        bind plate: item where:
            is_plate(plate)
        # Select a plate instance

        put_chicken_pasta_on_plate(chicken_pasta, plate)
        # Execute the behavior to put the chicken pasta on the plate
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior put_chicken_pasta_on_plate(chicken_pasta:item, plate:item):
    body:
        achieve on(chicken_pasta, plate)

behavior __goal__():
    body:
        bind chicken_pasta: item where:
            is_food_food(chicken_pasta)
        # Select the chicken pasta instance

        bind plate: item where:
            is_plate(plate)
        # Select a plate instance

        put_chicken_pasta_on_plate(chicken_pasta, plate)
        # Execute the behavior to put the chicken pasta on the plate
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(plate_2105, kitchen_counter_128)walk_executor(food_food_2055)grab_executor(food_food_2055)walk_executor(plate_2105)put_executor(food_food_2055, plate_2105)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Find spectacles_2106. Find cutting_board_2080. Find food_orange_2008. Robot is inside dining_room_1. Robot is close kitchen_counter_128. Robot is close floor_15. Robot is no longer close food_chicken_2050.Robot is no longer close stove_2090.Robot is no longer close pot_2093.Robot is no longer close sauce_2101.Robot is no longer close dry_pasta_2073.
##############################
From agent.py
exp(plate_2105, kitchen_counter_128)
Fail to find plate_2105 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_127)exp(plate_2105, table_127)walk_executor(food_food_2055)grab_executor(food_food_2055)walk_executor(plate_2105)put_executor(food_food_2055, plate_2105)
##############################
From agent.py
walk_executor(table_127)
Find mat_115. Find plate_2105. Find bowl_2097. Find drawing_118. Find console_2027. Find fork_2104. Find bowl_2096. Find crayon_2030. Find napkin_2014. Robot is inside dining_room_1. Robot is close mat_115. Robot is close floor_20. Robot is close table_127. Robot is no longer close kitchen_counter_128.Robot is no longer close floor_15.
##############################
From agent.py
exp(plate_2105, table_127)
Find plate_2105. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_food_2055)grab_executor(food_food_2055)walk_executor(plate_2105)put_executor(food_food_2055, plate_2105)
##############################
From agent.py
walk_executor(food_food_2055)
Robot is inside dining_room_1. Robot is close fridge_140. Robot is close food_food_2055. Robot is no longer close mat_115.Robot is no longer close floor_20.Robot is no longer close table_127.
##############################
From agent.py
grab_executor(food_food_2055)
Robot is inside dining_room_1. Robot is close fridge_140. Robot is close food_food_2055. Grabbing food_food_2055 by right hand. 
##############################
From agent.py
walk_executor(plate_2105)
Robot is inside dining_room_1. Robot is close food_food_2055. Robot is close plate_2105. Robot is close table_127. Robot is no longer close fridge_140.
##############################
From agent.py
put_executor(food_food_2055, plate_2105)
Robot is inside dining_room_1. Robot is close food_food_2055. Robot is close plate_2105. Robot is close table_127. food_food_2055 released by right hand. 
##############################
