From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the jacket.', '2. Put the jacket in the washing machine and wash it.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2119_around_dresser_274(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==274
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_jacket,dresser_instance)
        else:
            exp(clothes_jacket,dresser_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,dresser_instance]=True
        close[dresser_instance,clothes_jacket]=True
    

behavior find_soap_2126_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_jacket(jacket:item, sink:item):
    body:
        achieve_once inside(jacket, sink)
        # Ensure the jacket is placed inside the sink

        wash(jacket)
        # Wash the jacket by hand

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select an instance of the jacket

        bind sink: item where:
            is_sink(sink)
        # Select an instance of a sink

        hand_wash_jacket(jacket, sink)
        # Execute the behavior to hand wash the jacket

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior hand_wash_jacket(jacket:item, sink:item):
    body:
        achieve_once inside(jacket, sink)
        # Ensure the jacket is placed inside the sink

        wash(jacket)
        # Wash the jacket by hand

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select an instance of the jacket

        bind sink: item where:
            is_sink(sink)
        # Select an instance of a sink

        hand_wash_jacket(jacket, sink)
        # Execute the behavior to hand wash the jacket

##############################
From agent.py-> find a plan in act()
walk_executor(dresser_274)open_executor(dresser_274)exp(clothes_jacket_2119, dresser_274)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(sink_19)putin_executor(clothes_jacket_2119, sink_19)walk_executor(clothes_jacket_2119)wash_executor(clothes_jacket_2119)
##############################
From agent.py
walk_executor(dresser_274)
Find hanger_292. Find hanger_293. Find hanger_294. Find blow_dryer_2057. Find cat_2069. Find check_2075. Find clothes_pants_2036. Robot is inside home_office_241. Robot is close hanger_292. Robot is close hanger_293. Robot is close hanger_294. Robot is close blow_dryer_2057. Robot is close dresser_274. Robot is close cat_2069. Robot is close check_2075. Robot is no longer inside dining_room_41.
##############################
From agent.py
open_executor(dresser_274)
Find keyboard_278. Find brush_2002. Find stamp_2043. Find phone_2147. Find headset_2131. Find mat_284. Find pillow_287. Find cd_2145. Find shampoo_2019. Find stamp_2022. Find chair_271. Find cd_player_2129. Find pencil_2014. Find shoes_2033. Find phone_2017. Find remote_control_2124. Find drawing_288. Find pencil_2020. Find mouse_280. Find headset_2146. Find pillow_286. Find dvd_player_2130. Robot is inside home_office_241. Robot is close hanger_292. Robot is close hanger_293. Robot is close hanger_294. Robot is close blow_dryer_2057. Robot is close dresser_274. Robot is close cat_2069. Robot is close check_2075. 
##############################
From agent.py
exp(clothes_jacket_2119, dresser_274)
Fail to find clothes_jacket_2119 around dresser_274. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(clothes_jacket_2119, cupboard_118)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(sink_19)putin_executor(clothes_jacket_2119, sink_19)walk_executor(clothes_jacket_2119)wash_executor(clothes_jacket_2119)
##############################
From agent.py
walk_executor(cupboard_118)
Find tea_2066. Find knife_2037. Find food_peanut_butter_2077. Find tray_128. Find pot_78. Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. Robot is no longer inside home_office_241.Robot is no longer close hanger_292.Robot is no longer close hanger_293.Robot is no longer close hanger_294.Robot is no longer close blow_dryer_2057.Robot is no longer close dresser_274.Robot is no longer close cat_2069.Robot is no longer close check_2075.
##############################
From agent.py
open_executor(cupboard_118)
Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. 
##############################
From agent.py
exp(clothes_jacket_2119, cupboard_118)
Fail to find clothes_jacket_2119 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(clothes_jacket_2119, cupboard_117)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(sink_19)putin_executor(clothes_jacket_2119, sink_19)walk_executor(clothes_jacket_2119)wash_executor(clothes_jacket_2119)
##############################
From agent.py
walk_executor(cupboard_117)
Find coffee_filter_2053. Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close wall_67. Robot is close cupboard_117. Robot is no longer close wall_68.Robot is no longer close tea_2066.Robot is no longer close knife_2037.Robot is no longer close cupboard_118.Robot is no longer close food_peanut_butter_2077.
##############################
From agent.py
exp(clothes_jacket_2119, cupboard_117)
Fail to find clothes_jacket_2119 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2079)open_executor(washing_machine_2079)exp(clothes_jacket_2119, washing_machine_2079)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(sink_19)putin_executor(clothes_jacket_2119, sink_19)walk_executor(clothes_jacket_2119)wash_executor(clothes_jacket_2119)
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close washing_machine_2079. Robot is no longer close coffee_filter_2053.Robot is no longer close wall_67.Robot is no longer close cupboard_117.
##############################
From agent.py
open_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close washing_machine_2079. 
##############################
From agent.py
exp(clothes_jacket_2119, washing_machine_2079)
Fail to find clothes_jacket_2119 around washing_machine_2079. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the jacket.', '2. Use the washing machine to wash the jacket.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2125_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
def locate_jacket():
    # Function to determine if clothes_jacket_2119 is in a known location
    symbol jacket_found = exists j: item : is_clothes_jacket(j)
    return jacket_found

behavior hand_wash_jacket(jacket: item):
    body:
        achieve clean(jacket)
        # Ensure the jacket is clean after hand washing

behavior __goal__():
    body:
        if locate_jacket():
            # If the jacket is in one of the observed locations, proceed to wash it
            bind jacket: item where:
                is_clothes_jacket(jacket)
            hand_wash_jacket(jacket)
            # Execute the behavior to hand wash the jacket

        else:
            # If the jacket is not found yet, explore further to locate it
            foreach storage: item:
                if not visited(storage):
                    observe(storage, "Check for clothes_jacket_2119 in this location")
                    # Check each unvisited storage location for the jacket

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_dessert_2090_around_fridge_126(food_dessert:item):
    goal: not unknown(food_dessert)
    body:
        assert is_food_dessert(food_dessert)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_dessert,fridge_instance)
        else:
            exp(food_dessert,fridge_instance)
    eff:
        unknown[food_dessert]=False
        close[food_dessert,fridge_instance]=True
        close[fridge_instance,food_dessert]=True
    

behavior find_soap_2010_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_detergent_2011_around_sink_120(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(detergent,sink_instance)
        else:
            exp(detergent,sink_instance)
    eff:
        unknown[detergent]=False
        close[detergent,sink_instance]=True
        close[sink_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
def is_sink_suitable_for_washing(jacket: item, sink: item):
    # Function to check if a sink is suitable for washing the jacket
    return is_sink(sink) and not visited(sink)

behavior wash_jacket_by_hand(jacket:item, sink:item):
    body:
        achieve_once inside(jacket, sink)
        # Place the jacket inside the sink
        
        wash(jacket)
        # Wash the jacket by hand

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2119
        # Select the jacket with ID 2119

        if exists sink: item : is_sink_suitable_for_washing(jacket, sink):
            bind sink: item where:
                is_sink_suitable_for_washing(jacket, sink)
            achieve close_char(char, sink)

        wash_jacket_by_hand(jacket, sink)
        # Execute the behavior to wash the jacket by hand

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: sink; available variables: [].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_soap_2125_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_cleaning_solution_2143_around_bathroom_cabinet_17(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

behavior find_clothes_jacket_2119_around_nightstand_192(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==192
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(clothes_jacket,nightstand_instance)
        else:
            exp(clothes_jacket,nightstand_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,nightstand_instance]=True
        close[nightstand_instance,clothes_jacket]=True
    

#goal_representation
 
def is_sink_suitable_for_washing(jacket: item, sink: item):
    # Function to check if a sink is suitable for washing the jacket
    return is_sink(sink) and not visited(sink)

behavior wash_jacket_by_hand(jacket: item, sink: item):
    body:
        achieve_once inside(jacket, sink)
        # Place the jacket inside the sink
        
        wash(jacket)
        # Wash the jacket by hand

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2119
        # Select the jacket with ID 2119
        
        if exists sink: item : is_sink_suitable_for_washing(jacket, sink):
            bind sink: item where:
                is_sink_suitable_for_washing(jacket, sink)
            achieve close_char(char, sink)
            wash_jacket_by_hand(jacket, sink)
        # Execute the behavior to wash the jacket by hand

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "1. hand wash the jacket." ?
Answer: Hand wash the jacket.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2126_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_detergent_2155_around_sink_120(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(detergent,sink_instance)
        else:
            exp(detergent,sink_instance)
    eff:
        unknown[detergent]=False
        close[detergent,sink_instance]=True
        close[sink_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior hand_wash_jacket(jacket:item):
    body:
        wash(jacket)
        # Wash the jacket by hand

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2119
        # Select the jacket with the specific ID

        hand_wash_jacket(jacket)
        # Execute the behavior to wash the jacket by hand
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2125_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_clothes_jacket_2119_around_nightstand_192(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==192
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(clothes_jacket,nightstand_instance)
        else:
            exp(clothes_jacket,nightstand_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,nightstand_instance]=True
        close[nightstand_instance,clothes_jacket]=True
    

behavior find_basket_for_clothes_2078_around_bench_113(basket_for_clothes:item):
    goal: not unknown(basket_for_clothes)
    body:
        assert is_basket_for_clothes(basket_for_clothes)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==113
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(basket_for_clothes,bench_instance)
        else:
            exp(basket_for_clothes,bench_instance)
    eff:
        unknown[basket_for_clothes]=False
        close[basket_for_clothes,bench_instance]=True
        close[bench_instance,basket_for_clothes]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_jacket(jacket: item):
    body:
        observe(jacket, "Check if this is clothes_jacket_2119")
        # Observe the specific location to find the jacket

behavior wash_jacket_by_hand(jacket: item, sink: item):
    body:
        achieve_once inside(jacket, sink)
        # Ensure the jacket is placed inside the sink

        wash(jacket)
        # Wash the jacket by hand

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2119
        # Select the jacket with the specific ID

        bind sink: item where:
            is_sink(sink)
        # Select an instance of a sink

        if not visited(jacket):
            find_jacket(jacket)
        # Ensure the jacket is located before starting the wash

        wash_jacket_by_hand(jacket, sink)
        # Execute the behavior to wash the jacket by hand

#goal_representation_end

##############################
From agent.py-> find a plan in act()
walk_executor(nightstand_192)exp(clothes_jacket_2119, nightstand_192)walk_executor(clothes_jacket_2119)obs(clothes_jacket_2119, Check if this is clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(sink_19)putin_executor(clothes_jacket_2119, sink_19)walk_executor(clothes_jacket_2119)wash_executor(clothes_jacket_2119)
##############################
From agent.py
walk_executor(nightstand_192)
Find pillow_208. Find drawing_201. Robot is inside bedroom_162. Robot is close nightstand_192. Robot is close floor_166. Robot is no longer inside dining_room_41.Robot is no longer close washing_machine_2079.
##############################
From agent.py
exp(clothes_jacket_2119, nightstand_192)
Fail to find clothes_jacket_2119 around nightstand_192. 
##############################
From agent.py-> find a plan in act()
walk_executor(bed_197)exp(clothes_jacket_2119, bed_197)walk_executor(clothes_jacket_2119)obs(clothes_jacket_2119, Check if this is clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(sink_19)putin_executor(clothes_jacket_2119, sink_19)walk_executor(clothes_jacket_2119)wash_executor(clothes_jacket_2119)
##############################
From agent.py
walk_executor(bed_197)
Find clothes_dress_2116. Find clothes_scarf_2120. Find clothes_underwear_2121. Find pillow_207. Robot is inside bedroom_162. Robot is close bed_197. Robot is no longer close nightstand_192.Robot is no longer close floor_166.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_jacket_2119 ?
Answer: Go to bedroom_162. Locate couch_198, and you will find clothes_jacket_2119 on or very near to it.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to bedroom_162. Locate couch_198, and you will find clothes_jacket_2119 on or very near to it.

Human Guidance: Hand wash the jacket.
The actions you have taken:
Action 1: Walk to dresser_274.
Action 2: Open dresser_274.
Action 3: look for clothes_jacket_2119 around dresser_274.
Action 4: Walk to cupboard_118.
Action 5: Open cupboard_118.
Action 6: look for clothes_jacket_2119 around cupboard_118.
Action 7: Walk to cupboard_117.
Action 8: look for clothes_jacket_2119 around cupboard_117.
Action 9: Walk to washing_machine_2079.
Action 10: Open washing_machine_2079.
Action 11: look for clothes_jacket_2119 around washing_machine_2079.
Action 12: Walk to nightstand_192.
Action 13: look for clothes_jacket_2119 around nightstand_192.
Action 14: Walk to bed_197.

##############################
From agent.py
exp(clothes_jacket_2119, bed_197)
Fail to find clothes_jacket_2119 around bed_197. 
##############################
From agent.py-> find a plan in act()
walk_executor(couch_198)exp(clothes_jacket_2119, couch_198)walk_executor(clothes_jacket_2119)obs(clothes_jacket_2119, Check if this is clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(sink_19)putin_executor(clothes_jacket_2119, sink_19)walk_executor(clothes_jacket_2119)wash_executor(clothes_jacket_2119)
##############################
From agent.py
walk_executor(couch_198)
Find clothes_jacket_2119. Find phone_2016. Find mat_203. Find chair_2003. Find rag_2052. Find instrument_guitar_2028. Robot is inside bedroom_162. Robot is close couch_198. Robot is no longer close bed_197.
##############################
From agent.py
exp(clothes_jacket_2119, couch_198)
Find clothes_jacket_2119. 
##############################
From agent.py-> find a plan in act()
walk_executor(clothes_jacket_2119)obs(clothes_jacket_2119, Check if this is clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(sink_19)putin_executor(clothes_jacket_2119, sink_19)walk_executor(clothes_jacket_2119)wash_executor(clothes_jacket_2119)
##############################
From agent.py
walk_executor(clothes_jacket_2119)
Robot is inside bedroom_162. Robot is close couch_198. Robot is close clothes_jacket_2119. 
##############################
From agent.py
obs(clothes_jacket_2119, Check if this is clothes_jacket_2119)
Get this information:  clothes_jacket_2119 is on couch_198. clothes_jacket_2119 is close to couch_198. clothes_jacket_2119 is close to character_240. clothes_jacket_2119 is inside bedroom_162. clothes_jacket_2119 is DIRTY.
##############################
From agent.py
grab_executor(clothes_jacket_2119)
Robot is inside bedroom_162. Robot is close couch_198. Robot is close clothes_jacket_2119. Grabbing clothes_jacket_2119 by right hand. 
##############################
From agent.py
walk_executor(sink_19)
Find mat_32. Find detergent_2155. Find soap_2125. Find after_shave_2063. Find cleaning_solution_2143. Find drawing_33. Find phone_2029. Robot is inside bathroom_1. Robot is close clothes_jacket_2119. Robot is close bathroom_counter_18. Robot is close sink_19. Robot is no longer inside bedroom_162.Robot is no longer close couch_198.
##############################
From agent.py
putin_executor(clothes_jacket_2119, sink_19)
Robot is inside bathroom_1. Robot is close clothes_jacket_2119. Robot is close bathroom_counter_18. Robot is close sink_19. clothes_jacket_2119 released by right hand. 
##############################
From agent.py
walk_executor(clothes_jacket_2119)
Robot is inside bedroom_162. Robot is close clothes_jacket_2119. Robot is close sink_19. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_18.
##############################
From agent.py
wash_executor(clothes_jacket_2119)
Robot is inside bedroom_162. Robot is close clothes_jacket_2119. Robot is close sink_19. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_jacket_in_washing_machine(jacket:item, washing_machine:item):
    body:
        achieve inside(jacket, washing_machine)
        # Place the jacket inside the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)
        # Ensure the washing machine door is closed
        achieve is_on(washing_machine)
        # Turn on the washing machine to start washing the jacket

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine instance
        
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket]==2119
        # Select the specific jacket with ID 2119

        put_jacket_in_washing_machine(jacket, washing_machine)
        start_washing_machine(washing_machine)
        # Place the jacket in the washing machine and start the wash cycle

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior put_jacket_in_washing_machine(jacket:item, washing_machine:item):
    body:
        achieve inside(jacket, washing_machine)
        # Place the jacket inside the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)
        # Ensure the washing machine door is closed
        achieve is_on(washing_machine)
        # Turn on the washing machine to start washing the jacket

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine instance
        
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket]==2119
        # Select the specific jacket with ID 2119

        put_jacket_in_washing_machine(jacket, washing_machine)
        start_washing_machine(washing_machine)
        # Place the jacket in the washing machine and start the wash cycle

##############################
From agent.py-> find a plan in act()
grab_executor(clothes_jacket_2119)walk_executor(washing_machine_2079)putin_executor(clothes_jacket_2119, washing_machine_2079)close_executor(washing_machine_2079)plugin_executor(washing_machine_2079)switchon_executor(washing_machine_2079)
##############################
From agent.py
grab_executor(clothes_jacket_2119)
Robot is inside bedroom_162. Robot is close clothes_jacket_2119. Robot is close sink_19. Grabbing clothes_jacket_2119 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close clothes_jacket_2119. Robot is close washing_machine_2079. Robot is no longer inside bedroom_162.Robot is no longer close sink_19.
##############################
From agent.py
putin_executor(clothes_jacket_2119, washing_machine_2079)
Robot is inside dining_room_41. Robot is close clothes_jacket_2119. Robot is close washing_machine_2079. clothes_jacket_2119 released by right hand. 
##############################
From agent.py
close_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close clothes_jacket_2119. Robot is close washing_machine_2079. 
##############################
From agent.py
plugin_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close clothes_jacket_2119. Robot is close washing_machine_2079. 
##############################
From agent.py
switchon_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close clothes_jacket_2119. Robot is close washing_machine_2079. 
##############################
