From agent.py
Reset goals: The sub-goals are: 
['1. Find your spectacles and put them on the coffee table in the home office.', '2. Find the book and put it on the coffee table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_spectacles_2153_around_desk_272(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==272
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(spectacles,desk_instance)
        else:
            exp(spectacles,desk_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,desk_instance]=True
        close[desk_instance,spectacles]=True
    

#exp_behavior_end

#goal_representation
behavior put_spectacles_on_table(spectacles:item, table:item):
    body:
        achieve on(spectacles, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office as the target location

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table within the home office

        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select the instance of spectacles

        put_spectacles_on_table(spectacles, coffee_table)
        # Execute the behavior to put the spectacles on the coffee table in the home office
#goal_representation_end

##############################
From agent.py->reset_goal
behavior put_spectacles_on_table(spectacles:item, table:item):
    body:
        achieve on(spectacles, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office as the target location

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table within the home office

        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select the instance of spectacles

        put_spectacles_on_table(spectacles, coffee_table)
        # Execute the behavior to put the spectacles on the coffee table in the home office
##############################
From agent.py-> find a plan in act()
walk_executor(desk_272)exp(spectacles_2153, desk_272)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(table_270)put_executor(spectacles_2153, table_270)
##############################
From agent.py
walk_executor(desk_272)
Find headset_2146. Find stamp_2043. Find stamp_2022. Find chair_271. Find phone_2147. Find mouse_280. Find keyboard_278. Robot is inside home_office_241. Robot is close desk_272. Robot is close floor_263. Robot is no longer inside dining_room_41.
##############################
From agent.py
exp(spectacles_2153, desk_272)
Fail to find spectacles_2153 around desk_272. 
##############################
From agent.py-> find a plan in act()
walk_executor(desk_193)exp(spectacles_2153, desk_193)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(table_270)put_executor(spectacles_2153, table_270)
##############################
From agent.py
walk_executor(desk_193)
Find chair_194. Find mouse_213. Find keyboard_211. Find check_2026. Find laser_pointer_2034. Robot is inside bedroom_162. Robot is close desk_193. Robot is close floor_163. Robot is close floor_164. Robot is no longer inside home_office_241.Robot is no longer close desk_272.Robot is no longer close floor_263.
##############################
From agent.py
exp(spectacles_2153, desk_193)
Fail to find spectacles_2153 around desk_193. 
##############################
From agent.py-> find a plan in act()
walk_executor(cpuscreen_277)exp(spectacles_2153, cpuscreen_277)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(table_270)put_executor(spectacles_2153, table_270)
##############################
From agent.py
walk_executor(cpuscreen_277)
Robot is inside home_office_241. Robot is close desk_272. Robot is close cpuscreen_277. Robot is no longer inside bedroom_162.Robot is no longer close desk_193.Robot is no longer close floor_163.Robot is no longer close floor_164.
##############################
From agent.py
exp(spectacles_2153, cpuscreen_277)
Fail to find spectacles_2153 around cpuscreen_277. 
##############################
From agent.py-> find a plan in act()
walk_executor(mouse_280)exp(spectacles_2153, mouse_280)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(table_270)put_executor(spectacles_2153, table_270)
##############################
From agent.py
walk_executor(mouse_280)
Robot is inside home_office_241. Robot is close desk_272. Robot is close mouse_280. Robot is close mousepad_279. Robot is no longer close cpuscreen_277.
##############################
From agent.py
exp(spectacles_2153, mouse_280)
Fail to find spectacles_2153 around mouse_280. 
##############################
From agent.py-> find a plan in act()
walk_executor(keyboard_278)exp(spectacles_2153, keyboard_278)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(table_270)put_executor(spectacles_2153, table_270)
##############################
From agent.py
walk_executor(keyboard_278)
Robot is inside home_office_241. Robot is close desk_272. Robot is close keyboard_278. Robot is no longer close mouse_280.Robot is no longer close mousepad_279.
##############################
From agent.py
exp(spectacles_2153, keyboard_278)
Fail to find spectacles_2153 around keyboard_278. 
##############################
From agent.py-> find a plan in act()
walk_executor(couch_269)exp(spectacles_2153, couch_269)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(table_270)put_executor(spectacles_2153, table_270)
##############################
From agent.py
walk_executor(couch_269)
Robot is inside home_office_241. Robot is close couch_269. Robot is no longer close desk_272.Robot is no longer close keyboard_278.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find spectacles_2153 ?
Answer: The spectacles_2153 are located inside dining_room_41. You can find them on kitchen_counter_122 in the dining room. Look for spectacles_2153 on the surface of kitchen_counter_122.
Re-decompose: None

##############################
From agent.py
Human Instruction: The spectacles_2153 are located inside dining_room_41. You can find them on kitchen_counter_122 in the dining room. Look for spectacles_2153 on the surface of kitchen_counter_122.

The actions you have taken:
Action 1: Walk to desk_272.
Action 2: look for spectacles_2153 around desk_272.
Action 3: Walk to desk_193.
Action 4: look for spectacles_2153 around desk_193.
Action 5: Walk to cpuscreen_277.
Action 6: look for spectacles_2153 around cpuscreen_277.
Action 7: Walk to mouse_280.
Action 8: look for spectacles_2153 around mouse_280.
Action 9: Walk to keyboard_278.
Action 10: look for spectacles_2153 around keyboard_278.
Action 11: Walk to couch_269.

##############################
From agent.py
exp(spectacles_2153, couch_269)
Fail to find spectacles_2153 around couch_269. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Find your spectacles and put them on the coffee table in the home office.', '2. Find the book and put it on the coffee table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_spectacles_2153_around_kitchen_counter_122(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(spectacles,kitchen_counter_instance)
        else:
            exp(spectacles,kitchen_counter_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,kitchen_counter_instance]=True
        close[kitchen_counter_instance,spectacles]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_spectacles_on_table(spectacles:item, table:item):
    body:
        achieve on(spectacles, table)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room as the target location

        bind kitchen_counter: item where:
            is_kitchen_counter(kitchen_counter) and inside(kitchen_counter, dining_room)
        # Select the kitchen counter within the dining room

        bind spectacles: item where:
            is_spectacles(spectacles) and on(spectacles, kitchen_counter)
        # Select the instance of spectacles on the kitchen counter

        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office as the target location

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table within the home office

        put_spectacles_on_table(spectacles, coffee_table)
        # Execute the behavior to put the spectacles on the coffee table in the home office

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_spectacles_2153_around_kitchen_counter_122(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(spectacles,kitchen_counter_instance)
        else:
            exp(spectacles,kitchen_counter_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,kitchen_counter_instance]=True
        close[kitchen_counter_instance,spectacles]=True
    

#exp_behavior_end

#goal_representation
behavior put_spectacles_on_table(spectacles:item, table:item):
    body:
        achieve on(spectacles, table)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room as the target location

        bind kitchen_counter: item where:
            is_kitchen_counter(kitchen_counter) and inside(kitchen_counter, dining_room)
        # Select the kitchen counter within the dining room

        bind spectacles: item where:
            is_spectacles(spectacles) and on(spectacles, kitchen_counter)
        # Select the instance of spectacles on the kitchen counter

        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office as the target location

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table in the home office

        put_spectacles_on_table(spectacles, coffee_table)
        # Execute the behavior to put the spectacles on the coffee table in the home office
#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "1. find your spectacles and put them on the coffee table in the home office." ?
Answer: Find the spectacles on the table and put them on the coffee table in the home office.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_spectacles_2153_around_kitchen_counter_122(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(spectacles,kitchen_counter_instance)
        else:
            exp(spectacles,kitchen_counter_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,kitchen_counter_instance]=True
        close[kitchen_counter_instance,spectacles]=True
    

#exp_behavior_end

#goal_representation
behavior put_spectacles_on_table(spectacles:item, table:item):
    body:
        achieve on(spectacles, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office as the target location

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table within the home office

        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select the instance of spectacles

        put_spectacles_on_table(spectacles, coffee_table)
        # Execute the behavior to put the spectacles on the coffee table in the home office
#goal_representation_end

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(spectacles_2153, kitchen_counter_122)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(table_270)put_executor(spectacles_2153, table_270)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Find tray_128. Find spectacles_2153. Find fryingpan_2154. Find pot_78. Robot is inside dining_room_41. Robot is close kitchen_counter_122. Robot is no longer inside home_office_241.Robot is no longer close couch_269.
##############################
From agent.py
exp(spectacles_2153, kitchen_counter_122)
Find spectacles_2153. 
##############################
From agent.py-> find a plan in act()
walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(table_270)put_executor(spectacles_2153, table_270)
##############################
From agent.py
walk_executor(spectacles_2153)
Robot is inside dining_room_41. Robot is close kitchen_counter_122. Robot is close spectacles_2153. 
##############################
From agent.py
grab_executor(spectacles_2153)
Robot is inside dining_room_41. Robot is close kitchen_counter_122. Robot is close spectacles_2153. Grabbing spectacles_2153 by right hand. 
##############################
From agent.py
walk_executor(table_270)
Robot is inside home_office_241. Robot is close spectacles_2153. Robot is close couch_269. Robot is close table_270. Robot is no longer inside dining_room_41.Robot is no longer close kitchen_counter_122.
##############################
From agent.py
put_executor(spectacles_2153, table_270)
Robot is inside home_office_241. Robot is close spectacles_2153. Robot is close couch_269. Robot is close table_270. spectacles_2153 released by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_novel_2060_around_bookshelf_124(novel:item):
    goal: not unknown(novel)
    body:
        assert is_novel(novel)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(novel,bookshelf_instance)
        else:
            exp(novel,bookshelf_instance)
    eff:
        unknown[novel]=False
        close[novel,bookshelf_instance]=True
        close[bookshelf_instance,novel]=True
    

#exp_behavior_end

#goal_representation
behavior put_book_on_table(book:item, table:item):
    body:
        achieve on(book, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office as the target location

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select the table within the home office

        bind book: item where:
            is_book(book)
        # Select the instance of a book

        put_book_on_table(book, table)
        # Execute the behavior to put the book on the table
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior put_book_on_table(book:item, table:item):
    body:
        achieve on(book, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office as the target location

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select the table within the home office

        bind book: item where:
            is_book(book)
        # Select the instance of a book

        put_book_on_table(book, table)
        # Execute the behavior to put the book on the table
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_124)open_executor(bookshelf_124)exp(book_2136, bookshelf_124)walk_executor(book_2136)grab_executor(book_2136)walk_executor(table_270)put_executor(book_2136, table_270)
##############################
From agent.py
walk_executor(bookshelf_124)
Find drawing_110. Find book_2136. Find envelope_2055. Find book_2137. Find drawing_111. Robot is inside dining_room_41. Robot is close floor_42. Robot is close floor_43. Robot is close bookshelf_124. Robot is no longer inside home_office_241.Robot is no longer close spectacles_2153.Robot is no longer close couch_269.Robot is no longer close table_270.
##############################
From agent.py
open_executor(bookshelf_124)
Robot is inside dining_room_41. Robot is close floor_42. Robot is close floor_43. Robot is close bookshelf_124. 
##############################
From agent.py
exp(book_2136, bookshelf_124)
Find book_2136. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2136)grab_executor(book_2136)walk_executor(table_270)put_executor(book_2136, table_270)
##############################
From agent.py
walk_executor(book_2136)
Robot is inside dining_room_41. Robot is close bookshelf_124. Robot is close book_2136. Robot is no longer close floor_42.Robot is no longer close floor_43.
##############################
From agent.py
grab_executor(book_2136)
Robot is inside dining_room_41. Robot is close bookshelf_124. Robot is close book_2136. Grabbing book_2136 by right hand. 
##############################
From agent.py
walk_executor(table_270)
Robot is inside home_office_241. Robot is close book_2136. Robot is close couch_269. Robot is close table_270. Robot is no longer inside dining_room_41.Robot is no longer close bookshelf_124.
##############################
From agent.py
put_executor(book_2136, table_270)
Robot is inside home_office_241. Robot is close book_2136. Robot is close couch_269. Robot is close table_270. book_2136 released by right hand. 
##############################
