From agent.py
Reset goals: The sub-goals are: 
['1. Identify the correct book.', '2. Place the book on the coffee table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2067_around_bookshelf_233(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==233
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
def has_book_on_bookshelf(bookshelf:item):
    # Function to check if there is a book on a specified bookshelf
    symbol has_book=exists o: item : is_book(o) and on(o, bookshelf)
    return has_book

behavior __goal__():
    body:
        foreach bookshelf: item:
            # Loop through all bookshelves to find an unvisited one with a book
            if is_bookshelf(bookshelf) and not visited(bookshelf):
                observe(bookshelf,"Check if there is a book on the bookshelf")
                # Observe the bookshelf to check for a book
                if has_book_on_bookshelf(bookshelf):
                    bind book: item where:
                        is_book(book) and on(book, bookshelf)
                    # Select the book on the bookshelf
                    
                    bind home_office: item where:
                        is_home_office(home_office)
                    # Select the home office as the target location

                    bind coffee_table: item where:
                        is_coffee_table(coffee_table) and inside(coffee_table, home_office)
                    # Select the coffee table within the home office

                    achieve on(book, coffee_table)
                    # Place the book on the coffee table in the home office

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_book_on_bookshelf(bookshelf:item):
    # Function to check if there is a book on a specified bookshelf
    symbol has_book=exists o: item : is_book(o) and on(o, bookshelf)
    return has_book

behavior __goal__():
    body:
        foreach bookshelf: item:
            # Loop through all bookshelves to find an unvisited one with a book
            if is_bookshelf(bookshelf) and not visited(bookshelf):
                observe(bookshelf,"Check if there is a book on the bookshelf")
                # Observe the bookshelf to check for a book
                if has_book_on_bookshelf(bookshelf):
                    bind book: item where:
                        is_book(book) and on(book, bookshelf)
                    # Select the book on the bookshelf
                    
                    bind home_office: item where:
                        is_home_office(home_office)
                    # Select the home office as the target location

                    bind coffee_table: item where:
                        is_coffee_table(coffee_table) and inside(coffee_table, home_office)
                    # Select the coffee table within the home office

                    achieve on(book, coffee_table)
                    # Place the book on the coffee table in the home office

##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_101)open_executor(bookshelf_101)obs(bookshelf_101, Check if there is a book on the bookshelf)walk_executor(bookshelf_233)open_executor(bookshelf_233)obs(bookshelf_233, Check if there is a book on the bookshelf)walk_executor(bookshelf_354)open_executor(bookshelf_354)obs(bookshelf_354, Check if there is a book on the bookshelf)
##############################
From agent.py
walk_executor(bookshelf_101)
Find drawing_174. Find drawing_176. Robot is inside bedroom_67. Robot is close floor_72. Robot is close photoframe_185. Robot is close bookshelf_101. Robot is no longer inside bathroom_1.
##############################
From agent.py
open_executor(bookshelf_101)
Find towel_rack_32. Find towel_rack_31. Robot is inside bedroom_67. Robot is close floor_72. Robot is close photoframe_185. Robot is close bookshelf_101. 
##############################
From agent.py
obs(bookshelf_101, Check if there is a book on the bookshelf)
Get this information:  bookshelf_101 is inside bedroom_67. bookshelf_101 is facing drawing_174. bookshelf_101 is on floor_72. photoframe_185 is inside bookshelf_101. bookshelf_101 is close to floor_2. bookshelf_101 is close to floor_3. bookshelf_101 is close to wall_12. bookshelf_101 is close to wall_14. bookshelf_101 is close to ceiling_16. bookshelf_101 is close to walllamp_28. bookshelf_101 is close to towel_rack_31. bookshelf_101 is close to towel_rack_32. bookshelf_101 is close to bathroom_counter_41. bookshelf_101 is close to door_44. bookshelf_101 is close to doorjamb_45. bookshelf_101 is close to drawing_176. bookshelf_101 is close to photoframe_185. bookshelf_101 is close to light_64. bookshelf_101 is close to floor_72. bookshelf_101 is close to wall_79. bookshelf_101 is close to wall_82. bookshelf_101 is close to wall_85. bookshelf_101 is close to ceiling_90. bookshelf_101 is close to character_65. bookshelf_101 is CLEAN. bookshelf_101 is OPEN.
##############################
From agent.py
walk_executor(bookshelf_233)
Robot is inside dining_room_201. Robot is close bookshelf_233. Robot is close floor_207. Robot is no longer inside bedroom_67.Robot is no longer close floor_72.Robot is no longer close photoframe_185.Robot is no longer close bookshelf_101.
##############################
From agent.py
open_executor(bookshelf_233)
Find mouse_166. Find keyboard_168. Find chair_103. Robot is inside dining_room_201. Robot is close bookshelf_233. Robot is close floor_207. 
##############################
From agent.py
obs(bookshelf_233, Check if there is a book on the bookshelf)
Get this information:  bookshelf_233 is facing television_248. bookshelf_233 is on floor_207. bookshelf_233 is close to doorjamb_165. bookshelf_233 is close to mouse_166. bookshelf_233 is close to mousepad_167. bookshelf_233 is close to keyboard_168. bookshelf_233 is close to light_169. bookshelf_233 is close to computer_170. bookshelf_233 is close to cpuscreen_171. bookshelf_233 is close to floor_75. bookshelf_233 is close to floor_76. bookshelf_233 is close to floor_206. bookshelf_233 is close to floor_207. bookshelf_233 is close to wall_209. bookshelf_233 is close to wall_210. bookshelf_233 is close to wall_83. bookshelf_233 is close to wall_84. bookshelf_233 is close to ceiling_218. bookshelf_233 is close to ceiling_93. bookshelf_233 is close to door_222. bookshelf_233 is close to chair_103. bookshelf_233 is close to desk_104. bookshelf_233 is close to character_65. bookshelf_233 is inside dining_room_201. bookshelf_233 is DIRTY. bookshelf_233 is OPEN.
##############################
From agent.py
walk_executor(bookshelf_354)
Find drawing_402. Find drawing_403. Find drawing_404. Find book_2066. Find book_2067. Robot is inside home_office_319. Robot is close floor_320. Robot is close bookshelf_354. Robot is close photoframe_430. Robot is no longer inside dining_room_201.Robot is no longer close bookshelf_233.Robot is no longer close floor_207.
##############################
From agent.py
open_executor(bookshelf_354)
Find vacuum_cleaner_2070. Find headset_2062. Find mat_401. Find hanger_363. Find hanger_374. Find drawing_241. Find keyboard_415. Find headset_2076. Find hanger_369. Find remote_control_2052. Find drawing_243. Find hanger_361. Find spectacles_2082. Find hanger_372. Find drawing_242. Find cat_2055. Find clothes_jacket_2047. Find chair_356. Find phone_2077. Find mouse_413. Find hanger_375. Find pencil_2001. Find pillow_405. Find hanger_367. Find hanger_359. Find dvd_player_2061. Find drawing_400. Find hanger_365. Find hanger_376. Find pillow_406. Find hairbrush_2002. Robot is inside home_office_319. Robot is close floor_320. Robot is close bookshelf_354. Robot is close photoframe_430. 
##############################
From agent.py
obs(bookshelf_354, Check if there is a book on the bookshelf)
Get this information:  bookshelf_354 is facing drawing_402. bookshelf_354 is facing drawing_403. bookshelf_354 is facing drawing_404. bookshelf_354 is on floor_320. bookshelf_354 is close to filing_cabinet_399. bookshelf_354 is close to book_2066. bookshelf_354 is close to book_2067. bookshelf_354 is close to drawing_403. bookshelf_354 is close to drawing_402. bookshelf_354 is close to photoframe_430. bookshelf_354 is close to floor_320. bookshelf_354 is close to floor_321. bookshelf_354 is close to wall_332. bookshelf_354 is close to wall_335. bookshelf_354 is close to ceiling_337. bookshelf_354 is close to ceiling_338. bookshelf_354 is close to wall_214. bookshelf_354 is close to wall_215. bookshelf_354 is close to walllamp_350. bookshelf_354 is close to wallshelf_234. bookshelf_354 is close to drawing_241. bookshelf_354 is close to drawing_242. bookshelf_354 is close to drawing_243. bookshelf_354 is close to character_65. book_2067 is on bookshelf_354. photoframe_430 is inside bookshelf_354. bookshelf_354 is inside home_office_319. book_2066 is on bookshelf_354. bookshelf_354 is CLEAN. bookshelf_354 is OPEN.
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior put_book_on_table(book:item, table:item):
    body:
        achieve on(book, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office as the target location

        bind coffee_table: item where:
            is_coffee_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table within the home office

        bind book: item where:
            is_book(book)
        # Select the instance of a book

        put_book_on_table(book, coffee_table)
        # Execute the behavior to put the book on the coffee table in the home office
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior put_book_on_table(book:item, table:item):
    body:
        achieve on(book, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office as the target location

        bind coffee_table: item where:
            is_coffee_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table within the home office

        bind book: item where:
            is_book(book)
        # Select the instance of a book

        put_book_on_table(book, coffee_table)
        # Execute the behavior to put the book on the coffee table in the home office
##############################
From agent.py-> find a plan in act()
walk_executor(book_2066)grab_executor(book_2066)walk_executor(coffee_table_2068)put_executor(book_2066, coffee_table_2068)
##############################
From agent.py
walk_executor(book_2066)
Robot is inside home_office_319. Robot is close bookshelf_354. Robot is close book_2066. Robot is no longer close floor_320.Robot is no longer close photoframe_430.
##############################
From agent.py
grab_executor(book_2066)
Robot is inside home_office_319. Robot is close bookshelf_354. Robot is close book_2066. Grabbing book_2066 by right hand. 
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot is inside home_office_319. Robot is close book_2066. Robot is close coffee_table_2068. Robot is no longer close bookshelf_354.
##############################
From agent.py
put_executor(book_2066, coffee_table_2068)
Robot is inside home_office_319. Robot is close book_2066. Robot is close coffee_table_2068. book_2066 released by right hand. 
##############################
