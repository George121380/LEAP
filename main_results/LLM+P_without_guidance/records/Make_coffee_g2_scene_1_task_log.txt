From agent.py
Reset goals: The sub-goals are: 
['make a cup of coffee using the coffee maker, then add milk and sugar.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2049_around_cupboard_117(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

behavior find_food_sugar_2111_around_cupboard_117(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_sugar,cupboard_instance)
        else:
            exp(food_sugar,cupboard_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,cupboard_instance]=True
        close[cupboard_instance,food_sugar]=True
    

behavior find_milk_2115_around_fridge_126(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

#exp_behavior_end

#goal_representation
 
behavior make_coffee(coffee_maker:item, cup:item):
    body:
        assert grabbable(cup)
        # Ensure the cup is grabbable
        
        achieve inside(coffee_maker, cup)
        # The cup of coffee is in the coffee maker for brewing process

behavior add_milk(cup:item, milk:item):
    body:
        achieve inside(milk, cup)
        # Ensure the milk is added to the cup

behavior add_sugar(cup:item, sugar:item):
    body:
        achieve inside(sugar, cup)
        # Ensure the sugar is added to the cup

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind cup: item where:
            is_cup(cup) and not has_water(cup)
        # Select a cup without water

        bind milk: item where:
            is_milk(milk)
        # Select milk to add in the coffee

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select sugar to add in the coffee

        make_coffee(coffee_maker, cup)
        add_milk(cup, milk)
        add_sugar(cup, sugar)

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['make a cup of coffee using the coffee maker, then add milk and sugar.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2134_around_cupboard_117(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

behavior find_cup_2049_around_cupboard_117(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

behavior find_milk_2115_around_fridge_126(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_food_sugar_2111_around_cupboard_117(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_sugar,cupboard_instance)
        else:
            exp(food_sugar,cupboard_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,cupboard_instance]=True
        close[cupboard_instance,food_sugar]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_coffee(cup:item, coffe_maker:item, milk:item, sugar:item):
    body:
        achieve has_water(coffe_maker)
        # Ensure the coffee maker is filled with water

        achieve plugged(coffe_maker)
        # Ensure the coffee maker is plugged in

        achieve is_on(coffe_maker)
        # Turn on the coffee maker to brew coffee

        achieve has_water(cup)
        # Check if the brewed coffee fills the cup

        achieve inside(milk, cup)
        # Add milk to the coffee in the cup

        achieve inside(sugar, cup)
        # Add sugar to the coffee in the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup for the coffee

        bind coffe_maker: item where:
            is_coffe_maker(coffe_maker)
        # Select the coffee maker

        bind milk: item where:
            is_milk(milk)
        # Select milk to add to the coffee
        
        bind sugar: item where:
            is_food_sugar(sugar)
        # Select sugar to add to the coffee

        prepare_coffee(cup, coffe_maker, milk, sugar)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior prepare_coffee(cup:item, coffe_maker:item, milk:item, sugar:item):
    body:
        achieve has_water(coffe_maker)
        # Ensure the coffee maker is filled with water

        achieve plugged(coffe_maker)
        # Ensure the coffee maker is plugged in

        achieve is_on(coffe_maker)
        # Turn on the coffee maker to brew coffee

        achieve has_water(cup)
        # Check if the brewed coffee fills the cup

        achieve inside(milk, cup)
        # Add milk to the coffee in the cup

        achieve inside(sugar, cup)
        # Add sugar to the coffee in the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup for the coffee

        bind coffe_maker: item where:
            is_coffe_maker(coffe_maker)
        # Select the coffee maker

        bind milk: item where:
            is_milk(milk)
        # Select milk to add to the coffee
        
        bind sugar: item where:
            is_food_sugar(sugar)
        # Select sugar to add to the coffee

        prepare_coffee(cup, coffe_maker, milk, sugar)

##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)switchon_executor(coffe_maker_130)walk_executor(cupboard_117)exp(cup_2132, cupboard_117)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(cupboard_117)exp(food_sugar_2111, cupboard_117)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(coffe_maker_130)
Find coffee_filter_2065. Find tray_128. Find spectacles_2153. Find fryingpan_2154. Find pot_78. Robot is inside dining_room_41. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
From agent.py
switchon_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
From agent.py
walk_executor(cupboard_117)
Find coffee_filter_2053. Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close wall_67. Robot is close cupboard_117. Robot is no longer close coffee_filter_2065.Robot is no longer close kitchen_counter_122.Robot is no longer close coffe_maker_130.
##############################
From agent.py
exp(cup_2132, cupboard_117)
Fail to find cup_2132 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(cup_2132, cupboard_118)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(cupboard_118)exp(food_sugar_2111, cupboard_118)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(cupboard_118)
Find tea_2066. Find knife_2037. Find food_peanut_butter_2077. Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. Robot is no longer close coffee_filter_2053.Robot is no longer close wall_67.Robot is no longer close cupboard_117.
##############################
From agent.py
open_executor(cupboard_118)
Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. 
##############################
From agent.py
exp(cup_2132, cupboard_118)
Fail to find cup_2132 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(cup_2132, kitchen_counter_123)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(fridge_126)exp(food_sugar_2111, fridge_126)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Find oil_2149. Find knife_2035. Find food_kiwi_2054. Find food_orange_2027. Find tray_2068. Robot is inside dining_room_41. Robot is close kitchen_counter_123. Robot is close floor_45. Robot is no longer close wall_68.Robot is no longer close tea_2066.Robot is no longer close knife_2037.Robot is no longer close cupboard_118.Robot is no longer close food_peanut_butter_2077.
##############################
From agent.py
exp(cup_2132, kitchen_counter_123)
Fail to find cup_2132 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(tray_128)exp(cup_2132, tray_128)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(fridge_126)exp(food_sugar_2111, fridge_126)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(tray_128)
Find oil_2013. Find food_cheese_2072. Find food_food_2064. Find food_carrot_2015. Robot is inside dining_room_41. Robot is close tray_128. Robot is close oven_127. Robot is no longer close kitchen_counter_123.Robot is no longer close floor_45.
##############################
From agent.py
exp(cup_2132, tray_128)
Fail to find cup_2132 around tray_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(cup_2132, kitchen_counter_119)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(fridge_126)exp(food_sugar_2111, fridge_126)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Find pot_2138. Find bowl_2141. Find plate_2152. Find cutting_board_2123. Find food_salt_2041. Find fork_2150. Find bowl_2140. Find bowl_2142. Find fork_2151. Robot is inside dining_room_41. Robot is close kitchen_counter_119. Robot is no longer close tray_128.Robot is no longer close oven_127.
##############################
From agent.py
exp(cup_2132, kitchen_counter_119)
Fail to find cup_2132 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2140)exp(cup_2132, bowl_2140)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(fridge_126)exp(food_sugar_2111, fridge_126)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(bowl_2140)
Robot is inside dining_room_41. Robot is close kitchen_counter_119. Robot is close bowl_2140. 
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2132 ?
Answer: Go to the dining room, identified as dining_room_41. Locate table_114. cup_2132 is on table_114. The cup should be close to this table, making it easy to spot and retrieve.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to the dining room, identified as dining_room_41. Locate table_114. cup_2132 is on table_114. The cup should be close to this table, making it easy to spot and retrieve.

The actions you have taken:
Action 1: Walk to coffe_maker_130.
Action 2: Switch on coffe_maker_130.
Action 3: Walk to cupboard_117.
Action 4: look for cup_2132 around cupboard_117.
Action 5: Walk to cupboard_118.
Action 6: Open cupboard_118.
Action 7: look for cup_2132 around cupboard_118.
Action 8: Walk to kitchen_counter_123.
Action 9: look for cup_2132 around kitchen_counter_123.
Action 10: Walk to tray_128.
Action 11: look for cup_2132 around tray_128.
Action 12: Walk to kitchen_counter_119.
Action 13: look for cup_2132 around kitchen_counter_119.
Action 14: Walk to bowl_2140.

##############################
From agent.py
exp(cup_2132, bowl_2140)
Fail to find cup_2132 around bowl_2140. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(cup_2132, table_114)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(fridge_126)exp(food_sugar_2111, fridge_126)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(table_114)
Find mat_102. Find dry_pasta_2114. Find food_food_2021. Find drawing_110. Find drawing_111. Find knife_2122. Find cup_2133. Find table_cloth_2005. Find food_bread_2084. Find pillow_104. Find cup_2049. Find box_2038. Find clothes_hat_2117. Find clothes_gloves_2118. Find milk_2115. Find pillow_103. Find pillow_105. Find pillow_106. Find lighter_2004. Find lighter_2039. Find cup_2134. Find check_2058. Find cup_2132. Robot is inside dining_room_41. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close bowl_2140.Robot is no longer close kitchen_counter_119.
##############################
From agent.py
exp(cup_2132, table_114)
Find cup_2132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_sugar_2111, fridge_126)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(cup_2132)
Robot is inside dining_room_41. Robot is close table_114. Robot is close cup_2132. Robot is no longer close mat_102.Robot is no longer close floor_47.
##############################
From agent.py
grab_executor(cup_2132)
Robot is inside dining_room_41. Robot is close table_114. Robot is close cup_2132. Grabbing cup_2132 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Find drawing_33. Find mat_32. Find phone_2029. Robot is inside bathroom_1. Robot is close cup_2132. Robot is close bathroom_counter_18. Robot is close faucet_20. Robot is no longer inside dining_room_41.Robot is no longer close table_114.
##############################
From agent.py
switchon_executor(faucet_20)
Robot is inside bathroom_1. Robot is close cup_2132. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot is inside bathroom_1. Robot is close cup_2132. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
From agent.py
walk_executor(milk_2115)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close table_114. Robot is close milk_2115. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_18.Robot is no longer close faucet_20.
##############################
From agent.py
grab_executor(milk_2115)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close table_114. Robot is close milk_2115. Grabbing milk_2115 by left hand. 
##############################
From agent.py
walk_executor(cup_2132)
Robot is inside bathroom_1. Robot is close cup_2132. Robot is close milk_2115. Robot is no longer inside dining_room_41.Robot is no longer close table_114.
##############################
From agent.py
putin_executor(milk_2115, cup_2132)
Robot is inside bathroom_1. Robot is close cup_2132. Robot is close milk_2115. milk_2115 released by left hand. 
##############################
From agent.py
walk_executor(fridge_126)
Find food_onion_2048. Find food_food_2046. Find food_food_2073. Find food_steak_2080. Find food_apple_2081. Find food_bacon_2082. Find food_banana_2083. Find food_cake_2085. Find food_carrot_2086. Find food_cereal_2087. Find food_cheese_2088. Find food_chicken_2089. Find food_dessert_2090. Find food_donut_2091. Find food_egg_2092. Find food_fish_2093. Find food_food_2094. Find food_fruit_2095. Find food_hamburger_2096. Find food_ice_cream_2097. Find food_jam_2098. Find food_kiwi_2099. Find food_lemon_2100. Find food_noodles_2101. Find food_oatmeal_2102. Find food_orange_2103. Find food_onion_2104. Find food_peanut_butter_2105. Find food_pizza_2106. Find food_potato_2107. Find food_rice_2108. Find food_salt_2109. Find food_snack_2110. Find food_sugar_2111. Find food_turkey_2112. Find food_vegetable_2113. Find food_food_2001. Find sauce_2148. Find basket_for_clothes_2078. Find food_food_1000. Robot is inside dining_room_41. Robot is close cup_2132. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. Robot is no longer inside bathroom_1.Robot is no longer close milk_2115.
##############################
From agent.py
switchoff_executor(fridge_126)
Find mouse_213. Robot is inside dining_room_41. Robot is close cup_2132. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
open_executor(fridge_126)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
exp(food_sugar_2111, fridge_126)
Find food_sugar_2111. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_sugar_2111)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
grab_executor(food_sugar_2111)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. Grabbing food_sugar_2111 by left hand. 
##############################
From agent.py
putin_executor(food_sugar_2111, cup_2132)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. food_sugar_2111 released by left hand. 
##############################
From agent.py
Human Instruction: The brewed coffee was not transferred into the cup. You need to ensure that the coffee maker brews coffee and the resulting coffee is poured into the cup before adding milk and sugar.

The actions you have taken:
Action 1: Walk to coffe_maker_130.
Action 2: Switch on coffe_maker_130.
Action 3: Walk to cupboard_117.
Action 4: look for cup_2132 around cupboard_117.
Action 5: Walk to cupboard_118.
Action 6: Open cupboard_118.
Action 7: look for cup_2132 around cupboard_118.
Action 8: Walk to kitchen_counter_123.
Action 9: look for cup_2132 around kitchen_counter_123.
Action 10: Walk to tray_128.
Action 11: look for cup_2132 around tray_128.
Action 12: Walk to kitchen_counter_119.
Action 13: look for cup_2132 around kitchen_counter_119.
Action 14: Walk to bowl_2140.
Action 15: look for cup_2132 around bowl_2140.
Action 16: Walk to table_114.
Action 17: look for cup_2132 around table_114.
Action 18: Walk to cup_2132.
Action 19: Grab cup_2132.
Action 20: Walk to faucet_20.
Action 21: Switch on faucet_20.
Action 22: Switch off faucet_20.
Action 23: Walk to milk_2115.
Action 24: Grab milk_2115.
Action 25: Walk to cup_2132.
Action 26: Put milk_2115 into cup_2132.
Action 27: Walk to fridge_126.
Action 28: Switch off fridge_126.
Action 29: Open fridge_126.
Action 30: look for food_sugar_2111 around fridge_126.
Action 31: Grab food_sugar_2111.
Action 32: Put food_sugar_2111 into cup_2132.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_wooden_spoon_2000_around_cutting_board_2123(wooden_spoon:item):
    goal: not unknown(wooden_spoon)
    body:
        assert is_wooden_spoon(wooden_spoon)
        bind cutting_board_instance:item where:
            is_cutting_board(cutting_board_instance) and id[cutting_board_instance]==2123
        achieve close_char(char,cutting_board_instance)
        if can_open(cutting_board_instance):
            achieve_once open(cutting_board_instance)
            exp(wooden_spoon,cutting_board_instance)
        else:
            exp(wooden_spoon,cutting_board_instance)
    eff:
        unknown[wooden_spoon]=False
        close[wooden_spoon,cutting_board_instance]=True
        close[cutting_board_instance,wooden_spoon]=True
    

#exp_behavior_end

#goal_representation
 
behavior brew_coffee(coffee_maker:item):
    body:
        achieve is_on(coffee_maker)
        # Ensure the coffee maker is turned on for brewing
        
        achieve has_water(coffee_maker)
        # Ensure the coffee maker has water for brewing

behavior pour_coffee(cup:item, coffee_maker:item):
    body:
        achieve on(coffee_maker, cup)
        # Pour brewed coffee into the cup

behavior add_milk_sugar(cup:item, milk:item, sugar:item):
    body:
        achieve inside(milk, cup)
        # Add milk to the cup of coffee
        
        achieve inside(sugar, cup)
        # Add sugar to the cup of coffee

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker
        
        brew_coffee(coffee_maker)
        
        bind cup: item where:
            is_cup(cup)
        # Select the cup to pour coffee into
        
        pour_coffee(cup, coffee_maker)
        
        bind milk: item where:
            is_milk(milk)
        # Select milk to add to the coffee
        
        bind sugar: item where:
            is_food_sugar(sugar)
        # Select sugar to add to the coffee
        
        add_milk_sugar(cup, milk, sugar)

#goal_representation_end

##############################
From agent.py
Reset goals: The sub-goals are: 
['make a cup of coffee using the coffee maker, then add milk and sugar.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cat_2069_around_couch_198(cat:item):
    goal: not unknown(cat)
    body:
        assert is_cat(cat)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==198
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(cat,couch_instance)
        else:
            exp(cat,couch_instance)
    eff:
        unknown[cat]=False
        close[cat,couch_instance]=True
        close[couch_instance,cat]=True
    

behavior find_wooden_spoon_2000_around_cutting_board_2123(wooden_spoon:item):
    goal: not unknown(wooden_spoon)
    body:
        assert is_wooden_spoon(wooden_spoon)
        bind cutting_board_instance:item where:
            is_cutting_board(cutting_board_instance) and id[cutting_board_instance]==2123
        achieve close_char(char,cutting_board_instance)
        if can_open(cutting_board_instance):
            achieve_once open(cutting_board_instance)
            exp(wooden_spoon,cutting_board_instance)
        else:
            exp(wooden_spoon,cutting_board_instance)
    eff:
        unknown[wooden_spoon]=False
        close[wooden_spoon,cutting_board_instance]=True
        close[cutting_board_instance,wooden_spoon]=True
    

#exp_behavior_end

#goal_representation
 
behavior brew_coffee(coffee_maker:item):
    body:
        achieve is_on(coffee_maker)
        # Ensure the coffee maker is turned on

behavior pour_coffee_into_cup(coffee_maker:item, cup:item):
    body:
        achieve close_char(char, coffee_maker)
        # Move close to the coffee maker
        achieve inside(cup, coffee_maker)
        # Coffee is poured into the cup

behavior add_milk_and_sugar(cup:item, milk:item, sugar:item):
    body:
        achieve inside(milk, cup)
        # Ensure milk is added to the cup
        achieve inside(sugar, cup)
        # Ensure sugar is added to the cup

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        brew_coffee(coffee_maker)
        pour_coffee_into_cup(coffee_maker, cup)

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select sugar

        add_milk_and_sugar(cup, milk, sugar)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior brew_coffee(coffee_maker:item):
    body:
        achieve is_on(coffee_maker)
        # Ensure the coffee maker is turned on

behavior pour_coffee_into_cup(coffee_maker:item, cup:item):
    body:
        achieve close_char(char, coffee_maker)
        # Move close to the coffee maker
        achieve inside(cup, coffee_maker)
        # Coffee is poured into the cup

behavior add_milk_and_sugar(cup:item, milk:item, sugar:item):
    body:
        achieve inside(milk, cup)
        # Ensure milk is added to the cup
        achieve inside(sugar, cup)
        # Ensure sugar is added to the cup

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        brew_coffee(coffee_maker)
        pour_coffee_into_cup(coffee_maker, cup)

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select sugar

        add_milk_and_sugar(cup, milk, sugar)

##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)switchoff_executor(coffe_maker_130)open_executor(coffe_maker_130)putin_executor(cup_2132, coffe_maker_130)
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. Robot is no longer close food_onion_2048.Robot is no longer close food_food_2046.Robot is no longer close food_food_2073.Robot is no longer close food_steak_2080.Robot is no longer close food_apple_2081.Robot is no longer close food_bacon_2082.Robot is no longer close food_banana_2083.Robot is no longer close food_cake_2085.Robot is no longer close food_carrot_2086.Robot is no longer close food_cereal_2087.Robot is no longer close food_cheese_2088.Robot is no longer close food_chicken_2089.Robot is no longer close food_dessert_2090.Robot is no longer close food_donut_2091.Robot is no longer close food_egg_2092.Robot is no longer close food_fish_2093.Robot is no longer close food_food_2094.Robot is no longer close food_fruit_2095.Robot is no longer close food_hamburger_2096.Robot is no longer close food_ice_cream_2097.Robot is no longer close food_jam_2098.Robot is no longer close food_kiwi_2099.Robot is no longer close food_lemon_2100.Robot is no longer close food_noodles_2101.Robot is no longer close food_oatmeal_2102.Robot is no longer close food_orange_2103.Robot is no longer close food_onion_2104.Robot is no longer close food_peanut_butter_2105.Robot is no longer close food_pizza_2106.Robot is no longer close food_potato_2107.Robot is no longer close food_rice_2108.Robot is no longer close food_salt_2109.Robot is no longer close food_snack_2110.Robot is no longer close food_sugar_2111.Robot is no longer close food_turkey_2112.Robot is no longer close food_vegetable_2113.Robot is no longer close food_food_2001.Robot is no longer close floor_44.Robot is no longer close sauce_2148.Robot is no longer close fridge_126.
##############################
From agent.py
switchoff_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
From agent.py
open_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
From agent.py
putin_executor(cup_2132, coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. cup_2132 released by right hand. 
##############################
From agent.py
Human Instruction: You need to ensure that the coffee maker brews coffee and the resulting coffee is poured into the cup before adding milk and sugar. You have added milk and sugar to an empty cup and placed the cup in the coffee maker, but the process to brew and pour the coffee is missing. Please ensure the coffee is brewed and transferred into the cup correctly.

The actions you have taken:
Action 1: Walk to coffe_maker_130.
Action 2: Switch on coffe_maker_130.
Action 3: Walk to cupboard_117.
Action 4: look for cup_2132 around cupboard_117.
Action 5: Walk to cupboard_118.
Action 6: Open cupboard_118.
Action 7: look for cup_2132 around cupboard_118.
Action 8: Walk to kitchen_counter_123.
Action 9: look for cup_2132 around kitchen_counter_123.
Action 10: Walk to tray_128.
Action 11: look for cup_2132 around tray_128.
Action 12: Walk to kitchen_counter_119.
Action 13: look for cup_2132 around kitchen_counter_119.
Action 14: Walk to bowl_2140.
Action 15: look for cup_2132 around bowl_2140.
Action 16: Walk to table_114.
Action 17: look for cup_2132 around table_114.
Action 18: Walk to cup_2132.
Action 19: Grab cup_2132.
Action 20: Walk to faucet_20.
Action 21: Switch on faucet_20.
Action 22: Switch off faucet_20.
Action 23: Walk to milk_2115.
Action 24: Grab milk_2115.
Action 25: Walk to cup_2132.
Action 26: Put milk_2115 into cup_2132.
Action 27: Walk to fridge_126.
Action 28: Switch off fridge_126.
Action 29: Open fridge_126.
Action 30: look for food_sugar_2111 around fridge_126.
Action 31: Grab food_sugar_2111.
Action 32: Put food_sugar_2111 into cup_2132.
Action 33: Walk to coffe_maker_130.
Action 34: Switch off coffe_maker_130.
Action 35: Open coffe_maker_130.
Action 36: Put cup_2132 into coffe_maker_130.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_food_2094_around_food_bread_2084(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_bread_instance:item where:
            is_food_bread(food_bread_instance) and id[food_bread_instance]==2084
        achieve close_char(char,food_bread_instance)
        if can_open(food_bread_instance):
            achieve_once open(food_bread_instance)
            exp(food_food,food_bread_instance)
        else:
            exp(food_food,food_bread_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_bread_instance]=True
        close[food_bread_instance,food_food]=True
    

behavior find_pot_2138_around_pot_2138(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==2138
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(pot,pot_instance)
        else:
            exp(pot,pot_instance)
    eff:
        unknown[pot]=False
        close[pot,pot_instance]=True
        close[pot_instance,pot]=True
    

behavior find_food_food_2001_around_food_food_2064(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==2064
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
 
behavior brew_coffee(coffee_maker:item, cup:item):
    body:
        achieve inside(cup, coffee_maker)
        # Ensure the cup is inside the coffee maker

        achieve is_on(coffee_maker)
        # Brew the coffee

behavior add_milk_and_sugar(cup:item, milk:item, sugar:item):
    body:
        achieve inside(milk, cup)
        # Add milk to the coffee

        achieve inside(sugar, cup)
        # Add sugar to the coffee

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select the sugar

        brew_coffee(coffee_maker, cup)
        add_milk_and_sugar(cup, milk, sugar)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior brew_coffee(coffee_maker:item, cup:item):
    body:
        achieve inside(cup, coffee_maker)
        # Ensure the cup is inside the coffee maker

        achieve is_on(coffee_maker)
        # Brew the coffee

behavior add_milk_and_sugar(cup:item, milk:item, sugar:item):
    body:
        achieve inside(milk, cup)
        # Add milk to the coffee

        achieve inside(sugar, cup)
        # Add sugar to the coffee

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select the sugar

        brew_coffee(coffee_maker, cup)
        add_milk_and_sugar(cup, milk, sugar)

##############################
From agent.py-> find a plan in act()
close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
close_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
From agent.py
switchon_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
From agent.py
Human Instruction: You need to ensure that the coffee maker brews coffee and the resulting coffee is poured into the cup. Currently, you have added milk and sugar to an empty cup and placed the cup in the coffee maker, but the process to brew and pour the coffee is missing. Ensure the coffee is properly brewed and transferred into the cup before proceeding with milk and sugar.

The actions you have taken:
Action 1: Walk to coffe_maker_130.
Action 2: Switch on coffe_maker_130.
Action 3: Walk to cupboard_117.
Action 4: look for cup_2132 around cupboard_117.
Action 5: Walk to cupboard_118.
Action 6: Open cupboard_118.
Action 7: look for cup_2132 around cupboard_118.
Action 8: Walk to kitchen_counter_123.
Action 9: look for cup_2132 around kitchen_counter_123.
Action 10: Walk to tray_128.
Action 11: look for cup_2132 around tray_128.
Action 12: Walk to kitchen_counter_119.
Action 13: look for cup_2132 around kitchen_counter_119.
Action 14: Walk to bowl_2140.
Action 15: look for cup_2132 around bowl_2140.
Action 16: Walk to table_114.
Action 17: look for cup_2132 around table_114.
Action 18: Walk to cup_2132.
Action 19: Grab cup_2132.
Action 20: Walk to faucet_20.
Action 21: Switch on faucet_20.
Action 22: Switch off faucet_20.
Action 23: Walk to milk_2115.
Action 24: Grab milk_2115.
Action 25: Walk to cup_2132.
Action 26: Put milk_2115 into cup_2132.
Action 27: Walk to fridge_126.
Action 28: Switch off fridge_126.
Action 29: Open fridge_126.
Action 30: look for food_sugar_2111 around fridge_126.
Action 31: Grab food_sugar_2111.
Action 32: Put food_sugar_2111 into cup_2132.
Action 33: Walk to coffe_maker_130.
Action 34: Switch off coffe_maker_130.
Action 35: Open coffe_maker_130.
Action 36: Put cup_2132 into coffe_maker_130.
Action 37: Close coffe_maker_130.
Action 38: Switch on coffe_maker_130.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_tea_bag_2023_around_dry_pasta_2114(tea_bag:item):
    goal: not unknown(tea_bag)
    body:
        assert is_tea_bag(tea_bag)
        bind dry_pasta_instance:item where:
            is_dry_pasta(dry_pasta_instance) and id[dry_pasta_instance]==2114
        achieve close_char(char,dry_pasta_instance)
        if can_open(dry_pasta_instance):
            achieve_once open(dry_pasta_instance)
            exp(tea_bag,dry_pasta_instance)
        else:
            exp(tea_bag,dry_pasta_instance)
    eff:
        unknown[tea_bag]=False
        close[tea_bag,dry_pasta_instance]=True
        close[dry_pasta_instance,tea_bag]=True
    

#exp_behavior_end

#goal_representation
 
behavior brew_coffee(coffee_maker:item, cup:item):
    body:
        achieve has_water(coffee_maker)
        # Ensure the coffee maker has water for brewing

        achieve clean(coffee_maker)
        # Ensure the coffee maker is clean

        achieve inside(cup, coffee_maker)
        # Place the cup inside the coffee maker to receive brewed coffee

        achieve is_on(coffee_maker)
        # Turn on the coffee maker to start brewing

behavior pour_into_cup(milk:item, sugar:item, cup:item):
    body:
        achieve inside(milk, cup)
        # Ensure milk is poured into the cup

        achieve inside(sugar, cup)
        # Ensure sugar is poured into the cup

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker) and is_on(coffee_maker)
        # Select the coffee maker

        bind cup: item where:
            is_cup(cup) and inside(cup, coffee_maker)
        # Select the cup placed inside the coffee maker

        bind milk: item where:
            is_milk(milk) and not inside(milk, cup)
        # Select milk

        bind sugar: item where:
            is_food_sugar(sugar) and not inside(sugar, cup)
        # Select sugar 

        brew_coffee(coffee_maker, cup)
        pour_into_cup(milk, sugar, cup)

#goal_representation_end

##############################
