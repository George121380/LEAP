From agent.py
Reset goals: The sub-goals are: 
['Iron a pair of pants.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_pants_2113_around_washing_machine_2041(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_pants,washing_machine_instance)
        else:
            exp(clothes_pants,washing_machine_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,washing_machine_instance]=True
        close[washing_machine_instance,clothes_pants]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_pants(pants:item, iron:item, ironing_board:item):
    body:
        assert is_clothes_pants(pants) # Ensure the item is pants
        assert is_iron(iron) # Ensure the item is an iron
        assert is_ironing_board(ironing_board) # Ensure the item is an ironing board

        achieve on(pants, ironing_board) # Place the pants on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is turned on
        achieve clean(pants) # Ensure the pants are clean by ironing

behavior __goal__():
    body:
        bind pants: item where:
            is_clothes_pants(pants) 

        bind iron: item where:
            is_iron(iron) 

        bind ironing_board: item where:
            is_ironing_board(ironing_board) 

        iron_pants(pants, iron, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior iron_pants(pants:item, iron:item, ironing_board:item):
    body:
        assert is_clothes_pants(pants) # Ensure the item is pants
        assert is_iron(iron) # Ensure the item is an iron
        assert is_ironing_board(ironing_board) # Ensure the item is an ironing board

        achieve on(pants, ironing_board) # Place the pants on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is turned on
        achieve clean(pants) # Ensure the pants are clean by ironing

behavior __goal__():
    body:
        bind pants: item where:
            is_clothes_pants(pants) 

        bind iron: item where:
            is_iron(iron) 

        bind ironing_board: item where:
            is_ironing_board(ironing_board) 

        iron_pants(pants, iron, ironing_board)

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2041)open_executor(washing_machine_2041)exp(clothes_pants_2113, washing_machine_2041)walk_executor(clothes_pants_2113)grab_executor(clothes_pants_2113)walk_executor(ironing_board_2099)put_executor(clothes_pants_2113, ironing_board_2099)exp(iron_2117, ironing_board_2099)walk_executor(iron_2117)plugin_executor(iron_2117)switchon_executor(iron_2117)walk_executor(clothes_pants_2113)wash_executor(clothes_pants_2113)
##############################
