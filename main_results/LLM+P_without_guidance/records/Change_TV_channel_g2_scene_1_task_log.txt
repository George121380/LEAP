From agent.py
Reset goals: The sub-goals are: 
['Turn on the TV with the remote control.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_remote_control_2124_around_tvstand_273(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==273
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(remote_control,tvstand_instance)
        else:
            exp(remote_control,tvstand_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,tvstand_instance]=True
        close[tvstand_instance,remote_control]=True
    

#exp_behavior_end

#goal_representation
 
behavior observe_and_turn_on_tv(remote: item, tv: item):
    body:
        observe(remote, "Check if the remote control is working")
        observe(tv, "Check if the TV is off and can be turned on")
        achieve is_on(tv)

behavior __goal__():
    body:
        bind remote: item where:
            is_remote_control(remote)
        # Select the remote control

        bind tv: item where:
            is_television(tv)
        # Select the TV

        observe_and_turn_on_tv(remote, tv)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior observe_and_turn_on_tv(remote: item, tv: item):
    body:
        observe(remote, "Check if the remote control is working")
        observe(tv, "Check if the TV is off and can be turned on")
        achieve is_on(tv)

behavior __goal__():
    body:
        bind remote: item where:
            is_remote_control(remote)
        # Select the remote control

        bind tv: item where:
            is_television(tv)
        # Select the TV

        observe_and_turn_on_tv(remote, tv)

##############################
From agent.py-> find a plan in act()
walk_executor(tvstand_273)exp(remote_control_2124, tvstand_273)walk_executor(remote_control_2124)obs(remote_control_2124, Check if the remote control is working)walk_executor(television_281)obs(television_281, Check if the TV is off and can be turned on)switchon_executor(television_281)
##############################
From agent.py
walk_executor(tvstand_273)
Find cd_2145. Find remote_control_2124. Find cd_player_2129. Find dvd_player_2130. Find headset_2131. Find mat_284. Find drawing_288. Robot is inside home_office_241. Robot is close tvstand_273. Robot is close floor_259. Robot is close floor_260. Robot is no longer inside dining_room_41.
##############################
From agent.py
exp(remote_control_2124, tvstand_273)
Find remote_control_2124. 
##############################
From agent.py-> find a plan in act()
walk_executor(remote_control_2124)obs(remote_control_2124, Check if the remote control is working)walk_executor(television_281)obs(television_281, Check if the TV is off and can be turned on)switchon_executor(television_281)
##############################
From agent.py
walk_executor(remote_control_2124)
Robot is inside home_office_241. Robot is close tvstand_273. Robot is close remote_control_2124. Robot is no longer close floor_259.Robot is no longer close floor_260.
##############################
From agent.py
obs(remote_control_2124, Check if the remote control is working)
Get this information:  remote_control_2124 is inside home_office_241. remote_control_2124 is on tvstand_273. remote_control_2124 is close to tvstand_273. remote_control_2124 is close to character_240. remote_control_2124 is OFF.
##############################
From agent.py
walk_executor(television_281)
Robot is inside home_office_241. Robot is close tvstand_273. Robot is close television_281. Robot is no longer close remote_control_2124.
##############################
From agent.py
obs(television_281, Check if the TV is off and can be turned on)
Get this information:  television_281 is close to floor_259. television_281 is close to floor_260. television_281 is close to floor_261. television_281 is close to wall_69. television_281 is close to powersocket_282. television_281 is close to tvstand_273. television_281 is close to wall_244. television_281 is close to doorjamb_309. television_281 is close to wall_247. television_281 is close to ceiling_250. television_281 is close to door_62. television_281 is close to character_240. ceiling_255 is facing television_281. orchid_285 is facing television_281. television_281 is inside home_office_241. walllamp_307 is facing television_281. wall_247 is facing television_281. drawing_288 is facing television_281. ceiling_250 is facing television_281. floor_261 is facing television_281. wall_242 is facing television_281. floor_264 is facing television_281. television_281 is facing drawing_288. table_270 is facing television_281. floor_259 is facing television_281. ceiling_251 is facing television_281. tvstand_273 is facing television_281. ceilinglamp_303 is facing television_281. floor_265 is facing television_281. ceiling_254 is facing television_281. mat_284 is facing television_281. walllamp_306 is facing television_281. floor_260 is facing television_281. television_281 is on tvstand_273. television_281 is OFF. television_281 is PLUGGED_IN. television_281 is CLEAN.
##############################
From agent.py
switchon_executor(television_281)
Robot is inside home_office_241. Robot is close tvstand_273. Robot is close television_281. 
##############################
