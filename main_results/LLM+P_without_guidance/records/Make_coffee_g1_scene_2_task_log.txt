From agent.py
Reset goals: The sub-goals are: 
['make a cup of coffee using the coffee maker.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_coffee_filter_2035_around_kitchen_counter_129(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(coffee_filter,kitchen_counter_instance)
        else:
            exp(coffee_filter,kitchen_counter_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,kitchen_counter_instance]=True
        close[kitchen_counter_instance,coffee_filter]=True
    

behavior find_cup_2087_around_kitchen_counter_129(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_coffee(coffe_maker: item, cup: item):
    body:
        achieve has_water(coffe_maker) # Ensure the coffee maker has water
        achieve plugged(coffe_maker) # Ensure the coffee maker is plugged in
        achieve is_on(coffe_maker) # Turn on the coffee maker
        achieve inside(cup, coffe_maker) # Position the cup to receive coffee

behavior __goal__():
    body:
        bind coffe_maker: item where:
            is_coffe_maker(coffe_maker)
        # Select the coffee maker

        bind cup: item where:
            is_cup(cup)
        # Select the cup

        prepare_coffee(coffe_maker, cup)

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['make a cup of coffee using the coffee maker.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_coffee_filter_2035_around_kitchen_counter_129(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(coffee_filter,kitchen_counter_instance)
        else:
            exp(coffee_filter,kitchen_counter_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,kitchen_counter_instance]=True
        close[kitchen_counter_instance,coffee_filter]=True
    

behavior find_cup_2088_around_kitchen_counter_129(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior add_water(coffe_maker:item):
    body:
        achieve has_water(coffe_maker)
        
behavior turn_on_coffee_maker(coffee_maker:item):
    body:
        achieve is_on(coffee_maker)

behavior prepare_coffee(cup:item, coffee_maker:item):
    body:
        achieve inside(cup, coffee_maker)
        # Place the cup inside the coffee maker to receive coffee

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        if not has_water(coffee_maker):
            add_water(coffee_maker)
            
        turn_on_coffee_maker(coffee_maker)
        prepare_coffee(cup, coffee_maker)
 
#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior add_water(coffe_maker:item):
    body:
        achieve has_water(coffe_maker)
        
behavior turn_on_coffee_maker(coffee_maker:item):
    body:
        achieve is_on(coffee_maker)

behavior prepare_coffee(cup:item, coffee_maker:item):
    body:
        achieve inside(cup, coffee_maker)
        # Place the cup inside the coffee maker to receive coffee

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        if not has_water(coffee_maker):
            add_water(coffee_maker)
            
        turn_on_coffee_maker(coffee_maker)
        prepare_coffee(cup, coffee_maker)
 
##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_147)switchon_executor(coffe_maker_147)walk_executor(kitchen_counter_129)exp(cup_2087, kitchen_counter_129)switchoff_executor(coffe_maker_147)open_executor(coffe_maker_147)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(coffe_maker_147)putin_executor(cup_2087, coffe_maker_147)
##############################
From agent.py
walk_executor(coffe_maker_147)
Find pot_54. Find pot_2093. Find tray_142. Find oil_2102. Find fryingpan_2107. Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close coffe_maker_147. Robot is no longer inside home_office_161.
##############################
From agent.py
switchon_executor(coffe_maker_147)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close coffe_maker_147. 
##############################
From agent.py
walk_executor(kitchen_counter_129)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is no longer close coffe_maker_147.
##############################
From agent.py
exp(cup_2087, kitchen_counter_129)
Fail to find cup_2087 around kitchen_counter_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(cup_2087, kitchen_counter_128)walk_executor(coffe_maker_147)switchoff_executor(coffe_maker_147)open_executor(coffe_maker_147)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(coffe_maker_147)putin_executor(cup_2087, coffe_maker_147)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Find spectacles_2106. Find cutting_board_2080. Find food_orange_2008. Robot is inside dining_room_1. Robot is close kitchen_counter_128. Robot is close floor_15. Robot is no longer close kitchen_counter_129.
##############################
From agent.py
exp(cup_2087, kitchen_counter_128)
Fail to find cup_2087 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(cup_2087, cupboard_130)walk_executor(coffe_maker_147)switchoff_executor(coffe_maker_147)open_executor(coffe_maker_147)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(coffe_maker_147)putin_executor(cup_2087, coffe_maker_147)
##############################
From agent.py
walk_executor(cupboard_130)
Find blender_2032. Find tea_bag_2017. Robot is inside dining_room_1. Robot is close blender_2032. Robot is close tea_bag_2017. Robot is close cupboard_130. Robot is no longer close kitchen_counter_128.Robot is no longer close floor_15.
##############################
From agent.py
exp(cup_2087, cupboard_130)
Fail to find cup_2087 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(cup_2087, cupboard_131)walk_executor(coffe_maker_147)switchoff_executor(coffe_maker_147)open_executor(coffe_maker_147)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(coffe_maker_147)putin_executor(cup_2087, coffe_maker_147)
##############################
From agent.py
walk_executor(cupboard_131)
Robot is inside dining_room_1. Robot is close cupboard_131. Robot is no longer close blender_2032.Robot is no longer close tea_bag_2017.Robot is no longer close cupboard_130.
##############################
From agent.py
open_executor(cupboard_131)
Robot is inside dining_room_1. Robot is close cupboard_131. 
##############################
From agent.py
exp(cup_2087, cupboard_131)
Fail to find cup_2087 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(cup_2087, kitchen_counter_132)walk_executor(coffe_maker_147)switchoff_executor(coffe_maker_147)open_executor(coffe_maker_147)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(coffe_maker_147)putin_executor(cup_2087, coffe_maker_147)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is no longer close cupboard_131.
##############################
From agent.py
exp(cup_2087, kitchen_counter_132)
Fail to find cup_2087 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(cup_2087, fridge_140)walk_executor(coffe_maker_147)switchoff_executor(coffe_maker_147)open_executor(coffe_maker_147)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(coffe_maker_147)putin_executor(cup_2087, coffe_maker_147)
##############################
From agent.py
walk_executor(fridge_140)
Find food_cereal_2048. Find food_cheese_2049. Find food_chicken_2050. Find food_dessert_2051. Find food_donut_2052. Find food_egg_2053. Find food_fish_2054. Find food_food_2055. Find food_fruit_2056. Find food_hamburger_2057. Find food_ice_cream_2058. Find food_jam_2059. Find food_kiwi_2060. Find food_lemon_2061. Find food_noodles_2062. Find food_oatmeal_2063. Find food_peanut_butter_2064. Find food_pizza_2065. Find food_potato_2066. Find food_rice_2067. Find food_salt_2068. Find food_snack_2069. Find food_sugar_2070. Find food_turkey_2071. Find food_vegetable_2072. Find dry_pasta_2073. Find milk_2074. Find sauce_2101. Find food_steak_2042. Find food_apple_2043. Find food_bacon_2044. Find food_banana_2045. Find food_cake_2046. Find food_carrot_2047. Find chair_138. Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Robot is no longer close kitchen_counter_132.
##############################
From agent.py
switchoff_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
open_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2087 ?
Answer: Go to dining_room_1. Locate table_123; cup_2087 is on this table. Look for the cup among the items placed directly on the table's surface.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_1. Locate table_123; cup_2087 is on this table. Look for the cup among the items placed directly on the table's surface.

The actions you have taken:
Action 1: Walk to coffe_maker_147.
Action 2: Switch on coffe_maker_147.
Action 3: Walk to kitchen_counter_129.
Action 4: look for cup_2087 around kitchen_counter_129.
Action 5: Walk to kitchen_counter_128.
Action 6: look for cup_2087 around kitchen_counter_128.
Action 7: Walk to cupboard_130.
Action 8: look for cup_2087 around cupboard_130.
Action 9: Walk to cupboard_131.
Action 10: Open cupboard_131.
Action 11: look for cup_2087 around cupboard_131.
Action 12: Walk to kitchen_counter_132.
Action 13: look for cup_2087 around kitchen_counter_132.
Action 14: Walk to fridge_140.
Action 15: Switch off fridge_140.
Action 16: Open fridge_140.

##############################
From agent.py
exp(cup_2087, fridge_140)
Fail to find cup_2087 around fridge_140. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(cup_2087, table_123)walk_executor(coffe_maker_147)switchoff_executor(coffe_maker_147)open_executor(coffe_maker_147)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(coffe_maker_147)putin_executor(cup_2087, coffe_maker_147)
##############################
From agent.py
walk_executor(table_123)
Find mat_114. Find drawing_118. Find laptop_2015. Find fork_2103. Find bowl_2095. Find cup_2087. Find cup_2088. Find mouse_2003. Find homework_2011. Find shoes_2001. Robot is inside dining_room_1. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer close food_cereal_2048.Robot is no longer close food_cheese_2049.Robot is no longer close food_chicken_2050.Robot is no longer close food_dessert_2051.Robot is no longer close food_donut_2052.Robot is no longer close food_egg_2053.Robot is no longer close food_fish_2054.Robot is no longer close food_food_2055.Robot is no longer close food_fruit_2056.Robot is no longer close food_hamburger_2057.Robot is no longer close food_ice_cream_2058.Robot is no longer close food_jam_2059.Robot is no longer close food_kiwi_2060.Robot is no longer close food_lemon_2061.Robot is no longer close food_noodles_2062.Robot is no longer close food_oatmeal_2063.Robot is no longer close food_peanut_butter_2064.Robot is no longer close food_pizza_2065.Robot is no longer close food_potato_2066.Robot is no longer close food_rice_2067.Robot is no longer close food_salt_2068.Robot is no longer close food_snack_2069.Robot is no longer close food_sugar_2070.Robot is no longer close food_turkey_2071.Robot is no longer close food_vegetable_2072.Robot is no longer close dry_pasta_2073.Robot is no longer close milk_2074.Robot is no longer close floor_22.Robot is no longer close sauce_2101.Robot is no longer close fridge_140.Robot is no longer close food_steak_2042.Robot is no longer close food_apple_2043.Robot is no longer close food_bacon_2044.Robot is no longer close food_banana_2045.Robot is no longer close food_cake_2046.Robot is no longer close food_carrot_2047.
##############################
From agent.py
exp(cup_2087, table_123)
Find cup_2087. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_147)switchoff_executor(coffe_maker_147)open_executor(coffe_maker_147)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(coffe_maker_147)putin_executor(cup_2087, coffe_maker_147)
##############################
From agent.py
walk_executor(coffe_maker_147)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close coffe_maker_147. Robot is no longer close floor_17.Robot is no longer close mat_114.Robot is no longer close table_123.
##############################
From agent.py
switchoff_executor(coffe_maker_147)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close coffe_maker_147. 
##############################
From agent.py
open_executor(coffe_maker_147)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close coffe_maker_147. 
##############################
From agent.py
walk_executor(cup_2087)
Robot is inside dining_room_1. Robot is close table_123. Robot is close cup_2087. Robot is no longer close kitchen_counter_129.Robot is no longer close coffe_maker_147.
##############################
From agent.py
grab_executor(cup_2087)
Robot is inside dining_room_1. Robot is close table_123. Robot is close cup_2087. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(coffe_maker_147)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_129. Robot is close coffe_maker_147. Robot is no longer close table_123.
##############################
From agent.py
putin_executor(cup_2087, coffe_maker_147)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_129. Robot is close coffe_maker_147. cup_2087 released by right hand. 
##############################
From agent.py
Human Instruction: You need to add water to the coffee maker, as this step hasn't been completed yet.

The actions you have taken:
Action 1: Walk to coffe_maker_147.
Action 2: Switch on coffe_maker_147.
Action 3: Walk to kitchen_counter_129.
Action 4: look for cup_2087 around kitchen_counter_129.
Action 5: Walk to kitchen_counter_128.
Action 6: look for cup_2087 around kitchen_counter_128.
Action 7: Walk to cupboard_130.
Action 8: look for cup_2087 around cupboard_130.
Action 9: Walk to cupboard_131.
Action 10: Open cupboard_131.
Action 11: look for cup_2087 around cupboard_131.
Action 12: Walk to kitchen_counter_132.
Action 13: look for cup_2087 around kitchen_counter_132.
Action 14: Walk to fridge_140.
Action 15: Switch off fridge_140.
Action 16: Open fridge_140.
Action 17: look for cup_2087 around fridge_140.
Action 18: Walk to table_123.
Action 19: look for cup_2087 around table_123.
Action 20: Walk to coffe_maker_147.
Action 21: Switch off coffe_maker_147.
Action 22: Open coffe_maker_147.
Action 23: Walk to cup_2087.
Action 24: Grab cup_2087.
Action 25: Walk to coffe_maker_147.
Action 26: Put cup_2087 into coffe_maker_147.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2088_around_cup_2088(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2088
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(cup,cup_instance)
        else:
            exp(cup,cup_instance)
    eff:
        unknown[cup]=False
        close[cup,cup_instance]=True
        close[cup_instance,cup]=True
    

behavior find_cup_2006_around_tray_142(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind tray_instance:item where:
            is_tray(tray_instance) and id[tray_instance]==142
        achieve close_char(char,tray_instance)
        if can_open(tray_instance):
            achieve_once open(tray_instance)
            exp(cup,tray_instance)
        else:
            exp(cup,tray_instance)
    eff:
        unknown[cup]=False
        close[cup,tray_instance]=True
        close[tray_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_coffee_maker_with_water(coffee_maker:item):
    body:
        achieve has_water(coffee_maker)
        # Ensure the coffee maker is filled with water

behavior place_cup_under_coffee_maker(cup:item, coffee_maker:item):
    body:
        achieve on(cup, coffee_maker)
        # Ensure the cup is placed under the coffee maker

behavior start_coffee_maker(coffee_maker:item):
    body:
        achieve is_on(coffee_maker)
        # Turn on the coffee maker to brew coffee

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker) and not has_water(coffee_maker)
        # Select the coffee maker that needs water

        bind cup: item where:
            is_cup(cup) and close(cup, coffee_maker)
        # Select the cup close to the coffee maker

        fill_coffee_maker_with_water(coffee_maker)
        place_cup_under_coffee_maker(cup, coffee_maker)
        start_coffee_maker(coffee_maker)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_coffee_maker_with_water(coffee_maker:item):
    body:
        achieve has_water(coffee_maker)
        # Ensure the coffee maker is filled with water

behavior place_cup_under_coffee_maker(cup:item, coffee_maker:item):
    body:
        achieve on(cup, coffee_maker)
        # Ensure the cup is placed under the coffee maker

behavior start_coffee_maker(coffee_maker:item):
    body:
        achieve is_on(coffee_maker)
        # Turn on the coffee maker to brew coffee

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker) and not has_water(coffee_maker)
        # Select the coffee maker that needs water

        bind cup: item where:
            is_cup(cup) and close(cup, coffee_maker)
        # Select the cup close to the coffee maker

        fill_coffee_maker_with_water(coffee_maker)
        place_cup_under_coffee_maker(cup, coffee_maker)
        start_coffee_maker(coffee_maker)

##############################
From agent.py-> find a plan in act()
grab_executor(cup_2087)put_executor(cup_2087, coffe_maker_147)close_executor(coffe_maker_147)switchon_executor(coffe_maker_147)
##############################
From agent.py
grab_executor(cup_2087)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_129. Robot is close coffe_maker_147. Grabbing cup_2087 by right hand. 
##############################
From agent.py
put_executor(cup_2087, coffe_maker_147)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_129. Robot is close coffe_maker_147. cup_2087 released by right hand. 
##############################
From agent.py
close_executor(coffe_maker_147)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_129. Robot is close coffe_maker_147. 
##############################
From agent.py
switchon_executor(coffe_maker_147)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_129. Robot is close coffe_maker_147. 
##############################
From agent.py
Human Instruction: You need to add water to the coffee maker, as this step hasn't been completed yet.

The actions you have taken:
Action 1: Walk to coffe_maker_147.
Action 2: Switch on coffe_maker_147.
Action 3: Walk to kitchen_counter_129.
Action 4: look for cup_2087 around kitchen_counter_129.
Action 5: Walk to kitchen_counter_128.
Action 6: look for cup_2087 around kitchen_counter_128.
Action 7: Walk to cupboard_130.
Action 8: look for cup_2087 around cupboard_130.
Action 9: Walk to cupboard_131.
Action 10: Open cupboard_131.
Action 11: look for cup_2087 around cupboard_131.
Action 12: Walk to kitchen_counter_132.
Action 13: look for cup_2087 around kitchen_counter_132.
Action 14: Walk to fridge_140.
Action 15: Switch off fridge_140.
Action 16: Open fridge_140.
Action 17: look for cup_2087 around fridge_140.
Action 18: Walk to table_123.
Action 19: look for cup_2087 around table_123.
Action 20: Walk to coffe_maker_147.
Action 21: Switch off coffe_maker_147.
Action 22: Open coffe_maker_147.
Action 23: Walk to cup_2087.
Action 24: Grab cup_2087.
Action 25: Walk to coffe_maker_147.
Action 26: Put cup_2087 into coffe_maker_147.
Action 27: Grab cup_2087.
Action 28: Put cup_2087 on coffe_maker_147.
Action 29: Close coffe_maker_147.
Action 30: Switch on coffe_maker_147.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2087_around_bench_126(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==126
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(cup,bench_instance)
        else:
            exp(cup,bench_instance)
    eff:
        unknown[cup]=False
        close[cup,bench_instance]=True
        close[bench_instance,cup]=True
    

behavior find_cup_2088_around_cup_2088(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2088
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(cup,cup_instance)
        else:
            exp(cup,cup_instance)
    eff:
        unknown[cup]=False
        close[cup,cup_instance]=True
        close[cup_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_coffee_maker_with_water(coffee_maker:item, water_source:item):
    body:
        achieve has_water(coffee_maker)

behavior place_cup_in_coffee_maker(cup:item, coffee_maker:item):
    body:
        achieve inside(cup, coffee_maker)

behavior brew_coffee(coffee_maker:item):
    body:
        achieve is_on(coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind water_source: item where:
            has_water(water_source)
        # Select a water source

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        fill_coffee_maker_with_water(coffee_maker, water_source)
        place_cup_in_coffee_maker(cup, coffee_maker)
        brew_coffee(coffee_maker)

#goal_representation_end

##############################
From agent.py
Reset goals: The sub-goals are: 
['make a cup of coffee using the coffee maker.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2087_around_table_127(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(cup,table_instance)
        else:
            exp(cup,table_instance)
    eff:
        unknown[cup]=False
        close[cup,table_instance]=True
        close[table_instance,cup]=True
    

behavior find_clothes_pants_2113_around_bed_376(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(clothes_pants,bed_instance)
        else:
            exp(clothes_pants,bed_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,bed_instance]=True
        close[bed_instance,clothes_pants]=True
    

#exp_behavior_end

#goal_representation
 
behavior add_water_to_coffe_maker(coffee_maker:item, water_source:item):
    body:
        achieve has_water(coffee_maker)
        # Ensure the coffee maker is filled with water

behavior make_coffee_using_coffe_maker(coffee_maker:item, cup:item):
    body:
        achieve on(cup, coffee_maker)
        # Ensure the cup is placed on the coffee maker

        achieve closed(coffee_maker)
        # Ensure the coffee maker is closed

        achieve is_on(coffee_maker)
        # Turn on the coffee maker to brew coffee

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind water_source: item where:
            has_water(water_source)
        # Select a water source

        add_water_to_coffe_maker(coffee_maker, water_source)
        make_coffee_using_coffe_maker(coffee_maker, cup)

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
