From agent.py
Reset goals: The sub-goals are: 
['Prepare a bowl of water and put the bowl on the table in home office. Then find my cat put it on the table.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cat_2069_around_home_office_241(cat:item):
    goal: not unknown(cat)
    body:
        assert is_cat(cat)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(cat,home_office_instance)
        else:
            exp(cat,home_office_instance)
    eff:
        unknown[cat]=False
        close[cat,home_office_instance]=True
        close[home_office_instance,cat]=True
    

behavior find_bowl_2140_around_sink_120(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(bowl,sink_instance)
        else:
            exp(bowl,sink_instance)
    eff:
        unknown[bowl]=False
        close[bowl,sink_instance]=True
        close[sink_instance,bowl]=True
    

#exp_behavior_end

#goal_representation

behavior prepare_bowl_with_water(bowl: item, faucet: item):
    body:
        assert is_bowl(bowl) and is_faucet(faucet)
        # Ensure the selected items are a bowl and a faucet

        achieve_once inhand(bowl)
        # Temporarily hold the bowl to fill it with water

        achieve has_water(bowl)
        # Achieve the state of the bowl having water

behavior place_bowl_on_table(bowl: item, table: item):
    body:
        assert is_table(table)
        # Ensure the selected item is a table

        achieve on(bowl, table)
        # Place the bowl filled with water on the table

behavior place_cat_on_table(cat: item, table: item):
    body:
        assert is_cat(cat) and is_table(table)
        # Ensure the selected items are a cat and a table

        achieve on(cat, table)
        # Place the cat on the table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        bind table: item where:
            is_table(table) and is_home_office(table)
        # Select the table in the home office

        bind cat: item where:
            is_cat(cat)
        # Select the cat

        prepare_bowl_with_water(bowl, faucet)
        place_bowl_on_table(bowl, table)
        place_cat_on_table(cat, table)

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['Prepare a bowl of water and put the bowl on the table in home office. Then find my cat put it on the table.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cat_2069_around_home_office_241(cat:item):
    goal: not unknown(cat)
    body:
        assert is_cat(cat)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(cat,home_office_instance)
        else:
            exp(cat,home_office_instance)
    eff:
        unknown[cat]=False
        close[cat,home_office_instance]=True
        close[home_office_instance,cat]=True
    

behavior find_bowl_2141_around_kitchen_counter_123(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_bowl_on_table(bowl:item, table:item):
    body:
        assert is_bowl(bowl)
        assert is_table(table)
        achieve has_water(bowl)
        achieve on(bowl, table)

behavior place_cat_on_table(cat:item, table:item):
    body:
        assert is_cat(cat)
        assert is_table(table)
        achieve on(cat, table)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and not has_water(bowl)

        bind home_office: item where:
            is_home_office(home_office)

        bind table: item where:
            is_table(table) and inside(table, home_office)

        place_bowl_on_table(bowl, table)

        bind cat: item where:
            is_cat(cat)

        place_cat_on_table(cat, table)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior place_bowl_on_table(bowl:item, table:item):
    body:
        assert is_bowl(bowl)
        assert is_table(table)
        achieve has_water(bowl)
        achieve on(bowl, table)

behavior place_cat_on_table(cat:item, table:item):
    body:
        assert is_cat(cat)
        assert is_table(table)
        achieve on(cat, table)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and not has_water(bowl)

        bind home_office: item where:
            is_home_office(home_office)

        bind table: item where:
            is_table(table) and inside(table, home_office)

        place_bowl_on_table(bowl, table)

        bind cat: item where:
            is_cat(cat)

        place_cat_on_table(cat, table)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(bowl_2140, kitchen_counter_123)walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(table_270)put_executor(bowl_2140, table_270)exp(cat_2069, home_office_241)walk_executor(cat_2069)grab_executor(cat_2069)walk_executor(table_270)put_executor(cat_2069, table_270)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Find oil_2149. Find knife_2035. Find food_kiwi_2054. Find food_orange_2027. Find tray_2068. Robot is inside dining_room_41. Robot is close kitchen_counter_123. Robot is close floor_45. 
##############################
From agent.py
exp(bowl_2140, kitchen_counter_123)
Fail to find bowl_2140 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(bowl_2140, cupboard_117)walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(table_270)put_executor(bowl_2140, table_270)walk_executor(couch_198)exp(cat_2069, couch_198)walk_executor(cat_2069)grab_executor(cat_2069)walk_executor(table_270)put_executor(cat_2069, table_270)
##############################
From agent.py
walk_executor(cupboard_117)
Find coffee_filter_2053. Find tray_128. Find pot_78. Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close wall_67. Robot is close cupboard_117. Robot is no longer close kitchen_counter_123.Robot is no longer close floor_45.
##############################
From agent.py
exp(bowl_2140, cupboard_117)
Fail to find bowl_2140 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_120)exp(bowl_2140, sink_120)walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(table_270)put_executor(bowl_2140, table_270)walk_executor(couch_198)exp(cat_2069, couch_198)walk_executor(cat_2069)grab_executor(cat_2069)walk_executor(table_270)put_executor(cat_2069, table_270)
##############################
From agent.py
walk_executor(sink_120)
Find basket_for_clothes_2078. Find soap_2010. Find pot_2138. Find ice_2024. Find soap_2126. Find bowl_2141. Find plate_2152. Find cutting_board_2123. Find food_salt_2041. Find fork_2150. Find bowl_2140. Find bowl_2142. Find fork_2151. Robot is inside dining_room_41. Robot is close sink_120. Robot is close kitchen_counter_119. Robot is no longer close coffee_filter_2053.Robot is no longer close wall_67.Robot is no longer close cupboard_117.
##############################
From agent.py
exp(bowl_2140, sink_120)
Find bowl_2140. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(table_270)put_executor(bowl_2140, table_270)walk_executor(couch_198)exp(cat_2069, couch_198)walk_executor(cat_2069)grab_executor(cat_2069)walk_executor(table_270)put_executor(cat_2069, table_270)
##############################
From agent.py
walk_executor(bowl_2140)
Robot is inside dining_room_41. Robot is close kitchen_counter_119. Robot is close bowl_2140. Robot is no longer close sink_120.
##############################
From agent.py
grab_executor(bowl_2140)
Robot is inside dining_room_41. Robot is close kitchen_counter_119. Robot is close bowl_2140. Grabbing bowl_2140 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Find drawing_33. Find mat_32. Find phone_2029. Robot is inside bathroom_1. Robot is close bowl_2140. Robot is close bathroom_counter_18. Robot is close faucet_20. Robot is no longer inside dining_room_41.Robot is no longer close kitchen_counter_119.
##############################
From agent.py
switchon_executor(faucet_20)
Robot is inside bathroom_1. Robot is close bowl_2140. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot is inside bathroom_1. Robot is close bowl_2140. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
From agent.py
walk_executor(table_270)
Find shampoo_2019. Find pillow_286. Find pencil_2014. Find pillow_287. Find brush_2002. Find drawing_288. Find shoes_2033. Find phone_2017. Robot is inside home_office_241. Robot is close bowl_2140. Robot is close couch_269. Robot is close table_270. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_18.Robot is no longer close faucet_20.
##############################
From agent.py
put_executor(bowl_2140, table_270)
Find check_2075. Find keyboard_278. Find blow_dryer_2057. Find stamp_2043. Find hanger_292. Find phone_2147. Find headset_2131. Find mat_284. Find cd_2145. Find stamp_2022. Find cat_2069. Find hanger_293. Find chair_271. Find cd_player_2129. Find clothes_pants_2036. Find remote_control_2124. Find pencil_2020. Find mouse_280. Find headset_2146. Find hanger_294. Find dvd_player_2130. Robot is inside home_office_241. Robot is close bowl_2140. Robot is close couch_269. Robot is close table_270. bowl_2140 released by right hand. 
##############################
From agent.py
walk_executor(couch_198)
Find clothes_jacket_2119. Find phone_2016. Find mat_203. Find chair_2003. Find rag_2052. Find instrument_guitar_2028. Robot is inside bedroom_162. Robot is close couch_198. Robot is no longer inside home_office_241.Robot is no longer close bowl_2140.Robot is no longer close couch_269.Robot is no longer close table_270.
##############################
From agent.py
exp(cat_2069, couch_198)
Find cat_2069. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2141)grab_executor(bowl_2141)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(table_270)put_executor(bowl_2141, table_270)walk_executor(cat_2069)grab_executor(cat_2069)walk_executor(table_270)put_executor(cat_2069, table_270)
##############################
From agent.py
walk_executor(bowl_2141)
Robot is inside dining_room_41. Robot is close bowl_2141. Robot is close kitchen_counter_119. Robot is no longer inside bedroom_162.Robot is no longer close couch_198.
##############################
From agent.py
grab_executor(bowl_2141)
Robot is inside dining_room_41. Robot is close bowl_2141. Robot is close kitchen_counter_119. Grabbing bowl_2141 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot is inside bathroom_1. Robot is close bowl_2141. Robot is close bathroom_counter_18. Robot is close faucet_20. Robot is no longer inside dining_room_41.Robot is no longer close kitchen_counter_119.
##############################
From agent.py
switchon_executor(faucet_20)
Robot is inside bathroom_1. Robot is close bowl_2141. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot is inside bathroom_1. Robot is close bowl_2141. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
From agent.py
walk_executor(table_270)
Robot is inside home_office_241. Robot is close bowl_2141. Robot is close couch_269. Robot is close table_270. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_18.Robot is no longer close faucet_20.
##############################
From agent.py
put_executor(bowl_2141, table_270)
Robot is inside home_office_241. Robot is close bowl_2141. Robot is close couch_269. Robot is close table_270. bowl_2141 released by right hand. 
##############################
From agent.py
walk_executor(cat_2069)
Robot is inside home_office_241. Robot is close dresser_274. Robot is close cat_2069. Robot is no longer close couch_269.Robot is no longer close bowl_2141.Robot is no longer close table_270.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_194_around_desk_193(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==193
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and has_water(bowl)
        # Select a bowl that already has water in it
        
        bind table: item where:
            is_table(table) and is_home_office(table)
        # Select the table in the home office
        
        achieve on(bowl, table)
        # Place the bowl with water on the table
        
        bind cat: item where:
            is_cat(cat)
        # Select the cat
        
        achieve on(cat, table)
        # Place the cat on the table

#goal_representation_end

##############################
From agent.py
Reset goals: The sub-goals are: 
['Prepare a bowl of water and put the bowl on the table in home office. Then find my cat put it on the table.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_fish_2093_around_fridge_126(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_fish,fridge_instance)
        else:
            exp(food_fish,fridge_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,fridge_instance]=True
        close[fridge_instance,food_fish]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_bowl_with_water(bowl:item, faucet:item):
    body:
        achieve has_water(bowl)
        # Ensure the bowl gets filled with water

behavior place_bowl_on_table(bowl:item, table:item):
    body:
        achieve on(bowl, table)
        # Place the bowl with water on the table

behavior place_cat_on_table(cat:item, table:item):
    body:
        achieve on(cat, table)
        # Place the cat on the table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and not has_water(bowl)
        # Select a bowl without water

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        bind table: item where:
            is_table(table) and inside(table, is_home_office)
        # Select a table in the home office

        bind cat: item where:
            is_cat(cat) and not on(cat, table)
        # Select the cat not currently on the table

        prepare_bowl_with_water(bowl, faucet)
        place_bowl_on_table(bowl, table)
        place_cat_on_table(cat, table)

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
