From agent.py
Reset goals: The sub-goals are: 
['1. Find the couch and sit on it.', '2. Locate the remote control and use it to turn on the TV.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_couch_sittable(couch:item):
    # Check if the couch can be sat on
    symbol can_sit=exists c: item : is_couch(c)  and sittable(couch)
    return can_sit

behavior approach_and_sit(couch:item):
    body:
        achieve close_char(char, couch)
        # Move close to the couch
        sit_somewhere(couch)
        # Sit on the couch

behavior __goal__():
    body:
        if exists couch: item : is_couch(couch) and is_couch_sittable(couch):
            # Check if there is a couch that can be sat on
            bind couch: item where:
                is_couch(couch) and is_couch_sittable(couch)
            # Select the couch that can be sat on
            approach_and_sit(couch)
            # Approach and sit on the couch

        else:
            # If no couch was found in prior information, check the entire scenes couches
            foreach couch: item:
                if is_couch(couch) and not visited(couch):
                    observe(couch, "Check if the couch is sittable")

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_couch_sittable(couch:item):
    # Check if the couch can be sat on
    symbol can_sit=exists c: item : is_couch(c)  and sittable(couch)
    return can_sit

behavior approach_and_sit(couch:item):
    body:
        achieve close_char(char, couch)
        # Move close to the couch
        sit_somewhere(couch)
        # Sit on the couch

behavior __goal__():
    body:
        if exists couch: item : is_couch(couch) and is_couch_sittable(couch):
            # Check if there is a couch that can be sat on
            bind couch: item where:
                is_couch(couch) and is_couch_sittable(couch)
            # Select the couch that can be sat on
            approach_and_sit(couch)
            # Approach and sit on the couch

        else:
            # If no couch was found in prior information, check the entire scenes couches
            foreach couch: item:
                if is_couch(couch) and not visited(couch):
                    observe(couch, "Check if the couch is sittable")

##############################
From agent.py-> find a plan in act()
walk_executor(couch_352)sit_executor(couch_352)
##############################
From agent.py
walk_executor(couch_352)
Find mat_401. Find remote_control_2052. Find clothes_jacket_2047. Find cat_2055. Find pillow_405. Find drawing_400. Find pillow_406. Find hairbrush_2002. Find vacuum_cleaner_2070. Robot is inside home_office_319. Robot is close couch_352. Robot is close mat_401. Robot is no longer inside bathroom_1.
##############################
From agent.py
sit_executor(couch_352)
Find headset_2062. Find hanger_363. Find hanger_374. Find drawing_404. Find keyboard_415. Find headset_2076. Find hanger_369. Find hanger_361. Find spectacles_2082. Find drawing_402. Find hanger_372. Find chair_356. Find book_2066. Find phone_2077. Find mouse_413. Find hanger_375. Find pencil_2001. Find hanger_367. Find hanger_359. Find dvd_player_2061. Find drawing_403. Find hanger_365. Find book_2067. Find hanger_376. Robot is inside home_office_319. Robot is close couch_352. Robot is close mat_401. Robot is on couch_352. Robot is facing television_410. 
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior locate_remote_control(remote_control: item):
    body:
        achieve close_char(char, remote_control)
        # Ensure the character is close to the remote control

behavior use_remote_control(remote_control: item, television: item):
    body:
        achieve_once inhand(remote_control)
        achieve is_on(television)
        # Use the remote control to turn on the television

behavior __goal__():
    body:
        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select an instance of the remote control

        bind television: item where:
            is_television(television)
        # Select an instance of the television

        locate_remote_control(remote_control)
        # Approach the remote control

        use_remote_control(remote_control, television)
        # Use the remote control to turn on the TV

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior locate_remote_control(remote_control: item):
    body:
        achieve close_char(char, remote_control)
        # Ensure the character is close to the remote control

behavior use_remote_control(remote_control: item, television: item):
    body:
        achieve_once inhand(remote_control)
        achieve is_on(television)
        # Use the remote control to turn on the television

behavior __goal__():
    body:
        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select an instance of the remote control

        bind television: item where:
            is_television(television)
        # Select an instance of the television

        locate_remote_control(remote_control)
        # Approach the remote control

        use_remote_control(remote_control, television)
        # Use the remote control to turn on the TV

##############################
From agent.py-> find a plan in act()
standup_executor(char)walk_executor(remote_control_2052)grab_executor(remote_control_2052)standup_executor(char)walk_executor(television_248)switchon_executor(television_248)
##############################
From agent.py
standup_executor(char)
Robot is inside home_office_319. Robot is close couch_352. Robot is close mat_401. Robot is on couch_352. Robot is facing television_410. 
##############################
From agent.py
walk_executor(remote_control_2052)
Robot is inside home_office_319. Robot is close couch_352. Robot is close remote_control_2052. Robot is on couch_352. Robot is no longer close mat_401.Robot is no longer facing television_410.
##############################
From agent.py
grab_executor(remote_control_2052)
Robot is inside home_office_319. Robot is close couch_352. Robot is close remote_control_2052. Robot is on couch_352. Grabbing remote_control_2052 by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cd_player_2060_around_tvstand_353(cd_player:item):
    goal: not unknown(cd_player)
    body:
        assert is_cd_player(cd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==353
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(cd_player,tvstand_instance)
        else:
            exp(cd_player,tvstand_instance)
    eff:
        unknown[cd_player]=False
        close[cd_player,tvstand_instance]=True
        close[tvstand_instance,cd_player]=True
    

behavior find_phone_2077_around_phone_2077(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind phone_instance:item where:
            is_phone(phone_instance) and id[phone_instance]==2077
        achieve close_char(char,phone_instance)
        if can_open(phone_instance):
            achieve_once open(phone_instance)
            exp(phone,phone_instance)
        else:
            exp(phone,phone_instance)
    eff:
        unknown[phone]=False
        close[phone,phone_instance]=True
        close[phone_instance,phone]=True
    

#exp_behavior_end

#goal_representation

behavior locate_remote_control(remote_control: item):
    body:
        achieve close_char(char, remote_control)
        # Move close to the remote control

behavior activate_tv(remote_control: item, television: item):
    body:
        achieve is_on(television)
        # Use the remote control to turn on the television

behavior __goal__():
    body:
        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select an instance of the remote control

        bind television: item where:
            is_television(television)
        # Select an instance of the television

        locate_remote_control(remote_control)
        # Locate the remote control

        achieve_once inhand(remote_control)
        # Pick up the remote control

        activate_tv(remote_control, television)
        # Turn on the TV using the remote control

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior locate_remote_control(remote_control: item):
    body:
        achieve close_char(char, remote_control)
        # Move close to the remote control

behavior activate_tv(remote_control: item, television: item):
    body:
        achieve is_on(television)
        # Use the remote control to turn on the television

behavior __goal__():
    body:
        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select an instance of the remote control

        bind television: item where:
            is_television(television)
        # Select an instance of the television

        locate_remote_control(remote_control)
        # Locate the remote control

        achieve_once inhand(remote_control)
        # Pick up the remote control

        activate_tv(remote_control, television)
        # Turn on the TV using the remote control

##############################
From agent.py-> find a plan in act()
walk_executor(television_248)switchon_executor(television_248)
##############################
From agent.py
walk_executor(television_248)
Find mat_236. Find drawing_241. Find drawing_242. Find drawing_243. Find phone_247. Find cd_2075. Find cd_player_2060. Find wall_clock_249. Robot is inside dining_room_201. Robot is close remote_control_2052. Robot is close television_248. Robot is close tvstand_225. Robot is on couch_352. Robot is no longer inside home_office_319.Robot is no longer close couch_352.
##############################
From agent.py
switchon_executor(television_248)
Robot is inside dining_room_201. Robot is close remote_control_2052. Robot is close television_248. Robot is close tvstand_225. Robot is on couch_352. 
##############################
