From agent.py
Reset goals: The sub-goals are: 
['Vacuum the floor.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2139_around_washing_machine_2079(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(vacuum_cleaner,washing_machine_instance)
        else:
            exp(vacuum_cleaner,washing_machine_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,washing_machine_instance]=True
        close[washing_machine_instance,vacuum_cleaner]=True
    

behavior find_cleaning_solution_2143_around_kitchen_counter_122(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cleaning_solution,kitchen_counter_instance)
        else:
            exp(cleaning_solution,kitchen_counter_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cleaning_solution]=True
    

behavior find_rag_2025_around_trashcan_99(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind trashcan_instance:item where:
            is_trashcan(trashcan_instance) and id[trashcan_instance]==99
        achieve close_char(char,trashcan_instance)
        if can_open(trashcan_instance):
            achieve_once open(trashcan_instance)
            exp(rag,trashcan_instance)
        else:
            exp(rag,trashcan_instance)
    eff:
        unknown[rag]=False
        close[rag,trashcan_instance]=True
        close[trashcan_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
def is_floor_clean(room:item):
    # Function to check if a specified rooms floor is clean
    symbol is_clean = not exists dirt: item : dirty(dirt) and inside(dirt, room)
    return is_clean

behavior clean_floor(vacuum:item, room:item):
    body:
        achieve plugged(vacuum) # Ensure the vacuum is plugged in
        achieve is_on(vacuum) # Turn the vacuum on
        assert_hold is_off(vacuum) # Ensure the vacuum is off after the action
        achieve clean(vacuum)
        achieve is_clean(room)
        # Vacuum the floor in the room until clean

behavior __goal__():
    body:
        bind vacuum: item where:
            is_vacuum_cleaner(vacuum)
        # Select an instance of a vacuum cleaner

        foreach room: item:
            if (is_dining_room(room) or is_home_office(room) or is_bathroom(room) or is_bedroom(room) or is_kitchen(room)) and not is_floor_clean(room):
                clean_floor(vacuum, room)
        # Iterate through each room and clean the floor if its not clean

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'dirt') at line 5540, column 34.
Expected one of: 
	* SEMICOLON
	* _NEWLINE

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_vacuum_cleaner_2139_around_kitchen_counter_122(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(vacuum_cleaner,kitchen_counter_instance)
        else:
            exp(vacuum_cleaner,kitchen_counter_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,kitchen_counter_instance]=True
        close[kitchen_counter_instance,vacuum_cleaner]=True
    

behavior find_cleaning_solution_2143_around_kitchen_counter_122(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cleaning_solution,kitchen_counter_instance)
        else:
            exp(cleaning_solution,kitchen_counter_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cleaning_solution]=True
    

behavior find_rag_2025_around_trashcan_99(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind trashcan_instance:item where:
            is_trashcan(trashcan_instance) and id[trashcan_instance]==99
        achieve close_char(char,trashcan_instance)
        if can_open(trashcan_instance):
            achieve_once open(trashcan_instance)
            exp(rag,trashcan_instance)
        else:
            exp(rag,trashcan_instance)
    eff:
        unknown[rag]=False
        close[rag,trashcan_instance]=True
        close[trashcan_instance,rag]=True
    

#goal_representation
 
def is_floor_clean(room: item):
    # Function to check if a specified rooms floor is clean
    symbol is_clean = not exists dirt: item : dirty(dirt) and inside(dirt, room)
    return is_clean

behavior clean_floor(vacuum: item, room: item):
    body:
        achieve plugged(vacuum) # Ensure the vacuum is plugged in
        achieve is_on(vacuum) # Turn the vacuum on
        achieve clean(vacuum)
        achieve is_clean(room)
        assert_hold is_off(vacuum) # Ensure the vacuum is off after the action

behavior __goal__():
    body:
        bind vacuum: item where:
            is_vacuum_cleaner(vacuum)
        # Select an instance of a vacuum cleaner

        foreach room: item:
            if (is_dining_room(room) or is_home_office(room) or is_bathroom(room) or is_bedroom(room) or is_kitchen(room)) and not is_floor_clean(room):
                clean_floor(vacuum, room)
        # Iterate through each room and clean the floor if its not clean

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'dirt') at line 5540, column 34.
Expected one of: 
	* SEMICOLON
	* _NEWLINE

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_vacuum_cleaner_2139_around_ironing_board_2144(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2144
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(vacuum_cleaner,ironing_board_instance)
        else:
            exp(vacuum_cleaner,ironing_board_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,ironing_board_instance]=True
        close[ironing_board_instance,vacuum_cleaner]=True
    

#goal_representation
 
def is_floor_clean(room: item):
    # Function to check if a specified rooms floor is clean
    symbol is_clean = not exists dirt: item : dirty(dirt) and inside(dirt, room)
    return is_clean

behavior clean_floor(vacuum: item, room: item):
    body:
        achieve plugged(vacuum) # Ensure the vacuum is plugged in
        achieve is_on(vacuum) # Turn the vacuum on
        achieve clean(vacuum)
        achieve is_clean(room)
        assert_hold is_off(vacuum) # Ensure the vacuum is off after the action

behavior __goal__():
    body:
        bind vacuum: item where:
            is_vacuum_cleaner(vacuum)
        # Select an instance of a vacuum cleaner

        foreach room: item:
            if (is_dining_room(room) or is_home_office(room) or is_bathroom(room) or is_bedroom(room) or is_kitchen(room)) and not is_floor_clean(room):
                clean_floor(vacuum, room)
        # Iterate through each room and clean the floor if its not clean

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2139_around_washing_machine_2079(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(vacuum_cleaner,washing_machine_instance)
        else:
            exp(vacuum_cleaner,washing_machine_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,washing_machine_instance]=True
        close[washing_machine_instance,vacuum_cleaner]=True
    

#exp_behavior_end

#goal_representation
 
behavior vacuum_floor(vacuum_cleaner: item):
    body:
        achieve clean(floor)

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner)

        bind floor: item where:
            is_floor(floor)

        vacuum_floor(vacuum_cleaner)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: floor; available variables: [Variable<vacuum_cleaner: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_vacuum_cleaner_2139_around_ironing_board_2144(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2144
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(vacuum_cleaner,ironing_board_instance)
        else:
            exp(vacuum_cleaner,ironing_board_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,ironing_board_instance]=True
        close[ironing_board_instance,vacuum_cleaner]=True
    

#goal_representation
 
behavior vacuum_floor(vacuum_cleaner: item, floor: item):
    body:
        achieve clean(floor)

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner)

        bind floor: item where:
            is_floor(floor)

        vacuum_floor(vacuum_cleaner, floor)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior vacuum_floor(vacuum_cleaner: item, floor: item):
    body:
        achieve clean(floor)

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner)

        bind floor: item where:
            is_floor(floor)

        vacuum_floor(vacuum_cleaner, floor)

##############################
From agent.py-> find a plan in act()
walk_executor(floor_10)wash_executor(floor_10)
##############################
From agent.py
walk_executor(floor_10)
Robot is inside bathroom_1. Robot is close floor_10. Robot is no longer inside dining_room_41.
##############################
From agent.py
wash_executor(floor_10)
Robot is inside bathroom_1. Robot is close floor_10. 
##############################
From agent.py
Human Instruction: You need to vacuum the floor. The actions taken were walking to and washing the floor, but vacuuming has not been performed. Locate a vacuum cleaner and use it to vacuum the floor to complete the sub-task.

The actions you have taken:
Action 1: Walk to floor_10.
Action 2: Wash floor_10.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2139_around_home_office_241(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(vacuum_cleaner,home_office_instance)
        else:
            exp(vacuum_cleaner,home_office_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,home_office_instance]=True
        close[home_office_instance,vacuum_cleaner]=True
    

#exp_behavior_end

#goal_representation
behavior locate_vacuum_cleaner(vacuum_cleaner: item):
    body:
        achieve visited(vacuum_cleaner)

behavior vacuum_floor(vacuum_cleaner: item, floor: item):
    body:
        achieve clean(floor)

behavior __goal__():
    body:
        bind floor: item where:
            is_floor(floor) and id[floor] == 10
        # Select the floor with ID 10 to be vacuumed
        
        if exists vacuum_cleaner: item : is_vacuum_cleaner(vacuum_cleaner):
            bind vacuum_cleaner: item where:
                is_vacuum_cleaner(vacuum_cleaner)
            locate_vacuum_cleaner(vacuum_cleaner)
            # Locate a vacuum cleaner
        
        vacuum_floor(vacuum_cleaner, floor)
        # Vacuum the specified floor
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: vacuum_cleaner; available variables: [].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_vacuum_cleaner_2139_around_washing_machine_2079(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(vacuum_cleaner,washing_machine_instance)
        else:
            exp(vacuum_cleaner,washing_machine_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,washing_machine_instance]=True
        close[washing_machine_instance,vacuum_cleaner]=True
    

#goal_representation
 
behavior locate_vacuum_cleaner(vacuum_cleaner: item):
    body:
        achieve visited(vacuum_cleaner)

behavior vacuum_floor(vacuum_cleaner: item, floor: item):
    body:
        achieve clean(floor)

behavior __goal__():
    body:
        bind floor: item where:
            is_floor(floor) and id[floor] == 10
        # Select the floor with ID 10 to be vacuumed
        
        if exists vacuum_cleaner: item : is_vacuum_cleaner(vacuum_cleaner):
            bind vacuum_cleaner: item where:
                is_vacuum_cleaner(vacuum_cleaner)
            locate_vacuum_cleaner(vacuum_cleaner)
            # Locate a vacuum cleaner
        
            vacuum_floor(vacuum_cleaner, floor)
            # Vacuum the specified floor

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior locate_vacuum_cleaner(vacuum_cleaner: item):
    body:
        achieve visited(vacuum_cleaner)

behavior vacuum_floor(vacuum_cleaner: item, floor: item):
    body:
        achieve clean(floor)

behavior __goal__():
    body:
        bind floor: item where:
            is_floor(floor) and id[floor] == 10
        # Select the floor with ID 10 to be vacuumed
        
        if exists vacuum_cleaner: item : is_vacuum_cleaner(vacuum_cleaner):
            bind vacuum_cleaner: item where:
                is_vacuum_cleaner(vacuum_cleaner)
            locate_vacuum_cleaner(vacuum_cleaner)
            # Locate a vacuum cleaner
        
            vacuum_floor(vacuum_cleaner, floor)
            # Vacuum the specified floor

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2079)open_executor(washing_machine_2079)exp(vacuum_cleaner_2139, washing_machine_2079)walk_executor(vacuum_cleaner_2139)obs(vacuum_cleaner_2139, look around this place)
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close washing_machine_2079. Robot is no longer inside bathroom_1.Robot is no longer close floor_10.
##############################
From agent.py
open_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close washing_machine_2079. 
##############################
From agent.py
exp(vacuum_cleaner_2139, washing_machine_2079)
Fail to find vacuum_cleaner_2139 around washing_machine_2079. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_129)open_executor(dishwasher_129)exp(vacuum_cleaner_2139, dishwasher_129)walk_executor(vacuum_cleaner_2139)obs(vacuum_cleaner_2139, look around this place)
##############################
From agent.py
walk_executor(dishwasher_129)
Find detergent_2011. Find measuring_cup_2012. Robot is inside dining_room_41. Robot is close dishwasher_129. Robot is close detergent_2011. Robot is close measuring_cup_2012. Robot is no longer close washing_machine_2079.
##############################
From agent.py
open_executor(dishwasher_129)
Robot is inside dining_room_41. Robot is close dishwasher_129. Robot is close detergent_2011. Robot is close measuring_cup_2012. 
##############################
From agent.py
exp(vacuum_cleaner_2139, dishwasher_129)
Fail to find vacuum_cleaner_2139 around dishwasher_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(vacuum_cleaner_2139, cupboard_117)walk_executor(vacuum_cleaner_2139)obs(vacuum_cleaner_2139, look around this place)
##############################
From agent.py
walk_executor(cupboard_117)
Find coffee_filter_2053. Find tray_128. Find pot_78. Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close wall_67. Robot is close cupboard_117. Robot is no longer close dishwasher_129.Robot is no longer close detergent_2011.Robot is no longer close measuring_cup_2012.
##############################
From agent.py
exp(vacuum_cleaner_2139, cupboard_117)
Fail to find vacuum_cleaner_2139 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(vacuum_cleaner_2139, cupboard_118)walk_executor(vacuum_cleaner_2139)obs(vacuum_cleaner_2139, look around this place)
##############################
From agent.py
walk_executor(cupboard_118)
Find tea_2066. Find knife_2037. Find food_peanut_butter_2077. Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. Robot is no longer close coffee_filter_2053.Robot is no longer close wall_67.Robot is no longer close cupboard_117.
##############################
From agent.py
open_executor(cupboard_118)
Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. 
##############################
From agent.py
exp(vacuum_cleaner_2139, cupboard_118)
Fail to find vacuum_cleaner_2139 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(vacuum_cleaner_2139, kitchen_counter_122)walk_executor(vacuum_cleaner_2139)obs(vacuum_cleaner_2139, look around this place)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Find spectacles_2153. Find fryingpan_2154. Robot is inside dining_room_41. Robot is close kitchen_counter_122. Robot is no longer close wall_68.Robot is no longer close tea_2066.Robot is no longer close knife_2037.Robot is no longer close cupboard_118.Robot is no longer close food_peanut_butter_2077.
##############################
From agent.py
exp(vacuum_cleaner_2139, kitchen_counter_122)
Fail to find vacuum_cleaner_2139 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(vacuum_cleaner_2139, fridge_126)walk_executor(vacuum_cleaner_2139)obs(vacuum_cleaner_2139, look around this place)
##############################
From agent.py
walk_executor(fridge_126)
Find food_onion_2048. Find food_food_2046. Find food_food_2073. Find food_steak_2080. Find food_apple_2081. Find food_bacon_2082. Find food_banana_2083. Find food_cake_2085. Find food_carrot_2086. Find food_cereal_2087. Find food_cheese_2088. Find food_chicken_2089. Find food_dessert_2090. Find food_donut_2091. Find food_egg_2092. Find food_fish_2093. Find food_food_2094. Find food_fruit_2095. Find food_hamburger_2096. Find food_ice_cream_2097. Find food_jam_2098. Find food_kiwi_2099. Find food_lemon_2100. Find food_noodles_2101. Find food_oatmeal_2102. Find food_orange_2103. Find food_onion_2104. Find food_peanut_butter_2105. Find food_pizza_2106. Find food_potato_2107. Find food_rice_2108. Find food_salt_2109. Find food_snack_2110. Find food_sugar_2111. Find food_turkey_2112. Find food_vegetable_2113. Find food_food_2001. Find sauce_2148. Find basket_for_clothes_2078. Find food_food_1000. Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. Robot is no longer close kitchen_counter_122.
##############################
From agent.py
switchoff_executor(fridge_126)
Find keyboard_211. Find mouse_213. Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
open_executor(fridge_126)
Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find vacuum_cleaner_2139 ?
Answer: The vacuum_cleaner_2139 is located inside the dining_room_41. You will find it close to trashcan_99. Look for the trashcan first, and the vacuum_cleaner_2139 will be nearby.
Re-decompose: None

##############################
From agent.py
Human Instruction: You need to vacuum the floor. The actions taken were walking to and washing the floor, but vacuuming has not been performed. Locate a vacuum cleaner and use it to vacuum the floor to complete the sub-task.
The vacuum_cleaner_2139 is located inside the dining_room_41. You will find it close to trashcan_99. Look for the trashcan first, and the vacuum_cleaner_2139 will be nearby.

The actions you have taken:
Action 1: Walk to floor_10.
Action 2: Wash floor_10.
Action 3: Walk to washing_machine_2079.
Action 4: Open washing_machine_2079.
Action 5: look for vacuum_cleaner_2139 around washing_machine_2079.
Action 6: Walk to dishwasher_129.
Action 7: Open dishwasher_129.
Action 8: look for vacuum_cleaner_2139 around dishwasher_129.
Action 9: Walk to cupboard_117.
Action 10: look for vacuum_cleaner_2139 around cupboard_117.
Action 11: Walk to cupboard_118.
Action 12: Open cupboard_118.
Action 13: look for vacuum_cleaner_2139 around cupboard_118.
Action 14: Walk to kitchen_counter_122.
Action 15: look for vacuum_cleaner_2139 around kitchen_counter_122.
Action 16: Walk to fridge_126.
Action 17: Switch off fridge_126.
Action 18: Open fridge_126.

##############################
From agent.py
exp(vacuum_cleaner_2139, fridge_126)
Fail to find vacuum_cleaner_2139 around fridge_126. 
##############################
From agent.py-> find a plan in act()
walk_executor(trashcan_99)exp(vacuum_cleaner_2139, trashcan_99)walk_executor(vacuum_cleaner_2139)obs(vacuum_cleaner_2139, look around this place)
##############################
From agent.py
walk_executor(trashcan_99)
Find food_orange_2061. Find food_onion_2009. Find glue_2045. Find vacuum_cleaner_2139. Robot is inside dining_room_41. Robot is close trashcan_99. Robot is close food_orange_2061. Robot is close floor_51. Robot is close food_onion_2009. Robot is close glue_2045. Robot is no longer close food_onion_2048.Robot is no longer close food_food_2046.Robot is no longer close food_food_2073.Robot is no longer close food_steak_2080.Robot is no longer close food_apple_2081.Robot is no longer close food_bacon_2082.Robot is no longer close food_banana_2083.Robot is no longer close food_cake_2085.Robot is no longer close food_carrot_2086.Robot is no longer close food_cereal_2087.Robot is no longer close food_cheese_2088.Robot is no longer close food_chicken_2089.Robot is no longer close food_dessert_2090.Robot is no longer close food_donut_2091.Robot is no longer close food_egg_2092.Robot is no longer close food_fish_2093.Robot is no longer close food_food_2094.Robot is no longer close food_fruit_2095.Robot is no longer close food_hamburger_2096.Robot is no longer close food_ice_cream_2097.Robot is no longer close food_jam_2098.Robot is no longer close food_kiwi_2099.Robot is no longer close food_lemon_2100.Robot is no longer close food_noodles_2101.Robot is no longer close food_oatmeal_2102.Robot is no longer close food_orange_2103.Robot is no longer close food_onion_2104.Robot is no longer close food_peanut_butter_2105.Robot is no longer close food_pizza_2106.Robot is no longer close food_potato_2107.Robot is no longer close food_rice_2108.Robot is no longer close food_salt_2109.Robot is no longer close food_snack_2110.Robot is no longer close food_sugar_2111.Robot is no longer close food_turkey_2112.Robot is no longer close food_vegetable_2113.Robot is no longer close food_food_2001.Robot is no longer close floor_44.Robot is no longer close sauce_2148.Robot is no longer close fridge_126.
##############################
From agent.py
exp(vacuum_cleaner_2139, trashcan_99)
Find vacuum_cleaner_2139. 
##############################
From agent.py-> find a plan in act()
walk_executor(vacuum_cleaner_2139)obs(vacuum_cleaner_2139, look around this place)
##############################
From agent.py
walk_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. Robot is no longer close trashcan_99.Robot is no longer close food_orange_2061.Robot is no longer close floor_51.Robot is no longer close food_onion_2009.Robot is no longer close glue_2045.
##############################
From agent.py
obs(vacuum_cleaner_2139, look around this place)
Get this information:  vacuum_cleaner_2139 is close to trashcan_99. vacuum_cleaner_2139 is close to character_240. vacuum_cleaner_2139 is inside dining_room_41. vacuum_cleaner_2139 is PLUGGED_OUT. vacuum_cleaner_2139 is CLEAN. vacuum_cleaner_2139 is OFF.
##############################
From agent.py
Human Instruction: You need to vacuum the floor. Although you found the vacuum cleaner, you have not yet performed the vacuuming action on floor_10. Plug in the vacuum cleaner, turn it on, and vacuum floor_10 to complete the sub-task.

The actions you have taken:
Action 1: Walk to floor_10.
Action 2: Wash floor_10.
Action 3: Walk to washing_machine_2079.
Action 4: Open washing_machine_2079.
Action 5: look for vacuum_cleaner_2139 around washing_machine_2079.
Action 6: Walk to dishwasher_129.
Action 7: Open dishwasher_129.
Action 8: look for vacuum_cleaner_2139 around dishwasher_129.
Action 9: Walk to cupboard_117.
Action 10: look for vacuum_cleaner_2139 around cupboard_117.
Action 11: Walk to cupboard_118.
Action 12: Open cupboard_118.
Action 13: look for vacuum_cleaner_2139 around cupboard_118.
Action 14: Walk to kitchen_counter_122.
Action 15: look for vacuum_cleaner_2139 around kitchen_counter_122.
Action 16: Walk to fridge_126.
Action 17: Switch off fridge_126.
Action 18: Open fridge_126.
Action 19: look for vacuum_cleaner_2139 around fridge_126.
Action 20: Walk to trashcan_99.
Action 21: look for vacuum_cleaner_2139 around trashcan_99.
Action 22: Walk to vacuum_cleaner_2139.
Action 23: Observe around vacuum_cleaner_2139 with the question of look around this place.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_blow_dryer_2057_around_shower_21(blow_dryer:item):
    goal: not unknown(blow_dryer)
    body:
        assert is_blow_dryer(blow_dryer)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==21
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(blow_dryer,shower_instance)
        else:
            exp(blow_dryer,shower_instance)
    eff:
        unknown[blow_dryer]=False
        close[blow_dryer,shower_instance]=True
        close[shower_instance,blow_dryer]=True
    

behavior find_cleaning_solution_2143_around_kitchen_counter_123(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cleaning_solution,kitchen_counter_instance)
        else:
            exp(cleaning_solution,kitchen_counter_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_vacuum_cleaner(vacuum_cleaner: item):
    body:
        achieve visited(vacuum_cleaner)

behavior plug_in_and_turn_on(vacuum_cleaner: item):
    body:
        achieve plugged(vacuum_cleaner)
        achieve is_on(vacuum_cleaner)

behavior vacuum_floor(vacuum_cleaner: item, floor: item):
    body:
        achieve clean(floor)

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner) and id[vacuum_cleaner] == 2139
        # Select vacuum cleaner with ID 2139

        bind floor: item where:
            is_floor(floor) and id[floor] == 10
        # Select floor with ID 10

        find_vacuum_cleaner(vacuum_cleaner)
        # Ensure the vacuum cleaner has been found

        plug_in_and_turn_on(vacuum_cleaner)
        # Plug in and turn on the vacuum cleaner

        vacuum_floor(vacuum_cleaner, floor)
        # Clean floor 10

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior find_vacuum_cleaner(vacuum_cleaner: item):
    body:
        achieve visited(vacuum_cleaner)

behavior plug_in_and_turn_on(vacuum_cleaner: item):
    body:
        achieve plugged(vacuum_cleaner)
        achieve is_on(vacuum_cleaner)

behavior vacuum_floor(vacuum_cleaner: item, floor: item):
    body:
        achieve clean(floor)

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner) and id[vacuum_cleaner] == 2139
        # Select vacuum cleaner with ID 2139

        bind floor: item where:
            is_floor(floor) and id[floor] == 10
        # Select floor with ID 10

        find_vacuum_cleaner(vacuum_cleaner)
        # Ensure the vacuum cleaner has been found

        plug_in_and_turn_on(vacuum_cleaner)
        # Plug in and turn on the vacuum cleaner

        vacuum_floor(vacuum_cleaner, floor)
        # Clean floor 10

##############################
From agent.py-> find a plan in act()
obs(vacuum_cleaner_2139, look around this place)plugin_executor(vacuum_cleaner_2139)switchon_executor(vacuum_cleaner_2139)
##############################
From agent.py
obs(vacuum_cleaner_2139, look around this place)
Get this information:  vacuum_cleaner_2139 is close to trashcan_99. vacuum_cleaner_2139 is close to character_240. vacuum_cleaner_2139 is inside dining_room_41. vacuum_cleaner_2139 is PLUGGED_OUT. vacuum_cleaner_2139 is CLEAN. vacuum_cleaner_2139 is OFF.
##############################
From agent.py
plugin_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. 
##############################
From agent.py
switchon_executor(vacuum_cleaner_2139)
Robot is inside dining_room_41. Robot is close vacuum_cleaner_2139. 
##############################
