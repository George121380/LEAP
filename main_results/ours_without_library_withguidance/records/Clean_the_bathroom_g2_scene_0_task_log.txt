From agent.py
Reset goals: The sub-goals are: 
['1. Find the sink in the bathroom.', '2. Add soap and water to the sink to prepare the soapy water.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_sink_42(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==42
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)

        foreach sink: item:
            if is_sink(sink) and inside(sink, bathroom):
                observe(sink, "Identify the sink in the bathroom")

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)

        foreach sink: item:
            if is_sink(sink) and inside(sink, bathroom):
                observe(sink, "Identify the sink in the bathroom")

##############################
From agent.py-> find a plan in act()
walk_executor(sink_42)obs(sink_42, Identify the sink in the bathroom)
##############################
From agent.py
walk_executor(sink_42)
Find basket_for_clothes_2006. Find towel_rack_34. Find detergent_2084. Find soap_2053. Find cleaning_solution_2073. Find towel_rack_32. Find towel_rack_31. Robot is inside bathroom_1. Robot is close bathroom_counter_41. Robot is close sink_42. 
##############################
From agent.py
obs(sink_42, Identify the sink in the bathroom)
Get this information:  sink_42 is close to floor_2. sink_42 is close to floor_3. sink_42 is close to detergent_2084. sink_42 is close to soap_2053. sink_42 is close to floor_4. sink_42 is close to bathroom_cabinet_40. sink_42 is close to bathroom_counter_41. sink_42 is close to wall_9. sink_42 is close to faucet_43. sink_42 is close to wall_12. sink_42 is close to basket_for_clothes_2006. sink_42 is close to washing_machine_2007. sink_42 is close to cleaning_solution_2073. sink_42 is close to character_65. sink_42 is inside bathroom_1. sink_42 is inside bathroom_counter_41. soap_2053 is on sink_42. cleaning_solution_2073 is on sink_42. detergent_2084 is on sink_42. sink_42 is DIRTY.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2053_around_soap_2053(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind soap_instance:item where:
            is_soap(soap_instance) and id[soap_instance]==2053
        achieve close_char(char,soap_instance)
        if can_open(soap_instance):
            achieve_once open(soap_instance)
            exp(soap,soap_instance)
        else:
            exp(soap,soap_instance)
    eff:
        unknown[soap]=False
        close[soap,soap_instance]=True
        close[soap_instance,soap]=True
    

#exp_behavior_end

#goal_representation
behavior add_soap_and_water_to_sink(soap: item, sink: item):
    body:
        achieve inside(soap, sink)
        # Ensure that the soap is inside the sink

        achieve has_water(sink)
        # Ensure that the sink is filled with water

behavior __goal__():
    body:
        bind soap: item where:
            is_soap(soap)
        # Select an instance of soap

        bind bathroom: item where:
            is_bathroom(bathroom)
        
        bind sink: item where:
            is_sink(sink) and id[sink] == 42
        # Select sink with ID 42

        add_soap_and_water_to_sink(soap, sink)
        # Add soap and water to the sink to prepare soapy water
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior add_soap_and_water_to_sink(soap: item, sink: item):
    body:
        achieve inside(soap, sink)
        # Ensure that the soap is inside the sink

        achieve has_water(sink)
        # Ensure that the sink is filled with water

behavior __goal__():
    body:
        bind soap: item where:
            is_soap(soap)
        # Select an instance of soap

        bind bathroom: item where:
            is_bathroom(bathroom)
        
        bind sink: item where:
            is_sink(sink) and id[sink] == 42
        # Select sink with ID 42

        add_soap_and_water_to_sink(soap, sink)
        # Add soap and water to the sink to prepare soapy water
##############################
From agent.py-> find a plan in act()
walk_executor(soap_2053)grab_executor(soap_2053)walk_executor(sink_42)putin_executor(soap_2053, sink_42)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(soap_2053)
Robot is inside bathroom_1. Robot is close sink_42. Robot is close soap_2053. Robot is no longer close bathroom_counter_41.
##############################
From agent.py
grab_executor(soap_2053)
Robot is inside bathroom_1. Robot is close sink_42. Robot is close soap_2053. Grabbing soap_2053 by right hand. 
##############################
From agent.py
walk_executor(sink_42)
Robot is inside bathroom_1. Robot is close sink_42. Robot is close soap_2053. Robot is close bathroom_counter_41. 
##############################
From agent.py
putin_executor(soap_2053, sink_42)
Robot is inside bathroom_1. Robot is close sink_42. Robot is close soap_2053. Robot is close bathroom_counter_41. soap_2053 released by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot is inside bathroom_1. Robot is close bathroom_counter_41. Robot is close faucet_43. Robot is no longer close sink_42.Robot is no longer close soap_2053.
##############################
From agent.py
switchon_executor(faucet_43)
Robot is inside bathroom_1. Robot is close bathroom_counter_41. Robot is close faucet_43. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot is inside bathroom_1. Robot is close bathroom_counter_41. Robot is close faucet_43. 
##############################
