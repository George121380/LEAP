From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the underwear with soap.', '2. Put the underwear in the washing machine and add some detergent for a thorough clean.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_underwear_2121_around_bed_197(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==197
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(clothes_underwear,bed_instance)
        else:
            exp(clothes_underwear,bed_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,bed_instance]=True
        close[bed_instance,clothes_underwear]=True
    

behavior find_soap_2126_around_sink_19(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==19
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_cleaning_solution_2143_around_dishwasher_129(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==129
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(cleaning_solution,dishwasher_instance)
        else:
            exp(cleaning_solution,dishwasher_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,dishwasher_instance]=True
        close[dishwasher_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_underwear_by_hand(underwear: item, soap: item, sink: item):
    body:
        achieve clean(underwear)
        # Ensure the underwear is cleaned 

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select an instance of underwear

        bind soap: item where:
            is_soap(soap)
        # Select an instance of soap

        bind sink: item where:
            is_sink(sink)
        # Select a sink for washing

        wash_underwear_by_hand(underwear, soap, sink)
        # Hand wash the underwear using soap

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior wash_underwear_by_hand(underwear: item, soap: item, sink: item):
    body:
        achieve clean(underwear)
        # Ensure the underwear is cleaned 

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select an instance of underwear

        bind soap: item where:
            is_soap(soap)
        # Select an instance of soap

        bind sink: item where:
            is_sink(sink)
        # Select a sink for washing

        wash_underwear_by_hand(underwear, soap, sink)
        # Hand wash the underwear using soap

##############################
From agent.py-> find a plan in act()
walk_executor(bed_197)exp(clothes_underwear_2121, bed_197)walk_executor(clothes_underwear_2121)wash_executor(clothes_underwear_2121)
##############################
From agent.py
walk_executor(bed_197)
Find clothes_dress_2116. Find clothes_scarf_2120. Find clothes_underwear_2121. Find drawing_201. Find pillow_207. Find pillow_208. Robot is inside bedroom_162. Robot is close bed_197. Robot is no longer inside dining_room_41.
##############################
From agent.py
exp(clothes_underwear_2121, bed_197)
Find clothes_underwear_2121. 
##############################
From agent.py-> find a plan in act()
walk_executor(clothes_underwear_2121)wash_executor(clothes_underwear_2121)
##############################
From agent.py
walk_executor(clothes_underwear_2121)
Robot is inside bedroom_162. Robot is close bed_197. Robot is close clothes_underwear_2121. 
##############################
From agent.py
wash_executor(clothes_underwear_2121)
Robot is inside bedroom_162. Robot is close bed_197. Robot is close clothes_underwear_2121. 
##############################
From agent.py
Human Instruction: You need to ensure that the underwear is washed with soap. The current information does not confirm that soap was used in the washing process.

The actions you have taken:
Action 1: Walk to bed_197.
Action 2: look for clothes_underwear_2121 around bed_197.
Action 3: Walk to clothes_underwear_2121.
Action 4: Wash clothes_underwear_2121.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_washing_machine_2079(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_soap_2125_around_sink_19(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==19
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_soap_2010_around_sink_19(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==19
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
def has_soap_around(sink: item):
    # Determine if there is soap around a given sink
    symbol exists_soap = exists soap: item : is_soap(soap) and close(soap, sink)
    return exists_soap

behavior hand_wash_clothes(clothes: item, sink: item):
    body:
        achieve inside(clothes, sink)
        # Place the clothes inside the sink

        if has_soap_around(sink):
            bind soap: item where:
                is_soap(soap) and close(soap, sink)
            achieve inside(soap, sink)
            # Ensure soap is inside the sink

        wash(clothes)
        # Hand wash the clothes using soap

behavior __goal__():
    body:
        bind clothes_underwear: item where:
            is_clothes_underwear(clothes_underwear)
        # Select an instance of underwear

        bind sink: item where:
            is_sink(sink)
        # Select an instance of a sink

        hand_wash_clothes(clothes_underwear, sink)
        # Hand wash the underwear in the sink

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def has_soap_around(sink: item):
    # Determine if there is soap around a given sink
    symbol exists_soap = exists soap: item : is_soap(soap) and close(soap, sink)
    return exists_soap

behavior hand_wash_clothes(clothes: item, sink: item):
    body:
        achieve inside(clothes, sink)
        # Place the clothes inside the sink

        if has_soap_around(sink):
            bind soap: item where:
                is_soap(soap) and close(soap, sink)
            achieve inside(soap, sink)
            # Ensure soap is inside the sink

        wash(clothes)
        # Hand wash the clothes using soap

behavior __goal__():
    body:
        bind clothes_underwear: item where:
            is_clothes_underwear(clothes_underwear)
        # Select an instance of underwear

        bind sink: item where:
            is_sink(sink)
        # Select an instance of a sink

        hand_wash_clothes(clothes_underwear, sink)
        # Hand wash the underwear in the sink

##############################
From agent.py-> find a plan in act()
grab_executor(clothes_underwear_2121)walk_executor(sink_19)putin_executor(clothes_underwear_2121, sink_19)walk_executor(clothes_underwear_2121)wash_executor(clothes_underwear_2121)
##############################
From agent.py
grab_executor(clothes_underwear_2121)
Robot is inside bedroom_162. Robot is close bed_197. Robot is close clothes_underwear_2121. Grabbing clothes_underwear_2121 by right hand. 
##############################
From agent.py
walk_executor(sink_19)
Find mat_32. Find detergent_2155. Find soap_2125. Find after_shave_2063. Find cleaning_solution_2143. Find drawing_33. Find phone_2029. Robot is inside bathroom_1. Robot is close clothes_underwear_2121. Robot is close bathroom_counter_18. Robot is close sink_19. Robot is no longer inside bedroom_162.Robot is no longer close bed_197.
##############################
From agent.py
putin_executor(clothes_underwear_2121, sink_19)
Robot is inside bathroom_1. Robot is close clothes_underwear_2121. Robot is close bathroom_counter_18. Robot is close sink_19. clothes_underwear_2121 released by right hand. 
##############################
From agent.py
walk_executor(clothes_underwear_2121)
Robot is inside bedroom_162. Robot is close clothes_underwear_2121. Robot is close sink_19. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_18.
##############################
From agent.py
wash_executor(clothes_underwear_2121)
Robot is inside bedroom_162. Robot is close clothes_underwear_2121. Robot is close sink_19. 
##############################
From agent.py
Human Instruction: The robot needs to ensure that soap is used during the washing process of the underwear in the sink. Verify that the soap is placed inside the sink with the clothes, and then proceed with washing the underwear using the soap.

The actions you have taken:
Action 1: Walk to bed_197.
Action 2: look for clothes_underwear_2121 around bed_197.
Action 3: Walk to clothes_underwear_2121.
Action 4: Wash clothes_underwear_2121.
Action 5: Grab clothes_underwear_2121.
Action 6: Walk to sink_19.
Action 7: Put clothes_underwear_2121 into sink_19.
Action 8: Walk to clothes_underwear_2121.
Action 9: Wash clothes_underwear_2121.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2125_around_soap_2125(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind soap_instance:item where:
            is_soap(soap_instance) and id[soap_instance]==2125
        achieve close_char(char,soap_instance)
        if can_open(soap_instance):
            achieve_once open(soap_instance)
            exp(soap,soap_instance)
        else:
            exp(soap,soap_instance)
    eff:
        unknown[soap]=False
        close[soap,soap_instance]=True
        close[soap_instance,soap]=True
    

behavior find_soap_2126_around_sink_120(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
def has_soap_near_sink(sink: item):
    # Determine if there is soap near the specified sink
    symbol soap_detected = exists soap: item : is_soap(soap) and close(soap, sink)
    return soap_detected

behavior hand_wash_underwear(underwear: item, sink: item, soap: item):
    body:
        achieve_once inside(underwear, sink)
        # Ensure the underwear is placed inside the sink
        
        if has_soap_near_sink(sink):
            bind soap: item where:
                is_soap(soap) and close(soap, sink)
            achieve_once inhand(soap)
            # Temporarily hold the soap in hand for washing

        wash(underwear) # Hand wash the underwear

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear) and id[underwear] == 2121
        # Select underwear with ID 2121

        bind sink: item where:
            is_sink(sink) and id[sink] == 19
        # Select sink with ID 19

        if has_soap_near_sink(sink):
            bind soap: item where:
                is_soap(soap) and close(soap, sink)
            hand_wash_underwear(underwear, sink, soap)
        else:
            foreach soap: item:
                if is_soap(soap) and not visited(soap):
                    observe(soap, "Locate and add soap near the sink")


#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Variable soap already exists.
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_detergent_2155_around_detergent_2155(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind detergent_instance:item where:
            is_detergent(detergent_instance) and id[detergent_instance]==2155
        achieve close_char(char,detergent_instance)
        if can_open(detergent_instance):
            achieve_once open(detergent_instance)
            exp(detergent,detergent_instance)
        else:
            exp(detergent,detergent_instance)
    eff:
        unknown[detergent]=False
        close[detergent,detergent_instance]=True
        close[detergent_instance,detergent]=True
    

behavior find_soap_2125_around_soap_2125(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind soap_instance:item where:
            is_soap(soap_instance) and id[soap_instance]==2125
        achieve close_char(char,soap_instance)
        if can_open(soap_instance):
            achieve_once open(soap_instance)
            exp(soap,soap_instance)
        else:
            exp(soap,soap_instance)
    eff:
        unknown[soap]=False
        close[soap,soap_instance]=True
        close[soap_instance,soap]=True
    

#goal_representation
 
def has_soap_near_sink(sink: item):
    # Determine if there is soap near the specified sink
    symbol soap_detected = exists soap: item : is_soap(soap) and close(soap, sink)
    return soap_detected

behavior hand_wash_underwear(underwear: item, sink: item, soap: item):
    body:
        achieve_once inside(underwear, sink)
        # Ensure the underwear is placed inside the sink
        
        if has_soap_near_sink(sink):
            bind soap: item where:
                is_soap(soap) and close(soap, sink)
            achieve_once inhand(soap)
            # Temporarily hold the soap in hand for washing

            wash(underwear) # Hand wash the underwear

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear) and id[underwear] == 2121
        # Select underwear with ID 2121

        bind sink: item where:
            is_sink(sink) and id[sink] == 19
        # Select sink with ID 19

        if has_soap_near_sink(sink):
            bind soap: item where:
                is_soap(soap) and close(soap, sink)
            hand_wash_underwear(underwear, sink, soap)
        else:
            foreach soap: item:
                if is_soap(soap) and not visited(soap):
                    observe(soap, "Locate and add soap near the sink")

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Variable soap already exists.
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_soap_2126_around_sink_120(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#goal_representation
 
def has_soap_near_sink(sink: item):
    # Determine if there is soap near the specified sink
    symbol soap_detected = exists soap: item : is_soap(soap) and close(soap, sink)
    return soap_detected

behavior hand_wash_underwear(underwear: item, sink: item, soap: item):
    body:
        achieve_once inside(underwear, sink)
        # Ensure the underwear is placed inside the sink
        
        achieve_once inhand(soap)
        # Temporarily hold the soap in hand for washing

        wash(underwear) # Hand wash the underwear

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear) and id[underwear] == 2121
        # Select underwear with ID 2121

        bind sink: item where:
            is_sink(sink) and id[sink] == 19
        # Select sink with ID 19

        if has_soap_near_sink(sink):
            bind soap: item where:
                is_soap(soap) and close(soap, sink)
            hand_wash_underwear(underwear, sink, soap)
        else:
            foreach soap: item:
                if is_soap(soap) and not visited(soap):
                    observe(soap, "Locate and add soap near the sink")

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def has_soap_near_sink(sink: item):
    # Determine if there is soap near the specified sink
    symbol soap_detected = exists soap: item : is_soap(soap) and close(soap, sink)
    return soap_detected

behavior hand_wash_underwear(underwear: item, sink: item, soap: item):
    body:
        achieve_once inside(underwear, sink)
        # Ensure the underwear is placed inside the sink
        
        achieve_once inhand(soap)
        # Temporarily hold the soap in hand for washing

        wash(underwear) # Hand wash the underwear

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear) and id[underwear] == 2121
        # Select underwear with ID 2121

        bind sink: item where:
            is_sink(sink) and id[sink] == 19
        # Select sink with ID 19

        if has_soap_near_sink(sink):
            bind soap: item where:
                is_soap(soap) and close(soap, sink)
            hand_wash_underwear(underwear, sink, soap)
        else:
            foreach soap: item:
                if is_soap(soap) and not visited(soap):
                    observe(soap, "Locate and add soap near the sink")

##############################
From agent.py-> find a plan in act()
walk_executor(soap_2125)grab_executor(soap_2125)walk_executor(clothes_underwear_2121)wash_executor(clothes_underwear_2121)
##############################
From agent.py
walk_executor(soap_2125)
Robot is inside bathroom_1. Robot is close sink_19. Robot is close soap_2125. Robot is no longer inside bedroom_162.Robot is no longer close clothes_underwear_2121.
##############################
From agent.py
grab_executor(soap_2125)
Robot is inside bathroom_1. Robot is close sink_19. Robot is close soap_2125. Grabbing soap_2125 by right hand. 
##############################
From agent.py
walk_executor(clothes_underwear_2121)
Robot is inside bedroom_162. Robot is close sink_19. Robot is close soap_2125. Robot is close clothes_underwear_2121. Robot is no longer inside bathroom_1.
##############################
From agent.py
wash_executor(clothes_underwear_2121)
Robot is inside bedroom_162. Robot is close sink_19. Robot is close soap_2125. Robot is close clothes_underwear_2121. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_washing_machine_2079(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_underwear_into_washing_machine(underwear: item, washing_machine: item):
    body:
        achieve inside(underwear, washing_machine)
        # Place the underwear inside the washing machine

behavior add_detergent_to_washing_machine(detergent: item, washing_machine: item):
    body:
        achieve inside(detergent, washing_machine)
        # Add detergent to the washing machine

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select an instance of underwear

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select an instance of a washing machine

        bind detergent: item where:
            is_detergent(detergent)
        # Select an instance of detergent

        put_underwear_into_washing_machine(underwear, washing_machine)
        add_detergent_to_washing_machine(detergent, washing_machine)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior put_underwear_into_washing_machine(underwear: item, washing_machine: item):
    body:
        achieve inside(underwear, washing_machine)
        # Place the underwear inside the washing machine

behavior add_detergent_to_washing_machine(detergent: item, washing_machine: item):
    body:
        achieve inside(detergent, washing_machine)
        # Add detergent to the washing machine

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select an instance of underwear

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select an instance of a washing machine

        bind detergent: item where:
            is_detergent(detergent)
        # Select an instance of detergent

        put_underwear_into_washing_machine(underwear, washing_machine)
        add_detergent_to_washing_machine(detergent, washing_machine)

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2079)open_executor(washing_machine_2079)walk_executor(clothes_underwear_2121)grab_executor(clothes_underwear_2121)walk_executor(washing_machine_2079)putin_executor(clothes_underwear_2121, washing_machine_2079)walk_executor(detergent_2155)grab_executor(detergent_2155)walk_executor(washing_machine_2079)putin_executor(detergent_2155, washing_machine_2079)
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close soap_2125. Robot is close washing_machine_2079. Robot is no longer inside bedroom_162.Robot is no longer close clothes_underwear_2121.Robot is no longer close sink_19.
##############################
From agent.py
open_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close soap_2125. Robot is close washing_machine_2079. 
##############################
From agent.py
walk_executor(clothes_underwear_2121)
Robot is inside bedroom_162. Robot is close soap_2125. Robot is close clothes_underwear_2121. Robot is close sink_19. Robot is no longer inside dining_room_41.Robot is no longer close washing_machine_2079.
##############################
From agent.py
grab_executor(clothes_underwear_2121)
Robot is inside bedroom_162. Robot is close soap_2125. Robot is close clothes_underwear_2121. Robot is close sink_19. Grabbing clothes_underwear_2121 by left hand. 
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close soap_2125. Robot is close clothes_underwear_2121. Robot is close washing_machine_2079. Robot is no longer inside bedroom_162.Robot is no longer close sink_19.
##############################
From agent.py
putin_executor(clothes_underwear_2121, washing_machine_2079)
Robot is inside dining_room_41. Robot is close soap_2125. Robot is close clothes_underwear_2121. Robot is close washing_machine_2079. clothes_underwear_2121 released by left hand. 
##############################
From agent.py
walk_executor(detergent_2155)
Robot is inside bathroom_1. Robot is close soap_2125. Robot is close sink_19. Robot is close detergent_2155. Robot is no longer inside dining_room_41.Robot is no longer close clothes_underwear_2121.Robot is no longer close washing_machine_2079.
##############################
From agent.py
grab_executor(detergent_2155)
Robot is inside bathroom_1. Robot is close soap_2125. Robot is close sink_19. Robot is close detergent_2155. Grabbing detergent_2155 by left hand. 
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close soap_2125. Robot is close detergent_2155. Robot is close clothes_underwear_2121. Robot is close washing_machine_2079. Robot is no longer inside bathroom_1.Robot is no longer close sink_19.
##############################
From agent.py
putin_executor(detergent_2155, washing_machine_2079)
Robot is inside dining_room_41. Robot is close soap_2125. Robot is close detergent_2155. Robot is close clothes_underwear_2121. Robot is close washing_machine_2079. detergent_2155 released by left hand. 
##############################
