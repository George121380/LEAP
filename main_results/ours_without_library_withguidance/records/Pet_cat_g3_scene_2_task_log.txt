From agent.py
Reset goals: The sub-goals are: 
['1. Prepare a bowl of water and place it on the table in the home office.', '2. Find your cat and put it on the table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2097_around_table_123(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==123
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(bowl,table_instance)
        else:
            exp(bowl,table_instance)
    eff:
        unknown[bowl]=False
        close[bowl,table_instance]=True
        close[table_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_bowl_with_water(bowl: item):
    body:
        achieve has_water(bowl)
        # Fill the bowl with water

behavior place_bowl_on_table(bowl: item, table: item):
    body:
        achieve on(bowl, table)
        # Place the bowl on the table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select an instance of a bowl

        bind home_office: item where:
            is_home_office(home_office)

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table inside the home office

        fill_bowl_with_water(bowl)
        # Fill the bowl with water

        place_bowl_on_table(bowl, table)
        # Place the bowl on the table inside the home office

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior fill_bowl_with_water(bowl: item):
    body:
        achieve has_water(bowl)
        # Fill the bowl with water

behavior place_bowl_on_table(bowl: item, table: item):
    body:
        achieve on(bowl, table)
        # Place the bowl on the table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select an instance of a bowl

        bind home_office: item where:
            is_home_office(home_office)

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table inside the home office

        fill_bowl_with_water(bowl)
        # Fill the bowl with water

        place_bowl_on_table(bowl, table)
        # Place the bowl on the table inside the home office

##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(bowl_2095, table_123)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(table_193)put_executor(bowl_2095, table_193)
##############################
From agent.py
walk_executor(table_123)
Find mat_114. Find drawing_118. Find laptop_2015. Find fork_2103. Find bowl_2095. Find cup_2087. Find cup_2088. Find mouse_2003. Find homework_2011. Find shoes_2001. Robot is inside dining_room_1. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer inside home_office_161.
##############################
From agent.py
exp(bowl_2095, table_123)
Find bowl_2095. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(table_193)put_executor(bowl_2095, table_193)
##############################
From agent.py
walk_executor(bowl_2095)
Robot is inside dining_room_1. Robot is close table_123. Robot is close bowl_2095. Robot is no longer close floor_17.Robot is no longer close mat_114.
##############################
From agent.py
grab_executor(bowl_2095)
Robot is inside dining_room_1. Robot is close table_123. Robot is close bowl_2095. Grabbing bowl_2095 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Find pot_54. Find tray_142. Robot is inside dining_room_1. Robot is close bowl_2095. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close table_123.
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close bowl_2095. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(table_193)
Find keyboard_2111. Find drawing_196. Find mouse_2112. Find oil_2005. Find dvd_player_2000. Find chair_2118. Find pillow_195. Find laser_pointer_2025. Find mat_201. Robot is inside home_office_161. Robot is close bowl_2095. Robot is close table_193. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
put_executor(bowl_2095, table_193)
Find stereo_2007. Find cd_2100. Find cat_2082. Find video_game_controller_2019. Find clothes_underwear_2022. Find cup_2006. Find vacuum_cleaner_2094. Robot is inside home_office_161. Robot is close bowl_2095. Robot is close table_193. bowl_2095 released by right hand. 
##############################
From agent.py
Human Instruction: You need to fill the bowl with water before placing it on the table in the home office.

The actions you have taken:
Action 1: Walk to table_123.
Action 2: look for bowl_2095 around table_123.
Action 3: Walk to bowl_2095.
Action 4: Grab bowl_2095.
Action 5: Walk to faucet_134.
Action 6: Switch off faucet_134.
Action 7: Walk to table_193.
Action 8: Put bowl_2095 on table_193.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_lemon_2061_around_kitchen_counter_128(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_lemon,kitchen_counter_instance)
        else:
            exp(food_lemon,kitchen_counter_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_lemon]=True
    

behavior find_food_snack_2069_around_kitchen_counter_128(food_snack:item):
    goal: not unknown(food_snack)
    body:
        assert is_food_snack(food_snack)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_snack,kitchen_counter_instance)
        else:
            exp(food_snack,kitchen_counter_instance)
    eff:
        unknown[food_snack]=False
        close[food_snack,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_snack]=True
    

behavior find_bowl_2097_around_kitchen_counter_128(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_bowl_with_water(bowl: item):
    body:
        achieve has_water(bowl)
        # Fill the bowl with water

behavior place_bowl_on_table(bowl: item, table: item):
    body:
        achieve on(bowl, table)
        # Place the bowl on the table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select an instance of a bowl

        bind home_office: item where:
            is_home_office(home_office)

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table inside the home office

        fill_bowl_with_water(bowl)
        # Fill the bowl with water

        place_bowl_on_table(bowl, table)
        # Place the bowl on the table inside the home office

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_bowl_with_water(bowl: item):
    body:
        achieve has_water(bowl)
        # Fill the bowl with water

behavior place_bowl_on_table(bowl: item, table: item):
    body:
        achieve on(bowl, table)
        # Place the bowl on the table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select an instance of a bowl

        bind home_office: item where:
            is_home_office(home_office)

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table inside the home office

        fill_bowl_with_water(bowl)
        # Fill the bowl with water

        place_bowl_on_table(bowl, table)
        # Place the bowl on the table inside the home office

##############################
From agent.py-> find a plan in act()
grab_executor(bowl_2095)walk_executor(faucet_134)switchon_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(table_193)put_executor(bowl_2095, table_193)
##############################
From agent.py
grab_executor(bowl_2095)
Robot is inside home_office_161. Robot is close bowl_2095. Robot is close table_193. Grabbing bowl_2095 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close bowl_2095. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer inside home_office_161.Robot is no longer close table_193.
##############################
From agent.py
switchon_executor(faucet_134)
Robot is inside dining_room_1. Robot is close bowl_2095. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close bowl_2095. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(table_193)
Robot is inside home_office_161. Robot is close bowl_2095. Robot is close table_193. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
put_executor(bowl_2095, table_193)
Robot is inside home_office_161. Robot is close bowl_2095. Robot is close table_193. bowl_2095 released by right hand. 
##############################
From agent.py
Human Instruction: The bowl needs to be filled with water before being placed on the table. You turned the faucet off and on, but you did not specify filling the bowl with water. Ensure the bowl is filled, then place it on the table in the home office.

The actions you have taken:
Action 1: Walk to table_123.
Action 2: look for bowl_2095 around table_123.
Action 3: Walk to bowl_2095.
Action 4: Grab bowl_2095.
Action 5: Walk to faucet_134.
Action 6: Switch off faucet_134.
Action 7: Walk to table_193.
Action 8: Put bowl_2095 on table_193.
Action 9: Grab bowl_2095.
Action 10: Walk to faucet_134.
Action 11: Switch on faucet_134.
Action 12: Switch off faucet_134.
Action 13: Walk to table_193.
Action 14: Put bowl_2095 on table_193.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_lemon_2061_around_kitchen_counter_128(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_lemon,kitchen_counter_instance)
        else:
            exp(food_lemon,kitchen_counter_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_lemon]=True
    

behavior find_bowl_2095_around_table_127(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(bowl,table_instance)
        else:
            exp(bowl,table_instance)
    eff:
        unknown[bowl]=False
        close[bowl,table_instance]=True
        close[table_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_bowl_with_water(bowl: item):
    body:
        achieve has_water(bowl)
        # Fill the bowl with water

behavior place_bowl_on_table(bowl: item, table: item):
    body:
        achieve on(bowl, table)
        # Place the bowl on the table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select an instance of a bowl

        bind home_office: item where:
            is_home_office(home_office)

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table inside the home office

        fill_bowl_with_water(bowl)
        # Fill the bowl with water

        place_bowl_on_table(bowl, table)
        # Place the bowl on the table inside the home office

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_lemon_2061_around_fridge_140(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_lemon,fridge_instance)
        else:
            exp(food_lemon,fridge_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,fridge_instance]=True
        close[fridge_instance,food_lemon]=True
    

behavior find_phone_47_around_cpuscreen_383(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind cpuscreen_instance:item where:
            is_cpuscreen(cpuscreen_instance) and id[cpuscreen_instance]==383
        achieve close_char(char,cpuscreen_instance)
        if can_open(cpuscreen_instance):
            achieve_once open(cpuscreen_instance)
            exp(phone,cpuscreen_instance)
        else:
            exp(phone,cpuscreen_instance)
    eff:
        unknown[phone]=False
        close[phone,cpuscreen_instance]=True
        close[cpuscreen_instance,phone]=True
    

behavior find_dvd_player_2000_around_dvd_player_2000(dvd_player:item):
    goal: not unknown(dvd_player)
    body:
        assert is_dvd_player(dvd_player)
        bind dvd_player_instance:item where:
            is_dvd_player(dvd_player_instance) and id[dvd_player_instance]==2000
        achieve close_char(char,dvd_player_instance)
        if can_open(dvd_player_instance):
            achieve_once open(dvd_player_instance)
            exp(dvd_player,dvd_player_instance)
        else:
            exp(dvd_player,dvd_player_instance)
    eff:
        unknown[dvd_player]=False
        close[dvd_player,dvd_player_instance]=True
        close[dvd_player_instance,dvd_player]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_bowl_with_water(bowl: item, faucet: item):
    body:
        achieve_once is_on(faucet)
        achieve has_water(bowl)
        achieve_once is_off(faucet)

behavior place_bowl_on_table(bowl: item, table: item):
    body:
        achieve on(bowl, table)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2095
        # Select bowl with ID 2095

        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 134
        # Select faucet with ID 134

        bind home_office: item where:
            is_home_office(home_office)

        bind table: item where:
            is_table(table) and inside(table, home_office) and id[table] == 193
        # Select table with ID 193 inside the home office

        fill_bowl_with_water(bowl, faucet)
        place_bowl_on_table(bowl, table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_bowl_with_water(bowl: item, faucet: item):
    body:
        achieve_once is_on(faucet)
        achieve has_water(bowl)
        achieve_once is_off(faucet)

behavior place_bowl_on_table(bowl: item, table: item):
    body:
        achieve on(bowl, table)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2095
        # Select bowl with ID 2095

        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 134
        # Select faucet with ID 134

        bind home_office: item where:
            is_home_office(home_office)

        bind table: item where:
            is_table(table) and inside(table, home_office) and id[table] == 193
        # Select table with ID 193 inside the home office

        fill_bowl_with_water(bowl, faucet)
        place_bowl_on_table(bowl, table)

##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)switchon_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer inside home_office_161.Robot is no longer close table_193.Robot is no longer close bowl_2095.
##############################
From agent.py
switchon_executor(faucet_134)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2096_around_kitchen_counter_128(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
behavior find_cat_and_place_on_table(cat: item, table: item):
    body:
        achieve on(cat, table)

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat)
        # Select an instance of the cat

        bind home_office: item where:
            is_home_office(home_office)

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table inside the home office

        find_cat_and_place_on_table(cat, table)
        # Place the cat on the table in the home office
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior find_cat_and_place_on_table(cat: item, table: item):
    body:
        achieve on(cat, table)

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat)
        # Select an instance of the cat

        bind home_office: item where:
            is_home_office(home_office)

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table inside the home office

        find_cat_and_place_on_table(cat, table)
        # Place the cat on the table in the home office
##############################
From agent.py-> find a plan in act()
walk_executor(cat_2082)grab_executor(cat_2082)walk_executor(table_193)put_executor(cat_2082, table_193)
##############################
From agent.py
walk_executor(cat_2082)
Robot is inside home_office_161. Robot is close couch_192. Robot is close cat_2082. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
grab_executor(cat_2082)
Robot is inside home_office_161. Robot is close couch_192. Robot is close cat_2082. Grabbing cat_2082 by right hand. 
##############################
From agent.py
walk_executor(table_193)
Robot is inside home_office_161. Robot is close cat_2082. Robot is close table_193. Robot is no longer close couch_192.
##############################
From agent.py
put_executor(cat_2082, table_193)
Robot is inside home_office_161. Robot is close cat_2082. Robot is close table_193. cat_2082 released by right hand. 
##############################
