From agent.py
Reset goals: The sub-goals are: 
['1. Find the book.', '2. Put the book on the table in the bedroom.', '3. Turn on the light in the bedroom.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2136_around_bookshelf_275(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==275
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_book(book: item):
    body:
        achieve visited(book)

behavior __goal__():
    body:
        if exists book: item: is_book(book):
            bind book: item where:
                is_book(book)
            find_book(book)
        else:
            foreach book: item:
                if is_book(book) and not visited(book):
                    observe(book, "Locate the book")
 
#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_book(book: item):
    body:
        achieve visited(book)

behavior __goal__():
    body:
        if exists book: item: is_book(book):
            bind book: item where:
                is_book(book)
            find_book(book)
        else:
            foreach book: item:
                if is_book(book) and not visited(book):
                    observe(book, "Locate the book")
 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_275)exp(book_2136, bookshelf_275)walk_executor(book_2136)open_executor(book_2136)obs(book_2136, look around this place)
##############################
From agent.py
walk_executor(bookshelf_275)
Find pencil_2020. Robot is inside home_office_241. Robot is close bookshelf_275. Robot is close floor_262. Robot is no longer inside dining_room_41.
##############################
From agent.py
exp(book_2136, bookshelf_275)
Fail to find book_2136 around bookshelf_275. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_124)open_executor(bookshelf_124)exp(book_2136, bookshelf_124)walk_executor(book_2136)open_executor(book_2136)obs(book_2136, look around this place)
##############################
From agent.py
walk_executor(bookshelf_124)
Find drawing_110. Find book_2136. Find envelope_2055. Find book_2137. Find drawing_111. Robot is inside dining_room_41. Robot is close floor_42. Robot is close floor_43. Robot is close bookshelf_124. Robot is no longer inside home_office_241.Robot is no longer close bookshelf_275.Robot is no longer close floor_262.
##############################
From agent.py
open_executor(bookshelf_124)
Robot is inside dining_room_41. Robot is close floor_42. Robot is close floor_43. Robot is close bookshelf_124. 
##############################
From agent.py
exp(book_2136, bookshelf_124)
Find book_2136. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2136)open_executor(book_2136)obs(book_2136, look around this place)
##############################
From agent.py
walk_executor(book_2136)
Robot is inside dining_room_41. Robot is close bookshelf_124. Robot is close book_2136. Robot is no longer close floor_42.Robot is no longer close floor_43.
##############################
From agent.py
open_executor(book_2136)
Robot is inside dining_room_41. Robot is close bookshelf_124. Robot is close book_2136. 
##############################
From agent.py
obs(book_2136, look around this place)
Get this information:  book_2136 is inside dining_room_41. book_2136 is on bookshelf_124. book_2136 is close to bookshelf_124. book_2136 is close to character_240. book_2136 is OPEN.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_novel_2060_around_bookshelf_196(novel:item):
    goal: not unknown(novel)
    body:
        assert is_novel(novel)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==196
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(novel,bookshelf_instance)
        else:
            exp(novel,bookshelf_instance)
    eff:
        unknown[novel]=False
        close[novel,bookshelf_instance]=True
        close[bookshelf_instance,novel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_book_on_table(book: item, table: item):
    body:
        achieve on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2136
        # Select the specific instance of the book with ID 2136

        bind bedroom: item where:
            is_bedroom(bedroom)
        # Select the bedroom

        bind table: item where:
            is_table(table) and inside(table, bedroom)
        # Select a table inside the bedroom

        put_book_on_table(book, table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior put_book_on_table(book: item, table: item):
    body:
        achieve on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2136
        # Select the specific instance of the book with ID 2136

        bind bedroom: item where:
            is_bedroom(bedroom)
        # Select the bedroom

        bind table: item where:
            is_table(table) and inside(table, bedroom)
        # Select a table inside the bedroom

        put_book_on_table(book, table)

##############################
From agent.py-> find a plan in act()
grab_executor(book_2136)walk_executor(table_199)put_executor(book_2136, table_199)
##############################
From agent.py
grab_executor(book_2136)
Robot is inside dining_room_41. Robot is close bookshelf_124. Robot is close book_2136. Grabbing book_2136 by right hand. 
##############################
From agent.py
walk_executor(table_199)
Find mat_203. Find wooden_spoon_2000. Find drawing_201. Find drawing_202. Find tea_bag_2023. Robot is inside bedroom_162. Robot is close book_2136. Robot is close table_199. Robot is no longer inside dining_room_41.Robot is no longer close bookshelf_124.
##############################
From agent.py
put_executor(book_2136, table_199)
Robot is inside bedroom_162. Robot is close book_2136. Robot is close table_199. book_2136 released by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_194_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior turn_on_light_in_bedroom(light: item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        
        bind light: item where:
            is_light(light) and inside(light, bedroom)
        
        turn_on_light_in_bedroom(light)
 
#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior turn_on_light_in_bedroom(light: item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        
        bind light: item where:
            is_light(light) and inside(light, bedroom)
        
        turn_on_light_in_bedroom(light)
 
##############################
From agent.py-> find a plan in act()
walk_executor(light_212)switchon_executor(light_212)
##############################
From agent.py
walk_executor(light_212)
Robot is inside bedroom_162. Robot is close light_212. Robot is no longer close book_2136.Robot is no longer close table_199.
##############################
From agent.py
switchon_executor(light_212)
Robot is inside bedroom_162. Robot is close light_212. 
##############################
