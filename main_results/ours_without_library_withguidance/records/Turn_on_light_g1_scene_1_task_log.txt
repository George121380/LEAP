From agent.py
Reset goals: The sub-goals are: 
['Turn on the lights in the bathroom.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_blow_dryer_2057_around_bathroom_counter_18(blow_dryer:item):
    goal: not unknown(blow_dryer)
    body:
        assert is_blow_dryer(blow_dryer)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(blow_dryer,bathroom_counter_instance)
        else:
            exp(blow_dryer,bathroom_counter_instance)
    eff:
        unknown[blow_dryer]=False
        close[blow_dryer,bathroom_counter_instance]=True
        close[bathroom_counter_instance,blow_dryer]=True
    

behavior find_shampoo_2019_around_shower_21(shampoo:item):
    goal: not unknown(shampoo)
    body:
        assert is_shampoo(shampoo)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==21
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(shampoo,shower_instance)
        else:
            exp(shampoo,shower_instance)
    eff:
        unknown[shampoo]=False
        close[shampoo,shower_instance]=True
        close[shower_instance,shampoo]=True
    

#exp_behavior_end

#goal_representation
 
behavior turn_on_light_in_bathroom(light: item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)

        bind light: item where:
            is_light(light) and inside(light, bathroom)

        turn_on_light_in_bathroom(light)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior turn_on_light_in_bathroom(light: item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)

        bind light: item where:
            is_light(light) and inside(light, bathroom)

        turn_on_light_in_bathroom(light)

##############################
From agent.py-> find a plan in act()
walk_executor(light_39)switchon_executor(light_39)
##############################
From agent.py
walk_executor(light_39)
Robot is inside bathroom_1. Robot is close light_39. Robot is no longer inside dining_room_41.
##############################
From agent.py
switchon_executor(light_39)
Find pillow_108. Find drawing_111. Robot is inside bathroom_1. Robot is close light_39. 
##############################
