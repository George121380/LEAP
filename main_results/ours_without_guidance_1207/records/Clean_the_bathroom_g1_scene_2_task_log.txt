From agent.py
Reset goals: The sub-goals are: 
['Clean the bathroom sink directly.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2098_around_bathroom_cabinet_305(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

behavior find_soap_2038_around_bathroom_counter_306(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_detergent_2108_around_bathroom_cabinet_305(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
def has_faucet(sink:item):
    # Function to determine whether the sink has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet,sink)
    return has_faucet

behavior clean_sink(sink:item):
    body:
        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet,sink)
            achieve_once is_on(faucet)
            wash(sink)
            achieve_once is_off(faucet)
        else:
            wash(sink)

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink)
        clean_sink(sink)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_faucet(sink:item):
    # Function to determine whether the sink has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet,sink)
    return has_faucet

behavior clean_sink(sink:item):
    body:
        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet,sink)
            achieve_once is_on(faucet)
            wash(sink)
            achieve_once is_off(faucet)
        else:
            wash(sink)

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink)
        clean_sink(sink)

##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)wash_executor(sink_133)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(sink_133)
Find juice_2034. Find pot_54. Find after_shave_2029. Find cleaning_solution_2098. Find tray_142. Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close sink_133. Robot is no longer inside home_office_161.
##############################
From agent.py
wash_executor(sink_133)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close sink_133. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close sink_133.
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
