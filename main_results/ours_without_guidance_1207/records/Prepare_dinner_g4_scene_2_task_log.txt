From agent.py
Reset goals: The sub-goals are: 
['1. Find rice and eggs needed for the recipe.', '2. Cook the rice and fry the eggs.', '3. Combine the cooked rice and fried eggs in a pan, and stir-fry them together.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_food_rice_2067_around_cupboard_131(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_rice,cupboard_instance)
        else:
            exp(food_rice,cupboard_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,cupboard_instance]=True
        close[cupboard_instance,food_rice]=True
    

#exp_behavior_end

#goal_representation
behavior find_items_and_observe(rice:item, "egg:item"):
    body:
        if not visited(rice):
            observe(rice, "Locate the rice needed for the recipe")
        if not visited(egg):
            observe(egg, "Locate the eggs needed for the recipe")

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select rice

        bind egg: item where:
            is_food_egg(egg)
        # Select egg

        find_items_and_observe(rice, "egg")
        # Find rice and eggs by observing if not already located
#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('STRING', '"egg:item"') at line 5880, column 44.
Expected one of: 
	* VARNAME
Previous tokens: [Token('COMMA', ',')]

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_egg_2053_around_kitchen_counter_132(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_egg,kitchen_counter_instance)
        else:
            exp(food_egg,kitchen_counter_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_egg]=True
    

behavior find_food_rice_2067_around_cupboard_131(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_rice,cupboard_instance)
        else:
            exp(food_rice,cupboard_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,cupboard_instance]=True
        close[cupboard_instance,food_rice]=True
    

#goal_representation

behavior find_items_and_observe(rice:item, "egg:item"):
    body:
        if not visited(rice):
            observe(rice, "Locate the rice needed for the recipe")
        if not visited(egg):
            observe(egg, "Locate the eggs needed for the recipe")

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select rice

        bind egg: item where:
            is_food_egg(egg)
        # Select egg

        find_items_and_observe(rice, "egg")
        # Find rice and eggs by observing if not already located

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('STRING', '"egg:item"') at line 5881, column 44.
Expected one of: 
	* VARNAME
Previous tokens: [Token('COMMA', ',')]

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_rice_2067_around_cupboard_131(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_rice,cupboard_instance)
        else:
            exp(food_rice,cupboard_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,cupboard_instance]=True
        close[cupboard_instance,food_rice]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#goal_representation
behavior find_items_and_observe(rice:item, "egg:item"):
    body:
        if not visited(rice):
            observe(rice, "Locate the rice needed for the recipe")
        if not visited(egg):
            observe(egg, "Locate the eggs needed for the recipe")

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select rice

        bind egg: item where:
            is_food_egg(egg)
        # Select egg

        find_items_and_observe(rice, "egg")
        # Find rice and eggs by observing if not already located
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_food_rice_2067_around_cupboard_131(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_rice,cupboard_instance)
        else:
            exp(food_rice,cupboard_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,cupboard_instance]=True
        close[cupboard_instance,food_rice]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_collect_rice_and_eggs(rice:item, eggs:item):
    body:
        achieve inhand(rice)
        achieve inhand(eggs)

behavior locate_rice_and_eggs():
    body:
        foreach item: item:
            if is_food_rice(item) or is_food_egg(item):
                observe(item, "Inspect for the presence of rice or eggs")
            
        if exists r: item: is_food_rice(r):
            bind rice: item where:
                is_food_rice(rice)
            
        if exists e: item: is_food_egg(e):
            bind eggs: item where:
                is_food_egg(eggs)

behavior __goal__():
    body:
        locate_rice_and_eggs()
        bind rice: item where:
            is_food_rice(rice)
        bind eggs: item where:
            is_food_egg(eggs)
        find_and_collect_rice_and_eggs(rice, eggs)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_and_collect_rice_and_eggs(rice:item, eggs:item):
    body:
        achieve inhand(rice)
        achieve inhand(eggs)

behavior locate_rice_and_eggs():
    body:
        foreach item: item:
            if is_food_rice(item) or is_food_egg(item):
                observe(item, "Inspect for the presence of rice or eggs")
            
        if exists r: item: is_food_rice(r):
            bind rice: item where:
                is_food_rice(rice)
            
        if exists e: item: is_food_egg(e):
            bind eggs: item where:
                is_food_egg(eggs)

behavior __goal__():
    body:
        locate_rice_and_eggs()
        bind rice: item where:
            is_food_rice(rice)
        bind eggs: item where:
            is_food_egg(eggs)
        find_and_collect_rice_and_eggs(rice, eggs)

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)obs(food_egg_2053, Inspect for the presence of rice or eggs)walk_executor(cupboard_131)open_executor(cupboard_131)exp(food_rice_2067, cupboard_131)walk_executor(food_rice_2067)obs(food_rice_2067, Inspect for the presence of rice or eggs)grab_executor(food_rice_2067)walk_executor(food_egg_2053)grab_executor(food_egg_2053)
##############################
From agent.py
walk_executor(fridge_140)
Find food_cereal_2048. Find food_cheese_2049. Find food_chicken_2050. Find food_dessert_2051. Find food_donut_2052. Find food_egg_2053. Find food_fish_2054. Find food_food_2055. Find food_fruit_2056. Find food_hamburger_2057. Find food_ice_cream_2058. Find food_jam_2059. Find food_kiwi_2060. Find food_lemon_2061. Find food_noodles_2062. Find food_oatmeal_2063. Find food_peanut_butter_2064. Find food_pizza_2065. Find food_potato_2066. Find food_rice_2067. Find food_salt_2068. Find food_snack_2069. Find food_sugar_2070. Find food_turkey_2071. Find food_vegetable_2072. Find dry_pasta_2073. Find milk_2074. Find sauce_2101. Find food_steak_2042. Find food_apple_2043. Find food_bacon_2044. Find food_banana_2045. Find food_cake_2046. Find food_carrot_2047. Find chair_138. Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Robot is no longer inside home_office_161.
##############################
From agent.py
switchoff_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
open_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
exp(food_egg_2053, fridge_140)
Find food_egg_2053. 
##############################
From agent.py-> find a plan in act()
obs(food_egg_2053, Inspect for the presence of rice or eggs)obs(food_rice_2067, Inspect for the presence of rice or eggs)grab_executor(food_rice_2067)grab_executor(food_egg_2053)
##############################
From agent.py
obs(food_egg_2053, Inspect for the presence of rice or eggs)
Get this information:  food_egg_2053 is close to fridge_140. food_egg_2053 is close to character_219. food_egg_2053 is inside dining_room_1. food_egg_2053 is inside fridge_140. food_egg_2053 is CLEAN.
##############################
From agent.py
obs(food_rice_2067, Inspect for the presence of rice or eggs)
Get this information:  food_rice_2067 is close to fridge_140. food_rice_2067 is close to character_219. food_rice_2067 is inside dining_room_1. food_rice_2067 is inside fridge_140. food_rice_2067 is CLEAN.
##############################
From agent.py
grab_executor(food_rice_2067)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Grabbing food_rice_2067 by right hand. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Grabbing food_egg_2053 by left hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2107_around_cupboard_131(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(fryingpan,cupboard_instance)
        else:
            exp(fryingpan,cupboard_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,cupboard_instance]=True
        close[cupboard_instance,fryingpan]=True
    

behavior find_pot_2093_around_stove_2090(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(pot,stove_instance)
        else:
            exp(pot,stove_instance)
    eff:
        unknown[pot]=False
        close[pot,stove_instance]=True
        close[stove_instance,pot]=True
    

#exp_behavior_end

#goal_representation
 
behavior cook_rice(rice:item, pot:item, sink:item, stove:item):
    body:
        achieve inside(rice, pot)
        # Add the rice inside the pot
        
        achieve has_water(pot)
        # Ensure the pot is filled with water by using the sink

        achieve on(pot, stove)
        # Place the pot on the stove

        achieve is_on(stove)
        # Turn on the stove to cook the rice

behavior fry_eggs(egg:item, fryingpan:item, stove:item):
    body:
        achieve inside(egg, fryingpan)
        # Place the eggs inside the frying pan
        
        achieve on(fryingpan, stove)
        # Place the frying pan on the stove

        achieve is_on(stove)
        # Turn on the stove to fry the eggs

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select the rice

        bind egg: item where:
            is_food_egg(egg)
        # Select the eggs

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind sink: item where:
            is_sink(sink)
        # Select a sink

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select the frying pan

        cook_rice(rice, pot, sink, stove)
        fry_eggs(egg, fryingpan, stove)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior cook_rice(rice:item, pot:item, sink:item, stove:item):
    body:
        achieve inside(rice, pot)
        # Add the rice inside the pot
        
        achieve has_water(pot)
        # Ensure the pot is filled with water by using the sink

        achieve on(pot, stove)
        # Place the pot on the stove

        achieve is_on(stove)
        # Turn on the stove to cook the rice

behavior fry_eggs(egg:item, fryingpan:item, stove:item):
    body:
        achieve inside(egg, fryingpan)
        # Place the eggs inside the frying pan
        
        achieve on(fryingpan, stove)
        # Place the frying pan on the stove

        achieve is_on(stove)
        # Turn on the stove to fry the eggs

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select the rice

        bind egg: item where:
            is_food_egg(egg)
        # Select the eggs

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind sink: item where:
            is_sink(sink)
        # Select a sink

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select the frying pan

        cook_rice(rice, pot, sink, stove)
        fry_eggs(egg, fryingpan, stove)

##############################
From agent.py-> find a plan in act()
walk_executor(stove_2090)put_executor(food_egg_2053, stove_2090)open_executor(stove_2090)exp(pot_2093, stove_2090)walk_executor(pot_2093)open_executor(pot_2093)putin_executor(food_rice_2067, pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)close_executor(stove_2090)switchon_executor(stove_2090)walk_executor(cupboard_131)open_executor(cupboard_131)exp(fryingpan_2107, cupboard_131)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)
##############################
From agent.py
walk_executor(stove_2090)
Find pot_54. Find pot_2093. Find tray_142. Find oil_2102. Find fryingpan_2107. Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close food_rice_2067. Robot is close kitchen_counter_129. Robot is close stove_2090. Robot is no longer close food_cereal_2048.Robot is no longer close food_cheese_2049.Robot is no longer close food_chicken_2050.Robot is no longer close food_dessert_2051.Robot is no longer close food_donut_2052.Robot is no longer close food_fish_2054.Robot is no longer close food_food_2055.Robot is no longer close food_fruit_2056.Robot is no longer close food_hamburger_2057.Robot is no longer close food_ice_cream_2058.Robot is no longer close food_jam_2059.Robot is no longer close food_kiwi_2060.Robot is no longer close food_lemon_2061.Robot is no longer close food_noodles_2062.Robot is no longer close food_oatmeal_2063.Robot is no longer close food_peanut_butter_2064.Robot is no longer close food_pizza_2065.Robot is no longer close food_potato_2066.Robot is no longer close food_salt_2068.Robot is no longer close food_snack_2069.Robot is no longer close food_sugar_2070.Robot is no longer close food_turkey_2071.Robot is no longer close food_vegetable_2072.Robot is no longer close dry_pasta_2073.Robot is no longer close milk_2074.Robot is no longer close floor_22.Robot is no longer close sauce_2101.Robot is no longer close fridge_140.Robot is no longer close food_steak_2042.Robot is no longer close food_apple_2043.Robot is no longer close food_bacon_2044.Robot is no longer close food_banana_2045.Robot is no longer close food_cake_2046.Robot is no longer close food_carrot_2047.
##############################
From agent.py
put_executor(food_egg_2053, stove_2090)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close food_rice_2067. Robot is close kitchen_counter_129. Robot is close stove_2090. food_egg_2053 released by left hand. 
##############################
From agent.py
open_executor(stove_2090)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close food_rice_2067. Robot is close kitchen_counter_129. Robot is close stove_2090. 
##############################
From agent.py
exp(pot_2093, stove_2090)
Find pot_2093. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_2093)open_executor(pot_2093)putin_executor(food_rice_2067, pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)close_executor(stove_2090)switchon_executor(stove_2090)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)
##############################
From agent.py
walk_executor(pot_2093)
Robot is inside dining_room_1. Robot is close food_rice_2067. Robot is close kitchen_counter_129. Robot is close pot_2093. Robot is no longer close stove_2090.Robot is no longer close food_egg_2053.
##############################
From agent.py
open_executor(pot_2093)
Robot is inside dining_room_1. Robot is close food_rice_2067. Robot is close kitchen_counter_129. Robot is close pot_2093. 
##############################
From agent.py
putin_executor(food_rice_2067, pot_2093)
Robot is inside dining_room_1. Robot is close food_rice_2067. Robot is close kitchen_counter_129. Robot is close pot_2093. food_rice_2067 released by right hand. 
##############################
From agent.py
grab_executor(pot_2093)
Robot is inside dining_room_1. Robot is close food_rice_2067. Robot is close kitchen_counter_129. Robot is close pot_2093. Grabbing pot_2093 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close kitchen_counter_129.Robot is no longer close food_rice_2067.
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(stove_2090)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_129. Robot is close stove_2090. Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
put_executor(pot_2093, stove_2090)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_129. Robot is close stove_2090. pot_2093 released by right hand. 
##############################
From agent.py
close_executor(stove_2090)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_129. Robot is close stove_2090. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_129. Robot is close stove_2090. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close pot_2093. Robot is close kitchen_counter_129. Robot is close stove_2090. Robot is close food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close food_egg_2053. Robot is close fryingpan_2107. Robot is no longer close stove_2090.Robot is no longer close pot_2093.
##############################
From agent.py
putin_executor(food_egg_2053, fryingpan_2107)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close food_egg_2053. Robot is close fryingpan_2107. food_egg_2053 released by right hand. 
##############################
From agent.py
grab_executor(fryingpan_2107)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close food_egg_2053. Robot is close fryingpan_2107. Grabbing fryingpan_2107 by right hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Robot is close stove_2090. Robot is no longer close food_egg_2053.
##############################
From agent.py
put_executor(fryingpan_2107, stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Robot is close stove_2090. fryingpan_2107 released by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2102_around_cupboard_131(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(oil,cupboard_instance)
        else:
            exp(oil,cupboard_instance)
    eff:
        unknown[oil]=False
        close[oil,cupboard_instance]=True
        close[cupboard_instance,oil]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_bowl_2095_around_kitchen_counter_128(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior combine_rice_and_eggs(rice:item, egg:item, fryingpan:item):
    body:
        achieve inside(rice, fryingpan) # Place cooked rice into the frying pan
        achieve inside(egg, fryingpan) # Place fried eggs into the frying pan

behavior stir_fry_panfried_contents(fryingpan:item):
    body:
        achieve is_on(fryingpan) # Ensure the frying pan is on the stove

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select the cooked rice

        bind egg: item where:
            is_food_egg(egg)
        # Select the fried eggs

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select the frying pan

        combine_rice_and_eggs(rice, egg, fryingpan)
        stir_fry_panfried_contents(fryingpan)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2005_around_cupboard_131(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(oil,cupboard_instance)
        else:
            exp(oil,cupboard_instance)
    eff:
        unknown[oil]=False
        close[oil,cupboard_instance]=True
        close[cupboard_instance,oil]=True
    

#exp_behavior_end

#goal_representation
behavior combine_rice_and_egg_in_pan(rice:item, egg:item, fryingpan:item):
    body:
        achieve inside(rice, fryingpan) # Place the cooked rice into the frying pan
        achieve inside(egg, fryingpan) # Place the fried eggs into the frying pan

behavior stir_fry_items_in_pan(fryingpan:item):
    body:
        achieve is_on(fryingpan) # Ensure the frying pan is on the stove

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice) and not cut(rice)
        # Select the cooked rice

        bind egg: item where:
            is_food_egg(egg)
        # Select the fried eggs

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select the frying pan

        combine_rice_and_egg_in_pan(rice, egg, fryingpan)
        stir_fry_items_in_pan(fryingpan)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_dough_2021_around_cupboard_131(dough:item):
    goal: not unknown(dough)
    body:
        assert is_dough(dough)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(dough,cupboard_instance)
        else:
            exp(dough,cupboard_instance)
    eff:
        unknown[dough]=False
        close[dough,cupboard_instance]=True
        close[cupboard_instance,dough]=True
    

behavior find_blender_2032_around_kitchen_counter_128(blender:item):
    goal: not unknown(blender)
    body:
        assert is_blender(blender)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(blender,kitchen_counter_instance)
        else:
            exp(blender,kitchen_counter_instance)
    eff:
        unknown[blender]=False
        close[blender,kitchen_counter_instance]=True
        close[kitchen_counter_instance,blender]=True
    

#exp_behavior_end

#goal_representation
 
behavior combine_rice_and_eggs(rice:item, eggs:item, pan:item):
    body:
        achieve inside(rice, pan) # Ensure that the rice is inside the pan
        achieve inside(eggs, pan) # Ensure that the eggs are inside the pan

behavior stir_fry_rice_and_eggs(pan:item, stove:item):
    body:
        achieve on(pan, stove) # Place the pan on the stove
        achieve is_on(stove) # Ensure the stove is turned on

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select the cooked rice

        bind eggs: item where:
            is_food_egg(eggs)
        # Select the fried eggs

        bind pan: item where:
            is_fryingpan(pan)
        # Select the frying pan
        
        bind stove: item where:
            is_stove(stove)
        # Select the stove

        combine_rice_and_eggs(rice, eggs, pan)
        stir_fry_rice_and_eggs(pan, stove)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior combine_rice_and_eggs(rice:item, eggs:item, pan:item):
    body:
        achieve inside(rice, pan) # Ensure that the rice is inside the pan
        achieve inside(eggs, pan) # Ensure that the eggs are inside the pan

behavior stir_fry_rice_and_eggs(pan:item, stove:item):
    body:
        achieve on(pan, stove) # Place the pan on the stove
        achieve is_on(stove) # Ensure the stove is turned on

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select the cooked rice

        bind eggs: item where:
            is_food_egg(eggs)
        # Select the fried eggs

        bind pan: item where:
            is_fryingpan(pan)
        # Select the frying pan
        
        bind stove: item where:
            is_stove(stove)
        # Select the stove

        combine_rice_and_eggs(rice, eggs, pan)
        stir_fry_rice_and_eggs(pan, stove)

##############################
From agent.py-> find a plan in act()
walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(fryingpan_2107)putin_executor(food_rice_2067, fryingpan_2107)
##############################
From agent.py
walk_executor(food_rice_2067)
Robot is inside dining_room_1. Robot is close food_rice_2067. Robot is close pot_2093. Robot is no longer close kitchen_counter_129.Robot is no longer close stove_2090.Robot is no longer close fryingpan_2107.
##############################
From agent.py
grab_executor(food_rice_2067)
Robot is inside dining_room_1. Robot is close food_rice_2067. Robot is close pot_2093. Grabbing food_rice_2067 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot is inside dining_room_1. Robot is close food_rice_2067. Robot is close stove_2090. Robot is close fryingpan_2107. Robot is no longer close pot_2093.
##############################
From agent.py
putin_executor(food_rice_2067, fryingpan_2107)
Robot is inside dining_room_1. Robot is close food_rice_2067. Robot is close stove_2090. Robot is close fryingpan_2107. food_rice_2067 released by right hand. 
##############################
