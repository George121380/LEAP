From agent.py
Reset goals: The sub-goals are: 
['1. Find the shirt and the skirt.', '2. Iron the shirt and the skirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_skirt_2116_around_nightstand_262(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==262
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(clothes_skirt,nightstand_instance)
        else:
            exp(clothes_skirt,nightstand_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,nightstand_instance]=True
        close[nightstand_instance,clothes_skirt]=True
    

behavior find_clothes_shirt_2114_around_bed_376(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(clothes_shirt,bed_instance)
        else:
            exp(clothes_shirt,bed_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,bed_instance]=True
        close[bed_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothing_found(clothing:item):
    # Check if the clothes have been found by the character
    symbol clothing_found=visited(clothing)
    return clothing_found

behavior find_shirt_and_skirt(shirt:item, skirt:item):
    body:
        if not is_clothing_found(shirt):
            # If the shirt has not been found
            observe(shirt, "Locate the shirt")
        if not is_clothing_found(skirt):
            # If the skirt has not been found
            observe(skirt, "Locate the skirt")

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select a shirt
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select a skirt
        find_shirt_and_skirt(shirt, skirt)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_clothing_found(clothing:item):
    # Check if the clothes have been found by the character
    symbol clothing_found=visited(clothing)
    return clothing_found

behavior find_shirt_and_skirt(shirt:item, skirt:item):
    body:
        if not is_clothing_found(shirt):
            # If the shirt has not been found
            observe(shirt, "Locate the shirt")
        if not is_clothing_found(skirt):
            # If the skirt has not been found
            observe(skirt, "Locate the skirt")

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select a shirt
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select a skirt
        find_shirt_and_skirt(shirt, skirt)

##############################
From agent.py-> find a plan in act()
walk_executor(bed_376)exp(clothes_shirt_2114, bed_376)walk_executor(clothes_shirt_2114)obs(clothes_shirt_2114, Locate the shirt)walk_executor(nightstand_262)exp(clothes_skirt_2116, nightstand_262)walk_executor(clothes_skirt_2116)obs(clothes_skirt_2116, Locate the skirt)
##############################
From agent.py
walk_executor(bed_376)
Find mat_386. Find drawing_389. Find drawing_388. Find pillow_368. Find pillow_370. Robot is inside bedroom_327. Robot is close bed_376. Robot is close floor_330. Robot is close mat_386. Robot is no longer inside home_office_161.
##############################
From agent.py
exp(clothes_shirt_2114, bed_376)
Failed to find clothes_shirt_2114 around bed_376. 
##############################
From agent.py-> find a plan in act()
walk_executor(bed_264)exp(clothes_shirt_2114, bed_264)walk_executor(clothes_shirt_2114)obs(clothes_shirt_2114, Locate the shirt)walk_executor(bed_264)exp(clothes_skirt_2116, bed_264)walk_executor(clothes_skirt_2116)obs(clothes_skirt_2116, Locate the skirt)
##############################
From agent.py
walk_executor(bed_264)
Find mat_237. Find clothes_dress_2075. Find pillow_240. Find clothes_jacket_2078. Find drawing_238. Find clothes_scarf_2079. Find pillow_239. Robot is inside bedroom_220. Robot is close bed_264. Robot is no longer inside bedroom_327.Robot is no longer close bed_376.Robot is no longer close floor_330.Robot is no longer close mat_386.
##############################
From agent.py
exp(clothes_shirt_2114, bed_264)
Failed to find clothes_shirt_2114 around bed_264. 
##############################
From agent.py-> find a plan in act()
walk_executor(desk_375)exp(clothes_shirt_2114, desk_375)walk_executor(clothes_shirt_2114)obs(clothes_shirt_2114, Locate the shirt)walk_executor(nightstand_373)exp(clothes_skirt_2116, nightstand_373)walk_executor(clothes_skirt_2116)obs(clothes_skirt_2116, Locate the skirt)
##############################
From agent.py
walk_executor(desk_375)
Find keyboard_382. Find glue_2013. Find mouse_380. Find chair_374. Robot is inside bedroom_327. Robot is close floor_337. Robot is close desk_375. Robot is no longer inside bedroom_220.Robot is no longer close bed_264.
##############################
From agent.py
exp(clothes_shirt_2114, desk_375)
Failed to find clothes_shirt_2114 around desk_375. 
##############################
From agent.py-> find a plan in act()
walk_executor(nightstand_262)exp(clothes_shirt_2114, nightstand_262)walk_executor(clothes_shirt_2114)obs(clothes_shirt_2114, Locate the shirt)walk_executor(dresser_377)exp(clothes_skirt_2116, dresser_377)walk_executor(clothes_skirt_2116)obs(clothes_skirt_2116, Locate the skirt)
##############################
From agent.py
walk_executor(nightstand_262)
Find headset_2086. Robot is inside bedroom_220. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. Robot is no longer inside bedroom_327.Robot is no longer close floor_337.Robot is no longer close desk_375.
##############################
From agent.py
exp(clothes_shirt_2114, nightstand_262)
Failed to find clothes_shirt_2114 around nightstand_262. 
##############################
From agent.py-> find a plan in act()
walk_executor(nightstand_373)exp(clothes_shirt_2114, nightstand_373)walk_executor(clothes_shirt_2114)obs(clothes_shirt_2114, Locate the shirt)walk_executor(dresser_377)exp(clothes_skirt_2116, dresser_377)walk_executor(clothes_skirt_2116)obs(clothes_skirt_2116, Locate the skirt)
##############################
From agent.py
walk_executor(nightstand_373)
Find coin_2004. Robot is inside bedroom_327. Robot is close floor_330. Robot is close nightstand_373. Robot is no longer inside bedroom_220.Robot is no longer close floor_221.Robot is no longer close floor_222.Robot is no longer close nightstand_262.
##############################
From agent.py
exp(clothes_shirt_2114, nightstand_373)
Failed to find clothes_shirt_2114 around nightstand_373. 
##############################
From agent.py-> find a plan in act()
walk_executor(desk_261)exp(clothes_shirt_2114, desk_261)walk_executor(clothes_shirt_2114)obs(clothes_shirt_2114, Locate the shirt)walk_executor(ironing_board_2099)exp(clothes_skirt_2116, ironing_board_2099)walk_executor(clothes_skirt_2116)obs(clothes_skirt_2116, Locate the skirt)
##############################
From agent.py
walk_executor(desk_261)
Find chair_263. Robot is inside bedroom_220. Robot is close desk_261. Robot is close floor_223. Robot is no longer inside bedroom_327.Robot is no longer close floor_330.Robot is no longer close nightstand_373.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2114 ?
Answer: Robot, you can find the target item, clothes_shirt_2114, inside the bathroom_265. It is placed inside basket_for_clothes_2040. Please retrieve it from there.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, you can find the target item, clothes_shirt_2114, inside the bathroom_265. It is placed inside basket_for_clothes_2040. Please retrieve it from there.

The actions you have taken:
Action 1: Walk to bed_376.
Action 2: look for clothes_shirt_2114 around bed_376.
Action 3: Walk to bed_264.
Action 4: look for clothes_shirt_2114 around bed_264.
Action 5: Walk to desk_375.
Action 6: look for clothes_shirt_2114 around desk_375.
Action 7: Walk to nightstand_262.
Action 8: look for clothes_shirt_2114 around nightstand_262.
Action 9: Walk to nightstand_373.
Action 10: look for clothes_shirt_2114 around nightstand_373.
Action 11: Walk to desk_261.

##############################
From agent.py
exp(clothes_shirt_2114, desk_261)
Failed to find clothes_shirt_2114 around desk_261. 
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2041)open_executor(washing_machine_2041)exp(clothes_shirt_2114, washing_machine_2041)walk_executor(clothes_shirt_2114)obs(clothes_shirt_2114, Locate the shirt)walk_executor(washing_machine_2041)exp(clothes_skirt_2116, washing_machine_2041)walk_executor(clothes_skirt_2116)obs(clothes_skirt_2116, Locate the skirt)
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot is inside bathroom_265. Robot is close washing_machine_2041. Robot is no longer inside bedroom_220.Robot is no longer close desk_261.Robot is no longer close floor_223.
##############################
From agent.py
open_executor(washing_machine_2041)
Robot is inside bathroom_265. Robot is close washing_machine_2041. 
##############################
From agent.py
exp(clothes_shirt_2114, washing_machine_2041)
Failed to find clothes_shirt_2114 around washing_machine_2041. 
##############################
From agent.py-> find a plan in act()
walk_executor(toilet_302)open_executor(toilet_302)exp(clothes_shirt_2114, toilet_302)walk_executor(clothes_shirt_2114)obs(clothes_shirt_2114, Locate the shirt)walk_executor(bathroom_counter_306)exp(clothes_skirt_2116, bathroom_counter_306)walk_executor(clothes_skirt_2116)obs(clothes_skirt_2116, Locate the skirt)
##############################
From agent.py
walk_executor(toilet_302)
Robot is inside bathroom_265. Robot is close toilet_302. Robot is no longer close washing_machine_2041.
##############################
From agent.py
open_executor(toilet_302)
Robot is inside bathroom_265. Robot is close toilet_302. 
##############################
From agent.py
exp(clothes_shirt_2114, toilet_302)
Failed to find clothes_shirt_2114 around toilet_302. 
##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_cabinet_305)open_executor(bathroom_cabinet_305)exp(clothes_shirt_2114, bathroom_cabinet_305)walk_executor(clothes_shirt_2114)obs(clothes_shirt_2114, Locate the shirt)walk_executor(bathroom_cabinet_305)exp(clothes_skirt_2116, bathroom_cabinet_305)walk_executor(clothes_skirt_2116)obs(clothes_skirt_2116, Locate the skirt)
##############################
From agent.py
walk_executor(bathroom_cabinet_305)
Find soap_2038. Find drawing_296. Find towel_rack_298. Robot is inside bathroom_265. Robot is close bathroom_cabinet_305. Robot is close wall_269. Robot is close soap_2038. Robot is no longer close toilet_302.
##############################
From agent.py
open_executor(bathroom_cabinet_305)
Robot is inside bathroom_265. Robot is close bathroom_cabinet_305. Robot is close wall_269. Robot is close soap_2038. 
##############################
From agent.py
exp(clothes_shirt_2114, bathroom_cabinet_305)
Failed to find clothes_shirt_2114 around bathroom_cabinet_305. 
##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_counter_306)exp(clothes_shirt_2114, bathroom_counter_306)walk_executor(clothes_shirt_2114)obs(clothes_shirt_2114, Locate the shirt)walk_executor(ironing_board_2099)exp(clothes_skirt_2116, ironing_board_2099)walk_executor(clothes_skirt_2116)obs(clothes_skirt_2116, Locate the skirt)
##############################
From agent.py
walk_executor(bathroom_counter_306)
Robot is inside bathroom_265. Robot is close bathroom_counter_306. Robot is no longer close bathroom_cabinet_305.Robot is no longer close wall_269.Robot is no longer close soap_2038.
##############################
From agent.py
exp(clothes_shirt_2114, bathroom_counter_306)
Failed to find clothes_shirt_2114 around bathroom_counter_306. 
##############################
From agent.py-> find a plan in act()
walk_executor(photoframe_246)exp(clothes_shirt_2114, photoframe_246)walk_executor(clothes_shirt_2114)obs(clothes_shirt_2114, Locate the shirt)walk_executor(bathtub_297)exp(clothes_skirt_2116, bathtub_297)walk_executor(clothes_skirt_2116)obs(clothes_skirt_2116, Locate the skirt)
##############################
From agent.py
walk_executor(photoframe_246)
Robot is inside bedroom_220. Robot is close bookshelf_260. Robot is close photoframe_246. Robot is no longer inside bathroom_265.Robot is no longer close bathroom_counter_306.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2114 ?
Answer: Clothes_shirt_2114 is located inside the bathroom_265. You will find it inside the basket_for_clothes_2040. Look closely inside the basket in the bathroom to identify and retrieve clothes_shirt_2114.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, you can find the target item, clothes_shirt_2114, inside the bathroom_265. It is placed inside basket_for_clothes_2040. Please retrieve it from there.
Clothes_shirt_2114 is located inside the bathroom_265. You will find it inside the basket_for_clothes_2040. Look closely inside the basket in the bathroom to identify and retrieve clothes_shirt_2114.

The actions you have taken:
Action 1: Walk to bed_376.
Action 2: look for clothes_shirt_2114 around bed_376.
Action 3: Walk to bed_264.
Action 4: look for clothes_shirt_2114 around bed_264.
Action 5: Walk to desk_375.
Action 6: look for clothes_shirt_2114 around desk_375.
Action 7: Walk to nightstand_262.
Action 8: look for clothes_shirt_2114 around nightstand_262.
Action 9: Walk to nightstand_373.
Action 10: look for clothes_shirt_2114 around nightstand_373.
Action 11: Walk to desk_261.
Action 12: look for clothes_shirt_2114 around desk_261.
Action 13: Walk to washing_machine_2041.
Action 14: Open washing_machine_2041.
Action 15: look for clothes_shirt_2114 around washing_machine_2041.
Action 16: Walk to toilet_302.
Action 17: Open toilet_302.
Action 18: look for clothes_shirt_2114 around toilet_302.
Action 19: Walk to bathroom_cabinet_305.
Action 20: Open bathroom_cabinet_305.
Action 21: look for clothes_shirt_2114 around bathroom_cabinet_305.
Action 22: Walk to bathroom_counter_306.
Action 23: look for clothes_shirt_2114 around bathroom_counter_306.
Action 24: Walk to photoframe_246.

##############################
From agent.py
exp(clothes_shirt_2114, photoframe_246)
Failed to find clothes_shirt_2114 around photoframe_246. 
##############################
From agent.py-> find a plan in act()
walk_executor(photoframe_361)exp(clothes_shirt_2114, photoframe_361)walk_executor(clothes_shirt_2114)obs(clothes_shirt_2114, Locate the shirt)walk_executor(ironing_board_2099)exp(clothes_skirt_2116, ironing_board_2099)walk_executor(clothes_skirt_2116)obs(clothes_skirt_2116, Locate the skirt)
##############################
From agent.py
walk_executor(photoframe_361)
Find stamp_2031. Robot is inside bedroom_327. Robot is close photoframe_361. Robot is close bookshelf_372. Robot is no longer inside bedroom_220.Robot is no longer close bookshelf_260.Robot is no longer close photoframe_246.
##############################
From agent.py
exp(clothes_shirt_2114, photoframe_361)
Failed to find clothes_shirt_2114 around photoframe_361. 
##############################
From agent.py-> find a plan in act()
walk_executor(bathtub_297)exp(clothes_shirt_2114, bathtub_297)walk_executor(clothes_shirt_2114)obs(clothes_shirt_2114, Locate the shirt)walk_executor(bathtub_297)exp(clothes_skirt_2116, bathtub_297)walk_executor(clothes_skirt_2116)obs(clothes_skirt_2116, Locate the skirt)
##############################
From agent.py
walk_executor(bathtub_297)
Find towel_rack_299. Find towel_rack_300. Find basket_for_clothes_2040. Robot is inside bathroom_265. Robot is close bathtub_297. Robot is no longer inside bedroom_327.Robot is no longer close photoframe_361.Robot is no longer close bookshelf_372.
##############################
From agent.py
exp(clothes_shirt_2114, bathtub_297)
Failed to find clothes_shirt_2114 around bathtub_297. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)exp(clothes_shirt_2114, basket_for_clothes_2040)walk_executor(clothes_shirt_2114)obs(clothes_shirt_2114, Locate the shirt)walk_executor(basket_for_clothes_2040)exp(clothes_skirt_2116, basket_for_clothes_2040)walk_executor(clothes_skirt_2116)obs(clothes_skirt_2116, Locate the skirt)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Find clothes_pants_2113. Find clothes_shirt_2114. Find clothes_socks_2115. Find clothes_skirt_2116. Robot is inside bathroom_265. Robot is close clothes_pants_2113. Robot is close clothes_shirt_2114. Robot is close clothes_socks_2115. Robot is close clothes_skirt_2116. Robot is close basket_for_clothes_2040. Robot is no longer close bathtub_297.
##############################
From agent.py
exp(clothes_shirt_2114, basket_for_clothes_2040)
Find clothes_shirt_2114. 
##############################
From agent.py-> find a plan in act()
obs(clothes_shirt_2114, Locate the shirt)obs(clothes_skirt_2116, Locate the skirt)
##############################
From agent.py
obs(clothes_shirt_2114, Locate the shirt)
Get this information:  clothes_shirt_2114 is close to basket_for_clothes_2040. clothes_shirt_2114 is close to character_219. clothes_shirt_2114 is inside basket_for_clothes_2040. clothes_shirt_2114 is inside bathroom_265. clothes_shirt_2114 is DIRTY.
##############################
From agent.py
obs(clothes_skirt_2116, Locate the skirt)
Get this information:  clothes_skirt_2116 is inside basket_for_clothes_2040. clothes_skirt_2116 is inside bathroom_265. clothes_skirt_2116 is close to basket_for_clothes_2040. clothes_skirt_2116 is close to character_219. clothes_skirt_2116 is DIRTY.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_hat_2076_around_couch_192(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==192
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(clothes_hat,couch_instance)
        else:
            exp(clothes_hat,couch_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,couch_instance]=True
        close[couch_instance,clothes_hat]=True
    

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
def is_ironing_board_present():
    # Function to check if there is an ironing board available
    symbol ironing_board_existence=exists ironing_board: item: is_ironing_board(ironing_board)
    return ironing_board_existence

behavior iron_clothes(shirt:item, skirt:item, ironing_board:item, iron:item):
    body:
        achieve plugged(iron)
        # Plug in the iron
        achieve is_on(iron)
        # Turn the iron on
        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve on(skirt, ironing_board)
        # Place the skirt on the ironing board
        achieve_once is_off(iron)
        # Turn off the iron after use
        achieve_once unplugged(iron)
        # Unplug the iron after use

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        if is_ironing_board_present():
            bind ironing_board: item where:
                is_ironing_board(ironing_board)
            # Select the ironing board

            bind iron: item where:
                is_iron(iron)
            # Select the iron

            iron_clothes(shirt, skirt, ironing_board, iron)
            # Iron the shirt and skirt on the ironing board

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(shirt:item, skirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve once on(skirt, ironing_board)
        achieve plugged(iron)
        achieve is_on(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2116
        # Select the skirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_clothes(shirt, skirt, ironing_board, iron)


#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'on') at line 6024, column 22.
Expected one of: 
	* _NEWLINE
	* SEMICOLON

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_hat_2076_around_couch_192(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==192
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(clothes_hat,couch_instance)
        else:
            exp(clothes_hat,couch_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,couch_instance]=True
        close[couch_instance,clothes_hat]=True
    

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#goal_representation
 
behavior iron_clothes(shirt:item, skirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        achieve on(skirt, ironing_board)
        achieve plugged(iron)
        achieve is_on(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2116
        # Select the skirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_clothes(shirt, skirt, ironing_board, iron)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_clothes(shirt:item, skirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        achieve on(skirt, ironing_board)
        achieve plugged(iron)
        achieve is_on(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2116
        # Select the skirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_clothes(shirt, skirt, ironing_board, iron)

##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2114)walk_executor(ironing_board_2099)put_executor(clothes_shirt_2114, ironing_board_2099)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)exp(iron_2117, ironing_board_2099)walk_executor(iron_2117)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
grab_executor(clothes_shirt_2114)
Robot is inside bathroom_265. Robot is close clothes_pants_2113. Robot is close clothes_shirt_2114. Robot is close clothes_socks_2115. Robot is close clothes_skirt_2116. Robot is close basket_for_clothes_2040. Grabbing clothes_shirt_2114 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2099)
Find iron_2117. Robot is inside bedroom_220. Robot is close clothes_shirt_2114. Robot is close ironing_board_2099. Robot is no longer inside bathroom_265.Robot is no longer close clothes_pants_2113.Robot is no longer close clothes_socks_2115.Robot is no longer close clothes_skirt_2116.Robot is no longer close basket_for_clothes_2040.
##############################
From agent.py
put_executor(clothes_shirt_2114, ironing_board_2099)
Robot is inside bedroom_220. Robot is close clothes_shirt_2114. Robot is close ironing_board_2099. clothes_shirt_2114 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2116)
Robot is inside bathroom_265. Robot is close basket_for_clothes_2040. Robot is close clothes_skirt_2116. Robot is no longer inside bedroom_220.Robot is no longer close clothes_shirt_2114.Robot is no longer close ironing_board_2099.
##############################
From agent.py
grab_executor(clothes_skirt_2116)
Robot is inside bathroom_265. Robot is close basket_for_clothes_2040. Robot is close clothes_skirt_2116. Grabbing clothes_skirt_2116 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot is inside bedroom_220. Robot is close clothes_skirt_2116. Robot is close ironing_board_2099. Robot is no longer inside bathroom_265.Robot is no longer close basket_for_clothes_2040.
##############################
From agent.py
put_executor(clothes_skirt_2116, ironing_board_2099)
Robot is inside bedroom_220. Robot is close clothes_skirt_2116. Robot is close ironing_board_2099. clothes_skirt_2116 released by right hand. 
##############################
From agent.py
exp(iron_2117, ironing_board_2099)
Find iron_2117. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2117)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
walk_executor(iron_2117)
Robot is inside bedroom_220. Robot is close ironing_board_2099. Robot is close iron_2117. Robot is no longer close clothes_skirt_2116.
##############################
From agent.py
plugin_executor(iron_2117)
Robot is inside bedroom_220. Robot is close ironing_board_2099. Robot is close iron_2117. 
##############################
From agent.py
switchon_executor(iron_2117)
Robot is inside bedroom_220. Robot is close ironing_board_2099. Robot is close iron_2117. 
##############################
From agent.py
Human Instruction: You still need to iron the shirt and the skirt. While you have placed both items on the ironing board and turned the iron on, you have not performed the action of ironing the clothes yet.

The actions you have taken:
Action 1: Walk to bed_376.
Action 2: look for clothes_shirt_2114 around bed_376.
Action 3: Walk to bed_264.
Action 4: look for clothes_shirt_2114 around bed_264.
Action 5: Walk to desk_375.
Action 6: look for clothes_shirt_2114 around desk_375.
Action 7: Walk to nightstand_262.
Action 8: look for clothes_shirt_2114 around nightstand_262.
Action 9: Walk to nightstand_373.
Action 10: look for clothes_shirt_2114 around nightstand_373.
Action 11: Walk to desk_261.
Action 12: look for clothes_shirt_2114 around desk_261.
Action 13: Walk to washing_machine_2041.
Action 14: Open washing_machine_2041.
Action 15: look for clothes_shirt_2114 around washing_machine_2041.
Action 16: Walk to toilet_302.
Action 17: Open toilet_302.
Action 18: look for clothes_shirt_2114 around toilet_302.
Action 19: Walk to bathroom_cabinet_305.
Action 20: Open bathroom_cabinet_305.
Action 21: look for clothes_shirt_2114 around bathroom_cabinet_305.
Action 22: Walk to bathroom_counter_306.
Action 23: look for clothes_shirt_2114 around bathroom_counter_306.
Action 24: Walk to photoframe_246.
Action 25: look for clothes_shirt_2114 around photoframe_246.
Action 26: Walk to photoframe_361.
Action 27: look for clothes_shirt_2114 around photoframe_361.
Action 28: Walk to bathtub_297.
Action 29: look for clothes_shirt_2114 around bathtub_297.
Action 30: Walk to basket_for_clothes_2040.
Action 31: look for clothes_shirt_2114 around basket_for_clothes_2040.
Action 32: Observe around clothes_shirt_2114 with the question of Locate the shirt.
Action 33: Observe around clothes_skirt_2116 with the question of Locate the skirt.
Action 34: Grab clothes_shirt_2114.
Action 35: Walk to ironing_board_2099.
Action 36: Put clothes_shirt_2114 on ironing_board_2099.
Action 37: Walk to clothes_skirt_2116.
Action 38: Grab clothes_skirt_2116.
Action 39: Walk to ironing_board_2099.
Action 40: Put clothes_skirt_2116 on ironing_board_2099.
Action 41: look for iron_2117 around ironing_board_2099.
Action 42: Walk to iron_2117.
Action 43: Plug in iron_2117.
Action 44: Switch on iron_2117.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_hat_2076_around_wallshelf_301(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==301
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(clothes_hat,wallshelf_instance)
        else:
            exp(clothes_hat,wallshelf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,wallshelf_instance]=True
        close[wallshelf_instance,clothes_hat]=True
    

behavior find_clothes_gloves_2077_around_filing_cabinet_378(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind filing_cabinet_instance:item where:
            is_filing_cabinet(filing_cabinet_instance) and id[filing_cabinet_instance]==378
        achieve close_char(char,filing_cabinet_instance)
        if can_open(filing_cabinet_instance):
            achieve_once open(filing_cabinet_instance)
            exp(clothes_gloves,filing_cabinet_instance)
        else:
            exp(clothes_gloves,filing_cabinet_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,filing_cabinet_instance]=True
        close[filing_cabinet_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
behavior iron_object(obj:item, iron:item, ironing_board:item):
    body:
        achieve on(obj, ironing_board) # Ensure the item is on the ironing board
        achieve is_on(iron) # Ensure the iron is on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_object(shirt, iron, ironing_board) # Iron the shirt
        iron_object(skirt, iron, ironing_board) # Iron the skirt
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_hat_2076_around_window_40(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind window_instance:item where:
            is_window(window_instance) and id[window_instance]==40
        achieve close_char(char,window_instance)
        if can_open(window_instance):
            achieve_once open(window_instance)
            exp(clothes_hat,window_instance)
        else:
            exp(clothes_hat,window_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,window_instance]=True
        close[window_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(clothes:item, iron:item, ironing_board:item):
    body:
        achieve on(clothes, ironing_board)
        # Position the clothes on the ironing board
        assert plugged(iron) and is_on(iron)
        # Ensure the iron is plugged in and turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind iron: item where:
            is_iron(iron) and is_on(iron) and plugged(iron)
        # Select the iron that is plugged in and turned on

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_clothes(shirt, iron, ironing_board)
        iron_clothes(skirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2098_around_kitchen_counter_132(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cleaning_solution,kitchen_counter_instance)
        else:
            exp(cleaning_solution,kitchen_counter_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cleaning_solution]=True
    

behavior find_clothes_hat_2076_around_drawing_296(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind drawing_instance:item where:
            is_drawing(drawing_instance) and id[drawing_instance]==296
        achieve close_char(char,drawing_instance)
        if can_open(drawing_instance):
            achieve_once open(drawing_instance)
            exp(clothes_hat,drawing_instance)
        else:
            exp(clothes_hat,drawing_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,drawing_instance]=True
        close[drawing_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(shirt:item, skirt:item, iron:item):
    body:
        achieve clean(shirt) # The shirt is ironed and clean
        achieve clean(skirt) # The skirt is ironed and clean

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind iron: item where:
            is_iron(iron) and is_on(iron)
        # Select the iron

        iron_clothes(shirt, skirt, iron)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_clothes(shirt:item, skirt:item, iron:item):
    body:
        achieve clean(shirt) # The shirt is ironed and clean
        achieve clean(skirt) # The skirt is ironed and clean

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind iron: item where:
            is_iron(iron) and is_on(iron)
        # Select the iron

        iron_clothes(shirt, skirt, iron)

##############################
From agent.py-> find a plan in act()
walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)walk_executor(clothes_skirt_2116)wash_executor(clothes_skirt_2116)
##############################
From agent.py
walk_executor(clothes_shirt_2114)
Robot is inside bathroom_265. Robot is close ironing_board_2099. Robot is close clothes_shirt_2114. Robot is no longer inside bedroom_220.Robot is no longer close iron_2117.
##############################
From agent.py
wash_executor(clothes_shirt_2114)
Robot is inside bathroom_265. Robot is close ironing_board_2099. Robot is close clothes_shirt_2114. 
##############################
From agent.py
walk_executor(clothes_skirt_2116)
Robot is inside bathroom_265. Robot is close ironing_board_2099. Robot is close clothes_skirt_2116. Robot is no longer close clothes_shirt_2114.
##############################
From agent.py
wash_executor(clothes_skirt_2116)
Robot is inside bathroom_265. Robot is close ironing_board_2099. Robot is close clothes_skirt_2116. 
##############################
From agent.py
Human Instruction: You need to iron the shirt and the skirt. You have found, cleaned, and placed both items on the ironing board and turned the iron on, but you have not performed the action of ironing the clothes yet.

The actions you have taken:
Action 1: Walk to bed_376.
Action 2: look for clothes_shirt_2114 around bed_376.
Action 3: Walk to bed_264.
Action 4: look for clothes_shirt_2114 around bed_264.
Action 5: Walk to desk_375.
Action 6: look for clothes_shirt_2114 around desk_375.
Action 7: Walk to nightstand_262.
Action 8: look for clothes_shirt_2114 around nightstand_262.
Action 9: Walk to nightstand_373.
Action 10: look for clothes_shirt_2114 around nightstand_373.
Action 11: Walk to desk_261.
Action 12: look for clothes_shirt_2114 around desk_261.
Action 13: Walk to washing_machine_2041.
Action 14: Open washing_machine_2041.
Action 15: look for clothes_shirt_2114 around washing_machine_2041.
Action 16: Walk to toilet_302.
Action 17: Open toilet_302.
Action 18: look for clothes_shirt_2114 around toilet_302.
Action 19: Walk to bathroom_cabinet_305.
Action 20: Open bathroom_cabinet_305.
Action 21: look for clothes_shirt_2114 around bathroom_cabinet_305.
Action 22: Walk to bathroom_counter_306.
Action 23: look for clothes_shirt_2114 around bathroom_counter_306.
Action 24: Walk to photoframe_246.
Action 25: look for clothes_shirt_2114 around photoframe_246.
Action 26: Walk to photoframe_361.
Action 27: look for clothes_shirt_2114 around photoframe_361.
Action 28: Walk to bathtub_297.
Action 29: look for clothes_shirt_2114 around bathtub_297.
Action 30: Walk to basket_for_clothes_2040.
Action 31: look for clothes_shirt_2114 around basket_for_clothes_2040.
Action 32: Observe around clothes_shirt_2114 with the question of Locate the shirt.
Action 33: Observe around clothes_skirt_2116 with the question of Locate the skirt.
Action 34: Grab clothes_shirt_2114.
Action 35: Walk to ironing_board_2099.
Action 36: Put clothes_shirt_2114 on ironing_board_2099.
Action 37: Walk to clothes_skirt_2116.
Action 38: Grab clothes_skirt_2116.
Action 39: Walk to ironing_board_2099.
Action 40: Put clothes_skirt_2116 on ironing_board_2099.
Action 41: look for iron_2117 around ironing_board_2099.
Action 42: Walk to iron_2117.
Action 43: Plug in iron_2117.
Action 44: Switch on iron_2117.
Action 45: Walk to clothes_shirt_2114.
Action 46: Wash clothes_shirt_2114.
Action 47: Walk to clothes_skirt_2116.
Action 48: Wash clothes_skirt_2116.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2038_around_sink_307(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_clothes_hat_2076_around_couch_192(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==192
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(clothes_hat,couch_instance)
        else:
            exp(clothes_hat,couch_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,couch_instance]=True
        close[couch_instance,clothes_hat]=True
    

behavior find_detergent_2108_around_kitchen_counter_132(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(detergent,kitchen_counter_instance)
        else:
            exp(detergent,kitchen_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,kitchen_counter_instance]=True
        close[kitchen_counter_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(shirt:item, skirt:item, ironing_board:item, iron:item):
    body:
        achieve clean(shirt) # Ensure the shirt is clean before ironing
        achieve clean(skirt) # Ensure the skirt is clean before ironing
        achieve_on(iron) # Make sure the iron is turned on
        achieve on(shirt, ironing_board) # Place the shirt on the ironing board
        achieve on(skirt, ironing_board) # Place the skirt on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        bind iron: item where:
            is_iron(iron)
        iron_clothes(shirt, skirt, ironing_board, iron)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

'Function achieve_on not found. Note that recursive function calls are not supported in the current version.'
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_detergent_2108_around_kitchen_counter_132(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(detergent,kitchen_counter_instance)
        else:
            exp(detergent,kitchen_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,kitchen_counter_instance]=True
        close[kitchen_counter_instance,detergent]=True
    

#goal_representation
 
behavior iron_clothes(shirt:item, skirt:item, ironing_board:item, iron:item):
    body:
        achieve clean(shirt) # Ensure the shirt is clean before ironing
        achieve clean(skirt) # Ensure the skirt is clean before ironing
        achieve is_on(iron) # Make sure the iron is turned on
        achieve on(shirt, ironing_board) # Place the shirt on the ironing board
        achieve on(skirt, ironing_board) # Place the skirt on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        bind iron: item where:
            is_iron(iron)
        iron_clothes(shirt, skirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2037_around_sink_133(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_vacuum_cleaner_2094_around_tvstand_135(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==135
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(vacuum_cleaner,tvstand_instance)
        else:
            exp(vacuum_cleaner,tvstand_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,tvstand_instance]=True
        close[tvstand_instance,vacuum_cleaner]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(shirt:item, skirt:item, ironing_board:item):
    body:
        achieve clean(shirt)
        achieve clean(skirt)
        achieve on(shirt, ironing_board)
        achieve on(skirt, ironing_board)

behavior start_ironing(shirt:item, skirt:item, iron:item):
    body:
        assert is_on(iron)
        assert plugged(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing_board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_clothes(shirt, skirt, ironing_board)
        start_ironing(shirt, skirt, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2038_around_sink_133(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_clothes_hat_2076_around_couch_192(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==192
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(clothes_hat,couch_instance)
        else:
            exp(clothes_hat,couch_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,couch_instance]=True
        close[couch_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(shirt: item, skirt: item, ironing_board: item, iron: item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board
        achieve on(skirt, ironing_board)
        # Ensure the skirt is on the ironing board
        achieve is_on(iron)
        # Ensure the iron is on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and on(shirt, ironing_board)
            # Select the clean shirt on the ironing board
        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt) and on(skirt, ironing_board)
            # Select the clean skirt on the ironing board
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
            # Select the ironing board
        bind iron: item where:
            is_iron(iron) and close_char(char, iron)
            # Select the iron close to the character
        iron_clothes(shirt, skirt, ironing_board, iron)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board; available variables: [Variable<shirt: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_hat_2076_around_wallshelf_301(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==301
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(clothes_hat,wallshelf_instance)
        else:
            exp(clothes_hat,wallshelf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,wallshelf_instance]=True
        close[wallshelf_instance,clothes_hat]=True
    

#goal_representation
 
behavior iron_clothes(shirt: item, skirt: item, ironing_board: item, iron: item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board
        achieve on(skirt, ironing_board)
        # Ensure the skirt is on the ironing board
        achieve is_on(iron)
        # Ensure the iron is on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and on(shirt, ironing_board)
            # Select the clean shirt on the ironing board
        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt) and on(skirt, ironing_board)
            # Select the clean skirt on the ironing board
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
            # Select the ironing board
        bind iron: item where:
            is_iron(iron) and close_char(char, iron)
            # Select the iron close to the character
        iron_clothes(shirt, skirt, ironing_board, iron)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board; available variables: [Variable<shirt: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_detergent_2108_around_dishwasher_143(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==143
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(detergent,dishwasher_instance)
        else:
            exp(detergent,dishwasher_instance)
    eff:
        unknown[detergent]=False
        close[detergent,dishwasher_instance]=True
        close[dishwasher_instance,detergent]=True
    

#goal_representation
 
behavior iron_clothes(shirt: item, skirt: item, ironing_board: item, iron: item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board
        achieve on(skirt, ironing_board)
        # Ensure the skirt is on the ironing board
        achieve is_on(iron)
        # Ensure the iron is on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and on(shirt, ironing_board)
            # Select the clean shirt on the ironing board
        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt) and on(skirt, ironing_board)
            # Select the clean skirt on the ironing board
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
            # Select the ironing board
        bind iron: item where:
            is_iron(iron) and close_char(char, iron)
            # Select the iron close to the character
        iron_clothes(shirt, skirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_hat_2076_around_wallshelf_301(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==301
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(clothes_hat,wallshelf_instance)
        else:
            exp(clothes_hat,wallshelf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,wallshelf_instance]=True
        close[wallshelf_instance,clothes_hat]=True
    

behavior find_box_2023_around_trashcan_360(box:item):
    goal: not unknown(box)
    body:
        assert is_box(box)
        bind trashcan_instance:item where:
            is_trashcan(trashcan_instance) and id[trashcan_instance]==360
        achieve close_char(char,trashcan_instance)
        if can_open(trashcan_instance):
            achieve_once open(trashcan_instance)
            exp(box,trashcan_instance)
        else:
            exp(box,trashcan_instance)
    eff:
        unknown[box]=False
        close[box,trashcan_instance]=True
        close[trashcan_instance,box]=True
    

behavior find_clothes_gloves_2077_around_trashcan_360(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind trashcan_instance:item where:
            is_trashcan(trashcan_instance) and id[trashcan_instance]==360
        achieve close_char(char,trashcan_instance)
        if can_open(trashcan_instance):
            achieve_once open(trashcan_instance)
            exp(clothes_gloves,trashcan_instance)
        else:
            exp(clothes_gloves,trashcan_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,trashcan_instance]=True
        close[trashcan_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
behavior iron_clothes(shirt:item, skirt:item, iron:item, ironing_board:item):
    body:
        assert is_clothes(shirt) and is_clothes(skirt)
        # Ensure that the items are clothing
        
        assert has_switch(iron) and plugged(iron) and is_on(iron)
        # Ensure the iron is plugged in and switched on
        
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board
        
        achieve on(skirt, ironing_board)
        # Ensure the skirt is on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt
        
        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the clean skirt
        
        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron that is plugged in and switched on
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        
        iron_clothes(shirt, skirt, iron, ironing_board)
        # Iron the shirt and the skirt on the ironing board with the iron
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_hat_2076_around_pillow_368(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==368
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(clothes_hat,pillow_instance)
        else:
            exp(clothes_hat,pillow_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,pillow_instance]=True
        close[pillow_instance,clothes_hat]=True
    

behavior find_shoes_2001_around_trashcan_360(shoes:item):
    goal: not unknown(shoes)
    body:
        assert is_shoes(shoes)
        bind trashcan_instance:item where:
            is_trashcan(trashcan_instance) and id[trashcan_instance]==360
        achieve close_char(char,trashcan_instance)
        if can_open(trashcan_instance):
            achieve_once open(trashcan_instance)
            exp(shoes,trashcan_instance)
        else:
            exp(shoes,trashcan_instance)
    eff:
        unknown[shoes]=False
        close[shoes,trashcan_instance]=True
        close[trashcan_instance,shoes]=True
    

behavior find_clothes_gloves_2077_around_trashcan_360(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind trashcan_instance:item where:
            is_trashcan(trashcan_instance) and id[trashcan_instance]==360
        achieve close_char(char,trashcan_instance)
        if can_open(trashcan_instance):
            achieve_once open(trashcan_instance)
            exp(clothes_gloves,trashcan_instance)
        else:
            exp(clothes_gloves,trashcan_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,trashcan_instance]=True
        close[trashcan_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(shirt:item, skirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board
        achieve on(skirt, ironing_board)
        # Ensure the skirt is on the ironing board
        achieve is_on(iron)
        # The iron should be turned on for ironing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and on(shirt, ironing_board)
        # Select the shirt on the ironing board

        bind skirt: item where:
            is_clothes_skirt(skirt) and on(skirt, ironing_board)
        # Select the skirt on the ironing board

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_clothes(shirt, skirt, iron, ironing_board)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board; available variables: [Variable<shirt: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_soap_2038_around_sink_307(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_clothes_hat_2076_around_wallshelf_301(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==301
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(clothes_hat,wallshelf_instance)
        else:
            exp(clothes_hat,wallshelf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,wallshelf_instance]=True
        close[wallshelf_instance,clothes_hat]=True
    

behavior find_clothes_underwear_2022_around_dresser_377(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_underwear,dresser_instance)
        else:
            exp(clothes_underwear,dresser_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,dresser_instance]=True
        close[dresser_instance,clothes_underwear]=True
    

#goal_representation
behavior iron_clothes(shirt:item, skirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board
        achieve on(skirt, ironing_board)
        # Ensure the skirt is on the ironing board
        achieve is_on(iron)
        # The iron should be turned on for ironing

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind shirt: item where:
            is_clothes_shirt(shirt) and on(shirt, ironing_board)
        # Select the shirt on the ironing board

        bind skirt: item where:
            is_clothes_skirt(skirt) and on(skirt, ironing_board)
        # Select the skirt on the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_clothes(shirt, skirt, iron, ironing_board)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_kitchen_counter_132(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(detergent,kitchen_counter_instance)
        else:
            exp(detergent,kitchen_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,kitchen_counter_instance]=True
        close[kitchen_counter_instance,detergent]=True
    

behavior find_after_shave_2029_around_bench_126(after_shave:item):
    goal: not unknown(after_shave)
    body:
        assert is_after_shave(after_shave)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==126
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(after_shave,bench_instance)
        else:
            exp(after_shave,bench_instance)
    eff:
        unknown[after_shave]=False
        close[after_shave,bench_instance]=True
        close[bench_instance,after_shave]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(shirt:item, skirt:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board
        achieve on(skirt, ironing_board)
        # Ensure the skirt is on the ironing board

behavior start_ironing(iron:item):
    body:
        achieve plugged(iron)
        # Ensure the iron is plugged in
        achieve is_on(iron)
        # Ensure the iron is switched on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_clothes(shirt, skirt, ironing_board)
        start_ironing(iron)
        achieve clean(shirt)
        # Ensure the shirt is ironed
        achieve clean(skirt)
        # Ensure the skirt is ironed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_hat_2076_around_wallshelf_301(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==301
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(clothes_hat,wallshelf_instance)
        else:
            exp(clothes_hat,wallshelf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,wallshelf_instance]=True
        close[wallshelf_instance,clothes_hat]=True
    

behavior find_cd_2100_around_coffe_maker_147(cd:item):
    goal: not unknown(cd)
    body:
        assert is_cd(cd)
        bind coffe_maker_instance:item where:
            is_coffe_maker(coffe_maker_instance) and id[coffe_maker_instance]==147
        achieve close_char(char,coffe_maker_instance)
        if can_open(coffe_maker_instance):
            achieve_once open(coffe_maker_instance)
            exp(cd,coffe_maker_instance)
        else:
            exp(cd,coffe_maker_instance)
    eff:
        unknown[cd]=False
        close[cd,coffe_maker_instance]=True
        close[coffe_maker_instance,cd]=True
    

behavior find_clothes_gloves_2077_around_coffe_maker_147(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind coffe_maker_instance:item where:
            is_coffe_maker(coffe_maker_instance) and id[coffe_maker_instance]==147
        achieve close_char(char,coffe_maker_instance)
        if can_open(coffe_maker_instance):
            achieve_once open(coffe_maker_instance)
            exp(clothes_gloves,coffe_maker_instance)
        else:
            exp(clothes_gloves,coffe_maker_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,coffe_maker_instance]=True
        close[coffe_maker_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(clothes:item, ironing_board:item, iron:item):
    body:
        # Achieve the state of having clothes ironed 
        assert on(clothes, ironing_board) 
        # Ensure clothes are on the ironing board before ironing

behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        iron_clothes(shirt, ironing_board, iron)

behavior iron_skirt(skirt:item, ironing_board:item, iron:item):
    body:
        iron_clothes(skirt, ironing_board, iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and is_on(iron) and plugged(iron)
        # Select the iron that is on and plugged in

        iron_shirt(shirt, ironing_board, iron)
        iron_skirt(skirt, ironing_board, iron)
        # Iron the shirt and the skirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_hat_2076_around_wallshelf_301(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==301
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(clothes_hat,wallshelf_instance)
        else:
            exp(clothes_hat,wallshelf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,wallshelf_instance]=True
        close[wallshelf_instance,clothes_hat]=True
    

behavior find_clothes_underwear_2022_around_keyboard_382(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind keyboard_instance:item where:
            is_keyboard(keyboard_instance) and id[keyboard_instance]==382
        achieve close_char(char,keyboard_instance)
        if can_open(keyboard_instance):
            achieve_once open(keyboard_instance)
            exp(clothes_underwear,keyboard_instance)
        else:
            exp(clothes_underwear,keyboard_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,keyboard_instance]=True
        close[keyboard_instance,clothes_underwear]=True
    

#exp_behavior_end

#goal_representation
behavior iron_clothes(shirt:item, skirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve once inhand(iron)       # Hold the iron for ironing the clothes
        achieve is_on(iron)             # Make sure the iron is turned on
        achieve clean(shirt)            # Iron the shirt
        achieve clean(skirt)            # Iron the skirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and on(shirt, ironing_board)
        # Select the shirt on the ironing board

        bind skirt: item where:
            is_clothes_skirt(skirt) and on(skirt, ironing_board)
        # Select the skirt on the ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron that is plugged in and on

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        
        iron_clothes(shirt, skirt, iron, ironing_board)
        # Iron both the shirt and skirt using the iron on the ironing board
#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'inhand') at line 6049, column 22.
Expected one of: 
	* _NEWLINE
	* SEMICOLON

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_hat_2076_around_wallshelf_301(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==301
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(clothes_hat,wallshelf_instance)
        else:
            exp(clothes_hat,wallshelf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,wallshelf_instance]=True
        close[wallshelf_instance,clothes_hat]=True
    

behavior find_clothes_underwear_2022_around_dresser_377(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_underwear,dresser_instance)
        else:
            exp(clothes_underwear,dresser_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,dresser_instance]=True
        close[dresser_instance,clothes_underwear]=True
    

#goal_representation
 
behavior iron_clothes(shirt:item, skirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve_once inhand(iron)       # Hold the iron for ironing the clothes
        achieve is_on(iron)             # Make sure the iron is turned on
        achieve clean(shirt)            # Iron the shirt
        achieve clean(skirt)            # Iron the skirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and on(shirt, ironing_board)
        # Select the shirt on the ironing board

        bind skirt: item where:
            is_clothes_skirt(skirt) and on(skirt, ironing_board)
        # Select the skirt on the ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron that is plugged in and on

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        
        iron_clothes(shirt, skirt, iron, ironing_board)
        # Iron both the shirt and skirt using the iron on the ironing board

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board; available variables: [Variable<shirt: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_cleaning_solution_2098_around_kitchen_counter_132(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cleaning_solution,kitchen_counter_instance)
        else:
            exp(cleaning_solution,kitchen_counter_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cleaning_solution]=True
    

behavior find_soap_2037_around_sink_133(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_clothes_hat_2076_around_wallshelf_301(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==301
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(clothes_hat,wallshelf_instance)
        else:
            exp(clothes_hat,wallshelf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,wallshelf_instance]=True
        close[wallshelf_instance,clothes_hat]=True
    

#goal_representation
 
behavior iron_clothes(shirt:item, skirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve_once inhand(iron)       # Hold the iron for ironing the clothes
        achieve is_on(iron)             # Make sure the iron is turned on
        achieve clean(shirt)            # Iron the shirt
        achieve clean(skirt)            # Iron the skirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and on(shirt, ironing_board)
        # Select the shirt on the ironing board

        bind skirt: item where:
            is_clothes_skirt(skirt) and on(skirt, ironing_board)
        # Select the skirt on the ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron that is plugged in and on

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        
        iron_clothes(shirt, skirt, iron, ironing_board)
        # Iron both the shirt and skirt using the iron on the ironing board

#goal_representation_end

##############################
