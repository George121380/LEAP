From agent.py
Reset goals: The sub-goals are: 
['1. Sit on the chair in front of the computer in the home office.', '2. Touch the mouse near the computer to turn it on.', '3. Type the keyboard to send an e-mail.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_271_around_desk_272(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==272
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

behavior find_keyboard_211_around_desk_272(keyboard:item):
    goal: not unknown(keyboard)
    body:
        assert is_keyboard(keyboard)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==272
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(keyboard,desk_instance)
        else:
            exp(keyboard,desk_instance)
    eff:
        unknown[keyboard]=False
        close[keyboard,desk_instance]=True
        close[desk_instance,keyboard]=True
    

#exp_behavior_end

#goal_representation
behavior sit_on_chair(chair:item, computer:item):
    body:
        achieve on_char(char, chair) # Sit on the chair

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Bind the home office

        bind chair: item where:
            is_chair(chair) and inside(chair, home_office)
        # Select the chair in the home office

        bind computer: item where:
            is_computer(computer) and inside(computer, home_office)
        # Bind the computer in the home office

        sit_on_chair(chair, computer) # Sit on the chair in front of the computer in the home office
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_2003_around_desk_193(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==193
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
def is_home_office_chair(chair:item):
    # Function to check if the chair is in the home office
    symbol is_in_home_office=exists room: item : is_home_office(room) and inside(chair, room)
    return is_in_home_office

behavior sit_on_chair(chair:item):
    body:
        achieve on_char(char, chair) # Sit on the chair

behavior __goal__():
    body:
        bind chair: item where:
            is_chair(chair) and is_home_office_chair(chair)
        sit_on_chair(chair)

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Locate the chair in front of the computer in the home office and sit on it.', '2. Touch the mouse near the computer to turn it on.', '3. Type on the keyboard to send an email.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_271_around_desk_272(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==272
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior locate_and_sit_on_chair(chair:item):
    body:
        achieve on_char(char, chair)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind chair: item where:
            is_chair(chair) and sittable(chair) and inside(chair, home_office)
        # Select a sittable chair in the home office

        locate_and_sit_on_chair(chair)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_271_around_desk_272(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==272
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

behavior find_keyboard_211_around_computer_209(keyboard:item):
    goal: not unknown(keyboard)
    body:
        assert is_keyboard(keyboard)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==209
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(keyboard,computer_instance)
        else:
            exp(keyboard,computer_instance)
    eff:
        unknown[keyboard]=False
        close[keyboard,computer_instance]=True
        close[computer_instance,keyboard]=True
    

#exp_behavior_end

#goal_representation
behavior locate_and_sit_on_chair(chair:item):
    body:
        achieve on_char(char, chair) # Sit on the chair

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind chair: item where:
            is_chair(chair) and sittable(chair) and inside(chair, home_office)
        # Select the chair that is sittable and in the home office

        locate_and_sit_on_chair(chair)
#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Find the chair in front of the computer in the home office and sit on it.  ', '2. Touch the mouse near the computer to turn it on.  ', '3. Type on the keyboard to send an email.  ']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_194_around_home_office_241(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(chair,home_office_instance)
        else:
            exp(chair,home_office_instance)
    eff:
        unknown[chair]=False
        close[chair,home_office_instance]=True
        close[home_office_instance,chair]=True
    

behavior find_keyboard_211_around_computer_209(keyboard:item):
    goal: not unknown(keyboard)
    body:
        assert is_keyboard(keyboard)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==209
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(keyboard,computer_instance)
        else:
            exp(keyboard,computer_instance)
    eff:
        unknown[keyboard]=False
        close[keyboard,computer_instance]=True
        close[computer_instance,keyboard]=True
    

#exp_behavior_end

#goal_representation
behavior find_chair_and_sit(chair:item):
    body:
        achieve on_char(char, chair) # Sit on the chair

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind chair: item where:
            is_chair(chair) and inside(chair, home_office) and sittable(chair)
        # Select a chair that is sittable and inside the home office

        find_chair_and_sit(chair)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_keyboard_211_around_desk_272(keyboard:item):
    goal: not unknown(keyboard)
    body:
        assert is_keyboard(keyboard)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==272
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(keyboard,desk_instance)
        else:
            exp(keyboard,desk_instance)
    eff:
        unknown[keyboard]=False
        close[keyboard,desk_instance]=True
        close[desk_instance,keyboard]=True
    

behavior find_chair_271_around_desk_272(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==272
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior sit_on_chair(chair:item):
    body:
        achieve on_char(char, chair)
        # Ensure the character is sitting on the chair

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office
        
        bind chair: item where:
            is_chair(chair) and sittable(chair) and inside(chair, home_office)
        # Select the chair in the home office that is sittable
        
        sit_on_chair(chair)
        # Sit on the chair in front of the computer

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
