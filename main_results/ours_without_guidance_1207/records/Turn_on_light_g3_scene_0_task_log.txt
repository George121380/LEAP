From agent.py
Reset goals: The sub-goals are: 
['1. Check each room to identify if any lights are off.  ', '2. Turn on lights in rooms where none are currently on.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def has_light_off(room:item):
    # Function to check if there are any lights off in a specified room
    symbol light_off=exists light: item : is_light(light) and is_off(light) and inside(light, room)
    return light_off

behavior check_light_status(light:item):
    body:
        observe(light, "Check light status")
        # Observe to confirm the status of the light

behavior __goal__():
    body:
        foreach room: item:
            # Iterate over all rooms to check each one
            if has_light_off(room):
                bind light: item where:
                    is_light(light) and is_off(light) and inside(light, room)
                # Check the status of the light if it is off
                check_light_status(light)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_light_off(room:item):
    # Function to check if there are any lights off in a specified room
    symbol light_off=exists light: item : is_light(light) and is_off(light) and inside(light, room)
    return light_off

behavior check_light_status(light:item):
    body:
        observe(light, "Check light status")
        # Observe to confirm the status of the light

behavior __goal__():
    body:
        foreach room: item:
            # Iterate over all rooms to check each one
            if has_light_off(room):
                bind light: item where:
                    is_light(light) and is_off(light) and inside(light, room)
                # Check the status of the light if it is off
                check_light_status(light)

##############################
From agent.py-> find a plan in act()
walk_executor(light_64)obs(light_64, Check light status)walk_executor(light_169)obs(light_169, Check light status)walk_executor(light_245)obs(light_245, Check light status)walk_executor(light_411)obs(light_411, Check light status)
##############################
From agent.py
walk_executor(light_64)
Find towel_rack_32. Find mat_22. Robot is inside bathroom_1. Robot is close light_64. 
##############################
From agent.py
obs(light_64, Check light status)
Get this information:  light_64 is close to towel_rack_32. light_64 is close to floor_2. light_64 is close to floor_3. light_64 is close to bookshelf_101. light_64 is close to floor_6. light_64 is close to floor_72. light_64 is close to door_44. light_64 is close to doorjamb_45. light_64 is close to wall_14. light_64 is close to wall_79. light_64 is close to floor_77. light_64 is close to ceiling_17. light_64 is close to wall_12. light_64 is close to ceiling_16. light_64 is close to wall_85. light_64 is close to mat_22. light_64 is close to ceiling_90. light_64 is close to ceiling_95. light_64 is close to character_65. light_64 is inside bathroom_1. light_64 is OFF. light_64 is CLOSED. light_64 is CLEAN. light_64 is PLUGGED_IN.
##############################
From agent.py
walk_executor(light_169)
Find keyboard_168. Find chair_103. Find drawing_175. Find drawing_174. Robot is inside bedroom_67. Robot is close light_169. Robot is no longer inside bathroom_1.Robot is no longer close light_64.
##############################
From agent.py
obs(light_169, Check light status)
Get this information:  light_169 is facing drawing_175. light_169 is close to doorjamb_165. light_169 is close to keyboard_168. light_169 is close to computer_170. light_169 is close to cpuscreen_171. light_169 is close to drawing_174. light_169 is close to floor_75. light_169 is close to floor_76. light_169 is close to floor_206. light_169 is close to floor_207. light_169 is close to wall_209. light_169 is close to wall_210. light_169 is close to wall_83. light_169 is close to wall_84. light_169 is close to ceiling_217. light_169 is close to ceiling_218. light_169 is close to ceiling_93. light_169 is close to ceiling_94. light_169 is close to door_222. light_169 is close to chair_103. light_169 is close to desk_104. light_169 is close to bookshelf_233. light_169 is close to light_245. light_169 is close to powersocket_246. light_169 is close to phone_247. light_169 is close to character_65. light_169 is inside bedroom_67. light_169 is OFF. light_169 is CLOSED. light_169 is CLEAN. light_169 is PLUGGED_IN.
##############################
From agent.py
walk_executor(light_245)
Find drawing_238. Find wall_clock_249. Find drawing_239. Find drawing_241. Find drawing_242. Find drawing_243. Find drawing_240. Robot is inside dining_room_201. Robot is close light_245. Robot is no longer inside bedroom_67.Robot is no longer close light_169.
##############################
From agent.py
obs(light_245, Check light status)
Get this information:  light_245 is facing drawing_241. light_245 is facing drawing_242. light_245 is facing drawing_243. light_245 is facing television_248. light_245 is facing wall_clock_249. light_245 is close to doorjamb_165. light_245 is close to light_169. light_245 is close to drawing_174. light_245 is close to floor_202. light_245 is close to floor_203. light_245 is close to floor_76. light_245 is close to floor_77. light_245 is close to floor_206. light_245 is close to wall_209. light_245 is close to wall_211. light_245 is close to wall_84. light_245 is close to wall_85. light_245 is close to ceiling_216. light_245 is close to ceiling_217. light_245 is close to ceiling_94. light_245 is close to door_222. light_245 is close to ceiling_95. light_245 is close to trashcan_99. light_245 is close to drawing_238. light_245 is close to drawing_239. light_245 is close to drawing_240. light_245 is close to powersocket_246. light_245 is close to phone_247. light_245 is close to wall_clock_249. light_245 is close to character_65. light_245 is inside dining_room_201. light_245 is OFF. light_245 is CLOSED. light_245 is CLEAN. light_245 is PLUGGED_IN.
##############################
From agent.py
walk_executor(light_411)
Find drawing_402. Find drawing_404. Robot is inside home_office_319. Robot is close light_411. Robot is no longer inside dining_room_201.Robot is no longer close light_245.
##############################
From agent.py
obs(light_411, Check light status)
Get this information:  light_411 is close to floor_320. light_411 is close to floor_325. light_411 is close to wall_331. light_411 is close to wall_332. light_411 is close to wallshelf_235. light_411 is close to floor_205. light_411 is close to filing_cabinet_399. light_411 is close to floor_208. light_411 is close to ceiling_337. light_411 is close to drawing_402. light_411 is close to drawing_404. light_411 is close to wall_213. light_411 is close to wall_214. light_411 is close to ceiling_342. light_411 is close to doorjamb_346. light_411 is close to ceiling_219. light_411 is close to ceiling_220. light_411 is close to character_65. light_411 is inside home_office_319. light_411 is OFF. light_411 is CLOSED. light_411 is CLEAN. light_411 is PLUGGED_IN.
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def has_unlit_light(room:item):
    # Function to check if there is a light turned off in a room
    symbol unlit_light_exists=exists light: item : is_light(light) and is_off(light) and inside(light, room)
    return unlit_light_exists

behavior turn_on_light(light:item):
    body:
        achieve is_on(light) # Turn the light on

behavior __goal__():
    body:
        foreach room: item:
            # Iterate through all rooms
            if has_unlit_light(room):
                # Check if there is a light turned off in the room
                bind light: item where:
                    is_light(light) and is_off(light) and inside(light, room)
                # Bind the unlit light in the room
                turn_on_light(light) # Turn on the unlit light

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def has_unlit_light(room:item):
    # Function to check if there is a light turned off in a room
    symbol unlit_light_exists=exists light: item : is_light(light) and is_off(light) and inside(light, room)
    return unlit_light_exists

behavior turn_on_light(light:item):
    body:
        achieve is_on(light) # Turn the light on

behavior __goal__():
    body:
        foreach room: item:
            # Iterate through all rooms
            if has_unlit_light(room):
                # Check if there is a light turned off in the room
                bind light: item where:
                    is_light(light) and is_off(light) and inside(light, room)
                # Bind the unlit light in the room
                turn_on_light(light) # Turn on the unlit light

##############################
From agent.py-> find a plan in act()
walk_executor(light_64)switchon_executor(light_64)walk_executor(light_169)switchon_executor(light_169)walk_executor(light_245)switchon_executor(light_245)walk_executor(light_411)switchon_executor(light_411)
##############################
From agent.py
walk_executor(light_64)
Robot is inside bathroom_1. Robot is close light_64. Robot is no longer inside home_office_319.Robot is no longer close light_411.
##############################
From agent.py
switchon_executor(light_64)
Robot is inside bathroom_1. Robot is close light_64. 
##############################
From agent.py
walk_executor(light_169)
Robot is inside bedroom_67. Robot is close light_169. Robot is no longer inside bathroom_1.Robot is no longer close light_64.
##############################
From agent.py
switchon_executor(light_169)
Robot is inside bedroom_67. Robot is close light_169. 
##############################
From agent.py
walk_executor(light_245)
Robot is inside dining_room_201. Robot is close light_245. Robot is no longer inside bedroom_67.Robot is no longer close light_169.
##############################
From agent.py
switchon_executor(light_245)
Robot is inside dining_room_201. Robot is close light_245. 
##############################
From agent.py
walk_executor(light_411)
Robot is inside home_office_319. Robot is close light_411. Robot is no longer inside dining_room_201.Robot is no longer close light_245.
##############################
From agent.py
switchon_executor(light_411)
Robot is inside home_office_319. Robot is close light_411. 
##############################
