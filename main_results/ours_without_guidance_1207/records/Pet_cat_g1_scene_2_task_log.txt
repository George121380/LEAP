From agent.py
Reset goals: The sub-goals are: 
['1. Locate the cat.', '2. Touch the cat.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cat_2082_around_window_2109(cat:item):
    goal: not unknown(cat)
    body:
        assert is_cat(cat)
        bind window_instance:item where:
            is_window(window_instance) and id[window_instance]==2109
        achieve close_char(char,window_instance)
        if can_open(window_instance):
            achieve_once open(window_instance)
            exp(cat,window_instance)
        else:
            exp(cat,window_instance)
    eff:
        unknown[cat]=False
        close[cat,window_instance]=True
        close[window_instance,cat]=True
    

#exp_behavior_end

#goal_representation

def is_cat_found(cat:item):
    # Function to check if the cat has been located
    symbol cat_found=visited(cat)
    return cat_found

behavior locate_and_approach_cat(cat:item):
    body:
        achieve close_char(char, cat) # Move closer to the cat

behavior __goal__():
    body:
        if not exists cat: item : is_cat(cat) and is_cat_found(cat):
            # Iterate over all items to locate the cat
            foreach cat: item:
                if is_cat(cat) and not visited(cat):
                    observe(cat,"Locate the cat")
        else:
            # If the cat has been located, approach it
            bind cat: item where:
                is_cat(cat) and is_cat_found(cat)
            locate_and_approach_cat(cat)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'cat') at line 5874, column 23.
Expected one of: 
	* COLON

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_cat_2082_around_window_2109(cat:item):
    goal: not unknown(cat)
    body:
        assert is_cat(cat)
        bind window_instance:item where:
            is_window(window_instance) and id[window_instance]==2109
        achieve close_char(char,window_instance)
        if can_open(window_instance):
            achieve_once open(window_instance)
            exp(cat,window_instance)
        else:
            exp(cat,window_instance)
    eff:
        unknown[cat]=False
        close[cat,window_instance]=True
        close[window_instance,cat]=True
    

#goal_representation
 
def is_cat_found(cat:item):
    # Function to check if the cat has been located
    symbol cat_found=visited(cat)
    return cat_found

behavior locate_and_approach_cat(cat:item):
    body:
        achieve close_char(char, cat) # Move closer to the cat

behavior __goal__():
    body:
        if not exists cat: item : is_cat(cat) and is_cat_found(cat):
            # Iterate over all items to locate the cat
            foreach cat: item:
                if is_cat(cat) and not visited(cat):
                    observe(cat,"Locate the cat")
        else:
            # If the cat has been located, approach it
            bind cat: item where:
                is_cat(cat) and is_cat_found(cat)
            locate_and_approach_cat(cat)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'cat') at line 5874, column 23.
Expected one of: 
	* COLON

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_cat_2082_around_window_2109(cat:item):
    goal: not unknown(cat)
    body:
        assert is_cat(cat)
        bind window_instance:item where:
            is_window(window_instance) and id[window_instance]==2109
        achieve close_char(char,window_instance)
        if can_open(window_instance):
            achieve_once open(window_instance)
            exp(cat,window_instance)
        else:
            exp(cat,window_instance)
    eff:
        unknown[cat]=False
        close[cat,window_instance]=True
        close[window_instance,cat]=True
    

#goal_representation
 
def is_cat_found(cat:item):
    # Function to check if the cat has been located
    symbol cat_found=visited(cat)
    return cat_found

behavior locate_and_approach_cat(cat:item):
    body:
        achieve close_char(char, cat) # Move closer to the cat

behavior __goal__():
    body:
        if not exists cat: item : is_cat(cat) and is_cat_found(cat):
            # Iterate over all items to locate the cat
            foreach cat: item:
                if is_cat(cat) and not visited(cat):
                    observe(cat,"Locate the cat")
        else:
            # If the cat has been located, approach it
            bind cat: item where:
                is_cat(cat) and is_cat_found(cat)
            locate_and_approach_cat(cat)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cat_2082_around_window_2109(cat:item):
    goal: not unknown(cat)
    body:
        assert is_cat(cat)
        bind window_instance:item where:
            is_window(window_instance) and id[window_instance]==2109
        achieve close_char(char,window_instance)
        if can_open(window_instance):
            achieve_once open(window_instance)
            exp(cat,window_instance)
        else:
            exp(cat,window_instance)
    eff:
        unknown[cat]=False
        close[cat,window_instance]=True
        close[window_instance,cat]=True
    

#exp_behavior_end

#goal_representation

behavior locate_cat(cat:item):
    body:
        achieve close_char(char, cat)

behavior __goal__():
    body:
        if exists cat: item : is_cat(cat):
            bind cat: item where:
                is_cat(cat)
            achieve close_char(char, cat)
        else:
            foreach cat: item:
                if is_cat(cat) and not visited(cat):
                    observe(cat, "Locate the cat")

#goal_representation_end

##############################
From agent.py->reset_goal

behavior locate_cat(cat:item):
    body:
        achieve close_char(char, cat)

behavior __goal__():
    body:
        if exists cat: item : is_cat(cat):
            bind cat: item where:
                is_cat(cat)
            achieve close_char(char, cat)
        else:
            foreach cat: item:
                if is_cat(cat) and not visited(cat):
                    observe(cat, "Locate the cat")

##############################
From agent.py-> find a plan in act()
walk_executor(window_2109)open_executor(window_2109)exp(cat_2082, window_2109)walk_executor(cat_2082)
##############################
From agent.py
walk_executor(window_2109)
Robot is inside dining_room_1. Robot is close window_2109. Robot is no longer inside home_office_161.
##############################
From agent.py
open_executor(window_2109)
Robot is inside dining_room_1. Robot is close window_2109. 
##############################
From agent.py
exp(cat_2082, window_2109)
Failed to find cat_2082 around window_2109. 
##############################
From agent.py-> find a plan in act()
walk_executor(curtain_119)open_executor(curtain_119)exp(cat_2082, curtain_119)walk_executor(cat_2082)
##############################
From agent.py
walk_executor(curtain_119)
Robot is inside dining_room_1. Robot is close curtain_120. Robot is close curtain_119. Robot is no longer close window_2109.
##############################
From agent.py
open_executor(curtain_119)
Robot is inside dining_room_1. Robot is close curtain_120. Robot is close curtain_119. 
##############################
From agent.py
exp(cat_2082, curtain_119)
Failed to find cat_2082 around curtain_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(curtain_294)open_executor(curtain_294)exp(cat_2082, curtain_294)walk_executor(cat_2082)
##############################
From agent.py
walk_executor(curtain_294)
Robot is inside bathroom_265. Robot is close curtain_293. Robot is close curtain_294. Robot is no longer inside dining_room_1.Robot is no longer close curtain_120.Robot is no longer close curtain_119.
##############################
From agent.py
open_executor(curtain_294)
Robot is inside bathroom_265. Robot is close curtain_293. Robot is close curtain_294. 
##############################
From agent.py
exp(cat_2082, curtain_294)
Failed to find cat_2082 around curtain_294. 
##############################
From agent.py-> find a plan in act()
walk_executor(curtain_121)open_executor(curtain_121)exp(cat_2082, curtain_121)walk_executor(cat_2082)
##############################
From agent.py
walk_executor(curtain_121)
Robot is inside dining_room_1. Robot is close curtain_121. Robot is no longer inside bathroom_265.Robot is no longer close curtain_293.Robot is no longer close curtain_294.
##############################
From agent.py
open_executor(curtain_121)
Robot is inside dining_room_1. Robot is close curtain_121. 
##############################
From agent.py
exp(cat_2082, curtain_121)
Failed to find cat_2082 around curtain_121. 
##############################
From agent.py-> find a plan in act()
walk_executor(couch_192)exp(cat_2082, couch_192)walk_executor(cat_2082)
##############################
From agent.py
walk_executor(couch_192)
Find vacuum_cleaner_2094. Find cat_2082. Find pillow_195. Find drawing_196. Robot is inside home_office_161. Robot is close couch_192. Robot is no longer inside dining_room_1.Robot is no longer close curtain_121.
##############################
From agent.py
exp(cat_2082, couch_192)
Find cat_2082. 
##############################
From agent.py-> find a plan in act()
walk_executor(cat_2082)
##############################
From agent.py
walk_executor(cat_2082)
Robot is inside home_office_161. Robot is close couch_192. Robot is close cat_2082. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_headset_2086_around_computer_379(headset:item):
    goal: not unknown(headset)
    body:
        assert is_headset(headset)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==379
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(headset,computer_instance)
        else:
            exp(headset,computer_instance)
    eff:
        unknown[headset]=False
        close[headset,computer_instance]=True
        close[computer_instance,headset]=True
    

#exp_behavior_end

#goal_representation
 
behavior touch_cat(cat:item):
    body:
        touch(cat)  # Touch the cat

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat)  # Select the cat instance
        achieve close_char(char, cat)  # Ensure being close to the cat
        touch_cat(cat)  # Execute the action to touch the cat

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior touch_cat(cat:item):
    body:
        touch(cat)  # Touch the cat

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat)  # Select the cat instance
        achieve close_char(char, cat)  # Ensure being close to the cat
        touch_cat(cat)  # Execute the action to touch the cat

##############################
From agent.py-> find a plan in act()
touch_executor(cat_2082)
##############################
From agent.py
touch_executor(cat_2082)
Robot is inside home_office_161. Robot is close couch_192. Robot is close cat_2082. 
##############################
