From agent.py
Reset goals: The sub-goals are: 
['1. Find the shirt that needs to be ironed.', '2. Iron the shirt.', '3. Put the shirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2158_around_ironing_board_2144(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2144
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_shirt,ironing_board_instance)
        else:
            exp(clothes_shirt,ironing_board_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,ironing_board_instance]=True
        close[ironing_board_instance,clothes_shirt]=True
    

behavior find_clothes_pants_2157_around_cupboard_118(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(clothes_pants,cupboard_instance)
        else:
            exp(clothes_pants,cupboard_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,cupboard_instance]=True
        close[cupboard_instance,clothes_pants]=True
    

behavior find_cleaning_solution_2143_around_sink_120(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(cleaning_solution,sink_instance)
        else:
            exp(cleaning_solution,sink_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,sink_instance]=True
        close[sink_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
def is_shirt(x: item):
    # Function to check whether the specified item is a shirt
    return is_clothes_shirt(x)

behavior __goal__():
    body:
        if exists shirt: item : is_shirt(shirt):
            # If a shirt is already known, bind it and approach
            bind shirt: item where:
                is_shirt(shirt)
            achieve close_char(char, shirt)
        else:
            # If no known shirt exists, explore the environment to find one
            foreach shirt: item:
                if is_shirt(shirt) and not visited(shirt):
                    observe(shirt, "Check and identify the shirt needing ironing")
 
#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_shirt(x: item):
    # Function to check whether the specified item is a shirt
    return is_clothes_shirt(x)

behavior __goal__():
    body:
        if exists shirt: item : is_shirt(shirt):
            # If a shirt is already known, bind it and approach
            bind shirt: item where:
                is_shirt(shirt)
            achieve close_char(char, shirt)
        else:
            # If no known shirt exists, explore the environment to find one
            foreach shirt: item:
                if is_shirt(shirt) and not visited(shirt):
                    observe(shirt, "Check and identify the shirt needing ironing")
 
##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2144)exp(clothes_shirt_2158, ironing_board_2144)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot is inside dining_room_41. Robot is close ironing_board_2144. 
##############################
From agent.py
exp(clothes_shirt_2158, ironing_board_2144)
Fail to find clothes_shirt_2158 around ironing_board_2144. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(clothes_shirt_2158, cupboard_118)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(cupboard_118)
Find tea_2066. Find knife_2037. Find food_peanut_butter_2077. Find tray_128. Find pot_78. Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. Robot is no longer close ironing_board_2144.
##############################
From agent.py
open_executor(cupboard_118)
Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. 
##############################
From agent.py
exp(clothes_shirt_2158, cupboard_118)
Fail to find clothes_shirt_2158 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(dresser_274)open_executor(dresser_274)exp(clothes_shirt_2158, dresser_274)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(dresser_274)
Find hanger_292. Find hanger_293. Find hanger_294. Find blow_dryer_2057. Find cat_2069. Find check_2075. Find clothes_pants_2036. Robot is inside home_office_241. Robot is close hanger_292. Robot is close hanger_293. Robot is close hanger_294. Robot is close blow_dryer_2057. Robot is close dresser_274. Robot is close cat_2069. Robot is close check_2075. Robot is no longer inside dining_room_41.Robot is no longer close wall_68.Robot is no longer close tea_2066.Robot is no longer close knife_2037.Robot is no longer close cupboard_118.Robot is no longer close food_peanut_butter_2077.
##############################
From agent.py
open_executor(dresser_274)
Find keyboard_278. Find brush_2002. Find stamp_2043. Find phone_2147. Find headset_2131. Find mat_284. Find pillow_287. Find cd_2145. Find shampoo_2019. Find stamp_2022. Find chair_271. Find cd_player_2129. Find pencil_2014. Find shoes_2033. Find phone_2017. Find remote_control_2124. Find drawing_288. Find pencil_2020. Find mouse_280. Find headset_2146. Find pillow_286. Find dvd_player_2130. Robot is inside home_office_241. Robot is close hanger_292. Robot is close hanger_293. Robot is close hanger_294. Robot is close blow_dryer_2057. Robot is close dresser_274. Robot is close cat_2069. Robot is close check_2075. 
##############################
From agent.py
exp(clothes_shirt_2158, dresser_274)
Fail to find clothes_shirt_2158 around dresser_274. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(clothes_shirt_2158, cupboard_117)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(cupboard_117)
Find coffee_filter_2053. Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close wall_67. Robot is close cupboard_117. Robot is no longer inside home_office_241.Robot is no longer close hanger_292.Robot is no longer close hanger_293.Robot is no longer close hanger_294.Robot is no longer close blow_dryer_2057.Robot is no longer close dresser_274.Robot is no longer close cat_2069.Robot is no longer close check_2075.
##############################
From agent.py
exp(clothes_shirt_2158, cupboard_117)
Fail to find clothes_shirt_2158 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(bed_197)exp(clothes_shirt_2158, bed_197)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(bed_197)
Find clothes_dress_2116. Find clothes_scarf_2120. Find clothes_underwear_2121. Find drawing_201. Find pillow_207. Find pillow_208. Robot is inside bedroom_162. Robot is close bed_197. Robot is no longer inside dining_room_41.Robot is no longer close coffee_filter_2053.Robot is no longer close wall_67.Robot is no longer close cupboard_117.
##############################
From agent.py
exp(clothes_shirt_2158, bed_197)
Fail to find clothes_shirt_2158 around bed_197. 
##############################
From agent.py-> find a plan in act()
walk_executor(computer_209)exp(clothes_shirt_2158, computer_209)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(computer_209)
Find chair_194. Find mouse_213. Find keyboard_211. Robot is inside bedroom_162. Robot is close computer_209. Robot is no longer close bed_197.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2158 ?
Answer: Go to the dining room. Inside the dining room, locate the basket for clothes labeled basket_for_clothes_2078. The target item, clothes_shirt_2158, is inside this basket. Please retrieve it carefully from there.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to the dining room. Inside the dining room, locate the basket for clothes labeled basket_for_clothes_2078. The target item, clothes_shirt_2158, is inside this basket. Please retrieve it carefully from there.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to cupboard_118.
Action 4: Open cupboard_118.
Action 5: look for clothes_shirt_2158 around cupboard_118.
Action 6: Walk to dresser_274.
Action 7: Open dresser_274.
Action 8: look for clothes_shirt_2158 around dresser_274.
Action 9: Walk to cupboard_117.
Action 10: look for clothes_shirt_2158 around cupboard_117.
Action 11: Walk to bed_197.
Action 12: look for clothes_shirt_2158 around bed_197.
Action 13: Walk to computer_209.

##############################
From agent.py
exp(clothes_shirt_2158, computer_209)
Fail to find clothes_shirt_2158 around computer_209. 
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2079)open_executor(washing_machine_2079)exp(clothes_shirt_2158, washing_machine_2079)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close washing_machine_2079. Robot is no longer inside bedroom_162.Robot is no longer close computer_209.
##############################
From agent.py
open_executor(washing_machine_2079)
Robot is inside dining_room_41. Robot is close washing_machine_2079. 
##############################
From agent.py
exp(clothes_shirt_2158, washing_machine_2079)
Fail to find clothes_shirt_2158 around washing_machine_2079. 
##############################
From agent.py-> find a plan in act()
walk_executor(light_283)exp(clothes_shirt_2158, light_283)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(light_283)
Robot is inside home_office_241. Robot is close light_283. Robot is no longer inside dining_room_41.Robot is no longer close washing_machine_2079.
##############################
From agent.py
exp(clothes_shirt_2158, light_283)
Fail to find clothes_shirt_2158 around light_283. 
##############################
From agent.py-> find a plan in act()
walk_executor(doorjamb_309)exp(clothes_shirt_2158, doorjamb_309)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(doorjamb_309)
Robot is inside home_office_241. Robot is close doorjamb_309. Robot is no longer close light_283.
##############################
From agent.py
exp(clothes_shirt_2158, doorjamb_309)
Fail to find clothes_shirt_2158 around doorjamb_309. 
##############################
From agent.py-> find a plan in act()
walk_executor(phone_2017)exp(clothes_shirt_2158, phone_2017)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(phone_2017)
Robot is inside home_office_241. Robot is close phone_2017. Robot is close couch_269. Robot is no longer close doorjamb_309.
##############################
From agent.py
exp(clothes_shirt_2158, phone_2017)
Fail to find clothes_shirt_2158 around phone_2017. 
##############################
From agent.py-> find a plan in act()
walk_executor(couch_198)exp(clothes_shirt_2158, couch_198)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(couch_198)
Find clothes_jacket_2119. Find phone_2016. Find mat_203. Find chair_2003. Find rag_2052. Find instrument_guitar_2028. Robot is inside bedroom_162. Robot is close couch_198. Robot is no longer inside home_office_241.Robot is no longer close phone_2017.Robot is no longer close couch_269.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2158 ?
Answer: The target item, clothes_shirt_2158, is located inside the dining room. You will find it inside the basket_for_clothes_2078. Look for the basket_for_clothes_2078 in the dining room, and the clothes_shirt_2158 will be inside that basket.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to the dining room. Inside the dining room, locate the basket for clothes labeled basket_for_clothes_2078. The target item, clothes_shirt_2158, is inside this basket. Please retrieve it carefully from there.
The target item, clothes_shirt_2158, is located inside the dining room. You will find it inside the basket_for_clothes_2078. Look for the basket_for_clothes_2078 in the dining room, and the clothes_shirt_2158 will be inside that basket.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to cupboard_118.
Action 4: Open cupboard_118.
Action 5: look for clothes_shirt_2158 around cupboard_118.
Action 6: Walk to dresser_274.
Action 7: Open dresser_274.
Action 8: look for clothes_shirt_2158 around dresser_274.
Action 9: Walk to cupboard_117.
Action 10: look for clothes_shirt_2158 around cupboard_117.
Action 11: Walk to bed_197.
Action 12: look for clothes_shirt_2158 around bed_197.
Action 13: Walk to computer_209.
Action 14: look for clothes_shirt_2158 around computer_209.
Action 15: Walk to washing_machine_2079.
Action 16: Open washing_machine_2079.
Action 17: look for clothes_shirt_2158 around washing_machine_2079.
Action 18: Walk to light_283.
Action 19: look for clothes_shirt_2158 around light_283.
Action 20: Walk to doorjamb_309.
Action 21: look for clothes_shirt_2158 around doorjamb_309.
Action 22: Walk to phone_2017.
Action 23: look for clothes_shirt_2158 around phone_2017.
Action 24: Walk to couch_198.

##############################
From agent.py
exp(clothes_shirt_2158, couch_198)
Fail to find clothes_shirt_2158 around couch_198. 
##############################
From agent.py-> find a plan in act()
walk_executor(door_38)exp(clothes_shirt_2158, door_38)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(door_38)
Robot is inside bathroom_1. Robot is close floor_12. Robot is close door_38. Robot is no longer inside bedroom_162.Robot is no longer close couch_198.
##############################
From agent.py
exp(clothes_shirt_2158, door_38)
Fail to find clothes_shirt_2158 around door_38. 
##############################
From agent.py-> find a plan in act()
walk_executor(walllamp_141)exp(clothes_shirt_2158, walllamp_141)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(walllamp_141)
Robot is inside dining_room_41. Robot is close walllamp_141. Robot is no longer inside bathroom_1.Robot is no longer close floor_12.Robot is no longer close door_38.
##############################
From agent.py
exp(clothes_shirt_2158, walllamp_141)
Fail to find clothes_shirt_2158 around walllamp_141. 
##############################
From agent.py-> find a plan in act()
walk_executor(bench_113)exp(clothes_shirt_2158, bench_113)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(bench_113)
Find pillow_104. Find mat_102. Find pillow_103. Find pillow_105. Find pillow_106. Robot is inside dining_room_41. Robot is close bench_113. Robot is no longer close walllamp_141.
##############################
From agent.py
exp(clothes_shirt_2158, bench_113)
Fail to find clothes_shirt_2158 around bench_113. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_199)exp(clothes_shirt_2158, table_199)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(table_199)
Find wooden_spoon_2000. Find drawing_202. Find tea_bag_2023. Robot is inside bedroom_162. Robot is close table_199. Robot is no longer inside dining_room_41.Robot is no longer close bench_113.
##############################
From agent.py
exp(clothes_shirt_2158, table_199)
Fail to find clothes_shirt_2158 around table_199. 
##############################
From agent.py-> find a plan in act()
walk_executor(window_191)open_executor(window_191)exp(clothes_shirt_2158, window_191)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(window_191)
Robot is inside bedroom_162. Robot is close window_191. Robot is no longer close table_199.
##############################
From agent.py
open_executor(window_191)
Robot is inside bedroom_162. Robot is close window_191. 
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2158 ?
Answer: The target item, clothes_shirt_2158, is located in the basket_for_clothes_2078 inside dining_room_41. Please proceed to the dining room, locate the basket for clothes, and retrieve the shirt from inside it.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to the dining room. Inside the dining room, locate the basket for clothes labeled basket_for_clothes_2078. The target item, clothes_shirt_2158, is inside this basket. Please retrieve it carefully from there.
The target item, clothes_shirt_2158, is located inside the dining room. You will find it inside the basket_for_clothes_2078. Look for the basket_for_clothes_2078 in the dining room, and the clothes_shirt_2158 will be inside that basket.
The target item, clothes_shirt_2158, is located in the basket_for_clothes_2078 inside dining_room_41. Please proceed to the dining room, locate the basket for clothes, and retrieve the shirt from inside it.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to cupboard_118.
Action 4: Open cupboard_118.
Action 5: look for clothes_shirt_2158 around cupboard_118.
Action 6: Walk to dresser_274.
Action 7: Open dresser_274.
Action 8: look for clothes_shirt_2158 around dresser_274.
Action 9: Walk to cupboard_117.
Action 10: look for clothes_shirt_2158 around cupboard_117.
Action 11: Walk to bed_197.
Action 12: look for clothes_shirt_2158 around bed_197.
Action 13: Walk to computer_209.
Action 14: look for clothes_shirt_2158 around computer_209.
Action 15: Walk to washing_machine_2079.
Action 16: Open washing_machine_2079.
Action 17: look for clothes_shirt_2158 around washing_machine_2079.
Action 18: Walk to light_283.
Action 19: look for clothes_shirt_2158 around light_283.
Action 20: Walk to doorjamb_309.
Action 21: look for clothes_shirt_2158 around doorjamb_309.
Action 22: Walk to phone_2017.
Action 23: look for clothes_shirt_2158 around phone_2017.
Action 24: Walk to couch_198.
Action 25: look for clothes_shirt_2158 around couch_198.
Action 26: Walk to door_38.
Action 27: look for clothes_shirt_2158 around door_38.
Action 28: Walk to walllamp_141.
Action 29: look for clothes_shirt_2158 around walllamp_141.
Action 30: Walk to bench_113.
Action 31: look for clothes_shirt_2158 around bench_113.
Action 32: Walk to table_199.
Action 33: look for clothes_shirt_2158 around table_199.
Action 34: Walk to window_191.
Action 35: Open window_191.

##############################
From agent.py
exp(clothes_shirt_2158, window_191)
Fail to find clothes_shirt_2158 around window_191. 
##############################
From agent.py-> find a plan in act()
walk_executor(phone_2147)exp(clothes_shirt_2158, phone_2147)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(phone_2147)
Robot is inside home_office_241. Robot is close desk_272. Robot is close phone_2147. Robot is no longer inside bedroom_162.Robot is no longer close window_191.
##############################
From agent.py
exp(clothes_shirt_2158, phone_2147)
Fail to find clothes_shirt_2158 around phone_2147. 
##############################
From agent.py-> find a plan in act()
walk_executor(powersocket_282)exp(clothes_shirt_2158, powersocket_282)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(powersocket_282)
Robot is inside home_office_241. Robot is close powersocket_282. Robot is no longer close desk_272.Robot is no longer close phone_2147.
##############################
From agent.py
exp(clothes_shirt_2158, powersocket_282)
Fail to find clothes_shirt_2158 around powersocket_282. 
##############################
From agent.py-> find a plan in act()
walk_executor(dvd_player_2130)open_executor(dvd_player_2130)exp(clothes_shirt_2158, dvd_player_2130)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(dvd_player_2130)
Robot is inside home_office_241. Robot is close tvstand_273. Robot is close dvd_player_2130. Robot is no longer close powersocket_282.
##############################
From agent.py
open_executor(dvd_player_2130)
Robot is inside home_office_241. Robot is close tvstand_273. Robot is close dvd_player_2130. 
##############################
From agent.py
exp(clothes_shirt_2158, dvd_player_2130)
Fail to find clothes_shirt_2158 around dvd_player_2130. 
##############################
From agent.py-> find a plan in act()
walk_executor(door_62)exp(clothes_shirt_2158, door_62)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(door_62)
Find phone_71. Robot is inside dining_room_41. Robot is close floor_261. Robot is close door_62. Robot is no longer inside home_office_241.Robot is no longer close tvstand_273.Robot is no longer close dvd_player_2130.
##############################
From agent.py
exp(clothes_shirt_2158, door_62)
Fail to find clothes_shirt_2158 around door_62. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_275)exp(clothes_shirt_2158, bookshelf_275)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(bookshelf_275)
Robot is inside home_office_241. Robot is close bookshelf_275. Robot is close floor_262. Robot is no longer inside dining_room_41.Robot is no longer close floor_261.Robot is no longer close door_62.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2158 ?
Answer: Go to the dining room. Locate the basket labeled "basket_for_clothes_2078." The item "clothes_shirt_2158" is inside this basket.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to the dining room. Inside the dining room, locate the basket for clothes labeled basket_for_clothes_2078. The target item, clothes_shirt_2158, is inside this basket. Please retrieve it carefully from there.
The target item, clothes_shirt_2158, is located inside the dining room. You will find it inside the basket_for_clothes_2078. Look for the basket_for_clothes_2078 in the dining room, and the clothes_shirt_2158 will be inside that basket.
The target item, clothes_shirt_2158, is located in the basket_for_clothes_2078 inside dining_room_41. Please proceed to the dining room, locate the basket for clothes, and retrieve the shirt from inside it.
Go to the dining room. Locate the basket labeled "basket_for_clothes_2078." The item "clothes_shirt_2158" is inside this basket.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to cupboard_118.
Action 4: Open cupboard_118.
Action 5: look for clothes_shirt_2158 around cupboard_118.
Action 6: Walk to dresser_274.
Action 7: Open dresser_274.
Action 8: look for clothes_shirt_2158 around dresser_274.
Action 9: Walk to cupboard_117.
Action 10: look for clothes_shirt_2158 around cupboard_117.
Action 11: Walk to bed_197.
Action 12: look for clothes_shirt_2158 around bed_197.
Action 13: Walk to computer_209.
Action 14: look for clothes_shirt_2158 around computer_209.
Action 15: Walk to washing_machine_2079.
Action 16: Open washing_machine_2079.
Action 17: look for clothes_shirt_2158 around washing_machine_2079.
Action 18: Walk to light_283.
Action 19: look for clothes_shirt_2158 around light_283.
Action 20: Walk to doorjamb_309.
Action 21: look for clothes_shirt_2158 around doorjamb_309.
Action 22: Walk to phone_2017.
Action 23: look for clothes_shirt_2158 around phone_2017.
Action 24: Walk to couch_198.
Action 25: look for clothes_shirt_2158 around couch_198.
Action 26: Walk to door_38.
Action 27: look for clothes_shirt_2158 around door_38.
Action 28: Walk to walllamp_141.
Action 29: look for clothes_shirt_2158 around walllamp_141.
Action 30: Walk to bench_113.
Action 31: look for clothes_shirt_2158 around bench_113.
Action 32: Walk to table_199.
Action 33: look for clothes_shirt_2158 around table_199.
Action 34: Walk to window_191.
Action 35: Open window_191.
Action 36: look for clothes_shirt_2158 around window_191.
Action 37: Walk to phone_2147.
Action 38: look for clothes_shirt_2158 around phone_2147.
Action 39: Walk to powersocket_282.
Action 40: look for clothes_shirt_2158 around powersocket_282.
Action 41: Walk to dvd_player_2130.
Action 42: Open dvd_player_2130.
Action 43: look for clothes_shirt_2158 around dvd_player_2130.
Action 44: Walk to door_62.
Action 45: look for clothes_shirt_2158 around door_62.
Action 46: Walk to bookshelf_275.

##############################
From agent.py
exp(clothes_shirt_2158, bookshelf_275)
Fail to find clothes_shirt_2158 around bookshelf_275. 
##############################
From agent.py-> find a plan in act()
walk_executor(walllamp_34)exp(clothes_shirt_2158, walllamp_34)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(walllamp_34)
Find drawing_33. Robot is inside bathroom_1. Robot is close walllamp_34. Robot is no longer inside home_office_241.Robot is no longer close bookshelf_275.Robot is no longer close floor_262.
##############################
From agent.py
exp(clothes_shirt_2158, walllamp_34)
Fail to find clothes_shirt_2158 around walllamp_34. 
##############################
From agent.py-> find a plan in act()
walk_executor(doorjamb_37)exp(clothes_shirt_2158, doorjamb_37)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(doorjamb_37)
Robot is inside bathroom_1. Robot is close doorjamb_37. Robot is no longer close walllamp_34.
##############################
From agent.py
exp(clothes_shirt_2158, doorjamb_37)
Fail to find clothes_shirt_2158 around doorjamb_37. 
##############################
From agent.py-> find a plan in act()
walk_executor(remote_control_2124)exp(clothes_shirt_2158, remote_control_2124)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(remote_control_2124)
Robot is inside home_office_241. Robot is close tvstand_273. Robot is close remote_control_2124. Robot is no longer inside bathroom_1.Robot is no longer close doorjamb_37.
##############################
From agent.py
exp(clothes_shirt_2158, remote_control_2124)
Fail to find clothes_shirt_2158 around remote_control_2124. 
##############################
From agent.py-> find a plan in act()
walk_executor(curtain_22)open_executor(curtain_22)exp(clothes_shirt_2158, curtain_22)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(curtain_22)
Find mat_32. Robot is inside bathroom_1. Robot is close shower_21. Robot is close curtain_22. Robot is no longer inside home_office_241.Robot is no longer close tvstand_273.Robot is no longer close remote_control_2124.
##############################
From agent.py
open_executor(curtain_22)
Robot is inside bathroom_1. Robot is close shower_21. Robot is close curtain_22. 
##############################
From agent.py
exp(clothes_shirt_2158, curtain_22)
Fail to find clothes_shirt_2158 around curtain_22. 
##############################
From agent.py-> find a plan in act()
walk_executor(cpuscreen_210)exp(clothes_shirt_2158, cpuscreen_210)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(cpuscreen_210)
Find check_2026. Find laser_pointer_2034. Robot is inside bedroom_162. Robot is close desk_193. Robot is close cpuscreen_210. Robot is no longer inside bathroom_1.Robot is no longer close shower_21.Robot is no longer close curtain_22.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2158 ?
Answer: To find clothes_shirt_2158, go to the dining_room_41. Once inside the dining room, locate basket_for_clothes_2078. Clothes_shirt_2158 is inside this basket.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to the dining room. Inside the dining room, locate the basket for clothes labeled basket_for_clothes_2078. The target item, clothes_shirt_2158, is inside this basket. Please retrieve it carefully from there.
The target item, clothes_shirt_2158, is located inside the dining room. You will find it inside the basket_for_clothes_2078. Look for the basket_for_clothes_2078 in the dining room, and the clothes_shirt_2158 will be inside that basket.
The target item, clothes_shirt_2158, is located in the basket_for_clothes_2078 inside dining_room_41. Please proceed to the dining room, locate the basket for clothes, and retrieve the shirt from inside it.
Go to the dining room. Locate the basket labeled "basket_for_clothes_2078." The item "clothes_shirt_2158" is inside this basket.
To find clothes_shirt_2158, go to the dining_room_41. Once inside the dining room, locate basket_for_clothes_2078. Clothes_shirt_2158 is inside this basket.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to cupboard_118.
Action 4: Open cupboard_118.
Action 5: look for clothes_shirt_2158 around cupboard_118.
Action 6: Walk to dresser_274.
Action 7: Open dresser_274.
Action 8: look for clothes_shirt_2158 around dresser_274.
Action 9: Walk to cupboard_117.
Action 10: look for clothes_shirt_2158 around cupboard_117.
Action 11: Walk to bed_197.
Action 12: look for clothes_shirt_2158 around bed_197.
Action 13: Walk to computer_209.
Action 14: look for clothes_shirt_2158 around computer_209.
Action 15: Walk to washing_machine_2079.
Action 16: Open washing_machine_2079.
Action 17: look for clothes_shirt_2158 around washing_machine_2079.
Action 18: Walk to light_283.
Action 19: look for clothes_shirt_2158 around light_283.
Action 20: Walk to doorjamb_309.
Action 21: look for clothes_shirt_2158 around doorjamb_309.
Action 22: Walk to phone_2017.
Action 23: look for clothes_shirt_2158 around phone_2017.
Action 24: Walk to couch_198.
Action 25: look for clothes_shirt_2158 around couch_198.
Action 26: Walk to door_38.
Action 27: look for clothes_shirt_2158 around door_38.
Action 28: Walk to walllamp_141.
Action 29: look for clothes_shirt_2158 around walllamp_141.
Action 30: Walk to bench_113.
Action 31: look for clothes_shirt_2158 around bench_113.
Action 32: Walk to table_199.
Action 33: look for clothes_shirt_2158 around table_199.
Action 34: Walk to window_191.
Action 35: Open window_191.
Action 36: look for clothes_shirt_2158 around window_191.
Action 37: Walk to phone_2147.
Action 38: look for clothes_shirt_2158 around phone_2147.
Action 39: Walk to powersocket_282.
Action 40: look for clothes_shirt_2158 around powersocket_282.
Action 41: Walk to dvd_player_2130.
Action 42: Open dvd_player_2130.
Action 43: look for clothes_shirt_2158 around dvd_player_2130.
Action 44: Walk to door_62.
Action 45: look for clothes_shirt_2158 around door_62.
Action 46: Walk to bookshelf_275.
Action 47: look for clothes_shirt_2158 around bookshelf_275.
Action 48: Walk to walllamp_34.
Action 49: look for clothes_shirt_2158 around walllamp_34.
Action 50: Walk to doorjamb_37.
Action 51: look for clothes_shirt_2158 around doorjamb_37.
Action 52: Walk to remote_control_2124.
Action 53: look for clothes_shirt_2158 around remote_control_2124.
Action 54: Walk to curtain_22.
Action 55: Open curtain_22.
Action 56: look for clothes_shirt_2158 around curtain_22.
Action 57: Walk to cpuscreen_210.

##############################
From agent.py
exp(clothes_shirt_2158, cpuscreen_210)
Fail to find clothes_shirt_2158 around cpuscreen_210. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_120)exp(clothes_shirt_2158, sink_120)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(sink_120)
Find basket_for_clothes_2078. Find soap_2010. Find pot_2138. Find ice_2024. Find soap_2126. Find bowl_2141. Find plate_2152. Find cutting_board_2123. Find food_salt_2041. Find fork_2150. Find bowl_2140. Find bowl_2142. Find fork_2151. Robot is inside dining_room_41. Robot is close sink_120. Robot is close kitchen_counter_119. Robot is no longer inside bedroom_162.Robot is no longer close desk_193.Robot is no longer close cpuscreen_210.
##############################
From agent.py
exp(clothes_shirt_2158, sink_120)
Fail to find clothes_shirt_2158 around sink_120. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2078)exp(clothes_shirt_2158, basket_for_clothes_2078)walk_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(basket_for_clothes_2078)
Find clothes_pants_2157. Find clothes_shirt_2158. Find clothes_socks_2159. Find clothes_skirt_2160. Robot is inside dining_room_41. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close clothes_socks_2159. Robot is close clothes_skirt_2160. Robot is close basket_for_clothes_2078. Robot is no longer close sink_120.Robot is no longer close kitchen_counter_119.
##############################
From agent.py
exp(clothes_shirt_2158, basket_for_clothes_2078)
Find clothes_shirt_2158. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Iron the shirt.', '2. Place the shirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_coffe_maker_130(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind coffe_maker_instance:item where:
            is_coffe_maker(coffe_maker_instance) and id[coffe_maker_instance]==130
        achieve close_char(char,coffe_maker_instance)
        if can_open(coffe_maker_instance):
            achieve_once open(coffe_maker_instance)
            exp(iron,coffe_maker_instance)
        else:
            exp(iron,coffe_maker_instance)
    eff:
        unknown[iron]=False
        close[iron,coffe_maker_instance]=True
        close[coffe_maker_instance,iron]=True
    

#exp_behavior_end

#goal_representation
behavior find_and_ironing_shirt(shirt:item, ironing_board:item):
    body:
        achieve close_char(char, ironing_board)
        # Approach the ironing board
        achieve cut(shirt)
        # Iron the shirt

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2078 and inside(basket, dining_room)
        # Select the basket for clothes inside the dining room

        bind shirt: item where:
            is_clothes_shirt(shirt) and inside(shirt, basket)
        # Select the shirt inside the basket

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Select the ironing board

        find_and_ironing_shirt(shirt, ironing_board)
        # Proceed to iron the shirt
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_stove_2135(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2135
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(iron,stove_instance)
        else:
            exp(iron,stove_instance)
    eff:
        unknown[iron]=False
        close[iron,stove_instance]=True
        close[stove_instance,iron]=True
    

#exp_behavior_end

#goal_representation

behavior retrieve_shirt(shirt:item, basket:item):
    body:
        achieve inside(shirt, basket)

behavior iron_shirt(shirt:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        achieve clean(shirt)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2158
        # Select the shirt with ID 2158
        
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2078
        # Select the basket with clothes ID 2078
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board
        
        retrieve_shirt(shirt, basket)
        iron_shirt(shirt, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_goal

behavior retrieve_shirt(shirt:item, basket:item):
    body:
        achieve inside(shirt, basket)

behavior iron_shirt(shirt:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        achieve clean(shirt)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2158
        # Select the shirt with ID 2158
        
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2078
        # Select the basket with clothes ID 2078
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board
        
        retrieve_shirt(shirt, basket)
        iron_shirt(shirt, ironing_board)

##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2158)walk_executor(ironing_board_2144)put_executor(clothes_shirt_2158, ironing_board_2144)walk_executor(clothes_shirt_2158)wash_executor(clothes_shirt_2158)
##############################
From agent.py
grab_executor(clothes_shirt_2158)
Robot is inside dining_room_41. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close clothes_socks_2159. Robot is close clothes_skirt_2160. Robot is close basket_for_clothes_2078. Grabbing clothes_shirt_2158 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot is inside dining_room_41. Robot is close clothes_shirt_2158. Robot is close ironing_board_2144. Robot is no longer close clothes_pants_2157.Robot is no longer close clothes_socks_2159.Robot is no longer close clothes_skirt_2160.Robot is no longer close basket_for_clothes_2078.
##############################
From agent.py
put_executor(clothes_shirt_2158, ironing_board_2144)
Robot is inside dining_room_41. Robot is close clothes_shirt_2158. Robot is close ironing_board_2144. clothes_shirt_2158 released by right hand. 
##############################
From agent.py
walk_executor(clothes_shirt_2158)
Robot is inside dining_room_41. Robot is close clothes_shirt_2158. Robot is close ironing_board_2144. 
##############################
From agent.py
wash_executor(clothes_shirt_2158)
Robot is inside dining_room_41. Robot is close clothes_shirt_2158. Robot is close ironing_board_2144. 
##############################
From agent.py
Human Instruction: You need to iron the shirt, as it is currently only washed. Ensure the shirt is on the ironing board and proceed with the ironing action to complete this sub-task.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to cupboard_118.
Action 4: Open cupboard_118.
Action 5: look for clothes_shirt_2158 around cupboard_118.
Action 6: Walk to dresser_274.
Action 7: Open dresser_274.
Action 8: look for clothes_shirt_2158 around dresser_274.
Action 9: Walk to cupboard_117.
Action 10: look for clothes_shirt_2158 around cupboard_117.
Action 11: Walk to bed_197.
Action 12: look for clothes_shirt_2158 around bed_197.
Action 13: Walk to computer_209.
Action 14: look for clothes_shirt_2158 around computer_209.
Action 15: Walk to washing_machine_2079.
Action 16: Open washing_machine_2079.
Action 17: look for clothes_shirt_2158 around washing_machine_2079.
Action 18: Walk to light_283.
Action 19: look for clothes_shirt_2158 around light_283.
Action 20: Walk to doorjamb_309.
Action 21: look for clothes_shirt_2158 around doorjamb_309.
Action 22: Walk to phone_2017.
Action 23: look for clothes_shirt_2158 around phone_2017.
Action 24: Walk to couch_198.
Action 25: look for clothes_shirt_2158 around couch_198.
Action 26: Walk to door_38.
Action 27: look for clothes_shirt_2158 around door_38.
Action 28: Walk to walllamp_141.
Action 29: look for clothes_shirt_2158 around walllamp_141.
Action 30: Walk to bench_113.
Action 31: look for clothes_shirt_2158 around bench_113.
Action 32: Walk to table_199.
Action 33: look for clothes_shirt_2158 around table_199.
Action 34: Walk to window_191.
Action 35: Open window_191.
Action 36: look for clothes_shirt_2158 around window_191.
Action 37: Walk to phone_2147.
Action 38: look for clothes_shirt_2158 around phone_2147.
Action 39: Walk to powersocket_282.
Action 40: look for clothes_shirt_2158 around powersocket_282.
Action 41: Walk to dvd_player_2130.
Action 42: Open dvd_player_2130.
Action 43: look for clothes_shirt_2158 around dvd_player_2130.
Action 44: Walk to door_62.
Action 45: look for clothes_shirt_2158 around door_62.
Action 46: Walk to bookshelf_275.
Action 47: look for clothes_shirt_2158 around bookshelf_275.
Action 48: Walk to walllamp_34.
Action 49: look for clothes_shirt_2158 around walllamp_34.
Action 50: Walk to doorjamb_37.
Action 51: look for clothes_shirt_2158 around doorjamb_37.
Action 52: Walk to remote_control_2124.
Action 53: look for clothes_shirt_2158 around remote_control_2124.
Action 54: Walk to curtain_22.
Action 55: Open curtain_22.
Action 56: look for clothes_shirt_2158 around curtain_22.
Action 57: Walk to cpuscreen_210.
Action 58: look for clothes_shirt_2158 around cpuscreen_210.
Action 59: Walk to sink_120.
Action 60: look for clothes_shirt_2158 around sink_120.
Action 61: Walk to basket_for_clothes_2078.
Action 62: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 63: Grab clothes_shirt_2158.
Action 64: Walk to ironing_board_2144.
Action 65: Put clothes_shirt_2158 on ironing_board_2144.
Action 66: Walk to clothes_shirt_2158.
Action 67: Wash clothes_shirt_2158.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_kitchen_counter_122(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(iron,kitchen_counter_instance)
        else:
            exp(iron,kitchen_counter_instance)
    eff:
        unknown[iron]=False
        close[iron,kitchen_counter_instance]=True
        close[kitchen_counter_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
def has_iron(ironing_board:item):
    # Determine whether the ironing board has an iron
    symbol has_iron=exists iron:item: is_iron(iron) and close(iron, ironing_board)
    return has_iron

behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        if has_iron(ironing_board):
            bind iron: item where:
                is_iron(iron) and close(iron, ironing_board)
            achieve_once is_on(iron)
            # Turn on the iron

            achieve cut(shirt)
            # Iron the shirt

            achieve_once is_off(iron)
            # Turn off the iron after use

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2158
        # Select the shirt with ID 2158

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Select the ironing board with ID 2144

        if has_iron(ironing_board):
            bind iron: item where:
                is_iron(iron) and close(iron, ironing_board)
            iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Variable iron already exists.
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_iron_2161_around_kitchen_counter_122(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(iron,kitchen_counter_instance)
        else:
            exp(iron,kitchen_counter_instance)
    eff:
        unknown[iron]=False
        close[iron,kitchen_counter_instance]=True
        close[kitchen_counter_instance,iron]=True
    

#goal_representation
def has_iron(ironing_board:item):
    # Determine whether the ironing board has an iron
    symbol has_iron=exists iron:item: is_iron(iron) and close(iron, ironing_board)
    return has_iron

behavior iron_shirt(shirt:item, ironing_board:item):
    body:
        if has_iron(ironing_board):
            bind iron: item where:
                is_iron(iron) and close(iron, ironing_board)
            achieve_once is_on(iron)
            # Turn on the iron

            achieve cut(shirt)
            # Iron the shirt

            achieve_once is_off(iron)
            # Turn off the iron after use

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2158
        # Select the shirt with ID 2158

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Select the ironing board with ID 2144

        iron_shirt(shirt, ironing_board)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_dishwasher_129(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==129
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(iron,dishwasher_instance)
        else:
            exp(iron,dishwasher_instance)
    eff:
        unknown[iron]=False
        close[iron,dishwasher_instance]=True
        close[dishwasher_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item):
    body:
        achieve clean(shirt) # Iron the shirt to clean it

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_shirt(shirt, ironing_board)
 
#goal_representation_end

##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Iron the shirt.  ', '2. Put the shirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_stove_2135(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2135
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(iron,stove_instance)
        else:
            exp(iron,stove_instance)
    eff:
        unknown[iron]=False
        close[iron,stove_instance]=True
        close[stove_instance,iron]=True
    

#exp_behavior_end

#goal_representation
behavior pick_up_and_prepare_shirt(shirt:item, ironing_board:item):
    body:
        achieve close_char(char, ironing_board)
        # Approach the ironing board
        achieve inhand(shirt)
        # Pick up the shirt
        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board

behavior iron_shirt(shirt:item, iron:item):
    body:
        achieve_once inhand(iron)
        # Temporarily hold the iron
        achieve clean(shirt)
        # Iron the shirt to make it clean and pressed

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) 
        # Put the shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        pick_up_and_prepare_shirt(shirt, ironing_board)
        iron_shirt(shirt, iron)
        place_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_kitchen_counter_122(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(iron,kitchen_counter_instance)
        else:
            exp(iron,kitchen_counter_instance)
    eff:
        unknown[iron]=False
        close[iron,kitchen_counter_instance]=True
        close[kitchen_counter_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item):
    body:
        achieve clean(shirt) # Ensure the shirt is clean
        achieve on(shirt, ironing_board) # Place the shirt on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the shirt that is clean

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_shirt(shirt, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Find the ironing board and set up the iron.', '2. Iron the shirt.', '3. Place the ironed shirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_fridge_126(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(iron,fridge_instance)
        else:
            exp(iron,fridge_instance)
    eff:
        unknown[iron]=False
        close[iron,fridge_instance]=True
        close[fridge_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
def has_iron_on_board(ironing_board:item):
    # Function to check if an iron is on the specified ironing board
    symbol iron_on_board=exists iron: item : is_iron(iron) and on(iron, ironing_board)
    return iron_on_board

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        if not has_iron_on_board(ironing_board):
            foreach iron: item:
                if is_iron(iron) and not visited(iron):
                    observe(iron, "Check if the iron is close to the ironing board")
                    # Observe to check if the iron is close to the ironing board

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_iron_on_board(ironing_board:item):
    # Function to check if an iron is on the specified ironing board
    symbol iron_on_board=exists iron: item : is_iron(iron) and on(iron, ironing_board)
    return iron_on_board

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        if not has_iron_on_board(ironing_board):
            foreach iron: item:
                if is_iron(iron) and not visited(iron):
                    observe(iron, "Check if the iron is close to the ironing board")
                    # Observe to check if the iron is close to the ironing board

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(iron_2161, fridge_126)walk_executor(iron_2161)obs(iron_2161, Check if the iron is close to the ironing board)
##############################
From agent.py
walk_executor(fridge_126)
Find food_onion_2048. Find food_food_2046. Find food_food_2073. Find food_steak_2080. Find food_apple_2081. Find food_bacon_2082. Find food_banana_2083. Find food_cake_2085. Find food_carrot_2086. Find food_cereal_2087. Find food_cheese_2088. Find food_chicken_2089. Find food_dessert_2090. Find food_donut_2091. Find food_egg_2092. Find food_fish_2093. Find food_food_2094. Find food_fruit_2095. Find food_hamburger_2096. Find food_ice_cream_2097. Find food_jam_2098. Find food_kiwi_2099. Find food_lemon_2100. Find food_noodles_2101. Find food_oatmeal_2102. Find food_orange_2103. Find food_onion_2104. Find food_peanut_butter_2105. Find food_pizza_2106. Find food_potato_2107. Find food_rice_2108. Find food_salt_2109. Find food_snack_2110. Find food_sugar_2111. Find food_turkey_2112. Find food_vegetable_2113. Find food_food_2001. Find sauce_2148. Find food_food_1000. Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. Robot is no longer close ironing_board_2144.Robot is no longer close clothes_shirt_2158.
##############################
From agent.py
switchoff_executor(fridge_126)
Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
open_executor(fridge_126)
Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
exp(iron_2161, fridge_126)
Fail to find iron_2161 around fridge_126. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2140)exp(iron_2161, bowl_2140)walk_executor(iron_2161)obs(iron_2161, Check if the iron is close to the ironing board)
##############################
From agent.py
walk_executor(bowl_2140)
Robot is inside dining_room_41. Robot is close bowl_2140. Robot is close kitchen_counter_119. Robot is no longer close food_onion_2048.Robot is no longer close food_food_2046.Robot is no longer close food_food_2073.Robot is no longer close food_steak_2080.Robot is no longer close food_apple_2081.Robot is no longer close food_bacon_2082.Robot is no longer close food_banana_2083.Robot is no longer close food_cake_2085.Robot is no longer close food_carrot_2086.Robot is no longer close food_cereal_2087.Robot is no longer close food_cheese_2088.Robot is no longer close food_chicken_2089.Robot is no longer close food_dessert_2090.Robot is no longer close food_donut_2091.Robot is no longer close food_egg_2092.Robot is no longer close food_fish_2093.Robot is no longer close food_food_2094.Robot is no longer close food_fruit_2095.Robot is no longer close food_hamburger_2096.Robot is no longer close food_ice_cream_2097.Robot is no longer close food_jam_2098.Robot is no longer close food_kiwi_2099.Robot is no longer close food_lemon_2100.Robot is no longer close food_noodles_2101.Robot is no longer close food_oatmeal_2102.Robot is no longer close food_orange_2103.Robot is no longer close food_onion_2104.Robot is no longer close food_peanut_butter_2105.Robot is no longer close food_pizza_2106.Robot is no longer close food_potato_2107.Robot is no longer close food_rice_2108.Robot is no longer close food_salt_2109.Robot is no longer close food_snack_2110.Robot is no longer close food_sugar_2111.Robot is no longer close food_turkey_2112.Robot is no longer close food_vegetable_2113.Robot is no longer close food_food_2001.Robot is no longer close floor_44.Robot is no longer close sauce_2148.Robot is no longer close fridge_126.
##############################
From agent.py
exp(iron_2161, bowl_2140)
Fail to find iron_2161 around bowl_2140. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(iron_2161, kitchen_counter_122)walk_executor(iron_2161)obs(iron_2161, Check if the iron is close to the ironing board)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Find spectacles_2153. Find fryingpan_2154. Robot is inside dining_room_41. Robot is close kitchen_counter_122. Robot is no longer close bowl_2140.Robot is no longer close kitchen_counter_119.
##############################
From agent.py
exp(iron_2161, kitchen_counter_122)
Fail to find iron_2161 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_counter_18)exp(iron_2161, bathroom_counter_18)walk_executor(iron_2161)obs(iron_2161, Check if the iron is close to the ironing board)
##############################
From agent.py
walk_executor(bathroom_counter_18)
Find phone_2029. Robot is inside bathroom_1. Robot is close bathroom_counter_18. Robot is no longer inside dining_room_41.Robot is no longer close kitchen_counter_122.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find iron_2161 ?
Answer: Go to the dining_room_41. In there, look for bowl_2142; the iron_2161 is placed on top of it. Both objects, iron_2161 and bowl_2142, are near each other, so they should be easy to spot together.
Re-decompose: None

##############################
From agent.py
Human Instruction: You need to iron the shirt, as it is currently only washed. Ensure the shirt is on the ironing board and proceed with the ironing action to complete this sub-task.
Go to the dining_room_41. In there, look for bowl_2142; the iron_2161 is placed on top of it. Both objects, iron_2161 and bowl_2142, are near each other, so they should be easy to spot together.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to cupboard_118.
Action 4: Open cupboard_118.
Action 5: look for clothes_shirt_2158 around cupboard_118.
Action 6: Walk to dresser_274.
Action 7: Open dresser_274.
Action 8: look for clothes_shirt_2158 around dresser_274.
Action 9: Walk to cupboard_117.
Action 10: look for clothes_shirt_2158 around cupboard_117.
Action 11: Walk to bed_197.
Action 12: look for clothes_shirt_2158 around bed_197.
Action 13: Walk to computer_209.
Action 14: look for clothes_shirt_2158 around computer_209.
Action 15: Walk to washing_machine_2079.
Action 16: Open washing_machine_2079.
Action 17: look for clothes_shirt_2158 around washing_machine_2079.
Action 18: Walk to light_283.
Action 19: look for clothes_shirt_2158 around light_283.
Action 20: Walk to doorjamb_309.
Action 21: look for clothes_shirt_2158 around doorjamb_309.
Action 22: Walk to phone_2017.
Action 23: look for clothes_shirt_2158 around phone_2017.
Action 24: Walk to couch_198.
Action 25: look for clothes_shirt_2158 around couch_198.
Action 26: Walk to door_38.
Action 27: look for clothes_shirt_2158 around door_38.
Action 28: Walk to walllamp_141.
Action 29: look for clothes_shirt_2158 around walllamp_141.
Action 30: Walk to bench_113.
Action 31: look for clothes_shirt_2158 around bench_113.
Action 32: Walk to table_199.
Action 33: look for clothes_shirt_2158 around table_199.
Action 34: Walk to window_191.
Action 35: Open window_191.
Action 36: look for clothes_shirt_2158 around window_191.
Action 37: Walk to phone_2147.
Action 38: look for clothes_shirt_2158 around phone_2147.
Action 39: Walk to powersocket_282.
Action 40: look for clothes_shirt_2158 around powersocket_282.
Action 41: Walk to dvd_player_2130.
Action 42: Open dvd_player_2130.
Action 43: look for clothes_shirt_2158 around dvd_player_2130.
Action 44: Walk to door_62.
Action 45: look for clothes_shirt_2158 around door_62.
Action 46: Walk to bookshelf_275.
Action 47: look for clothes_shirt_2158 around bookshelf_275.
Action 48: Walk to walllamp_34.
Action 49: look for clothes_shirt_2158 around walllamp_34.
Action 50: Walk to doorjamb_37.
Action 51: look for clothes_shirt_2158 around doorjamb_37.
Action 52: Walk to remote_control_2124.
Action 53: look for clothes_shirt_2158 around remote_control_2124.
Action 54: Walk to curtain_22.
Action 55: Open curtain_22.
Action 56: look for clothes_shirt_2158 around curtain_22.
Action 57: Walk to cpuscreen_210.
Action 58: look for clothes_shirt_2158 around cpuscreen_210.
Action 59: Walk to sink_120.
Action 60: look for clothes_shirt_2158 around sink_120.
Action 61: Walk to basket_for_clothes_2078.
Action 62: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 63: Grab clothes_shirt_2158.
Action 64: Walk to ironing_board_2144.
Action 65: Put clothes_shirt_2158 on ironing_board_2144.
Action 66: Walk to clothes_shirt_2158.
Action 67: Wash clothes_shirt_2158.
Action 68: Walk to fridge_126.
Action 69: Switch off fridge_126.
Action 70: Open fridge_126.
Action 71: look for iron_2161 around fridge_126.
Action 72: Walk to bowl_2140.
Action 73: look for iron_2161 around bowl_2140.
Action 74: Walk to kitchen_counter_122.
Action 75: look for iron_2161 around kitchen_counter_122.
Action 76: Walk to bathroom_counter_18.

##############################
From agent.py
exp(iron_2161, bathroom_counter_18)
Fail to find iron_2161 around bathroom_counter_18. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2142)exp(iron_2161, bowl_2142)walk_executor(iron_2161)obs(iron_2161, Check if the iron is close to the ironing board)
##############################
From agent.py
walk_executor(bowl_2142)
Find iron_2161. Robot is inside dining_room_41. Robot is close bowl_2142. Robot is close kitchen_counter_119. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_18.
##############################
From agent.py
exp(iron_2161, bowl_2142)
Find iron_2161. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2161)obs(iron_2161, Check if the iron is close to the ironing board)
##############################
From agent.py
walk_executor(iron_2161)
Robot is inside dining_room_41. Robot is close bowl_2142. Robot is close iron_2161. Robot is no longer close kitchen_counter_119.
##############################
From agent.py
obs(iron_2161, Check if the iron is close to the ironing board)
Get this information:  iron_2161 is close to bowl_2142. iron_2161 is close to character_240. iron_2161 is inside dining_room_41. iron_2161 is on bowl_2142. iron_2161 is PLUGGED_OUT. iron_2161 is CLEAN. iron_2161 is OFF.
##############################
From agent.py
Human Instruction: The robot needs to place the iron on the ironing board and plug it in to set up for the ironing task. The iron has been found but not yet moved to or placed on the ironing board.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to cupboard_118.
Action 4: Open cupboard_118.
Action 5: look for clothes_shirt_2158 around cupboard_118.
Action 6: Walk to dresser_274.
Action 7: Open dresser_274.
Action 8: look for clothes_shirt_2158 around dresser_274.
Action 9: Walk to cupboard_117.
Action 10: look for clothes_shirt_2158 around cupboard_117.
Action 11: Walk to bed_197.
Action 12: look for clothes_shirt_2158 around bed_197.
Action 13: Walk to computer_209.
Action 14: look for clothes_shirt_2158 around computer_209.
Action 15: Walk to washing_machine_2079.
Action 16: Open washing_machine_2079.
Action 17: look for clothes_shirt_2158 around washing_machine_2079.
Action 18: Walk to light_283.
Action 19: look for clothes_shirt_2158 around light_283.
Action 20: Walk to doorjamb_309.
Action 21: look for clothes_shirt_2158 around doorjamb_309.
Action 22: Walk to phone_2017.
Action 23: look for clothes_shirt_2158 around phone_2017.
Action 24: Walk to couch_198.
Action 25: look for clothes_shirt_2158 around couch_198.
Action 26: Walk to door_38.
Action 27: look for clothes_shirt_2158 around door_38.
Action 28: Walk to walllamp_141.
Action 29: look for clothes_shirt_2158 around walllamp_141.
Action 30: Walk to bench_113.
Action 31: look for clothes_shirt_2158 around bench_113.
Action 32: Walk to table_199.
Action 33: look for clothes_shirt_2158 around table_199.
Action 34: Walk to window_191.
Action 35: Open window_191.
Action 36: look for clothes_shirt_2158 around window_191.
Action 37: Walk to phone_2147.
Action 38: look for clothes_shirt_2158 around phone_2147.
Action 39: Walk to powersocket_282.
Action 40: look for clothes_shirt_2158 around powersocket_282.
Action 41: Walk to dvd_player_2130.
Action 42: Open dvd_player_2130.
Action 43: look for clothes_shirt_2158 around dvd_player_2130.
Action 44: Walk to door_62.
Action 45: look for clothes_shirt_2158 around door_62.
Action 46: Walk to bookshelf_275.
Action 47: look for clothes_shirt_2158 around bookshelf_275.
Action 48: Walk to walllamp_34.
Action 49: look for clothes_shirt_2158 around walllamp_34.
Action 50: Walk to doorjamb_37.
Action 51: look for clothes_shirt_2158 around doorjamb_37.
Action 52: Walk to remote_control_2124.
Action 53: look for clothes_shirt_2158 around remote_control_2124.
Action 54: Walk to curtain_22.
Action 55: Open curtain_22.
Action 56: look for clothes_shirt_2158 around curtain_22.
Action 57: Walk to cpuscreen_210.
Action 58: look for clothes_shirt_2158 around cpuscreen_210.
Action 59: Walk to sink_120.
Action 60: look for clothes_shirt_2158 around sink_120.
Action 61: Walk to basket_for_clothes_2078.
Action 62: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 63: Grab clothes_shirt_2158.
Action 64: Walk to ironing_board_2144.
Action 65: Put clothes_shirt_2158 on ironing_board_2144.
Action 66: Walk to clothes_shirt_2158.
Action 67: Wash clothes_shirt_2158.
Action 68: Walk to fridge_126.
Action 69: Switch off fridge_126.
Action 70: Open fridge_126.
Action 71: look for iron_2161 around fridge_126.
Action 72: Walk to bowl_2140.
Action 73: look for iron_2161 around bowl_2140.
Action 74: Walk to kitchen_counter_122.
Action 75: look for iron_2161 around kitchen_counter_122.
Action 76: Walk to bathroom_counter_18.
Action 77: look for iron_2161 around bathroom_counter_18.
Action 78: Walk to bowl_2142.
Action 79: look for iron_2161 around bowl_2142.
Action 80: Walk to iron_2161.
Action 81: Observe around iron_2161 with the question of Check if the iron is close to the ironing board.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_trashcan_99(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind trashcan_instance:item where:
            is_trashcan(trashcan_instance) and id[trashcan_instance]==99
        achieve close_char(char,trashcan_instance)
        if can_open(trashcan_instance):
            achieve_once open(trashcan_instance)
            exp(rag,trashcan_instance)
        else:
            exp(rag,trashcan_instance)
    eff:
        unknown[rag]=False
        close[rag,trashcan_instance]=True
        close[trashcan_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior setup_ironing_board_and_iron(ironing_board:item, iron:item, powersocket:item):
    body:
        achieve on(iron, ironing_board)
        # Ensure the iron is placed on the ironing board
        
        achieve plugged(iron)
        # Ensure the iron is plugged in for use

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Select the ironing board with ID 2144

        bind iron: item where:
            is_iron(iron) and id[iron] == 2161
        # Select the iron with ID 2161

        bind powersocket: item where:
            is_powersocket(powersocket) and close(powersocket, ironing_board)
        # Select a power socket close to the ironing board

        setup_ironing_board_and_iron(ironing_board, iron, powersocket)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_table_cloth_2005_around_table_114(table_cloth:item):
    goal: not unknown(table_cloth)
    body:
        assert is_table_cloth(table_cloth)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==114
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(table_cloth,table_instance)
        else:
            exp(table_cloth,table_instance)
    eff:
        unknown[table_cloth]=False
        close[table_cloth,table_instance]=True
        close[table_instance,table_cloth]=True
    

#exp_behavior_end

#goal_representation
 
behavior setup_iron(iron:item, ironing_board:item, socket:item):
    body:
        achieve on(iron, ironing_board)
        # Place the iron on the ironing board
        achieve plugged(iron)
        # Plug the iron into the power socket

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind socket: item where:
            is_powersocket(socket) and close(socket, ironing_board)
        # Select a power socket close to the ironing board

        setup_iron(iron, ironing_board, socket)
 
#goal_representation_end

##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Find the shirt that needs to be ironed.', '2. Iron the shirt.', '3. Put the ironed shirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior observe_shirt(shirt:item):
    body:
        observe(shirt, "Locate and identify the shirt that needs to be ironed")

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        observe_shirt(shirt)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior observe_shirt(shirt:item):
    body:
        observe(shirt, "Locate and identify the shirt that needs to be ironed")

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        observe_shirt(shirt)

##############################
From agent.py-> find a plan in act()
walk_executor(clothes_shirt_2158)obs(clothes_shirt_2158, Locate and identify the shirt that needs to be ironed)
##############################
From agent.py
walk_executor(clothes_shirt_2158)
Robot is inside dining_room_41. Robot is close ironing_board_2144. Robot is close clothes_shirt_2158. Robot is no longer close iron_2161.Robot is no longer close bowl_2142.
##############################
From agent.py
obs(clothes_shirt_2158, Locate and identify the shirt that needs to be ironed)
Get this information:  clothes_shirt_2158 is close to ironing_board_2144. clothes_shirt_2158 is close to character_240. clothes_shirt_2158 is inside dining_room_41. clothes_shirt_2158 is on ironing_board_2144. clothes_shirt_2158 is CLEAN.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_hat_2117_around_clothes_dress_2116(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind clothes_dress_instance:item where:
            is_clothes_dress(clothes_dress_instance) and id[clothes_dress_instance]==2116
        achieve close_char(char,clothes_dress_instance)
        if can_open(clothes_dress_instance):
            achieve_once open(clothes_dress_instance)
            exp(clothes_hat,clothes_dress_instance)
        else:
            exp(clothes_hat,clothes_dress_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,clothes_dress_instance]=True
        close[clothes_dress_instance,clothes_hat]=True
    

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_soap_2010_around_toilet_15(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind toilet_instance:item where:
            is_toilet(toilet_instance) and id[toilet_instance]==15
        achieve close_char(char,toilet_instance)
        if can_open(toilet_instance):
            achieve_once open(toilet_instance)
            exp(soap,toilet_instance)
        else:
            exp(soap,toilet_instance)
    eff:
        unknown[soap]=False
        close[soap,toilet_instance]=True
        close[toilet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_iron_on_ironing_board(iron:item, ironing_board:item):
    body:
        achieve close(iron, ironing_board)
        # Ensure the iron is close to the ironing board
        
        achieve on(iron, ironing_board)
        # Place the iron on the ironing board

behavior plug_in_iron(iron:item, powersocket:item):
    body:
        achieve plugged(iron)
        # Ensure the iron is plugged in

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        
        bind powersocket: item where:
            is_powersocket(powersocket)
        # Select a power socket

        place_iron_on_ironing_board(iron, ironing_board)
        plug_in_iron(iron, powersocket)
        # Ensure the iron is set up properly for the ironing task

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior place_iron_on_ironing_board(iron:item, ironing_board:item):
    body:
        achieve close(iron, ironing_board)
        # Ensure the iron is close to the ironing board
        
        achieve on(iron, ironing_board)
        # Place the iron on the ironing board

behavior plug_in_iron(iron:item, powersocket:item):
    body:
        achieve plugged(iron)
        # Ensure the iron is plugged in

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        
        bind powersocket: item where:
            is_powersocket(powersocket)
        # Select a power socket

        place_iron_on_ironing_board(iron, ironing_board)
        plug_in_iron(iron, powersocket)
        # Ensure the iron is set up properly for the ironing task

##############################
From agent.py-> find a plan in act()
walk_executor(iron_2161)grab_executor(iron_2161)walk_executor(ironing_board_2144)put_executor(iron_2161, ironing_board_2144)walk_executor(iron_2161)plugin_executor(iron_2161)
##############################
From agent.py
walk_executor(iron_2161)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close bowl_2142. Robot is no longer close ironing_board_2144.Robot is no longer close clothes_shirt_2158.
##############################
From agent.py
grab_executor(iron_2161)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close bowl_2142. Grabbing iron_2161 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close ironing_board_2144. Robot is no longer close bowl_2142.
##############################
From agent.py
put_executor(iron_2161, ironing_board_2144)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close ironing_board_2144. iron_2161 released by right hand. 
##############################
From agent.py
walk_executor(iron_2161)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close ironing_board_2144. 
##############################
From agent.py
plugin_executor(iron_2161)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close ironing_board_2144. 
##############################
From agent.py
Human Instruction: You need to iron the shirt that is on the ironing board. The current steps taken have prepared the iron by placing it on the ironing board and plugging it in, but the ironing process has not yet been performed.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to cupboard_118.
Action 4: Open cupboard_118.
Action 5: look for clothes_shirt_2158 around cupboard_118.
Action 6: Walk to dresser_274.
Action 7: Open dresser_274.
Action 8: look for clothes_shirt_2158 around dresser_274.
Action 9: Walk to cupboard_117.
Action 10: look for clothes_shirt_2158 around cupboard_117.
Action 11: Walk to bed_197.
Action 12: look for clothes_shirt_2158 around bed_197.
Action 13: Walk to computer_209.
Action 14: look for clothes_shirt_2158 around computer_209.
Action 15: Walk to washing_machine_2079.
Action 16: Open washing_machine_2079.
Action 17: look for clothes_shirt_2158 around washing_machine_2079.
Action 18: Walk to light_283.
Action 19: look for clothes_shirt_2158 around light_283.
Action 20: Walk to doorjamb_309.
Action 21: look for clothes_shirt_2158 around doorjamb_309.
Action 22: Walk to phone_2017.
Action 23: look for clothes_shirt_2158 around phone_2017.
Action 24: Walk to couch_198.
Action 25: look for clothes_shirt_2158 around couch_198.
Action 26: Walk to door_38.
Action 27: look for clothes_shirt_2158 around door_38.
Action 28: Walk to walllamp_141.
Action 29: look for clothes_shirt_2158 around walllamp_141.
Action 30: Walk to bench_113.
Action 31: look for clothes_shirt_2158 around bench_113.
Action 32: Walk to table_199.
Action 33: look for clothes_shirt_2158 around table_199.
Action 34: Walk to window_191.
Action 35: Open window_191.
Action 36: look for clothes_shirt_2158 around window_191.
Action 37: Walk to phone_2147.
Action 38: look for clothes_shirt_2158 around phone_2147.
Action 39: Walk to powersocket_282.
Action 40: look for clothes_shirt_2158 around powersocket_282.
Action 41: Walk to dvd_player_2130.
Action 42: Open dvd_player_2130.
Action 43: look for clothes_shirt_2158 around dvd_player_2130.
Action 44: Walk to door_62.
Action 45: look for clothes_shirt_2158 around door_62.
Action 46: Walk to bookshelf_275.
Action 47: look for clothes_shirt_2158 around bookshelf_275.
Action 48: Walk to walllamp_34.
Action 49: look for clothes_shirt_2158 around walllamp_34.
Action 50: Walk to doorjamb_37.
Action 51: look for clothes_shirt_2158 around doorjamb_37.
Action 52: Walk to remote_control_2124.
Action 53: look for clothes_shirt_2158 around remote_control_2124.
Action 54: Walk to curtain_22.
Action 55: Open curtain_22.
Action 56: look for clothes_shirt_2158 around curtain_22.
Action 57: Walk to cpuscreen_210.
Action 58: look for clothes_shirt_2158 around cpuscreen_210.
Action 59: Walk to sink_120.
Action 60: look for clothes_shirt_2158 around sink_120.
Action 61: Walk to basket_for_clothes_2078.
Action 62: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 63: Grab clothes_shirt_2158.
Action 64: Walk to ironing_board_2144.
Action 65: Put clothes_shirt_2158 on ironing_board_2144.
Action 66: Walk to clothes_shirt_2158.
Action 67: Wash clothes_shirt_2158.
Action 68: Walk to fridge_126.
Action 69: Switch off fridge_126.
Action 70: Open fridge_126.
Action 71: look for iron_2161 around fridge_126.
Action 72: Walk to bowl_2140.
Action 73: look for iron_2161 around bowl_2140.
Action 74: Walk to kitchen_counter_122.
Action 75: look for iron_2161 around kitchen_counter_122.
Action 76: Walk to bathroom_counter_18.
Action 77: look for iron_2161 around bathroom_counter_18.
Action 78: Walk to bowl_2142.
Action 79: look for iron_2161 around bowl_2142.
Action 80: Walk to iron_2161.
Action 81: Observe around iron_2161 with the question of Check if the iron is close to the ironing board.
Action 82: Walk to clothes_shirt_2158.
Action 83: Observe around clothes_shirt_2158 with the question of Locate and identify the shirt that needs to be ironed.
Action 84: Walk to iron_2161.
Action 85: Grab iron_2161.
Action 86: Walk to ironing_board_2144.
Action 87: Put iron_2161 on ironing_board_2144.
Action 88: Walk to iron_2161.
Action 89: Plug in iron_2161.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve clean(shirt) # Ensure the shirt is clean
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_shirt(shirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_glue_2045_around_oven_127(glue:item):
    goal: not unknown(glue)
    body:
        assert is_glue(glue)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==127
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(glue,oven_instance)
        else:
            exp(glue,oven_instance)
    eff:
        unknown[glue]=False
        close[glue,oven_instance]=True
        close[oven_instance,glue]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_a_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        achieve plugged(iron)
        achieve is_on(iron)
        achieve clean(shirt)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_a_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_a_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        achieve plugged(iron)
        achieve is_on(iron)
        achieve clean(shirt)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_a_shirt(shirt, ironing_board, iron)

##############################
From agent.py-> find a plan in act()
switchon_executor(iron_2161)
##############################
From agent.py
switchon_executor(iron_2161)
Robot is inside dining_room_41. Robot is close iron_2161. Robot is close ironing_board_2144. 
##############################
From agent.py
Human Instruction: The shirt still needs to be ironed. Although the iron has been placed on the ironing board, plugged in, and turned on, the action of ironing the shirt has not yet been performed. You need to complete the ironing of the shirt before proceeding to the next sub-task.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to cupboard_118.
Action 4: Open cupboard_118.
Action 5: look for clothes_shirt_2158 around cupboard_118.
Action 6: Walk to dresser_274.
Action 7: Open dresser_274.
Action 8: look for clothes_shirt_2158 around dresser_274.
Action 9: Walk to cupboard_117.
Action 10: look for clothes_shirt_2158 around cupboard_117.
Action 11: Walk to bed_197.
Action 12: look for clothes_shirt_2158 around bed_197.
Action 13: Walk to computer_209.
Action 14: look for clothes_shirt_2158 around computer_209.
Action 15: Walk to washing_machine_2079.
Action 16: Open washing_machine_2079.
Action 17: look for clothes_shirt_2158 around washing_machine_2079.
Action 18: Walk to light_283.
Action 19: look for clothes_shirt_2158 around light_283.
Action 20: Walk to doorjamb_309.
Action 21: look for clothes_shirt_2158 around doorjamb_309.
Action 22: Walk to phone_2017.
Action 23: look for clothes_shirt_2158 around phone_2017.
Action 24: Walk to couch_198.
Action 25: look for clothes_shirt_2158 around couch_198.
Action 26: Walk to door_38.
Action 27: look for clothes_shirt_2158 around door_38.
Action 28: Walk to walllamp_141.
Action 29: look for clothes_shirt_2158 around walllamp_141.
Action 30: Walk to bench_113.
Action 31: look for clothes_shirt_2158 around bench_113.
Action 32: Walk to table_199.
Action 33: look for clothes_shirt_2158 around table_199.
Action 34: Walk to window_191.
Action 35: Open window_191.
Action 36: look for clothes_shirt_2158 around window_191.
Action 37: Walk to phone_2147.
Action 38: look for clothes_shirt_2158 around phone_2147.
Action 39: Walk to powersocket_282.
Action 40: look for clothes_shirt_2158 around powersocket_282.
Action 41: Walk to dvd_player_2130.
Action 42: Open dvd_player_2130.
Action 43: look for clothes_shirt_2158 around dvd_player_2130.
Action 44: Walk to door_62.
Action 45: look for clothes_shirt_2158 around door_62.
Action 46: Walk to bookshelf_275.
Action 47: look for clothes_shirt_2158 around bookshelf_275.
Action 48: Walk to walllamp_34.
Action 49: look for clothes_shirt_2158 around walllamp_34.
Action 50: Walk to doorjamb_37.
Action 51: look for clothes_shirt_2158 around doorjamb_37.
Action 52: Walk to remote_control_2124.
Action 53: look for clothes_shirt_2158 around remote_control_2124.
Action 54: Walk to curtain_22.
Action 55: Open curtain_22.
Action 56: look for clothes_shirt_2158 around curtain_22.
Action 57: Walk to cpuscreen_210.
Action 58: look for clothes_shirt_2158 around cpuscreen_210.
Action 59: Walk to sink_120.
Action 60: look for clothes_shirt_2158 around sink_120.
Action 61: Walk to basket_for_clothes_2078.
Action 62: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 63: Grab clothes_shirt_2158.
Action 64: Walk to ironing_board_2144.
Action 65: Put clothes_shirt_2158 on ironing_board_2144.
Action 66: Walk to clothes_shirt_2158.
Action 67: Wash clothes_shirt_2158.
Action 68: Walk to fridge_126.
Action 69: Switch off fridge_126.
Action 70: Open fridge_126.
Action 71: look for iron_2161 around fridge_126.
Action 72: Walk to bowl_2140.
Action 73: look for iron_2161 around bowl_2140.
Action 74: Walk to kitchen_counter_122.
Action 75: look for iron_2161 around kitchen_counter_122.
Action 76: Walk to bathroom_counter_18.
Action 77: look for iron_2161 around bathroom_counter_18.
Action 78: Walk to bowl_2142.
Action 79: look for iron_2161 around bowl_2142.
Action 80: Walk to iron_2161.
Action 81: Observe around iron_2161 with the question of Check if the iron is close to the ironing board.
Action 82: Walk to clothes_shirt_2158.
Action 83: Observe around clothes_shirt_2158 with the question of Locate and identify the shirt that needs to be ironed.
Action 84: Walk to iron_2161.
Action 85: Grab iron_2161.
Action 86: Walk to ironing_board_2144.
Action 87: Put iron_2161 on ironing_board_2144.
Action 88: Walk to iron_2161.
Action 89: Plug in iron_2161.
Action 90: Switch on iron_2161.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board
        assert is_on(iron) and plugged(iron)
        # Ensure the iron is on and plugged in

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron that is plugged and turned on
        
        iron_shirt(shirt, ironing_board, iron)
        # Execute the ironing behavior

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and on(iron, ironing_board)
        # Select the iron on the ironing board

        iron_shirt(shirt, ironing_board, iron)


#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_dishwasher_129(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==129
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(towel,dishwasher_instance)
        else:
            exp(towel,dishwasher_instance)
    eff:
        unknown[towel]=False
        close[towel,dishwasher_instance]=True
        close[dishwasher_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior plug_in_and_turn_on_iron(iron:item):
    body:
        achieve plugged(iron) # Plug in the iron
        achieve is_on(iron) # Turn on the iron

behavior iron_shirt(iron:item, shirt:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve close_char(char, iron) # Ensure you are close to the iron
        achieve close_char(char, shirt) # Ensure you are close to the shirt

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        plug_in_and_turn_on_iron(iron)
        iron_shirt(iron, shirt, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt: item, ironing_board: item, iron: item):
    body:
        assert is_clothes(shirt)
        assert is_ironing_board(ironing_board)
        assert is_iron(iron)
        
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve is_on(iron) # Ensure the iron is turned on
        
        # Ironing action is implicitly carried out here

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt: item, iron: item, ironing_board: item):
    body:
        achieve clean(shirt) # Ironing the shirt makes it smooth and clean

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2158
        # Select the shirt with ID 2158

        bind iron: item where:
            is_iron(iron) and is_on(iron) and plugged(iron)
        # Select an iron that is on and plugged in

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Select the ironing board with ID 2144

        iron_shirt(shirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        achieve on(iron, ironing_board)
        achieve is_on(iron)
        achieve plugged(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt]==2158
        # Select the shirt item already identified

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board]==2144
        # Select the ironing board which is known in the task

        bind iron: item where:
            is_iron(iron) and id[iron]==2161
        # Select the iron which is known in the task
        
        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_dishwasher_129(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==129
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(rag,dishwasher_instance)
        else:
            exp(rag,dishwasher_instance)
    eff:
        unknown[rag]=False
        close[rag,dishwasher_instance]=True
        close[dishwasher_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothes_shirt_needs_ironing(shirt:item):
    # Function to check if the shirt is the one that needs ironing
    symbol needs_ironing=not clean(shirt)
    return needs_ironing

behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve_once inhand(iron) # Temporarily hold the iron for ironing the shirt
        wipe(shirt) # Perform the ironing action on the shirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and is_clothes_shirt_needs_ironing(shirt)
        # Select the shirt that needs to be ironed
        
        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron that is plugged in and turned on

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_shirt(shirt, iron, ironing_board) # Iron the shirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_shower_16(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==16
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(towel,shower_instance)
        else:
            exp(towel,shower_instance)
    eff:
        unknown[towel]=False
        close[towel,shower_instance]=True
        close[shower_instance,towel]=True
    

behavior find_rag_2025_around_dishwasher_129(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==129
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(rag,dishwasher_instance)
        else:
            exp(rag,dishwasher_instance)
    eff:
        unknown[rag]=False
        close[rag,dishwasher_instance]=True
        close[dishwasher_instance,rag]=True
    

#exp_behavior_end

#goal_representation
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) # Select the shirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(shirt, ironing_board, iron)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_tooth_paste_2059_around_bathroom_cabinet_17(tooth_paste:item):
    goal: not unknown(tooth_paste)
    body:
        assert is_tooth_paste(tooth_paste)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(tooth_paste,bathroom_cabinet_instance)
        else:
            exp(tooth_paste,bathroom_cabinet_instance)
    eff:
        unknown[tooth_paste]=False
        close[tooth_paste,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,tooth_paste]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve plugged(iron)
        # Ensure the iron is plugged in
        achieve is_on(iron)
        # Ensure the iron is turned on
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt that needs to be ironed

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_shirt(shirt, iron, ironing_board)
        # Iron the shirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

behavior find_rag_2025_around_sink_19(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==19
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(rag,sink_instance)
        else:
            exp(rag,sink_instance)
    eff:
        unknown[rag]=False
        close[rag,sink_instance]=True
        close[sink_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board
        
        achieve plugged(iron)
        # Ensure the iron is plugged in
        
        achieve is_on(iron)
        # Ensure the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2158
        # Select the shirt with ID 2158

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Select the ironing board with ID 2144
        
        bind iron: item where:
            is_iron(iron) and id[iron] == 2161
        # Select the iron with ID 2161
        
        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve close(shirt, iron)
        # Ensure the shirt is close to the iron to be ironed
        achieve clean(shirt)
        # Ensure the shirt is ironed clean
        achieve on(shirt, ironing_board)
        # Place the shirt back on the ironing board after ironing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2158
        # Select the shirt that needs to be ironed (ID 2158)

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Select the ironing board with ID 2144

        bind iron: item where:
            is_iron(iron) and id[iron] == 2161
        # Select the iron with ID 2161

        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

behavior find_pillow_208_around_pillow_208(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==208
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is turned on
        achieve clean(shirt) # Iron the shirt until it is clean of wrinkles

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and surfaces(ironing_board)
        # Select the ironing board with a surface

        bind iron: item where:
            is_iron(iron) and close(iron, ironing_board)
        # Select the iron close to the ironing board

        iron_shirt(shirt, ironing_board, iron)
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothes_shirt_clean(shirt: item):
    # Function to check if the shirt is cleaned
    symbol shirt_clean=clean(shirt)
    return shirt_clean

behavior iron_shirt(shirt: item, iron: item, ironing_board: item):
    body:
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2158
        # Bind the shirt with ID 2158

        bind iron: item where:
            is_iron(iron) and id[iron] == 2161
        # Bind the iron with ID 2161

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Bind the ironing board with ID 2144

        assert is_clothes_shirt_clean(shirt) # Check that the shirt is clean

        iron_shirt(shirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_trashcan_99(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind trashcan_instance:item where:
            is_trashcan(trashcan_instance) and id[trashcan_instance]==99
        achieve close_char(char,trashcan_instance)
        if can_open(trashcan_instance):
            achieve_once open(trashcan_instance)
            exp(rag,trashcan_instance)
        else:
            exp(rag,trashcan_instance)
    eff:
        unknown[rag]=False
        close[rag,trashcan_instance]=True
        close[trashcan_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve clean(shirt) # Ensure the shirt is clean after ironing
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve is_on(iron) # Ensure the iron is on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_curtain_206(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind curtain_instance:item where:
            is_curtain(curtain_instance) and id[curtain_instance]==206
        achieve close_char(char,curtain_instance)
        if can_open(curtain_instance):
            achieve_once open(curtain_instance)
            exp(towel,curtain_instance)
        else:
            exp(towel,curtain_instance)
    eff:
        unknown[towel]=False
        close[towel,curtain_instance]=True
        close[curtain_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
behavior iron_shirt(shirt:item, iron:item):
    body:
        achieve clean(shirt) # Ensure the shirt is ironed (cleaned from wrinkles)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt that needs to be ironed

        bind iron: item where:
            is_iron(iron) and is_on(iron)
        # Select the iron that is turned on

        iron_shirt(shirt, iron)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt that needs ironing

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and surfaces(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(shirt, ironing_board, iron)


#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_bathroom_cabinet_17(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
def is_ironing_ready(ironing_board:item, iron:item):
    # Function to check if the iron is ready and placed on the ironing board
    symbol ready=plugged(iron) and is_on(iron) and on(iron, ironing_board)
    return ready

behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        if is_ironing_ready(ironing_board, iron):
            achieve on(shirt, ironing_board)
            # Ensure the shirt is on the ironing board to be ironed
        else:
            observe(iron, "Check if the iron is well prepared for ironing")

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Select the ironing board with ID 2144

        bind iron: item where:
            is_iron(iron) and id[iron] == 2161
        # Select the iron with ID 2161

        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2158
        # Select the shirt with ID 2158

        iron_shirt(shirt, ironing_board, iron)
        # Iron the shirt on the ironing board

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is switched on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

behavior find_after_shave_2042_around_bathroom_cabinet_17(after_shave:item):
    goal: not unknown(after_shave)
    body:
        assert is_after_shave(after_shave)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(after_shave,bathroom_cabinet_instance)
        else:
            exp(after_shave,bathroom_cabinet_instance)
    eff:
        unknown[after_shave]=False
        close[after_shave,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,after_shave]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board
        achieve is_on(iron)
        # Ensure the iron is on to iron the shirt

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        iron_shirt(shirt, iron, ironing_board)
        # Iron the shirt
        
        place_shirt_on_bed(shirt, bed)
        # Place the shirt on the bed

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board
        achieve is_on(iron)
        # Ensure the iron is on to iron the shirt

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        iron_shirt(shirt, iron, ironing_board)
        # Iron the shirt
        
        place_shirt_on_bed(shirt, bed)
        # Place the shirt on the bed

##############################
From agent.py-> find a plan in act()
walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(clothes_shirt_2158)
Robot is inside dining_room_41. Robot is close ironing_board_2144. Robot is close clothes_shirt_2158. Robot is no longer close iron_2161.
##############################
From agent.py
grab_executor(clothes_shirt_2158)
Robot is inside dining_room_41. Robot is close ironing_board_2144. Robot is close clothes_shirt_2158. Grabbing clothes_shirt_2158 by right hand. 
##############################
From agent.py
walk_executor(bed_197)
Robot is inside bedroom_162. Robot is close clothes_shirt_2158. Robot is close bed_197. Robot is no longer inside dining_room_41.Robot is no longer close ironing_board_2144.
##############################
From agent.py
put_executor(clothes_shirt_2158, bed_197)
Robot is inside bedroom_162. Robot is close clothes_shirt_2158. Robot is close bed_197. clothes_shirt_2158 released by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior complete_ironing(shirt:item, ironing_board:item, iron:item):
    body:
        achieve clean(shirt) # Ensure the shirt is ironed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        complete_ironing(shirt, ironing_board, iron)
        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and not dirty(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_box_2038_around_filing_cabinet_200(box:item):
    goal: not unknown(box)
    body:
        assert is_box(box)
        bind filing_cabinet_instance:item where:
            is_filing_cabinet(filing_cabinet_instance) and id[filing_cabinet_instance]==200
        achieve close_char(char,filing_cabinet_instance)
        if can_open(filing_cabinet_instance):
            achieve_once open(filing_cabinet_instance)
            exp(box,filing_cabinet_instance)
        else:
            exp(box,filing_cabinet_instance)
    eff:
        unknown[box]=False
        close[box,filing_cabinet_instance]=True
        close[filing_cabinet_instance,box]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_table_cloth_2005_around_table_270(table_cloth:item):
    goal: not unknown(table_cloth)
    body:
        assert is_table_cloth(table_cloth)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==270
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(table_cloth,table_instance)
        else:
            exp(table_cloth,table_instance)
    eff:
        unknown[table_cloth]=False
        close[table_cloth,table_instance]=True
        close[table_instance,table_cloth]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt that is clean

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_105_around_pillow_105(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==105
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt that has been ironed

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
        # Put the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_shower_16(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==16
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(towel,shower_instance)
        else:
            exp(towel,shower_instance)
    eff:
        unknown[towel]=False
        close[towel,shower_instance]=True
        close[shower_instance,towel]=True
    

#exp_behavior_end

#goal_representation

behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2158
        # Select the ironed shirt with ID 2158

        bind bed: item where:
            is_bed(bed) and id[bed] == 197
        # Select the bed with ID 197

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt) # Ensure the shirt is the one that needs to be ironed and clean
        bind bed: item where:
            is_bed(bed) # Select the bed
        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_clothes_underwear_2121(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind clothes_underwear_instance:item where:
            is_clothes_underwear(clothes_underwear_instance) and id[clothes_underwear_instance]==2121
        achieve close_char(char,clothes_underwear_instance)
        if can_open(clothes_underwear_instance):
            achieve_once open(clothes_underwear_instance)
            exp(towel,clothes_underwear_instance)
        else:
            exp(towel,clothes_underwear_instance)
    eff:
        unknown[towel]=False
        close[towel,clothes_underwear_instance]=True
        close[clothes_underwear_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_shirt_on_bed(shirt, bed)
        # Place the shirt on the bed
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_207_around_pillow_106(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==106
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt
        
        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_apple_2081_around_fryingpan_2154(food_apple:item):
    goal: not unknown(food_apple)
    body:
        assert is_food_apple(food_apple)
        bind fryingpan_instance:item where:
            is_fryingpan(fryingpan_instance) and id[fryingpan_instance]==2154
        achieve close_char(char,fryingpan_instance)
        if can_open(fryingpan_instance):
            achieve_once open(fryingpan_instance)
            exp(food_apple,fryingpan_instance)
        else:
            exp(food_apple,fryingpan_instance)
    eff:
        unknown[food_apple]=False
        close[food_apple,fryingpan_instance]=True
        close[fryingpan_instance,food_apple]=True
    

behavior find_towel_2128_around_shower_16(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==16
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(towel,shower_instance)
        else:
            exp(towel,shower_instance)
    eff:
        unknown[towel]=False
        close[towel,shower_instance]=True
        close[shower_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior move_ironed_shirt_to_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed
        
        move_ironed_shirt_to_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_105_around_pillow_105(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==105
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_shirt_on_bed(shirt, bed)
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select a clean shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        observe(shirt, "Identify if the shirt is ironed and ready to be placed on the bed")
        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        observe(shirt, "Identify if the shirt is ironed and ready to be placed on the bed")
        put_ironed_shirt_on_bed(shirt, bed)

##############################
From agent.py-> find a plan in act()
obs(clothes_shirt_2158, Identify if the shirt is ironed and ready to be placed on the bed)
##############################
From agent.py
obs(clothes_shirt_2158, Identify if the shirt is ironed and ready to be placed on the bed)
Get this information:  clothes_shirt_2158 is close to character_240. clothes_shirt_2158 is close to bed_197. clothes_shirt_2158 is inside dining_room_41. clothes_shirt_2158 is on bed_197. clothes_shirt_2158 is CLEAN.
##############################
From agent.py
Human Instruction: The shirt needs to be ironed before placing it on the bed. The robot has not performed the action of ironing the shirt, which is required prior to completing the sub-task of putting the ironed shirt on the bed.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to cupboard_118.
Action 4: Open cupboard_118.
Action 5: look for clothes_shirt_2158 around cupboard_118.
Action 6: Walk to dresser_274.
Action 7: Open dresser_274.
Action 8: look for clothes_shirt_2158 around dresser_274.
Action 9: Walk to cupboard_117.
Action 10: look for clothes_shirt_2158 around cupboard_117.
Action 11: Walk to bed_197.
Action 12: look for clothes_shirt_2158 around bed_197.
Action 13: Walk to computer_209.
Action 14: look for clothes_shirt_2158 around computer_209.
Action 15: Walk to washing_machine_2079.
Action 16: Open washing_machine_2079.
Action 17: look for clothes_shirt_2158 around washing_machine_2079.
Action 18: Walk to light_283.
Action 19: look for clothes_shirt_2158 around light_283.
Action 20: Walk to doorjamb_309.
Action 21: look for clothes_shirt_2158 around doorjamb_309.
Action 22: Walk to phone_2017.
Action 23: look for clothes_shirt_2158 around phone_2017.
Action 24: Walk to couch_198.
Action 25: look for clothes_shirt_2158 around couch_198.
Action 26: Walk to door_38.
Action 27: look for clothes_shirt_2158 around door_38.
Action 28: Walk to walllamp_141.
Action 29: look for clothes_shirt_2158 around walllamp_141.
Action 30: Walk to bench_113.
Action 31: look for clothes_shirt_2158 around bench_113.
Action 32: Walk to table_199.
Action 33: look for clothes_shirt_2158 around table_199.
Action 34: Walk to window_191.
Action 35: Open window_191.
Action 36: look for clothes_shirt_2158 around window_191.
Action 37: Walk to phone_2147.
Action 38: look for clothes_shirt_2158 around phone_2147.
Action 39: Walk to powersocket_282.
Action 40: look for clothes_shirt_2158 around powersocket_282.
Action 41: Walk to dvd_player_2130.
Action 42: Open dvd_player_2130.
Action 43: look for clothes_shirt_2158 around dvd_player_2130.
Action 44: Walk to door_62.
Action 45: look for clothes_shirt_2158 around door_62.
Action 46: Walk to bookshelf_275.
Action 47: look for clothes_shirt_2158 around bookshelf_275.
Action 48: Walk to walllamp_34.
Action 49: look for clothes_shirt_2158 around walllamp_34.
Action 50: Walk to doorjamb_37.
Action 51: look for clothes_shirt_2158 around doorjamb_37.
Action 52: Walk to remote_control_2124.
Action 53: look for clothes_shirt_2158 around remote_control_2124.
Action 54: Walk to curtain_22.
Action 55: Open curtain_22.
Action 56: look for clothes_shirt_2158 around curtain_22.
Action 57: Walk to cpuscreen_210.
Action 58: look for clothes_shirt_2158 around cpuscreen_210.
Action 59: Walk to sink_120.
Action 60: look for clothes_shirt_2158 around sink_120.
Action 61: Walk to basket_for_clothes_2078.
Action 62: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 63: Grab clothes_shirt_2158.
Action 64: Walk to ironing_board_2144.
Action 65: Put clothes_shirt_2158 on ironing_board_2144.
Action 66: Walk to clothes_shirt_2158.
Action 67: Wash clothes_shirt_2158.
Action 68: Walk to fridge_126.
Action 69: Switch off fridge_126.
Action 70: Open fridge_126.
Action 71: look for iron_2161 around fridge_126.
Action 72: Walk to bowl_2140.
Action 73: look for iron_2161 around bowl_2140.
Action 74: Walk to kitchen_counter_122.
Action 75: look for iron_2161 around kitchen_counter_122.
Action 76: Walk to bathroom_counter_18.
Action 77: look for iron_2161 around bathroom_counter_18.
Action 78: Walk to bowl_2142.
Action 79: look for iron_2161 around bowl_2142.
Action 80: Walk to iron_2161.
Action 81: Observe around iron_2161 with the question of Check if the iron is close to the ironing board.
Action 82: Walk to clothes_shirt_2158.
Action 83: Observe around clothes_shirt_2158 with the question of Locate and identify the shirt that needs to be ironed.
Action 84: Walk to iron_2161.
Action 85: Grab iron_2161.
Action 86: Walk to ironing_board_2144.
Action 87: Put iron_2161 on ironing_board_2144.
Action 88: Walk to iron_2161.
Action 89: Plug in iron_2161.
Action 90: Switch on iron_2161.
Action 91: Walk to clothes_shirt_2158.
Action 92: Grab clothes_shirt_2158.
Action 93: Walk to bed_197.
Action 94: Put clothes_shirt_2158 on bed_197.
Action 95: Observe around clothes_shirt_2158 with the question of Identify if the shirt is ironed and ready to be placed on the bed.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_103_around_pillow_286(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==286
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Put the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_clothes_dress_2116(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind clothes_dress_instance:item where:
            is_clothes_dress(clothes_dress_instance) and id[clothes_dress_instance]==2116
        achieve close_char(char,clothes_dress_instance)
        if can_open(clothes_dress_instance):
            achieve_once open(clothes_dress_instance)
            exp(towel,clothes_dress_instance)
        else:
            exp(towel,clothes_dress_instance)
    eff:
        unknown[towel]=False
        close[towel,clothes_dress_instance]=True
        close[clothes_dress_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation

behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the ironed shirt (no longer dirty)
        
        bind bed: item where:
            is_bed(bed)
        # Select the bed
        
        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_105_around_pillow_105(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==105
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_clothes_gloves_2118_around_clothes_scarf_2120(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind clothes_scarf_instance:item where:
            is_clothes_scarf(clothes_scarf_instance) and id[clothes_scarf_instance]==2120
        achieve close_char(char,clothes_scarf_instance)
        if can_open(clothes_scarf_instance):
            achieve_once open(clothes_scarf_instance)
            exp(clothes_gloves,clothes_scarf_instance)
        else:
            exp(clothes_gloves,clothes_scarf_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,clothes_scarf_instance]=True
        close[clothes_scarf_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(ironed_shirt:item, bed:item):
    body:
        achieve on(ironed_shirt, bed)

behavior __goal__():
    body:
        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt) and clean(ironed_shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(ironed_shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed
        
        put_ironed_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(ironed_shirt:item, bed:item):
    body:
        achieve on(ironed_shirt, bed)

behavior __goal__():
    body:
        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt) and clean(ironed_shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(ironed_shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Ensure the shirt is placed on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(ironed_shirt:item, bed:item):
    body:
        achieve on(ironed_shirt, bed)

behavior __goal__():
    body:
        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt) and clean(ironed_shirt)
        # Bind the shirt that has been ironed

        bind bed: item where:
            is_bed(bed)
        # Bind the bed

        put_ironed_shirt_on_bed(ironed_shirt, bed)
        # Place the ironed shirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_286_around_pillow_286(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==286
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the freshly ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
        # Put the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_walllamp_36(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind walllamp_instance:item where:
            is_walllamp(walllamp_instance) and id[walllamp_instance]==36
        achieve close_char(char,walllamp_instance)
        if can_open(walllamp_instance):
            achieve_once open(walllamp_instance)
            exp(towel,walllamp_instance)
        else:
            exp(towel,walllamp_instance)
    eff:
        unknown[towel]=False
        close[towel,walllamp_instance]=True
        close[walllamp_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

behavior find_clothes_gloves_2118_around_clothes_dress_2116(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind clothes_dress_instance:item where:
            is_clothes_dress(clothes_dress_instance) and id[clothes_dress_instance]==2116
        achieve close_char(char,clothes_dress_instance)
        if can_open(clothes_dress_instance):
            achieve_once open(clothes_dress_instance)
            exp(clothes_gloves,clothes_dress_instance)
        else:
            exp(clothes_gloves,clothes_dress_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,clothes_dress_instance]=True
        close[clothes_dress_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt that needs to be ironed and placed on the bed

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_soap_2126_around_sink_19(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==19
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(ironed_shirt:item, bed:item):
    body:
        achieve on(ironed_shirt, bed)

behavior __goal__():
    body:
        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt) and clean(ironed_shirt)
        # Select the ironed and clean shirt

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_ironed_shirt_on_bed(ironed_shirt, bed)
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the cleaned shirt that has been ironed

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_287_around_pillow_287(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==287
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_pillow_286(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==286
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(towel,pillow_instance)
        else:
            exp(towel,pillow_instance)
    eff:
        unknown[towel]=False
        close[towel,pillow_instance]=True
        close[pillow_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_103_around_pillow_286(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==286
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the clean, ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        achieve on(shirt, bed)
        # Ensure the shirt is placed on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt
        
        bind bed: item where:
            is_bed(bed)
        # Select the bed
        
        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_pillow_286(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==286
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(towel,pillow_instance)
        else:
            exp(towel,pillow_instance)
    eff:
        unknown[towel]=False
        close[towel,pillow_instance]=True
        close[pillow_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) # Select the shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        assert clean(shirt) # Ensure the shirt is clean, indicating it has been ironed

        put_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and not dirty(shirt)
        # Select the clean shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        achieve on(shirt, bed)
        # Place the shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Ensure the ironed shirt is placed on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)


#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed) and lieable(bed)
        # Select the bed

        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_shower_16(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==16
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(towel,shower_instance)
        else:
            exp(towel,shower_instance)
    eff:
        unknown[towel]=False
        close[towel,shower_instance]=True
        close[shower_instance,towel]=True
    

behavior find_soap_2125_around_shower_16(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==16
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(soap,shower_instance)
        else:
            exp(soap,shower_instance)
    eff:
        unknown[soap]=False
        close[soap,shower_instance]=True
        close[shower_instance,soap]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt that has been ironed

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and not dirty(shirt)
        # Select the clean, ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_shirt_on_bed(shirt, bed)
        # Place the shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and not dirty(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed) and lieable(bed)
        # Select the bed

        put_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_103_around_pillow_103(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==103
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_check_2026_around_check_2026(check:item):
    goal: not unknown(check)
    body:
        assert is_check(check)
        bind check_instance:item where:
            is_check(check_instance) and id[check_instance]==2026
        achieve close_char(char,check_instance)
        if can_open(check_instance):
            achieve_once open(check_instance)
            exp(check,check_instance)
        else:
            exp(check,check_instance)
    eff:
        unknown[check]=False
        close[check,check_instance]=True
        close[check_instance,check]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_shirt_on_bed(shirt, bed)
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_104_around_pillow_104(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==104
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the ironed shirt
        
        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) 

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt that is clean

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
        # Put the ironed shirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the cleaned shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed
        
        put_shirt_on_bed(shirt, bed)
        # Place the cleaned shirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_novel_2060_around_bookshelf_196(novel:item):
    goal: not unknown(novel)
    body:
        assert is_novel(novel)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==196
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(novel,bookshelf_instance)
        else:
            exp(novel,bookshelf_instance)
    eff:
        unknown[novel]=False
        close[novel,bookshelf_instance]=True
        close[bookshelf_instance,novel]=True
    

behavior find_clothes_gloves_2118_around_ceilinglamp_237(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind ceilinglamp_instance:item where:
            is_ceilinglamp(ceilinglamp_instance) and id[ceilinglamp_instance]==237
        achieve close_char(char,ceilinglamp_instance)
        if can_open(ceilinglamp_instance):
            achieve_once open(ceilinglamp_instance)
            exp(clothes_gloves,ceilinglamp_instance)
        else:
            exp(clothes_gloves,ceilinglamp_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,ceilinglamp_instance]=True
        close[ceilinglamp_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean, ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_clothes_hat_2117_around_clothes_dress_2116(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind clothes_dress_instance:item where:
            is_clothes_dress(clothes_dress_instance) and id[clothes_dress_instance]==2116
        achieve close_char(char,clothes_dress_instance)
        if can_open(clothes_dress_instance):
            achieve_once open(clothes_dress_instance)
            exp(clothes_hat,clothes_dress_instance)
        else:
            exp(clothes_hat,clothes_dress_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,clothes_dress_instance]=True
        close[clothes_dress_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed and clean shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation

behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind bed: item where:
            is_bed(bed) and id[bed] == 197
        # Select the bed with ID 197

        put_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed and clean shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_oil_2013_around_fryingpan_2154(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind fryingpan_instance:item where:
            is_fryingpan(fryingpan_instance) and id[fryingpan_instance]==2154
        achieve close_char(char,fryingpan_instance)
        if can_open(fryingpan_instance):
            achieve_once open(fryingpan_instance)
            exp(oil,fryingpan_instance)
        else:
            exp(oil,fryingpan_instance)
    eff:
        unknown[oil]=False
        close[oil,fryingpan_instance]=True
        close[fryingpan_instance,oil]=True
    

behavior find_soap_2010_around_toilet_15(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind toilet_instance:item where:
            is_toilet(toilet_instance) and id[toilet_instance]==15
        achieve close_char(char,toilet_instance)
        if can_open(toilet_instance):
            achieve_once open(toilet_instance)
            exp(soap,toilet_instance)
        else:
            exp(soap,toilet_instance)
    eff:
        unknown[soap]=False
        close[soap,toilet_instance]=True
        close[toilet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the shirt that is clean and ready

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2052_around_walllamp_36(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind walllamp_instance:item where:
            is_walllamp(walllamp_instance) and id[walllamp_instance]==36
        achieve close_char(char,walllamp_instance)
        if can_open(walllamp_instance):
            achieve_once open(walllamp_instance)
            exp(rag,walllamp_instance)
        else:
            exp(rag,walllamp_instance)
    eff:
        unknown[rag]=False
        close[rag,walllamp_instance]=True
        close[walllamp_instance,rag]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) # Select the clothes_shirt to be placed
        bind bed: item where:
            is_bed(bed) # Select the bed
        achieve on(clothes_shirt, bed) # Place the ironed shirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_pillow_287(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==287
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(towel,pillow_instance)
        else:
            exp(towel,pillow_instance)
    eff:
        unknown[towel]=False
        close[towel,pillow_instance]=True
        close[pillow_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt
        
        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_soap_2126_around_soap_2126(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind soap_instance:item where:
            is_soap(soap_instance) and id[soap_instance]==2126
        achieve close_char(char,soap_instance)
        if can_open(soap_instance):
            achieve_once open(soap_instance)
            exp(soap,soap_instance)
        else:
            exp(soap,soap_instance)
    eff:
        unknown[soap]=False
        close[soap,soap_instance]=True
        close[soap_instance,soap]=True
    

behavior find_rag_2025_around_fryingpan_2154(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind fryingpan_instance:item where:
            is_fryingpan(fryingpan_instance) and id[fryingpan_instance]==2154
        achieve close_char(char,fryingpan_instance)
        if can_open(fryingpan_instance):
            achieve_once open(fryingpan_instance)
            exp(rag,fryingpan_instance)
        else:
            exp(rag,fryingpan_instance)
    eff:
        unknown[rag]=False
        close[rag,fryingpan_instance]=True
        close[fryingpan_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(ironed_shirt:item, bed:item):
    body:
        achieve on(ironed_shirt, bed)

behavior __goal__():
    body:
        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt) and clean(ironed_shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(ironed_shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_tooth_paste_2059_around_bathroom_cabinet_17(tooth_paste:item):
    goal: not unknown(tooth_paste)
    body:
        assert is_tooth_paste(tooth_paste)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(tooth_paste,bathroom_cabinet_instance)
        else:
            exp(tooth_paste,bathroom_cabinet_instance)
    eff:
        unknown[tooth_paste]=False
        close[tooth_paste,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,tooth_paste]=True
    

behavior find_soap_2125_around_toilet_15(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind toilet_instance:item where:
            is_toilet(toilet_instance) and id[toilet_instance]==15
        achieve close_char(char,toilet_instance)
        if can_open(toilet_instance):
            achieve_once open(toilet_instance)
            exp(soap,toilet_instance)
        else:
            exp(soap,toilet_instance)
    eff:
        unknown[soap]=False
        close[soap,toilet_instance]=True
        close[toilet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve clean(shirt) # Ensure the shirt is ironed and clean
        achieve on(shirt, bed) # Place the shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        if not clean(shirt):
            # Ensure the shirt is ironed
            bind ironing_board: item where:
                is_ironing_board(ironing_board)
            observe(ironing_board, "Check if the shirt is ironed")

        put_ironed_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt) # Select the shirt that is a clothes shirt and is clean

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_105_around_pillow_105(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==105
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and not dirty(shirt)
        # Select the ironed shirt that is not dirty

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt which has been ironed

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and not dirty(shirt)
        # Select the cleaned and ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the shirt that has been ironed

        bind bed: item where:
            is_bed(bed) and id[bed] == 197
        # Select the bed with ID 197

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_food_2001_around_fryingpan_2154(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind fryingpan_instance:item where:
            is_fryingpan(fryingpan_instance) and id[fryingpan_instance]==2154
        achieve close_char(char,fryingpan_instance)
        if can_open(fryingpan_instance):
            achieve_once open(fryingpan_instance)
            exp(food_food,fryingpan_instance)
        else:
            exp(food_food,fryingpan_instance)
    eff:
        unknown[food_food]=False
        close[food_food,fryingpan_instance]=True
        close[fryingpan_instance,food_food]=True
    

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_knife_2035_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body: 
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        
        bind bed: item where:
            is_bed(bed)
        
        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(ironed_shirt:item, bed:item):
    body:
        achieve on(ironed_shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt) and not dirty(ironed_shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(ironed_shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_cpuscreen_277(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind cpuscreen_instance:item where:
            is_cpuscreen(cpuscreen_instance) and id[cpuscreen_instance]==277
        achieve close_char(char,cpuscreen_instance)
        if can_open(cpuscreen_instance):
            achieve_once open(cpuscreen_instance)
            exp(towel,cpuscreen_instance)
        else:
            exp(towel,cpuscreen_instance)
    eff:
        unknown[towel]=False
        close[towel,cpuscreen_instance]=True
        close[cpuscreen_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt
        
        bind bed: item where:
            is_bed(bed) and lieable(bed)
        # Select a bed that can have items placed on it

        put_ironed_shirt_on_bed(shirt, bed)
        # Execute the behavior to place the ironed shirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(ironed_shirt:item, bed:item):
    body:
        achieve on(ironed_shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt) and clean(ironed_shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(ironed_shirt, bed)
        # Put the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_ceilinglamp_237(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind ceilinglamp_instance:item where:
            is_ceilinglamp(ceilinglamp_instance) and id[ceilinglamp_instance]==237
        achieve close_char(char,ceilinglamp_instance)
        if can_open(ceilinglamp_instance):
            achieve_once open(ceilinglamp_instance)
            exp(towel,ceilinglamp_instance)
        else:
            exp(towel,ceilinglamp_instance)
    eff:
        unknown[towel]=False
        close[towel,ceilinglamp_instance]=True
        close[ceilinglamp_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Bind the shirt that has been ironed

        bind bed: item where:
            is_bed(bed) and id[bed] == 197
        # Bind the bed with ID 197

        place_ironed_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt that has been ironed

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and not dirty(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2134_around_coffe_maker_130(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind coffe_maker_instance:item where:
            is_coffe_maker(coffe_maker_instance) and id[coffe_maker_instance]==130
        achieve close_char(char,coffe_maker_instance)
        if can_open(coffe_maker_instance):
            achieve_once open(coffe_maker_instance)
            exp(cup,coffe_maker_instance)
        else:
            exp(cup,coffe_maker_instance)
    eff:
        unknown[cup]=False
        close[cup,coffe_maker_instance]=True
        close[coffe_maker_instance,cup]=True
    

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the ironed shirt that is not dirty

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the shirt that needs to be ironed and is clean

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
        # Put the ironed shirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_clothes_scarf_2120(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind clothes_scarf_instance:item where:
            is_clothes_scarf(clothes_scarf_instance) and id[clothes_scarf_instance]==2120
        achieve close_char(char,clothes_scarf_instance)
        if can_open(clothes_scarf_instance):
            achieve_once open(clothes_scarf_instance)
            exp(towel,clothes_scarf_instance)
        else:
            exp(towel,clothes_scarf_instance)
    eff:
        unknown[towel]=False
        close[towel,clothes_scarf_instance]=True
        close[clothes_scarf_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(ironed_shirt:item, bed:item):
    body:
        achieve on(ironed_shirt, bed)

behavior __goal__():
    body:
        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt) and clean(ironed_shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed to place the shirt on

        put_ironed_shirt_on_bed(ironed_shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the shirt on the bed after ironing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation

behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_207_around_pillow_207(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==207
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_clothes_hat_2117_around_clothes_dress_2116(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind clothes_dress_instance:item where:
            is_clothes_dress(clothes_dress_instance) and id[clothes_dress_instance]==2116
        achieve close_char(char,clothes_dress_instance)
        if can_open(clothes_dress_instance):
            achieve_once open(clothes_dress_instance)
            exp(clothes_hat,clothes_dress_instance)
        else:
            exp(clothes_hat,clothes_dress_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,clothes_dress_instance]=True
        close[clothes_dress_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation

behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean, ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_clothes_hat_2117_around_clothes_dress_2116(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind clothes_dress_instance:item where:
            is_clothes_dress(clothes_dress_instance) and id[clothes_dress_instance]==2116
        achieve close_char(char,clothes_dress_instance)
        if can_open(clothes_dress_instance):
            achieve_once open(clothes_dress_instance)
            exp(clothes_hat,clothes_dress_instance)
        else:
            exp(clothes_hat,clothes_dress_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,clothes_dress_instance]=True
        close[clothes_dress_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed) and id[bed] == 197
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_curtain_291(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind curtain_instance:item where:
            is_curtain(curtain_instance) and id[curtain_instance]==291
        achieve close_char(char,curtain_instance)
        if can_open(curtain_instance):
            achieve_once open(curtain_instance)
            exp(towel,curtain_instance)
        else:
            exp(towel,curtain_instance)
    eff:
        unknown[towel]=False
        close[towel,curtain_instance]=True
        close[curtain_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
def is_ironed(shirt:item):
    # Function to check if the shirt is ironed
    symbol ironed=visited(shirt) and not dirty(shirt)
    return ironed

behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind bed: item where:
            is_bed(bed) and id[bed] == 197
        # Select the bed with ID 197

        if not is_ironed(shirt):
            observe(shirt, "Identify if the shirt is ironed and ready to be placed on the bed")
            # Observe the shirt to check if its ironed

        if is_ironed(shirt):
            put_ironed_shirt_on_bed(shirt, bed)
            # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(clothes_shirt:item, bed:item):
    body:
        achieve on(clothes_shirt, bed)
        # Ensure the ironed shirt is placed on the bed

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and not dirty(clothes_shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(clothes_shirt, bed)
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and not dirty(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed) and lieable(bed)
        # Select the bed to place the shirt

        achieve on(shirt, bed)
        # Place the ironed shirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and id[shirt] == 2158
        # Select the clean and ironed shirt with ID 2158
        
        bind bed: item where:
            is_bed(bed) and id[bed] == 197
        # Select the bed with ID 197

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_107_around_pillow_104(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==104
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt) # Select the cleaned shirt

        bind bed: item where:
            is_bed(bed) and lieable(bed)
        # Select the bed where the shirt will be placed
        
        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation

behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and not dirty(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)


#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and not dirty(shirt)
        # Select the clean ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt that needs to be ironed

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(ironed_shirt:item, bed:item):
    body:
        achieve on(ironed_shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt) and clean(ironed_shirt) and not dirty(ironed_shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed) and lieable(bed)
        # Select a bed that is lieable

        put_ironed_shirt_on_bed(ironed_shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_oil_2149_around_fryingpan_2154(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind fryingpan_instance:item where:
            is_fryingpan(fryingpan_instance) and id[fryingpan_instance]==2154
        achieve close_char(char,fryingpan_instance)
        if can_open(fryingpan_instance):
            achieve_once open(fryingpan_instance)
            exp(oil,fryingpan_instance)
        else:
            exp(oil,fryingpan_instance)
    eff:
        unknown[oil]=False
        close[oil,fryingpan_instance]=True
        close[fryingpan_instance,oil]=True
    

behavior find_soap_2126_around_soap_2126(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind soap_instance:item where:
            is_soap(soap_instance) and id[soap_instance]==2126
        achieve close_char(char,soap_instance)
        if can_open(soap_instance):
            achieve_once open(soap_instance)
            exp(soap,soap_instance)
        else:
            exp(soap,soap_instance)
    eff:
        unknown[soap]=False
        close[soap,soap_instance]=True
        close[soap_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt) # Select the ironed shirt that is not dirty

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_clothes_hat_2117_around_clothes_dress_2116(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind clothes_dress_instance:item where:
            is_clothes_dress(clothes_dress_instance) and id[clothes_dress_instance]==2116
        achieve close_char(char,clothes_dress_instance)
        if can_open(clothes_dress_instance):
            achieve_once open(clothes_dress_instance)
            exp(clothes_hat,clothes_dress_instance)
        else:
            exp(clothes_hat,clothes_dress_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,clothes_dress_instance]=True
        close[clothes_dress_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and not dirty(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed) and lieable(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_clothes_hat_2117_around_clothes_dress_2116(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind clothes_dress_instance:item where:
            is_clothes_dress(clothes_dress_instance) and id[clothes_dress_instance]==2116
        achieve close_char(char,clothes_dress_instance)
        if can_open(clothes_dress_instance):
            achieve_once open(clothes_dress_instance)
            exp(clothes_hat,clothes_dress_instance)
        else:
            exp(clothes_hat,clothes_dress_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,clothes_dress_instance]=True
        close[clothes_dress_instance,clothes_hat]=True
    

behavior find_food_butter_2007_around_oven_127(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==127
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_butter,oven_instance)
        else:
            exp(food_butter,oven_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,oven_instance]=True
        close[oven_instance,food_butter]=True
    

behavior find_soap_2126_around_soap_2126(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind soap_instance:item where:
            is_soap(soap_instance) and id[soap_instance]==2126
        achieve close_char(char,soap_instance)
        if can_open(soap_instance):
            achieve_once open(soap_instance)
            exp(soap,soap_instance)
        else:
            exp(soap,soap_instance)
    eff:
        unknown[soap]=False
        close[soap,soap_instance]=True
        close[soap_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed and clean shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Bind a shirt
        
        assert clean(shirt) 
        # Ensure the shirt is ironed and clean before putting on bed

        bind bed: item where:
            is_bed(bed)
        # Bind a bed

        put_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and not dirty(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed and clean shirt
        
        bind bed: item where:
            is_bed(bed)
        # Select the bed to place the shirt on

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_soap_2125_around_shower_16(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==16
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(soap,shower_instance)
        else:
            exp(soap,shower_instance)
    eff:
        unknown[soap]=False
        close[soap,shower_instance]=True
        close[shower_instance,soap]=True
    

behavior find_clothes_gloves_2118_around_clothes_dress_2116(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind clothes_dress_instance:item where:
            is_clothes_dress(clothes_dress_instance) and id[clothes_dress_instance]==2116
        achieve close_char(char,clothes_dress_instance)
        if can_open(clothes_dress_instance):
            achieve_once open(clothes_dress_instance)
            exp(clothes_gloves,clothes_dress_instance)
        else:
            exp(clothes_gloves,clothes_dress_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,clothes_dress_instance]=True
        close[clothes_dress_instance,clothes_gloves]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
def is_ironed_shirt_on_bed(shirt:item, bed:item):
    # Determine if the shirt is ironed and placed on the bed
    symbol shirt_on_bed=exists shirt: item: is_clothes_shirt(shirt) and on(shirt, bed) and not dirty(shirt)
    return shirt_on_bed

behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the shirt that has been ironed

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        if not is_ironed_shirt_on_bed(shirt, bed):
            put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Variable shirt already exists.
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_286_around_pillow_287(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==287
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#goal_representation
 
def is_ironed_shirt_on_bed(shirt:item, bed:item):
    # Determine if the shirt is ironed and placed on the bed
    symbol shirt_on_bed=exists s: item: is_clothes_shirt(s) and on(s, bed) and not dirty(s)
    return shirt_on_bed

behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the shirt that has been ironed

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        if not is_ironed_shirt_on_bed(shirt, bed):
            put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_ceilinglamp_237(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind ceilinglamp_instance:item where:
            is_ceilinglamp(ceilinglamp_instance) and id[ceilinglamp_instance]==237
        achieve close_char(char,ceilinglamp_instance)
        if can_open(ceilinglamp_instance):
            achieve_once open(ceilinglamp_instance)
            exp(towel,ceilinglamp_instance)
        else:
            exp(towel,ceilinglamp_instance)
    eff:
        unknown[towel]=False
        close[towel,ceilinglamp_instance]=True
        close[ceilinglamp_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_207_around_pillow_207(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==207
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and plugged(shirt)
        # Select the shirt that is ironed and clean
        bind bed: item where:
            is_bed(bed)
        # Select the bed
        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_shower_16(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==16
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(towel,shower_instance)
        else:
            exp(towel,shower_instance)
    eff:
        unknown[towel]=False
        close[towel,shower_instance]=True
        close[shower_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Ensure the shirt is placed on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed and clean shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_106_around_pillow_103(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==103
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt that needs to be placed on the bed

        bind bed: item where:
            is_bed(bed)
        # Select the bed where the shirt will be placed

        achieve on(shirt, bed)
        # Ensure the shirt is placed on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt
        
        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(ironed_shirt:item, bed:item):
    body:
        achieve on(ironed_shirt, bed)

behavior __goal__():
    body:
        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt) and clean(ironed_shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(ironed_shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        achieve on(shirt, bed)
        # Place the clean shirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind bed: item where:
            is_bed(bed) and lieable(bed)
        # Select a bed that can support objects on its surface

        put_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_106_around_pillow_106(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==106
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(clothes_shirt:item, bed:item):
    body:
        achieve on(clothes_shirt, bed)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and not dirty(clothes_shirt)
        # Select the shirt that is ironed and clean

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(clothes_shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind bed: item where:
            is_bed(bed) and id[bed] == 197
        # Select the bed with ID 197

        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt) and not dirty(ironed_shirt)
        # Select the ironed shirt 

        put_ironed_shirt_on_bed(ironed_shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_toilet_paper_2076_around_toilet_15(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind toilet_instance:item where:
            is_toilet(toilet_instance) and id[toilet_instance]==15
        achieve close_char(char,toilet_instance)
        if can_open(toilet_instance):
            achieve_once open(toilet_instance)
            exp(toilet_paper,toilet_instance)
        else:
            exp(toilet_paper,toilet_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,toilet_instance]=True
        close[toilet_instance,toilet_paper]=True
    

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_107_around_pillow_106(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==106
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind bed: item where:
            is_bed(bed) and surfaces(bed)
        # Select a bed that has a surface
        
        place_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_tooth_paste_2059_around_bathroom_cabinet_17(tooth_paste:item):
    goal: not unknown(tooth_paste)
    body:
        assert is_tooth_paste(tooth_paste)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(tooth_paste,bathroom_cabinet_instance)
        else:
            exp(tooth_paste,bathroom_cabinet_instance)
    eff:
        unknown[tooth_paste]=False
        close[tooth_paste,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,tooth_paste]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the shirt that is ironed

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_207_around_pillow_286(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==286
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the ironed shirt that is not dirty

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_105_around_pillow_105(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==105
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_clothes_gloves_2118_around_clothes_scarf_2120(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind clothes_scarf_instance:item where:
            is_clothes_scarf(clothes_scarf_instance) and id[clothes_scarf_instance]==2120
        achieve close_char(char,clothes_scarf_instance)
        if can_open(clothes_scarf_instance):
            achieve_once open(clothes_scarf_instance)
            exp(clothes_gloves,clothes_scarf_instance)
        else:
            exp(clothes_gloves,clothes_scarf_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,clothes_scarf_instance]=True
        close[clothes_scarf_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt
        
        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)


#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_107_around_pillow_106(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==106
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean and ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_clothes_underwear_2121(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind clothes_underwear_instance:item where:
            is_clothes_underwear(clothes_underwear_instance) and id[clothes_underwear_instance]==2121
        achieve close_char(char,clothes_underwear_instance)
        if can_open(clothes_underwear_instance):
            achieve_once open(clothes_underwear_instance)
            exp(towel,clothes_underwear_instance)
        else:
            exp(towel,clothes_underwear_instance)
    eff:
        unknown[towel]=False
        close[towel,clothes_underwear_instance]=True
        close[clothes_underwear_instance,towel]=True
    

behavior find_pillow_286_around_pillow_286(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==286
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) and not dirty(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)
        # Put the shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_ceilinglamp_237(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind ceilinglamp_instance:item where:
            is_ceilinglamp(ceilinglamp_instance) and id[ceilinglamp_instance]==237
        achieve close_char(char,ceilinglamp_instance)
        if can_open(ceilinglamp_instance):
            achieve_once open(ceilinglamp_instance)
            exp(towel,ceilinglamp_instance)
        else:
            exp(towel,ceilinglamp_instance)
    eff:
        unknown[towel]=False
        close[towel,ceilinglamp_instance]=True
        close[ceilinglamp_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the ironed shirt
            
        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(ironed_shirt:item, bed:item):
    body:
        achieve on(ironed_shirt, bed)

behavior __goal__():
    body:
        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt)
        # Select the shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_shirt_on_bed(ironed_shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior put_ironed_shirt_on_bed(clothes_shirt:item, bed:item):
    body:
        achieve on(clothes_shirt, bed)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and clean(clothes_shirt)
        # Select the shirt that has been ironed

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        put_ironed_shirt_on_bed(clothes_shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(ironed_shirt:item, bed:item):
    body:
        achieve on(ironed_shirt, bed)

behavior __goal__():
    body:
        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt) and clean(ironed_shirt)
        # Select the clean and ironed shirt
        
        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(ironed_shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_shirt_on_bed(shirt, bed)
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_shirt_on_bed(clothes_shirt:item, bed:item):
    body:
        achieve on(clothes_shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and clean(clothes_shirt) and id[clothes_shirt]==2158
        # Select the ironed shirt with ID 2158

        bind bed: item where:
            is_bed(bed) and id[bed] == 197
        # Select the bed with ID 197

        put_shirt_on_bed(clothes_shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt) # Select the ironed shirt
        bind bed: item where:
            is_bed(bed) # Select the bed
        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_clothes_gloves_2118_around_clothes_scarf_2120(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind clothes_scarf_instance:item where:
            is_clothes_scarf(clothes_scarf_instance) and id[clothes_scarf_instance]==2120
        achieve close_char(char,clothes_scarf_instance)
        if can_open(clothes_scarf_instance):
            achieve_once open(clothes_scarf_instance)
            exp(clothes_gloves,clothes_scarf_instance)
        else:
            exp(clothes_gloves,clothes_scarf_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,clothes_scarf_instance]=True
        close[clothes_scarf_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind bed: item where:
            is_bed(bed) and id[bed] == 197
        # Select the bed with ID 197

        put_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

behavior find_pillow_106_around_pillow_106(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==106
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2132_around_bowl_2141(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind bowl_instance:item where:
            is_bowl(bowl_instance) and id[bowl_instance]==2141
        achieve close_char(char,bowl_instance)
        if can_open(bowl_instance):
            achieve_once open(bowl_instance)
            exp(cup,bowl_instance)
        else:
            exp(cup,bowl_instance)
    eff:
        unknown[cup]=False
        close[cup,bowl_instance]=True
        close[bowl_instance,cup]=True
    

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

#exp_behavior_end

#goal_representation

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt)
        # Select the shirt that is a piece of clothing and is not dirty (ironed)
        
        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_shower_16(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==16
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(towel,shower_instance)
        else:
            exp(towel,shower_instance)
    eff:
        unknown[towel]=False
        close[towel,shower_instance]=True
        close[shower_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean, ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2025_around_trashcan_99(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind trashcan_instance:item where:
            is_trashcan(trashcan_instance) and id[trashcan_instance]==99
        achieve close_char(char,trashcan_instance)
        if can_open(trashcan_instance):
            achieve_once open(trashcan_instance)
            exp(rag,trashcan_instance)
        else:
            exp(rag,trashcan_instance)
    eff:
        unknown[rag]=False
        close[rag,trashcan_instance]=True
        close[trashcan_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean and ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
behavior place_ironed_shirt_on_bed(ironed_shirt:item, bed:item):
    body:
        achieve on(ironed_shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt) and clean(ironed_shirt)
        # Select the shirt that has been ironed and is clean
        
        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_shirt_on_bed(ironed_shirt, bed) # Put the ironed shirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt) # Select the ironed shirt
        bind bed: item where:
            is_bed(bed)
        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_rag_2052_around_rag_2052(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(rag,rag_instance)
        else:
            exp(rag,rag_instance)
    eff:
        unknown[rag]=False
        close[rag,rag_instance]=True
        close[rag_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not inside(shirt, basket_for_clothes_2078)
        # Select the shirt to be placed on the bed, which is not in the basket

        bind bed: item where:
            is_bed(bed) and id[bed] == 197
        # Select the bed with ID 197

        put_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: basket_for_clothes_2078; available variables: [Variable<shirt: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_towel_2128_around_rag_2052(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind rag_instance:item where:
            is_rag(rag_instance) and id[rag_instance]==2052
        achieve close_char(char,rag_instance)
        if can_open(rag_instance):
            achieve_once open(rag_instance)
            exp(towel,rag_instance)
        else:
            exp(towel,rag_instance)
    eff:
        unknown[towel]=False
        close[towel,rag_instance]=True
        close[rag_instance,towel]=True
    

behavior find_pillow_106_around_pillow_106(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==106
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not inside(shirt, basket_for_clothes)
        # Select the shirt to be placed on the bed, which is not in the basket

        bind bed: item where:
            is_bed(bed) and id[bed] == 197
        # Select the bed with ID 197

        put_ironed_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: basket_for_clothes; available variables: [Variable<shirt: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation
behavior put_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed) # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not inside(shirt, basket_for_clothes:basket_for_clothes:item)
        # Select the shirt to be placed on the bed, which is not in the basket

        bind bed: item where:
            is_bed(bed) and id[bed] == 197
        # Select the bed with ID 197

        put_ironed_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
