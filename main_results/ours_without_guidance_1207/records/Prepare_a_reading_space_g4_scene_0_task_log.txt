From agent.py
Reset goals: The sub-goals are: 
['1. Find the book and place it on the coffee table in the home office.', '2. Prepare a cup of hot milk and place it on the coffee table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2067_around_bookshelf_101(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==101
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_book_and_put_on_coffee_table(book:item, coffee_table:item):
    body:
        achieve on(book, coffee_table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select a book

        bind coffee_table: item where:
            is_coffee_table(coffee_table)
        # Select a coffee table

        bind home_office: item where:
            is_home_office(home_office) and inside(coffee_table, home_office)
        # Ensure the coffee table is in the home office

        find_book_and_put_on_coffee_table(book, coffee_table)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_book_and_put_on_coffee_table(book:item, coffee_table:item):
    body:
        achieve on(book, coffee_table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select a book

        bind coffee_table: item where:
            is_coffee_table(coffee_table)
        # Select a coffee table

        bind home_office: item where:
            is_home_office(home_office) and inside(coffee_table, home_office)
        # Ensure the coffee table is in the home office

        find_book_and_put_on_coffee_table(book, coffee_table)

##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_101)open_executor(bookshelf_101)exp(book_2066, bookshelf_101)walk_executor(book_2066)grab_executor(book_2066)walk_executor(coffee_table_2068)put_executor(book_2066, coffee_table_2068)
##############################
From agent.py
walk_executor(bookshelf_101)
Find drawing_174. Find drawing_176. Robot is inside bedroom_67. Robot is close floor_72. Robot is close photoframe_185. Robot is close bookshelf_101. Robot is no longer inside bathroom_1.
##############################
From agent.py
open_executor(bookshelf_101)
Find towel_rack_32. Find towel_rack_31. Robot is inside bedroom_67. Robot is close floor_72. Robot is close photoframe_185. Robot is close bookshelf_101. 
##############################
From agent.py
exp(book_2066, bookshelf_101)
Failed to find book_2066 around bookshelf_101. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_233)open_executor(bookshelf_233)exp(book_2066, bookshelf_233)walk_executor(book_2066)grab_executor(book_2066)walk_executor(coffee_table_2068)put_executor(book_2066, coffee_table_2068)
##############################
From agent.py
walk_executor(bookshelf_233)
Robot is inside dining_room_201. Robot is close bookshelf_233. Robot is close floor_207. Robot is no longer inside bedroom_67.Robot is no longer close floor_72.Robot is no longer close photoframe_185.Robot is no longer close bookshelf_101.
##############################
From agent.py
open_executor(bookshelf_233)
Find mouse_166. Find keyboard_168. Find chair_103. Robot is inside dining_room_201. Robot is close bookshelf_233. Robot is close floor_207. 
##############################
From agent.py
exp(book_2066, bookshelf_233)
Failed to find book_2066 around bookshelf_233. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_354)open_executor(bookshelf_354)exp(book_2066, bookshelf_354)walk_executor(book_2066)grab_executor(book_2066)walk_executor(coffee_table_2068)put_executor(book_2066, coffee_table_2068)
##############################
From agent.py
walk_executor(bookshelf_354)
Find drawing_402. Find drawing_403. Find drawing_404. Find book_2066. Find book_2067. Robot is inside home_office_319. Robot is close floor_320. Robot is close bookshelf_354. Robot is close photoframe_430. Robot is no longer inside dining_room_201.Robot is no longer close bookshelf_233.Robot is no longer close floor_207.
##############################
From agent.py
open_executor(bookshelf_354)
Find vacuum_cleaner_2070. Find headset_2062. Find mat_401. Find hanger_363. Find hanger_374. Find drawing_241. Find keyboard_415. Find headset_2076. Find hanger_369. Find remote_control_2052. Find drawing_243. Find hanger_361. Find spectacles_2082. Find hanger_372. Find drawing_242. Find cat_2055. Find clothes_jacket_2047. Find chair_356. Find phone_2077. Find mouse_413. Find hanger_375. Find pencil_2001. Find pillow_405. Find hanger_367. Find hanger_359. Find dvd_player_2061. Find drawing_400. Find hanger_365. Find hanger_376. Find pillow_406. Find hairbrush_2002. Robot is inside home_office_319. Robot is close floor_320. Robot is close bookshelf_354. Robot is close photoframe_430. 
##############################
From agent.py
exp(book_2066, bookshelf_354)
Find book_2066. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2066)grab_executor(book_2066)walk_executor(coffee_table_2068)put_executor(book_2066, coffee_table_2068)
##############################
From agent.py
walk_executor(book_2066)
Robot is inside home_office_319. Robot is close bookshelf_354. Robot is close book_2066. Robot is no longer close floor_320.Robot is no longer close photoframe_430.
##############################
From agent.py
grab_executor(book_2066)
Robot is inside home_office_319. Robot is close bookshelf_354. Robot is close book_2066. Grabbing book_2066 by right hand. 
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot is inside home_office_319. Robot is close book_2066. Robot is close coffee_table_2068. Robot is no longer close bookshelf_354.
##############################
From agent.py
put_executor(book_2066, coffee_table_2068)
Robot is inside home_office_319. Robot is close book_2066. Robot is close coffee_table_2068. book_2066 released by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2043_around_fridge_289(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_cup_2064_around_stove_2065(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2065
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(cup,stove_instance)
        else:
            exp(cup,stove_instance)
    eff:
        unknown[cup]=False
        close[cup,stove_instance]=True
        close[stove_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_hot_milk_and_put_on_table(milk:item, cup:item, table:item):
    body:
        achieve has_water(cup)
        # Fill the cup with milk and ensure its hot using a kettle or microwave (logic for heating assumed)

        achieve on(cup, table)
        # Place the cup on the specified table

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind coffee_table: item where:
            is_coffee_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table in the home office

        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        prepare_hot_milk_and_put_on_table(milk, cup, coffee_table)
        # Prepare hot milk and place the cup on the coffee table

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior prepare_hot_milk_and_put_on_table(milk:item, cup:item, table:item):
    body:
        achieve has_water(cup)
        # Fill the cup with milk and ensure its hot using a kettle or microwave (logic for heating assumed)

        achieve on(cup, table)
        # Place the cup on the specified table

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind coffee_table: item where:
            is_coffee_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table in the home office

        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        prepare_hot_milk_and_put_on_table(milk, cup, coffee_table)
        # Prepare hot milk and place the cup on the coffee table

##############################
From agent.py-> find a plan in act()
walk_executor(stove_2065)open_executor(stove_2065)exp(cup_2063, stove_2065)walk_executor(cup_2063)grab_executor(cup_2063)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(coffee_table_2068)put_executor(cup_2063, coffee_table_2068)
##############################
From agent.py
walk_executor(stove_2065)
Find pot_2069. Find cup_2063. Find knife_2050. Find napkin_2005. Find cup_2064. Find cutting_board_2051. Find oil_2079. Find fryingpan_2083. Find tray_296. Find drawing_239. Find drawing_238. Find drawing_240. Robot is inside dining_room_201. Robot is close stove_2065. Robot is close kitchen_counter_230. Robot is no longer inside home_office_319.Robot is no longer close book_2066.Robot is no longer close coffee_table_2068.
##############################
From agent.py
open_executor(stove_2065)
Robot is inside dining_room_201. Robot is close stove_2065. Robot is close kitchen_counter_230. 
##############################
From agent.py
exp(cup_2063, stove_2065)
Find cup_2063. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2063)grab_executor(cup_2063)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(coffee_table_2068)put_executor(cup_2063, coffee_table_2068)
##############################
From agent.py
walk_executor(cup_2063)
Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is close cup_2063. Robot is no longer close stove_2065.
##############################
From agent.py
grab_executor(cup_2063)
Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is close cup_2063. Grabbing cup_2063 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Find basket_for_clothes_2006. Find towel_rack_34. Robot is inside bathroom_1. Robot is close cup_2063. Robot is close bathroom_counter_41. Robot is close faucet_43. Robot is no longer inside dining_room_201.Robot is no longer close kitchen_counter_230.
##############################
From agent.py
switchon_executor(faucet_43)
Robot is inside bathroom_1. Robot is close cup_2063. Robot is close bathroom_counter_41. Robot is close faucet_43. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot is inside bathroom_1. Robot is close cup_2063. Robot is close bathroom_counter_41. Robot is close faucet_43. 
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot is inside home_office_319. Robot is close cup_2063. Robot is close coffee_table_2068. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_41.Robot is no longer close faucet_43.
##############################
From agent.py
put_executor(cup_2063, coffee_table_2068)
Robot is inside home_office_319. Robot is close cup_2063. Robot is close coffee_table_2068. cup_2063 released by right hand. 
##############################
From agent.py
Human Instruction: You need to fill the cup with milk and ensure it is heated before placing it on the coffee table in the home office. Currently, the cup on the coffee table is empty and not filled with hot milk.

The actions you have taken:
Action 1: Walk to bookshelf_101.
Action 2: Open bookshelf_101.
Action 3: look for book_2066 around bookshelf_101.
Action 4: Walk to bookshelf_233.
Action 5: Open bookshelf_233.
Action 6: look for book_2066 around bookshelf_233.
Action 7: Walk to bookshelf_354.
Action 8: Open bookshelf_354.
Action 9: look for book_2066 around bookshelf_354.
Action 10: Walk to book_2066.
Action 11: Grab book_2066.
Action 12: Walk to coffee_table_2068.
Action 13: Put book_2066 on coffee_table_2068.
Action 14: Walk to stove_2065.
Action 15: Open stove_2065.
Action 16: look for cup_2063 around stove_2065.
Action 17: Walk to cup_2063.
Action 18: Grab cup_2063.
Action 19: Walk to faucet_43.
Action 20: Switch on faucet_43.
Action 21: Switch off faucet_43.
Action 22: Walk to coffee_table_2068.
Action 23: Put cup_2063 on coffee_table_2068.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2043_around_fridge_289(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

#exp_behavior_end

#goal_representation
 
def has_faucet(stove:item):
    # Determine whether stove has a faucet nearby
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet, stove)
    return has_faucet

behavior fill_and_heat_milk(cup:item, stove:item):
    body:
        if has_faucet(stove):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, stove)
            achieve_once is_on(faucet)
            achieve has_water(cup)
            achieve_once is_off(faucet)

        bind milk: item where:
            is_milk(milk)
        achieve inside(milk, cup)
        # Heat milk by using stove
        achieve open(stove) # Open stove to place the cup
        achieve inside(cup, stove)
        achieve closed(stove) # Close the stove for heating
        achieve is_on(stove)
        achieve is_off(stove)

behavior place_cup_on_coffee_table(cup:item, coffee_table:item):
    body:
        achieve on(cup, coffee_table)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select the cup

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        bind home_office: item where:
            is_home_office(home_office)
        # Select home office

        bind coffee_table: item where:
            is_table(coffee_table) and surfaces(coffee_table) and inside(coffee_table, home_office)
        # Select a coffee table in the home office
        
        fill_and_heat_milk(cup, stove) # Fill, then heat the milk using the stove
        place_cup_on_coffee_table(cup, coffee_table) # Place the cup on the coffee table in the home office

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2043_around_fridge_289(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

#exp_behavior_end

#goal_representation
 
behavior heat_milk(milk:item, stove:item):
    body:
        achieve inhand(milk)
        # Ensure the milk is handled
        achieve_once close_char(char, stove)
        # Approach the stove
        achieve is_on(stove)
        # Turn on the stove to heat the milk

behavior place_on_table(item:item, table:item):
    body:
        achieve on(item, table) 
        # Place the item on the table 

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and not has_water(cup)
        # Select an empty cup

        bind table: item where:
            is_coffee_table(table)
        # Select a coffee table

        bind home_office: item where:
            is_home_office(home_office) and inside(table, home_office)
        # Ensure the coffee table is in the home office

        bind milk: item where:
            is_milk(milk)
        # Select milk
        
        foreach appliance:item:
            if is_stove(appliance):
                bind stove: item where:
                    id[stove] == id[appliance]
                # Bind the stove
                break
        
        heat_milk(milk, stove)
        place_on_table(cup, table)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: break; available variables: [Variable<appliance: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_milk_2043_around_fridge_289(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_food_bread_2012_around_fridge_289(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_bread,fridge_instance)
        else:
            exp(food_bread,fridge_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,fridge_instance]=True
        close[fridge_instance,food_bread]=True
    

#goal_representation
 
behavior heat_milk(milk:item, stove:item):
    body:
        achieve_once inhand(milk)
        # Ensure the milk is handled
        achieve_once close_char(char, stove)
        # Approach the stove
        achieve is_on(stove)
        # Turn on the stove to heat the milk

behavior place_on_table(item:item, table:item):
    body:
        achieve on(item, table) 
        # Place the item on the table 

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and not has_water(cup)
        # Select an empty cup

        bind table: item where:
            is_coffee_table(table)
        # Select a coffee table

        bind home_office: item where:
            is_home_office(home_office) and inside(table, home_office)
        # Ensure the coffee table is in the home office

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind stove: item where:
            is_stove(stove)
        # Select a stove
        
        heat_milk(milk, stove)
        place_on_table(cup, table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior heat_milk(milk:item, stove:item):
    body:
        achieve_once inhand(milk)
        # Ensure the milk is handled
        achieve_once close_char(char, stove)
        # Approach the stove
        achieve is_on(stove)
        # Turn on the stove to heat the milk

behavior place_on_table(item:item, table:item):
    body:
        achieve on(item, table) 
        # Place the item on the table 

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and not has_water(cup)
        # Select an empty cup

        bind table: item where:
            is_coffee_table(table)
        # Select a coffee table

        bind home_office: item where:
            is_home_office(home_office) and inside(table, home_office)
        # Ensure the coffee table is in the home office

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind stove: item where:
            is_stove(stove)
        # Select a stove
        
        heat_milk(milk, stove)
        place_on_table(cup, table)

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(milk_2043, fridge_289)walk_executor(milk_2043)grab_executor(milk_2043)walk_executor(stove_2065)close_executor(stove_2065)switchon_executor(stove_2065)walk_executor(cup_2064)grab_executor(cup_2064)walk_executor(coffee_table_2068)put_executor(cup_2064, coffee_table_2068)
##############################
From agent.py
walk_executor(fridge_289)
Find sauce_2078. Find food_steak_2008. Find food_apple_2009. Find food_bacon_2010. Find food_banana_2011. Find food_bread_2012. Find food_cake_2013. Find food_carrot_2014. Find food_cereal_2015. Find food_cheese_2016. Find food_chicken_2017. Find food_dessert_2018. Find food_donut_2019. Find food_egg_2020. Find food_fish_2021. Find food_food_2022. Find food_fruit_2023. Find food_hamburger_2024. Find food_ice_cream_2025. Find food_jam_2026. Find food_kiwi_2027. Find food_lemon_2028. Find food_noodles_2029. Find food_oatmeal_2030. Find food_orange_2031. Find food_onion_2032. Find food_peanut_butter_2033. Find food_pizza_2034. Find food_potato_2035. Find food_rice_2036. Find food_salt_2037. Find food_snack_2038. Find food_sugar_2039. Find food_turkey_2040. Find food_vegetable_2041. Find dry_pasta_2042. Find milk_2043. Robot is inside dining_room_201. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. Robot is no longer inside home_office_319.Robot is no longer close coffee_table_2068.Robot is no longer close cup_2063.
##############################
From agent.py
switchoff_executor(fridge_289)
Find mat_22. Robot is inside dining_room_201. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. 
##############################
From agent.py
open_executor(fridge_289)
Robot is inside dining_room_201. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. 
##############################
From agent.py
exp(milk_2043, fridge_289)
Find milk_2043. 
##############################
From agent.py-> find a plan in act()
grab_executor(milk_2043)walk_executor(stove_2065)close_executor(stove_2065)switchon_executor(stove_2065)walk_executor(cup_2064)grab_executor(cup_2064)walk_executor(coffee_table_2068)put_executor(cup_2064, coffee_table_2068)
##############################
From agent.py
grab_executor(milk_2043)
Robot is inside dining_room_201. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. Grabbing milk_2043 by right hand. 
##############################
From agent.py
walk_executor(stove_2065)
Robot is inside dining_room_201. Robot is close milk_2043. Robot is close stove_2065. Robot is close kitchen_counter_230. Robot is no longer close sauce_2078.Robot is no longer close fridge_289.Robot is no longer close floor_202.Robot is no longer close floor_203.Robot is no longer close food_steak_2008.Robot is no longer close food_apple_2009.Robot is no longer close food_bacon_2010.Robot is no longer close food_banana_2011.Robot is no longer close food_bread_2012.Robot is no longer close food_cake_2013.Robot is no longer close food_carrot_2014.Robot is no longer close food_cereal_2015.Robot is no longer close food_cheese_2016.Robot is no longer close food_chicken_2017.Robot is no longer close food_dessert_2018.Robot is no longer close food_donut_2019.Robot is no longer close food_egg_2020.Robot is no longer close food_fish_2021.Robot is no longer close food_food_2022.Robot is no longer close food_fruit_2023.Robot is no longer close food_hamburger_2024.Robot is no longer close food_ice_cream_2025.Robot is no longer close food_jam_2026.Robot is no longer close food_kiwi_2027.Robot is no longer close food_lemon_2028.Robot is no longer close food_noodles_2029.Robot is no longer close food_oatmeal_2030.Robot is no longer close food_orange_2031.Robot is no longer close food_onion_2032.Robot is no longer close food_peanut_butter_2033.Robot is no longer close food_pizza_2034.Robot is no longer close food_potato_2035.Robot is no longer close food_rice_2036.Robot is no longer close food_salt_2037.Robot is no longer close food_snack_2038.Robot is no longer close food_sugar_2039.Robot is no longer close food_turkey_2040.Robot is no longer close food_vegetable_2041.Robot is no longer close dry_pasta_2042.
##############################
From agent.py
close_executor(stove_2065)
Robot is inside dining_room_201. Robot is close milk_2043. Robot is close stove_2065. Robot is close kitchen_counter_230. 
##############################
From agent.py
switchon_executor(stove_2065)
Robot is inside dining_room_201. Robot is close milk_2043. Robot is close stove_2065. Robot is close kitchen_counter_230. 
##############################
From agent.py
walk_executor(cup_2064)
Robot is inside dining_room_201. Robot is close milk_2043. Robot is close kitchen_counter_230. Robot is close cup_2064. Robot is no longer close stove_2065.
##############################
From agent.py
grab_executor(cup_2064)
Robot is inside dining_room_201. Robot is close milk_2043. Robot is close kitchen_counter_230. Robot is close cup_2064. Grabbing cup_2064 by left hand. 
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot is inside home_office_319. Robot is close milk_2043. Robot is close cup_2064. Robot is close coffee_table_2068. Robot is no longer inside dining_room_201.Robot is no longer close kitchen_counter_230.
##############################
From agent.py
put_executor(cup_2064, coffee_table_2068)
Robot is inside home_office_319. Robot is close milk_2043. Robot is close cup_2064. Robot is close coffee_table_2068. cup_2064 released by left hand. 
##############################
From agent.py
Human Instruction: You need to fill the cup with milk, heat the milk on the stove, and then ensure the cup of hot milk is placed on the coffee table in the home office. Currently, the milk has not been poured into the cup, and the cup is not mentioned to be filled with hot milk on the coffee table.

The actions you have taken:
Action 1: Walk to bookshelf_101.
Action 2: Open bookshelf_101.
Action 3: look for book_2066 around bookshelf_101.
Action 4: Walk to bookshelf_233.
Action 5: Open bookshelf_233.
Action 6: look for book_2066 around bookshelf_233.
Action 7: Walk to bookshelf_354.
Action 8: Open bookshelf_354.
Action 9: look for book_2066 around bookshelf_354.
Action 10: Walk to book_2066.
Action 11: Grab book_2066.
Action 12: Walk to coffee_table_2068.
Action 13: Put book_2066 on coffee_table_2068.
Action 14: Walk to stove_2065.
Action 15: Open stove_2065.
Action 16: look for cup_2063 around stove_2065.
Action 17: Walk to cup_2063.
Action 18: Grab cup_2063.
Action 19: Walk to faucet_43.
Action 20: Switch on faucet_43.
Action 21: Switch off faucet_43.
Action 22: Walk to coffee_table_2068.
Action 23: Put cup_2063 on coffee_table_2068.
Action 24: Walk to fridge_289.
Action 25: Switch off fridge_289.
Action 26: Open fridge_289.
Action 27: look for milk_2043 around fridge_289.
Action 28: Grab milk_2043.
Action 29: Walk to stove_2065.
Action 30: Close stove_2065.
Action 31: Switch on stove_2065.
Action 32: Walk to cup_2064.
Action 33: Grab cup_2064.
Action 34: Walk to coffee_table_2068.
Action 35: Put cup_2064 on coffee_table_2068.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_dress_2044_around_closetdrawer_143(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==143
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_dress,closetdrawer_instance)
        else:
            exp(clothes_dress,closetdrawer_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_dress]=True
    

#exp_behavior_end

#goal_representation

behavior prepare_hot_milk(cup:item, milk:item, stove:item):
    body:
        achieve inside(milk, cup)
        # Pour the milk into the cup
        achieve_once is_on(stove)
        achieve has_water(cup) # Ensure the milk in the cup is heated
        # Note: Assume heating has been abstracted as checking existence of water

behavior place_on_table(cup:item, table:item):
    body:
        achieve on(cup, table)
        # Place the cup on the table

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup
        
        bind milk: item where:
            is_milk(milk) and pourable(milk)
        # Select milk that is pourable

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        bind coffee_table: item where:
            is_coffee_table(coffee_table)
        # Select the coffee table in the home office

        bind home_office: item where:
            is_home_office(home_office) and inside(coffee_table, home_office)
        # Ensure the coffee table is inside the home office

        prepare_hot_milk(cup, milk, stove)
        place_on_table(cup, coffee_table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior prepare_hot_milk(cup:item, milk:item, stove:item):
    body:
        achieve inside(milk, cup)
        # Pour the milk into the cup
        achieve_once is_on(stove)
        achieve has_water(cup) # Ensure the milk in the cup is heated
        # Note: Assume heating has been abstracted as checking existence of water

behavior place_on_table(cup:item, table:item):
    body:
        achieve on(cup, table)
        # Place the cup on the table

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup
        
        bind milk: item where:
            is_milk(milk) and pourable(milk)
        # Select milk that is pourable

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        bind coffee_table: item where:
            is_coffee_table(coffee_table)
        # Select the coffee table in the home office

        bind home_office: item where:
            is_home_office(home_office) and inside(coffee_table, home_office)
        # Ensure the coffee table is inside the home office

        prepare_hot_milk(cup, milk, stove)
        place_on_table(cup, coffee_table)

##############################
From agent.py-> find a plan in act()
walk_executor(cup_2063)putin_executor(milk_2043, cup_2063)
##############################
From agent.py
walk_executor(cup_2063)
Robot is inside bathroom_1. Robot is close milk_2043. Robot is close coffee_table_2068. Robot is close cup_2063. Robot is no longer inside home_office_319.Robot is no longer close cup_2064.
##############################
From agent.py
putin_executor(milk_2043, cup_2063)
Robot is inside bathroom_1. Robot is close milk_2043. Robot is close coffee_table_2068. Robot is close cup_2063. milk_2043 released by right hand. 
##############################
