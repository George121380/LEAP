From agent.py
Reset goals: The sub-goals are: 
['Iron the shirt and put it on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2086_around_closetdrawer_118(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==118
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt_and_put_on_bed(shirt:item, bed:item, iron:item, ironing_board:item):
    body:
        achieve_once inhand(shirt) # Hold the shirt temporarily for ironing
        achieve plugged(iron)
        # Ensure the iron is plugged in
        
        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board for ironing 
        
        achieve is_on(iron)
        # Turn on the iron to begin ironing
        
        achieve clean(shirt)
        # Ensure the shirt is ironed and clean
        
        achieve is_off(iron)
        # Turn off the iron after ironing is done

        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to iron

        bind bed: item where:
            is_bed(bed)
        # Select the bed where the shirt will be placed

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_shirt_and_put_on_bed(shirt, bed, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_shirt_2086_around_closetdrawer_118(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==118
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
 
def has_ironing_board_inside(room:item):
    # Function to check if there is an ironing board inside the specified room
    symbol has_ironing_board=exists ironing_board: item: is_ironing_board(ironing_board) and inside(ironing_board, room)
    return has_ironing_board

behavior iron_shirt_and_place_on_bed(shirt:item, ironing_board:item, bed:item):
    body:
        achieve plugged(ironing_board)
        # Ensure the ironing board is plugged in

        achieve is_on(ironing_board)
        # Ensure the iron is on

        achieve clean(shirt)
        # Ensure the shirt is clean after ironing

        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed

        bind room: item where:
            is_bedroom(room)
        # Select the bedroom

        if has_ironing_board_inside(room):
            bind ironing_board: item where:
                is_ironing_board(ironing_board) and inside(ironing_board, room)
            # Select the ironing board inside the bedroom

            bind bed: item where:
                is_bed(bed) and inside(bed, room)
            # Select the bed inside the bedroom

            iron_shirt_and_place_on_bed(shirt, ironing_board, bed)

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Iron the shirt.', '2. Place the shirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_shirt_2086_around_closetdrawer_118(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==118
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
 
def is_ironing_board_present():
    # Function to check if an ironing board exists
    symbol ironing_board_exists=exists board: item: is_ironing_board(board)
    return ironing_board_exists

def has_plugged_iron(ironing_board:item):
    # Function to check if a plugged iron is available for use
    symbol plugged_iron_exists=exists iron: item: is_iron(iron) and plugged(iron) and close(iron, ironing_board)
    return plugged_iron_exists

behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve clean(shirt)
        # Assume the goal is to iron until the shirt is clean and wrinklefree
        
behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed
        
        if is_ironing_board_present():
            bind ironing_board: item where:
                is_ironing_board(ironing_board)
            # Select the ironing board

            if has_plugged_iron(ironing_board):
                bind iron: item where:
                    is_iron(iron) and plugged(iron) and close(iron, ironing_board)
                # Select a plugged iron close to the ironing board
                
                iron_shirt(shirt, ironing_board, iron)
                # Iron the shirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_shirt_2086_around_closetdrawer_118(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==118
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation

def has_ironing_board_with_shirt(ironing_board:item):
    # Check if there is a shirt on the ironing board
    symbol has_shirt=exists shirt: item: is_clothes_shirt(shirt) and on(shirt, ironing_board)
    return has_shirt

behavior iron_shirt(shirt:item, iron:item):
    body:
        achieve clean(shirt)
        # Ensure the shirt is ironed

behavior prepare_ironing_board(iron:item, powersocket:item, ironing_board:item):
    body:
        achieve plugged(iron)
        # Make sure the iron is plugged into the socket
        achieve is_on(iron)
        # Ensure the iron is turned on

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board)

        if has_ironing_board_with_shirt(ironing_board):
            bind shirt: item where:
                is_clothes_shirt(shirt) and on(shirt, ironing_board)
            # Select the shirt on the ironing board
            bind iron: item where:
                is_iron(iron)
            # Select an iron
            bind powersocket: item where:
                is_powersocket(powersocket)
            # Select a power socket to plug the iron
            prepare_ironing_board(iron, powersocket, ironing_board)
            iron_shirt(shirt, iron)

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Find the shirt that needs to be ironed.  ', '2. Iron the shirt.  ', '3. Place the ironed shirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2086_around_ironing_board_2074(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_shirt,ironing_board_instance)
        else:
            exp(clothes_shirt,ironing_board_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,ironing_board_instance]=True
        close[ironing_board_instance,clothes_shirt]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothes_shirt_present():
    # Function to check if there is a shirt
    symbol shirt_existence=exists shirt: item: is_clothes_shirt(shirt)
    return shirt_existence

behavior __goal__():
    body:
        if is_clothes_shirt_present():
            # If a shirt is already known to exist, find and approach it
            bind shirt: item where:
                is_clothes_shirt(shirt)
            achieve close_char(char, shirt)
        else:
            # If no known shirt exists, explore the environment for one
            foreach shirt: item:
                if is_clothes_shirt(shirt) and not visited(shirt):
                    observe(shirt, "Locate the shirt that needs to be ironed")

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_clothes_shirt_present():
    # Function to check if there is a shirt
    symbol shirt_existence=exists shirt: item: is_clothes_shirt(shirt)
    return shirt_existence

behavior __goal__():
    body:
        if is_clothes_shirt_present():
            # If a shirt is already known to exist, find and approach it
            bind shirt: item where:
                is_clothes_shirt(shirt)
            achieve close_char(char, shirt)
        else:
            # If no known shirt exists, explore the environment for one
            foreach shirt: item:
                if is_clothes_shirt(shirt) and not visited(shirt):
                    observe(shirt, "Locate the shirt that needs to be ironed")

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2074)exp(clothes_shirt_2086, ironing_board_2074)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(ironing_board_2074)
Find iron_2089. Robot is inside bathroom_1. Robot is close ironing_board_2074. 
##############################
From agent.py
exp(clothes_shirt_2086, ironing_board_2074)
Fail to find clothes_shirt_2086 around ironing_board_2074. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_118)exp(clothes_shirt_2086, closetdrawer_118)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(closetdrawer_118)
Find hanger_110. Find hanger_140. Find hanger_109. Find mat_173. Find hanger_132. Find hanger_113. Find hanger_112. Find hanger_124. Find hanger_115. Find hanger_128. Find hanger_130. Find hanger_134. Find hanger_136. Find hanger_138. Find hanger_141. Find hanger_142. Find hanger_111. Find hanger_114. Find hanger_126. Robot is inside bedroom_67. Robot is close closetdrawer_121. Robot is close dresser_108. Robot is close closetdrawer_118. Robot is no longer inside bathroom_1.Robot is no longer close ironing_board_2074.
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_118)
Fail to find clothes_shirt_2086 around closetdrawer_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_160)exp(clothes_shirt_2086, closetdrawer_160)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(closetdrawer_160)
Robot is inside bedroom_67. Robot is close closetdrawer_160. Robot is close dresser_123. Robot is no longer close closetdrawer_121.Robot is no longer close dresser_108.Robot is no longer close closetdrawer_118.
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_160)
Fail to find clothes_shirt_2086 around closetdrawer_160. 
##############################
From agent.py-> find a plan in act()
walk_executor(hanger_111)exp(clothes_shirt_2086, hanger_111)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(hanger_111)
Robot is inside bedroom_67. Robot is close dresser_108. Robot is close hanger_111. Robot is no longer close closetdrawer_160.Robot is no longer close dresser_123.
##############################
From agent.py
exp(clothes_shirt_2086, hanger_111)
Fail to find clothes_shirt_2086 around hanger_111. 
##############################
From agent.py-> find a plan in act()
walk_executor(hanger_136)exp(clothes_shirt_2086, hanger_136)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(hanger_136)
Robot is inside bedroom_67. Robot is close hanger_136. Robot is close dresser_123. Robot is no longer close dresser_108.Robot is no longer close hanger_111.
##############################
From agent.py
exp(clothes_shirt_2086, hanger_136)
Fail to find clothes_shirt_2086 around hanger_136. 
##############################
From agent.py-> find a plan in act()
walk_executor(hanger_113)exp(clothes_shirt_2086, hanger_113)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(hanger_113)
Robot is inside bedroom_67. Robot is close hanger_113. Robot is close dresser_108. Robot is no longer close hanger_136.Robot is no longer close dresser_123.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2086 ?
Answer: Robot, you can find the target item, clothes_shirt_2086, inside the basket_for_clothes_2006, which is located in bathroom_1. Look for the basket that typically holds clothes, and inside it, you'll find clothes_shirt_2086.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, you can find the target item, clothes_shirt_2086, inside the basket_for_clothes_2006, which is located in bathroom_1. Look for the basket that typically holds clothes, and inside it, you'll find clothes_shirt_2086.

The actions you have taken:
Action 1: Walk to ironing_board_2074.
Action 2: look for clothes_shirt_2086 around ironing_board_2074.
Action 3: Walk to closetdrawer_118.
Action 4: look for clothes_shirt_2086 around closetdrawer_118.
Action 5: Walk to closetdrawer_160.
Action 6: look for clothes_shirt_2086 around closetdrawer_160.
Action 7: Walk to hanger_111.
Action 8: look for clothes_shirt_2086 around hanger_111.
Action 9: Walk to hanger_136.
Action 10: look for clothes_shirt_2086 around hanger_136.
Action 11: Walk to hanger_113.

##############################
From agent.py
exp(clothes_shirt_2086, hanger_113)
Fail to find clothes_shirt_2086 around hanger_113. 
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2007)open_executor(washing_machine_2007)exp(clothes_shirt_2086, washing_machine_2007)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot is inside bathroom_1. Robot is close washing_machine_2007. Robot is no longer inside bedroom_67.Robot is no longer close hanger_113.Robot is no longer close dresser_108.
##############################
From agent.py
open_executor(washing_machine_2007)
Robot is inside bathroom_1. Robot is close washing_machine_2007. 
##############################
From agent.py
exp(clothes_shirt_2086, washing_machine_2007)
Fail to find clothes_shirt_2086 around washing_machine_2007. 
##############################
From agent.py-> find a plan in act()
walk_executor(powersocket_412)exp(clothes_shirt_2086, powersocket_412)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(powersocket_412)
Find mouse_413. Robot is inside home_office_319. Robot is close powersocket_412. Robot is no longer inside bathroom_1.Robot is no longer close washing_machine_2007.
##############################
From agent.py
exp(clothes_shirt_2086, powersocket_412)
Fail to find clothes_shirt_2086 around powersocket_412. 
##############################
From agent.py-> find a plan in act()
walk_executor(hanger_372)exp(clothes_shirt_2086, hanger_372)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(hanger_372)
Robot is inside home_office_319. Robot is close hanger_372. Robot is close dresser_358. Robot is no longer close powersocket_412.
##############################
From agent.py
exp(clothes_shirt_2086, hanger_372)
Fail to find clothes_shirt_2086 around hanger_372. 
##############################
From agent.py-> find a plan in act()
walk_executor(doorjamb_165)exp(clothes_shirt_2086, doorjamb_165)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(doorjamb_165)
Find drawing_174. Robot is inside bedroom_67. Robot is close doorjamb_165. Robot is no longer inside home_office_319.Robot is no longer close hanger_372.Robot is no longer close dresser_358.
##############################
From agent.py
exp(clothes_shirt_2086, doorjamb_165)
Fail to find clothes_shirt_2086 around doorjamb_165. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)exp(clothes_shirt_2086, kitchen_counter_230)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Find pot_2069. Find cup_2063. Find knife_2050. Find napkin_2005. Find cup_2064. Find cutting_board_2051. Find oil_2079. Find fryingpan_2083. Find tray_296. Find drawing_239. Find drawing_241. Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is no longer inside bedroom_67.Robot is no longer close doorjamb_165.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2086 ?
Answer: Robot, please go to bathroom_1. Once inside, locate the basket_for_clothes_2006. The target item, clothes_shirt_2086, is inside this basket.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, you can find the target item, clothes_shirt_2086, inside the basket_for_clothes_2006, which is located in bathroom_1. Look for the basket that typically holds clothes, and inside it, you'll find clothes_shirt_2086.
Robot, please go to bathroom_1. Once inside, locate the basket_for_clothes_2006. The target item, clothes_shirt_2086, is inside this basket.

The actions you have taken:
Action 1: Walk to ironing_board_2074.
Action 2: look for clothes_shirt_2086 around ironing_board_2074.
Action 3: Walk to closetdrawer_118.
Action 4: look for clothes_shirt_2086 around closetdrawer_118.
Action 5: Walk to closetdrawer_160.
Action 6: look for clothes_shirt_2086 around closetdrawer_160.
Action 7: Walk to hanger_111.
Action 8: look for clothes_shirt_2086 around hanger_111.
Action 9: Walk to hanger_136.
Action 10: look for clothes_shirt_2086 around hanger_136.
Action 11: Walk to hanger_113.
Action 12: look for clothes_shirt_2086 around hanger_113.
Action 13: Walk to washing_machine_2007.
Action 14: Open washing_machine_2007.
Action 15: look for clothes_shirt_2086 around washing_machine_2007.
Action 16: Walk to powersocket_412.
Action 17: look for clothes_shirt_2086 around powersocket_412.
Action 18: Walk to hanger_372.
Action 19: look for clothes_shirt_2086 around hanger_372.
Action 20: Walk to doorjamb_165.
Action 21: look for clothes_shirt_2086 around doorjamb_165.
Action 22: Walk to kitchen_counter_230.

##############################
From agent.py
exp(clothes_shirt_2086, kitchen_counter_230)
Fail to find clothes_shirt_2086 around kitchen_counter_230. 
##############################
From agent.py-> find a plan in act()
walk_executor(bed_105)exp(clothes_shirt_2086, bed_105)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(bed_105)
Find drawing_176. Find clothes_dress_2044. Find pillow_182. Find pillow_183. Find chair_106. Find clothes_scarf_2048. Find clothes_underwear_2049. Robot is inside bedroom_67. Robot is close bed_105. Robot is close mat_173. Robot is close floor_70. Robot is no longer inside dining_room_201.Robot is no longer close kitchen_counter_230.
##############################
From agent.py
exp(clothes_shirt_2086, bed_105)
Fail to find clothes_shirt_2086 around bed_105. 
##############################
From agent.py-> find a plan in act()
walk_executor(shower_36)exp(clothes_shirt_2086, shower_36)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(shower_36)
Find basket_for_clothes_2006. Robot is inside bathroom_1. Robot is close shower_36. Robot is no longer inside bedroom_67.Robot is no longer close bed_105.Robot is no longer close mat_173.Robot is no longer close floor_70.
##############################
From agent.py
exp(clothes_shirt_2086, shower_36)
Fail to find clothes_shirt_2086 around shower_36. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)exp(clothes_shirt_2086, basket_for_clothes_2006)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Find clothes_pants_2085. Find clothes_shirt_2086. Find clothes_socks_2087. Find clothes_skirt_2088. Find towel_rack_33. Find towel_rack_32. Find towel_rack_34. Find mat_22. Find towel_rack_31. Robot is inside bathroom_1. Robot is close clothes_pants_2085. Robot is close clothes_shirt_2086. Robot is close clothes_socks_2087. Robot is close clothes_skirt_2088. Robot is close basket_for_clothes_2006. Robot is no longer close shower_36.
##############################
From agent.py
exp(clothes_shirt_2086, basket_for_clothes_2006)
Find clothes_shirt_2086. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Iron the shirt.', '2. Put the shirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve clean(shirt)
        # Ensure the shirt is ironed and clean

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select the shirt with ID 2086

        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2006
        # Select the basket with clothes
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        if inside(shirt, basket):
            # If the shirt is inside the basket
            iron_shirt(shirt, ironing_board, iron)
            # Iron the shirt and place it on the ironing board
#goal_representation_end

##############################
From agent.py->reset_goal
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve clean(shirt)
        # Ensure the shirt is ironed and clean

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select the shirt with ID 2086

        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2006
        # Select the basket with clothes
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        if inside(shirt, basket):
            # If the shirt is inside the basket
            iron_shirt(shirt, ironing_board, iron)
            # Iron the shirt and place it on the ironing board
##############################
From agent.py-> find a plan in act()
wash_executor(clothes_shirt_2086)
##############################
From agent.py
wash_executor(clothes_shirt_2086)
Robot is inside bathroom_1. Robot is close clothes_pants_2085. Robot is close clothes_shirt_2086. Robot is close clothes_socks_2087. Robot is close clothes_skirt_2088. Robot is close basket_for_clothes_2006. 
##############################
From agent.py
Human Instruction: You need to iron clothes_shirt_2086. The shirt has been found and washed, but it has not yet been ironed. Proceed to iron the shirt using the iron and ironing board.

The actions you have taken:
Action 1: Walk to ironing_board_2074.
Action 2: look for clothes_shirt_2086 around ironing_board_2074.
Action 3: Walk to closetdrawer_118.
Action 4: look for clothes_shirt_2086 around closetdrawer_118.
Action 5: Walk to closetdrawer_160.
Action 6: look for clothes_shirt_2086 around closetdrawer_160.
Action 7: Walk to hanger_111.
Action 8: look for clothes_shirt_2086 around hanger_111.
Action 9: Walk to hanger_136.
Action 10: look for clothes_shirt_2086 around hanger_136.
Action 11: Walk to hanger_113.
Action 12: look for clothes_shirt_2086 around hanger_113.
Action 13: Walk to washing_machine_2007.
Action 14: Open washing_machine_2007.
Action 15: look for clothes_shirt_2086 around washing_machine_2007.
Action 16: Walk to powersocket_412.
Action 17: look for clothes_shirt_2086 around powersocket_412.
Action 18: Walk to hanger_372.
Action 19: look for clothes_shirt_2086 around hanger_372.
Action 20: Walk to doorjamb_165.
Action 21: look for clothes_shirt_2086 around doorjamb_165.
Action 22: Walk to kitchen_counter_230.
Action 23: look for clothes_shirt_2086 around kitchen_counter_230.
Action 24: Walk to bed_105.
Action 25: look for clothes_shirt_2086 around bed_105.
Action 26: Walk to shower_36.
Action 27: look for clothes_shirt_2086 around shower_36.
Action 28: Walk to basket_for_clothes_2006.
Action 29: look for clothes_shirt_2086 around basket_for_clothes_2006.
Action 30: Wash clothes_shirt_2086.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        bind power_socket: item where:
            is_powersocket(power_socket)
        # Select a power socket to use for the iron
        if not plugged(iron):
            achieve_once plugged(iron)
            # Plug in the iron if it is not already plugged

        achieve is_on(iron)
        # Ensure the iron is turned on for ironing
        
        achieve is_clothes(shirt) and on(shirt, ironing_board)
        # Place the shirt on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select the shirt with the given ID

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2074
        # Select the ironing board with the given ID

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        iron_shirt(shirt, ironing_board, iron)
        # Execute the ironing action

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior find_and_iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve close_char(char, shirt)
        achieve close_char(char, ironing_board)
        if not is_on(iron):
            achieve_once inhand(iron)
            achieve plugged(iron)
            achieve is_on(iron)
        achieve clean(shirt)
        achieve on(shirt, ironing_board)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select the shirt with ID 2086
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2074
        # Select the ironing board with ID 2074

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        find_and_iron_shirt(shirt, ironing_board, iron)
        # Find and begin ironing the shirt
#goal_representation_end

##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Iron the shirt.', '2. Put the shirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2058_around_towel_rack_33(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==33
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
def has_ironing_board_nearby(ironing_board:item):
    # Determine if the ironing board has been located along with the iron
    symbol ironing_board_nearby=exists iron: item: is_iron(iron) and close(iron, ironing_board)
    return ironing_board_nearby

behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve clean(shirt) # Ensure the shirt is ironed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not clean(shirt)
        # Select the unwashed clothes_shirt_2086

        if exists ironing_board: item : is_ironing_board(ironing_board) and has_ironing_board_nearby(ironing_board):
            bind ironing_board: item where:
                is_ironing_board(ironing_board) and has_ironing_board_nearby(ironing_board)
            bind iron: item where:
                is_iron(iron) and close(iron, ironing_board)
        else:
            # If no located ironing board, explore the environment for one
            foreach ironing_board: item:
                if is_ironing_board(ironing_board) and not visited(ironing_board):
                    observe(ironing_board,"Locate the ironing board")

            foreach iron: item:
                if is_iron(iron) and not visited(iron):
                    observe(iron,"Locate the iron")

        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board; available variables: [].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_soap_2053_around_bathroom_cabinet_40(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_towel_2056_around_towel_rack_33(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==33
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#goal_representation
 
def has_ironing_board_nearby(ironing_board:item):
    # Determine if the ironing board has been located along with the iron
    symbol ironing_board_nearby=exists iron: item: is_iron(iron) and close(iron, ironing_board)
    return ironing_board_nearby

behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve clean(shirt) # Ensure the shirt is ironed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not clean(shirt)
        # Select the unwashed clothes_shirt_2086

        if exists ironing_board: item : is_ironing_board(ironing_board) and has_ironing_board_nearby(ironing_board):
            bind ironing_board: item where:
                is_ironing_board(ironing_board) and has_ironing_board_nearby(ironing_board)
            bind iron: item where:
                is_iron(iron) and close(iron, ironing_board)
            iron_shirt(shirt, ironing_board, iron)
        else:
            # If no located ironing board, explore the environment for one
            foreach ironing_board: item:
                if is_ironing_board(ironing_board) and not visited(ironing_board):
                    observe(ironing_board,"Locate the ironing board")

            foreach iron: item:
                if is_iron(iron) and not visited(iron):
                    observe(iron,"Locate the iron")

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2056_around_towel_rack_33(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==33
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve plugged(iron)
        # Ensure the iron is plugged in and ready to use

        achieve is_on(iron)
        # Ensure the iron is turned on and ready to use

        achieve clean(shirt)
        # Ensure the shirt is ironed and clean

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select shirt with ID 2086

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2074
        # Select ironing board with ID 2074

        iron_shirt(shirt, iron, ironing_board)
        # Execute the action to iron the shirt
#goal_representation_end

##############################
From agent.py->reset_goal
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve plugged(iron)
        # Ensure the iron is plugged in and ready to use

        achieve is_on(iron)
        # Ensure the iron is turned on and ready to use

        achieve clean(shirt)
        # Ensure the shirt is ironed and clean

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select shirt with ID 2086

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2074
        # Select ironing board with ID 2074

        iron_shirt(shirt, iron, ironing_board)
        # Execute the action to iron the shirt
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)
##############################
From agent.py
walk_executor(iron_2089)
Robot is inside bathroom_1. Robot is close iron_2089. Robot is close ironing_board_2074. Robot is no longer close clothes_pants_2085.Robot is no longer close clothes_shirt_2086.Robot is no longer close clothes_socks_2087.Robot is no longer close clothes_skirt_2088.Robot is no longer close basket_for_clothes_2006.
##############################
From agent.py
plugin_executor(iron_2089)
Robot is inside bathroom_1. Robot is close iron_2089. Robot is close ironing_board_2074. 
##############################
From agent.py
switchon_executor(iron_2089)
Robot is inside bathroom_1. Robot is close iron_2089. Robot is close ironing_board_2074. 
##############################
From agent.py
Human Instruction: You need to complete ironing the shirt. Although you have found, washed, and set up the iron by plugging it in and switching it on, the shirt itself has not yet been ironed. Proceed to iron the shirt using the heated iron and the ironing board.

The actions you have taken:
Action 1: Walk to ironing_board_2074.
Action 2: look for clothes_shirt_2086 around ironing_board_2074.
Action 3: Walk to closetdrawer_118.
Action 4: look for clothes_shirt_2086 around closetdrawer_118.
Action 5: Walk to closetdrawer_160.
Action 6: look for clothes_shirt_2086 around closetdrawer_160.
Action 7: Walk to hanger_111.
Action 8: look for clothes_shirt_2086 around hanger_111.
Action 9: Walk to hanger_136.
Action 10: look for clothes_shirt_2086 around hanger_136.
Action 11: Walk to hanger_113.
Action 12: look for clothes_shirt_2086 around hanger_113.
Action 13: Walk to washing_machine_2007.
Action 14: Open washing_machine_2007.
Action 15: look for clothes_shirt_2086 around washing_machine_2007.
Action 16: Walk to powersocket_412.
Action 17: look for clothes_shirt_2086 around powersocket_412.
Action 18: Walk to hanger_372.
Action 19: look for clothes_shirt_2086 around hanger_372.
Action 20: Walk to doorjamb_165.
Action 21: look for clothes_shirt_2086 around doorjamb_165.
Action 22: Walk to kitchen_counter_230.
Action 23: look for clothes_shirt_2086 around kitchen_counter_230.
Action 24: Walk to bed_105.
Action 25: look for clothes_shirt_2086 around bed_105.
Action 26: Walk to shower_36.
Action 27: look for clothes_shirt_2086 around shower_36.
Action 28: Walk to basket_for_clothes_2006.
Action 29: look for clothes_shirt_2086 around basket_for_clothes_2006.
Action 30: Wash clothes_shirt_2086.
Action 31: Walk to iron_2089.
Action 32: Plug in iron_2089.
Action 33: Switch on iron_2089.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve is_on(iron)
        # Ensure the iron is on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select the shirt with ID 2086

        bind iron: item where:
            is_iron(iron) and id[iron] == 2089
        # Select the iron with ID 2089

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2074
        # Select the ironing board with ID 2074

        iron_shirt(shirt, iron, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve is_on(iron)
        # Ensure the iron is on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select the shirt with ID 2086

        bind iron: item where:
            is_iron(iron) and id[iron] == 2089
        # Select the iron with ID 2089

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2074
        # Select the ironing board with ID 2074

        iron_shirt(shirt, iron, ironing_board)

##############################
From agent.py-> find a plan in act()
walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close basket_for_clothes_2006. Robot is no longer close iron_2089.Robot is no longer close ironing_board_2074.
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close basket_for_clothes_2006. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close ironing_board_2074. Robot is no longer close basket_for_clothes_2006.
##############################
From agent.py
put_executor(clothes_shirt_2086, ironing_board_2074)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close ironing_board_2074. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
Human Instruction: Iron the shirt using the heated iron and the ironing board. The shirt has been placed on the ironing board, but the actual ironing step is missing.

The actions you have taken:
Action 1: Walk to ironing_board_2074.
Action 2: look for clothes_shirt_2086 around ironing_board_2074.
Action 3: Walk to closetdrawer_118.
Action 4: look for clothes_shirt_2086 around closetdrawer_118.
Action 5: Walk to closetdrawer_160.
Action 6: look for clothes_shirt_2086 around closetdrawer_160.
Action 7: Walk to hanger_111.
Action 8: look for clothes_shirt_2086 around hanger_111.
Action 9: Walk to hanger_136.
Action 10: look for clothes_shirt_2086 around hanger_136.
Action 11: Walk to hanger_113.
Action 12: look for clothes_shirt_2086 around hanger_113.
Action 13: Walk to washing_machine_2007.
Action 14: Open washing_machine_2007.
Action 15: look for clothes_shirt_2086 around washing_machine_2007.
Action 16: Walk to powersocket_412.
Action 17: look for clothes_shirt_2086 around powersocket_412.
Action 18: Walk to hanger_372.
Action 19: look for clothes_shirt_2086 around hanger_372.
Action 20: Walk to doorjamb_165.
Action 21: look for clothes_shirt_2086 around doorjamb_165.
Action 22: Walk to kitchen_counter_230.
Action 23: look for clothes_shirt_2086 around kitchen_counter_230.
Action 24: Walk to bed_105.
Action 25: look for clothes_shirt_2086 around bed_105.
Action 26: Walk to shower_36.
Action 27: look for clothes_shirt_2086 around shower_36.
Action 28: Walk to basket_for_clothes_2006.
Action 29: look for clothes_shirt_2086 around basket_for_clothes_2006.
Action 30: Wash clothes_shirt_2086.
Action 31: Walk to iron_2089.
Action 32: Plug in iron_2089.
Action 33: Switch on iron_2089.
Action 34: Walk to clothes_shirt_2086.
Action 35: Grab clothes_shirt_2086.
Action 36: Walk to ironing_board_2074.
Action 37: Put clothes_shirt_2086 on ironing_board_2074.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is placed on the ironing board
        achieve plugged(iron)
        # Ensure the iron is plugged in
        achieve is_on(iron)
        # Ensure the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        bind iron: item where:
            is_iron(iron)
        # Select the iron
        iron_shirt(shirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is placed on the ironing board
        achieve is_on(iron)
        # Ensure the iron is on to iron the shirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind iron: item where:
            is_iron(iron) and is_on(iron)
        # Select the iron that is on

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_shirt(shirt, iron, ironing_board)

#goal_representation_end

##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Find the shirt.', '2. Iron the shirt.', '3. Put the shirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def has_shirt_in_location(location:item):
    # Determine if the shirt is in a specified location
    symbol shirt_existence=exists shirt: item : is_clothes_shirt(shirt) and close(shirt, location)
    return shirt_existence

behavior __goal__():
    body:
        foreach location: item:
            # Check all relevant locations for the presence of the shirt
            if not visited(location) and (
                is_ironing_board(location) or
                is_closetdrawer(location) or
                is_hanger(location) or
                is_washing_machine(location) or
                is_basket_for_clothes(location)
            ):
                observe(location, "Check if the shirt is in or close to this location")

        bind shirt_location: item where:
            is_clothes_shirt(shirt_location) and visited(shirt_location)
        
        achieve close_char(char, shirt_location) 

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2058_around_towel_rack_32(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==32
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_clothes_hat_2045_around_hanger_359(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==359
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(clothes_hat,hanger_instance)
        else:
            exp(clothes_hat,hanger_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,hanger_instance]=True
        close[hanger_instance,clothes_hat]=True
    

behavior find_clothes_gloves_2046_around_vacuum_cleaner_2070(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind vacuum_cleaner_instance:item where:
            is_vacuum_cleaner(vacuum_cleaner_instance) and id[vacuum_cleaner_instance]==2070
        achieve close_char(char,vacuum_cleaner_instance)
        if can_open(vacuum_cleaner_instance):
            achieve_once open(vacuum_cleaner_instance)
            exp(clothes_gloves,vacuum_cleaner_instance)
        else:
            exp(clothes_gloves,vacuum_cleaner_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,vacuum_cleaner_instance]=True
        close[vacuum_cleaner_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothes_present(shirt:item):
    # Function to check if the item is a shirt
    symbol shirt_present=is_clothes_shirt(shirt)
    return shirt_present

behavior __goal__():
    body:
        if exists shirt: item : is_clothes_shirt(shirt):
            # If a shirt is already known to exist, approach it
            bind shirt: item where:
                is_clothes_shirt(shirt)
            achieve close_char(char, shirt)
        else:
            # If no known shirt exists, explore the environment for one
            foreach location: item:
                if (is_ironing_board(location) or 
                    is_closetdrawer(location) or 
                    is_hanger(location) or 
                    is_washing_machine(location) or 
                    is_basket_for_clothes(location) or 
                    is_bed(location) or 
                    is_shower(location) or 
                    is_kitchen_counter(location) or 
                    is_doorjamb(location) or 
                    is_powersocket(location)) and not visited(location):
                    observe(location, "Locate clothes_shirt_2086")


#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Iron the shirt.', '2. Put the shirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2056_around_towel_rack_33(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==33
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior heat_iron(iron:item):
    body:
        achieve is_on(iron) # Ensure the iron is heated

behavior iron_shirt(shirt:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board) # Place the shirt on the ironing board
        achieve clean(shirt) # Ensure the shirt is ironed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        
        bind iron: item where:
            is_iron(iron)
        # Select the iron
        
        heat_iron(iron) # Heat the iron
        iron_shirt(shirt, ironing_board) # Iron the shirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board
        achieve plugged(iron)
        # Ensure the iron is plugged in
        achieve is_on(iron)
        # Ensure the iron is on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select a shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['Iron the shirt and put it on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2057_around_towel_rack_33(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==33
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_clothes_hat_2045_around_closetdrawer_392(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==392
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_hat,closetdrawer_instance)
        else:
            exp(clothes_hat,closetdrawer_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
 
def is_shirt_ironed(shirt:item, iron:item):
    # Function to check if the shirt has been ironed
    symbol shirt_ironed=is_on(iron)
    return shirt_ironed

behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board
        
        achieve is_on(iron)
        # Ensure the iron is on for ironing the shirt
        
        if is_shirt_ironed(shirt, iron):
            achieve clean(shirt)
            # Ensure the shirt has been ironed (no longer wrinkled)

behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        iron_shirt(shirt, iron, ironing_board)
        # Iron the shirt

        put_shirt_on_bed(shirt, bed)
        # Put the ironed shirt on the bed

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_shirt_ironed(shirt:item, iron:item):
    # Function to check if the shirt has been ironed
    symbol shirt_ironed=is_on(iron)
    return shirt_ironed

behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board
        
        achieve is_on(iron)
        # Ensure the iron is on for ironing the shirt
        
        if is_shirt_ironed(shirt, iron):
            achieve clean(shirt)
            # Ensure the shirt has been ironed (no longer wrinkled)

behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        iron_shirt(shirt, iron, ironing_board)
        # Iron the shirt

        put_shirt_on_bed(shirt, bed)
        # Put the ironed shirt on the bed

##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2086)walk_executor(bed_105)put_executor(clothes_shirt_2086, bed_105)
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close ironing_board_2074. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(bed_105)
Robot is inside bedroom_67. Robot is close clothes_shirt_2086. Robot is close bed_105. Robot is close mat_173. Robot is close floor_70. Robot is no longer inside bathroom_1.Robot is no longer close ironing_board_2074.
##############################
From agent.py
put_executor(clothes_shirt_2086, bed_105)
Robot is inside bedroom_67. Robot is close clothes_shirt_2086. Robot is close bed_105. Robot is close mat_173. Robot is close floor_70. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
Human Instruction: You need to iron the shirt with the heated iron while it is on the ironing board before placing it on the bed.

The actions you have taken:
Action 1: Walk to ironing_board_2074.
Action 2: look for clothes_shirt_2086 around ironing_board_2074.
Action 3: Walk to closetdrawer_118.
Action 4: look for clothes_shirt_2086 around closetdrawer_118.
Action 5: Walk to closetdrawer_160.
Action 6: look for clothes_shirt_2086 around closetdrawer_160.
Action 7: Walk to hanger_111.
Action 8: look for clothes_shirt_2086 around hanger_111.
Action 9: Walk to hanger_136.
Action 10: look for clothes_shirt_2086 around hanger_136.
Action 11: Walk to hanger_113.
Action 12: look for clothes_shirt_2086 around hanger_113.
Action 13: Walk to washing_machine_2007.
Action 14: Open washing_machine_2007.
Action 15: look for clothes_shirt_2086 around washing_machine_2007.
Action 16: Walk to powersocket_412.
Action 17: look for clothes_shirt_2086 around powersocket_412.
Action 18: Walk to hanger_372.
Action 19: look for clothes_shirt_2086 around hanger_372.
Action 20: Walk to doorjamb_165.
Action 21: look for clothes_shirt_2086 around doorjamb_165.
Action 22: Walk to kitchen_counter_230.
Action 23: look for clothes_shirt_2086 around kitchen_counter_230.
Action 24: Walk to bed_105.
Action 25: look for clothes_shirt_2086 around bed_105.
Action 26: Walk to shower_36.
Action 27: look for clothes_shirt_2086 around shower_36.
Action 28: Walk to basket_for_clothes_2006.
Action 29: look for clothes_shirt_2086 around basket_for_clothes_2006.
Action 30: Wash clothes_shirt_2086.
Action 31: Walk to iron_2089.
Action 32: Plug in iron_2089.
Action 33: Switch on iron_2089.
Action 34: Walk to clothes_shirt_2086.
Action 35: Grab clothes_shirt_2086.
Action 36: Walk to ironing_board_2074.
Action 37: Put clothes_shirt_2086 on ironing_board_2074.
Action 38: Grab clothes_shirt_2086.
Action 39: Walk to bed_105.
Action 40: Put clothes_shirt_2086 on bed_105.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_shirt_and_place_on_bed(clothes_shirt:item, ironing_board:item, bed:item):
    body:
        achieve on(clothes_shirt, bed)
        # Ensure the shirt is on the bed

behavior plug_and_turn_on_iron(iron:item, powersocket:item):
    body:
        achieve plugged(iron)
        achieve is_on(iron)
        # Ensure the iron is plugged in and turned on

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind powersocket: item where:
            is_powersocket(powersocket)
        # Select the power socket

        plug_and_turn_on_iron(iron, powersocket)
        iron_shirt_and_place_on_bed(clothes_shirt, ironing_board, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve is_on(iron)
        # Ensure the iron is on
        achieve clean(shirt)
        # Ensure the shirt is ironed (cleaned) and wrinklefree

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select the shirt with specific ID

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2074
        # Select the ironing board with specific ID

        bind iron: item where:
            is_iron(iron) and id[iron] == 2089
        # Select the iron with specific ID

        bind bed: item where:
            is_bed(bed) and id[bed] == 105
        # Select the bed with specific ID

        iron_shirt(shirt, ironing_board, iron)
        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve is_on(iron)
        # Ensure the iron is on
        achieve clean(shirt)
        # Ensure the shirt is ironed (cleaned) and wrinklefree

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select the shirt with specific ID

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2074
        # Select the ironing board with specific ID

        bind iron: item where:
            is_iron(iron) and id[iron] == 2089
        # Select the iron with specific ID

        bind bed: item where:
            is_bed(bed) and id[bed] == 105
        # Select the bed with specific ID

        iron_shirt(shirt, ironing_board, iron)
        place_shirt_on_bed(shirt, bed)

##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2086)walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(bed_105)put_executor(clothes_shirt_2086, bed_105)
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot is inside bedroom_67. Robot is close clothes_shirt_2086. Robot is close bed_105. Robot is close mat_173. Robot is close floor_70. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close ironing_board_2074. Robot is no longer inside bedroom_67.Robot is no longer close floor_70.Robot is no longer close mat_173.Robot is no longer close bed_105.
##############################
From agent.py
put_executor(clothes_shirt_2086, ironing_board_2074)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close ironing_board_2074. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot is inside bedroom_67. Robot is close clothes_shirt_2086. Robot is close ironing_board_2074. Robot is no longer inside bathroom_1.
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot is inside bedroom_67. Robot is close clothes_shirt_2086. Robot is close ironing_board_2074. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(bed_105)
Robot is inside bedroom_67. Robot is close clothes_shirt_2086. Robot is close bed_105. Robot is close mat_173. Robot is close floor_70. Robot is no longer close ironing_board_2074.
##############################
From agent.py
put_executor(clothes_shirt_2086, bed_105)
Robot is inside bedroom_67. Robot is close clothes_shirt_2086. Robot is close bed_105. Robot is close mat_173. Robot is close floor_70. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
Human Instruction: You need to ensure the shirt is ironed while it is on the ironing board with the heated iron before placing it on the bed. The current actions do not indicate that the shirt was ironed properly.

The actions you have taken:
Action 1: Walk to ironing_board_2074.
Action 2: look for clothes_shirt_2086 around ironing_board_2074.
Action 3: Walk to closetdrawer_118.
Action 4: look for clothes_shirt_2086 around closetdrawer_118.
Action 5: Walk to closetdrawer_160.
Action 6: look for clothes_shirt_2086 around closetdrawer_160.
Action 7: Walk to hanger_111.
Action 8: look for clothes_shirt_2086 around hanger_111.
Action 9: Walk to hanger_136.
Action 10: look for clothes_shirt_2086 around hanger_136.
Action 11: Walk to hanger_113.
Action 12: look for clothes_shirt_2086 around hanger_113.
Action 13: Walk to washing_machine_2007.
Action 14: Open washing_machine_2007.
Action 15: look for clothes_shirt_2086 around washing_machine_2007.
Action 16: Walk to powersocket_412.
Action 17: look for clothes_shirt_2086 around powersocket_412.
Action 18: Walk to hanger_372.
Action 19: look for clothes_shirt_2086 around hanger_372.
Action 20: Walk to doorjamb_165.
Action 21: look for clothes_shirt_2086 around doorjamb_165.
Action 22: Walk to kitchen_counter_230.
Action 23: look for clothes_shirt_2086 around kitchen_counter_230.
Action 24: Walk to bed_105.
Action 25: look for clothes_shirt_2086 around bed_105.
Action 26: Walk to shower_36.
Action 27: look for clothes_shirt_2086 around shower_36.
Action 28: Walk to basket_for_clothes_2006.
Action 29: look for clothes_shirt_2086 around basket_for_clothes_2006.
Action 30: Wash clothes_shirt_2086.
Action 31: Walk to iron_2089.
Action 32: Plug in iron_2089.
Action 33: Switch on iron_2089.
Action 34: Walk to clothes_shirt_2086.
Action 35: Grab clothes_shirt_2086.
Action 36: Walk to ironing_board_2074.
Action 37: Put clothes_shirt_2086 on ironing_board_2074.
Action 38: Grab clothes_shirt_2086.
Action 39: Walk to bed_105.
Action 40: Put clothes_shirt_2086 on bed_105.
Action 41: Grab clothes_shirt_2086.
Action 42: Walk to ironing_board_2074.
Action 43: Put clothes_shirt_2086 on ironing_board_2074.
Action 44: Walk to clothes_shirt_2086.
Action 45: Grab clothes_shirt_2086.
Action 46: Walk to bed_105.
Action 47: Put clothes_shirt_2086 on bed_105.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def ensure_shirt_ironed(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        achieve is_on(iron)
        # Ensure the shirt is ironed while it is on the ironing board with the heated iron

def place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        ensure_shirt_ironed(shirt, ironing_board, iron)
        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('COLON', ':') at line 6249, column 9.
Expected one of: 
	* IF
	* LESSTHAN
	* AMPERSAND
	* __ANON_8
	* MORETHAN
	* __ANON_0
	* __ANON_1
	* PERCENT
	* FLOORDIV
	* LESS_EQ
	* STAR
	* VBAR
	* __ANON_4
	* GREATER_EQ
	* AT
	* MINUS
	* __ANON_6
	* __ANON_7
	* DOUBLE_EQUAL
	* RSHIFT
	* EQUAL
	* __ANON_2
	* __ANON_5
	* LSHIFT
	* CIRCUMFLEX
	* OR
	* PLUS
	* SLASH
	* NOT_EQ
	* COMMA
	* SEMICOLON
	* __ANON_3
	* _NEWLINE
	* AND

##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        achieve is_on(iron)
        # Iron the shirt on the ironing board with the heated iron

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        iron_shirt(shirt, ironing_board, iron)
        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        achieve is_on(iron)
        # Iron the shirt on the ironing board with the heated iron

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        iron_shirt(shirt, ironing_board, iron)
        place_shirt_on_bed(shirt, bed)

##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2086)walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(bed_105)put_executor(clothes_shirt_2086, bed_105)
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot is inside bedroom_67. Robot is close clothes_shirt_2086. Robot is close bed_105. Robot is close mat_173. Robot is close floor_70. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close ironing_board_2074. Robot is no longer inside bedroom_67.Robot is no longer close floor_70.Robot is no longer close mat_173.Robot is no longer close bed_105.
##############################
From agent.py
put_executor(clothes_shirt_2086, ironing_board_2074)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close ironing_board_2074. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot is inside bedroom_67. Robot is close clothes_shirt_2086. Robot is close ironing_board_2074. Robot is no longer inside bathroom_1.
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot is inside bedroom_67. Robot is close clothes_shirt_2086. Robot is close ironing_board_2074. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(bed_105)
Robot is inside bedroom_67. Robot is close clothes_shirt_2086. Robot is close bed_105. Robot is close mat_173. Robot is close floor_70. Robot is no longer close ironing_board_2074.
##############################
From agent.py
put_executor(clothes_shirt_2086, bed_105)
Robot is inside bedroom_67. Robot is close clothes_shirt_2086. Robot is close bed_105. Robot is close mat_173. Robot is close floor_70. clothes_shirt_2086 released by right hand. 
##############################
