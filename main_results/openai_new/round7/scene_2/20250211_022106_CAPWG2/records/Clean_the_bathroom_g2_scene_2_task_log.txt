From agent.py
Reset goals: The sub-goals are: 
['1. Find the sink in the bathroom.', '2. Fill the sink with water and add soap to create soapy water.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        # Select a bathroom
        foreach sink: item:
            if is_sink(sink) and not visited(sink) and inside(sink, bathroom):
                # Check all unvisited sinks in the bathroom
                observe(sink,"Inspect to verify the sinks location in the bathroom")
                # Observe the sink to verify its position in the bathroom

#goal_representation_end

##############################
From agent.py->reset_goal

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        # Select a bathroom
        foreach sink: item:
            if is_sink(sink) and not visited(sink) and inside(sink, bathroom):
                # Check all unvisited sinks in the bathroom
                observe(sink,"Inspect to verify the sinks location in the bathroom")
                # Observe the sink to verify its position in the bathroom

##############################
From agent.py-> find a plan in act()
walk_executor(sink_307)obs(sink_307, Inspect to verify the sinks location in the bathroom)
##############################
From agent.py
walk_executor(sink_307)
Robot find: detergent_2108, drawing_296, towel_rack_298, Robot is close to the bathroom_counter_306. Robot is close to the sink_307. 
##############################
From agent.py
obs(sink_307, Inspect to verify the sinks location in the bathroom)
Get this information:  sink_307 is close to walllamp_290. sink_307 is close to wall_266. sink_307 is close to wall_269. sink_307 is close to floor_272. sink_307 is close to bathroom_cabinet_305. sink_307 is close to bathroom_counter_306. sink_307 is close to floor_273. sink_307 is close to faucet_308. sink_307 is close to floor_274. sink_307 is close to detergent_2108. sink_307 is close to character_219. sink_307 is facing drawing_296. detergent_2108 is on sink_307. sink_307 is inside bathroom_265. sink_307 is inside bathroom_counter_306. sink_307 is DIRTY.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2037_around_bathroom_cabinet_305(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_sink_with_water(sink: item):
    body:
        if not has_water(sink):
            get_water(sink)

behavior add_soap_to_water(soap: item, sink: item):
    body:
        if not inside(soap, sink):
            put_inside(soap, sink)

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and id[sink] == 307
        bind soap: item where:
            is_soap(soap)
        fill_sink_with_water(sink)
        add_soap_to_water(soap, sink)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_sink_with_water(sink: item):
    body:
        if not has_water(sink):
            get_water(sink)

behavior add_soap_to_water(soap: item, sink: item):
    body:
        if not inside(soap, sink):
            put_inside(soap, sink)

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and id[sink] == 307
        bind soap: item where:
            is_soap(soap)
        fill_sink_with_water(sink)
        add_soap_to_water(soap, sink)

##############################
From agent.py-> find a plan in act()
walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(bathroom_cabinet_305)open_executor(bathroom_cabinet_305)exp(soap_2037, bathroom_cabinet_305)walk_executor(soap_2037)grab_executor(soap_2037)walk_executor(sink_307)putin_executor(soap_2037, sink_307)
##############################
From agent.py
walk_executor(faucet_308)
Robot find: Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. 
##############################
From agent.py
switchoff_executor(faucet_308)
Robot find: Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. faucet_308 is turned off. 
##############################
From agent.py
walk_executor(bathroom_cabinet_305)
Robot find: Robot is close to the bathroom_cabinet_305. 
##############################
From agent.py
open_executor(bathroom_cabinet_305)
Robot find: soap_2038, Robot is close to the bathroom_cabinet_305. Robot is close to the soap_2038. bathroom_cabinet_305 is opened. 
##############################
From agent.py
exp(soap_2037, bathroom_cabinet_305)
Fail to find soap_2037 around bathroom_cabinet_305. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_308)switchon_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(soap_2038)grab_executor(soap_2038)walk_executor(sink_307)putin_executor(soap_2038, sink_307)
##############################
From agent.py
walk_executor(faucet_308)
Robot find: Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. 
##############################
From agent.py
switchon_executor(faucet_308)
Robot find: Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. faucet_308 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_308)
Robot find: Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. faucet_308 is turned off. 
##############################
From agent.py
walk_executor(soap_2038)
Robot find: Robot is close to the bathroom_cabinet_305. Robot is close to the soap_2038. 
##############################
From agent.py
grab_executor(soap_2038)
Robot find: Robot is close to the bathroom_cabinet_305. Robot is close to the soap_2038. Grabbing soap_2038 by right hand. 
##############################
From agent.py
walk_executor(sink_307)
Robot find: Robot is close to the soap_2038. Robot is close to the bathroom_counter_306. Robot is close to the sink_307. 
##############################
From agent.py
putin_executor(soap_2038, sink_307)
Robot find: Robot is close to the soap_2038. Robot is close to the bathroom_counter_306. Robot is close to the sink_307. soap_2038 is close sink_307. sink_307 is close soap_2038. soap_2038 is inside sink_307. soap_2038 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Prepare a sink of soapy water in the bathroom.
Action History:
['walk_executor(sink_307)', 'walk_executor(faucet_308)', 'switchoff_executor(faucet_308)', 'walk_executor(bathroom_cabinet_305)', 'open_executor(bathroom_cabinet_305)', 'walk_executor(faucet_308)', 'switchon_executor(faucet_308)', 'switchoff_executor(faucet_308)', 'walk_executor(soap_2038)', 'grab_executor(soap_2038)', 'walk_executor(sink_307)', 'putin_executor(soap_2038, sink_307)']
Time info:
Time consume: 49 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 2
goal correct times: 0
action_num: 12

Task complete rate:
1
Scene_id: 2
##############################
