From agent.py
Reset goals: The sub-goals are: 
['1. Locate the basket with clothes in it.  ', '2. Place the clothes into the washing machine and wash them.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2079_around_basket_for_clothes_2040(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_scarf,basket_for_clothes_instance)
        else:
            exp(clothes_scarf,basket_for_clothes_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_scarf]=True
    

behavior find_clothes_pants_2113_around_basket_for_clothes_2040(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_pants,basket_for_clothes_instance)
        else:
            exp(clothes_pants,basket_for_clothes_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_pants]=True
    

behavior find_clothes_socks_2115_around_basket_for_clothes_2040(clothes_socks:item):
    goal: not unknown(clothes_socks)
    body:
        assert is_clothes_socks(clothes_socks)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_socks,basket_for_clothes_instance)
        else:
            exp(clothes_socks,basket_for_clothes_instance)
    eff:
        unknown[clothes_socks]=False
        close[clothes_socks,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_socks]=True
    

behavior find_clothes_hat_2076_around_basket_for_clothes_2040(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_hat,basket_for_clothes_instance)
        else:
            exp(clothes_hat,basket_for_clothes_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_hat]=True
    

behavior find_clothes_gloves_2077_around_basket_for_clothes_2040(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_gloves,basket_for_clothes_instance)
        else:
            exp(clothes_gloves,basket_for_clothes_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_gloves]=True
    

behavior find_clothes_underwear_2022_around_basket_for_clothes_2040(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_underwear,basket_for_clothes_instance)
        else:
            exp(clothes_underwear,basket_for_clothes_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_underwear]=True
    

behavior find_clothes_shirt_2114_around_basket_for_clothes_2040(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_shirt,basket_for_clothes_instance)
        else:
            exp(clothes_shirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_shirt]=True
    

behavior find_clothes_dress_2075_around_basket_for_clothes_2040(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_dress,basket_for_clothes_instance)
        else:
            exp(clothes_dress,basket_for_clothes_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_dress]=True
    

behavior find_clothes_jacket_2078_around_basket_for_clothes_2040(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_jacket,basket_for_clothes_instance)
        else:
            exp(clothes_jacket,basket_for_clothes_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_jacket]=True
    

behavior find_clothes_skirt_2116_around_basket_for_clothes_2040(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_basket_for_clothes():
    body:
        foreach basket: item:
            if is_basket_for_clothes(basket) and not visited(basket):
                observe(basket, "Check if it contains clothes")

behavior locate_basket_with_clothes():
    body:
        symbol found=exists basket: item : (is_basket_for_clothes(basket) and dirty(basket))
        if not found:
            find_basket_for_clothes()

behavior __goal__():
    body:
        locate_basket_with_clothes()

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_basket_for_clothes():
    body:
        foreach basket: item:
            if is_basket_for_clothes(basket) and not visited(basket):
                observe(basket, "Check if it contains clothes")

behavior locate_basket_with_clothes():
    body:
        symbol found=exists basket: item : (is_basket_for_clothes(basket) and dirty(basket))
        if not found:
            find_basket_for_clothes()

behavior __goal__():
    body:
        locate_basket_with_clothes()

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)obs(basket_for_clothes_2040, Check if it contains clothes)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Robot find: clothes_pants_2113, clothes_shirt_2114, clothes_socks_2115, clothes_skirt_2116, Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. 
##############################
From agent.py
obs(basket_for_clothes_2040, Check if it contains clothes)
Get this information:  clothes_skirt_2116 is inside basket_for_clothes_2040. basket_for_clothes_2040 is inside bathroom_265. clothes_socks_2115 is inside basket_for_clothes_2040. basket_for_clothes_2040 is close to clothes_pants_2113. basket_for_clothes_2040 is close to clothes_shirt_2114. basket_for_clothes_2040 is close to clothes_socks_2115. basket_for_clothes_2040 is close to clothes_skirt_2116. basket_for_clothes_2040 is close to bathtub_297. basket_for_clothes_2040 is close to window_287. basket_for_clothes_2040 is close to character_219. clothes_pants_2113 is inside basket_for_clothes_2040. clothes_shirt_2114 is inside basket_for_clothes_2040. basket_for_clothes_2040 is OPEN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_sink_307(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(detergent,sink_instance)
        else:
            exp(detergent,sink_instance)
    eff:
        unknown[detergent]=False
        close[detergent,sink_instance]=True
        close[sink_instance,detergent]=True
    

behavior find_clothes_scarf_2079_around_photoframe_246(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==246
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(clothes_scarf,photoframe_instance)
        else:
            exp(clothes_scarf,photoframe_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,photoframe_instance]=True
        close[photoframe_instance,clothes_scarf]=True
    

behavior find_clothes_gloves_2077_around_photoframe_246(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==246
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(clothes_gloves,photoframe_instance)
        else:
            exp(clothes_gloves,photoframe_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,photoframe_instance]=True
        close[photoframe_instance,clothes_gloves]=True
    

behavior find_clothes_underwear_2022_around_photoframe_246(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==246
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(clothes_underwear,photoframe_instance)
        else:
            exp(clothes_underwear,photoframe_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,photoframe_instance]=True
        close[photoframe_instance,clothes_underwear]=True
    

behavior find_clothes_dress_2075_around_photoframe_246(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==246
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(clothes_dress,photoframe_instance)
        else:
            exp(clothes_dress,photoframe_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,photoframe_instance]=True
        close[photoframe_instance,clothes_dress]=True
    

behavior find_clothes_jacket_2078_around_photoframe_246(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==246
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(clothes_jacket,photoframe_instance)
        else:
            exp(clothes_jacket,photoframe_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,photoframe_instance]=True
        close[photoframe_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_washing_machine(c: item, washing_machine: item):
    body:
        if not inside(c, washing_machine):
            put_inside(c, washing_machine)

behavior start_washing_machine(washing_machine: item):
    body:
        if open(washing_machine):
            closes(washing_machine)
        if is_off(washing_machine):
            switch_on(washing_machine)

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and visited(basket)
        # Select a basket that is already located

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine

        foreach c: item:
        # Load all clothes from the basket into the washing machine
            if is_clothes(c) and dirty(c) and inside(c, basket):
                load_washing_machine(c, washing_machine)
        
        start_washing_machine(washing_machine) # Start the washing machine

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_washing_machine(c: item, washing_machine: item):
    body:
        if not inside(c, washing_machine):
            put_inside(c, washing_machine)

behavior start_washing_machine(washing_machine: item):
    body:
        if open(washing_machine):
            closes(washing_machine)
        if is_off(washing_machine):
            switch_on(washing_machine)

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and visited(basket)
        # Select a basket that is already located

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine

        foreach c: item:
        # Load all clothes from the basket into the washing machine
            if is_clothes(c) and dirty(c) and inside(c, basket):
                load_washing_machine(c, washing_machine)
        
        start_washing_machine(washing_machine) # Start the washing machine

##############################
Error record: object of type 'NoneType' has no len()
##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
['walk_executor(basket_for_clothes_2040)']
Time info:
Time consume: 52 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 2
goal correct times: 0
action_num: 1

Task complete rate:
Keystate: k1 - Requires: 21 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
