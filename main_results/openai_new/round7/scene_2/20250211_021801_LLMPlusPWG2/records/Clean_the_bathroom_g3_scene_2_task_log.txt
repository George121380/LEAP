From agent.py
Reset goals: The sub-goals are: 
['Wipe the toilet with toilet paper. Then throw it into the toilet.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_toilet_paper_2118_around_toilet_302(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind toilet_instance:item where:
            is_toilet(toilet_instance) and id[toilet_instance]==302
        achieve close_char(char,toilet_instance)
        if can_open(toilet_instance):
            achieve_once open(toilet_instance)
            exp(toilet_paper,toilet_instance)
        else:
            exp(toilet_paper,toilet_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,toilet_instance]=True
        close[toilet_instance,toilet_paper]=True
    

#exp_behavior_end

#goal_representation
 
behavior wipe_toilet_with_toilet_paper(toilet: item, toilet_paper: item):
    body:
        achieve_once inhand(toilet_paper)
        # Temporarily hold the toilet paper to wipe the toilet
        achieve_once dirty(toilet)
        # Indicate that the toilet is dirty before wiping
        wipe(toilet)
        # Perform the action of wiping the toilet
        achieve clean(toilet)
        # Ensure the toilet is clean after wiping

behavior throw_toilet_paper_in_toilet(toilet: item, toilet_paper: item):
    body:
        achieve_once inside(toilet_paper, toilet)
        # Dispose of the used toilet paper into the toilet
 
behavior __goal__():
    body:
        bind toilet: item where:
            is_toilet(toilet)
        # Select the toilet
        bind toilet_paper: item where:
            is_toilet_paper(toilet_paper)
        # Select the toilet paper
        wipe_toilet_with_toilet_paper(toilet, toilet_paper)
        throw_toilet_paper_in_toilet(toilet, toilet_paper)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_toilet_paper_2118_around_toilet_302(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind toilet_instance:item where:
            is_toilet(toilet_instance) and id[toilet_instance]==302
        achieve close_char(char,toilet_instance)
        if can_open(toilet_instance):
            achieve_once open(toilet_instance)
            exp(toilet_paper,toilet_instance)
        else:
            exp(toilet_paper,toilet_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,toilet_instance]=True
        close[toilet_instance,toilet_paper]=True
    

behavior find_towel_2083_around_bathtub_297(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathtub_instance:item where:
            is_bathtub(bathtub_instance) and id[bathtub_instance]==297
        achieve close_char(char,bathtub_instance)
        if can_open(bathtub_instance):
            achieve_once open(bathtub_instance)
            exp(towel,bathtub_instance)
        else:
            exp(towel,bathtub_instance)
    eff:
        unknown[towel]=False
        close[towel,bathtub_instance]=True
        close[bathtub_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior wipe_toilet(toilet:item, toilet_paper:item):
    body:
        achieve_once inhand(toilet_paper)
        # Temporarily take the toilet paper in hand
        achieve clean(toilet)
        # The toilet is wiped clean

behavior discard_toilet_paper(toilet_paper:item, toilet:item):
    body:
        achieve_once inside(toilet_paper, toilet)
        # Throw the toilet paper into the toilet

behavior __goal__():
    body:
        bind toilet: item where:
            is_toilet(toilet)
        # Select the toilet for the task

        bind toilet_paper: item where:
            is_toilet_paper(toilet_paper)
        # Select the toilet paper

        wipe_toilet(toilet, toilet_paper)
        discard_toilet_paper(toilet_paper, toilet)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior wipe_toilet(toilet:item, toilet_paper:item):
    body:
        achieve_once inhand(toilet_paper)
        # Temporarily take the toilet paper in hand
        achieve clean(toilet)
        # The toilet is wiped clean

behavior discard_toilet_paper(toilet_paper:item, toilet:item):
    body:
        achieve_once inside(toilet_paper, toilet)
        # Throw the toilet paper into the toilet

behavior __goal__():
    body:
        bind toilet: item where:
            is_toilet(toilet)
        # Select the toilet for the task

        bind toilet_paper: item where:
            is_toilet_paper(toilet_paper)
        # Select the toilet paper

        wipe_toilet(toilet, toilet_paper)
        discard_toilet_paper(toilet_paper, toilet)

##############################
From agent.py-> find a plan in act()
walk_executor(toilet_302)open_executor(toilet_302)exp(toilet_paper_2118, toilet_302)walk_executor(toilet_paper_2118)grab_executor(toilet_paper_2118)walk_executor(toilet_302)putin_executor(toilet_paper_2118, toilet_302)
##############################
From agent.py
walk_executor(toilet_302)
Robot find: toilet_paper_2118, Robot is close to the toilet_302. 
##############################
From agent.py
open_executor(toilet_302)
Robot find: Robot is close to the toilet_302. toilet_302 is opened. 
##############################
From agent.py
exp(toilet_paper_2118, toilet_302)
Find toilet_paper_2118. 
##############################
From agent.py-> find a plan in act()
walk_executor(toilet_paper_2118)grab_executor(toilet_paper_2118)walk_executor(toilet_302)putin_executor(toilet_paper_2118, toilet_302)
##############################
From agent.py
walk_executor(toilet_paper_2118)
Robot find: Robot is close to the toilet_paper_2118. 
##############################
From agent.py
grab_executor(toilet_paper_2118)
Robot find: Robot is close to the toilet_paper_2118. Grabbing toilet_paper_2118 by right hand. 
##############################
From agent.py
walk_executor(toilet_302)
Robot find: Robot is close to the toilet_paper_2118. Robot is close to the toilet_302. 
##############################
From agent.py
putin_executor(toilet_paper_2118, toilet_302)
Robot find: Robot is close to the toilet_paper_2118. Robot is close to the toilet_302. toilet_paper_2118 is close toilet_302. toilet_paper_2118 is inside toilet_302. toilet_paper_2118 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to wipe the toilet with the toilet paper before discarding it.
##############################
From agent.py
Human Instruction: You need to wipe the toilet with the toilet paper before discarding it.

The actions you have taken:
Action 1: Walk to toilet_302.
Action 2: Open toilet_302.
Action 3: look for toilet_paper_2118 around toilet_302.
Action 4: Walk to toilet_paper_2118.
Action 5: Grab toilet_paper_2118.
Action 6: Walk to toilet_302.
Action 7: Put toilet_paper_2118 into toilet_302.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2098_around_bathroom_cabinet_305(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

behavior find_soap_2038_around_shower_303(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==303
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(soap,shower_instance)
        else:
            exp(soap,shower_instance)
    eff:
        unknown[soap]=False
        close[soap,shower_instance]=True
        close[shower_instance,soap]=True
    

behavior find_detergent_2108_around_washing_machine_2041(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior wipe_toilet_with_paper(toilet:item, paper:item):
    body:
        achieve_once inhand(paper)
        # Hold the toilet paper to wipe the toilet
        wipe(toilet)
        # Wipe the toilet using the toilet paper
        achieve_once inside(paper, toilet)
        # Discard the toilet paper by placing it inside the toilet after use

behavior __goal__():
    body:
        bind toilet: item where:
            is_toilet(toilet) and id[toilet]==302
        # Select the toilet with ID 302
        bind paper: item where:
            is_toilet_paper(paper) and id[paper]==2118
        # Select toilet paper with ID 2118
        wipe_toilet_with_paper(toilet, paper)


#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior wipe_toilet_with_paper(toilet:item, paper:item):
    body:
        achieve_once inhand(paper)
        # Hold the toilet paper to wipe the toilet
        wipe(toilet)
        # Wipe the toilet using the toilet paper
        achieve_once inside(paper, toilet)
        # Discard the toilet paper by placing it inside the toilet after use

behavior __goal__():
    body:
        bind toilet: item where:
            is_toilet(toilet) and id[toilet]==302
        # Select the toilet with ID 302
        bind paper: item where:
            is_toilet_paper(paper) and id[paper]==2118
        # Select toilet paper with ID 2118
        wipe_toilet_with_paper(toilet, paper)


##############################
From agent.py-> find a plan in act()
grab_executor(toilet_paper_2118)wipe_executor(toilet_302)putin_executor(toilet_paper_2118, toilet_302)
##############################
From agent.py
grab_executor(toilet_paper_2118)
Robot find: Robot is close to the toilet_paper_2118. Robot is close to the toilet_302. Grabbing toilet_paper_2118 by right hand. 
##############################
From agent.py
wipe_executor(toilet_302)
Robot find: Robot is close to the toilet_paper_2118. Robot is close to the toilet_302. 
##############################
From agent.py
putin_executor(toilet_paper_2118, toilet_302)
Robot find: Robot is close to the toilet_paper_2118. Robot is close to the toilet_302. toilet_paper_2118 is close toilet_302. toilet_paper_2118 is inside toilet_302. toilet_paper_2118 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Wipe the toilet with toilet paper. Then throw it into the toilet.
Action History:
['walk_executor(toilet_302)', 'open_executor(toilet_302)', 'walk_executor(toilet_paper_2118)', 'grab_executor(toilet_paper_2118)', 'walk_executor(toilet_302)', 'putin_executor(toilet_paper_2118, toilet_302)', 'grab_executor(toilet_paper_2118)', 'wipe_executor(toilet_302)', 'putin_executor(toilet_paper_2118, toilet_302)']
Time info:
Time consume: 67 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 3
goal correct times: 0
action_num: 9

Task complete rate:
1
Scene_id: 2
##############################
