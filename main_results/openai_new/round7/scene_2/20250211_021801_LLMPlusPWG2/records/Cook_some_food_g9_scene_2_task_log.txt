From agent.py
Reset goals: The sub-goals are: 
['Make some French fries.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2102_around_kitchen_counter_132(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(oil,kitchen_counter_instance)
        else:
            exp(oil,kitchen_counter_instance)
    eff:
        unknown[oil]=False
        close[oil,kitchen_counter_instance]=True
        close[kitchen_counter_instance,oil]=True
    

behavior find_fryingpan_2107_around_kitchen_counter_132(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

behavior find_plate_2105_around_table_127(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(plate,table_instance)
        else:
            exp(plate,table_instance)
    eff:
        unknown[plate]=False
        close[plate,table_instance]=True
        close[table_instance,plate]=True
    

behavior find_food_potato_2066_around_fridge_140(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_potato,fridge_instance)
        else:
            exp(food_potato,fridge_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,fridge_instance]=True
        close[fridge_instance,food_potato]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior peel_potatoes(potato:item):
    body:
        achieve clean(potato)

behavior cut_potatoes(potato:item, board:item, knife:item):
    body:
        achieve_once on(potato, board)
        achieve_once cut(potato)

behavior fry_potatoes(potato:item, pan:item, stove:item, oil:item):
    body:
        achieve_once inside(oil, pan)
        achieve_once is_on(stove)
        achieve_once inside(potato, pan)

behavior serve_french_fries(potato:item, plate:item):
    body:
        achieve_once on(potato, plate)

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind knife: item where:
            is_knife(knife)

        bind stove: item where:
            is_stove(stove)

        bind pan: item where:
            is_fryingpan(pan)

        bind oil: item where:
            is_oil(oil)

        bind plate: item where:
            is_plate(plate)

        peel_potatoes(potato)
        cut_potatoes(potato, cutting_board, knife)
        fry_potatoes(potato, pan, stove, oil)
        serve_french_fries(potato, plate)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior peel_potatoes(potato:item):
    body:
        achieve clean(potato)

behavior cut_potatoes(potato:item, board:item, knife:item):
    body:
        achieve_once on(potato, board)
        achieve_once cut(potato)

behavior fry_potatoes(potato:item, pan:item, stove:item, oil:item):
    body:
        achieve_once inside(oil, pan)
        achieve_once is_on(stove)
        achieve_once inside(potato, pan)

behavior serve_french_fries(potato:item, plate:item):
    body:
        achieve_once on(potato, plate)

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind knife: item where:
            is_knife(knife)

        bind stove: item where:
            is_stove(stove)

        bind pan: item where:
            is_fryingpan(pan)

        bind oil: item where:
            is_oil(oil)

        bind plate: item where:
            is_plate(plate)

        peel_potatoes(potato)
        cut_potatoes(potato, cutting_board, knife)
        fry_potatoes(potato, pan, stove, oil)
        serve_french_fries(potato, plate)

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_potato_2066, fridge_140)walk_executor(food_potato_2066)grab_executor(food_potato_2066)wash_executor(food_potato_2066)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)walk_executor(kitchen_counter_132)exp(fryingpan_2107, kitchen_counter_132)exp(oil_2102, kitchen_counter_132)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(table_127)exp(plate_2105, table_127)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(plate_2105)put_executor(food_potato_2066, plate_2105)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_potato_2066, fridge_140)
Find food_potato_2066. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_potato_2066)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)walk_executor(kitchen_counter_132)exp(fryingpan_2107, kitchen_counter_132)exp(oil_2102, kitchen_counter_132)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(table_127)exp(plate_2105, table_127)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(plate_2105)put_executor(food_potato_2066, plate_2105)
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_potato_2066, cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. cutting_board_2080 is close food_potato_2066. food_potato_2066 is close cutting_board_2080. food_potato_2066 is on cutting_board_2080. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_52)
Robot find: pot_54, Robot is close to the knifeblock_52. 
##############################
From agent.py
exp(knife_2036, knifeblock_52)
Fail to find knife_2036 around knifeblock_52. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(knife_2036, cupboard_131)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)walk_executor(cupboard_131)exp(fryingpan_2107, cupboard_131)walk_executor(kitchen_counter_132)exp(oil_2102, kitchen_counter_132)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(cupboard_131)exp(plate_2105, cupboard_131)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(plate_2105)put_executor(food_potato_2066, plate_2105)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(knife_2036, cupboard_131)
Fail to find knife_2036 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(knife_2036, kitchen_counter_132)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)walk_executor(cupboard_130)exp(fryingpan_2107, cupboard_130)walk_executor(kitchen_counter_132)exp(oil_2102, kitchen_counter_132)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(cupboard_130)exp(plate_2105, cupboard_130)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(plate_2105)put_executor(food_potato_2066, plate_2105)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the kitchen_counter_132. 
##############################
From agent.py
exp(knife_2036, kitchen_counter_132)
Fail to find knife_2036 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_307)exp(knife_2036, sink_307)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)walk_executor(stove_2090)open_executor(stove_2090)exp(fryingpan_2107, stove_2090)walk_executor(stovefan_139)exp(oil_2102, stovefan_139)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(plate_2105, dishwasher_143)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(plate_2105)put_executor(food_potato_2066, plate_2105)
##############################
From agent.py
walk_executor(sink_307)
Robot find: detergent_2108, drawing_296, towel_rack_298, Robot is close to the bathroom_counter_306. Robot is close to the sink_307. 
##############################
From agent.py
exp(knife_2036, sink_307)
Fail to find knife_2036 around sink_307. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)exp(knife_2036, sink_133)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(fryingpan_2107, dishwasher_143)walk_executor(stove_2090)open_executor(stove_2090)exp(oil_2102, stove_2090)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(dishwasher_143)exp(plate_2105, dishwasher_143)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(plate_2105)put_executor(food_potato_2066, plate_2105)
##############################
From agent.py
walk_executor(sink_133)
Robot find: after_shave_2029, cleaning_solution_2098, juice_2034, Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
exp(knife_2036, sink_133)
Fail to find knife_2036 around sink_133. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(knife_2036, dishwasher_143)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)walk_executor(stove_2090)open_executor(stove_2090)exp(fryingpan_2107, stove_2090)walk_executor(cupboard_130)exp(oil_2102, cupboard_130)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(dishwasher_143)exp(plate_2105, dishwasher_143)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(plate_2105)put_executor(food_potato_2066, plate_2105)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(knife_2036, dishwasher_143)
Find knife_2036. 
##############################
From agent.py-> find a plan in act()
grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)walk_executor(stove_2090)open_executor(stove_2090)exp(fryingpan_2107, stove_2090)walk_executor(cupboard_130)exp(oil_2102, cupboard_130)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(dishwasher_143)exp(plate_2105, dishwasher_143)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(plate_2105)put_executor(food_potato_2066, plate_2105)
##############################
From agent.py
grab_executor(knife_2036)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. Grabbing knife_2036 by right hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. 
##############################
From agent.py
cut_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
open_executor(stove_2090)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is opened. 
##############################
From agent.py
exp(fryingpan_2107, stove_2090)
Find fryingpan_2107. 
##############################
From agent.py-> find a plan in act()
walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(dishwasher_143)exp(plate_2105, dishwasher_143)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(plate_2105)put_executor(food_potato_2066, plate_2105)
##############################
From agent.py
walk_executor(oil_2102)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the oil_2102. 
##############################
From agent.py
grab_executor(oil_2102)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the oil_2102. Grabbing oil_2102 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the oil_2102. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(oil_2102, fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the oil_2102. Robot is close to the fryingpan_2107. oil_2102 is close fryingpan_2107. oil_2102 is inside fryingpan_2107. fryingpan_2107 is close oil_2102. oil_2102 released by left hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. Grabbing food_potato_2066 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_potato_2066, fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. food_potato_2066 is inside fryingpan_2107. food_potato_2066 is close fryingpan_2107. fryingpan_2107 is close food_potato_2066. food_potato_2066 released by left hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find plate_2105 ?
Answer: Go to dining_room_1. Locate table_127. You will find plate_2105 on top of table_127.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_1. Locate table_127. You will find plate_2105 on top of table_127.

The actions you have taken:
Action 1: Walk to fridge_140.
Action 2: Switch off fridge_140.
Action 3: Open fridge_140.
Action 4: look for food_potato_2066 around fridge_140.
Action 5: Grab food_potato_2066.
Action 6: Walk to cutting_board_2080.
Action 7: Put food_potato_2066 on cutting_board_2080.
Action 8: Walk to knifeblock_52.
Action 9: look for knife_2036 around knifeblock_52.
Action 10: Walk to cupboard_131.
Action 11: Open cupboard_131.
Action 12: look for knife_2036 around cupboard_131.
Action 13: Walk to kitchen_counter_132.
Action 14: look for knife_2036 around kitchen_counter_132.
Action 15: Walk to sink_307.
Action 16: look for knife_2036 around sink_307.
Action 17: Walk to sink_133.
Action 18: look for knife_2036 around sink_133.
Action 19: Walk to dishwasher_143.
Action 20: Open dishwasher_143.
Action 21: look for knife_2036 around dishwasher_143.
Action 22: Grab knife_2036.
Action 23: Walk to food_potato_2066.
Action 24: Cut food_potato_2066.
Action 25: Walk to stove_2090.
Action 26: Open stove_2090.
Action 27: look for fryingpan_2107 around stove_2090.
Action 28: Walk to oil_2102.
Action 29: Grab oil_2102.
Action 30: Walk to fryingpan_2107.
Action 31: Put oil_2102 into fryingpan_2107.
Action 32: Walk to stove_2090.
Action 33: Switch on stove_2090.
Action 34: Walk to food_potato_2066.
Action 35: Grab food_potato_2066.
Action 36: Walk to fryingpan_2107.
Action 37: Put food_potato_2066 into fryingpan_2107.
Action 38: Walk to dishwasher_143.

##############################
From agent.py
exp(plate_2105, dishwasher_143)
Fail to find plate_2105 around dishwasher_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(table_127)exp(plate_2105, table_127)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(plate_2105)put_executor(food_potato_2066, plate_2105)
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the fryingpan_2107. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the fryingpan_2107. Grabbing food_potato_2066 by left hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_potato_2066, cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_potato_2066 is close cutting_board_2080. food_potato_2066 is on cutting_board_2080. food_potato_2066 released by left hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Grabbing food_potato_2066 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_potato_2066, fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. food_potato_2066 is inside fryingpan_2107. food_potato_2066 is close fryingpan_2107. food_potato_2066 released by left hand. 
##############################
From agent.py
walk_executor(table_127)
Robot find: mat_115, fork_2104, console_2027, crayon_2030, bowl_2096, bowl_2097, napkin_2014, plate_2105, drawing_118, Robot is close to the knife_2036. Robot is close to the mat_115. Robot is close to the table_127. 
##############################
From agent.py
exp(plate_2105, table_127)
Find plate_2105. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(plate_2105)put_executor(food_potato_2066, plate_2105)
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the fryingpan_2107. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the fryingpan_2107. Grabbing food_potato_2066 by left hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_potato_2066, cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_potato_2066 is close cutting_board_2080. food_potato_2066 is on cutting_board_2080. food_potato_2066 released by left hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Grabbing food_potato_2066 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_potato_2066, fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. food_potato_2066 is inside fryingpan_2107. food_potato_2066 is close fryingpan_2107. food_potato_2066 released by left hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the fryingpan_2107. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the fryingpan_2107. Grabbing food_potato_2066 by left hand. 
##############################
From agent.py
walk_executor(plate_2105)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the plate_2105. Robot is close to the table_127. 
##############################
From agent.py
put_executor(food_potato_2066, plate_2105)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the plate_2105. Robot is close to the table_127. plate_2105 is close food_potato_2066. food_potato_2066 is close plate_2105. food_potato_2066 is on plate_2105. food_potato_2066 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure the potatoes are peeled before proceeding with other steps in the recipe. No action related to peeling the potatoes has been executed, which is required to complete the task of making French fries.
##############################
From agent.py
Human Instruction: You need to ensure the potatoes are peeled before proceeding with other steps in the recipe. No action related to peeling the potatoes has been executed, which is required to complete the task of making French fries.

The actions you have taken:
Action 1: Walk to fridge_140.
Action 2: Switch off fridge_140.
Action 3: Open fridge_140.
Action 4: look for food_potato_2066 around fridge_140.
Action 5: Grab food_potato_2066.
Action 6: Walk to cutting_board_2080.
Action 7: Put food_potato_2066 on cutting_board_2080.
Action 8: Walk to knifeblock_52.
Action 9: look for knife_2036 around knifeblock_52.
Action 10: Walk to cupboard_131.
Action 11: Open cupboard_131.
Action 12: look for knife_2036 around cupboard_131.
Action 13: Walk to kitchen_counter_132.
Action 14: look for knife_2036 around kitchen_counter_132.
Action 15: Walk to sink_307.
Action 16: look for knife_2036 around sink_307.
Action 17: Walk to sink_133.
Action 18: look for knife_2036 around sink_133.
Action 19: Walk to dishwasher_143.
Action 20: Open dishwasher_143.
Action 21: look for knife_2036 around dishwasher_143.
Action 22: Grab knife_2036.
Action 23: Walk to food_potato_2066.
Action 24: Cut food_potato_2066.
Action 25: Walk to stove_2090.
Action 26: Open stove_2090.
Action 27: look for fryingpan_2107 around stove_2090.
Action 28: Walk to oil_2102.
Action 29: Grab oil_2102.
Action 30: Walk to fryingpan_2107.
Action 31: Put oil_2102 into fryingpan_2107.
Action 32: Walk to stove_2090.
Action 33: Switch on stove_2090.
Action 34: Walk to food_potato_2066.
Action 35: Grab food_potato_2066.
Action 36: Walk to fryingpan_2107.
Action 37: Put food_potato_2066 into fryingpan_2107.
Action 38: Walk to dishwasher_143.
Action 39: look for plate_2105 around dishwasher_143.
Action 40: Walk to food_potato_2066.
Action 41: Grab food_potato_2066.
Action 42: Walk to cutting_board_2080.
Action 43: Put food_potato_2066 on cutting_board_2080.
Action 44: Walk to food_potato_2066.
Action 45: Grab food_potato_2066.
Action 46: Walk to fryingpan_2107.
Action 47: Put food_potato_2066 into fryingpan_2107.
Action 48: Walk to table_127.
Action 49: look for plate_2105 around table_127.
Action 50: Walk to food_potato_2066.
Action 51: Grab food_potato_2066.
Action 52: Walk to cutting_board_2080.
Action 53: Put food_potato_2066 on cutting_board_2080.
Action 54: Walk to food_potato_2066.
Action 55: Grab food_potato_2066.
Action 56: Walk to fryingpan_2107.
Action 57: Put food_potato_2066 into fryingpan_2107.
Action 58: Walk to food_potato_2066.
Action 59: Grab food_potato_2066.
Action 60: Walk to plate_2105.
Action 61: Put food_potato_2066 on plate_2105.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2005_around_bowl_2096(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind bowl_instance:item where:
            is_bowl(bowl_instance) and id[bowl_instance]==2096
        achieve close_char(char,bowl_instance)
        if can_open(bowl_instance):
            achieve_once open(bowl_instance)
            exp(oil,bowl_instance)
        else:
            exp(oil,bowl_instance)
    eff:
        unknown[oil]=False
        close[oil,bowl_instance]=True
        close[bowl_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior peel_potato(potato:item):
    body:
        achieve_once cut(potato)
        # Simulating the act of peeling as cutting the potato

behavior prepare_fryingpan(potato:item, oil:item, fryingpan:item):
    body:
        achieve_once inside(oil, fryingpan)
        achieve_once is_on(fryingpan)
        achieve_once inside(potato, fryingpan)

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)
        # Select the potato to work with

        bind oil: item where:
            is_oil(oil)
        # Select the oil to use

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select the frying pan to use

        peel_potato(potato) # Peel the potato
        prepare_fryingpan(potato, oil, fryingpan) # Prepare frying pan with potato and oil

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2102_around_bowl_2096(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind bowl_instance:item where:
            is_bowl(bowl_instance) and id[bowl_instance]==2096
        achieve close_char(char,bowl_instance)
        if can_open(bowl_instance):
            achieve_once open(bowl_instance)
            exp(oil,bowl_instance)
        else:
            exp(oil,bowl_instance)
    eff:
        unknown[oil]=False
        close[oil,bowl_instance]=True
        close[bowl_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
def has_potatoes_to_peel():
    # Function to check if there are potatoes that need to be peeled
    symbol has_potatoes= exists o: item : (is_food_potato(o) and not dirty(o))
    return not has_potatoes

behavior peel_potatoes(potato:item):
    body:
        achieve_once clean(potato) # Ensure that the potato is peeled and clean

behavior __goal__():
    body:
        if not has_potatoes_to_peel():
            # If there are dirty potatoes, clean them
            foreach potato: item:
                if is_food_potato(potato) and not dirty(potato):
                    peel_potatoes(potato)
        # Proceed when potatoes are peeled and clean

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2005_around_bowl_2096(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind bowl_instance:item where:
            is_bowl(bowl_instance) and id[bowl_instance]==2096
        achieve close_char(char,bowl_instance)
        if can_open(bowl_instance):
            achieve_once open(bowl_instance)
            exp(oil,bowl_instance)
        else:
            exp(oil,bowl_instance)
    eff:
        unknown[oil]=False
        close[oil,bowl_instance]=True
        close[bowl_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior peel_potato(potato:item):
    body:
        achieve clean(potato)
        # Ensures the potato is peeled

behavior cut_potato(potato:item, cutting_board:item, knife:item):
    body:
        achieve cut(potato)
        # Cut the potato after it is peeled

behavior fry_potato(potato:item, fryingpan:item, oil:item):
    body:
        achieve_once clean(fryingpan)
        # Ensures the frying pan is clean before use
        achieve inside(oil, fryingpan)
        # Put oil in the frying pan
        achieve is_on(stove)
        # The stove is turned on
        achieve_once on(potato, fryingpan)
        # Place the cut potato in the frying pan

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        bind knife: item where:
            is_knife(knife)
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        bind oil: item where:
            is_oil(oil)
        bind stove: item where:
            is_stove(stove)
        
        peel_potato(potato)
        cut_potato(potato, cutting_board, knife)
        fry_potato(potato, fryingpan, oil)


#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2005_around_cupboard_130(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(oil,cupboard_instance)
        else:
            exp(oil,cupboard_instance)
    eff:
        unknown[oil]=False
        close[oil,cupboard_instance]=True
        close[cupboard_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_potatoes_and_knife():
    body:
        foreach o: item:
            if is_food_potato(o):
                achieve_once on(o, cutting_board)
                # place all potatoes on the cutting board
        
        bind knife: item where:
            is_knife(knife)
        achieve_once close_char(char, knife)
        # Find a knife and achieve close to it

behavior peel_potatoes():
    body:
        foreach o: item:
            if is_food_potato(o) and on(o, cutting_board):
                achieve cut(o)
                # Ensure all potatoes on the cutting board are peeled

behavior add_oil_to_pan(pan:item):
    body:
        bind oil: item where:
            is_oil(oil)
        achieve_once inside(oil, pan) 
        # Pour oil into the frying pan once

behavior fry_potatoes(fryingpan:item, stove:item):
    body:
        bind potatoes: item where:
            is_food_potato(potatoes) and cut(potatoes)
            # Select peeled potatoes
            
        achieve_once closed(stove) # Ensure stove is closed
        achieve_once is_on(stove) # Turn on the stove
        
        achieve_once inside(potatoes, fryingpan)
        # Place peeled potatoes into the fryingpan

behavior place_fries_on_plate(fries:item,plate:item):
    body:
        achieve_once on(fries,plate)
        # Place the fries on the plate

behavior __goal__():
    body:
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        
        bind fryingpan: item where:
            is_fryingpan(fryingpan)

        bind stove: item where:
            is_stove(stove)

        bind plate: item where:
            is_plate(plate)

        find_potatoes_and_knife()
        # Ensure potatoes are on cutting board and find knife
        peel_potatoes()
        # Peeling potatoes

        add_oil_to_pan(fryingpan)
        # Adding oil to the frying pan

        fry_potatoes(fryingpan, stove)
        # Frying potatoes in the pan on the stove

        place_fries_on_plate(fryingpan, plate)
        # Place cooked fries on a plate

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2005_around_walllamp_45(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind walllamp_instance:item where:
            is_walllamp(walllamp_instance) and id[walllamp_instance]==45
        achieve close_char(char,walllamp_instance)
        if can_open(walllamp_instance):
            achieve_once open(walllamp_instance)
            exp(oil,walllamp_instance)
        else:
            exp(oil,walllamp_instance)
    eff:
        unknown[oil]=False
        close[oil,walllamp_instance]=True
        close[walllamp_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior peel_potato(potato:item):
    body:
        wash(potato) # Wash the potato before peeling
        achieve cut(potato) # You can assume achieving cut will result in the potato being prepared for peeling

behavior cut_potato(potato:item):
    body:
        achieve cut(potato) # Cut the potato into suitable pieces for fries

behavior fry_potato(potato:item, fryingpan:item, stove:item, oil:item):
    body:
        achieve_once inside(oil, fryingpan) # Add oil to the frying pan
        achieve_once on(potato, fryingpan) # Put potato pieces into the frying pan
        achieve is_on(stove) # Ensure the stove is turned on

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)
        # Select a potato
        
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan
        
        bind stove: item where:
            is_stove(stove)
        # Select a stove
        
        bind oil: item where:
            is_oil(oil)
        # Select oil

        peel_potato(potato) # Peel the potato
        cut_potato(potato) # Cut the potato for fries
        fry_potato(potato, fryingpan, stove, oil) # Fry the potato pieces


#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior peel_potato(potato:item):
    body:
        wash(potato) # Wash the potato before peeling
        achieve cut(potato) # You can assume achieving cut will result in the potato being prepared for peeling

behavior cut_potato(potato:item):
    body:
        achieve cut(potato) # Cut the potato into suitable pieces for fries

behavior fry_potato(potato:item, fryingpan:item, stove:item, oil:item):
    body:
        achieve_once inside(oil, fryingpan) # Add oil to the frying pan
        achieve_once on(potato, fryingpan) # Put potato pieces into the frying pan
        achieve is_on(stove) # Ensure the stove is turned on

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)
        # Select a potato
        
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan
        
        bind stove: item where:
            is_stove(stove)
        # Select a stove
        
        bind oil: item where:
            is_oil(oil)
        # Select oil

        peel_potato(potato) # Peel the potato
        cut_potato(potato) # Cut the potato for fries
        fry_potato(potato, fryingpan, stove, oil) # Fry the potato pieces


##############################
From agent.py-> find a plan in act()
grab_executor(food_potato_2066)wash_executor(food_potato_2066)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(fryingpan_2107)put_executor(food_potato_2066, fryingpan_2107)
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the plate_2105. Robot is close to the table_127. Grabbing food_potato_2066 by left hand. 
##############################
From agent.py
wash_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the plate_2105. Robot is close to the table_127. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. 
##############################
From agent.py
put_executor(food_potato_2066, fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. food_potato_2066 is close fryingpan_2107. food_potato_2066 is on fryingpan_2107. food_potato_2066 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The potatoes need to be peeled as indicated in the goal representation. There are no actions related to peeling the potatoes that have been executed. This step is necessary to complete the task of making French fries.
##############################
From agent.py
Human Instruction: The potatoes need to be peeled as indicated in the goal representation. There are no actions related to peeling the potatoes that have been executed. This step is necessary to complete the task of making French fries.

The actions you have taken:
Action 1: Walk to fridge_140.
Action 2: Switch off fridge_140.
Action 3: Open fridge_140.
Action 4: look for food_potato_2066 around fridge_140.
Action 5: Grab food_potato_2066.
Action 6: Walk to cutting_board_2080.
Action 7: Put food_potato_2066 on cutting_board_2080.
Action 8: Walk to knifeblock_52.
Action 9: look for knife_2036 around knifeblock_52.
Action 10: Walk to cupboard_131.
Action 11: Open cupboard_131.
Action 12: look for knife_2036 around cupboard_131.
Action 13: Walk to kitchen_counter_132.
Action 14: look for knife_2036 around kitchen_counter_132.
Action 15: Walk to sink_307.
Action 16: look for knife_2036 around sink_307.
Action 17: Walk to sink_133.
Action 18: look for knife_2036 around sink_133.
Action 19: Walk to dishwasher_143.
Action 20: Open dishwasher_143.
Action 21: look for knife_2036 around dishwasher_143.
Action 22: Grab knife_2036.
Action 23: Walk to food_potato_2066.
Action 24: Cut food_potato_2066.
Action 25: Walk to stove_2090.
Action 26: Open stove_2090.
Action 27: look for fryingpan_2107 around stove_2090.
Action 28: Walk to oil_2102.
Action 29: Grab oil_2102.
Action 30: Walk to fryingpan_2107.
Action 31: Put oil_2102 into fryingpan_2107.
Action 32: Walk to stove_2090.
Action 33: Switch on stove_2090.
Action 34: Walk to food_potato_2066.
Action 35: Grab food_potato_2066.
Action 36: Walk to fryingpan_2107.
Action 37: Put food_potato_2066 into fryingpan_2107.
Action 38: Walk to dishwasher_143.
Action 39: look for plate_2105 around dishwasher_143.
Action 40: Walk to food_potato_2066.
Action 41: Grab food_potato_2066.
Action 42: Walk to cutting_board_2080.
Action 43: Put food_potato_2066 on cutting_board_2080.
Action 44: Walk to food_potato_2066.
Action 45: Grab food_potato_2066.
Action 46: Walk to fryingpan_2107.
Action 47: Put food_potato_2066 into fryingpan_2107.
Action 48: Walk to table_127.
Action 49: look for plate_2105 around table_127.
Action 50: Walk to food_potato_2066.
Action 51: Grab food_potato_2066.
Action 52: Walk to cutting_board_2080.
Action 53: Put food_potato_2066 on cutting_board_2080.
Action 54: Walk to food_potato_2066.
Action 55: Grab food_potato_2066.
Action 56: Walk to fryingpan_2107.
Action 57: Put food_potato_2066 into fryingpan_2107.
Action 58: Walk to food_potato_2066.
Action 59: Grab food_potato_2066.
Action 60: Walk to plate_2105.
Action 61: Put food_potato_2066 on plate_2105.
Action 62: Grab food_potato_2066.
Action 63: Wash food_potato_2066.
Action 64: Walk to faucet_134.
Action 65: Switch off faucet_134.
Action 66: Walk to fryingpan_2107.
Action 67: Put food_potato_2066 on fryingpan_2107.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2102_around_pot_2093(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==2093
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(oil,pot_instance)
        else:
            exp(oil,pot_instance)
    eff:
        unknown[oil]=False
        close[oil,pot_instance]=True
        close[pot_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior peel_potatoes(potato:item):
    body:
        achieve clean(potato) # Ensure potato is clean before peeling
        achieve cut(potato) # Cut the potato into appropriate size for peeling

behavior fry_potatoes(potato:item, oil:item, frying_pan:item, stove:item):
    body:
        achieve inside(oil, frying_pan) # Put oil into the frying pan
        achieve is_on(stove) # Ensure the stove is turned on
        achieve inside(potato, frying_pan) # Place potatoes into the frying pan

behavior serve_potatoes(potato:item, plate:item):
    body:
        achieve on(potato, plate) # Place the potato on the plate

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)
        # Select a potato from the available items
        
        bind oil: item where:
            is_oil(oil)
        # Select an oil from the available items

        bind frying_pan: item where:
            is_fryingpan(frying_pan)
        # Select a frying pan from the available items

        bind stove: item where:
            is_stove(stove)
        # Select a stove from the available items

        bind plate: item where:
            is_plate(plate)
        # Select a plate from the available items

        peel_potatoes(potato)
        # Peel the potato before frying

        fry_potatoes(potato, oil, frying_pan, stove)
        # Fry the potatoes in the pan on the stove

        serve_potatoes(potato, plate)
        # Serve the potatoes on the plate

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2005_around_bowl_2096(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind bowl_instance:item where:
            is_bowl(bowl_instance) and id[bowl_instance]==2096
        achieve close_char(char,bowl_instance)
        if can_open(bowl_instance):
            achieve_once open(bowl_instance)
            exp(oil,bowl_instance)
        else:
            exp(oil,bowl_instance)
    eff:
        unknown[oil]=False
        close[oil,bowl_instance]=True
        close[bowl_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
def is_fryable(o:item):
    # Function to check if the item is cut and can be fried
    symbol is_fryable = cut(o) and is_food_potato(o)
    return is_fryable

behavior prepare_potato(potato:item, cutting_board:item, knife:item):
    body:
        achieve_once close_char(char, cutting_board) # Move close to the cutting board
        achieve_once on(potato, cutting_board) # Place the potato on the cutting board
        achieve_once cut(potato) # Cut the potato

behavior heat_oil_on_stove(stove:item, oil:item, pan:item):
    body:
        achieve_once close_char(char, stove) # Move close to the stove
        achieve_once inside(oil, pan) # Pour the oil into the pan
        achieve is_on(stove) # Turn on the stove

behavior fry_potato(potato:item, pan:item):
    body:
        if is_fryable(potato):
            achieve_once inside(potato, pan) # Fry the potato in the pan

behavior serve_french_fries(potato:item, plate:item):
    body:
        achieve_once on(potato, plate) # Serve the potato on a plate

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        bind knife: item where:
            is_knife(knife)
        prepare_potato(potato, cutting_board, knife)
        
        bind stove: item where:
            is_stove(stove)
        bind oil: item where:
            is_oil(oil)
        bind pan: item where:
            is_fryingpan(pan)
        heat_oil_on_stove(stove, oil, pan)
        
        fry_potato(potato, pan)
        
        bind plate: item where:
            is_plate(plate)
        serve_french_fries(potato, plate)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_fryable(o:item):
    # Function to check if the item is cut and can be fried
    symbol is_fryable = cut(o) and is_food_potato(o)
    return is_fryable

behavior prepare_potato(potato:item, cutting_board:item, knife:item):
    body:
        achieve_once close_char(char, cutting_board) # Move close to the cutting board
        achieve_once on(potato, cutting_board) # Place the potato on the cutting board
        achieve_once cut(potato) # Cut the potato

behavior heat_oil_on_stove(stove:item, oil:item, pan:item):
    body:
        achieve_once close_char(char, stove) # Move close to the stove
        achieve_once inside(oil, pan) # Pour the oil into the pan
        achieve is_on(stove) # Turn on the stove

behavior fry_potato(potato:item, pan:item):
    body:
        if is_fryable(potato):
            achieve_once inside(potato, pan) # Fry the potato in the pan

behavior serve_french_fries(potato:item, plate:item):
    body:
        achieve_once on(potato, plate) # Serve the potato on a plate

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        bind knife: item where:
            is_knife(knife)
        prepare_potato(potato, cutting_board, knife)
        
        bind stove: item where:
            is_stove(stove)
        bind oil: item where:
            is_oil(oil)
        bind pan: item where:
            is_fryingpan(pan)
        heat_oil_on_stove(stove, oil, pan)
        
        fry_potato(potato, pan)
        
        bind plate: item where:
            is_plate(plate)
        serve_french_fries(potato, plate)

##############################
From agent.py-> find a plan in act()
walk_executor(cutting_board_2080)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(stove_2090)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(plate_2105)put_executor(food_potato_2066, plate_2105)
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the fryingpan_2107. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the fryingpan_2107. Grabbing food_potato_2066 by left hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_potato_2066, cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_potato_2066 is close cutting_board_2080. food_potato_2066 is on cutting_board_2080. food_potato_2066 released by left hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. Grabbing food_potato_2066 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_potato_2066, fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. food_potato_2066 is inside fryingpan_2107. food_potato_2066 is close fryingpan_2107. food_potato_2066 released by left hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the fryingpan_2107. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the fryingpan_2107. Grabbing food_potato_2066 by left hand. 
##############################
From agent.py
walk_executor(plate_2105)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the plate_2105. Robot is close to the table_127. 
##############################
From agent.py
put_executor(food_potato_2066, plate_2105)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the plate_2105. Robot is close to the table_127. food_potato_2066 is close plate_2105. food_potato_2066 is on plate_2105. food_potato_2066 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The task of making French fries is incomplete because the potatoes were not peeled before being cut and fried, as indicated in the goal representation. Additionally, ensure the frying process is executed correctly by frying the cut potatoes in oil in the frying pan and then serving the fried potatoes on a plate.
##############################
Task Summary:
Task Goal:
Make some French fries.
Action History:
['walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'grab_executor(food_potato_2066)', 'walk_executor(cutting_board_2080)', 'put_executor(food_potato_2066, cutting_board_2080)', 'walk_executor(knifeblock_52)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(kitchen_counter_132)', 'walk_executor(sink_307)', 'walk_executor(sink_133)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'grab_executor(knife_2036)', 'walk_executor(food_potato_2066)', 'cut_executor(food_potato_2066)', 'walk_executor(stove_2090)', 'open_executor(stove_2090)', 'walk_executor(oil_2102)', 'grab_executor(oil_2102)', 'walk_executor(fryingpan_2107)', 'putin_executor(oil_2102, fryingpan_2107)', 'walk_executor(stove_2090)', 'switchon_executor(stove_2090)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_potato_2066, fryingpan_2107)', 'walk_executor(dishwasher_143)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(cutting_board_2080)', 'put_executor(food_potato_2066, cutting_board_2080)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_potato_2066, fryingpan_2107)', 'walk_executor(table_127)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(cutting_board_2080)', 'put_executor(food_potato_2066, cutting_board_2080)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_potato_2066, fryingpan_2107)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(plate_2105)', 'put_executor(food_potato_2066, plate_2105)', 'grab_executor(food_potato_2066)', 'wash_executor(food_potato_2066)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(fryingpan_2107)', 'put_executor(food_potato_2066, fryingpan_2107)', 'walk_executor(cutting_board_2080)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(cutting_board_2080)', 'put_executor(food_potato_2066, cutting_board_2080)', 'walk_executor(stove_2090)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_potato_2066, fryingpan_2107)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(plate_2105)', 'put_executor(food_potato_2066, plate_2105)']
Time info:
Time consume: 282 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 8
goal correct times: 0
action_num: 71

Task complete rate:
Keystate: k1 - Requires: 8 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
