From agent.py
Reset goals: The sub-goals are: 
['Directly iron a pair of skirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_skirt_2116_around_basket_for_clothes_2040(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior setup_ironing_board(ironing_board:item):
    body:
        achieve_once surfaces(ironing_board)
        # Ensure the ironing board is set up properly

behavior prepare_iron(iron:item):
    body:
        achieve plugged(iron)
        # Plug in the iron
        achieve has_switch(iron)
        achieve is_on(iron)
        # Turn on the iron

behavior directly_iron_skirt(skirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(skirt, ironing_board)
        # Place the skirt on the ironing board
        observe(iron, "Check if the iron is ready for ironing") 
        # Ensure the iron is ready
        achieve once clean(skirt)
        # Iron the skirt until it is clean or wrinklefree

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select a skirt

        setup_ironing_board(ironing_board)
        prepare_iron(iron)
        directly_iron_skirt(skirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_skirt_2116_around_basket_for_clothes_2040(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
behavior plug_and_turn_on_iron(iron:item, powersocket:item):
    body:
        achieve_once close_char(char, powersocket)
        # Move close to the power socket
        achieve_once plugged(iron)
        # Plug the iron into the power socket
        achieve_once is_on(iron)
        # Turn on the iron

behavior place_skirt_on_ironing_board(skirt:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)
        # Place the skirt on the ironing board

behavior iron_skirt(skirt:item, iron:item):
    body:
        achieve_once clean(skirt)
        # Iron the skirt until it is smooth and wrinklefree

behavior unplug_and_turn_off_iron(iron:item, powersocket:item):
    body:
        achieve_once unplugged(iron)
        # Unplug the iron from the power socket
        achieve_once is_off(iron)
        # Turn off the iron

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select a skirt
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board
        bind iron: item where:
            is_iron(iron)
        # Select an iron
        bind powersocket: item where:
            is_powersocket(powersocket)
        # Select a power socket

        plug_and_turn_on_iron(iron, powersocket)
        # Plug in the iron and turn it on
        place_skirt_on_ironing_board(skirt, ironing_board)
        # Place the skirt on the ironing board
        iron_skirt(skirt, iron)
        # Iron the skirt
        unplug_and_turn_off_iron(iron, powersocket)
        # Unplug the iron and turn it off
#goal_representation_end

##############################
From agent.py->reset_goal
behavior plug_and_turn_on_iron(iron:item, powersocket:item):
    body:
        achieve_once close_char(char, powersocket)
        # Move close to the power socket
        achieve_once plugged(iron)
        # Plug the iron into the power socket
        achieve_once is_on(iron)
        # Turn on the iron

behavior place_skirt_on_ironing_board(skirt:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)
        # Place the skirt on the ironing board

behavior iron_skirt(skirt:item, iron:item):
    body:
        achieve_once clean(skirt)
        # Iron the skirt until it is smooth and wrinklefree

behavior unplug_and_turn_off_iron(iron:item, powersocket:item):
    body:
        achieve_once unplugged(iron)
        # Unplug the iron from the power socket
        achieve_once is_off(iron)
        # Turn off the iron

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select a skirt
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board
        bind iron: item where:
            is_iron(iron)
        # Select an iron
        bind powersocket: item where:
            is_powersocket(powersocket)
        # Select a power socket

        plug_and_turn_on_iron(iron, powersocket)
        # Plug in the iron and turn it on
        place_skirt_on_ironing_board(skirt, ironing_board)
        # Place the skirt on the ironing board
        iron_skirt(skirt, iron)
        # Iron the skirt
        unplug_and_turn_off_iron(iron, powersocket)
        # Unplug the iron and turn it off
##############################
From agent.py-> find a plan in act()
walk_executor(powersocket_48)walk_executor(ironing_board_2099)exp(iron_2117, ironing_board_2099)walk_executor(iron_2117)plugin_executor(iron_2117)switchon_executor(iron_2117)walk_executor(basket_for_clothes_2040)exp(clothes_skirt_2116, basket_for_clothes_2040)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)wash_executor(clothes_skirt_2116)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(iron_2117)switchoff_executor(iron_2117)plugout_executor(iron_2117)
##############################
From agent.py
walk_executor(powersocket_48)
Robot find: phone_47, Robot is close to the powersocket_48. 
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: iron_2117, Robot is close to the ironing_board_2099. 
##############################
From agent.py
exp(iron_2117, ironing_board_2099)
Find iron_2117. 
##############################
From agent.py-> find a plan in act()
walk_executor(powersocket_48)walk_executor(iron_2117)plugin_executor(iron_2117)switchon_executor(iron_2117)walk_executor(basket_for_clothes_2040)exp(clothes_skirt_2116, basket_for_clothes_2040)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)wash_executor(clothes_skirt_2116)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(iron_2117)switchoff_executor(iron_2117)plugout_executor(iron_2117)
##############################
From agent.py
walk_executor(powersocket_48)
Robot find: Robot is close to the powersocket_48. 
##############################
From agent.py
walk_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. 
##############################
From agent.py
plugin_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. iron_2117 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. iron_2117 is turned on. 
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Robot find: clothes_pants_2113, clothes_shirt_2114, clothes_socks_2115, clothes_skirt_2116, Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. 
##############################
From agent.py
exp(clothes_skirt_2116, basket_for_clothes_2040)
Find clothes_skirt_2116. 
##############################
From agent.py-> find a plan in act()
walk_executor(powersocket_48)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)wash_executor(clothes_skirt_2116)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(iron_2117)switchoff_executor(iron_2117)plugout_executor(iron_2117)
##############################
From agent.py
walk_executor(powersocket_48)
Robot find: Robot is close to the powersocket_48. 
##############################
From agent.py
walk_executor(clothes_skirt_2116)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_skirt_2116. 
##############################
From agent.py
grab_executor(clothes_skirt_2116)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_skirt_2116. Grabbing clothes_skirt_2116 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. 
##############################
From agent.py
put_executor(clothes_skirt_2116, ironing_board_2099)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. ironing_board_2099 is close clothes_skirt_2116. clothes_skirt_2116 is close ironing_board_2099. clothes_skirt_2116 is on ironing_board_2099. clothes_skirt_2116 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2116)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. 
##############################
From agent.py
grab_executor(clothes_skirt_2116)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. Grabbing clothes_skirt_2116 by right hand. 
##############################
From agent.py
wash_executor(clothes_skirt_2116)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. clothes_skirt_2116 is cleaned. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: pot_54, Robot is close to the clothes_skirt_2116. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(iron_2117)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. 
##############################
From agent.py
switchoff_executor(iron_2117)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. iron_2117 is turned off. 
##############################
From agent.py
plugout_executor(iron_2117)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. iron_2117 is unplugged. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to iron the skirt until it is smooth and wrinkle-free. Although you washed the skirt, the specific action of ironing has not been executed.
##############################
From agent.py
Human Instruction: You need to iron the skirt until it is smooth and wrinkle-free. Although you washed the skirt, the specific action of ironing has not been executed.

The actions you have taken:
Action 1: Walk to powersocket_48.
Action 2: Walk to ironing_board_2099.
Action 3: look for iron_2117 around ironing_board_2099.
Action 4: Walk to powersocket_48.
Action 5: Walk to iron_2117.
Action 6: Plug in iron_2117.
Action 7: Switch on iron_2117.
Action 8: Walk to basket_for_clothes_2040.
Action 9: look for clothes_skirt_2116 around basket_for_clothes_2040.
Action 10: Walk to powersocket_48.
Action 11: Walk to clothes_skirt_2116.
Action 12: Grab clothes_skirt_2116.
Action 13: Walk to ironing_board_2099.
Action 14: Put clothes_skirt_2116 on ironing_board_2099.
Action 15: Walk to clothes_skirt_2116.
Action 16: Grab clothes_skirt_2116.
Action 17: Wash clothes_skirt_2116.
Action 18: Walk to faucet_134.
Action 19: Switch off faucet_134.
Action 20: Walk to iron_2117.
Action 21: Switch off iron_2117.
Action 22: Plug out iron_2117.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_washing_machine_2041(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_towel_2083_around_bathtub_297(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathtub_instance:item where:
            is_bathtub(bathtub_instance) and id[bathtub_instance]==297
        achieve close_char(char,bathtub_instance)
        if can_open(bathtub_instance):
            achieve_once open(bathtub_instance)
            exp(towel,bathtub_instance)
        else:
            exp(towel,bathtub_instance)
    eff:
        unknown[towel]=False
        close[towel,bathtub_instance]=True
        close[bathtub_instance,towel]=True
    

#exp_behavior_end

#goal_representation

behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve is_on(iron) # Ensure the iron is turned on during the ironing process
        achieve clean(skirt) # Ensure the skirt is clean

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt to iron
        
        bind iron: item where:
            is_iron(iron)
        # Select the iron to use
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        
        achieve_once on(skirt, ironing_board)
        # Place the skirt on the ironing board temporarily
        
        iron_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve is_on(iron) # Ensure the iron is turned on during the ironing process
        achieve clean(skirt) # Ensure the skirt is clean

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt to iron
        
        bind iron: item where:
            is_iron(iron)
        # Select the iron to use
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        
        achieve_once on(skirt, ironing_board)
        # Place the skirt on the ironing board temporarily
        
        iron_skirt(skirt, iron, ironing_board)

##############################
From agent.py-> find a plan in act()
put_executor(clothes_skirt_2116, ironing_board_2099)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
put_executor(clothes_skirt_2116, ironing_board_2099)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. clothes_skirt_2116 is close ironing_board_2099. clothes_skirt_2116 is on ironing_board_2099. clothes_skirt_2116 released by right hand. 
##############################
From agent.py
plugin_executor(iron_2117)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. iron_2117 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2117)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. iron_2117 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to perform the ironing action on the skirt to make it smooth and wrinkle-free. The iron is on and the skirt is on the ironing board, but the ironing itself has not been completed.
##############################
From agent.py
Human Instruction: You need to perform the ironing action on the skirt to make it smooth and wrinkle-free. The iron is on and the skirt is on the ironing board, but the ironing itself has not been completed.

The actions you have taken:
Action 1: Walk to powersocket_48.
Action 2: Walk to ironing_board_2099.
Action 3: look for iron_2117 around ironing_board_2099.
Action 4: Walk to powersocket_48.
Action 5: Walk to iron_2117.
Action 6: Plug in iron_2117.
Action 7: Switch on iron_2117.
Action 8: Walk to basket_for_clothes_2040.
Action 9: look for clothes_skirt_2116 around basket_for_clothes_2040.
Action 10: Walk to powersocket_48.
Action 11: Walk to clothes_skirt_2116.
Action 12: Grab clothes_skirt_2116.
Action 13: Walk to ironing_board_2099.
Action 14: Put clothes_skirt_2116 on ironing_board_2099.
Action 15: Walk to clothes_skirt_2116.
Action 16: Grab clothes_skirt_2116.
Action 17: Wash clothes_skirt_2116.
Action 18: Walk to faucet_134.
Action 19: Switch off faucet_134.
Action 20: Walk to iron_2117.
Action 21: Switch off iron_2117.
Action 22: Plug out iron_2117.
Action 23: Put clothes_skirt_2116 on ironing_board_2099.
Action 24: Plug in iron_2117.
Action 25: Switch on iron_2117.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_dress_2075_around_washing_machine_2041(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_dress,washing_machine_instance)
        else:
            exp(clothes_dress,washing_machine_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,washing_machine_instance]=True
        close[washing_machine_instance,clothes_dress]=True
    

behavior find_clothes_scarf_2079_around_washing_machine_2041(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_scarf,washing_machine_instance)
        else:
            exp(clothes_scarf,washing_machine_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,washing_machine_instance]=True
        close[washing_machine_instance,clothes_scarf]=True
    

behavior find_clothes_jacket_2078_around_washing_machine_2041(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once plugged(iron)
        # Ensure the iron is plugged in

        achieve_once is_on(iron)
        # Ensure the iron is turned on

        achieve_once on(skirt, ironing_board)
        # Ensure the skirt is on the ironing board

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_skirt_smooth(skirt:item):
    # Function to check if a skirt is smooth and wrinklefree
    # This is a placeholder function, assuming smoothness can be deduced from certain known states
    # For the task completion, smoothness might be inferred after ironing
    return not dirty(skirt) and not has_water(skirt)

behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once plugged(iron)
        # Ensure the iron is plugged in
        
        achieve_once is_on(iron)
        # Ensure the iron is turned on
        
        achieve_once on(skirt, ironing_board)
        # Ensure the skirt is on the ironing board for ironing
        
        # Iron the skirt to make it smooth and remove wrinkles
        # Assuming smoothing the skirt directly correlates with the cleaning state
        achieve clean(skirt)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Bind skirt object
        
        bind iron: item where:
            is_iron(iron)
        # Bind iron object

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Bind ironing board object

        if not is_skirt_smooth(skirt):
            # If the skirt is not smooth, proceed to iron it
            iron_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_dress_2075_around_washing_machine_2041(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_dress,washing_machine_instance)
        else:
            exp(clothes_dress,washing_machine_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,washing_machine_instance]=True
        close[washing_machine_instance,clothes_dress]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, board:item):
    body:
        achieve_once on(skirt, board)
        # The skirt should be on the ironing board
        achieve plugged(iron)
        # The iron should be plugged in
        achieve is_on(iron)
        # The iron should be turned on

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt to be ironed
        bind iron: item where:
            is_iron(iron)
        # Select the iron to be used
        bind board: item where:
            is_ironing_board(board)
        # Select the ironing board
        iron_skirt(skirt, iron, board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_dress_2075_around_washing_machine_2041(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_dress,washing_machine_instance)
        else:
            exp(clothes_dress,washing_machine_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,washing_machine_instance]=True
        close[washing_machine_instance,clothes_dress]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(iron:item, skirt:item, board:item):
    body:
        achieve_once on(skirt, board) # Ensure the skirt is on the ironing board
        achieve_once plugged(iron) # Ensure the iron is plugged in
        achieve_once is_on(iron) # Ensure the iron is switched on
        # The ironing process is carried out here

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind iron: item where:
            is_iron(iron)
        # Select the iron
        
        bind board: item where:
            is_ironing_board(board)
        # Select the ironing board
        
        iron_skirt(iron, skirt, board)
        # Iron the skirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_dress_2075_around_washing_machine_2041(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_dress,washing_machine_instance)
        else:
            exp(clothes_dress,washing_machine_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,washing_machine_instance]=True
        close[washing_machine_instance,clothes_dress]=True
    

behavior find_clothes_scarf_2079_around_orchid_117(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind orchid_instance:item where:
            is_orchid(orchid_instance) and id[orchid_instance]==117
        achieve close_char(char,orchid_instance)
        if can_open(orchid_instance):
            achieve_once open(orchid_instance)
            exp(clothes_scarf,orchid_instance)
        else:
            exp(clothes_scarf,orchid_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,orchid_instance]=True
        close[orchid_instance,clothes_scarf]=True
    

behavior find_clothes_gloves_2077_around_washing_machine_2041(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)
        # Ensure the skirt is on the ironing board
        achieve_once is_on(iron)
        # Turn on the iron

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt
        bind iron: item where:
            is_iron(iron)
        # Select the iron
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        iron_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_dress_2075_around_washing_machine_2041(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_dress,washing_machine_instance)
        else:
            exp(clothes_dress,washing_machine_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,washing_machine_instance]=True
        close[washing_machine_instance,clothes_dress]=True
    

#exp_behavior_end

#goal_representation

behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board) # Ensure the skirt is on the ironing board
        achieve_once is_on(iron) # Ensure the iron is on

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select a skirt to be ironed
        
        bind iron: item where:
            is_iron(iron)
        # Select an iron
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board
        
        iron_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py
Reset goals: The sub-goals are: 
['Directly iron a pair of skirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_dress_2075_around_washing_machine_2041(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_dress,washing_machine_instance)
        else:
            exp(clothes_dress,washing_machine_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,washing_machine_instance]=True
        close[washing_machine_instance,clothes_dress]=True
    

behavior find_clothes_gloves_2077_around_washing_machine_2041(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(iron:item, skirt:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)
        # Ensure the skirt is on the ironing board
        achieve_once is_on(iron)
        # Ensure the iron is turned on

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron
        
        iron_skirt(iron, skirt, ironing_board)
        # Perform the ironing task

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)
        # Place the skirt on the ironing board
        achieve plugged(iron)
        # Ensure the iron is plugged in
        achieve is_on(iron)
        # Ensure the iron is turned on

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind iron: item where:
            is_iron(iron)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        iron_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_dress_2075_around_washing_machine_2041(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_dress,washing_machine_instance)
        else:
            exp(clothes_dress,washing_machine_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,washing_machine_instance]=True
        close[washing_machine_instance,clothes_dress]=True
    

#exp_behavior_end

#goal_representation
 
behavior smooth_skirt_with_iron(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)
        # Ensure the skirt is on the ironing board
        achieve_once is_on(iron)
        # Ensure the iron is turned on
        achieve_once plugged(iron)
        # Ensure the iron is plugged in

def check_if_skirt_on_board(ironing_board:item):
    symbol skirt_on_board = exists s: item : (is_clothes_skirt(s) and on(s, ironing_board))
    return skirt_on_board

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        if check_if_skirt_on_board(ironing_board):
            bind skirt: item where:
                is_clothes_skirt(skirt) and on(skirt, ironing_board)
            # Select skirt that is on the ironing board
            smooth_skirt_with_iron(skirt, iron, ironing_board)
        else:
            foreach skirt: item:
                if is_clothes_skirt(skirt) and not visited(skirt):
                    observe(skirt, "Check if this skirt is on the ironing board")

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body: 
        achieve plugged(iron)
        # Ensure the iron is plugged in
    
        achieve is_on(iron)
        # Ensure the iron is switched on

        achieve on(skirt, ironing_board)
        # Ensure the skirt is on the ironing board

        achieve_once clean(skirt)
        # Iron the skirt until it is smooth and wrinklefree

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Bind the skirt item

        bind iron: item where:
            is_iron(iron)
        # Bind the iron item

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Bind the ironing board item

        iron_skirt(skirt, iron, ironing_board)
        # Iron the skirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, board:item):
    body:
        achieve_once on(skirt, board)
        # Ensure the skirt is placed on the ironing board
        achieve is_on(iron)
        # Ensure the iron is on

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt to be ironed

        bind iron: item where:
            is_iron(iron)
        # Select the iron to be used

        bind board: item where:
            is_ironing_board(board)
        # Select the ironing board

        iron_skirt(skirt, iron, board)
        # Execute the behavior to iron the skirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_cake_2046_around_table_123(food_cake:item):
    goal: not unknown(food_cake)
    body:
        assert is_food_cake(food_cake)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==123
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_cake,table_instance)
        else:
            exp(food_cake,table_instance)
    eff:
        unknown[food_cake]=False
        close[food_cake,table_instance]=True
        close[table_instance,food_cake]=True
    

#exp_behavior_end

#goal_representation
 
behavior smooth_skirt_with_iron(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)
        # Ensure the skirt is on the ironing board
        achieve_once is_on(iron)
        # Ensure the iron is on and ready to be used

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt as the target clothing item
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board for the task

        bind iron: item where:
            is_iron(iron)
        # Select the iron for the task

        smooth_skirt_with_iron(skirt, iron, ironing_board)
        # Iron the skirt to make it smooth and wrinklefree

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['Directly iron a pair of skirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2098_around_bathroom_counter_306(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(cleaning_solution,bathroom_counter_instance)
        else:
            exp(cleaning_solution,bathroom_counter_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_counter_instance]=True
        close[bathroom_counter_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_the_skirt(skirt:item, iron:item, board:item):
    body:
        achieve_once on(skirt, board)
        # Ensure the skirt is on the ironing board
        achieve is_on(iron)
        # Ensure the iron is turned on
        achieve_once clean(skirt)
        # Achieve ironing the skirt to make it smooth and wrinklefree

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind iron: item where:
            is_iron(iron)
        bind board: item where:
            is_ironing_board(board)
        iron_the_skirt(skirt, iron, board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2098_around_bathroom_counter_306(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(cleaning_solution,bathroom_counter_instance)
        else:
            exp(cleaning_solution,bathroom_counter_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_counter_instance]=True
        close[bathroom_counter_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board) 
        achieve plugged(iron)
        achieve is_on(iron)
        achieve clean(skirt)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt) and on(skirt, ironing_board_2099)
        # Select skirt on ironing board
        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select iron that is plugged and turned on
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2099
        # Select ironing board with the specific ID
        iron_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_dress_2075_around_washing_machine_2041(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_dress,washing_machine_instance)
        else:
            exp(clothes_dress,washing_machine_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,washing_machine_instance]=True
        close[washing_machine_instance,clothes_dress]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt) and inside(skirt, ironing_board_2099)
        # Select the skirt on the ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron that is plugged in and turned on

        achieve on(skirt, ironing_board_2099)
        # Ensure the skirt is on the ironing board for ironing

        achieve plugged(iron)
        # Ensure the iron stays plugged in throughout the ironing process

        achieve is_on(iron)
        # Ensure the iron stays on throughout the ironing process

        # Please note: Achieving on state for the skirt ensures it remains on the ironing board,
        # and ensuring the iron is plugged and on guarantees the continuation of the ironing process

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_dress_2075_around_washing_machine_2041(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_dress,washing_machine_instance)
        else:
            exp(clothes_dress,washing_machine_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,washing_machine_instance]=True
        close[washing_machine_instance,clothes_dress]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt: item, iron: item, ironing_board: item):
    body:
        achieve_once on(skirt, ironing_board) # Ensure the skirt is on the ironing board
        achieve_once plugged(iron) # Make sure the iron is plugged in
        achieve_once is_on(iron) # Ensure the iron is on

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt) and on(skirt, ironing_board_2099)
        # Select the skirt on the ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the plugged in and switched on iron
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2099
        # Select the ironing board

        iron_skirt(skirt, iron, ironing_board)
        # Iron the skirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_dress_2075_around_washing_machine_2041(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_dress,washing_machine_instance)
        else:
            exp(clothes_dress,washing_machine_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,washing_machine_instance]=True
        close[washing_machine_instance,clothes_dress]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)
        # Ensure the skirt is on the ironing board
        achieve_once is_on(iron)
        # Ensure the iron is turned on to iron the skirt
        # Iron the skirt to make it smooth and wrinklefree

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt item
        
        bind iron: item where:
            is_iron(iron)
        # Select the iron item
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        
        iron_skirt(skirt, iron, ironing_board)
        # Iron the skirt using the iron on the ironing board

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_console_2027_around_tvstand_186(console:item):
    goal: not unknown(console)
    body:
        assert is_console(console)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==186
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(console,tvstand_instance)
        else:
            exp(console,tvstand_instance)
    eff:
        unknown[console]=False
        close[console,tvstand_instance]=True
        close[tvstand_instance,console]=True
    

behavior find_towel_2083_around_bathtub_297(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathtub_instance:item where:
            is_bathtub(bathtub_instance) and id[bathtub_instance]==297
        achieve close_char(char,bathtub_instance)
        if can_open(bathtub_instance):
            achieve_once open(bathtub_instance)
            exp(towel,bathtub_instance)
        else:
            exp(towel,bathtub_instance)
    eff:
        unknown[towel]=False
        close[towel,bathtub_instance]=True
        close[bathtub_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt item
        
        bind iron: item where:
            is_iron(iron)
        # Select the iron item
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board item

        achieve plugged(iron)
        # Ensure the iron is plugged in
        
        achieve is_on(iron)
        # Ensure the iron is turned on
        
        achieve on(skirt, ironing_board)
        # Ensure the skirt is placed on the ironing board
        
        achieve clean(skirt)
        # Iron the skirt to remove wrinkles

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
Task Summary:
Task Goal:
Directly iron a pair of skirt.
Action History:
['walk_executor(powersocket_48)', 'walk_executor(ironing_board_2099)', 'walk_executor(powersocket_48)', 'walk_executor(iron_2117)', 'plugin_executor(iron_2117)', 'switchon_executor(iron_2117)', 'walk_executor(basket_for_clothes_2040)', 'walk_executor(powersocket_48)', 'walk_executor(clothes_skirt_2116)', 'grab_executor(clothes_skirt_2116)', 'walk_executor(ironing_board_2099)', 'put_executor(clothes_skirt_2116, ironing_board_2099)', 'walk_executor(clothes_skirt_2116)', 'grab_executor(clothes_skirt_2116)', 'wash_executor(clothes_skirt_2116)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(iron_2117)', 'switchoff_executor(iron_2117)', 'plugout_executor(iron_2117)', 'put_executor(clothes_skirt_2116, ironing_board_2099)', 'plugin_executor(iron_2117)', 'switchon_executor(iron_2117)']
Time info:
Time consume: 246 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 21
goal correct times: 0
action_num: 23

Task complete rate:
Keystate: k1 - Requires: 2 steps
Action Completion Rate: 0.0
Scene_id: 2
##############################
