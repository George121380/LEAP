From agent.py
Reset goals: The sub-goals are: 
['Find the book and put it on the coffee table in home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2091_around_bookshelf_136(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==136
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_book(book:item, bookshelf:item):
    body:
        achieve_once close_char(char, bookshelf)
        observe(bookshelf, "Check if the book is in the bookshelf")
        
behavior place_book_on_table(book:item, coffee_table:item):
    body:
        achieve_once on(book, coffee_table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Identify the home office

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Identify the coffee table in the home office

        foreach bookshelf: item:
            if is_bookshelf(bookshelf) and not visited(bookshelf):
                find_book(book, bookshelf)
                if is_book(book):
                    # Once the book is found, place it on the coffee table
                    place_book_on_table(book, coffee_table) 

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_263_around_bench_125(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==125
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(chair,bench_instance)
        else:
            exp(chair,bench_instance)
    eff:
        unknown[chair]=False
        close[chair,bench_instance]=True
        close[bench_instance,chair]=True
    

behavior find_book_2091_around_bookshelf_136(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==136
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_put_book_on_table(book:item, coffee_table:item):
    body:
        achieve_once close_char(char, book) # Approach the book
        achieve_once inhand(book) # Pick up the book
        achieve_once on(book, coffee_table) # Place the book on the coffee table

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) # Find a book
        bind coffee_table: item where:
            is_table(coffee_table) and surfaces(coffee_table) # Find a coffee table with a surface
        find_and_put_book_on_table(book, coffee_table) # Execute the behavior to put the book on the coffee table

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_and_put_book_on_table(book:item, coffee_table:item):
    body:
        achieve_once close_char(char, book) # Approach the book
        achieve_once inhand(book) # Pick up the book
        achieve_once on(book, coffee_table) # Place the book on the coffee table

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) # Find a book
        bind coffee_table: item where:
            is_table(coffee_table) and surfaces(coffee_table) # Find a coffee table with a surface
        find_and_put_book_on_table(book, coffee_table) # Execute the behavior to put the book on the coffee table

##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_136)exp(book_2091, bookshelf_136)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_123)put_executor(book_2091, table_123)
##############################
From agent.py
walk_executor(bookshelf_136)
Robot find: book_2091, Robot is close to the bookshelf_136. 
##############################
From agent.py
exp(book_2091, bookshelf_136)
Find book_2091. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_123)put_executor(book_2091, table_123)
##############################
From agent.py
walk_executor(book_2091)
Robot find: Robot is close to the bookshelf_136. Robot is close to the book_2091. 
##############################
From agent.py
grab_executor(book_2091)
Robot find: Robot is close to the bookshelf_136. Robot is close to the book_2091. Grabbing book_2091 by right hand. 
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, laptop_2015, fork_2103, cup_2087, bowl_2095, drawing_118, Robot is close to the book_2091. Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
put_executor(book_2091, table_123)
Robot find: Robot is close to the book_2091. Robot is close to the mat_114. Robot is close to the table_123. book_2091 is on table_123. book_2091 is close table_123. table_123 is close book_2091. book_2091 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Find the book and put it on the coffee table in home office.
Action History:
['walk_executor(bookshelf_136)', 'walk_executor(book_2091)', 'grab_executor(book_2091)', 'walk_executor(table_123)', 'put_executor(book_2091, table_123)']
Time info:
Time consume: 35 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 2
goal correct times: 0
action_num: 5

Task complete rate:
Keystate: k1 - Requires: 3 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
