From agent.py
Reset goals: The sub-goals are: 
['Make some French fries.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_food_potato_2066_around_kitchen_counter_128(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_potato,kitchen_counter_instance)
        else:
            exp(food_potato,kitchen_counter_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_potato]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_oil_2005_around_kitchen_counter_128(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(oil,kitchen_counter_instance)
        else:
            exp(oil,kitchen_counter_instance)
    eff:
        unknown[oil]=False
        close[oil,kitchen_counter_instance]=True
        close[kitchen_counter_instance,oil]=True
    

behavior find_food_cheese_2049_around_fridge_140(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_cheese,fridge_instance)
        else:
            exp(food_cheese,fridge_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,fridge_instance]=True
        close[fridge_instance,food_cheese]=True
    

#exp_behavior_end

#goal_representation
 
behavior make_fries(potato:item, oil:item, fryingpan:item, stove:item):
    body:
        achieve cut(potato)
        # Cut the potato
        achieve_once inside(oil, fryingpan)
        # Add oil to the frying pan
        achieve_once inside(potato, fryingpan)
        # Place the cut potatoes in the frying pan
        achieve plugged(stove)
        achieve is_on(stove)
        # Turn on the stove to fry the potatoes

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)
        # Select a potato to make fries
        bind oil: item where:
            is_oil(oil)
        # Select cooking oil
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan
        bind stove: item where:
            is_stove(stove)
        # Select a stove to cook
        make_fries(potato, oil, fryingpan, stove)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_potato_2066_around_kitchen_counter_128(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_potato,kitchen_counter_instance)
        else:
            exp(food_potato,kitchen_counter_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_potato]=True
    

behavior find_plate_2105_around_kitchen_counter_128(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(plate,kitchen_counter_instance)
        else:
            exp(plate,kitchen_counter_instance)
    eff:
        unknown[plate]=False
        close[plate,kitchen_counter_instance]=True
        close[kitchen_counter_instance,plate]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior peel_potatoes(potato: item):
    body:
        achieve clean(potato)
        # Peel and clean the potato

behavior cut_potatoes(potato: item, cutting_board: item):
    body:
        achieve_once on(potato, cutting_board)
        achieve cut(potato)
        # Cut the potato on the cutting board

behavior fry_potatoes(potato: item, fryer: item):
    body:
        achieve plugged(fryer)
        achieve is_on(fryer)
        achieve_once inside(potato, fryer)
        # Fry the potatoes until they are cooked

behavior serve_french_fries(fries: item, plate: item):
    body:
        achieve_once on(fries, plate)
        # Serve the French fries on a plate

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)
        # Select a potato
        
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board
        
        bind fryer: item where:
            is_dishwasher(fryer)
        # Select the fryer, assuming dishwasher refers to a device that can fry items

        bind plate: item where:
            is_plate(plate)
        # Select a plate to serve the fries

        peel_potatoes(potato)
        cut_potatoes(potato, cutting_board)
        fry_potatoes(potato, fryer)
        serve_french_fries(potato, plate)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2107_around_kitchen_counter_128(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

behavior find_food_potato_2066_around_kitchen_counter_128(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_potato,kitchen_counter_instance)
        else:
            exp(food_potato,kitchen_counter_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_potato]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_oil_2102_around_kitchen_counter_128(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(oil,kitchen_counter_instance)
        else:
            exp(oil,kitchen_counter_instance)
    eff:
        unknown[oil]=False
        close[oil,kitchen_counter_instance]=True
        close[kitchen_counter_instance,oil]=True
    

#exp_behavior_end

#goal_representation

behavior prepare_potatoes(potatoes:item):
    body:
        achieve cut(potatoes)
        # Cut the potatoes into the desired shape for French fries

behavior heat_oil(pan:item, oil:item):
    body:
        achieve_once inside(oil, pan) 
        # Add oil to the pan for frying
        achieve is_on(pan)
        # Turn on the stove to heat the oil

behavior fry_potatoes(potatoes:item, pan:item):
    body:
        achieve_once inside(potatoes, pan)
        # Place the cut potatoes in the hot oil to fry until golden brown

behavior __goal__():
    body:
        bind potatoes: item where:
            is_food_potato(potatoes)
        # Select potatoes
        prepare_potatoes(potatoes)

        bind pan: item where:
            is_fryingpan(pan)
        bind oil: item where:
            is_oil(oil)
        # Select a pan and oil
        heat_oil(pan, oil)

        fry_potatoes(potatoes, pan)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2107_around_kitchen_counter_128(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

behavior find_food_potato_2066_around_kitchen_counter_129(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_potato,kitchen_counter_instance)
        else:
            exp(food_potato,kitchen_counter_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_potato]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_oil_2005_around_kitchen_counter_128(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(oil,kitchen_counter_instance)
        else:
            exp(oil,kitchen_counter_instance)
    eff:
        unknown[oil]=False
        close[oil,kitchen_counter_instance]=True
        close[kitchen_counter_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior cut_potato(potato:item, cutting_board:item, knife:item):
    body:
        achieve_once on(potato, cutting_board)
        # Place the potato on the cutting board
        achieve_once cut(potato)

behavior prepare_frying_oil(pan:item, oil:item):
    body:
        achieve_once inside(oil, pan)
        # Put oil in the frying pan
        achieve_once is_on(pan)
        # Turn on the pan to heat the oil

behavior fry_potatoes(potatoes:item, pan:item):
    body:
        achieve_once inside(potatoes, pan)
        # Place the cut potatoes in the hot pan
        achieve_once is_on(pan)
        # Keep the pan on to fry the potatoes

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        bind knife: item where:
            is_knife(knife)
        # Select a potato, cutting board, and knife
        cut_potato(potato, cutting_board, knife)
        # Cut the potato

        bind pan: item where:
            is_fryingpan(pan)
        bind oil: item where:
            is_oil(oil)
        # Select a frying pan and oil
        prepare_frying_oil(pan, oil)
        # Prepare frying oil in the pan

        fry_potatoes(potato, pan)
        # Fry the potatoes in the pan

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_food_potato_2066_around_kitchen_counter_128(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_potato,kitchen_counter_instance)
        else:
            exp(food_potato,kitchen_counter_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_potato]=True
    

behavior find_food_cheese_2049_around_fridge_140(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_cheese,fridge_instance)
        else:
            exp(food_cheese,fridge_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,fridge_instance]=True
        close[fridge_instance,food_cheese]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior peel_potato(potato:item):
    body:
        achieve_once clean(potato) # Indicating the potato is peeled

behavior cut_potato(potato:item):
    body:
        achieve_once cut(potato) # Indicating the potato is cut

behavior fry_potatoes(fryingpan:item, stove:item):
    body:
        achieve plugged(stove) # Ensuring the stove is plugged in
        achieve is_on(stove) # Ensuring the stove is turned on
        achieve inside(potato_pieces, fryingpan) # Ensuring potato pieces are inside the frying pan

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)
        # Find a potato

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        peel_potato(potato)
        cut_potato(potato)
        fry_potatoes(fryingpan, stove)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_food_potato_2066_around_kitchen_counter_128(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_potato,kitchen_counter_instance)
        else:
            exp(food_potato,kitchen_counter_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_potato]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_food_cheese_2049_around_fridge_140(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_cheese,fridge_instance)
        else:
            exp(food_cheese,fridge_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,fridge_instance]=True
        close[fridge_instance,food_cheese]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_potatoes(potato:item, cutting_board:item, knife:item):
    body:
        achieve_once on(potato, cutting_board) # Place the potato on the cutting board
        achieve_once cut(potato) # Cut the potato

behavior fry_potatoes(cutting_board:item, fryingpan:item, stove:item):
    body:
        foreach o: item:
            if is_food_potato(o) and cut(o) and on(o, cutting_board):
                achieve_once inside(o, fryingpan) # Place the cut potato in the frying pan
        achieve_once is_on(stove) # Turn on the stove to fry the potatoes

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        bind knife: item where:
            is_knife(knife)
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        bind stove: item where: 
            is_stove(stove)
        prepare_potatoes(potato, cutting_board, knife)
        fry_potatoes(cutting_board, fryingpan, stove)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior prepare_potatoes(potato:item, cutting_board:item, knife:item):
    body:
        achieve_once on(potato, cutting_board) # Place the potato on the cutting board
        achieve_once cut(potato) # Cut the potato

behavior fry_potatoes(cutting_board:item, fryingpan:item, stove:item):
    body:
        foreach o: item:
            if is_food_potato(o) and cut(o) and on(o, cutting_board):
                achieve_once inside(o, fryingpan) # Place the cut potato in the frying pan
        achieve_once is_on(stove) # Turn on the stove to fry the potatoes

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        bind knife: item where:
            is_knife(knife)
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        bind stove: item where: 
            is_stove(stove)
        prepare_potatoes(potato, cutting_board, knife)
        fry_potatoes(cutting_board, fryingpan, stove)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(food_potato_2066, kitchen_counter_128)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)walk_executor(stove_2090)open_executor(stove_2090)exp(fryingpan_2107, stove_2090)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(food_potato_2066, kitchen_counter_128)
Fail to find food_potato_2066 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_129)exp(food_potato_2066, kitchen_counter_129)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)walk_executor(stove_2090)open_executor(stove_2090)exp(fryingpan_2107, stove_2090)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(kitchen_counter_129)
Robot find: fryingpan_2107, oil_2102, pot_54, pot_2093, Robot is close to the kitchen_counter_129. 
##############################
From agent.py
exp(food_potato_2066, kitchen_counter_129)
Fail to find food_potato_2066 around kitchen_counter_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(food_potato_2066, kitchen_counter_132)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the kitchen_counter_132. 
##############################
From agent.py
exp(food_potato_2066, kitchen_counter_132)
Fail to find food_potato_2066 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(food_potato_2066, cupboard_130)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(food_potato_2066, cupboard_130)
Fail to find food_potato_2066 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(food_potato_2066, cupboard_131)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(food_potato_2066, cupboard_131)
Fail to find food_potato_2066 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_potato_2066, fridge_140)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_potato_2066, fridge_140)
Find food_potato_2066. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_potato_2066)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_potato_2066, cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. cutting_board_2080 is close food_potato_2066. food_potato_2066 is close cutting_board_2080. food_potato_2066 is on cutting_board_2080. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_52)
Robot find: Robot is close to the knifeblock_52. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find knife_2036 ?
Answer: The target item, knife_2036, is located inside the dining room, specifically within dishwasher_143. Once you access the dining room, locate dishwasher_143 and you will find knife_2036 inside it.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item, knife_2036, is located inside the dining room, specifically within dishwasher_143. Once you access the dining room, locate dishwasher_143 and you will find knife_2036 inside it.

The actions you have taken:
Action 1: Walk to kitchen_counter_128.
Action 2: look for food_potato_2066 around kitchen_counter_128.
Action 3: Walk to kitchen_counter_129.
Action 4: look for food_potato_2066 around kitchen_counter_129.
Action 5: Walk to kitchen_counter_132.
Action 6: look for food_potato_2066 around kitchen_counter_132.
Action 7: Walk to cupboard_130.
Action 8: look for food_potato_2066 around cupboard_130.
Action 9: Walk to cupboard_131.
Action 10: Open cupboard_131.
Action 11: look for food_potato_2066 around cupboard_131.
Action 12: Walk to fridge_140.
Action 13: Switch off fridge_140.
Action 14: Open fridge_140.
Action 15: look for food_potato_2066 around fridge_140.
Action 16: Grab food_potato_2066.
Action 17: Walk to cutting_board_2080.
Action 18: Put food_potato_2066 on cutting_board_2080.
Action 19: Walk to knifeblock_52.

##############################
From agent.py
exp(knife_2036, knifeblock_52)
Fail to find knife_2036 around knifeblock_52. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(knife_2036, dishwasher_143)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(knife_2036, dishwasher_143)
Find knife_2036. 
##############################
From agent.py-> find a plan in act()
grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)walk_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
grab_executor(knife_2036)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. Grabbing knife_2036 by right hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. 
##############################
From agent.py
cut_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. Grabbing food_potato_2066 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_potato_2066, fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. food_potato_2066 is inside fryingpan_2107. food_potato_2066 is close fryingpan_2107. fryingpan_2107 is close food_potato_2066. food_potato_2066 released by left hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make some French fries.
Action History:
['walk_executor(kitchen_counter_128)', 'walk_executor(kitchen_counter_129)', 'walk_executor(kitchen_counter_132)', 'walk_executor(cupboard_130)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'grab_executor(food_potato_2066)', 'walk_executor(cutting_board_2080)', 'put_executor(food_potato_2066, cutting_board_2080)', 'walk_executor(knifeblock_52)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'grab_executor(knife_2036)', 'walk_executor(food_potato_2066)', 'cut_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_potato_2066, fryingpan_2107)', 'walk_executor(stove_2090)', 'switchon_executor(stove_2090)']
Time info:
Time consume: 231 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 6
goal correct times: 0
action_num: 23

Task complete rate:
Keystate: k1 - Requires: 8 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
