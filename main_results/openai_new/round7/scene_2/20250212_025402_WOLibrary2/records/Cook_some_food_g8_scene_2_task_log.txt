From agent.py
Reset goals: The sub-goals are: 
['1. Boil the eggs.', '2. Wash the vegetables.', '3. Mix the boiled eggs, lemon, and washed vegetables in a bowl.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_egg_2053_around_cupboard_131(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_egg,cupboard_instance)
        else:
            exp(food_egg,cupboard_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,cupboard_instance]=True
        close[cupboard_instance,food_egg]=True
    

behavior find_pot_54_around_stove_2090(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(pot,stove_instance)
        else:
            exp(pot,stove_instance)
    eff:
        unknown[pot]=False
        close[pot,stove_instance]=True
        close[stove_instance,pot]=True
    

#exp_behavior_end

#goal_representation
 
behavior bring_water_to_boil(pot:item):
    body:
        achieve_once has_water(pot)
        # Fill the pot with water
        achieve is_on(stove)
        # Turn on the stove to bring water to boil

behavior add_eggs_to_pot(eggs:item, pot:item):
    body:
        achieve_once inside(eggs, pot)
        # Place the eggs inside the pot of boiling water

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot
        
        bind stove: item where:
            is_stove(stove)
        # Select a stove
        
        bring_water_to_boil(pot)
        
        bind eggs: item where:
            is_food_egg(eggs)
        # Select eggs
        
        add_eggs_to_pot(eggs, pot)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: stove; available variables: [Variable<pot: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_egg_2053_around_cupboard_131(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_egg,cupboard_instance)
        else:
            exp(food_egg,cupboard_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,cupboard_instance]=True
        close[cupboard_instance,food_egg]=True
    

behavior find_pot_2093_around_cupboard_131(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(pot,cupboard_instance)
        else:
            exp(pot,cupboard_instance)
    eff:
        unknown[pot]=False
        close[pot,cupboard_instance]=True
        close[cupboard_instance,pot]=True
    

#goal_representation

behavior bring_water_to_boil(pot:item, stove:item):
    body:
        achieve_once has_water(pot)
        # Fill the pot with water
        achieve is_on(stove)
        # Turn on the stove to bring water to boil
        
behavior add_eggs_to_pot(eggs:item, pot:item):
    body:
        achieve_once inside(eggs, pot)
        # Place the eggs inside the pot of boiling water

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot
        
        bind stove: item where:
            is_stove(stove)
        # Select a stove
        
        bring_water_to_boil(pot, stove)
        
        bind eggs: item where:
            is_food_egg(eggs)
        # Select eggs
        
        add_eggs_to_pot(eggs, pot)

#goal_representation_end

##############################
From agent.py->reset_goal

behavior bring_water_to_boil(pot:item, stove:item):
    body:
        achieve_once has_water(pot)
        # Fill the pot with water
        achieve is_on(stove)
        # Turn on the stove to bring water to boil
        
behavior add_eggs_to_pot(eggs:item, pot:item):
    body:
        achieve_once inside(eggs, pot)
        # Place the eggs inside the pot of boiling water

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot
        
        bind stove: item where:
            is_stove(stove)
        # Select a stove
        
        bring_water_to_boil(pot, stove)
        
        bind eggs: item where:
            is_food_egg(eggs)
        # Select eggs
        
        add_eggs_to_pot(eggs, pot)

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(pot_2093, cupboard_131)walk_executor(pot_2093)open_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(cupboard_131)exp(food_egg_2053, cupboard_131)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_2093)putin_executor(food_egg_2053, pot_2093)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: pot_54, Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(pot_2093, cupboard_131)
Fail to find pot_2093 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_54)open_executor(pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(cupboard_130)exp(food_egg_2053, cupboard_130)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_54)putin_executor(food_egg_2053, pot_54)
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
open_executor(pot_54)
Robot find: Robot is close to the oven_141. Robot is close to the pot_54. pot_54 is opened. 
##############################
From agent.py
grab_executor(pot_54)
Robot find: Robot is close to the oven_141. Robot is close to the pot_54. Grabbing pot_54 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the pot_54. Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(food_egg_2053, cupboard_130)
Fail to find food_egg_2053 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_54)putin_executor(food_egg_2053, pot_54)
##############################
From agent.py
walk_executor(faucet_308)
Robot find: drawing_296, towel_rack_298, Robot is close to the pot_54. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. 
##############################
From agent.py
switchoff_executor(faucet_308)
Robot find: Robot is close to the pot_54. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. faucet_308 is turned off. 
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the pot_54. Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the pot_54. Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the pot_54. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_egg_2053, fridge_140)
Find food_egg_2053. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)switchon_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_54)putin_executor(food_egg_2053, pot_54)
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the pot_54. Robot is close to the fridge_140. Robot is close to the food_egg_2053. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the pot_54. Robot is close to the fridge_140. Robot is close to the food_egg_2053. Grabbing food_egg_2053 by left hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the pot_54. Robot is close to the food_egg_2053. 
##############################
From agent.py
putin_executor(food_egg_2053, pot_54)
Robot find: Robot is close to the pot_54. Robot is close to the food_egg_2053. food_egg_2053 is close pot_54. pot_54 is close food_egg_2053. food_egg_2053 is inside pot_54. food_egg_2053 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: Ensure the pot is filled with water, and the stove is on before adding the eggs to boil.
##############################
From agent.py
Human Instruction: Ensure the pot is filled with water, and the stove is on before adding the eggs to boil.

The actions you have taken:
Action 1: Walk to cupboard_131.
Action 2: Open cupboard_131.
Action 3: look for pot_2093 around cupboard_131.
Action 4: Walk to pot_54.
Action 5: Open pot_54.
Action 6: Grab pot_54.
Action 7: Walk to faucet_134.
Action 8: Switch off faucet_134.
Action 9: Walk to stove_2090.
Action 10: Switch on stove_2090.
Action 11: Walk to cupboard_130.
Action 12: look for food_egg_2053 around cupboard_130.
Action 13: Walk to faucet_308.
Action 14: Switch off faucet_308.
Action 15: Walk to fridge_140.
Action 16: Switch off fridge_140.
Action 17: Open fridge_140.
Action 18: look for food_egg_2053 around fridge_140.
Action 19: Walk to faucet_134.
Action 20: Switch on faucet_134.
Action 21: Switch off faucet_134.
Action 22: Walk to food_egg_2053.
Action 23: Grab food_egg_2053.
Action 24: Walk to pot_54.
Action 25: Put food_egg_2053 into pot_54.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot) # Fill the pot with water

behavior put_eggs_in_pot(eggs:item, pot:item):
    body:
        achieve_once inside(eggs, pot) # Put the eggs into the pot

behavior boil_the_eggs(pot:item, stove:item):
    body:
        achieve_once is_on(stove) # Turn on the stove to start boiling the eggs

behavior __goal__():
    body:
        bind eggs: item where:
            is_food_egg(eggs)
        # Select eggs that need to be boiled
        bind pot: item where:
            is_pot(pot)
        # Select a pot
        bind stove: item where:
            is_stove(stove)
        # Select a stove
        fill_pot_with_water(pot) # Fill the pot with water
        put_eggs_in_pot(eggs, pot) # Put the eggs into the pot
        boil_the_eggs(pot, stove) # Boil the eggs

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_coin_2004_around_pot_2093(coin:item):
    goal: not unknown(coin)
    body:
        assert is_coin(coin)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==2093
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(coin,pot_instance)
        else:
            exp(coin,pot_instance)
    eff:
        unknown[coin]=False
        close[coin,pot_instance]=True
        close[pot_instance,coin]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve has_water(pot)
        # Fill the pot with water

behavior boil_eggs_ceil(egg:item, pot:item, stove:item):
    body:
        achieve inside(egg, pot)
        achieve is_on(stove)
        # Ensure the eggs are inside the pot and the stove is on to boil them

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Bind pot for boiling the eggs

        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 134
        # Bind faucet for water supply

        bind stove: item where:
            is_stove(stove) and id[stove] == 2090
        # Bind stove to turn it on for boiling

        bind egg: item where:
            is_food_egg(egg) and id[egg] == 2053
        # Bind the egg to be boiled

        fill_pot_with_water(pot, faucet)
        boil_eggs_ceil(egg, pot, stove)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_novel_2010_around_bookshelf_372(novel:item):
    goal: not unknown(novel)
    body:
        assert is_novel(novel)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==372
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(novel,bookshelf_instance)
        else:
            exp(novel,bookshelf_instance)
    eff:
        unknown[novel]=False
        close[novel,bookshelf_instance]=True
        close[bookshelf_instance,novel]=True
    

behavior find_coin_2004_around_pot_2093(coin:item):
    goal: not unknown(coin)
    body:
        assert is_coin(coin)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==2093
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(coin,pot_instance)
        else:
            exp(coin,pot_instance)
    eff:
        unknown[coin]=False
        close[coin,pot_instance]=True
        close[pot_instance,coin]=True
    

behavior find_laptop_2015_around_desk_261(laptop:item):
    goal: not unknown(laptop)
    body:
        assert is_laptop(laptop)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==261
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(laptop,desk_instance)
        else:
            exp(laptop,desk_instance)
    eff:
        unknown[laptop]=False
        close[laptop,desk_instance]=True
        close[desk_instance,laptop]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve has_water(pot) # Fill the pot with water

behavior boil_eggs_on_stove(pot:item, stove:item):
    body:
        achieve is_on(stove) # Ensure the stove is on
        achieve inside(food_egg_2053, pot) # Ensure eggs are inside the pot
        
behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot]==54
        # Select the pot with ID 54
        bind stove: item where:
            is_stove(stove) and id[stove]==2090
        # Select the stove with ID 2090
        bind faucet: item where:
            is_faucet(faucet) and id[faucet]==134
        # Select the faucet with ID 134
        fill_pot_with_water(pot, faucet)
        boil_eggs_on_stove(pot, stove)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: food_egg_2053; available variables: [Variable<pot: item>, Variable<stove: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_novel_2010_around_bookshelf_372(novel:item):
    goal: not unknown(novel)
    body:
        assert is_novel(novel)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==372
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(novel,bookshelf_instance)
        else:
            exp(novel,bookshelf_instance)
    eff:
        unknown[novel]=False
        close[novel,bookshelf_instance]=True
        close[bookshelf_instance,novel]=True
    

behavior find_coin_2004_around_pot_2093(coin:item):
    goal: not unknown(coin)
    body:
        assert is_coin(coin)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==2093
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(coin,pot_instance)
        else:
            exp(coin,pot_instance)
    eff:
        unknown[coin]=False
        close[coin,pot_instance]=True
        close[pot_instance,coin]=True
    

behavior find_laptop_2015_around_desk_261(laptop:item):
    goal: not unknown(laptop)
    body:
        assert is_laptop(laptop)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==261
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(laptop,desk_instance)
        else:
            exp(laptop,desk_instance)
    eff:
        unknown[laptop]=False
        close[laptop,desk_instance]=True
        close[desk_instance,laptop]=True
    

#goal_representation

behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve has_water(pot) # Fill the pot with water

behavior boil_eggs_on_stove(pot:item, stove:item, egg:item):
    body:
        achieve is_on(stove) # Ensure the stove is on
        achieve inside(egg, pot) # Ensure eggs are inside the pot

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot]==54
        # Select the pot with ID 54
        bind stove: item where:
            is_stove(stove) and id[stove]==2090
        # Select the stove with ID 2090
        bind faucet: item where:
            is_faucet(faucet) and id[faucet]==134
        # Select the faucet with ID 134
        bind egg: item where:
            is_food_egg(egg) and id[egg]==2053
        # Select the egg with ID 2053
        fill_pot_with_water(pot, faucet)
        boil_eggs_on_stove(pot, stove, egg)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "1. boil the eggs." ?
Answer: Find a pot and fill it with water. Then put the pot on a stove and turn on the stove. Put the egg in the pot. After boiling, put the egg on a cutting board and cut it into pieces.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior boil_egg(egg:item, pot:item, stove:item):
    body:
        achieve_once inside(egg, pot)
        # Place the egg inside the pot
        achieve has_water(pot)
        # Ensure the pot has water
        achieve is_on(stove)
        # Ensure the stove is on
        achieve_once on(pot, stove)
        # Place the pot on the stove to start boiling the egg
        # After boiling, the egg will need to be moved to a cutting board to be cut

behavior cut_egg(egg:item, cutting_board:item):
    body:
        achieve_once on(egg, cutting_board)
        # Place the boiled egg on the cutting board
        achieve cut(egg)
        # Cut the egg into pieces

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select the egg to be boiled
        
        bind pot: item where:
            is_pot(pot)
        # Select a pot for boiling
        
        bind stove: item where:
            is_stove(stove)
        # Select a stove for boiling the egg

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board for cutting the egg

        boil_egg(egg, pot, stove)
        cut_egg(egg, cutting_board)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior boil_egg(egg:item, pot:item, stove:item):
    body:
        achieve_once inside(egg, pot)
        # Place the egg inside the pot
        achieve has_water(pot)
        # Ensure the pot has water
        achieve is_on(stove)
        # Ensure the stove is on
        achieve_once on(pot, stove)
        # Place the pot on the stove to start boiling the egg
        # After boiling, the egg will need to be moved to a cutting board to be cut

behavior cut_egg(egg:item, cutting_board:item):
    body:
        achieve_once on(egg, cutting_board)
        # Place the boiled egg on the cutting board
        achieve cut(egg)
        # Cut the egg into pieces

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select the egg to be boiled
        
        bind pot: item where:
            is_pot(pot)
        # Select a pot for boiling
        
        bind stove: item where:
            is_stove(stove)
        # Select a stove for boiling the egg

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board for cutting the egg

        boil_egg(egg, pot, stove)
        cut_egg(egg, cutting_board)

##############################
From agent.py-> find a plan in act()
walk_executor(stove_2090)put_executor(pot_54, stove_2090)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(pot_54, stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. pot_54 is on stove_2090. pot_54 is close stove_2090. stove_2090 is close pot_54. pot_54 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the pot_54. Robot is close to the food_egg_2053. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the pot_54. Robot is close to the food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_egg_2053, cutting_board_2080)
Robot find: Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. cutting_board_2080 is close food_egg_2053. food_egg_2053 is close cutting_board_2080. food_egg_2053 is on cutting_board_2080. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_52)
Robot find: Robot is close to the knifeblock_52. 
##############################
From agent.py
exp(knife_2036, knifeblock_52)
Fail to find knife_2036 around knifeblock_52. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_54)putin_executor(food_egg_2053, pot_54)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(light_384)exp(knife_2036, light_384)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the food_egg_2053. Robot is close to the stove_2090. Robot is close to the pot_54. 
##############################
From agent.py
putin_executor(food_egg_2053, pot_54)
Robot find: Robot is close to the food_egg_2053. Robot is close to the stove_2090. Robot is close to the pot_54. food_egg_2053 is close pot_54. pot_54 is close food_egg_2053. food_egg_2053 is inside pot_54. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the food_egg_2053. Robot is close to the pot_54. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the food_egg_2053. Robot is close to the pot_54. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_egg_2053, cutting_board_2080)
Robot find: Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_egg_2053 is close cutting_board_2080. food_egg_2053 is on cutting_board_2080. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(light_384)
Robot find: drawing_387, Robot is close to the light_384. 
##############################
From agent.py
exp(knife_2036, light_384)
Fail to find knife_2036 around light_384. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_54)putin_executor(food_egg_2053, pot_54)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(dry_pasta_2073)exp(knife_2036, dry_pasta_2073)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the food_egg_2053. Robot is close to the stove_2090. Robot is close to the pot_54. 
##############################
From agent.py
putin_executor(food_egg_2053, pot_54)
Robot find: Robot is close to the food_egg_2053. Robot is close to the stove_2090. Robot is close to the pot_54. food_egg_2053 is close pot_54. food_egg_2053 is inside pot_54. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the food_egg_2053. Robot is close to the pot_54. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the food_egg_2053. Robot is close to the pot_54. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_egg_2053, cutting_board_2080)
Robot find: Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_egg_2053 is close cutting_board_2080. food_egg_2053 is on cutting_board_2080. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(dry_pasta_2073)
Robot find: Robot is close to the dry_pasta_2073. Robot is close to the fridge_140. 
##############################
From agent.py
exp(knife_2036, dry_pasta_2073)
Fail to find knife_2036 around dry_pasta_2073. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_54)putin_executor(food_egg_2053, pot_54)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(bathroom_cabinet_305)open_executor(bathroom_cabinet_305)exp(knife_2036, bathroom_cabinet_305)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the food_egg_2053. Robot is close to the stove_2090. Robot is close to the pot_54. 
##############################
From agent.py
putin_executor(food_egg_2053, pot_54)
Robot find: Robot is close to the food_egg_2053. Robot is close to the stove_2090. Robot is close to the pot_54. food_egg_2053 is close pot_54. food_egg_2053 is inside pot_54. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the food_egg_2053. Robot is close to the pot_54. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the food_egg_2053. Robot is close to the pot_54. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_egg_2053, cutting_board_2080)
Robot find: Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_egg_2053 is close cutting_board_2080. food_egg_2053 is on cutting_board_2080. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(bathroom_cabinet_305)
Robot find: Robot is close to the bathroom_cabinet_305. 
##############################
From agent.py
open_executor(bathroom_cabinet_305)
Robot find: soap_2038, Robot is close to the bathroom_cabinet_305. Robot is close to the soap_2038. bathroom_cabinet_305 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find knife_2036 ?
Answer: Locate the target item, knife_2036, inside dining_room_1. It is placed inside dishwasher_143, which is the appliance nearest to knife_2036 within the same room.
Re-decompose: None

##############################
From agent.py
Human Instruction: Ensure the pot is filled with water, and the stove is on before adding the eggs to boil.
Locate the target item, knife_2036, inside dining_room_1. It is placed inside dishwasher_143, which is the appliance nearest to knife_2036 within the same room.

Human Guidance: Find a pot and fill it with water. Then put the pot on a stove and turn on the stove. Put the egg in the pot. After boiling, put the egg on a cutting board and cut it into pieces.
The actions you have taken:
Action 1: Walk to cupboard_131.
Action 2: Open cupboard_131.
Action 3: look for pot_2093 around cupboard_131.
Action 4: Walk to pot_54.
Action 5: Open pot_54.
Action 6: Grab pot_54.
Action 7: Walk to faucet_134.
Action 8: Switch off faucet_134.
Action 9: Walk to stove_2090.
Action 10: Switch on stove_2090.
Action 11: Walk to cupboard_130.
Action 12: look for food_egg_2053 around cupboard_130.
Action 13: Walk to faucet_308.
Action 14: Switch off faucet_308.
Action 15: Walk to fridge_140.
Action 16: Switch off fridge_140.
Action 17: Open fridge_140.
Action 18: look for food_egg_2053 around fridge_140.
Action 19: Walk to faucet_134.
Action 20: Switch on faucet_134.
Action 21: Switch off faucet_134.
Action 22: Walk to food_egg_2053.
Action 23: Grab food_egg_2053.
Action 24: Walk to pot_54.
Action 25: Put food_egg_2053 into pot_54.
Action 26: Walk to stove_2090.
Action 27: Put pot_54 on stove_2090.
Action 28: Walk to food_egg_2053.
Action 29: Grab food_egg_2053.
Action 30: Walk to cutting_board_2080.
Action 31: Put food_egg_2053 on cutting_board_2080.
Action 32: Walk to knifeblock_52.
Action 33: look for knife_2036 around knifeblock_52.
Action 34: Walk to food_egg_2053.
Action 35: Grab food_egg_2053.
Action 36: Walk to pot_54.
Action 37: Put food_egg_2053 into pot_54.
Action 38: Walk to food_egg_2053.
Action 39: Grab food_egg_2053.
Action 40: Walk to cutting_board_2080.
Action 41: Put food_egg_2053 on cutting_board_2080.
Action 42: Walk to light_384.
Action 43: look for knife_2036 around light_384.
Action 44: Walk to food_egg_2053.
Action 45: Grab food_egg_2053.
Action 46: Walk to pot_54.
Action 47: Put food_egg_2053 into pot_54.
Action 48: Walk to food_egg_2053.
Action 49: Grab food_egg_2053.
Action 50: Walk to cutting_board_2080.
Action 51: Put food_egg_2053 on cutting_board_2080.
Action 52: Walk to dry_pasta_2073.
Action 53: look for knife_2036 around dry_pasta_2073.
Action 54: Walk to food_egg_2053.
Action 55: Grab food_egg_2053.
Action 56: Walk to pot_54.
Action 57: Put food_egg_2053 into pot_54.
Action 58: Walk to food_egg_2053.
Action 59: Grab food_egg_2053.
Action 60: Walk to cutting_board_2080.
Action 61: Put food_egg_2053 on cutting_board_2080.
Action 62: Walk to bathroom_cabinet_305.
Action 63: Open bathroom_cabinet_305.

##############################
From agent.py
exp(knife_2036, bathroom_cabinet_305)
Fail to find knife_2036 around bathroom_cabinet_305. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_54)putin_executor(food_egg_2053, pot_54)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(knife_2036, dishwasher_143)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the food_egg_2053. Robot is close to the stove_2090. Robot is close to the pot_54. 
##############################
From agent.py
putin_executor(food_egg_2053, pot_54)
Robot find: Robot is close to the food_egg_2053. Robot is close to the stove_2090. Robot is close to the pot_54. food_egg_2053 is close pot_54. food_egg_2053 is inside pot_54. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the food_egg_2053. Robot is close to the pot_54. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the food_egg_2053. Robot is close to the pot_54. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_egg_2053, cutting_board_2080)
Robot find: Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_egg_2053 is close cutting_board_2080. food_egg_2053 is on cutting_board_2080. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(knife_2036, dishwasher_143)
Find knife_2036. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_54)putin_executor(food_egg_2053, pot_54)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the food_egg_2053. Robot is close to the stove_2090. Robot is close to the pot_54. 
##############################
From agent.py
putin_executor(food_egg_2053, pot_54)
Robot find: Robot is close to the food_egg_2053. Robot is close to the stove_2090. Robot is close to the pot_54. food_egg_2053 is close pot_54. food_egg_2053 is inside pot_54. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the food_egg_2053. Robot is close to the pot_54. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the food_egg_2053. Robot is close to the pot_54. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_egg_2053, cutting_board_2080)
Robot find: Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_egg_2053 is close cutting_board_2080. food_egg_2053 is on cutting_board_2080. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(knife_2036)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. 
##############################
From agent.py
grab_executor(knife_2036)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. Grabbing knife_2036 by right hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. 
##############################
From agent.py
cut_executor(food_egg_2053)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: Ensure that the pot is filled with water before the eggs are placed into it and boiled on the stove.
##############################
From agent.py
Human Instruction: Ensure that the pot is filled with water before the eggs are placed into it and boiled on the stove.

Human Guidance: Find a pot and fill it with water. Then put the pot on a stove and turn on the stove. Put the egg in the pot. After boiling, put the egg on a cutting board and cut it into pieces.
The actions you have taken:
Action 1: Walk to cupboard_131.
Action 2: Open cupboard_131.
Action 3: look for pot_2093 around cupboard_131.
Action 4: Walk to pot_54.
Action 5: Open pot_54.
Action 6: Grab pot_54.
Action 7: Walk to faucet_134.
Action 8: Switch off faucet_134.
Action 9: Walk to stove_2090.
Action 10: Switch on stove_2090.
Action 11: Walk to cupboard_130.
Action 12: look for food_egg_2053 around cupboard_130.
Action 13: Walk to faucet_308.
Action 14: Switch off faucet_308.
Action 15: Walk to fridge_140.
Action 16: Switch off fridge_140.
Action 17: Open fridge_140.
Action 18: look for food_egg_2053 around fridge_140.
Action 19: Walk to faucet_134.
Action 20: Switch on faucet_134.
Action 21: Switch off faucet_134.
Action 22: Walk to food_egg_2053.
Action 23: Grab food_egg_2053.
Action 24: Walk to pot_54.
Action 25: Put food_egg_2053 into pot_54.
Action 26: Walk to stove_2090.
Action 27: Put pot_54 on stove_2090.
Action 28: Walk to food_egg_2053.
Action 29: Grab food_egg_2053.
Action 30: Walk to cutting_board_2080.
Action 31: Put food_egg_2053 on cutting_board_2080.
Action 32: Walk to knifeblock_52.
Action 33: look for knife_2036 around knifeblock_52.
Action 34: Walk to food_egg_2053.
Action 35: Grab food_egg_2053.
Action 36: Walk to pot_54.
Action 37: Put food_egg_2053 into pot_54.
Action 38: Walk to food_egg_2053.
Action 39: Grab food_egg_2053.
Action 40: Walk to cutting_board_2080.
Action 41: Put food_egg_2053 on cutting_board_2080.
Action 42: Walk to light_384.
Action 43: look for knife_2036 around light_384.
Action 44: Walk to food_egg_2053.
Action 45: Grab food_egg_2053.
Action 46: Walk to pot_54.
Action 47: Put food_egg_2053 into pot_54.
Action 48: Walk to food_egg_2053.
Action 49: Grab food_egg_2053.
Action 50: Walk to cutting_board_2080.
Action 51: Put food_egg_2053 on cutting_board_2080.
Action 52: Walk to dry_pasta_2073.
Action 53: look for knife_2036 around dry_pasta_2073.
Action 54: Walk to food_egg_2053.
Action 55: Grab food_egg_2053.
Action 56: Walk to pot_54.
Action 57: Put food_egg_2053 into pot_54.
Action 58: Walk to food_egg_2053.
Action 59: Grab food_egg_2053.
Action 60: Walk to cutting_board_2080.
Action 61: Put food_egg_2053 on cutting_board_2080.
Action 62: Walk to bathroom_cabinet_305.
Action 63: Open bathroom_cabinet_305.
Action 64: look for knife_2036 around bathroom_cabinet_305.
Action 65: Walk to food_egg_2053.
Action 66: Grab food_egg_2053.
Action 67: Walk to pot_54.
Action 68: Put food_egg_2053 into pot_54.
Action 69: Walk to food_egg_2053.
Action 70: Grab food_egg_2053.
Action 71: Walk to cutting_board_2080.
Action 72: Put food_egg_2053 on cutting_board_2080.
Action 73: Walk to dishwasher_143.
Action 74: Open dishwasher_143.
Action 75: look for knife_2036 around dishwasher_143.
Action 76: Walk to food_egg_2053.
Action 77: Grab food_egg_2053.
Action 78: Walk to pot_54.
Action 79: Put food_egg_2053 into pot_54.
Action 80: Walk to food_egg_2053.
Action 81: Grab food_egg_2053.
Action 82: Walk to cutting_board_2080.
Action 83: Put food_egg_2053 on cutting_board_2080.
Action 84: Walk to knife_2036.
Action 85: Grab knife_2036.
Action 86: Walk to food_egg_2053.
Action 87: Cut food_egg_2053.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2026_around_wallshelf_301(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==301
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(food_onion,wallshelf_instance)
        else:
            exp(food_onion,wallshelf_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,wallshelf_instance]=True
        close[wallshelf_instance,food_onion]=True
    

behavior find_coin_2004_around_pot_2093(coin:item):
    goal: not unknown(coin)
    body:
        assert is_coin(coin)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==2093
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(coin,pot_instance)
        else:
            exp(coin,pot_instance)
    eff:
        unknown[coin]=False
        close[coin,pot_instance]=True
        close[pot_instance,coin]=True
    

behavior find_coffee_filter_2035_around_coffe_maker_147(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind coffe_maker_instance:item where:
            is_coffe_maker(coffe_maker_instance) and id[coffe_maker_instance]==147
        achieve close_char(char,coffe_maker_instance)
        if can_open(coffe_maker_instance):
            achieve_once open(coffe_maker_instance)
            exp(coffee_filter,coffe_maker_instance)
        else:
            exp(coffee_filter,coffe_maker_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,coffe_maker_instance]=True
        close[coffe_maker_instance,coffee_filter]=True
    

behavior find_clothes_gloves_2077_around_basket_for_clothes_2040(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_gloves,basket_for_clothes_instance)
        else:
            exp(clothes_gloves,basket_for_clothes_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation

behavior boil_eggs(pot:item, stove:item, egg:item):
    body:
        achieve has_water(pot)
        # Ensure the pot is filled with water
        achieve_once inside(egg, pot)
        # Place the egg inside the pot
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove

behavior cut_egg(egg:item, cutting_board:item, knife:item):
    body:
        achieve_once on(egg, cutting_board)
        # Place the egg on the cutting board
        achieve_once cut(egg)
        # Cut the egg

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        bind stove: item where:
            is_stove(stove)
        bind egg: item where:
            is_food_egg(egg)
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        bind knife: item where:
            is_knife(knife)
        
        boil_eggs(pot, stove, egg)
        cut_egg(egg, cutting_board, knife)

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior boil_eggs(pot:item, stove:item, egg:item):
    body:
        achieve has_water(pot)
        # Ensure the pot is filled with water
        achieve_once inside(egg, pot)
        # Place the egg inside the pot
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove

behavior cut_egg(egg:item, cutting_board:item, knife:item):
    body:
        achieve_once on(egg, cutting_board)
        # Place the egg on the cutting board
        achieve_once cut(egg)
        # Cut the egg

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        bind stove: item where:
            is_stove(stove)
        bind egg: item where:
            is_food_egg(egg)
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        bind knife: item where:
            is_knife(knife)
        
        boil_eggs(pot, stove, egg)
        cut_egg(egg, cutting_board, knife)

##############################
From agent.py-> find a plan in act()
grab_executor(food_egg_2053)walk_executor(pot_54)putin_executor(food_egg_2053, pot_54)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. Grabbing food_egg_2053 by left hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the knife_2036. Robot is close to the food_egg_2053. Robot is close to the stove_2090. Robot is close to the pot_54. 
##############################
From agent.py
putin_executor(food_egg_2053, pot_54)
Robot find: Robot is close to the knife_2036. Robot is close to the food_egg_2053. Robot is close to the stove_2090. Robot is close to the pot_54. food_egg_2053 is close pot_54. food_egg_2053 is inside pot_54. food_egg_2053 released by left hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the knife_2036. Robot is close to the food_egg_2053. Robot is close to the pot_54. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the knife_2036. Robot is close to the food_egg_2053. Robot is close to the pot_54. Grabbing food_egg_2053 by left hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_egg_2053, cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_egg_2053 is close cutting_board_2080. food_egg_2053 is on cutting_board_2080. food_egg_2053 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: Fill the pot with water and then proceed to place the egg inside the pot. The pot should then be placed on the stove, and the stove must be turned on to start boiling the eggs.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2026_around_bench_122(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==122
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(food_onion,bench_instance)
        else:
            exp(food_onion,bench_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,bench_instance]=True
        close[bench_instance,food_onion]=True
    

behavior find_laptop_2015_around_desk_375(laptop:item):
    goal: not unknown(laptop)
    body:
        assert is_laptop(laptop)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==375
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(laptop,desk_instance)
        else:
            exp(laptop,desk_instance)
    eff:
        unknown[laptop]=False
        close[laptop,desk_instance]=True
        close[desk_instance,laptop]=True
    

behavior find_soap_2038_around_sink_307(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_cleaning_solution_2098_around_sink_307(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(cleaning_solution,sink_instance)
        else:
            exp(cleaning_solution,sink_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,sink_instance]=True
        close[sink_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation

behavior wash_vegetables(vegetable:item):
    body:
        achieve_once clean(vegetable)
        # Wash the vegetable until it is clean

behavior __goal__():
    body:
        bind vegetable: item where:
            is_food_vegetable(vegetable)
        # Select vegetables for washing
        
        foreach v: item:
            if is_food_vegetable(v) and not clean(v):
                wash_vegetables(v)
                # Wash each vegetable until it is clean

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior wash_vegetables(vegetable:item):
    body:
        achieve_once clean(vegetable)
        # Wash the vegetable until it is clean

behavior __goal__():
    body:
        bind vegetable: item where:
            is_food_vegetable(vegetable)
        # Select vegetables for washing
        
        foreach v: item:
            if is_food_vegetable(v) and not clean(v):
                wash_vegetables(v)
                # Wash each vegetable until it is clean

##############################
From agent.py-> find a plan in act()
walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(faucet_134)switchon_executor(faucet_134)wash_executor(food_vegetable_2072)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the fridge_140. Grabbing food_vegetable_2072 by left hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned on. 
##############################
From agent.py
wash_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. food_vegetable_2072 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2026_around_wallshelf_301(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==301
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(food_onion,wallshelf_instance)
        else:
            exp(food_onion,wallshelf_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,wallshelf_instance]=True
        close[wallshelf_instance,food_onion]=True
    

behavior find_bowl_2096_around_sink_307(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(bowl,sink_instance)
        else:
            exp(bowl,sink_instance)
    eff:
        unknown[bowl]=False
        close[bowl,sink_instance]=True
        close[sink_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior mix_ingredients(bowl:item, egg:item, lemon:item, vegetable:item):
    body:
        achieve_once inside(egg, bowl)
        # Place the eggs inside the bowl
        achieve_once inside(lemon, bowl)
        # Place the lemon inside the bowl
        achieve_once inside(vegetable, bowl)
        # Place the vegetables inside the bowl

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg) and cut(egg)
        # Bind a boiled and cut egg item
        bind lemon: item where:
            is_food_lemon(lemon)
        # Bind a lemon item
        bind vegetable: item where:
            is_food_vegetable(vegetable) and clean(vegetable)
        # Bind a washed vegetable item
        bind bowl: item where:
            is_bowl(bowl)
        # Bind a bowl item to mix ingredients
        mix_ingredients(bowl, egg, lemon, vegetable)
        # Mix the ingredients inside the bowl

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior mix_ingredients(bowl:item, egg:item, lemon:item, vegetable:item):
    body:
        achieve_once inside(egg, bowl)
        # Place the eggs inside the bowl
        achieve_once inside(lemon, bowl)
        # Place the lemon inside the bowl
        achieve_once inside(vegetable, bowl)
        # Place the vegetables inside the bowl

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg) and cut(egg)
        # Bind a boiled and cut egg item
        bind lemon: item where:
            is_food_lemon(lemon)
        # Bind a lemon item
        bind vegetable: item where:
            is_food_vegetable(vegetable) and clean(vegetable)
        # Bind a washed vegetable item
        bind bowl: item where:
            is_bowl(bowl)
        # Bind a bowl item to mix ingredients
        mix_ingredients(bowl, egg, lemon, vegetable)
        # Mix the ingredients inside the bowl

##############################
From agent.py-> find a plan in act()
walk_executor(sink_307)exp(bowl_2096, sink_307)walk_executor(kitchen_counter_128)put_executor(knife_2036, kitchen_counter_128)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(bowl_2096)putin_executor(food_egg_2053, bowl_2096)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(bowl_2096)putin_executor(food_lemon_2061, bowl_2096)putin_executor(food_vegetable_2072, bowl_2096)
##############################
From agent.py
walk_executor(sink_307)
Robot find: detergent_2108, Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the bathroom_counter_306. Robot is close to the sink_307. 
##############################
From agent.py
exp(bowl_2096, sink_307)
Fail to find bowl_2096 around sink_307. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)exp(bowl_2096, sink_133)put_executor(knife_2036, kitchen_counter_132)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(bowl_2096)putin_executor(food_egg_2053, bowl_2096)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(bowl_2096)putin_executor(food_lemon_2061, bowl_2096)putin_executor(food_vegetable_2072, bowl_2096)
##############################
From agent.py
walk_executor(sink_133)
Robot find: after_shave_2029, cleaning_solution_2098, juice_2034, Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
exp(bowl_2096, sink_133)
Fail to find bowl_2096 around sink_133. 
##############################
From agent.py-> find a plan in act()
walk_executor(cpuscreen_383)exp(bowl_2096, cpuscreen_383)walk_executor(kitchen_counter_128)put_executor(knife_2036, kitchen_counter_128)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(bowl_2096)putin_executor(food_egg_2053, bowl_2096)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(bowl_2096)putin_executor(food_lemon_2061, bowl_2096)putin_executor(food_vegetable_2072, bowl_2096)
##############################
From agent.py
walk_executor(cpuscreen_383)
Robot find: chair_374, mouse_380, keyboard_382, glue_2013, Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the desk_375. Robot is close to the cpuscreen_383. 
##############################
From agent.py
exp(bowl_2096, cpuscreen_383)
Fail to find bowl_2096 around cpuscreen_383. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_301)exp(bowl_2096, wallshelf_301)walk_executor(kitchen_counter_128)put_executor(knife_2036, kitchen_counter_128)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(bowl_2096)putin_executor(food_egg_2053, bowl_2096)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(bowl_2096)putin_executor(food_lemon_2061, bowl_2096)putin_executor(food_vegetable_2072, bowl_2096)
##############################
From agent.py
walk_executor(wallshelf_301)
Robot find: towel_rack_299, towel_rack_300, Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the wallshelf_301. 
##############################
From agent.py
exp(bowl_2096, wallshelf_301)
Fail to find bowl_2096 around wallshelf_301. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_187)exp(bowl_2096, wallshelf_187)walk_executor(kitchen_counter_128)put_executor(knife_2036, kitchen_counter_128)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(bowl_2096)putin_executor(food_egg_2053, bowl_2096)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(bowl_2096)putin_executor(food_lemon_2061, bowl_2096)putin_executor(food_vegetable_2072, bowl_2096)
##############################
From agent.py
walk_executor(wallshelf_187)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the wallshelf_187. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2096 ?
Answer: Go to dining_room_1. You will find bowl_2096 on table_127. Locate table_127 and the bowl will be on top of it.
Re-decompose: None

##############################
From agent.py
Human Instruction: Ensure that the pot is filled with water before the eggs are placed into it and boiled on the stove.
Go to dining_room_1. You will find bowl_2096 on table_127. Locate table_127 and the bowl will be on top of it.

The actions you have taken:
Action 1: Walk to cupboard_131.
Action 2: Open cupboard_131.
Action 3: look for pot_2093 around cupboard_131.
Action 4: Walk to pot_54.
Action 5: Open pot_54.
Action 6: Grab pot_54.
Action 7: Walk to faucet_134.
Action 8: Switch off faucet_134.
Action 9: Walk to stove_2090.
Action 10: Switch on stove_2090.
Action 11: Walk to cupboard_130.
Action 12: look for food_egg_2053 around cupboard_130.
Action 13: Walk to faucet_308.
Action 14: Switch off faucet_308.
Action 15: Walk to fridge_140.
Action 16: Switch off fridge_140.
Action 17: Open fridge_140.
Action 18: look for food_egg_2053 around fridge_140.
Action 19: Walk to faucet_134.
Action 20: Switch on faucet_134.
Action 21: Switch off faucet_134.
Action 22: Walk to food_egg_2053.
Action 23: Grab food_egg_2053.
Action 24: Walk to pot_54.
Action 25: Put food_egg_2053 into pot_54.
Action 26: Walk to stove_2090.
Action 27: Put pot_54 on stove_2090.
Action 28: Walk to food_egg_2053.
Action 29: Grab food_egg_2053.
Action 30: Walk to cutting_board_2080.
Action 31: Put food_egg_2053 on cutting_board_2080.
Action 32: Walk to knifeblock_52.
Action 33: look for knife_2036 around knifeblock_52.
Action 34: Walk to food_egg_2053.
Action 35: Grab food_egg_2053.
Action 36: Walk to pot_54.
Action 37: Put food_egg_2053 into pot_54.
Action 38: Walk to food_egg_2053.
Action 39: Grab food_egg_2053.
Action 40: Walk to cutting_board_2080.
Action 41: Put food_egg_2053 on cutting_board_2080.
Action 42: Walk to light_384.
Action 43: look for knife_2036 around light_384.
Action 44: Walk to food_egg_2053.
Action 45: Grab food_egg_2053.
Action 46: Walk to pot_54.
Action 47: Put food_egg_2053 into pot_54.
Action 48: Walk to food_egg_2053.
Action 49: Grab food_egg_2053.
Action 50: Walk to cutting_board_2080.
Action 51: Put food_egg_2053 on cutting_board_2080.
Action 52: Walk to dry_pasta_2073.
Action 53: look for knife_2036 around dry_pasta_2073.
Action 54: Walk to food_egg_2053.
Action 55: Grab food_egg_2053.
Action 56: Walk to pot_54.
Action 57: Put food_egg_2053 into pot_54.
Action 58: Walk to food_egg_2053.
Action 59: Grab food_egg_2053.
Action 60: Walk to cutting_board_2080.
Action 61: Put food_egg_2053 on cutting_board_2080.
Action 62: Walk to bathroom_cabinet_305.
Action 63: Open bathroom_cabinet_305.
Action 64: look for knife_2036 around bathroom_cabinet_305.
Action 65: Walk to food_egg_2053.
Action 66: Grab food_egg_2053.
Action 67: Walk to pot_54.
Action 68: Put food_egg_2053 into pot_54.
Action 69: Walk to food_egg_2053.
Action 70: Grab food_egg_2053.
Action 71: Walk to cutting_board_2080.
Action 72: Put food_egg_2053 on cutting_board_2080.
Action 73: Walk to dishwasher_143.
Action 74: Open dishwasher_143.
Action 75: look for knife_2036 around dishwasher_143.
Action 76: Walk to food_egg_2053.
Action 77: Grab food_egg_2053.
Action 78: Walk to pot_54.
Action 79: Put food_egg_2053 into pot_54.
Action 80: Walk to food_egg_2053.
Action 81: Grab food_egg_2053.
Action 82: Walk to cutting_board_2080.
Action 83: Put food_egg_2053 on cutting_board_2080.
Action 84: Walk to knife_2036.
Action 85: Grab knife_2036.
Action 86: Walk to food_egg_2053.
Action 87: Cut food_egg_2053.
Action 88: Grab food_egg_2053.
Action 89: Walk to pot_54.
Action 90: Put food_egg_2053 into pot_54.
Action 91: Walk to food_egg_2053.
Action 92: Grab food_egg_2053.
Action 93: Walk to cutting_board_2080.
Action 94: Put food_egg_2053 on cutting_board_2080.
Action 95: Walk to food_vegetable_2072.
Action 96: Grab food_vegetable_2072.
Action 97: Walk to faucet_134.
Action 98: Switch on faucet_134.
Action 99: Wash food_vegetable_2072.
Action 100: Switch off faucet_134.
Action 101: Walk to sink_307.
Action 102: look for bowl_2096 around sink_307.
Action 103: Walk to sink_133.
Action 104: look for bowl_2096 around sink_133.
Action 105: Walk to cpuscreen_383.
Action 106: look for bowl_2096 around cpuscreen_383.
Action 107: Walk to wallshelf_301.
Action 108: look for bowl_2096 around wallshelf_301.
Action 109: Walk to wallshelf_187.

##############################
From agent.py
exp(bowl_2096, wallshelf_187)
Fail to find bowl_2096 around wallshelf_187. 
##############################
From agent.py-> find a plan in act()
walk_executor(bench_122)exp(bowl_2096, bench_122)walk_executor(kitchen_counter_128)put_executor(knife_2036, kitchen_counter_128)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(bowl_2096)putin_executor(food_egg_2053, bowl_2096)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(bowl_2096)putin_executor(food_lemon_2061, bowl_2096)putin_executor(food_vegetable_2072, bowl_2096)
##############################
From agent.py
walk_executor(bench_122)
Robot find: mat_114, Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the bench_122. 
##############################
From agent.py
exp(bowl_2096, bench_122)
Fail to find bowl_2096 around bench_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_127)exp(bowl_2096, table_127)walk_executor(kitchen_counter_128)put_executor(knife_2036, kitchen_counter_128)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(bowl_2096)putin_executor(food_egg_2053, bowl_2096)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(bowl_2096)putin_executor(food_lemon_2061, bowl_2096)putin_executor(food_vegetable_2072, bowl_2096)
##############################
From agent.py
walk_executor(table_127)
Robot find: mat_115, fork_2104, console_2027, crayon_2030, bowl_2096, bowl_2097, napkin_2014, plate_2105, drawing_118, Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the mat_115. Robot is close to the table_127. 
##############################
From agent.py
exp(bowl_2096, table_127)
Find bowl_2096. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)put_executor(knife_2036, kitchen_counter_128)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(bowl_2096)putin_executor(food_egg_2053, bowl_2096)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(bowl_2096)putin_executor(food_lemon_2061, bowl_2096)putin_executor(food_vegetable_2072, bowl_2096)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(knife_2036, kitchen_counter_128)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_128. knife_2036 is close kitchen_counter_128. kitchen_counter_128 is close knife_2036. knife_2036 is on kitchen_counter_128. knife_2036 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(bowl_2096)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the food_egg_2053. Robot is close to the bowl_2096. Robot is close to the table_127. 
##############################
From agent.py
putin_executor(food_egg_2053, bowl_2096)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the food_egg_2053. Robot is close to the bowl_2096. Robot is close to the table_127. bowl_2096 is close food_egg_2053. food_egg_2053 is close bowl_2096. food_egg_2053 is inside bowl_2096. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(food_lemon_2061)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the fridge_140. Robot is close to the food_lemon_2061. 
##############################
From agent.py
grab_executor(food_lemon_2061)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the fridge_140. Robot is close to the food_lemon_2061. Grabbing food_lemon_2061 by right hand. 
##############################
From agent.py
walk_executor(bowl_2096)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the food_lemon_2061. Robot is close to the bowl_2096. Robot is close to the table_127. 
##############################
From agent.py
putin_executor(food_lemon_2061, bowl_2096)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the food_lemon_2061. Robot is close to the bowl_2096. Robot is close to the table_127. food_lemon_2061 is close bowl_2096. bowl_2096 is close food_lemon_2061. food_lemon_2061 is inside bowl_2096. food_lemon_2061 released by right hand. 
##############################
From agent.py
putin_executor(food_vegetable_2072, bowl_2096)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the food_lemon_2061. Robot is close to the bowl_2096. Robot is close to the table_127. food_vegetable_2072 is close bowl_2096. bowl_2096 is close food_vegetable_2072. food_vegetable_2072 is inside bowl_2096. food_vegetable_2072 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make a bowl of egg salad with boiled egg, lemon, and vegetables.
Action History:
['walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(pot_54)', 'open_executor(pot_54)', 'grab_executor(pot_54)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(stove_2090)', 'switchon_executor(stove_2090)', 'walk_executor(cupboard_130)', 'walk_executor(faucet_308)', 'switchoff_executor(faucet_308)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'walk_executor(faucet_134)', 'switchon_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(pot_54)', 'putin_executor(food_egg_2053, pot_54)', 'walk_executor(stove_2090)', 'put_executor(pot_54, stove_2090)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(cutting_board_2080)', 'put_executor(food_egg_2053, cutting_board_2080)', 'walk_executor(knifeblock_52)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(pot_54)', 'putin_executor(food_egg_2053, pot_54)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(cutting_board_2080)', 'put_executor(food_egg_2053, cutting_board_2080)', 'walk_executor(light_384)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(pot_54)', 'putin_executor(food_egg_2053, pot_54)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(cutting_board_2080)', 'put_executor(food_egg_2053, cutting_board_2080)', 'walk_executor(dry_pasta_2073)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(pot_54)', 'putin_executor(food_egg_2053, pot_54)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(cutting_board_2080)', 'put_executor(food_egg_2053, cutting_board_2080)', 'walk_executor(bathroom_cabinet_305)', 'open_executor(bathroom_cabinet_305)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(pot_54)', 'putin_executor(food_egg_2053, pot_54)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(cutting_board_2080)', 'put_executor(food_egg_2053, cutting_board_2080)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(pot_54)', 'putin_executor(food_egg_2053, pot_54)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(cutting_board_2080)', 'put_executor(food_egg_2053, cutting_board_2080)', 'walk_executor(knife_2036)', 'grab_executor(knife_2036)', 'walk_executor(food_egg_2053)', 'cut_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(pot_54)', 'putin_executor(food_egg_2053, pot_54)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(cutting_board_2080)', 'put_executor(food_egg_2053, cutting_board_2080)', 'walk_executor(food_vegetable_2072)', 'grab_executor(food_vegetable_2072)', 'walk_executor(faucet_134)', 'switchon_executor(faucet_134)', 'wash_executor(food_vegetable_2072)', 'switchoff_executor(faucet_134)', 'walk_executor(sink_307)', 'walk_executor(sink_133)', 'walk_executor(cpuscreen_383)', 'walk_executor(wallshelf_301)', 'walk_executor(wallshelf_187)', 'walk_executor(bench_122)', 'walk_executor(table_127)', 'walk_executor(kitchen_counter_128)', 'put_executor(knife_2036, kitchen_counter_128)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(bowl_2096)', 'putin_executor(food_egg_2053, bowl_2096)', 'walk_executor(food_lemon_2061)', 'grab_executor(food_lemon_2061)', 'walk_executor(bowl_2096)', 'putin_executor(food_lemon_2061, bowl_2096)', 'putin_executor(food_vegetable_2072, bowl_2096)']
Time info:
Time consume: 880 seconds
Exp_helper query times: 2
Guidance query times: 1
library scale: 0
goal generate times: 8
goal correct times: 2
action_num: 110

Task complete rate:
Keystate: k1 - Requires: 0 steps
Keystate: k2 - Requires: 21 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
