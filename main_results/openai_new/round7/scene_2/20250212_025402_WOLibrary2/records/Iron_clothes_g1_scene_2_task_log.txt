From agent.py
Reset goals: The sub-goals are: 
['Iron the pair of skirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_skirt_2116_around_ironing_board_2099(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_skirt,ironing_board_instance)
        else:
            exp(clothes_skirt,ironing_board_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,ironing_board_instance]=True
        close[ironing_board_instance,clothes_skirt]=True
    

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once close_char(char, ironing_board) # Move close to the ironing board
        achieve_once on(skirt, ironing_board) # Place the skirt on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in for continuous use
        achieve is_on(iron) # Ensure the iron is turned on for continuous use
        # Progressively iron the skirt until complete, avoid using too many intermediate states

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt) # Identify the skirt that needs to be ironed
        bind iron: item where:
            is_iron(iron) # Identify the iron to use
        bind ironing_board: item where:
            is_ironing_board(ironing_board) # Identify the ironing board
        iron_skirt(skirt, iron, ironing_board) # Iron the skirt using the identified iron and ironing board
#goal_representation_end

##############################
From agent.py->reset_goal
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once close_char(char, ironing_board) # Move close to the ironing board
        achieve_once on(skirt, ironing_board) # Place the skirt on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in for continuous use
        achieve is_on(iron) # Ensure the iron is turned on for continuous use
        # Progressively iron the skirt until complete, avoid using too many intermediate states

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt) # Identify the skirt that needs to be ironed
        bind iron: item where:
            is_iron(iron) # Identify the iron to use
        bind ironing_board: item where:
            is_ironing_board(ironing_board) # Identify the ironing board
        iron_skirt(skirt, iron, ironing_board) # Iron the skirt using the identified iron and ironing board
##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)exp(clothes_skirt_2116, ironing_board_2099)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)exp(iron_2117, ironing_board_2099)walk_executor(iron_2117)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: iron_2117, Robot is close to the ironing_board_2099. 
##############################
From agent.py
exp(clothes_skirt_2116, ironing_board_2099)
Fail to find clothes_skirt_2116 around ironing_board_2099. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)exp(clothes_skirt_2116, basket_for_clothes_2040)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Robot find: clothes_pants_2113, clothes_shirt_2114, clothes_socks_2115, clothes_skirt_2116, Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. 
##############################
From agent.py
exp(clothes_skirt_2116, basket_for_clothes_2040)
Find clothes_skirt_2116. 
##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the ironing_board_2099. 
##############################
From agent.py
walk_executor(clothes_skirt_2116)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_skirt_2116. 
##############################
From agent.py
grab_executor(clothes_skirt_2116)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_skirt_2116. Grabbing clothes_skirt_2116 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. 
##############################
From agent.py
put_executor(clothes_skirt_2116, ironing_board_2099)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. ironing_board_2099 is close clothes_skirt_2116. clothes_skirt_2116 is close ironing_board_2099. clothes_skirt_2116 is on ironing_board_2099. clothes_skirt_2116 released by right hand. 
##############################
From agent.py
plugin_executor(iron_2117)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. iron_2117 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2117)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. iron_2117 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to perform the action of ironing the skirt using the iron. The current actions have only prepared the equipment and skirt for ironing, but the action to actually iron (which would involve pressing the skirt with the iron) has not yet been executed.
##############################
From agent.py
Human Instruction: You need to perform the action of ironing the skirt using the iron. The current actions have only prepared the equipment and skirt for ironing, but the action to actually iron (which would involve pressing the skirt with the iron) has not yet been executed.

The actions you have taken:
Action 1: Walk to ironing_board_2099.
Action 2: look for clothes_skirt_2116 around ironing_board_2099.
Action 3: Walk to basket_for_clothes_2040.
Action 4: look for clothes_skirt_2116 around basket_for_clothes_2040.
Action 5: Walk to ironing_board_2099.
Action 6: Walk to clothes_skirt_2116.
Action 7: Grab clothes_skirt_2116.
Action 8: Walk to ironing_board_2099.
Action 9: Put clothes_skirt_2116 on ironing_board_2099.
Action 10: Plug in iron_2117.
Action 11: Switch on iron_2117.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2079_around_dresser_377(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_scarf,dresser_instance)
        else:
            exp(clothes_scarf,dresser_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,dresser_instance]=True
        close[dresser_instance,clothes_scarf]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(skirt, ironing_board)
        # Ensure the skirt is placed on the ironing board
        achieve_once is_on(iron)
        # Ensure the iron is on
        achieve_once plugged(iron)
        # Ensure the iron is plugged in

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        bind iron: item where:
            is_iron(iron)
        # Select the iron
        iron_skirt(skirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2079_around_dresser_377(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_scarf,dresser_instance)
        else:
            exp(clothes_scarf,dresser_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,dresser_instance]=True
        close[dresser_instance,clothes_scarf]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board) # Ensure the skirt is on the ironing board
        achieve is_on(iron) # Ensure the iron is on for the entire process

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind iron: item where:
            is_iron(iron)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        iron_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2079_around_dresser_377(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_scarf,dresser_instance)
        else:
            exp(clothes_scarf,dresser_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,dresser_instance]=True
        close[dresser_instance,clothes_scarf]=True
    

#exp_behavior_end

#goal_representation
 
behavior press_skirt_with_iron(skirt:item, iron:item, ironing_board:item):
    body:
        achieve is_on(iron) # Ensure the iron is turned on
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve_once on(skirt, ironing_board) # Place the skirt on the ironing board
        # Perform the ironing action by gently pressing the skirt with the iron

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt) # Select the item categorized as a skirt
        bind ironing_board: item where:
            is_ironing_board(ironing_board) # Select the item categorized as an ironing board
        bind iron: item where:
            is_iron(iron) # Select the item categorized as an iron
        press_skirt_with_iron(skirt, iron, ironing_board) # Execute the behavior to iron the skirt

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "iron the pair of skirt." ?
Answer: Put the skirt on the ironing board. Turn on the iron. Then put the iron on the skirt, push and pull it on the skirt.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2079_around_dresser_377(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_scarf,dresser_instance)
        else:
            exp(clothes_scarf,dresser_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,dresser_instance]=True
        close[dresser_instance,clothes_scarf]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item):
    body:
        achieve_once on(skirt, ironing_board) # Ensure the skirt is on the ironing board
        achieve is_on(iron) # Ensure the iron is turned on

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt) and on(skirt, ironing_board)
        # Select the skirt on the ironing board

        bind iron: item where:
            is_iron(iron) and is_on(iron)
        # Select a turnedon iron

        iron_skirt(skirt, iron) # Iron the skirt

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board; available variables: [Variable<skirt: item>, Variable<iron: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_scarf_2079_around_cupboard_130(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(clothes_scarf,cupboard_instance)
        else:
            exp(clothes_scarf,cupboard_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,cupboard_instance]=True
        close[cupboard_instance,clothes_scarf]=True
    

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board) # Ensure the skirt is on the ironing board
        achieve is_on(iron) # Ensure the iron is turned on

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt) and on(skirt, ironing_board)
        # Select the skirt on the ironing board

        bind iron: item where:
            is_iron(iron) and is_on(iron)
        # Select a turned on iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        iron_skirt(skirt, iron, ironing_board) # Iron the skirt

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board; available variables: [Variable<skirt: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_scarf_2079_around_bookshelf_136(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==136
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(clothes_scarf,bookshelf_instance)
        else:
            exp(clothes_scarf,bookshelf_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,bookshelf_instance]=True
        close[bookshelf_instance,clothes_scarf]=True
    

behavior find_food_butter_2018_around_fridge_140(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_butter,fridge_instance)
        else:
            exp(food_butter,fridge_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,fridge_instance]=True
        close[fridge_instance,food_butter]=True
    

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board) # Ensure the skirt is on the ironing board
        achieve is_on(iron) # Ensure the iron is turned on

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind skirt: item where:
            is_clothes_skirt(skirt) and on(skirt, ironing_board)
        # Select the skirt on the ironing board

        bind iron: item where:
            is_iron(iron) and is_on(iron)
        # Select a turned on iron

        iron_skirt(skirt, iron, ironing_board) # Iron the skirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2079_around_dresser_377(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_scarf,dresser_instance)
        else:
            exp(clothes_scarf,dresser_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,dresser_instance]=True
        close[dresser_instance,clothes_scarf]=True
    

behavior find_clothes_dress_2075_around_dresser_377(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_dress,dresser_instance)
        else:
            exp(clothes_dress,dresser_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,dresser_instance]=True
        close[dresser_instance,clothes_dress]=True
    

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_the_skirt(skirt:item, iron:item, board:item):
    body:
        achieve_once on(skirt, board)
        # Ensure the skirt is on the ironing board
        achieve_once is_on(iron)
        # Ensure the iron is on
        achieve_once close(iron, skirt)
        # Move the iron close to the skirt

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the pair of skirt
        
        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind board: item where:
            is_ironing_board(board)
        # Select the ironing board

        iron_the_skirt(skirt, iron, board)
        # Iron the skirt

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_the_skirt(skirt:item, iron:item, board:item):
    body:
        achieve_once on(skirt, board)
        # Ensure the skirt is on the ironing board
        achieve_once is_on(iron)
        # Ensure the iron is on
        achieve_once close(iron, skirt)
        # Move the iron close to the skirt

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the pair of skirt
        
        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind board: item where:
            is_ironing_board(board)
        # Select the ironing board

        iron_the_skirt(skirt, iron, board)
        # Iron the skirt

##############################
From agent.py-> find a plan in act()
walk_executor(iron_2117)grab_executor(iron_2117)walk_executor(clothes_skirt_2116)put_executor(iron_2117, clothes_skirt_2116)
##############################
From agent.py
walk_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. 
##############################
From agent.py
grab_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. Grabbing iron_2117 by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2116)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. Robot is close to the clothes_skirt_2116. 
##############################
From agent.py
put_executor(iron_2117, clothes_skirt_2116)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. Robot is close to the clothes_skirt_2116. clothes_skirt_2116 is close iron_2117. iron_2117 is close clothes_skirt_2116. iron_2117 is on clothes_skirt_2116. iron_2117 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to push and pull the iron on the skirt to complete the ironing process.
##############################
From agent.py
Human Instruction: You need to push and pull the iron on the skirt to complete the ironing process.

Human Guidance: Put the skirt on the ironing board. Turn on the iron. Then put the iron on the skirt, push and pull it on the skirt.
The actions you have taken:
Action 1: Walk to ironing_board_2099.
Action 2: look for clothes_skirt_2116 around ironing_board_2099.
Action 3: Walk to basket_for_clothes_2040.
Action 4: look for clothes_skirt_2116 around basket_for_clothes_2040.
Action 5: Walk to ironing_board_2099.
Action 6: Walk to clothes_skirt_2116.
Action 7: Grab clothes_skirt_2116.
Action 8: Walk to ironing_board_2099.
Action 9: Put clothes_skirt_2116 on ironing_board_2099.
Action 10: Plug in iron_2117.
Action 11: Switch on iron_2117.
Action 12: Walk to iron_2117.
Action 13: Grab iron_2117.
Action 14: Walk to clothes_skirt_2116.
Action 15: Put iron_2117 on clothes_skirt_2116.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2079_around_dresser_377(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_scarf,dresser_instance)
        else:
            exp(clothes_scarf,dresser_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,dresser_instance]=True
        close[dresser_instance,clothes_scarf]=True
    

behavior find_clothes_jacket_2078_around_dresser_377(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_jacket,dresser_instance)
        else:
            exp(clothes_jacket,dresser_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,dresser_instance]=True
        close[dresser_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board) # Ensure the skirt is on the ironing board to begin ironing
        achieve_once is_on(iron) # Ensure the iron is turned on before ironing
        achieve close_char(char, skirt) # Get close to the skirt for effective ironing
        achieve close_char(char, iron) # Ensure proximity to the iron during the ironing process

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and on(skirt, ironing_board)
        bind iron: item where:
            is_iron(iron)
        iron_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2079_around_dresser_377(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_scarf,dresser_instance)
        else:
            exp(clothes_scarf,dresser_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,dresser_instance]=True
        close[dresser_instance,clothes_scarf]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)
        achieve_once is_on(iron)
        achieve_once on(iron, skirt)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind iron: item where:
            is_iron(iron)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        iron_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2079_around_dresser_377(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_scarf,dresser_instance)
        else:
            exp(clothes_scarf,dresser_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,dresser_instance]=True
        close[dresser_instance,clothes_scarf]=True
    

behavior find_clothes_jacket_2078_around_dresser_377(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_jacket,dresser_instance)
        else:
            exp(clothes_jacket,dresser_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,dresser_instance]=True
        close[dresser_instance,clothes_jacket]=True
    

behavior find_clothes_gloves_2077_around_dresser_377(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_gloves,dresser_instance)
        else:
            exp(clothes_gloves,dresser_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,dresser_instance]=True
        close[dresser_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item):
    body:
        achieve_once on(iron, skirt)
        # Place the iron on the skirt temporarily
        push(iron)
        pull(iron)
        # Push and pull the iron on the skirt

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        
        bind skirt: item where:
            is_clothes_skirt(skirt) and on(skirt, ironing_board)
        # Select the skirt on the ironing board
        
        bind iron: item where:
            is_iron(iron) and is_on(iron) and plugged(iron)
        # Select the iron which is plugged in and turned on
        
        iron_skirt(skirt, iron)
        # Apply the ironing process on the skirt

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_skirt(skirt:item, iron:item):
    body:
        achieve_once on(iron, skirt)
        # Place the iron on the skirt temporarily
        push(iron)
        pull(iron)
        # Push and pull the iron on the skirt

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        
        bind skirt: item where:
            is_clothes_skirt(skirt) and on(skirt, ironing_board)
        # Select the skirt on the ironing board
        
        bind iron: item where:
            is_iron(iron) and is_on(iron) and plugged(iron)
        # Select the iron which is plugged in and turned on
        
        iron_skirt(skirt, iron)
        # Apply the ironing process on the skirt

##############################
From agent.py-> find a plan in act()
push_executor(iron_2117)pull_executor(iron_2117)
##############################
From agent.py
push_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. Robot is close to the clothes_skirt_2116. 
##############################
From agent.py
pull_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. Robot is close to the clothes_skirt_2116. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Directly iron a pair of skirt.
Action History:
['walk_executor(ironing_board_2099)', 'walk_executor(basket_for_clothes_2040)', 'walk_executor(ironing_board_2099)', 'walk_executor(clothes_skirt_2116)', 'grab_executor(clothes_skirt_2116)', 'walk_executor(ironing_board_2099)', 'put_executor(clothes_skirt_2116, ironing_board_2099)', 'plugin_executor(iron_2117)', 'switchon_executor(iron_2117)', 'walk_executor(iron_2117)', 'grab_executor(iron_2117)', 'walk_executor(clothes_skirt_2116)', 'put_executor(iron_2117, clothes_skirt_2116)', 'push_executor(iron_2117)', 'pull_executor(iron_2117)']
Time info:
Time consume: 159 seconds
Exp_helper query times: 0
Guidance query times: 1
library scale: 0
goal generate times: 9
goal correct times: 0
action_num: 15

Task complete rate:
Keystate: k1 - Requires: 0 steps
Action Completion Rate: 0.0
Scene_id: 2
##############################
