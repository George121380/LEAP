From agent.py
Reset goals: The sub-goals are: 
['Turn on the computer in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_laptop_2015_around_home_office_161(laptop:item):
    goal: not unknown(laptop)
    body:
        assert is_laptop(laptop)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==161
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(laptop,home_office_instance)
        else:
            exp(laptop,home_office_instance)
    eff:
        unknown[laptop]=False
        close[laptop,home_office_instance]=True
        close[home_office_instance,laptop]=True
    

behavior find_mouse_2112_around_desk_261(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==261
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(mouse,desk_instance)
        else:
            exp(mouse,desk_instance)
    eff:
        unknown[mouse]=False
        close[mouse,desk_instance]=True
        close[desk_instance,mouse]=True
    

#exp_behavior_end

#goal_representation

behavior __goal__():
    body:
        bind computer: item where:
            is_computer(computer) and inside(computer, home_office)
        # Select a computer located in the home office
        achieve is_on(computer)
        # Aim to have the computer turned on

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: home_office; available variables: [Variable<computer: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_laptop_2015_around_home_office_161(laptop:item):
    goal: not unknown(laptop)
    body:
        assert is_laptop(laptop)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==161
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(laptop,home_office_instance)
        else:
            exp(laptop,home_office_instance)
    eff:
        unknown[laptop]=False
        close[laptop,home_office_instance]=True
        close[home_office_instance,laptop]=True
    

#goal_representation
 
behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        bind computer: item where:
            is_computer(computer) and inside(computer, home_office)
        # Select a computer located in the home office
        achieve is_on(computer)
        # Aim to have the computer turned on

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        bind computer: item where:
            is_computer(computer) and inside(computer, home_office)
        # Select a computer located in the home office
        achieve is_on(computer)
        # Aim to have the computer turned on

##############################
From agent.py-> find a plan in act()
walk_executor(computer_2110)switchon_executor(computer_2110)
##############################
From agent.py
walk_executor(computer_2110)
Robot find: dvd_player_2000, mouse_2112, chair_2119, keyboard_2111, pillow_195, laser_pointer_2025, mat_201, oil_2005, drawing_196, Robot is close to the table_193. Robot is close to the computer_2110. 
##############################
From agent.py
switchon_executor(computer_2110)
Robot find: Robot is close to the table_193. Robot is close to the computer_2110. computer_2110 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Turn on the computer in home office.
Action History:
['walk_executor(computer_2110)', 'switchon_executor(computer_2110)']
Time info:
Time consume: 29 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 1
goal correct times: 1
action_num: 2

Task complete rate:
Keystate: k1 - Requires: 0 steps
Action Completion Rate: 0.0
Scene_id: 2
##############################
