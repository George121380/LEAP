From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the jacket.', '2. Wash the jacket using the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_wallshelf_191(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==191
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(detergent,wallshelf_instance)
        else:
            exp(detergent,wallshelf_instance)
    eff:
        unknown[detergent]=False
        close[detergent,wallshelf_instance]=True
        close[wallshelf_instance,detergent]=True
    

behavior find_clothes_jacket_2078_around_basket_for_clothes_2040(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_jacket,basket_for_clothes_instance)
        else:
            exp(clothes_jacket,basket_for_clothes_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
def has_clothes_jacket(jacket:item):
    symbol is_jacket=exists j: item : (is_clothes_jacket(j) and j==jacket)
    return is_jacket

def clean_jacket(jacket:item):
    if dirty(jacket):
        wash(jacket)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and dirty(jacket)
        clean_jacket(jacket)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2037_around_bathroom_counter_306(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_clothes_jacket_2078_around_basket_for_clothes_2040(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_jacket,basket_for_clothes_instance)
        else:
            exp(clothes_jacket,basket_for_clothes_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior walk_to_sink_with_jacket(tap:item, jacket:item):
    body:
        if not close_char(char, tap):
            walk_to(tap)

behavior hand_wash_jacket(jacket:item):
    body:
        if dirty(jacket):
            wash(jacket)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and dirty(jacket)
        bind sink: item where:
            is_sink(sink)
        walk_to_sink_with_jacket(sink, jacket)
        hand_wash_jacket(jacket)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_bathroom_cabinet_305(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_clothes_jacket_2078_around_basket_for_clothes_2040(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_jacket,basket_for_clothes_instance)
        else:
            exp(clothes_jacket,basket_for_clothes_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_jacket(jacket: item):
    body:
        if dirty(jacket):
            wash(jacket)
            if not clean(jacket):
                scrub(jacket)
            if has_water(jacket):
                rinse(jacket)
                squeeze(jacket)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        hand_wash_jacket(jacket)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2078_around_basket_for_clothes_2040(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_jacket,basket_for_clothes_instance)
        else:
            exp(clothes_jacket,basket_for_clothes_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_jacket]=True
    

behavior find_detergent_2108_around_wallshelf_191(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==191
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(detergent,wallshelf_instance)
        else:
            exp(detergent,wallshelf_instance)
    eff:
        unknown[detergent]=False
        close[detergent,wallshelf_instance]=True
        close[wallshelf_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_jacket(jacket:item):
    body:
        if dirty(jacket):
            if not has_water(jacket):
                get_water(jacket)
            wash(jacket)
            rinse(jacket)
            squeeze(jacket)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket to hand wash
        hand_wash_jacket(jacket)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2038_around_bathroom_counter_306(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_detergent_2108_around_wallshelf_191(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==191
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(detergent,wallshelf_instance)
        else:
            exp(detergent,wallshelf_instance)
    eff:
        unknown[detergent]=False
        close[detergent,wallshelf_instance]=True
        close[wallshelf_instance,detergent]=True
    

behavior find_clothes_jacket_2078_around_basket_for_clothes_2040(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_jacket,basket_for_clothes_instance)
        else:
            exp(clothes_jacket,basket_for_clothes_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior handwash_jacket(jacket:item):
    body:
        if dirty(jacket):
            wash(jacket)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        handwash_jacket(jacket)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2078_around_basket_for_clothes_2040(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_jacket,basket_for_clothes_instance)
        else:
            exp(clothes_jacket,basket_for_clothes_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_jacket]=True
    

behavior find_detergent_2108_around_wallshelf_190(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==190
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(detergent,wallshelf_instance)
        else:
            exp(detergent,wallshelf_instance)
    eff:
        unknown[detergent]=False
        close[detergent,wallshelf_instance]=True
        close[wallshelf_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind clothes_jacket: item where:
            is_clothes_jacket(clothes_jacket)
        # Select the jacket to wash by hand
        wash(clothes_jacket)
        # Hand wash the jacket

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior __goal__():
    body:
        bind clothes_jacket: item where:
            is_clothes_jacket(clothes_jacket)
        # Select the jacket to wash by hand
        wash(clothes_jacket)
        # Hand wash the jacket

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)exp(clothes_jacket_2078, basket_for_clothes_2040)walk_executor(clothes_jacket_2078)grab_executor(clothes_jacket_2078)wash_executor(clothes_jacket_2078)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Robot find: clothes_pants_2113, clothes_shirt_2114, clothes_socks_2115, clothes_skirt_2116, Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. 
##############################
From agent.py
exp(clothes_jacket_2078, basket_for_clothes_2040)
Fail to find clothes_jacket_2078 around basket_for_clothes_2040. 
##############################
From agent.py-> find a plan in act()
walk_executor(dresser_377)exp(clothes_jacket_2078, dresser_377)walk_executor(clothes_jacket_2078)grab_executor(clothes_jacket_2078)wash_executor(clothes_jacket_2078)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(dresser_377)
Robot find: novel_2010, pajamas_2039, drawing_388, drawing_387, Robot is close to the dresser_377. Robot is close to the novel_2010. Robot is close to the pajamas_2039. 
##############################
From agent.py
exp(clothes_jacket_2078, dresser_377)
Fail to find clothes_jacket_2078 around dresser_377. 
##############################
From agent.py-> find a plan in act()
walk_executor(bed_264)exp(clothes_jacket_2078, bed_264)walk_executor(clothes_jacket_2078)grab_executor(clothes_jacket_2078)wash_executor(clothes_jacket_2078)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(bed_264)
Robot find: clothes_scarf_2079, pillow_239, clothes_dress_2075, pillow_240, clothes_jacket_2078, mat_237, drawing_238, Robot is close to the bed_264. 
##############################
From agent.py
exp(clothes_jacket_2078, bed_264)
Find clothes_jacket_2078. 
##############################
From agent.py-> find a plan in act()
walk_executor(clothes_jacket_2078)grab_executor(clothes_jacket_2078)wash_executor(clothes_jacket_2078)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(clothes_jacket_2078)
Robot find: Robot is close to the bed_264. Robot is close to the clothes_jacket_2078. 
##############################
From agent.py
grab_executor(clothes_jacket_2078)
Robot find: Robot is close to the bed_264. Robot is close to the clothes_jacket_2078. Grabbing clothes_jacket_2078 by right hand. 
##############################
From agent.py
wash_executor(clothes_jacket_2078)
Robot find: Robot is close to the bed_264. Robot is close to the clothes_jacket_2078. clothes_jacket_2078 is cleaned. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: pot_54, Robot is close to the clothes_jacket_2078. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the clothes_jacket_2078. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_bathroom_cabinet_305(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
def has_clothes_inside_washing_machine(washing_machine:item):
    # Function to check if there are clothes inside the washing machine
    symbol has_clothes_inside=exists o: item : (is_clothes(o) and inside(o, washing_machine))
    return has_clothes_inside

behavior load_washing_machine(jacket:item, washing_machine:item):
    body:
        if not inside(jacket, washing_machine):
            put_inside(jacket, washing_machine)
            # Place the jacket inside the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        if open(washing_machine):
            closes(washing_machine) # Close the washing machine door
        if is_off(washing_machine):
            switch_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket
        
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine
        
        load_washing_machine(jacket, washing_machine)
        start_washing_machine(washing_machine)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def has_clothes_inside_washing_machine(washing_machine:item):
    # Function to check if there are clothes inside the washing machine
    symbol has_clothes_inside=exists o: item : (is_clothes(o) and inside(o, washing_machine))
    return has_clothes_inside

behavior load_washing_machine(jacket:item, washing_machine:item):
    body:
        if not inside(jacket, washing_machine):
            put_inside(jacket, washing_machine)
            # Place the jacket inside the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        if open(washing_machine):
            closes(washing_machine) # Close the washing machine door
        if is_off(washing_machine):
            switch_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket
        
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine
        
        load_washing_machine(jacket, washing_machine)
        start_washing_machine(washing_machine)

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2041)open_executor(washing_machine_2041)putin_executor(clothes_jacket_2078, washing_machine_2041)close_executor(washing_machine_2041)plugin_executor(washing_machine_2041)switchon_executor(washing_machine_2041)
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot find: Robot is close to the clothes_jacket_2078. Robot is close to the washing_machine_2041. 
##############################
From agent.py
open_executor(washing_machine_2041)
Robot find: Robot is close to the clothes_jacket_2078. Robot is close to the washing_machine_2041. washing_machine_2041 is opened. 
##############################
From agent.py
putin_executor(clothes_jacket_2078, washing_machine_2041)
Robot find: Robot is close to the clothes_jacket_2078. Robot is close to the washing_machine_2041. washing_machine_2041 is close clothes_jacket_2078. clothes_jacket_2078 is inside washing_machine_2041. clothes_jacket_2078 is close washing_machine_2041. clothes_jacket_2078 released by right hand. 
##############################
From agent.py
close_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. washing_machine_2041 is closed. 
##############################
From agent.py
plugin_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. washing_machine_2041 is plugged in. 
##############################
From agent.py
switchon_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. washing_machine_2041 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Hand wash the jacket, then wash it by washing machine.
Action History:
['walk_executor(basket_for_clothes_2040)', 'walk_executor(dresser_377)', 'walk_executor(bed_264)', 'walk_executor(clothes_jacket_2078)', 'grab_executor(clothes_jacket_2078)', 'wash_executor(clothes_jacket_2078)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(washing_machine_2041)', 'open_executor(washing_machine_2041)', 'putin_executor(clothes_jacket_2078, washing_machine_2041)', 'close_executor(washing_machine_2041)', 'plugin_executor(washing_machine_2041)', 'switchon_executor(washing_machine_2041)']
Time info:
Time consume: 116 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 7
goal correct times: 0
action_num: 14

Task complete rate:
1
Scene_id: 2
##############################
