From agent.py
Reset goals: The sub-goals are: 
['1. Load the bowls and plates into the dishwasher and start the wash cycle.', '2. Wash the forks by hand.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_dishwasher_143(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==143
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(plate,dishwasher_instance)
        else:
            exp(plate,dishwasher_instance)
    eff:
        unknown[plate]=False
        close[plate,dishwasher_instance]=True
        close[dishwasher_instance,plate]=True
    

behavior find_bowl_2095_around_cupboard_131(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(item: item, dishwasher: item):
    body:
        if not inside(item, dishwasher):
            put_inside(item, dishwasher)

behavior start_dishwasher(dishwasher: item):
    body:
        if open(dishwasher):
            closes(dishwasher)
        if is_off(dishwasher):
            switch_on(dishwasher)

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        foreach item: item:
            if (is_plate(item) or is_bowl(item)) and dirty(item):
                load_dishwasher(item, dishwasher)
        start_dishwasher(dishwasher)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior load_dishwasher(item: item, dishwasher: item):
    body:
        if not inside(item, dishwasher):
            put_inside(item, dishwasher)

behavior start_dishwasher(dishwasher: item):
    body:
        if open(dishwasher):
            closes(dishwasher)
        if is_off(dishwasher):
            switch_on(dishwasher)

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        foreach item: item:
            if (is_plate(item) or is_bowl(item)) and dirty(item):
                load_dishwasher(item, dishwasher)
        start_dishwasher(dishwasher)

##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)switchon_executor(dishwasher_143)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
switchon_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. dishwasher_143 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to load the bowls and plates into the dishwasher before starting the wash cycle.
##############################
From agent.py
Human Instruction: You need to load the bowls and plates into the dishwasher before starting the wash cycle.

The actions you have taken:
Action 1: Walk to dishwasher_143.
Action 2: Switch on dishwasher_143.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_cupboard_130(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(plate,cupboard_instance)
        else:
            exp(plate,cupboard_instance)
    eff:
        unknown[plate]=False
        close[plate,cupboard_instance]=True
        close[cupboard_instance,plate]=True
    

behavior find_bowl_2095_around_cupboard_131(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        if not inside(o, dishwasher):
            put_inside(o, dishwasher)

behavior start_dishwasher(dishwasher:item):
    body:
        if open(dishwasher):
            closes(dishwasher)
        if is_off(dishwasher):
            switch_on(dishwasher)

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher) and id[dishwasher] == 143
        foreach o: item:
            if is_bowl(o) or is_plate(o):
                load_dishwasher(o, dishwasher)
        start_dishwasher(dishwasher)


#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        if not inside(o, dishwasher):
            put_inside(o, dishwasher)

behavior start_dishwasher(dishwasher:item):
    body:
        if open(dishwasher):
            closes(dishwasher)
        if is_off(dishwasher):
            switch_on(dishwasher)

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher) and id[dishwasher] == 143
        foreach o: item:
            if is_bowl(o) or is_plate(o):
                load_dishwasher(o, dishwasher)
        start_dishwasher(dishwasher)


##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(bowl_2095, cupboard_131)walk_executor(dishwasher_143)switchoff_executor(dishwasher_143)open_executor(dishwasher_143)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(dishwasher_143)putin_executor(bowl_2095, dishwasher_143)walk_executor(cupboard_131)exp(bowl_2096, cupboard_131)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(cupboard_131)exp(bowl_2097, cupboard_131)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(cupboard_130)exp(plate_2105, cupboard_130)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)close_executor(dishwasher_143)switchon_executor(dishwasher_143)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: pot_54, Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(bowl_2095, cupboard_131)
Fail to find bowl_2095 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(bowl_2095, cupboard_130)walk_executor(dishwasher_143)switchoff_executor(dishwasher_143)open_executor(dishwasher_143)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(dishwasher_143)putin_executor(bowl_2095, dishwasher_143)walk_executor(cupboard_130)exp(bowl_2096, cupboard_130)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(cupboard_130)exp(bowl_2097, cupboard_130)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(cupboard_130)exp(plate_2105, cupboard_130)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)close_executor(dishwasher_143)switchon_executor(dishwasher_143)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(bowl_2095, cupboard_130)
Fail to find bowl_2095 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(bowl_2095, kitchen_counter_132)walk_executor(dishwasher_143)switchoff_executor(dishwasher_143)open_executor(dishwasher_143)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(dishwasher_143)putin_executor(bowl_2095, dishwasher_143)walk_executor(kitchen_counter_132)exp(bowl_2096, kitchen_counter_132)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(kitchen_counter_132)exp(bowl_2097, kitchen_counter_132)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(kitchen_counter_132)exp(plate_2105, kitchen_counter_132)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)close_executor(dishwasher_143)switchon_executor(dishwasher_143)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the kitchen_counter_132. 
##############################
From agent.py
exp(bowl_2095, kitchen_counter_132)
Fail to find bowl_2095 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)exp(bowl_2095, sink_133)walk_executor(dishwasher_143)switchoff_executor(dishwasher_143)open_executor(dishwasher_143)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(dishwasher_143)putin_executor(bowl_2095, dishwasher_143)walk_executor(sink_133)exp(bowl_2096, sink_133)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(sink_133)exp(bowl_2097, sink_133)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(table_127)exp(plate_2105, table_127)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)close_executor(dishwasher_143)switchon_executor(dishwasher_143)
##############################
From agent.py
walk_executor(sink_133)
Robot find: after_shave_2029, cleaning_solution_2098, juice_2034, Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
exp(bowl_2095, sink_133)
Fail to find bowl_2095 around sink_133. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_129)exp(bowl_2095, kitchen_counter_129)walk_executor(dishwasher_143)switchoff_executor(dishwasher_143)open_executor(dishwasher_143)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(dishwasher_143)putin_executor(bowl_2095, dishwasher_143)walk_executor(kitchen_counter_129)exp(bowl_2096, kitchen_counter_129)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(kitchen_counter_129)exp(bowl_2097, kitchen_counter_129)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(table_123)exp(plate_2105, table_123)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)close_executor(dishwasher_143)switchon_executor(dishwasher_143)
##############################
From agent.py
walk_executor(kitchen_counter_129)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the kitchen_counter_129. 
##############################
From agent.py
exp(bowl_2095, kitchen_counter_129)
Fail to find bowl_2095 around kitchen_counter_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(bowl_2095, kitchen_counter_128)walk_executor(dishwasher_143)switchoff_executor(dishwasher_143)open_executor(dishwasher_143)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(dishwasher_143)putin_executor(bowl_2095, dishwasher_143)walk_executor(kitchen_counter_128)exp(bowl_2096, kitchen_counter_128)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(kitchen_counter_128)exp(bowl_2097, kitchen_counter_128)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(table_127)exp(plate_2105, table_127)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)close_executor(dishwasher_143)switchon_executor(dishwasher_143)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the kitchen_counter_128. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2095 ?
Answer: Robot, you can find bowl_2095 in dining_room_1. It is situated on top of table_123. Look for table_123, and bowl_2095 will be on it.
Re-decompose: None

##############################
From agent.py
Human Instruction: You need to load the bowls and plates into the dishwasher before starting the wash cycle.
Robot, you can find bowl_2095 in dining_room_1. It is situated on top of table_123. Look for table_123, and bowl_2095 will be on it.

The actions you have taken:
Action 1: Walk to dishwasher_143.
Action 2: Switch on dishwasher_143.
Action 3: Walk to cupboard_131.
Action 4: Open cupboard_131.
Action 5: look for bowl_2095 around cupboard_131.
Action 6: Walk to cupboard_130.
Action 7: look for bowl_2095 around cupboard_130.
Action 8: Walk to kitchen_counter_132.
Action 9: look for bowl_2095 around kitchen_counter_132.
Action 10: Walk to sink_133.
Action 11: look for bowl_2095 around sink_133.
Action 12: Walk to kitchen_counter_129.
Action 13: look for bowl_2095 around kitchen_counter_129.
Action 14: Walk to kitchen_counter_128.

##############################
From agent.py
exp(bowl_2095, kitchen_counter_128)
Fail to find bowl_2095 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(bowl_2095, table_123)walk_executor(dishwasher_143)switchoff_executor(dishwasher_143)open_executor(dishwasher_143)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(dishwasher_143)putin_executor(bowl_2095, dishwasher_143)walk_executor(table_123)exp(bowl_2096, table_123)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(table_123)exp(bowl_2097, table_123)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(table_123)exp(plate_2105, table_123)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)close_executor(dishwasher_143)switchon_executor(dishwasher_143)
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, laptop_2015, fork_2103, cup_2087, bowl_2095, drawing_118, Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
exp(bowl_2095, table_123)
Find bowl_2095. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)switchoff_executor(dishwasher_143)open_executor(dishwasher_143)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(dishwasher_143)putin_executor(bowl_2095, dishwasher_143)walk_executor(table_123)exp(bowl_2096, table_123)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(table_123)exp(bowl_2097, table_123)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(table_123)exp(plate_2105, table_123)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)close_executor(dishwasher_143)switchon_executor(dishwasher_143)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
switchoff_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. dishwasher_143 is turned off. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
walk_executor(bowl_2095)
Robot find: Robot is close to the table_123. Robot is close to the bowl_2095. 
##############################
From agent.py
grab_executor(bowl_2095)
Robot find: Robot is close to the table_123. Robot is close to the bowl_2095. Grabbing bowl_2095 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the bowl_2095. Robot is close to the knife_2036. Robot is close to the dishwasher_143. 
##############################
From agent.py
putin_executor(bowl_2095, dishwasher_143)
Robot find: Robot is close to the bowl_2095. Robot is close to the knife_2036. Robot is close to the dishwasher_143. bowl_2095 is inside dishwasher_143. bowl_2095 is close dishwasher_143. dishwasher_143 is close bowl_2095. bowl_2095 released by right hand. 
##############################
From agent.py
walk_executor(table_123)
Robot find: Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
exp(bowl_2096, table_123)
Fail to find bowl_2096 around table_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_127)exp(bowl_2096, table_127)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(table_127)exp(bowl_2097, table_127)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(table_127)exp(plate_2105, table_127)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)close_executor(dishwasher_143)switchon_executor(dishwasher_143)
##############################
From agent.py
walk_executor(table_127)
Robot find: mat_115, fork_2104, console_2027, crayon_2030, bowl_2096, bowl_2097, napkin_2014, plate_2105, Robot is close to the mat_115. Robot is close to the table_127. 
##############################
From agent.py
exp(bowl_2096, table_127)
Find bowl_2096. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)close_executor(dishwasher_143)switchon_executor(dishwasher_143)
##############################
From agent.py
walk_executor(bowl_2096)
Robot find: Robot is close to the table_127. Robot is close to the bowl_2096. 
##############################
From agent.py
grab_executor(bowl_2096)
Robot find: Robot is close to the table_127. Robot is close to the bowl_2096. Grabbing bowl_2096 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the bowl_2096. Robot is close to the knife_2036. Robot is close to the bowl_2095. Robot is close to the dishwasher_143. 
##############################
From agent.py
putin_executor(bowl_2096, dishwasher_143)
Robot find: Robot is close to the bowl_2096. Robot is close to the knife_2036. Robot is close to the bowl_2095. Robot is close to the dishwasher_143. bowl_2096 is close dishwasher_143. bowl_2096 is inside dishwasher_143. dishwasher_143 is close bowl_2096. bowl_2096 released by right hand. 
##############################
From agent.py
walk_executor(bowl_2097)
Robot find: Robot is close to the bowl_2097. Robot is close to the table_127. 
##############################
From agent.py
grab_executor(bowl_2097)
Robot find: Robot is close to the bowl_2097. Robot is close to the table_127. Grabbing bowl_2097 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the bowl_2097. Robot is close to the bowl_2095. Robot is close to the bowl_2096. Robot is close to the dishwasher_143. Robot is close to the knife_2036. 
##############################
From agent.py
putin_executor(bowl_2097, dishwasher_143)
Robot find: Robot is close to the bowl_2097. Robot is close to the bowl_2095. Robot is close to the bowl_2096. Robot is close to the dishwasher_143. Robot is close to the knife_2036. bowl_2097 is inside dishwasher_143. bowl_2097 is close dishwasher_143. dishwasher_143 is close bowl_2097. bowl_2097 released by right hand. 
##############################
From agent.py
walk_executor(plate_2105)
Robot find: Robot is close to the plate_2105. Robot is close to the table_127. 
##############################
From agent.py
grab_executor(plate_2105)
Robot find: Robot is close to the plate_2105. Robot is close to the table_127. Grabbing plate_2105 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the plate_2105. Robot is close to the bowl_2095. Robot is close to the bowl_2096. Robot is close to the bowl_2097. Robot is close to the dishwasher_143. Robot is close to the knife_2036. 
##############################
From agent.py
putin_executor(plate_2105, dishwasher_143)
Robot find: Robot is close to the plate_2105. Robot is close to the bowl_2095. Robot is close to the bowl_2096. Robot is close to the bowl_2097. Robot is close to the dishwasher_143. Robot is close to the knife_2036. plate_2105 is inside dishwasher_143. plate_2105 is close dishwasher_143. dishwasher_143 is close plate_2105. plate_2105 released by right hand. 
##############################
From agent.py
close_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. dishwasher_143 is closed. 
##############################
From agent.py
switchon_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. dishwasher_143 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior wash_forks(fork:item):
    body:
        if dirty(fork):
            wash(fork)

behavior __goal__():
    body:
        foreach fork: item:
            # Wash all forks by hand
            if is_fork(fork) and dirty(fork):
                wash_forks(fork)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior wash_fork_by_hand(fork:item):
    body:
        if dirty(fork):
            wash(fork)
            # Wash the fork by hand

behavior __goal__():
    body:
        foreach fork: item:
            if is_fork(fork) and dirty(fork):
                # Check all forks that are dirty
                wash_fork_by_hand(fork)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior wash_fork(fork:item):
    body:
        if dirty(fork):
            wash(fork) # Wash the fork to make it clean

behavior __goal__():
    body:
        bind fork: item where:
            is_fork(fork) and dirty(fork)
        # Select a fork that is dirty
        wash_fork(fork) # Wash the selected fork

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior hand_wash_fork(fork:item):
    body:
        if dirty(fork):
            wash(fork)
            # Wash the fork by hand

behavior __goal__():
    body:
        foreach fork: item:
            if is_fork(fork) and dirty(fork):
                hand_wash_fork(fork)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_fork_dirty(fork:item):
    # Function to check if a fork is dirty
    return dirty(fork)

behavior clean_fork(fork:item):
    body:
        if is_fork_dirty(fork):
            wash(fork)
            # Wash the fork by hand if its dirty

behavior __goal__():
    body:
        foreach fork: item:
            if is_fork(fork):
                clean_fork(fork)
                # Clean all forks that are dirty

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior wash_fork_by_hand(fork:item):
    body:
        if dirty(fork):
            wash(fork) # Wash the fork to make it clean

behavior __goal__():
    body:
        foreach fork: item:
            if is_fork(fork) and not visited(fork):
                # Locate all unvisited forks to determine which ones are dirty
                observe(fork, "Check if the fork is dirty")
                if dirty(fork):
                    wash_fork_by_hand(fork) # Initiate washing process for dirty forks

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior wash_fork_by_hand(fork:item):
    body:
        if dirty(fork):
            wash(fork) # Wash the fork to make it clean

behavior __goal__():
    body:
        foreach fork: item:
            if is_fork(fork) and not visited(fork):
                # Locate all unvisited forks to determine which ones are dirty
                observe(fork, "Check if the fork is dirty")
                if dirty(fork):
                    wash_fork_by_hand(fork) # Initiate washing process for dirty forks

##############################
From agent.py-> find a plan in act()
walk_executor(fork_2103)obs(fork_2103, Check if the fork is dirty)walk_executor(fork_2104)obs(fork_2104, Check if the fork is dirty)
##############################
From agent.py
walk_executor(fork_2103)
Robot find: Robot is close to the table_123. Robot is close to the fork_2103. 
##############################
From agent.py
obs(fork_2103, Check if the fork is dirty)
Get this information:  fork_2103 is inside dining_room_1. fork_2103 is close to table_123. fork_2103 is close to character_219. fork_2103 is on table_123. fork_2103 is CLEAN.
##############################
From agent.py
walk_executor(fork_2104)
Robot find: Robot is close to the fork_2104. Robot is close to the table_127. 
##############################
From agent.py
obs(fork_2104, Check if the fork is dirty)
Get this information:  fork_2104 is on table_127. fork_2104 is inside dining_room_1. fork_2104 is close to table_127. fork_2104 is close to character_219. fork_2104 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Wash the bowls and plates with dishwasher. And wash forks by hand.
Action History:
['walk_executor(dishwasher_143)', 'switchon_executor(dishwasher_143)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(cupboard_130)', 'walk_executor(kitchen_counter_132)', 'walk_executor(sink_133)', 'walk_executor(kitchen_counter_129)', 'walk_executor(kitchen_counter_128)', 'walk_executor(table_123)', 'walk_executor(dishwasher_143)', 'switchoff_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'walk_executor(bowl_2095)', 'grab_executor(bowl_2095)', 'walk_executor(dishwasher_143)', 'putin_executor(bowl_2095, dishwasher_143)', 'walk_executor(table_123)', 'walk_executor(table_127)', 'walk_executor(bowl_2096)', 'grab_executor(bowl_2096)', 'walk_executor(dishwasher_143)', 'putin_executor(bowl_2096, dishwasher_143)', 'walk_executor(bowl_2097)', 'grab_executor(bowl_2097)', 'walk_executor(dishwasher_143)', 'putin_executor(bowl_2097, dishwasher_143)', 'walk_executor(plate_2105)', 'grab_executor(plate_2105)', 'walk_executor(dishwasher_143)', 'putin_executor(plate_2105, dishwasher_143)', 'close_executor(dishwasher_143)', 'switchon_executor(dishwasher_143)', 'walk_executor(fork_2103)', 'walk_executor(fork_2104)']
Time info:
Time consume: 222 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 8
goal correct times: 0
action_num: 35

Task complete rate:
Keystate: k1 - Requires: 0 steps
Action Completion Rate: 0.0
Scene_id: 2
##############################
