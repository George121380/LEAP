From agent.py
Reset goals: The sub-goals are: 
['1. Find the basket containing clothes.', '2. Use the washing machine to wash all the clothes from the basket.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_pants_2113_around_basket_for_clothes_2040(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_pants,basket_for_clothes_instance)
        else:
            exp(clothes_pants,basket_for_clothes_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_pants]=True
    

behavior find_clothes_underwear_2022_around_basket_for_clothes_2040(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_underwear,basket_for_clothes_instance)
        else:
            exp(clothes_underwear,basket_for_clothes_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_underwear]=True
    

behavior find_clothes_skirt_2116_around_basket_for_clothes_2040(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

behavior find_clothes_hat_2076_around_basket_for_clothes_2040(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_hat,basket_for_clothes_instance)
        else:
            exp(clothes_hat,basket_for_clothes_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_hat]=True
    

behavior find_clothes_dress_2075_around_basket_for_clothes_2040(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_dress,basket_for_clothes_instance)
        else:
            exp(clothes_dress,basket_for_clothes_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_dress]=True
    

behavior find_clothes_gloves_2077_around_basket_for_clothes_2040(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_gloves,basket_for_clothes_instance)
        else:
            exp(clothes_gloves,basket_for_clothes_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_gloves]=True
    

behavior find_clothes_socks_2115_around_basket_for_clothes_2040(clothes_socks:item):
    goal: not unknown(clothes_socks)
    body:
        assert is_clothes_socks(clothes_socks)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_socks,basket_for_clothes_instance)
        else:
            exp(clothes_socks,basket_for_clothes_instance)
    eff:
        unknown[clothes_socks]=False
        close[clothes_socks,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_socks]=True
    

behavior find_clothes_shirt_2114_around_basket_for_clothes_2040(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_shirt,basket_for_clothes_instance)
        else:
            exp(clothes_shirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_shirt]=True
    

behavior find_clothes_jacket_2078_around_basket_for_clothes_2040(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_jacket,basket_for_clothes_instance)
        else:
            exp(clothes_jacket,basket_for_clothes_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_jacket]=True
    

behavior find_clothes_scarf_2079_around_basket_for_clothes_2040(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_scarf,basket_for_clothes_instance)
        else:
            exp(clothes_scarf,basket_for_clothes_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_scarf]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothes_in_basket(basket: item):
    # Function to check if there are clothes in the specified basket
    symbol has_clothes=exists o: item : (is_clothes(o) and inside(o, basket))
    return has_clothes

behavior __goal__():
    body:
        if exists basket: item : is_basket_for_clothes(basket) and is_clothes_in_basket(basket):
            # If we have already found the basket with clothes, we can directly approach it
            bind basket: item where:
                is_basket_for_clothes(basket) and is_clothes_in_basket(basket)
            walk_to(basket)

        else:
            # If no basket with clothes is found in known information, initiate exploration
            foreach basket: item:
                if is_basket_for_clothes(basket) and not visited(basket):
                    observe(basket, "Check if there are any clothes in the basket")

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_clothes_in_basket(basket: item):
    # Function to check if there are clothes in the specified basket
    symbol has_clothes=exists o: item : (is_clothes(o) and inside(o, basket))
    return has_clothes

behavior __goal__():
    body:
        if exists basket: item : is_basket_for_clothes(basket) and is_clothes_in_basket(basket):
            # If we have already found the basket with clothes, we can directly approach it
            bind basket: item where:
                is_basket_for_clothes(basket) and is_clothes_in_basket(basket)
            walk_to(basket)

        else:
            # If no basket with clothes is found in known information, initiate exploration
            foreach basket: item:
                if is_basket_for_clothes(basket) and not visited(basket):
                    observe(basket, "Check if there are any clothes in the basket")

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)obs(basket_for_clothes_2040, Check if there are any clothes in the basket)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Robot find: clothes_pants_2113, clothes_shirt_2114, clothes_socks_2115, clothes_skirt_2116, Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. 
##############################
From agent.py
obs(basket_for_clothes_2040, Check if there are any clothes in the basket)
Get this information:  clothes_skirt_2116 is inside basket_for_clothes_2040. basket_for_clothes_2040 is inside bathroom_265. clothes_socks_2115 is inside basket_for_clothes_2040. basket_for_clothes_2040 is close to clothes_pants_2113. basket_for_clothes_2040 is close to clothes_shirt_2114. basket_for_clothes_2040 is close to clothes_socks_2115. basket_for_clothes_2040 is close to clothes_skirt_2116. basket_for_clothes_2040 is close to bathtub_297. basket_for_clothes_2040 is close to window_287. basket_for_clothes_2040 is close to character_219. clothes_pants_2113 is inside basket_for_clothes_2040. clothes_shirt_2114 is inside basket_for_clothes_2040. basket_for_clothes_2040 is OPEN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_underwear_2022_around_washing_machine_2041(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_underwear,washing_machine_instance)
        else:
            exp(clothes_underwear,washing_machine_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,washing_machine_instance]=True
        close[washing_machine_instance,clothes_underwear]=True
    

behavior find_clothes_hat_2076_around_washing_machine_2041(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_hat,washing_machine_instance)
        else:
            exp(clothes_hat,washing_machine_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,washing_machine_instance]=True
        close[washing_machine_instance,clothes_hat]=True
    

behavior find_clothes_dress_2075_around_faucet_308(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind faucet_instance:item where:
            is_faucet(faucet_instance) and id[faucet_instance]==308
        achieve close_char(char,faucet_instance)
        if can_open(faucet_instance):
            achieve_once open(faucet_instance)
            exp(clothes_dress,faucet_instance)
        else:
            exp(clothes_dress,faucet_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,faucet_instance]=True
        close[faucet_instance,clothes_dress]=True
    

behavior find_clothes_gloves_2077_around_faucet_308(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind faucet_instance:item where:
            is_faucet(faucet_instance) and id[faucet_instance]==308
        achieve close_char(char,faucet_instance)
        if can_open(faucet_instance):
            achieve_once open(faucet_instance)
            exp(clothes_gloves,faucet_instance)
        else:
            exp(clothes_gloves,faucet_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,faucet_instance]=True
        close[faucet_instance,clothes_gloves]=True
    

behavior find_clothes_jacket_2078_around_washing_machine_2041(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

behavior find_clothes_scarf_2079_around_faucet_308(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind faucet_instance:item where:
            is_faucet(faucet_instance) and id[faucet_instance]==308
        achieve close_char(char,faucet_instance)
        if can_open(faucet_instance):
            achieve_once open(faucet_instance)
            exp(clothes_scarf,faucet_instance)
        else:
            exp(clothes_scarf,faucet_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,faucet_instance]=True
        close[faucet_instance,clothes_scarf]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_clothes_in_machine(c: item, washing_machine: item):
    body:
        if not inside(c, washing_machine):
            put_inside(c, washing_machine)

behavior start_washing_machine(washing_machine: item):
    body:
        if open(washing_machine):
            closes(washing_machine) # Close the washing machines door
        if is_off(washing_machine):
            switch_on(washing_machine) # Turn on the washing machine to start washing the clothes

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket)
        # Select the clothes basket
        
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        foreach c: item:
        # Load all clothes from the basket into the washing machine
            if is_clothes(c) and inside(c, basket):
                load_clothes_in_machine(c, washing_machine)
                
        start_washing_machine(washing_machine) # Start the washing machine

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_clothes_in_machine(c: item, washing_machine: item):
    body:
        if not inside(c, washing_machine):
            put_inside(c, washing_machine)

behavior start_washing_machine(washing_machine: item):
    body:
        if open(washing_machine):
            closes(washing_machine) # Close the washing machines door
        if is_off(washing_machine):
            switch_on(washing_machine) # Turn on the washing machine to start washing the clothes

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket)
        # Select the clothes basket
        
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        foreach c: item:
        # Load all clothes from the basket into the washing machine
            if is_clothes(c) and inside(c, basket):
                load_clothes_in_machine(c, washing_machine)
                
        start_washing_machine(washing_machine) # Start the washing machine

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2041)open_executor(washing_machine_2041)walk_executor(clothes_pants_2113)grab_executor(clothes_pants_2113)walk_executor(washing_machine_2041)putin_executor(clothes_pants_2113, washing_machine_2041)walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)walk_executor(washing_machine_2041)putin_executor(clothes_shirt_2114, washing_machine_2041)walk_executor(clothes_socks_2115)grab_executor(clothes_socks_2115)walk_executor(washing_machine_2041)putin_executor(clothes_socks_2115, washing_machine_2041)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(washing_machine_2041)putin_executor(clothes_skirt_2116, washing_machine_2041)close_executor(washing_machine_2041)plugin_executor(washing_machine_2041)switchon_executor(washing_machine_2041)
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. 
##############################
From agent.py
open_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. washing_machine_2041 is opened. 
##############################
From agent.py
walk_executor(clothes_pants_2113)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_pants_2113. 
##############################
From agent.py
grab_executor(clothes_pants_2113)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_pants_2113. Grabbing clothes_pants_2113 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot find: Robot is close to the clothes_pants_2113. Robot is close to the washing_machine_2041. 
##############################
From agent.py
putin_executor(clothes_pants_2113, washing_machine_2041)
Robot find: Robot is close to the clothes_pants_2113. Robot is close to the washing_machine_2041. washing_machine_2041 is close clothes_pants_2113. clothes_pants_2113 is close washing_machine_2041. clothes_pants_2113 is inside washing_machine_2041. clothes_pants_2113 released by right hand. 
##############################
From agent.py
walk_executor(clothes_shirt_2114)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_shirt_2114. 
##############################
From agent.py
grab_executor(clothes_shirt_2114)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_shirt_2114. Grabbing clothes_shirt_2114 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the clothes_pants_2113. Robot is close to the washing_machine_2041. 
##############################
From agent.py
putin_executor(clothes_shirt_2114, washing_machine_2041)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the clothes_pants_2113. Robot is close to the washing_machine_2041. washing_machine_2041 is close clothes_shirt_2114. clothes_shirt_2114 is close washing_machine_2041. clothes_shirt_2114 is inside washing_machine_2041. clothes_shirt_2114 released by right hand. 
##############################
From agent.py
walk_executor(clothes_socks_2115)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_socks_2115. 
##############################
From agent.py
grab_executor(clothes_socks_2115)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_socks_2115. Grabbing clothes_socks_2115 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot find: Robot is close to the clothes_socks_2115. Robot is close to the clothes_pants_2113. Robot is close to the washing_machine_2041. Robot is close to the clothes_shirt_2114. 
##############################
From agent.py
putin_executor(clothes_socks_2115, washing_machine_2041)
Robot find: Robot is close to the clothes_socks_2115. Robot is close to the clothes_pants_2113. Robot is close to the washing_machine_2041. Robot is close to the clothes_shirt_2114. washing_machine_2041 is close clothes_socks_2115. clothes_socks_2115 is inside washing_machine_2041. clothes_socks_2115 is close washing_machine_2041. clothes_socks_2115 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2116)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_skirt_2116. 
##############################
From agent.py
grab_executor(clothes_skirt_2116)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_skirt_2116. Grabbing clothes_skirt_2116 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the clothes_pants_2113. Robot is close to the washing_machine_2041. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. 
##############################
From agent.py
putin_executor(clothes_skirt_2116, washing_machine_2041)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the clothes_pants_2113. Robot is close to the washing_machine_2041. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. clothes_skirt_2116 is inside washing_machine_2041. washing_machine_2041 is close clothes_skirt_2116. clothes_skirt_2116 is close washing_machine_2041. clothes_skirt_2116 released by right hand. 
##############################
From agent.py
close_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. washing_machine_2041 is closed. 
##############################
From agent.py
plugin_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. washing_machine_2041 is plugged in. 
##############################
From agent.py
switchon_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. washing_machine_2041 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Wash all the clothes in the basket for clothes by washing machine.
Action History:
['walk_executor(basket_for_clothes_2040)', 'walk_executor(washing_machine_2041)', 'open_executor(washing_machine_2041)', 'walk_executor(clothes_pants_2113)', 'grab_executor(clothes_pants_2113)', 'walk_executor(washing_machine_2041)', 'putin_executor(clothes_pants_2113, washing_machine_2041)', 'walk_executor(clothes_shirt_2114)', 'grab_executor(clothes_shirt_2114)', 'walk_executor(washing_machine_2041)', 'putin_executor(clothes_shirt_2114, washing_machine_2041)', 'walk_executor(clothes_socks_2115)', 'grab_executor(clothes_socks_2115)', 'walk_executor(washing_machine_2041)', 'putin_executor(clothes_socks_2115, washing_machine_2041)', 'walk_executor(clothes_skirt_2116)', 'grab_executor(clothes_skirt_2116)', 'walk_executor(washing_machine_2041)', 'putin_executor(clothes_skirt_2116, washing_machine_2041)', 'close_executor(washing_machine_2041)', 'plugin_executor(washing_machine_2041)', 'switchon_executor(washing_machine_2041)']
Time info:
Time consume: 82 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 2
goal correct times: 0
action_num: 22

Task complete rate:
1
Scene_id: 2
##############################
