From agent.py
Reset goals: The sub-goals are: 
['Turn on the lights in the bedroom. Then turn on the lights in the bathroom.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_bathroom_cabinet_305(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

behavior find_toilet_paper_2118_around_bathroom_cabinet_305(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(toilet_paper,bathroom_cabinet_instance)
        else:
            exp(toilet_paper,bathroom_cabinet_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,toilet_paper]=True
    

behavior find_soap_2037_around_bathroom_cabinet_305(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation

behavior turn_on_lights_in_room(room_type:function):
    body:
        bind room: item where:
            room_type(room)
        bind light: item where:
            is_light(light) and inside(light, room)
        if is_off(light):
            switch_on(light)

def is_bedroom(room:item):
    symbol is_in_bedroom=exists r: item : (is_bedroom(r) and inside(room, r))
    return is_in_bedroom

def is_bathroom(room:item):
    symbol is_in_bathroom=exists r: item : (is_bathroom(r) and inside(room, r))
    return is_in_bathroom

behavior __goal__():
    body:
        turn_on_lights_in_room(is_bedroom)
        turn_on_lights_in_room(is_bathroom)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation

behavior switch_on_bedroom_light(light_bedroom:item):
    body:
        if is_off(light_bedroom):
            switch_on(light_bedroom)

behavior switch_on_bathroom_light(light_bathroom:item):
    body:
        if is_off(light_bathroom):
            switch_on(light_bathroom)

behavior __goal__():
    body:
        bind light_bedroom: item where:
            is_light(light_bedroom) and inside(light_bedroom, bedroom)
        switch_on_bedroom_light(light_bedroom)

        bind light_bathroom: item where:
            is_light(light_bathroom) and inside(light_bathroom, bathroom)
        switch_on_bathroom_light(light_bathroom)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_light(obj:item):
    body:
        if is_off(obj):
            switch_on(obj)

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        # Turn on the light in the bedroom
        foreach light: item:
            if is_light(light) and inside(light, bedroom):
                turn_on_light(light)

        bind bathroom: item where:
            is_bathroom(bathroom)
        # Turn on the light in the bathroom
        foreach light: item:
            if is_light(light) and inside(light, bathroom):
                turn_on_light(light)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior turn_on_light(obj:item):
    body:
        if is_off(obj):
            switch_on(obj)

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        # Turn on the light in the bedroom
        foreach light: item:
            if is_light(light) and inside(light, bedroom):
                turn_on_light(light)

        bind bathroom: item where:
            is_bathroom(bathroom)
        # Turn on the light in the bathroom
        foreach light: item:
            if is_light(light) and inside(light, bathroom):
                turn_on_light(light)

##############################
From agent.py-> find a plan in act()
walk_executor(light_258)switchon_executor(light_258)walk_executor(light_325)switchon_executor(light_325)
##############################
From agent.py
walk_executor(light_258)
Robot find: drawing_238, Robot is close to the light_258. 
##############################
From agent.py
switchon_executor(light_258)
Robot find: Robot is close to the light_258. light_258 is turned on. 
##############################
From agent.py
walk_executor(light_325)
Robot find: drawing_296, mat_292, Robot is close to the light_325. 
##############################
From agent.py
switchon_executor(light_325)
Robot find: Robot is close to the light_325. light_325 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Turn on the lights in the bedroom. Then turn on the lights in the bathroom.
Action History:
['walk_executor(light_258)', 'switchon_executor(light_258)', 'walk_executor(light_325)', 'switchon_executor(light_325)']
Time info:
Time consume: 54 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 3
goal correct times: 0
action_num: 4

Task complete rate:
1
Scene_id: 2
##############################
