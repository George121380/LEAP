From agent.py
Reset goals: The sub-goals are: 
['Make a bowl of egg salad with boiled egg, lemon, and vegetables.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_vegetable_2041_around_fridge_289(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_vegetable,fridge_instance)
        else:
            exp(food_vegetable,fridge_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,fridge_instance]=True
        close[fridge_instance,food_vegetable]=True
    

behavior find_bowl_2072_around_kitchen_counter_230(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

behavior find_food_carrot_2014_around_fridge_289(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_carrot,fridge_instance)
        else:
            exp(food_carrot,fridge_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,fridge_instance]=True
        close[fridge_instance,food_carrot]=True
    

behavior find_food_egg_2020_around_fridge_289(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_food_lemon_2028_around_fridge_289(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_lemon,fridge_instance)
        else:
            exp(food_lemon,fridge_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,fridge_instance]=True
        close[fridge_instance,food_lemon]=True
    

behavior find_knife_2050_around_kitchen_counter_230(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(knife,kitchen_counter_instance)
        else:
            exp(knife,kitchen_counter_instance)
    eff:
        unknown[knife]=False
        close[knife,kitchen_counter_instance]=True
        close[kitchen_counter_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior squeeze_lemon(lemon:item):
    body:
        achieve_once cut(lemon)
        # Slice the lemon
        squeeze(lemon)
        # Squeeze the lemon to extract juice

behavior cut_vegetables(vegetable:item):
    body:
        achieve_once cut(vegetable)
        # Slice the vegetable

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select the boiled egg

        bind lemon: item where:
            is_food_lemon(lemon)
        # Select the lemon

        bind vegetables: item where:
            is_food_vegetable(vegetables)
        # Select the vegetables

        bind bowl: item where:
            is_bowl(bowl)
        # Select the bowl for the salad

        achieve_once cut(egg)
        # Chop the boiled egg

        squeeze_lemon(lemon)
        # Prepare lemon juice

        cut_vegetables(vegetables)
        # Chop the vegetables

        achieve_once inside(egg, bowl)
        # Add chopped egg to the bowl

        achieve_once inside(vegetables, bowl)
        # Add chopped vegetables to the bowl

        achieve_once inside(lemon, bowl)
        # Add lemon juice to the bowl to complete the salad

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior squeeze_lemon(lemon:item):
    body:
        achieve_once cut(lemon)
        # Slice the lemon
        squeeze(lemon)
        # Squeeze the lemon to extract juice

behavior cut_vegetables(vegetable:item):
    body:
        achieve_once cut(vegetable)
        # Slice the vegetable

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select the boiled egg

        bind lemon: item where:
            is_food_lemon(lemon)
        # Select the lemon

        bind vegetables: item where:
            is_food_vegetable(vegetables)
        # Select the vegetables

        bind bowl: item where:
            is_bowl(bowl)
        # Select the bowl for the salad

        achieve_once cut(egg)
        # Chop the boiled egg

        squeeze_lemon(lemon)
        # Prepare lemon juice

        cut_vegetables(vegetables)
        # Chop the vegetables

        achieve_once inside(egg, bowl)
        # Add chopped egg to the bowl

        achieve_once inside(vegetables, bowl)
        # Add chopped vegetables to the bowl

        achieve_once inside(lemon, bowl)
        # Add lemon juice to the bowl to complete the salad

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_egg_2020, fridge_289)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(cutting_board_2051)put_executor(food_egg_2020, cutting_board_2051)walk_executor(kitchen_counter_230)exp(knife_2050, kitchen_counter_230)walk_executor(knife_2050)grab_executor(knife_2050)walk_executor(food_egg_2020)cut_executor(food_egg_2020)walk_executor(fridge_289)exp(food_lemon_2028, fridge_289)walk_executor(food_lemon_2028)grab_executor(food_lemon_2028)walk_executor(cutting_board_2051)put_executor(food_lemon_2028, cutting_board_2051)walk_executor(food_lemon_2028)cut_executor(food_lemon_2028)walk_executor(fridge_289)exp(food_vegetable_2041, fridge_289)walk_executor(food_vegetable_2041)grab_executor(food_vegetable_2041)walk_executor(cutting_board_2051)put_executor(food_vegetable_2041, cutting_board_2051)walk_executor(food_vegetable_2041)cut_executor(food_vegetable_2041)walk_executor(kitchen_counter_230)exp(bowl_2072, kitchen_counter_230)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(bowl_2072)putin_executor(food_egg_2020, bowl_2072)walk_executor(food_vegetable_2041)grab_executor(food_vegetable_2041)walk_executor(bowl_2072)putin_executor(food_vegetable_2041, bowl_2072)walk_executor(food_lemon_2028)grab_executor(food_lemon_2028)walk_executor(bowl_2072)putin_executor(food_lemon_2028, bowl_2072)
##############################
From agent.py
walk_executor(fridge_289)
Robot find: drawing_240, drawing_239, Robot is close to the fridge_289. 
##############################
From agent.py
switchoff_executor(fridge_289)
Robot find: Robot is close to the fridge_289. fridge_289 is turned off. 
##############################
From agent.py
open_executor(fridge_289)
Robot find: sauce_2078, food_steak_2008, food_apple_2009, food_bacon_2010, food_banana_2011, food_bread_2012, food_cake_2013, food_carrot_2014, food_cereal_2015, food_cheese_2016, food_chicken_2017, food_dessert_2018, food_donut_2019, food_egg_2020, food_fish_2021, food_food_2022, food_fruit_2023, food_hamburger_2024, food_ice_cream_2025, food_jam_2026, food_kiwi_2027, food_lemon_2028, food_noodles_2029, food_oatmeal_2030, food_orange_2031, food_onion_2032, food_peanut_butter_2033, food_pizza_2034, food_potato_2035, food_rice_2036, food_salt_2037, food_snack_2038, food_sugar_2039, food_turkey_2040, food_vegetable_2041, dry_pasta_2042, milk_2043, Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. fridge_289 is opened. 
##############################
From agent.py
exp(food_egg_2020, fridge_289)
Find food_egg_2020. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_egg_2020)walk_executor(cutting_board_2051)put_executor(food_egg_2020, cutting_board_2051)walk_executor(kitchen_counter_230)exp(knife_2050, kitchen_counter_230)walk_executor(knife_2050)grab_executor(knife_2050)walk_executor(food_egg_2020)cut_executor(food_egg_2020)walk_executor(food_lemon_2028)grab_executor(food_lemon_2028)walk_executor(cutting_board_2051)put_executor(food_lemon_2028, cutting_board_2051)walk_executor(food_lemon_2028)cut_executor(food_lemon_2028)walk_executor(food_vegetable_2041)grab_executor(food_vegetable_2041)walk_executor(cutting_board_2051)put_executor(food_vegetable_2041, cutting_board_2051)walk_executor(food_vegetable_2041)cut_executor(food_vegetable_2041)walk_executor(kitchen_counter_230)exp(bowl_2072, kitchen_counter_230)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(bowl_2072)putin_executor(food_egg_2020, bowl_2072)walk_executor(food_vegetable_2041)grab_executor(food_vegetable_2041)walk_executor(bowl_2072)putin_executor(food_vegetable_2041, bowl_2072)walk_executor(food_lemon_2028)grab_executor(food_lemon_2028)walk_executor(bowl_2072)putin_executor(food_lemon_2028, bowl_2072)
##############################
From agent.py
grab_executor(food_egg_2020)
Robot find: Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. Grabbing food_egg_2020 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2051)
Robot find: drawing_238, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the food_egg_2020. Robot is close to the cutting_board_2051. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
put_executor(food_egg_2020, cutting_board_2051)
Robot find: Robot is close to the food_egg_2020. Robot is close to the cutting_board_2051. Robot is close to the kitchen_counter_230. cutting_board_2051 is close food_egg_2020. food_egg_2020 is close cutting_board_2051. food_egg_2020 is on cutting_board_2051. food_egg_2020 released by right hand. 
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: Robot is close to the kitchen_counter_230. 
##############################
From agent.py
exp(knife_2050, kitchen_counter_230)
Find knife_2050. 
##############################
From agent.py-> find a plan in act()
walk_executor(knife_2050)grab_executor(knife_2050)walk_executor(food_egg_2020)cut_executor(food_egg_2020)walk_executor(food_lemon_2028)grab_executor(food_lemon_2028)walk_executor(cutting_board_2051)put_executor(food_lemon_2028, cutting_board_2051)walk_executor(food_lemon_2028)cut_executor(food_lemon_2028)walk_executor(food_vegetable_2041)grab_executor(food_vegetable_2041)walk_executor(cutting_board_2051)put_executor(food_vegetable_2041, cutting_board_2051)walk_executor(food_vegetable_2041)cut_executor(food_vegetable_2041)walk_executor(kitchen_counter_230)exp(bowl_2072, kitchen_counter_230)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(bowl_2072)putin_executor(food_egg_2020, bowl_2072)walk_executor(food_vegetable_2041)grab_executor(food_vegetable_2041)walk_executor(bowl_2072)putin_executor(food_vegetable_2041, bowl_2072)walk_executor(food_lemon_2028)grab_executor(food_lemon_2028)walk_executor(bowl_2072)putin_executor(food_lemon_2028, bowl_2072)
##############################
From agent.py
walk_executor(knife_2050)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the knife_2050. 
##############################
From agent.py
grab_executor(knife_2050)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the knife_2050. Grabbing knife_2050 by right hand. 
##############################
From agent.py
walk_executor(food_egg_2020)
Robot find: Robot is close to the knife_2050. Robot is close to the cutting_board_2051. Robot is close to the food_egg_2020. 
##############################
From agent.py
cut_executor(food_egg_2020)
Robot find: Robot is close to the knife_2050. Robot is close to the cutting_board_2051. Robot is close to the food_egg_2020. 
##############################
From agent.py
walk_executor(food_lemon_2028)
Robot find: Robot is close to the knife_2050. Robot is close to the fridge_289. Robot is close to the food_lemon_2028. 
##############################
From agent.py
grab_executor(food_lemon_2028)
Robot find: Robot is close to the knife_2050. Robot is close to the fridge_289. Robot is close to the food_lemon_2028. Grabbing food_lemon_2028 by left hand. 
##############################
From agent.py
walk_executor(cutting_board_2051)
Robot find: Robot is close to the knife_2050. Robot is close to the food_lemon_2028. Robot is close to the cutting_board_2051. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
put_executor(food_lemon_2028, cutting_board_2051)
Robot find: Robot is close to the knife_2050. Robot is close to the food_lemon_2028. Robot is close to the cutting_board_2051. Robot is close to the kitchen_counter_230. cutting_board_2051 is close food_lemon_2028. food_lemon_2028 is close cutting_board_2051. food_lemon_2028 is on cutting_board_2051. food_lemon_2028 released by left hand. 
##############################
From agent.py
walk_executor(food_lemon_2028)
Robot find: Robot is close to the knife_2050. Robot is close to the food_lemon_2028. Robot is close to the cutting_board_2051. 
##############################
From agent.py
cut_executor(food_lemon_2028)
Robot find: Robot is close to the knife_2050. Robot is close to the food_lemon_2028. Robot is close to the cutting_board_2051. 
##############################
From agent.py
walk_executor(food_vegetable_2041)
Robot find: Robot is close to the knife_2050. Robot is close to the fridge_289. Robot is close to the food_vegetable_2041. 
##############################
From agent.py
grab_executor(food_vegetable_2041)
Robot find: Robot is close to the knife_2050. Robot is close to the fridge_289. Robot is close to the food_vegetable_2041. Grabbing food_vegetable_2041 by left hand. 
##############################
From agent.py
walk_executor(cutting_board_2051)
Robot find: Robot is close to the knife_2050. Robot is close to the food_vegetable_2041. Robot is close to the cutting_board_2051. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
put_executor(food_vegetable_2041, cutting_board_2051)
Robot find: Robot is close to the knife_2050. Robot is close to the food_vegetable_2041. Robot is close to the cutting_board_2051. Robot is close to the kitchen_counter_230. cutting_board_2051 is close food_vegetable_2041. food_vegetable_2041 is close cutting_board_2051. food_vegetable_2041 is on cutting_board_2051. food_vegetable_2041 released by left hand. 
##############################
From agent.py
walk_executor(food_vegetable_2041)
Robot find: Robot is close to the knife_2050. Robot is close to the food_vegetable_2041. Robot is close to the cutting_board_2051. 
##############################
From agent.py
cut_executor(food_vegetable_2041)
Robot find: Robot is close to the knife_2050. Robot is close to the food_vegetable_2041. Robot is close to the cutting_board_2051. 
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: Robot is close to the knife_2050. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
exp(bowl_2072, kitchen_counter_230)
Fail to find bowl_2072 around kitchen_counter_230. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_lemon_2028)walk_executor(cupboard_229)open_executor(cupboard_229)exp(bowl_2072, cupboard_229)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(bowl_2072)putin_executor(food_egg_2020, bowl_2072)walk_executor(food_vegetable_2041)grab_executor(food_vegetable_2041)walk_executor(bowl_2072)putin_executor(food_vegetable_2041, bowl_2072)walk_executor(food_lemon_2028)grab_executor(food_lemon_2028)walk_executor(bowl_2072)putin_executor(food_lemon_2028, bowl_2072)
##############################
From agent.py
walk_executor(food_lemon_2028)
Robot find: Robot is close to the knife_2050. Robot is close to the cutting_board_2051. Robot is close to the food_lemon_2028. 
##############################
From agent.py
walk_executor(cupboard_229)
Robot find: Robot is close to the knife_2050. Robot is close to the cupboard_229. 
##############################
From agent.py
open_executor(cupboard_229)
Robot find: Robot is close to the knife_2050. Robot is close to the cupboard_229. cupboard_229 is opened. 
##############################
From agent.py
exp(bowl_2072, cupboard_229)
Fail to find bowl_2072 around cupboard_229. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_lemon_2028)walk_executor(fryingpan_2083)exp(bowl_2072, fryingpan_2083)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(bowl_2072)putin_executor(food_egg_2020, bowl_2072)walk_executor(food_vegetable_2041)grab_executor(food_vegetable_2041)walk_executor(bowl_2072)putin_executor(food_vegetable_2041, bowl_2072)walk_executor(food_lemon_2028)grab_executor(food_lemon_2028)walk_executor(bowl_2072)putin_executor(food_lemon_2028, bowl_2072)
##############################
From agent.py
walk_executor(food_lemon_2028)
Robot find: Robot is close to the knife_2050. Robot is close to the cutting_board_2051. Robot is close to the food_lemon_2028. 
##############################
From agent.py
walk_executor(fryingpan_2083)
Robot find: Robot is close to the knife_2050. Robot is close to the fryingpan_2083. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
exp(bowl_2072, fryingpan_2083)
Fail to find bowl_2072 around fryingpan_2083. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_lemon_2028)walk_executor(wallshelf_35)exp(bowl_2072, wallshelf_35)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(bowl_2072)putin_executor(food_egg_2020, bowl_2072)walk_executor(food_vegetable_2041)grab_executor(food_vegetable_2041)walk_executor(bowl_2072)putin_executor(food_vegetable_2041, bowl_2072)walk_executor(food_lemon_2028)grab_executor(food_lemon_2028)walk_executor(bowl_2072)putin_executor(food_lemon_2028, bowl_2072)
##############################
From agent.py
walk_executor(food_lemon_2028)
Robot find: Robot is close to the knife_2050. Robot is close to the cutting_board_2051. Robot is close to the food_lemon_2028. 
##############################
From agent.py
walk_executor(wallshelf_35)
Robot find: towel_rack_33, towel_rack_34, Robot is close to the knife_2050. Robot is close to the wallshelf_35. 
##############################
From agent.py
exp(bowl_2072, wallshelf_35)
Fail to find bowl_2072 around wallshelf_35. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_lemon_2028)walk_executor(wallshelf_234)exp(bowl_2072, wallshelf_234)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(bowl_2072)putin_executor(food_egg_2020, bowl_2072)walk_executor(food_vegetable_2041)grab_executor(food_vegetable_2041)walk_executor(bowl_2072)putin_executor(food_vegetable_2041, bowl_2072)walk_executor(food_lemon_2028)grab_executor(food_lemon_2028)walk_executor(bowl_2072)putin_executor(food_lemon_2028, bowl_2072)
##############################
From agent.py
walk_executor(food_lemon_2028)
Robot find: Robot is close to the knife_2050. Robot is close to the cutting_board_2051. Robot is close to the food_lemon_2028. 
##############################
From agent.py
walk_executor(wallshelf_234)
Robot find: Robot is close to the knife_2050. Robot is close to the wallshelf_234. 
##############################
From agent.py
exp(bowl_2072, wallshelf_234)
Fail to find bowl_2072 around wallshelf_234. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_lemon_2028)walk_executor(wallshelf_235)exp(bowl_2072, wallshelf_235)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(bowl_2072)putin_executor(food_egg_2020, bowl_2072)walk_executor(food_vegetable_2041)grab_executor(food_vegetable_2041)walk_executor(bowl_2072)putin_executor(food_vegetable_2041, bowl_2072)walk_executor(food_lemon_2028)grab_executor(food_lemon_2028)walk_executor(bowl_2072)putin_executor(food_lemon_2028, bowl_2072)
##############################
From agent.py
walk_executor(food_lemon_2028)
Robot find: Robot is close to the knife_2050. Robot is close to the cutting_board_2051. Robot is close to the food_lemon_2028. 
##############################
From agent.py
walk_executor(wallshelf_235)
Robot find: Robot is close to the knife_2050. Robot is close to the wallshelf_235. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2072 ?
Answer: The bowl_2072 is located inside the dining_room_201. You will find it on top of table_226.
Re-decompose: None

##############################
From agent.py
Human Instruction: The bowl_2072 is located inside the dining_room_201. You will find it on top of table_226.

The actions you have taken:
Action 1: Walk to fridge_289.
Action 2: Switch off fridge_289.
Action 3: Open fridge_289.
Action 4: look for food_egg_2020 around fridge_289.
Action 5: Grab food_egg_2020.
Action 6: Walk to cutting_board_2051.
Action 7: Put food_egg_2020 on cutting_board_2051.
Action 8: Walk to kitchen_counter_230.
Action 9: look for knife_2050 around kitchen_counter_230.
Action 10: Walk to knife_2050.
Action 11: Grab knife_2050.
Action 12: Walk to food_egg_2020.
Action 13: Cut food_egg_2020.
Action 14: Walk to food_lemon_2028.
Action 15: Grab food_lemon_2028.
Action 16: Walk to cutting_board_2051.
Action 17: Put food_lemon_2028 on cutting_board_2051.
Action 18: Walk to food_lemon_2028.
Action 19: Cut food_lemon_2028.
Action 20: Walk to food_vegetable_2041.
Action 21: Grab food_vegetable_2041.
Action 22: Walk to cutting_board_2051.
Action 23: Put food_vegetable_2041 on cutting_board_2051.
Action 24: Walk to food_vegetable_2041.
Action 25: Cut food_vegetable_2041.
Action 26: Walk to kitchen_counter_230.
Action 27: look for bowl_2072 around kitchen_counter_230.
Action 28: Walk to food_lemon_2028.
Action 29: Walk to cupboard_229.
Action 30: Open cupboard_229.
Action 31: look for bowl_2072 around cupboard_229.
Action 32: Walk to food_lemon_2028.
Action 33: Walk to fryingpan_2083.
Action 34: look for bowl_2072 around fryingpan_2083.
Action 35: Walk to food_lemon_2028.
Action 36: Walk to wallshelf_35.
Action 37: look for bowl_2072 around wallshelf_35.
Action 38: Walk to food_lemon_2028.
Action 39: Walk to wallshelf_234.
Action 40: look for bowl_2072 around wallshelf_234.
Action 41: Walk to food_lemon_2028.
Action 42: Walk to wallshelf_235.

##############################
From agent.py
exp(bowl_2072, wallshelf_235)
Fail to find bowl_2072 around wallshelf_235. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_lemon_2028)walk_executor(table_226)exp(bowl_2072, table_226)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(bowl_2072)putin_executor(food_egg_2020, bowl_2072)walk_executor(food_vegetable_2041)grab_executor(food_vegetable_2041)walk_executor(bowl_2072)putin_executor(food_vegetable_2041, bowl_2072)walk_executor(food_lemon_2028)grab_executor(food_lemon_2028)walk_executor(bowl_2072)putin_executor(food_lemon_2028, bowl_2072)
##############################
From agent.py
walk_executor(food_lemon_2028)
Robot find: Robot is close to the knife_2050. Robot is close to the cutting_board_2051. Robot is close to the food_lemon_2028. 
##############################
From agent.py
walk_executor(table_226)
Robot find: bowl_2071, coffee_filter_2000, drawing_2003, bowl_2072, mat_236, fork_2080, fork_2081, mat_237, Robot is close to the knife_2050. Robot is close to the table_226. 
##############################
From agent.py
exp(bowl_2072, table_226)
Find bowl_2072. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_lemon_2028)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(bowl_2072)putin_executor(food_egg_2020, bowl_2072)walk_executor(food_vegetable_2041)grab_executor(food_vegetable_2041)walk_executor(bowl_2072)putin_executor(food_vegetable_2041, bowl_2072)walk_executor(food_lemon_2028)grab_executor(food_lemon_2028)walk_executor(bowl_2072)putin_executor(food_lemon_2028, bowl_2072)
##############################
From agent.py
walk_executor(food_lemon_2028)
Robot find: Robot is close to the knife_2050. Robot is close to the cutting_board_2051. Robot is close to the food_lemon_2028. 
##############################
From agent.py
walk_executor(food_egg_2020)
Robot find: Robot is close to the knife_2050. Robot is close to the cutting_board_2051. Robot is close to the food_egg_2020. 
##############################
From agent.py
grab_executor(food_egg_2020)
Robot find: Robot is close to the knife_2050. Robot is close to the cutting_board_2051. Robot is close to the food_egg_2020. Grabbing food_egg_2020 by left hand. 
##############################
From agent.py
walk_executor(bowl_2072)
Robot find: Robot is close to the knife_2050. Robot is close to the food_egg_2020. Robot is close to the bowl_2072. Robot is close to the table_226. 
##############################
From agent.py
putin_executor(food_egg_2020, bowl_2072)
Robot find: Robot is close to the knife_2050. Robot is close to the food_egg_2020. Robot is close to the bowl_2072. Robot is close to the table_226. bowl_2072 is close food_egg_2020. food_egg_2020 is inside bowl_2072. food_egg_2020 is close bowl_2072. food_egg_2020 released by left hand. 
##############################
From agent.py
walk_executor(food_vegetable_2041)
Robot find: Robot is close to the knife_2050. Robot is close to the food_vegetable_2041. Robot is close to the cutting_board_2051. 
##############################
From agent.py
grab_executor(food_vegetable_2041)
Robot find: Robot is close to the knife_2050. Robot is close to the food_vegetable_2041. Robot is close to the cutting_board_2051. Grabbing food_vegetable_2041 by left hand. 
##############################
From agent.py
walk_executor(bowl_2072)
Robot find: Robot is close to the knife_2050. Robot is close to the food_vegetable_2041. Robot is close to the bowl_2072. Robot is close to the table_226. 
##############################
From agent.py
putin_executor(food_vegetable_2041, bowl_2072)
Robot find: Robot is close to the knife_2050. Robot is close to the food_vegetable_2041. Robot is close to the bowl_2072. Robot is close to the table_226. food_vegetable_2041 is inside bowl_2072. food_vegetable_2041 is close bowl_2072. bowl_2072 is close food_vegetable_2041. food_vegetable_2041 released by left hand. 
##############################
From agent.py
walk_executor(food_lemon_2028)
Robot find: Robot is close to the knife_2050. Robot is close to the cutting_board_2051. Robot is close to the food_lemon_2028. 
##############################
From agent.py
grab_executor(food_lemon_2028)
Robot find: Robot is close to the knife_2050. Robot is close to the cutting_board_2051. Robot is close to the food_lemon_2028. Grabbing food_lemon_2028 by left hand. 
##############################
From agent.py
walk_executor(bowl_2072)
Robot find: Robot is close to the knife_2050. Robot is close to the food_lemon_2028. Robot is close to the bowl_2072. Robot is close to the table_226. 
##############################
From agent.py
putin_executor(food_lemon_2028, bowl_2072)
Robot find: Robot is close to the knife_2050. Robot is close to the food_lemon_2028. Robot is close to the bowl_2072. Robot is close to the table_226. food_lemon_2028 is close bowl_2072. bowl_2072 is close food_lemon_2028. food_lemon_2028 is inside bowl_2072. food_lemon_2028 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to squeeze the lemon to extract juice before putting it into the bowl.
##############################
From agent.py
Human Instruction: The robot needs to squeeze the lemon to extract juice before putting it into the bowl.

The actions you have taken:
Action 1: Walk to fridge_289.
Action 2: Switch off fridge_289.
Action 3: Open fridge_289.
Action 4: look for food_egg_2020 around fridge_289.
Action 5: Grab food_egg_2020.
Action 6: Walk to cutting_board_2051.
Action 7: Put food_egg_2020 on cutting_board_2051.
Action 8: Walk to kitchen_counter_230.
Action 9: look for knife_2050 around kitchen_counter_230.
Action 10: Walk to knife_2050.
Action 11: Grab knife_2050.
Action 12: Walk to food_egg_2020.
Action 13: Cut food_egg_2020.
Action 14: Walk to food_lemon_2028.
Action 15: Grab food_lemon_2028.
Action 16: Walk to cutting_board_2051.
Action 17: Put food_lemon_2028 on cutting_board_2051.
Action 18: Walk to food_lemon_2028.
Action 19: Cut food_lemon_2028.
Action 20: Walk to food_vegetable_2041.
Action 21: Grab food_vegetable_2041.
Action 22: Walk to cutting_board_2051.
Action 23: Put food_vegetable_2041 on cutting_board_2051.
Action 24: Walk to food_vegetable_2041.
Action 25: Cut food_vegetable_2041.
Action 26: Walk to kitchen_counter_230.
Action 27: look for bowl_2072 around kitchen_counter_230.
Action 28: Walk to food_lemon_2028.
Action 29: Walk to cupboard_229.
Action 30: Open cupboard_229.
Action 31: look for bowl_2072 around cupboard_229.
Action 32: Walk to food_lemon_2028.
Action 33: Walk to fryingpan_2083.
Action 34: look for bowl_2072 around fryingpan_2083.
Action 35: Walk to food_lemon_2028.
Action 36: Walk to wallshelf_35.
Action 37: look for bowl_2072 around wallshelf_35.
Action 38: Walk to food_lemon_2028.
Action 39: Walk to wallshelf_234.
Action 40: look for bowl_2072 around wallshelf_234.
Action 41: Walk to food_lemon_2028.
Action 42: Walk to wallshelf_235.
Action 43: look for bowl_2072 around wallshelf_235.
Action 44: Walk to food_lemon_2028.
Action 45: Walk to table_226.
Action 46: look for bowl_2072 around table_226.
Action 47: Walk to food_lemon_2028.
Action 48: Walk to food_egg_2020.
Action 49: Grab food_egg_2020.
Action 50: Walk to bowl_2072.
Action 51: Put food_egg_2020 into bowl_2072.
Action 52: Walk to food_vegetable_2041.
Action 53: Grab food_vegetable_2041.
Action 54: Walk to bowl_2072.
Action 55: Put food_vegetable_2041 into bowl_2072.
Action 56: Walk to food_lemon_2028.
Action 57: Grab food_lemon_2028.
Action 58: Walk to bowl_2072.
Action 59: Put food_lemon_2028 into bowl_2072.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_1000_around_dishwasher_1001(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==1001
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(plate,dishwasher_instance)
        else:
            exp(plate,dishwasher_instance)
    eff:
        unknown[plate]=False
        close[plate,dishwasher_instance]=True
        close[dishwasher_instance,plate]=True
    

#exp_behavior_end

#goal_representation

behavior squeeze_lemon(lemon:item):
    body:
        squeeze(lemon) 
        # Squeeze lemon to extract juice

behavior combine_ingredients(egg:item, lemon:item, vegetables:item, bowl:item):
    body:
        achieve_once inside(egg, bowl)
        achieve_once inside(lemon, bowl)
        achieve_once inside(vegetables, bowl)
        # Put egg, lemon, and vegetables into the bowl

behavior __goal__():
    body:
        bind boiled_egg: item where:
            is_food_egg(boiled_egg) and cut(boiled_egg)
        # Select a boiled and cut egg

        bind lemon: item where:
            is_food_lemon(lemon) and cut(lemon)
        # Select a cut lemon

        bind vegetables: item where:
            is_food_vegetable(vegetables) and cut(vegetables)
        # Select cut vegetables

        bind bowl: item where:
            is_bowl(bowl) and recipient(bowl)
        # Select a bowl that can serve as a recipient

        squeeze_lemon(lemon)
        combine_ingredients(boiled_egg, lemon, vegetables, bowl)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_1000_around_dishwasher_1001(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==1001
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(plate,dishwasher_instance)
        else:
            exp(plate,dishwasher_instance)
    eff:
        unknown[plate]=False
        close[plate,dishwasher_instance]=True
        close[dishwasher_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior cut_food(food:item):
    body:
        achieve_once cut(food)

behavior squeeze_juice(food:item, bowl:item):
    body:
        achieve_once cut(food)
        achieve_once on(food, bowl)

behavior place_in_bowl(item1:item, bowl:item):
    body:
        achieve_once inside(item1, bowl)

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg) and cut(egg)
        # Select the cut egg

        bind lemon: item where:
            is_food_lemon(lemon)
        # Select the cut lemon

        bind vegetables: item where:
            is_food_vegetable(vegetables) and cut(vegetables)
        # Select the cut vegetables

        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl

        place_in_bowl(egg, bowl)
        # Place the egg into the bowl

        place_in_bowl(vegetables, bowl)
        # Place the vegetables into the bowl

        squeeze_juice(lemon, bowl)
        # Squeeze the lemon and collect the juice in the bowl


#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior cut_food(food:item):
    body:
        achieve_once cut(food)

behavior squeeze_juice(food:item, bowl:item):
    body:
        achieve_once cut(food)
        achieve_once on(food, bowl)

behavior place_in_bowl(item1:item, bowl:item):
    body:
        achieve_once inside(item1, bowl)

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg) and cut(egg)
        # Select the cut egg

        bind lemon: item where:
            is_food_lemon(lemon)
        # Select the cut lemon

        bind vegetables: item where:
            is_food_vegetable(vegetables) and cut(vegetables)
        # Select the cut vegetables

        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl

        place_in_bowl(egg, bowl)
        # Place the egg into the bowl

        place_in_bowl(vegetables, bowl)
        # Place the vegetables into the bowl

        squeeze_juice(lemon, bowl)
        # Squeeze the lemon and collect the juice in the bowl


##############################
From agent.py-> find a plan in act()
grab_executor(food_lemon_2028)put_executor(food_lemon_2028, bowl_2072)
##############################
From agent.py
grab_executor(food_lemon_2028)
Robot find: Robot is close to the knife_2050. Robot is close to the food_lemon_2028. Robot is close to the bowl_2072. Robot is close to the table_226. Grabbing food_lemon_2028 by left hand. 
##############################
From agent.py
put_executor(food_lemon_2028, bowl_2072)
Robot find: Robot is close to the knife_2050. Robot is close to the food_lemon_2028. Robot is close to the bowl_2072. Robot is close to the table_226. food_lemon_2028 is close bowl_2072. food_lemon_2028 is on bowl_2072. food_lemon_2028 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to squeeze the juice from the lemon into the bowl before the sub-task is complete. The lemon was cut but not squeezed.
##############################
From agent.py
Human Instruction: You need to squeeze the juice from the lemon into the bowl before the sub-task is complete. The lemon was cut but not squeezed.

The actions you have taken:
Action 1: Walk to fridge_289.
Action 2: Switch off fridge_289.
Action 3: Open fridge_289.
Action 4: look for food_egg_2020 around fridge_289.
Action 5: Grab food_egg_2020.
Action 6: Walk to cutting_board_2051.
Action 7: Put food_egg_2020 on cutting_board_2051.
Action 8: Walk to kitchen_counter_230.
Action 9: look for knife_2050 around kitchen_counter_230.
Action 10: Walk to knife_2050.
Action 11: Grab knife_2050.
Action 12: Walk to food_egg_2020.
Action 13: Cut food_egg_2020.
Action 14: Walk to food_lemon_2028.
Action 15: Grab food_lemon_2028.
Action 16: Walk to cutting_board_2051.
Action 17: Put food_lemon_2028 on cutting_board_2051.
Action 18: Walk to food_lemon_2028.
Action 19: Cut food_lemon_2028.
Action 20: Walk to food_vegetable_2041.
Action 21: Grab food_vegetable_2041.
Action 22: Walk to cutting_board_2051.
Action 23: Put food_vegetable_2041 on cutting_board_2051.
Action 24: Walk to food_vegetable_2041.
Action 25: Cut food_vegetable_2041.
Action 26: Walk to kitchen_counter_230.
Action 27: look for bowl_2072 around kitchen_counter_230.
Action 28: Walk to food_lemon_2028.
Action 29: Walk to cupboard_229.
Action 30: Open cupboard_229.
Action 31: look for bowl_2072 around cupboard_229.
Action 32: Walk to food_lemon_2028.
Action 33: Walk to fryingpan_2083.
Action 34: look for bowl_2072 around fryingpan_2083.
Action 35: Walk to food_lemon_2028.
Action 36: Walk to wallshelf_35.
Action 37: look for bowl_2072 around wallshelf_35.
Action 38: Walk to food_lemon_2028.
Action 39: Walk to wallshelf_234.
Action 40: look for bowl_2072 around wallshelf_234.
Action 41: Walk to food_lemon_2028.
Action 42: Walk to wallshelf_235.
Action 43: look for bowl_2072 around wallshelf_235.
Action 44: Walk to food_lemon_2028.
Action 45: Walk to table_226.
Action 46: look for bowl_2072 around table_226.
Action 47: Walk to food_lemon_2028.
Action 48: Walk to food_egg_2020.
Action 49: Grab food_egg_2020.
Action 50: Walk to bowl_2072.
Action 51: Put food_egg_2020 into bowl_2072.
Action 52: Walk to food_vegetable_2041.
Action 53: Grab food_vegetable_2041.
Action 54: Walk to bowl_2072.
Action 55: Put food_vegetable_2041 into bowl_2072.
Action 56: Walk to food_lemon_2028.
Action 57: Grab food_lemon_2028.
Action 58: Walk to bowl_2072.
Action 59: Put food_lemon_2028 into bowl_2072.
Action 60: Grab food_lemon_2028.
Action 61: Put food_lemon_2028 on bowl_2072.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_1000_around_coffee_table_2068(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind coffee_table_instance:item where:
            is_coffee_table(coffee_table_instance) and id[coffee_table_instance]==2068
        achieve close_char(char,coffee_table_instance)
        if can_open(coffee_table_instance):
            achieve_once open(coffee_table_instance)
            exp(plate,coffee_table_instance)
        else:
            exp(plate,coffee_table_instance)
    eff:
        unknown[plate]=False
        close[plate,coffee_table_instance]=True
        close[coffee_table_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior squeeze_lemon(lemon:item):
    body:
        achieve_once inhand(lemon)
        squeeze(lemon)

behavior mix_salad(egg:item, vegetable:item, bowl:item):
    body:
        achieve_once inside(egg, bowl)
        achieve_once inside(vegetable, bowl)

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        
        bind lemon: item where:
            is_food_lemon(lemon)
        
        bind vegetable: item where:
            is_food_vegetable(vegetable)
        
        bind bowl: item where:
            is_bowl(bowl)
        
        squeeze_lemon(lemon)
        mix_salad(egg, vegetable, bowl)


#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior squeeze_lemon(lemon:item):
    body:
        achieve_once inhand(lemon)
        squeeze(lemon)

behavior mix_salad(egg:item, vegetable:item, bowl:item):
    body:
        achieve_once inside(egg, bowl)
        achieve_once inside(vegetable, bowl)

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        
        bind lemon: item where:
            is_food_lemon(lemon)
        
        bind vegetable: item where:
            is_food_vegetable(vegetable)
        
        bind bowl: item where:
            is_bowl(bowl)
        
        squeeze_lemon(lemon)
        mix_salad(egg, vegetable, bowl)


##############################
From agent.py-> find a plan in act()
grab_executor(food_lemon_2028)
##############################
From agent.py
grab_executor(food_lemon_2028)
Robot find: Robot is close to the knife_2050. Robot is close to the food_lemon_2028. Robot is close to the bowl_2072. Robot is close to the table_226. Grabbing food_lemon_2028 by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to squeeze the juice from the lemon into the bowl before the sub-task can be considered complete.
##############################
Task Summary:
Task Goal:
Make a bowl of egg salad with boiled egg, lemon, and vegetables.
Action History:
['walk_executor(fridge_289)', 'switchoff_executor(fridge_289)', 'open_executor(fridge_289)', 'grab_executor(food_egg_2020)', 'walk_executor(cutting_board_2051)', 'put_executor(food_egg_2020, cutting_board_2051)', 'walk_executor(kitchen_counter_230)', 'walk_executor(knife_2050)', 'grab_executor(knife_2050)', 'walk_executor(food_egg_2020)', 'cut_executor(food_egg_2020)', 'walk_executor(food_lemon_2028)', 'grab_executor(food_lemon_2028)', 'walk_executor(cutting_board_2051)', 'put_executor(food_lemon_2028, cutting_board_2051)', 'walk_executor(food_lemon_2028)', 'cut_executor(food_lemon_2028)', 'walk_executor(food_vegetable_2041)', 'grab_executor(food_vegetable_2041)', 'walk_executor(cutting_board_2051)', 'put_executor(food_vegetable_2041, cutting_board_2051)', 'walk_executor(food_vegetable_2041)', 'cut_executor(food_vegetable_2041)', 'walk_executor(kitchen_counter_230)', 'walk_executor(food_lemon_2028)', 'walk_executor(cupboard_229)', 'open_executor(cupboard_229)', 'walk_executor(food_lemon_2028)', 'walk_executor(fryingpan_2083)', 'walk_executor(food_lemon_2028)', 'walk_executor(wallshelf_35)', 'walk_executor(food_lemon_2028)', 'walk_executor(wallshelf_234)', 'walk_executor(food_lemon_2028)', 'walk_executor(wallshelf_235)', 'walk_executor(food_lemon_2028)', 'walk_executor(table_226)', 'walk_executor(food_lemon_2028)', 'walk_executor(food_egg_2020)', 'grab_executor(food_egg_2020)', 'walk_executor(bowl_2072)', 'putin_executor(food_egg_2020, bowl_2072)', 'walk_executor(food_vegetable_2041)', 'grab_executor(food_vegetable_2041)', 'walk_executor(bowl_2072)', 'putin_executor(food_vegetable_2041, bowl_2072)', 'walk_executor(food_lemon_2028)', 'grab_executor(food_lemon_2028)', 'walk_executor(bowl_2072)', 'putin_executor(food_lemon_2028, bowl_2072)', 'grab_executor(food_lemon_2028)', 'put_executor(food_lemon_2028, bowl_2072)', 'grab_executor(food_lemon_2028)']
Time info:
Time consume: 296 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 4
goal correct times: 0
action_num: 53

Task complete rate:
Keystate: k1 - Requires: 12 steps
Keystate: k2 - Requires: 13 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
