From agent.py
Reset goals: The sub-goals are: 
['Turn on the lights in the bedroom. Then turn on the lights in the bathroom.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_bedroom_light(bedroom_light:item):
    body:
        achieve is_on(bedroom_light)

behavior turn_on_bathroom_light(bathroom_light:item):
    body:
        achieve is_on(bathroom_light)

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)
        # Select the light in the bedroom

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)
        # Select the light in the bathroom

        turn_on_bedroom_light(bedroom_light)
        # Turn on the light in the bedroom

        turn_on_bathroom_light(bathroom_light)
        # Turn on the light in the bathroom

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_light(light: item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        # Turn on the light in the bedroom
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)
        turn_on_light(bedroom_light)

        # Turn on the light in the bathroom
        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)
        turn_on_light(bathroom_light)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_bedroom_light(light:item):
    body:
        achieve is_on(light)

behavior turn_on_bathroom_light(light:item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom) 
        # Select a light in the bedroom
        
        turn_on_bedroom_light(bedroom_light)

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)
        # Select a light in the bathroom

        turn_on_bathroom_light(bathroom_light)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_light(light:item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)
        # Select the light in the bedroom
        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)
        # Select the light in the bathroom
        turn_on_light(bedroom_light)
        turn_on_light(bathroom_light)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_bedroom_light(bedroom_light:item):
    body:
        achieve is_on(bedroom_light)

behavior turn_on_bathroom_light(bathroom_light:item):
    body:
        achieve is_on(bathroom_light)

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)
        # Select the light in the bedroom
        
        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)
        # Select the light in the bathroom

        turn_on_bedroom_light(bedroom_light)
        turn_on_bathroom_light(bathroom_light)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_light(light:item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)
        # Select the light in the bedroom
        turn_on_light(bedroom_light)
        # Turn on the bedroom light

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)
        # Select the light in the bathroom
        turn_on_light(bathroom_light)
        # Turn on the bathroom light

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "turn on the lights in the bedroom. then turn on the lights in the bathroom." ?
Answer: Turn on the lights in the bedroom. Then turn on the lights in the bathroom.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_lights_in_room(room:item, light:item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)
        turn_on_lights_in_room(bedroom, bedroom_light)

        bind bathroom: item where:
            is_bathroom(bathroom)
        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)
        turn_on_lights_in_room(bathroom, bathroom_light)

#goal_representation_end

##############################
From agent.py-> find a plan in act()
walk_executor(light_169)switchon_executor(light_169)walk_executor(light_64)switchon_executor(light_64)
##############################
From agent.py
walk_executor(light_169)
Robot find: keyboard_168, drawing_175, chair_103, drawing_174, Robot is close to the light_169. 
##############################
From agent.py
switchon_executor(light_169)
Robot find: Robot is close to the light_169. light_169 is turned on. 
##############################
From agent.py
walk_executor(light_64)
Robot find: towel_rack_32, mat_22, Robot is close to the light_64. 
##############################
From agent.py
switchon_executor(light_64)
Robot find: Robot is close to the light_64. light_64 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Turn on the lights in the bedroom. Then turn on the lights in the bathroom.
Action History:
['walk_executor(light_169)', 'switchon_executor(light_169)', 'walk_executor(light_64)', 'switchon_executor(light_64)']
Time info:
Time consume: 61 seconds
Exp_helper query times: 0
Guidance query times: 1
library scale: 0
goal generate times: 7
goal correct times: 0
action_num: 4

Task complete rate:
1
Scene_id: 0
##############################
