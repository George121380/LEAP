From agent.py
Reset goals: The sub-goals are: 
['make a cup of coffee using the coffee maker, then add milk and sugar.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2043_around_fridge_289(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_food_sugar_2039_around_kitchen_counter_230(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_sugar,kitchen_counter_instance)
        else:
            exp(food_sugar,kitchen_counter_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_sugar]=True
    

behavior find_cup_2063_around_coffe_maker_290(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind coffe_maker_instance:item where:
            is_coffe_maker(coffe_maker_instance) and id[coffe_maker_instance]==290
        achieve close_char(char,coffe_maker_instance)
        if can_open(coffe_maker_instance):
            achieve_once open(coffe_maker_instance)
            exp(cup,coffe_maker_instance)
        else:
            exp(cup,coffe_maker_instance)
    eff:
        unknown[cup]=False
        close[cup,coffe_maker_instance]=True
        close[coffe_maker_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior make_coffee_with_additions(coffee_maker:item, cup:item, milk:item, sugar:item):
    body:
        achieve plugged(coffee_maker)
        # Ensure the coffee maker is plugged in

        achieve is_on(coffee_maker)
        # Turn on the coffee maker to brew coffee

        achieve_once inside(cup, coffee_maker)
        # Place the cup to receive coffee from the coffee maker

        achieve_once inside(milk, cup)
        # Add milk to the coffee in the cup

        achieve_once inside(sugar, cup)
        # Add sugar to the coffee in the cup
        
behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select a coffee maker

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select sugar

        make_coffee_with_additions(coffee_maker, cup, milk, sugar)
        # Make coffee and add milk and sugar

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2043_around_fridge_289(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_food_sugar_2039_around_kitchen_counter_230(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_sugar,kitchen_counter_instance)
        else:
            exp(food_sugar,kitchen_counter_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_sugar]=True
    

behavior find_cup_2064_around_desk_357(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==357
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(cup,desk_instance)
        else:
            exp(cup,desk_instance)
    eff:
        unknown[cup]=False
        close[cup,desk_instance]=True
        close[desk_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior make_coffee(coffee_maker:item):
    body:
        achieve_once is_on(coffee_maker)

behavior prepare_cup(cup: item):
    body:
        achieve_once has_water(cup)

behavior add_milk(cup: item, milk: item):
    body:
        achieve_once inside(milk, cup)

behavior add_sugar(cup: item, sugar: item):
    body:
        achieve_once inside(sugar, cup)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        bind cup: item where:
            is_cup(cup)
        bind milk: item where:
            is_milk(milk)
        bind sugar: item where:
            is_food_sugar(sugar)

        make_coffee(coffee_maker)
        prepare_cup(cup)
        add_milk(cup, milk)
        add_sugar(cup, sugar)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior make_coffee(coffee_maker:item):
    body:
        achieve_once is_on(coffee_maker)

behavior prepare_cup(cup: item):
    body:
        achieve_once has_water(cup)

behavior add_milk(cup: item, milk: item):
    body:
        achieve_once inside(milk, cup)

behavior add_sugar(cup: item, sugar: item):
    body:
        achieve_once inside(sugar, cup)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        bind cup: item where:
            is_cup(cup)
        bind milk: item where:
            is_milk(milk)
        bind sugar: item where:
            is_food_sugar(sugar)

        make_coffee(coffee_maker)
        prepare_cup(cup)
        add_milk(cup, milk)
        add_sugar(cup, sugar)

##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_290)switchon_executor(coffe_maker_290)walk_executor(desk_357)exp(cup_2063, desk_357)walk_executor(cup_2063)grab_executor(cup_2063)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(milk_2043, fridge_289)walk_executor(milk_2043)grab_executor(milk_2043)walk_executor(cup_2063)putin_executor(milk_2043, cup_2063)walk_executor(kitchen_counter_230)exp(food_sugar_2039, kitchen_counter_230)walk_executor(food_sugar_2039)grab_executor(food_sugar_2039)walk_executor(cup_2063)putin_executor(food_sugar_2039, cup_2063)
##############################
From agent.py
walk_executor(coffe_maker_290)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the coffe_maker_290. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
switchon_executor(coffe_maker_290)
Robot find: Robot is close to the coffe_maker_290. Robot is close to the kitchen_counter_230. coffe_maker_290 is turned on. 
##############################
From agent.py
walk_executor(desk_357)
Robot find: keyboard_415, headset_2076, chair_356, phone_2077, mouse_413, pencil_2001, Robot is close to the desk_357. 
##############################
From agent.py
exp(cup_2063, desk_357)
Find cup_2063. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2063)grab_executor(cup_2063)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(milk_2043, fridge_289)walk_executor(milk_2043)grab_executor(milk_2043)walk_executor(cup_2063)putin_executor(milk_2043, cup_2063)walk_executor(kitchen_counter_230)exp(food_sugar_2039, kitchen_counter_230)walk_executor(food_sugar_2039)grab_executor(food_sugar_2039)walk_executor(cup_2063)putin_executor(food_sugar_2039, cup_2063)
##############################
From agent.py
walk_executor(cup_2063)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the cup_2063. 
##############################
From agent.py
grab_executor(cup_2063)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the cup_2063. Grabbing cup_2063 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: towel_rack_31, towel_rack_32, towel_rack_34, Robot is close to the cup_2063. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the cup_2063. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the cup_2063. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py
walk_executor(fridge_289)
Robot find: Robot is close to the cup_2063. Robot is close to the fridge_289. 
##############################
From agent.py
switchoff_executor(fridge_289)
Robot find: Robot is close to the cup_2063. Robot is close to the fridge_289. fridge_289 is turned off. 
##############################
From agent.py
open_executor(fridge_289)
Robot find: sauce_2078, food_steak_2008, food_apple_2009, food_bacon_2010, food_banana_2011, food_bread_2012, food_cake_2013, food_carrot_2014, food_cereal_2015, food_cheese_2016, food_chicken_2017, food_dessert_2018, food_donut_2019, food_egg_2020, food_fish_2021, food_food_2022, food_fruit_2023, food_hamburger_2024, food_ice_cream_2025, food_jam_2026, food_kiwi_2027, food_lemon_2028, food_noodles_2029, food_oatmeal_2030, food_orange_2031, food_onion_2032, food_peanut_butter_2033, food_pizza_2034, food_potato_2035, food_rice_2036, food_salt_2037, food_snack_2038, food_sugar_2039, food_turkey_2040, food_vegetable_2041, dry_pasta_2042, milk_2043, Robot is close to the cup_2063. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. fridge_289 is opened. 
##############################
From agent.py
exp(milk_2043, fridge_289)
Find milk_2043. 
##############################
From agent.py-> find a plan in act()
grab_executor(milk_2043)putin_executor(milk_2043, cup_2063)grab_executor(food_sugar_2039)putin_executor(food_sugar_2039, cup_2063)
##############################
From agent.py
grab_executor(milk_2043)
Robot find: Robot is close to the cup_2063. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. Grabbing milk_2043 by left hand. 
##############################
From agent.py
putin_executor(milk_2043, cup_2063)
Robot find: Robot is close to the cup_2063. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. milk_2043 is inside cup_2063. cup_2063 is close milk_2043. milk_2043 is close cup_2063. milk_2043 released by left hand. 
##############################
From agent.py
grab_executor(food_sugar_2039)
Robot find: Robot is close to the cup_2063. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. Grabbing food_sugar_2039 by left hand. 
##############################
From agent.py
putin_executor(food_sugar_2039, cup_2063)
Robot find: Robot is close to the cup_2063. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. cup_2063 is close food_sugar_2039. food_sugar_2039 is close cup_2063. food_sugar_2039 is inside cup_2063. food_sugar_2039 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot still needs to fill the cup with coffee from the coffee maker after turning it on. Once the coffee is added to the cup, the sub-task will be completed.
##############################
From agent.py
Human Instruction: The robot still needs to fill the cup with coffee from the coffee maker after turning it on. Once the coffee is added to the cup, the sub-task will be completed.

The actions you have taken:
Action 1: Walk to coffe_maker_290.
Action 2: Switch on coffe_maker_290.
Action 3: Walk to desk_357.
Action 4: look for cup_2063 around desk_357.
Action 5: Walk to cup_2063.
Action 6: Grab cup_2063.
Action 7: Walk to faucet_43.
Action 8: Switch on faucet_43.
Action 9: Switch off faucet_43.
Action 10: Walk to fridge_289.
Action 11: Switch off fridge_289.
Action 12: Open fridge_289.
Action 13: look for milk_2043 around fridge_289.
Action 14: Grab milk_2043.
Action 15: Put milk_2043 into cup_2063.
Action 16: Grab food_sugar_2039.
Action 17: Put food_sugar_2039 into cup_2063.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_coffee_filter_2000_around_wallshelf_235(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==235
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(coffee_filter,wallshelf_instance)
        else:
            exp(coffee_filter,wallshelf_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,wallshelf_instance]=True
        close[wallshelf_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_cup_with_coffee(cup: item, coffee_maker: item):
    body:
        achieve_once inside(cup, coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        fill_cup_with_coffee(cup, coffee_maker)
        # Fill the cup with coffee from the coffee maker

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_cup_with_coffee(cup: item, coffee_maker: item):
    body:
        achieve_once inside(cup, coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        fill_cup_with_coffee(cup, coffee_maker)
        # Fill the cup with coffee from the coffee maker

##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_290)switchoff_executor(coffe_maker_290)open_executor(coffe_maker_290)walk_executor(cup_2064)grab_executor(cup_2064)walk_executor(coffe_maker_290)putin_executor(cup_2064, coffe_maker_290)
##############################
From agent.py
walk_executor(coffe_maker_290)
Robot find: Robot is close to the cup_2063. Robot is close to the coffe_maker_290. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
switchoff_executor(coffe_maker_290)
Robot find: Robot is close to the cup_2063. Robot is close to the coffe_maker_290. Robot is close to the kitchen_counter_230. coffe_maker_290 is turned off. 
##############################
From agent.py
open_executor(coffe_maker_290)
Robot find: Robot is close to the cup_2063. Robot is close to the coffe_maker_290. Robot is close to the kitchen_counter_230. coffe_maker_290 is opened. 
##############################
From agent.py
walk_executor(cup_2064)
Robot find: Robot is close to the cup_2063. Robot is close to the kitchen_counter_230. Robot is close to the cup_2064. 
##############################
From agent.py
grab_executor(cup_2064)
Robot find: Robot is close to the cup_2063. Robot is close to the kitchen_counter_230. Robot is close to the cup_2064. Grabbing cup_2064 by left hand. 
##############################
From agent.py
walk_executor(coffe_maker_290)
Robot find: Robot is close to the cup_2063. Robot is close to the kitchen_counter_230. Robot is close to the cup_2064. Robot is close to the coffe_maker_290. 
##############################
From agent.py
putin_executor(cup_2064, coffe_maker_290)
Robot find: Robot is close to the cup_2063. Robot is close to the kitchen_counter_230. Robot is close to the cup_2064. Robot is close to the coffe_maker_290. coffe_maker_290 is close cup_2064. cup_2064 is inside coffe_maker_290. cup_2064 is close coffe_maker_290. cup_2064 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to fill the cup with coffee from the coffee maker after turning it on. Once the coffee is added to the cup, the sub-task will be completed.
##############################
From agent.py
Human Instruction: You need to fill the cup with coffee from the coffee maker after turning it on. Once the coffee is added to the cup, the sub-task will be completed.

The actions you have taken:
Action 1: Walk to coffe_maker_290.
Action 2: Switch on coffe_maker_290.
Action 3: Walk to desk_357.
Action 4: look for cup_2063 around desk_357.
Action 5: Walk to cup_2063.
Action 6: Grab cup_2063.
Action 7: Walk to faucet_43.
Action 8: Switch on faucet_43.
Action 9: Switch off faucet_43.
Action 10: Walk to fridge_289.
Action 11: Switch off fridge_289.
Action 12: Open fridge_289.
Action 13: look for milk_2043 around fridge_289.
Action 14: Grab milk_2043.
Action 15: Put milk_2043 into cup_2063.
Action 16: Grab food_sugar_2039.
Action 17: Put food_sugar_2039 into cup_2063.
Action 18: Walk to coffe_maker_290.
Action 19: Switch off coffe_maker_290.
Action 20: Open coffe_maker_290.
Action 21: Walk to cup_2064.
Action 22: Grab cup_2064.
Action 23: Walk to coffe_maker_290.
Action 24: Put cup_2064 into coffe_maker_290.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_coffee_filter_2000_around_closetdrawer_392(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==392
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(coffee_filter,closetdrawer_instance)
        else:
            exp(coffee_filter,closetdrawer_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,closetdrawer_instance]=True
        close[closetdrawer_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation

behavior fill_coffee(cup:item, coffe_maker:item):
    body:
        achieve_once inside(cup, coffe_maker)

behavior __goal__():
    body:
        bind coffe_maker: item where:
            is_coffe_maker(coffe_maker)

        bind cup: item where:
            is_cup(cup) and id[cup]==2064
        # Select the cup with ID 2064

        fill_coffee(cup, coffe_maker)

        bind milk: item where:
            is_milk(milk) and inside(milk, cup)
        # Ensure milk is already in the cup

        bind sugar: item where:
            is_food_sugar(sugar) and inside(sugar, cup)
        # Ensure sugar is already in the cup

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_405_around_dresser_358(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==358
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(pillow,dresser_instance)
        else:
            exp(pillow,dresser_instance)
    eff:
        unknown[pillow]=False
        close[pillow,dresser_instance]=True
        close[dresser_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior make_coffee_with_milk_and_sugar(coffee_maker:item, cup:item):
    body:
        achieve_once inside(cup, coffee_maker)
        # Fill the cup with coffee from the coffee maker

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind cup: item where:
            is_cup(cup) and not inhand(cup)
        # Select a cup that is not in hand

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select sugar

        make_coffee_with_milk_and_sugar(coffee_maker, cup)
        achieve_once inside(milk, cup)
        # Add milk to the cup
        achieve_once inside(sugar, cup)
        # Add sugar to the cup

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior make_coffee_with_milk_and_sugar(coffee_maker:item, cup:item):
    body:
        achieve_once inside(cup, coffee_maker)
        # Fill the cup with coffee from the coffee maker

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind cup: item where:
            is_cup(cup) and not inhand(cup)
        # Select a cup that is not in hand

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select sugar

        make_coffee_with_milk_and_sugar(coffee_maker, cup)
        achieve_once inside(milk, cup)
        # Add milk to the cup
        achieve_once inside(sugar, cup)
        # Add sugar to the cup

##############################
From agent.py-> find a plan in act()
walk_executor(milk_2043)grab_executor(milk_2043)walk_executor(cup_2064)putin_executor(milk_2043, cup_2064)walk_executor(food_sugar_2039)grab_executor(food_sugar_2039)walk_executor(cup_2064)putin_executor(food_sugar_2039, cup_2064)
##############################
From agent.py
walk_executor(milk_2043)
Robot find: Robot is close to the cup_2063. Robot is close to the milk_2043. 
##############################
From agent.py
grab_executor(milk_2043)
Robot find: Robot is close to the cup_2063. Robot is close to the milk_2043. Grabbing milk_2043 by left hand. 
##############################
From agent.py
walk_executor(cup_2064)
Robot find: Robot is close to the cup_2063. Robot is close to the milk_2043. Robot is close to the cup_2064. Robot is close to the coffe_maker_290. 
##############################
From agent.py
putin_executor(milk_2043, cup_2064)
Robot find: Robot is close to the cup_2063. Robot is close to the milk_2043. Robot is close to the cup_2064. Robot is close to the coffe_maker_290. milk_2043 is inside cup_2064. cup_2064 is close milk_2043. milk_2043 is close cup_2064. milk_2043 released by left hand. 
##############################
From agent.py
walk_executor(food_sugar_2039)
Robot find: Robot is close to the cup_2063. Robot is close to the food_sugar_2039. 
##############################
From agent.py
grab_executor(food_sugar_2039)
Robot find: Robot is close to the cup_2063. Robot is close to the food_sugar_2039. Grabbing food_sugar_2039 by left hand. 
##############################
From agent.py
walk_executor(cup_2064)
Robot find: Robot is close to the cup_2063. Robot is close to the food_sugar_2039. Robot is close to the cup_2064. Robot is close to the coffe_maker_290. 
##############################
From agent.py
putin_executor(food_sugar_2039, cup_2064)
Robot find: Robot is close to the cup_2063. Robot is close to the food_sugar_2039. Robot is close to the cup_2064. Robot is close to the coffe_maker_290. food_sugar_2039 is close cup_2064. food_sugar_2039 is inside cup_2064. cup_2064 is close food_sugar_2039. food_sugar_2039 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure that the cup is filled with coffee from the coffee maker. The actions taken didn't include adding coffee into the cup, which is necessary to complete the sub-task.
##############################
Task Summary:
Task Goal:
make a cup of coffee using the coffee maker, then add milk and sugar.
Action History:
['walk_executor(coffe_maker_290)', 'switchon_executor(coffe_maker_290)', 'walk_executor(desk_357)', 'walk_executor(cup_2063)', 'grab_executor(cup_2063)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'switchoff_executor(faucet_43)', 'walk_executor(fridge_289)', 'switchoff_executor(fridge_289)', 'open_executor(fridge_289)', 'grab_executor(milk_2043)', 'putin_executor(milk_2043, cup_2063)', 'grab_executor(food_sugar_2039)', 'putin_executor(food_sugar_2039, cup_2063)', 'walk_executor(coffe_maker_290)', 'switchoff_executor(coffe_maker_290)', 'open_executor(coffe_maker_290)', 'walk_executor(cup_2064)', 'grab_executor(cup_2064)', 'walk_executor(coffe_maker_290)', 'putin_executor(cup_2064, coffe_maker_290)', 'walk_executor(milk_2043)', 'grab_executor(milk_2043)', 'walk_executor(cup_2064)', 'putin_executor(milk_2043, cup_2064)', 'walk_executor(food_sugar_2039)', 'grab_executor(food_sugar_2039)', 'walk_executor(cup_2064)', 'putin_executor(food_sugar_2039, cup_2064)']
Time info:
Time consume: 125 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 5
goal correct times: 0
action_num: 30

Task complete rate:
Keystate: k1 - Requires: 2 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
