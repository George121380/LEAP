From agent.py
Reset goals: The sub-goals are: 
['Vacuum the floor by pushing and pulling the vacuum cleaner.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2070_around_desk_357(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==357
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(vacuum_cleaner,desk_instance)
        else:
            exp(vacuum_cleaner,desk_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,desk_instance]=True
        close[desk_instance,vacuum_cleaner]=True
    

#exp_behavior_end

#goal_representation
 
behavior ensure_vacuum_ready(vacuum:item):
    body:
        if is_off(vacuum):
            switch_on(vacuum)
        if unplugged(vacuum):
            plugin(vacuum)

behavior vacuum_floor(vacuum:item, floor:item):
    body:
        if is_dirty(floor):
            push(vacuum)
            pull(vacuum)

behavior __goal__():
    body:
        bind vacuum: item where:
            is_vacuum_cleaner(vacuum)
        bind floor: item where:
            is_floor(floor)
        ensure_vacuum_ready(vacuum)
        vacuum_floor(vacuum, floor)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2070_around_desk_357(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==357
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(vacuum_cleaner,desk_instance)
        else:
            exp(vacuum_cleaner,desk_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,desk_instance]=True
        close[desk_instance,vacuum_cleaner]=True
    

#exp_behavior_end

#goal_representation
 
behavior move_vacuum_cleaner(vacuum_cleaner:item):
    body:
        if movable(vacuum_cleaner):
            push(vacuum_cleaner)
            pull(vacuum_cleaner)

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner)
        move_vacuum_cleaner(vacuum_cleaner)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior move_vacuum_cleaner(vacuum_cleaner:item):
    body:
        if movable(vacuum_cleaner):
            push(vacuum_cleaner)
            pull(vacuum_cleaner)

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner)
        move_vacuum_cleaner(vacuum_cleaner)

##############################
From agent.py-> find a plan in act()
walk_executor(desk_357)exp(vacuum_cleaner_2070, desk_357)walk_executor(vacuum_cleaner_2070)push_executor(vacuum_cleaner_2070)pull_executor(vacuum_cleaner_2070)
##############################
From agent.py
walk_executor(desk_357)
Robot find: keyboard_415, headset_2076, chair_356, phone_2077, mouse_413, pencil_2001, Robot is close to the desk_357. 
##############################
From agent.py
exp(vacuum_cleaner_2070, desk_357)
Fail to find vacuum_cleaner_2070 around desk_357. 
##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2074)exp(vacuum_cleaner_2070, ironing_board_2074)walk_executor(vacuum_cleaner_2070)push_executor(vacuum_cleaner_2070)pull_executor(vacuum_cleaner_2070)
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: iron_2089, Robot is close to the ironing_board_2074. 
##############################
From agent.py
exp(vacuum_cleaner_2070, ironing_board_2074)
Fail to find vacuum_cleaner_2070 around ironing_board_2074. 
##############################
From agent.py-> find a plan in act()
walk_executor(tvstand_353)exp(vacuum_cleaner_2070, tvstand_353)walk_executor(vacuum_cleaner_2070)push_executor(vacuum_cleaner_2070)pull_executor(vacuum_cleaner_2070)
##############################
From agent.py
walk_executor(tvstand_353)
Robot find: dvd_player_2061, mat_401, drawing_400, Robot is close to the tvstand_353. 
##############################
From agent.py
exp(vacuum_cleaner_2070, tvstand_353)
Fail to find vacuum_cleaner_2070 around tvstand_353. 
##############################
From agent.py-> find a plan in act()
walk_executor(couch_352)exp(vacuum_cleaner_2070, couch_352)walk_executor(vacuum_cleaner_2070)push_executor(vacuum_cleaner_2070)pull_executor(vacuum_cleaner_2070)
##############################
From agent.py
walk_executor(couch_352)
Robot find: remote_control_2052, clothes_jacket_2047, pillow_405, cat_2055, pillow_406, hairbrush_2002, vacuum_cleaner_2070, Robot is close to the couch_352. Robot is close to the mat_401. 
##############################
From agent.py
exp(vacuum_cleaner_2070, couch_352)
Find vacuum_cleaner_2070. 
##############################
From agent.py-> find a plan in act()
walk_executor(vacuum_cleaner_2070)push_executor(vacuum_cleaner_2070)pull_executor(vacuum_cleaner_2070)
##############################
From agent.py
walk_executor(vacuum_cleaner_2070)
Robot find: Robot is close to the vacuum_cleaner_2070. 
##############################
From agent.py
push_executor(vacuum_cleaner_2070)
Robot find: Robot is close to the vacuum_cleaner_2070. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2070)
Robot find: Robot is close to the vacuum_cleaner_2070. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Vacuum the floor by push and pull the vacuume clearner.
Action History:
['walk_executor(desk_357)', 'walk_executor(ironing_board_2074)', 'walk_executor(tvstand_353)', 'walk_executor(couch_352)', 'walk_executor(vacuum_cleaner_2070)', 'push_executor(vacuum_cleaner_2070)', 'pull_executor(vacuum_cleaner_2070)']
Time info:
Time consume: 49 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 2
goal correct times: 0
action_num: 7

Task complete rate:
Keystate: k1 - Requires: 3 steps
Action Completion Rate: 1.0
Scene_id: 0
##############################
