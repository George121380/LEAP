From agent.py
Reset goals: The sub-goals are: 
['Turn on the lights in the bathroom.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_light(light:item):
    body:
        achieve_once is_on(light)

behavior __goal__():
    body:
        bind light: item where:
            is_light(light) and is_bathroom(light)
        # Select light in the bathroom
        turn_on_light(light)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_remote_control_2052_around_television_248(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind television_instance:item where:
            is_television(television_instance) and id[television_instance]==248
        achieve close_char(char,television_instance)
        if can_open(television_instance):
            achieve_once open(television_instance)
            exp(remote_control,television_instance)
        else:
            exp(remote_control,television_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,television_instance]=True
        close[television_instance,remote_control]=True
    

#exp_behavior_end

#goal_representation
 
def inside_bathroom(light_switch:item):
    # Function to check if the light switch is inside the bathroom
    symbol inside_bathroom=exists room: item : (is_bathroom(room) and inside(light_switch, room))
    return inside_bathroom

behavior turn_on_light(light_switch:item):
    body:
        achieve_once is_on(light_switch)
        # Ensure the light switch is turned on

behavior __goal__():
    body:
        bind light_switch: item where:
            is_light(light_switch) and inside_bathroom(light_switch)
        # Select the light switch that is inside the bathroom
        turn_on_light(light_switch)
        # Turn on the lights in the bathroom

#goal_representation_end

##############################
From agent.py->reset_goal
 
def inside_bathroom(light_switch:item):
    # Function to check if the light switch is inside the bathroom
    symbol inside_bathroom=exists room: item : (is_bathroom(room) and inside(light_switch, room))
    return inside_bathroom

behavior turn_on_light(light_switch:item):
    body:
        achieve_once is_on(light_switch)
        # Ensure the light switch is turned on

behavior __goal__():
    body:
        bind light_switch: item where:
            is_light(light_switch) and inside_bathroom(light_switch)
        # Select the light switch that is inside the bathroom
        turn_on_light(light_switch)
        # Turn on the lights in the bathroom

##############################
From agent.py-> find a plan in act()
walk_executor(light_64)switchon_executor(light_64)
##############################
From agent.py
walk_executor(light_64)
Robot find: towel_rack_32, mat_22, Robot is close to the light_64. 
##############################
From agent.py
switchon_executor(light_64)
Robot find: Robot is close to the light_64. light_64 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Turn on the lights in the bathroom.
Action History:
['walk_executor(light_64)', 'switchon_executor(light_64)']
Time info:
Time consume: 26 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 2
goal correct times: 0
action_num: 2

Task complete rate:
1
Scene_id: 0
##############################
