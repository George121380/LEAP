From agent.py
Reset goals: The sub-goals are: 
['Iron the skirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_skirt_2088_around_closetdrawer_119(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==119
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_skirt,closetdrawer_instance)
        else:
            exp(clothes_skirt,closetdrawer_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_iron(iron:item):
    body:
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is turned on

behavior iron_skirt(skirt:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board) # Place the skirt on the ironing board
        # Iron the skirt on the board No specific action needed because the goal is fulfilled by states above

behavior finish_ironing(iron:item):
    body:
        achieve is_off(iron) # Turn off the iron
        achieve unplugged(iron) # Unplug the iron

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt) 
        # Select a skirt
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board
        
        bind iron: item where:
            is_iron(iron)
        # Select an iron
        
        prepare_iron(iron)
        iron_skirt(skirt, ironing_board)
        finish_ironing(iron)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_skirt_2088_around_closetdrawer_119(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==119
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_skirt,closetdrawer_instance)
        else:
            exp(clothes_skirt,closetdrawer_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation

behavior prepare_for_ironing(char: character, iron: item, skirt: item, ironing_board: item):
    body:
        achieve_once is_off(iron)
        achieve_once close_char(char, iron)
    
        # Assuming plugged state means the iron is operational and electricity is required
        # We will turn it on once we plug it in
        achieve_once is_on(iron)
        
behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        
        bind skirt: item where:
            is_clothes_skirt(skirt)
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        prepare_for_ironing(char, iron, skirt, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_goal

behavior prepare_for_ironing(char: character, iron: item, skirt: item, ironing_board: item):
    body:
        achieve_once is_off(iron)
        achieve_once close_char(char, iron)
    
        # Assuming plugged state means the iron is operational and electricity is required
        # We will turn it on once we plug it in
        achieve_once is_on(iron)
        
behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        
        bind skirt: item where:
            is_clothes_skirt(skirt)
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        prepare_for_ironing(char, iron, skirt, ironing_board)

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)switchoff_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: iron_2089, Robot is close to the ironing_board_2074. 
##############################
From agent.py
exp(iron_2089, ironing_board_2074)
Find iron_2089. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)
##############################
From agent.py
walk_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. 
##############################
From agent.py
plugin_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. iron_2089 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. iron_2089 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to place the skirt on the ironing board and use the iron to iron the skirt.
##############################
From agent.py
Human Instruction: You need to place the skirt on the ironing board and use the iron to iron the skirt.

The actions you have taken:
Action 1: Walk to ironing_board_2074.
Action 2: look for iron_2089 around ironing_board_2074.
Action 3: Walk to iron_2089.
Action 4: Plug in iron_2089.
Action 5: Switch on iron_2089.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2086_around_closetdrawer_119(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==119
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

behavior find_clothes_skirt_2088_around_closetdrawer_119(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==119
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_skirt,closetdrawer_instance)
        else:
            exp(clothes_skirt,closetdrawer_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_skirt_on_board(skirt:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)

behavior iron_the_skirt(iron:item, skirt:item):
    body:
        achieve_once close_char(char, skirt)
        # Approach the skirt for ironing
        achieve is_on(iron)
        # Ensure the iron is on

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select a skirt as the target item to iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        place_skirt_on_board(skirt, ironing_board)
        iron_the_skirt(iron, skirt)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior place_skirt_on_board(skirt:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)

behavior iron_the_skirt(iron:item, skirt:item):
    body:
        achieve_once close_char(char, skirt)
        # Approach the skirt for ironing
        achieve is_on(iron)
        # Ensure the iron is on

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select a skirt as the target item to iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        place_skirt_on_board(skirt, ironing_board)
        iron_the_skirt(iron, skirt)

##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_119)exp(clothes_skirt_2088, closetdrawer_119)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(ironing_board_2074)put_executor(clothes_skirt_2088, ironing_board_2074)walk_executor(clothes_skirt_2088)
##############################
From agent.py
walk_executor(closetdrawer_119)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(clothes_skirt_2088, closetdrawer_119)
Fail to find clothes_skirt_2088 around closetdrawer_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_119)exp(clothes_skirt_2088, closetdrawer_119)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(ironing_board_2074)put_executor(clothes_skirt_2088, ironing_board_2074)walk_executor(clothes_skirt_2088)
##############################
From agent.py
walk_executor(closetdrawer_119)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(clothes_skirt_2088, closetdrawer_119)
Fail to find clothes_skirt_2088 around closetdrawer_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_119)exp(clothes_skirt_2088, closetdrawer_119)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(ironing_board_2074)put_executor(clothes_skirt_2088, ironing_board_2074)walk_executor(clothes_skirt_2088)
##############################
From agent.py
walk_executor(closetdrawer_119)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(clothes_skirt_2088, closetdrawer_119)
Fail to find clothes_skirt_2088 around closetdrawer_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_119)exp(clothes_skirt_2088, closetdrawer_119)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(ironing_board_2074)put_executor(clothes_skirt_2088, ironing_board_2074)walk_executor(clothes_skirt_2088)
##############################
From agent.py
walk_executor(closetdrawer_119)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(clothes_skirt_2088, closetdrawer_119)
Fail to find clothes_skirt_2088 around closetdrawer_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_119)exp(clothes_skirt_2088, closetdrawer_119)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(ironing_board_2074)put_executor(clothes_skirt_2088, ironing_board_2074)walk_executor(clothes_skirt_2088)
##############################
From agent.py
walk_executor(closetdrawer_119)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(clothes_skirt_2088, closetdrawer_119)
Fail to find clothes_skirt_2088 around closetdrawer_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_119)exp(clothes_skirt_2088, closetdrawer_119)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(ironing_board_2074)put_executor(clothes_skirt_2088, ironing_board_2074)walk_executor(clothes_skirt_2088)
##############################
From agent.py
walk_executor(closetdrawer_119)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_skirt_2088 ?
Answer: The item clothes_skirt_2088 is located inside bathroom_1. You will find it inside basket_for_clothes_2006. Look for a clothes basket in the bathroom, and the skirt will be inside that basket.
Re-decompose: None

##############################
From agent.py
Human Instruction: You need to place the skirt on the ironing board and use the iron to iron the skirt.
The item clothes_skirt_2088 is located inside bathroom_1. You will find it inside basket_for_clothes_2006. Look for a clothes basket in the bathroom, and the skirt will be inside that basket.

The actions you have taken:
Action 1: Walk to ironing_board_2074.
Action 2: look for iron_2089 around ironing_board_2074.
Action 3: Walk to iron_2089.
Action 4: Plug in iron_2089.
Action 5: Switch on iron_2089.
Action 6: Walk to closetdrawer_119.
Action 7: look for clothes_skirt_2088 around closetdrawer_119.
Action 8: Walk to closetdrawer_119.
Action 9: look for clothes_skirt_2088 around closetdrawer_119.
Action 10: Walk to closetdrawer_119.
Action 11: look for clothes_skirt_2088 around closetdrawer_119.
Action 12: Walk to closetdrawer_119.
Action 13: look for clothes_skirt_2088 around closetdrawer_119.
Action 14: Walk to closetdrawer_119.
Action 15: look for clothes_skirt_2088 around closetdrawer_119.
Action 16: Walk to closetdrawer_119.

##############################
From agent.py
exp(clothes_skirt_2088, closetdrawer_119)
Fail to find clothes_skirt_2088 around closetdrawer_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)exp(clothes_skirt_2088, basket_for_clothes_2006)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(ironing_board_2074)put_executor(clothes_skirt_2088, ironing_board_2074)walk_executor(clothes_skirt_2088)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Robot find: clothes_pants_2085, clothes_shirt_2086, clothes_socks_2087, clothes_skirt_2088, towel_rack_31, towel_rack_33, towel_rack_32, towel_rack_34, mat_22, Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
exp(clothes_skirt_2088, basket_for_clothes_2006)
Find clothes_skirt_2088. 
##############################
From agent.py-> find a plan in act()
grab_executor(clothes_skirt_2088)walk_executor(ironing_board_2074)put_executor(clothes_skirt_2088, ironing_board_2074)walk_executor(clothes_skirt_2088)
##############################
From agent.py
grab_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. Grabbing clothes_skirt_2088 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. 
##############################
From agent.py
put_executor(clothes_skirt_2088, ironing_board_2074)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. ironing_board_2074 is close clothes_skirt_2088. clothes_skirt_2088 is close ironing_board_2074. clothes_skirt_2088 is on ironing_board_2074. clothes_skirt_2088 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot has successfully placed the skirt on the ironing board and ensured the iron is on. However, the robot needs to perform actions to use the iron to iron the skirt.
##############################
From agent.py
Human Instruction: The robot has successfully placed the skirt on the ironing board and ensured the iron is on. However, the robot needs to perform actions to use the iron to iron the skirt.

The actions you have taken:
Action 1: Walk to ironing_board_2074.
Action 2: look for iron_2089 around ironing_board_2074.
Action 3: Walk to iron_2089.
Action 4: Plug in iron_2089.
Action 5: Switch on iron_2089.
Action 6: Walk to closetdrawer_119.
Action 7: look for clothes_skirt_2088 around closetdrawer_119.
Action 8: Walk to closetdrawer_119.
Action 9: look for clothes_skirt_2088 around closetdrawer_119.
Action 10: Walk to closetdrawer_119.
Action 11: look for clothes_skirt_2088 around closetdrawer_119.
Action 12: Walk to closetdrawer_119.
Action 13: look for clothes_skirt_2088 around closetdrawer_119.
Action 14: Walk to closetdrawer_119.
Action 15: look for clothes_skirt_2088 around closetdrawer_119.
Action 16: Walk to closetdrawer_119.
Action 17: look for clothes_skirt_2088 around closetdrawer_119.
Action 18: Walk to basket_for_clothes_2006.
Action 19: look for clothes_skirt_2088 around basket_for_clothes_2006.
Action 20: Grab clothes_skirt_2088.
Action 21: Walk to ironing_board_2074.
Action 22: Put clothes_skirt_2088 on ironing_board_2074.
Action 23: Walk to clothes_skirt_2088.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_gloves_2046_around_closetdrawer_119(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==119
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_gloves,closetdrawer_instance)
        else:
            exp(clothes_gloves,closetdrawer_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
def is_skirt_on_ironing_board(skirt:item, ironing_board:item):
    # Function to check if the skirt is on the ironing board
    symbol skirt_on_board=exists o: item : (is_clothes_skirt(o) and on(o, ironing_board))
    return skirt_on_board

def is_iron_working(iron:item):
    # Function to check if the iron is plugged in and turned on
    return plugged(iron) and is_on(iron)

behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board) # Ensure the skirt is placed on the ironing board
        if is_iron_working(iron):
            # Proceed if iron is plugged in and turned on
            achieve_once clean(skirt) # Assume ironing results in a clean state for simplicity

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind iron: item where:
            is_iron(iron)
        
        if not is_skirt_on_ironing_board(skirt, ironing_board):
            achieve_once on(skirt, ironing_board)
        
        if is_iron_working(iron):
            iron_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_skirt_on_ironing_board(skirt:item, ironing_board:item):
    # Function to check if the skirt is on the ironing board
    symbol skirt_on_board=exists o: item : (is_clothes_skirt(o) and on(o, ironing_board))
    return skirt_on_board

def is_iron_working(iron:item):
    # Function to check if the iron is plugged in and turned on
    return plugged(iron) and is_on(iron)

behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board) # Ensure the skirt is placed on the ironing board
        if is_iron_working(iron):
            # Proceed if iron is plugged in and turned on
            achieve_once clean(skirt) # Assume ironing results in a clean state for simplicity

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind iron: item where:
            is_iron(iron)
        
        if not is_skirt_on_ironing_board(skirt, ironing_board):
            achieve_once on(skirt, ironing_board)
        
        if is_iron_working(iron):
            iron_skirt(skirt, iron, ironing_board)

##############################
From agent.py-> find a plan in act()
grab_executor(clothes_skirt_2088)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_skirt_2088)switchoff_executor(faucet_43)
##############################
From agent.py
grab_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. Grabbing clothes_skirt_2088 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
wash_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. clothes_skirt_2088 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to perform actions to actually use the iron on the skirt. The skirt has been placed on the ironing board, and the iron is powered on, but no action was taken to iron the skirt.
##############################
Task Summary:
Task Goal:
Directly iron a pair of skirt.
Action History:
['walk_executor(ironing_board_2074)', 'walk_executor(iron_2089)', 'plugin_executor(iron_2089)', 'switchon_executor(iron_2089)', 'walk_executor(closetdrawer_119)', 'walk_executor(closetdrawer_119)', 'walk_executor(closetdrawer_119)', 'walk_executor(closetdrawer_119)', 'walk_executor(closetdrawer_119)', 'walk_executor(closetdrawer_119)', 'walk_executor(basket_for_clothes_2006)', 'grab_executor(clothes_skirt_2088)', 'walk_executor(ironing_board_2074)', 'put_executor(clothes_skirt_2088, ironing_board_2074)', 'walk_executor(clothes_skirt_2088)', 'grab_executor(clothes_skirt_2088)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'wash_executor(clothes_skirt_2088)', 'switchoff_executor(faucet_43)']
Time info:
Time consume: 136 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 4
goal correct times: 0
action_num: 20

Task complete rate:
Keystate: k1 - Requires: 5 steps
Action Completion Rate: 0.0
Scene_id: 0
##############################
