From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the jacket.', '2. Wash the jacket using the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2047_around_closetdrawer_119(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==119
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation

behavior wash_jacket(jacket:item):
    body:
        achieve clean(jacket)
        # Ensure the jacket is cleaned through handwashing

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket to be washed
        
        wash_jacket(jacket)
        # Hand wash the jacket

#goal_representation_end

##############################
From agent.py->reset_goal

behavior wash_jacket(jacket:item):
    body:
        achieve clean(jacket)
        # Ensure the jacket is cleaned through handwashing

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket to be washed
        
        wash_jacket(jacket)
        # Hand wash the jacket

##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_119)exp(clothes_jacket_2047, closetdrawer_119)walk_executor(clothes_jacket_2047)grab_executor(clothes_jacket_2047)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_jacket_2047)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_119)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(clothes_jacket_2047, closetdrawer_119)
Fail to find clothes_jacket_2047 around closetdrawer_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_119)exp(clothes_jacket_2047, closetdrawer_119)walk_executor(clothes_jacket_2047)grab_executor(clothes_jacket_2047)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_jacket_2047)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_119)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(clothes_jacket_2047, closetdrawer_119)
Fail to find clothes_jacket_2047 around closetdrawer_119. 
##############################
Error record: object of type 'NoneType' has no len()
##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
['walk_executor(closetdrawer_119)', 'walk_executor(closetdrawer_119)']
Time info:
Time consume: 31 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 1
goal correct times: 0
action_num: 2

Task complete rate:
Keystate: k1 - Requires: 9 steps
Action Completion Rate: 0.0
Scene_id: 0
##############################
