From agent.py
Reset goals: The sub-goals are: 
['1. Iron the shirt.', '2. Put the shirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_shirt_2086_around_closetdrawer_146(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==146
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

behavior find_hanger_114_around_ironing_board_2074(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(hanger,ironing_board_instance)
        else:
            exp(hanger,ironing_board_instance)
    eff:
        unknown[hanger]=False
        close[hanger,ironing_board_instance]=True
        close[ironing_board_instance,hanger]=True
    

#exp_behavior_end

#goal_representation
 
def is_hangable_location(x:item):
    # Check if a location is suitable for hanging clothes
    return exists y: item : (is_hanger(y) or is_ironing_board(y)) and close(x, y)

behavior locate_ironing_board(ironing_board:item):
    body:
        if not visited(ironing_board) and is_ironing_board(ironing_board):
            observe(ironing_board, "Check if the ironing board is in a suitable location for ironing")
        
        if is_hangable_location(ironing_board):
            walk_to(ironing_board)

behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        if is_clothes_shirt(shirt) and is_iron(iron) and plugged(iron):
            if not inhand(shirt):
                grab(shirt)
            
            if is_off(iron):
                switch_on(iron)
            
            put_on(shirt, ironing_board)
            touch(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        bind iron: item where:
            is_iron(iron)
        
        if not plugged(iron):
            plugin(iron)
        
        locate_ironing_board(ironing_board)
        iron_shirt(shirt, ironing_board, iron)
        if inhand(shirt):
            empty_a_hand()


#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_hangable_location(x:item):
    # Check if a location is suitable for hanging clothes
    return exists y: item : (is_hanger(y) or is_ironing_board(y)) and close(x, y)

behavior locate_ironing_board(ironing_board:item):
    body:
        if not visited(ironing_board) and is_ironing_board(ironing_board):
            observe(ironing_board, "Check if the ironing board is in a suitable location for ironing")
        
        if is_hangable_location(ironing_board):
            walk_to(ironing_board)

behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        if is_clothes_shirt(shirt) and is_iron(iron) and plugged(iron):
            if not inhand(shirt):
                grab(shirt)
            
            if is_off(iron):
                switch_on(iron)
            
            put_on(shirt, ironing_board)
            touch(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        bind iron: item where:
            is_iron(iron)
        
        if not plugged(iron):
            plugin(iron)
        
        locate_ironing_board(ironing_board)
        iron_shirt(shirt, ironing_board, iron)
        if inhand(shirt):
            empty_a_hand()


##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)plugin_executor(iron_2089)walk_executor(ironing_board_2074)obs(ironing_board_2074, Check if the ironing board is in a suitable location for ironing)walk_executor(closetdrawer_146)exp(clothes_shirt_2086, closetdrawer_146)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)walk_executor(iron_2089)touch_executor(iron_2089)
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: iron_2089, Robot is close to the ironing_board_2074. 
##############################
From agent.py
exp(iron_2089, ironing_board_2074)
Find iron_2089. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2089)plugin_executor(iron_2089)walk_executor(ironing_board_2074)obs(ironing_board_2074, Check if the ironing board is in a suitable location for ironing)walk_executor(closetdrawer_146)exp(clothes_shirt_2086, closetdrawer_146)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(iron_2089)switchon_executor(iron_2089)walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)touch_executor(iron_2089)
##############################
From agent.py
walk_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. 
##############################
From agent.py
plugin_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. iron_2089 is plugged in. 
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: Robot is close to the ironing_board_2074. 
##############################
From agent.py
obs(ironing_board_2074, Check if the ironing board is in a suitable location for ironing)
Get this information:  ironing_board_2074 is close to iron_2089. ironing_board_2074 is close to bathroom_1. ironing_board_2074 is close to character_65. ironing_board_2074 is inside bathroom_1. iron_2089 is on ironing_board_2074.
##############################
From agent.py
walk_executor(closetdrawer_146)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_146)
Fail to find clothes_shirt_2086 around closetdrawer_146. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_146)exp(clothes_shirt_2086, closetdrawer_146)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(iron_2089)switchon_executor(iron_2089)walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)touch_executor(iron_2089)
##############################
From agent.py
walk_executor(closetdrawer_146)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_146)
Fail to find clothes_shirt_2086 around closetdrawer_146. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_146)exp(clothes_shirt_2086, closetdrawer_146)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(iron_2089)switchon_executor(iron_2089)walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)touch_executor(iron_2089)
##############################
From agent.py
walk_executor(closetdrawer_146)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_146)
Fail to find clothes_shirt_2086 around closetdrawer_146. 
##############################
Error record: object of type 'NoneType' has no len()
##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
['walk_executor(ironing_board_2074)', 'walk_executor(iron_2089)', 'plugin_executor(iron_2089)', 'walk_executor(ironing_board_2074)', 'walk_executor(closetdrawer_146)', 'walk_executor(closetdrawer_146)', 'walk_executor(closetdrawer_146)']
Time info:
Time consume: 69 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 1
goal correct times: 0
action_num: 7

Task complete rate:
Keystate: k1 - Requires: 9 steps
Keystate: k2 - Requires: 4 steps
Action Completion Rate: 0.0
Scene_id: 0
##############################
