From agent.py
Reset goals: The sub-goals are: 
['1. Put cleaning solution in the dishwasher.  ', '2. Wash the bowls and the plates in the dishwasher.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_kitchen_counter_230(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(detergent,kitchen_counter_instance)
        else:
            exp(detergent,kitchen_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,kitchen_counter_instance]=True
        close[kitchen_counter_instance,detergent]=True
    

behavior find_cleaning_solution_2073_around_cupboard_229(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==229
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cleaning_solution,cupboard_instance)
        else:
            exp(cleaning_solution,cupboard_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,cupboard_instance]=True
        close[cupboard_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior grab_cleaning_solution(cleaning_solution: item):
    body:
        if not inhand(cleaning_solution):
            grab(cleaning_solution)
            # Grab the cleaning solution

behavior load_dishwasher_with_solution(dishwasher: item, cleaning_solution: item):
    body:
        if closed(dishwasher):
            opens(dishwasher)
            # Open the dishwasher if its closed
        if not inside(cleaning_solution, dishwasher):
            put_inside(cleaning_solution, dishwasher)
            # Put the cleaning solution inside the dishwasher

behavior __goal__():
    body:
        bind cleaning_solution: item where:
            is_cleaning_solution(cleaning_solution)
        # Select a cleaning solution
        
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher

        grab_cleaning_solution(cleaning_solution)
        load_dishwasher_with_solution(dishwasher, cleaning_solution)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior grab_cleaning_solution(cleaning_solution: item):
    body:
        if not inhand(cleaning_solution):
            grab(cleaning_solution)
            # Grab the cleaning solution

behavior load_dishwasher_with_solution(dishwasher: item, cleaning_solution: item):
    body:
        if closed(dishwasher):
            opens(dishwasher)
            # Open the dishwasher if its closed
        if not inside(cleaning_solution, dishwasher):
            put_inside(cleaning_solution, dishwasher)
            # Put the cleaning solution inside the dishwasher

behavior __goal__():
    body:
        bind cleaning_solution: item where:
            is_cleaning_solution(cleaning_solution)
        # Select a cleaning solution
        
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher

        grab_cleaning_solution(cleaning_solution)
        load_dishwasher_with_solution(dishwasher, cleaning_solution)

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_229)open_executor(cupboard_229)exp(cleaning_solution_2073, cupboard_229)walk_executor(cleaning_solution_2073)grab_executor(cleaning_solution_2073)walk_executor(dishwasher_1001)open_executor(dishwasher_1001)putin_executor(cleaning_solution_2073, dishwasher_1001)
##############################
From agent.py
walk_executor(cupboard_229)
Robot find: Robot is close to the cupboard_229. 
##############################
From agent.py
open_executor(cupboard_229)
Robot find: Robot is close to the cupboard_229. cupboard_229 is opened. 
##############################
From agent.py
exp(cleaning_solution_2073, cupboard_229)
Fail to find cleaning_solution_2073 around cupboard_229. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)exp(cleaning_solution_2073, kitchen_counter_230)walk_executor(cleaning_solution_2073)grab_executor(cleaning_solution_2073)walk_executor(dishwasher_1001)open_executor(dishwasher_1001)putin_executor(cleaning_solution_2073, dishwasher_1001)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the kitchen_counter_230. 
##############################
From agent.py
exp(cleaning_solution_2073, kitchen_counter_230)
Fail to find cleaning_solution_2073 around kitchen_counter_230. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_232)exp(cleaning_solution_2073, faucet_232)walk_executor(cleaning_solution_2073)grab_executor(cleaning_solution_2073)walk_executor(dishwasher_1001)open_executor(dishwasher_1001)putin_executor(cleaning_solution_2073, dishwasher_1001)
##############################
From agent.py
walk_executor(faucet_232)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the faucet_232. 
##############################
From agent.py
exp(cleaning_solution_2073, faucet_232)
Fail to find cleaning_solution_2073 around faucet_232. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_231)exp(cleaning_solution_2073, sink_231)walk_executor(cleaning_solution_2073)grab_executor(cleaning_solution_2073)walk_executor(dishwasher_1001)open_executor(dishwasher_1001)putin_executor(cleaning_solution_2073, dishwasher_1001)
##############################
From agent.py
walk_executor(sink_231)
Robot find: soap_2054, plate_1000, Robot is close to the kitchen_counter_230. Robot is close to the sink_231. 
##############################
From agent.py
exp(cleaning_solution_2073, sink_231)
Fail to find cleaning_solution_2073 around sink_231. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_1001)open_executor(dishwasher_1001)exp(cleaning_solution_2073, dishwasher_1001)walk_executor(cleaning_solution_2073)grab_executor(cleaning_solution_2073)walk_executor(dishwasher_1001)putin_executor(cleaning_solution_2073, dishwasher_1001)
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. 
##############################
From agent.py
open_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is opened. 
##############################
From agent.py
exp(cleaning_solution_2073, dishwasher_1001)
Fail to find cleaning_solution_2073 around dishwasher_1001. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(cleaning_solution_2073, fridge_289)walk_executor(cleaning_solution_2073)grab_executor(cleaning_solution_2073)walk_executor(dishwasher_1001)putin_executor(cleaning_solution_2073, dishwasher_1001)
##############################
From agent.py
walk_executor(fridge_289)
Robot find: Robot is close to the fridge_289. 
##############################
From agent.py
switchoff_executor(fridge_289)
Robot find: Robot is close to the fridge_289. fridge_289 is turned off. 
##############################
From agent.py
open_executor(fridge_289)
Robot find: sauce_2078, food_steak_2008, food_apple_2009, food_bacon_2010, food_banana_2011, food_bread_2012, food_cake_2013, food_carrot_2014, food_cereal_2015, food_cheese_2016, food_chicken_2017, food_dessert_2018, food_donut_2019, food_egg_2020, food_fish_2021, food_food_2022, food_fruit_2023, food_hamburger_2024, food_ice_cream_2025, food_jam_2026, food_kiwi_2027, food_lemon_2028, food_noodles_2029, food_oatmeal_2030, food_orange_2031, food_onion_2032, food_peanut_butter_2033, food_pizza_2034, food_potato_2035, food_rice_2036, food_salt_2037, food_snack_2038, food_sugar_2039, food_turkey_2040, food_vegetable_2041, dry_pasta_2042, milk_2043, Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. fridge_289 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find cleaning_solution_2073 ?
Answer: Go to bathroom_1. Locate sink_42. The cleaning_solution_2073 is on sink_42. Check near the faucet or any area on top of the sink surface.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to bathroom_1. Locate sink_42. The cleaning_solution_2073 is on sink_42. Check near the faucet or any area on top of the sink surface.

The actions you have taken:
Action 1: Walk to cupboard_229.
Action 2: Open cupboard_229.
Action 3: look for cleaning_solution_2073 around cupboard_229.
Action 4: Walk to kitchen_counter_230.
Action 5: look for cleaning_solution_2073 around kitchen_counter_230.
Action 6: Walk to faucet_232.
Action 7: look for cleaning_solution_2073 around faucet_232.
Action 8: Walk to sink_231.
Action 9: look for cleaning_solution_2073 around sink_231.
Action 10: Walk to dishwasher_1001.
Action 11: Open dishwasher_1001.
Action 12: look for cleaning_solution_2073 around dishwasher_1001.
Action 13: Walk to fridge_289.
Action 14: Switch off fridge_289.
Action 15: Open fridge_289.

##############################
From agent.py
exp(cleaning_solution_2073, fridge_289)
Fail to find cleaning_solution_2073 around fridge_289. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_42)exp(cleaning_solution_2073, sink_42)walk_executor(cleaning_solution_2073)grab_executor(cleaning_solution_2073)walk_executor(dishwasher_1001)putin_executor(cleaning_solution_2073, dishwasher_1001)
##############################
From agent.py
walk_executor(sink_42)
Robot find: detergent_2084, cleaning_solution_2073, towel_rack_31, soap_2053, towel_rack_32, towel_rack_34, Robot is close to the bathroom_counter_41. Robot is close to the sink_42. 
##############################
From agent.py
exp(cleaning_solution_2073, sink_42)
Find cleaning_solution_2073. 
##############################
From agent.py-> find a plan in act()
walk_executor(cleaning_solution_2073)grab_executor(cleaning_solution_2073)walk_executor(dishwasher_1001)putin_executor(cleaning_solution_2073, dishwasher_1001)
##############################
From agent.py
walk_executor(cleaning_solution_2073)
Robot find: Robot is close to the sink_42. Robot is close to the cleaning_solution_2073. 
##############################
From agent.py
grab_executor(cleaning_solution_2073)
Robot find: Robot is close to the sink_42. Robot is close to the cleaning_solution_2073. Grabbing cleaning_solution_2073 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the cleaning_solution_2073. Robot is close to the dishwasher_1001. 
##############################
From agent.py
putin_executor(cleaning_solution_2073, dishwasher_1001)
Robot find: Robot is close to the cleaning_solution_2073. Robot is close to the dishwasher_1001. cleaning_solution_2073 is inside dishwasher_1001. cleaning_solution_2073 is close dishwasher_1001. dishwasher_1001 is close cleaning_solution_2073. cleaning_solution_2073 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2072_around_walllamp_351(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind walllamp_instance:item where:
            is_walllamp(walllamp_instance) and id[walllamp_instance]==351
        achieve close_char(char,walllamp_instance)
        if can_open(walllamp_instance):
            achieve_once open(walllamp_instance)
            exp(bowl,walllamp_instance)
        else:
            exp(bowl,walllamp_instance)
    eff:
        unknown[bowl]=False
        close[bowl,walllamp_instance]=True
        close[walllamp_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
def in_dishwasher(o: item, dishwasher: item):
    # Function to check if an item is inside a specific dishwasher
    symbol inside_dishwasher=inside(o, dishwasher)
    return inside_dishwasher

def dishwasher_contains_dirty_items(dishwasher: item):
    # Function to check if the dishwasher contains dirty items
    symbol contains_dirty=exists o: item : ((is_plate(o) or is_bowl(o)) and dirty(o) and inside(o, dishwasher))
    return contains_dirty

behavior load_dirty_dishes_to_dishwasher(sink: item, dishwasher: item): 
    # Behavior to load dirty items from the sink to the dishwasher
    body:
        foreach o: item:
            if (is_plate(o) or is_bowl(o)) and dirty(o) and inside(o, sink):
                if not in_dishwasher(o, dishwasher):
                    put_inside(o, dishwasher)

behavior start_dishwasher_if_needed(dishwasher: item):
    # Behavior to start the dishwasher if it contains dirty items
    body:
        if dishwasher_contains_dirty_items(dishwasher):
            if open(dishwasher):
                closes(dishwasher) # Close the dishwasher door
            if is_off(dishwasher):
                switch_on(dishwasher) # Turn on the dishwasher

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and id[sink] == 231
        # Select sink with ID 231
        
        bind dishwasher: item where:
            is_dishwasher(dishwasher) and id[dishwasher] == 1001
        # Select the dishwasher with ID 1001

        load_dirty_dishes_to_dishwasher(sink, dishwasher)
        start_dishwasher_if_needed(dishwasher)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2072_around_wallshelf_234(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==234
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(bowl,wallshelf_instance)
        else:
            exp(bowl,wallshelf_instance)
    eff:
        unknown[bowl]=False
        close[bowl,wallshelf_instance]=True
        close[wallshelf_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
def has_bowls_or_plates_inside(dishwasher:item):
    # Function to check if there are bowls or plates inside the dishwasher
    symbol has_bowls_or_plates=exists o: item : ((is_bowl(o) or is_plate(o)) and inside(o, dishwasher))
    return has_bowls_or_plates

behavior load_dishwasher(o:item, dishwasher:item):
    body:
        if not inside(o, dishwasher):
            put_inside(o, dishwasher)
            # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        if open(dishwasher):
            closes(dishwasher) # Close the dishwasher door
        if is_off(dishwasher):
            switch_on(dishwasher) # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select the dishwasher
        foreach o: item:
        # Load all bowls and plates into the dishwasher
            if is_bowl(o) or is_plate(o) and not has_bowls_or_plates_inside(dishwasher):
                load_dishwasher(o, dishwasher)
        start_dishwasher(dishwasher) # Start the dishwasher

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def has_bowls_or_plates_inside(dishwasher:item):
    # Function to check if there are bowls or plates inside the dishwasher
    symbol has_bowls_or_plates=exists o: item : ((is_bowl(o) or is_plate(o)) and inside(o, dishwasher))
    return has_bowls_or_plates

behavior load_dishwasher(o:item, dishwasher:item):
    body:
        if not inside(o, dishwasher):
            put_inside(o, dishwasher)
            # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        if open(dishwasher):
            closes(dishwasher) # Close the dishwasher door
        if is_off(dishwasher):
            switch_on(dishwasher) # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select the dishwasher
        foreach o: item:
        # Load all bowls and plates into the dishwasher
            if is_bowl(o) or is_plate(o) and not has_bowls_or_plates_inside(dishwasher):
                load_dishwasher(o, dishwasher)
        start_dishwasher(dishwasher) # Start the dishwasher

##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_234)exp(bowl_2071, wallshelf_234)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(wallshelf_234)exp(bowl_2072, wallshelf_234)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(wallshelf_234)
Robot find: Robot is close to the wallshelf_234. 
##############################
From agent.py
exp(bowl_2071, wallshelf_234)
Fail to find bowl_2071 around wallshelf_234. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffee_table_2068)exp(bowl_2071, coffee_table_2068)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(coffee_table_2068)exp(bowl_2072, coffee_table_2068)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot find: Robot is close to the coffee_table_2068. 
##############################
From agent.py
exp(bowl_2071, coffee_table_2068)
Fail to find bowl_2071 around coffee_table_2068. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_35)exp(bowl_2071, wallshelf_35)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(wallshelf_35)exp(bowl_2072, wallshelf_35)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(wallshelf_35)
Robot find: towel_rack_33, Robot is close to the wallshelf_35. 
##############################
From agent.py
exp(bowl_2071, wallshelf_35)
Fail to find bowl_2071 around wallshelf_35. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_235)exp(bowl_2071, wallshelf_235)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(wallshelf_235)exp(bowl_2072, wallshelf_235)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(wallshelf_235)
Robot find: Robot is close to the wallshelf_235. 
##############################
From agent.py
exp(bowl_2071, wallshelf_235)
Fail to find bowl_2071 around wallshelf_235. 
##############################
From agent.py-> find a plan in act()
walk_executor(bench_227)exp(bowl_2071, bench_227)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(bench_227)exp(bowl_2072, bench_227)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(bench_227)
Robot find: mat_236, mat_237, wall_clock_249, Robot is close to the bench_227. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2071 ?
Answer: Locate the dining room, identified as dining_room_201. Inside dining_room_201, find the table labeled table_226. The target item, bowl_2071, is on top of table_226.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to bathroom_1. Locate sink_42. The cleaning_solution_2073 is on sink_42. Check near the faucet or any area on top of the sink surface.
Locate the dining room, identified as dining_room_201. Inside dining_room_201, find the table labeled table_226. The target item, bowl_2071, is on top of table_226.

The actions you have taken:
Action 1: Walk to cupboard_229.
Action 2: Open cupboard_229.
Action 3: look for cleaning_solution_2073 around cupboard_229.
Action 4: Walk to kitchen_counter_230.
Action 5: look for cleaning_solution_2073 around kitchen_counter_230.
Action 6: Walk to faucet_232.
Action 7: look for cleaning_solution_2073 around faucet_232.
Action 8: Walk to sink_231.
Action 9: look for cleaning_solution_2073 around sink_231.
Action 10: Walk to dishwasher_1001.
Action 11: Open dishwasher_1001.
Action 12: look for cleaning_solution_2073 around dishwasher_1001.
Action 13: Walk to fridge_289.
Action 14: Switch off fridge_289.
Action 15: Open fridge_289.
Action 16: look for cleaning_solution_2073 around fridge_289.
Action 17: Walk to sink_42.
Action 18: look for cleaning_solution_2073 around sink_42.
Action 19: Walk to cleaning_solution_2073.
Action 20: Grab cleaning_solution_2073.
Action 21: Walk to dishwasher_1001.
Action 22: Put cleaning_solution_2073 into dishwasher_1001.
Action 23: Walk to wallshelf_234.
Action 24: look for bowl_2071 around wallshelf_234.
Action 25: Walk to coffee_table_2068.
Action 26: look for bowl_2071 around coffee_table_2068.
Action 27: Walk to wallshelf_35.
Action 28: look for bowl_2071 around wallshelf_35.
Action 29: Walk to wallshelf_235.
Action 30: look for bowl_2071 around wallshelf_235.
Action 31: Walk to bench_227.

##############################
From agent.py
exp(bowl_2071, bench_227)
Fail to find bowl_2071 around bench_227. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_226)exp(bowl_2071, table_226)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(table_226)exp(bowl_2072, table_226)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(table_226)
Robot find: bowl_2071, coffee_filter_2000, drawing_2003, bowl_2072, fork_2080, fork_2081, Robot is close to the table_226. 
##############################
From agent.py
exp(bowl_2071, table_226)
Find bowl_2071. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(bowl_2071)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2071. 
##############################
From agent.py
grab_executor(bowl_2071)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2071. Grabbing bowl_2071 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the bowl_2071. Robot is close to the dishwasher_1001. Robot is close to the cleaning_solution_2073. 
##############################
From agent.py
putin_executor(bowl_2071, dishwasher_1001)
Robot find: Robot is close to the bowl_2071. Robot is close to the dishwasher_1001. Robot is close to the cleaning_solution_2073. bowl_2071 is close dishwasher_1001. bowl_2071 is inside dishwasher_1001. dishwasher_1001 is close bowl_2071. bowl_2071 released by right hand. 
##############################
From agent.py
walk_executor(bowl_2072)
Robot find: Robot is close to the bowl_2072. Robot is close to the table_226. 
##############################
From agent.py
grab_executor(bowl_2072)
Robot find: Robot is close to the bowl_2072. Robot is close to the table_226. Grabbing bowl_2072 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the bowl_2072. Robot is close to the dishwasher_1001. Robot is close to the cleaning_solution_2073. Robot is close to the bowl_2071. 
##############################
From agent.py
putin_executor(bowl_2072, dishwasher_1001)
Robot find: Robot is close to the bowl_2072. Robot is close to the dishwasher_1001. Robot is close to the cleaning_solution_2073. Robot is close to the bowl_2071. bowl_2072 is close dishwasher_1001. bowl_2072 is inside dishwasher_1001. dishwasher_1001 is close bowl_2072. bowl_2072 released by right hand. 
##############################
From agent.py
close_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is closed. 
##############################
From agent.py
switchon_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Put cleaning solution in the dishwasher. Then wash the bowls and the plates with dishwasher.
Action History:
['walk_executor(cupboard_229)', 'open_executor(cupboard_229)', 'walk_executor(kitchen_counter_230)', 'walk_executor(faucet_232)', 'walk_executor(sink_231)', 'walk_executor(dishwasher_1001)', 'open_executor(dishwasher_1001)', 'walk_executor(fridge_289)', 'switchoff_executor(fridge_289)', 'open_executor(fridge_289)', 'walk_executor(sink_42)', 'walk_executor(cleaning_solution_2073)', 'grab_executor(cleaning_solution_2073)', 'walk_executor(dishwasher_1001)', 'putin_executor(cleaning_solution_2073, dishwasher_1001)', 'walk_executor(wallshelf_234)', 'walk_executor(coffee_table_2068)', 'walk_executor(wallshelf_35)', 'walk_executor(wallshelf_235)', 'walk_executor(bench_227)', 'walk_executor(table_226)', 'walk_executor(bowl_2071)', 'grab_executor(bowl_2071)', 'walk_executor(dishwasher_1001)', 'putin_executor(bowl_2071, dishwasher_1001)', 'walk_executor(bowl_2072)', 'grab_executor(bowl_2072)', 'walk_executor(dishwasher_1001)', 'putin_executor(bowl_2072, dishwasher_1001)', 'close_executor(dishwasher_1001)', 'switchon_executor(dishwasher_1001)']
Time info:
Time consume: 228 seconds
Exp_helper query times: 2
Guidance query times: 0
library scale: 0
goal generate times: 3
goal correct times: 0
action_num: 31

Task complete rate:
Keystate: k1 - Requires: 0 steps
Keystate: k2 - Requires: 8 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
