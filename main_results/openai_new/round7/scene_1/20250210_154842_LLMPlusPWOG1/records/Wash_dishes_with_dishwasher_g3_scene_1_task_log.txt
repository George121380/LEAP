From agent.py
Reset goals: The sub-goals are: 
['Wash the bowls and plates with dishwasher. And wash forks by hand.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_fork_2150_around_cupboard_117(fork:item):
    goal: not unknown(fork)
    body:
        assert is_fork(fork)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(fork,cupboard_instance)
        else:
            exp(fork,cupboard_instance)
    eff:
        unknown[fork]=False
        close[fork,cupboard_instance]=True
        close[cupboard_instance,fork]=True
    

behavior find_plate_2152_around_cupboard_117(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(plate,cupboard_instance)
        else:
            exp(plate,cupboard_instance)
    eff:
        unknown[plate]=False
        close[plate,cupboard_instance]=True
        close[cupboard_instance,plate]=True
    

behavior find_bowl_2142_around_cupboard_117(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

behavior find_detergent_2155_around_dishwasher_129(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==129
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(detergent,dishwasher_instance)
        else:
            exp(detergent,dishwasher_instance)
    eff:
        unknown[detergent]=False
        close[detergent,dishwasher_instance]=True
        close[dishwasher_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(utensil:item, dishwasher:item):
    body:
        achieve_once inside(utensil, dishwasher)
        # Place the utensil inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

behavior wash_by_hand(utensil:item):
    body:
        wash(utensil) # Wash the utensil by hand

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher

        foreach o: item:
        # Load all bowls and plates into the dishwasher
            if is_bowl(o) or is_plate(o) and dirty(o):
                load_dishwasher(o, dishwasher)

        start_dishwasher(dishwasher) # Start the dishwasher

        foreach o: item:
        # Wash all dirty forks by hand
            if is_fork(o) and dirty(o):
                wash_by_hand(o)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior load_dishwasher(utensil:item, dishwasher:item):
    body:
        achieve_once inside(utensil, dishwasher)
        # Place the utensil inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

behavior wash_by_hand(utensil:item):
    body:
        wash(utensil) # Wash the utensil by hand

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher

        foreach o: item:
        # Load all bowls and plates into the dishwasher
            if is_bowl(o) or is_plate(o) and dirty(o):
                load_dishwasher(o, dishwasher)

        start_dishwasher(dishwasher) # Start the dishwasher

        foreach o: item:
        # Wash all dirty forks by hand
            if is_fork(o) and dirty(o):
                wash_by_hand(o)

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(bowl_2140, cupboard_117)walk_executor(dishwasher_129)open_executor(dishwasher_129)walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(dishwasher_129)putin_executor(bowl_2140, dishwasher_129)walk_executor(cupboard_117)exp(bowl_2141, cupboard_117)walk_executor(bowl_2141)grab_executor(bowl_2141)walk_executor(dishwasher_129)putin_executor(bowl_2141, dishwasher_129)walk_executor(cupboard_117)exp(bowl_2142, cupboard_117)walk_executor(bowl_2142)grab_executor(bowl_2142)walk_executor(dishwasher_129)putin_executor(bowl_2142, dishwasher_129)close_executor(dishwasher_129)switchon_executor(dishwasher_129)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, pot_78, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(bowl_2140, cupboard_117)
Fail to find bowl_2140 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(bowl_2140, cupboard_118)walk_executor(dishwasher_129)open_executor(dishwasher_129)walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(dishwasher_129)putin_executor(bowl_2140, dishwasher_129)walk_executor(cupboard_118)exp(bowl_2141, cupboard_118)walk_executor(bowl_2141)grab_executor(bowl_2141)walk_executor(dishwasher_129)putin_executor(bowl_2141, dishwasher_129)walk_executor(cupboard_118)exp(bowl_2142, cupboard_118)walk_executor(bowl_2142)grab_executor(bowl_2142)walk_executor(dishwasher_129)putin_executor(bowl_2142, dishwasher_129)close_executor(dishwasher_129)switchon_executor(dishwasher_129)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(bowl_2140, cupboard_118)
Fail to find bowl_2140 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_120)exp(bowl_2140, sink_120)walk_executor(dishwasher_129)open_executor(dishwasher_129)walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(dishwasher_129)putin_executor(bowl_2140, dishwasher_129)walk_executor(sink_120)exp(bowl_2141, sink_120)walk_executor(bowl_2141)grab_executor(bowl_2141)walk_executor(dishwasher_129)putin_executor(bowl_2141, dishwasher_129)walk_executor(sink_120)exp(bowl_2142, sink_120)walk_executor(bowl_2142)grab_executor(bowl_2142)walk_executor(dishwasher_129)putin_executor(bowl_2142, dishwasher_129)close_executor(dishwasher_129)switchon_executor(dishwasher_129)
##############################
From agent.py
walk_executor(sink_120)
Robot find: fork_2150, bowl_2142, food_salt_2041, soap_2126, soap_2010, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, ice_2024, Robot is close to the sink_120. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(bowl_2140, sink_120)
Find bowl_2140. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_129)open_executor(dishwasher_129)walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(dishwasher_129)putin_executor(bowl_2140, dishwasher_129)walk_executor(bowl_2141)grab_executor(bowl_2141)walk_executor(dishwasher_129)putin_executor(bowl_2141, dishwasher_129)walk_executor(bowl_2142)grab_executor(bowl_2142)walk_executor(dishwasher_129)putin_executor(bowl_2142, dishwasher_129)walk_executor(plate_2152)grab_executor(plate_2152)walk_executor(dishwasher_129)putin_executor(plate_2152, dishwasher_129)close_executor(dishwasher_129)switchon_executor(dishwasher_129)
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the dishwasher_129. 
##############################
From agent.py
open_executor(dishwasher_129)
Robot find: detergent_2011, measuring_cup_2012, Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the measuring_cup_2012. dishwasher_129 is opened. 
##############################
From agent.py
walk_executor(bowl_2140)
Robot find: Robot is close to the bowl_2140. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
grab_executor(bowl_2140)
Robot find: Robot is close to the bowl_2140. Robot is close to the kitchen_counter_119. Grabbing bowl_2140 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the bowl_2140. Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the measuring_cup_2012. 
##############################
From agent.py
putin_executor(bowl_2140, dishwasher_129)
Robot find: Robot is close to the bowl_2140. Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the measuring_cup_2012. dishwasher_129 is close bowl_2140. bowl_2140 is close dishwasher_129. bowl_2140 is inside dishwasher_129. bowl_2140 released by right hand. 
##############################
From agent.py
walk_executor(bowl_2141)
Robot find: Robot is close to the bowl_2141. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
grab_executor(bowl_2141)
Robot find: Robot is close to the bowl_2141. Robot is close to the kitchen_counter_119. Grabbing bowl_2141 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the bowl_2141. Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the bowl_2140. Robot is close to the measuring_cup_2012. 
##############################
From agent.py
putin_executor(bowl_2141, dishwasher_129)
Robot find: Robot is close to the bowl_2141. Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the bowl_2140. Robot is close to the measuring_cup_2012. dishwasher_129 is close bowl_2141. bowl_2141 is inside dishwasher_129. bowl_2141 is close dishwasher_129. bowl_2141 released by right hand. 
##############################
From agent.py
walk_executor(bowl_2142)
Robot find: iron_2161, Robot is close to the bowl_2142. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
grab_executor(bowl_2142)
Robot find: Robot is close to the bowl_2142. Robot is close to the kitchen_counter_119. Grabbing bowl_2142 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the bowl_2142. Robot is close to the dishwasher_129. Robot is close to the measuring_cup_2012. Robot is close to the detergent_2011. Robot is close to the bowl_2140. Robot is close to the bowl_2141. 
##############################
From agent.py
putin_executor(bowl_2142, dishwasher_129)
Robot find: Robot is close to the bowl_2142. Robot is close to the dishwasher_129. Robot is close to the measuring_cup_2012. Robot is close to the detergent_2011. Robot is close to the bowl_2140. Robot is close to the bowl_2141. dishwasher_129 is close bowl_2142. bowl_2142 is close dishwasher_129. bowl_2142 is inside dishwasher_129. bowl_2142 released by right hand. 
##############################
From agent.py
walk_executor(plate_2152)
Robot find: Robot is close to the plate_2152. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
grab_executor(plate_2152)
Robot find: Robot is close to the plate_2152. Robot is close to the kitchen_counter_119. Grabbing plate_2152 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the plate_2152. Robot is close to the dishwasher_129. Robot is close to the measuring_cup_2012. Robot is close to the detergent_2011. Robot is close to the bowl_2140. Robot is close to the bowl_2141. Robot is close to the bowl_2142. 
##############################
From agent.py
putin_executor(plate_2152, dishwasher_129)
Robot find: Robot is close to the plate_2152. Robot is close to the dishwasher_129. Robot is close to the measuring_cup_2012. Robot is close to the detergent_2011. Robot is close to the bowl_2140. Robot is close to the bowl_2141. Robot is close to the bowl_2142. dishwasher_129 is close plate_2152. plate_2152 is inside dishwasher_129. plate_2152 is close dishwasher_129. plate_2152 released by right hand. 
##############################
From agent.py
close_executor(dishwasher_129)
Robot find: Robot is close to the dishwasher_129. dishwasher_129 is closed. 
##############################
From agent.py
switchon_executor(dishwasher_129)
Robot find: Robot is close to the dishwasher_129. dishwasher_129 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to wash the forks by hand. The current actions only include placing bowls and plates in the dishwasher and starting it, but there is no indication that the forks have been washed by hand.
##############################
From agent.py
Human Instruction: You need to wash the forks by hand. The current actions only include placing bowls and plates in the dishwasher and starting it, but there is no indication that the forks have been washed by hand.

The actions you have taken:
Action 1: Walk to cupboard_117.
Action 2: look for bowl_2140 around cupboard_117.
Action 3: Walk to cupboard_118.
Action 4: Open cupboard_118.
Action 5: look for bowl_2140 around cupboard_118.
Action 6: Walk to sink_120.
Action 7: look for bowl_2140 around sink_120.
Action 8: Walk to dishwasher_129.
Action 9: Open dishwasher_129.
Action 10: Walk to bowl_2140.
Action 11: Grab bowl_2140.
Action 12: Walk to dishwasher_129.
Action 13: Put bowl_2140 into dishwasher_129.
Action 14: Walk to bowl_2141.
Action 15: Grab bowl_2141.
Action 16: Walk to dishwasher_129.
Action 17: Put bowl_2141 into dishwasher_129.
Action 18: Walk to bowl_2142.
Action 19: Grab bowl_2142.
Action 20: Walk to dishwasher_129.
Action 21: Put bowl_2142 into dishwasher_129.
Action 22: Walk to plate_2152.
Action 23: Grab plate_2152.
Action 24: Walk to dishwasher_129.
Action 25: Put plate_2152 into dishwasher_129.
Action 26: Close dishwasher_129.
Action 27: Switch on dishwasher_129.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2010_around_sink_19(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==19
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_rag_2025_around_kitchen_counter_123(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(rag,kitchen_counter_instance)
        else:
            exp(rag,kitchen_counter_instance)
    eff:
        unknown[rag]=False
        close[rag,kitchen_counter_instance]=True
        close[kitchen_counter_instance,rag]=True
    

#exp_behavior_end

#goal_representation

behavior load_dishwasher(dish:item, dishwasher:item):
    body:
        achieve_once inside(dish, dishwasher)
        # Place the dish inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

behavior wash_forks_by_hand(fork:item):
    body:
        wash(fork) # Wash the fork by hand
        achieve clean(fork) # Ensure the fork is clean after washing

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher) 
        # Select a dishwasher

        bind bowl_2140: item where:
            is_bowl(bowl_2140) and id[bowl_2140] == 2140
        bind bowl_2141: item where:
            is_bowl(bowl_2141) and id[bowl_2141] == 2141
        bind bowl_2142: item where:
            is_bowl(bowl_2142) and id[bowl_2142] == 2142
        bind plate_2152: item where:
            is_plate(plate_2152) and id[plate_2152] == 2152
        # Select the bowls and plate that have been placed in the dishwasher

        load_dishwasher(bowl_2140, dishwasher)
        load_dishwasher(bowl_2141, dishwasher)
        load_dishwasher(bowl_2142, dishwasher)
        load_dishwasher(plate_2152, dishwasher)
        start_dishwasher(dishwasher) # Start the dishwasher

        bind fork_1: item where:
            is_fork(fork_1)
        bind fork_2: item where:
            is_fork(fork_2) and fork_2 = fork_1
        # Select forks that need to be washed by hand

        wash_forks_by_hand(fork_1)
        wash_forks_by_hand(fork_2) 

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2143_around_faucet_121(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind faucet_instance:item where:
            is_faucet(faucet_instance) and id[faucet_instance]==121
        achieve close_char(char,faucet_instance)
        if can_open(faucet_instance):
            achieve_once open(faucet_instance)
            exp(cleaning_solution,faucet_instance)
        else:
            exp(cleaning_solution,faucet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,faucet_instance]=True
        close[faucet_instance,cleaning_solution]=True
    

behavior find_towel_2128_around_sink_19(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==19
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(towel,sink_instance)
        else:
            exp(towel,sink_instance)
    eff:
        unknown[towel]=False
        close[towel,sink_instance]=True
        close[sink_instance,towel]=True
    

behavior find_soap_2126_around_sink_19(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==19
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

behavior wash_forks_by_hand(fork:item):
    body:
        wash(fork) # Wash the fork by hand

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher
        foreach o: item:
        # Load all bowls and plates from the current context into the dishwasher
            if is_bowl(o) or is_plate(o):
                load_dishwasher(o, dishwasher)
        start_dishwasher(dishwasher) # Start the dishwasher

        foreach fork: item:
            if is_fork(fork) and dirty(fork):
                wash_forks_by_hand(fork) # Wash all dirty forks by hand

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2125_around_sink_19(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==19
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_forks_by_hand(fork:item):
    body:
        wash(fork)

behavior clean_dishwasher_load(dishwasher: item, plate: item, bowl: item):
    body:
        achieve_once inside(plate, dishwasher)
        achieve_once inside(bowl, dishwasher)

behavior start_dishwasher(dishwasher: item):
    body:
        achieve_once closed(dishwasher)
        achieve_once is_on(dishwasher)

behavior wash_dishes_and_utensils():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Wash bowls and plates using the dishwasher
        foreach o: item:
            if is_plate(o) or is_bowl(o):
                clean_dishwasher_load(dishwasher, o, o)
        start_dishwasher(dishwasher)

        # Wash the forks by hand
        foreach fork: item:
            if is_fork(fork):
                wash_forks_by_hand(fork)

behavior __goal__():
    body:
        wash_dishes_and_utensils()

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior wash_forks_by_hand(fork:item):
    body:
        wash(fork)

behavior clean_dishwasher_load(dishwasher: item, plate: item, bowl: item):
    body:
        achieve_once inside(plate, dishwasher)
        achieve_once inside(bowl, dishwasher)

behavior start_dishwasher(dishwasher: item):
    body:
        achieve_once closed(dishwasher)
        achieve_once is_on(dishwasher)

behavior wash_dishes_and_utensils():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Wash bowls and plates using the dishwasher
        foreach o: item:
            if is_plate(o) or is_bowl(o):
                clean_dishwasher_load(dishwasher, o, o)
        start_dishwasher(dishwasher)

        # Wash the forks by hand
        foreach fork: item:
            if is_fork(fork):
                wash_forks_by_hand(fork)

behavior __goal__():
    body:
        wash_dishes_and_utensils()

##############################
From agent.py-> find a plan in act()
walk_executor(fork_2150)grab_executor(fork_2150)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(fork_2150)switchoff_executor(faucet_20)walk_executor(fork_2151)grab_executor(fork_2151)walk_executor(kitchen_counter_119)put_executor(fork_2150, kitchen_counter_119)switchon_executor(faucet_121)wash_executor(fork_2151)switchoff_executor(faucet_121)
##############################
From agent.py
walk_executor(fork_2150)
Robot find: Robot is close to the fork_2150. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
grab_executor(fork_2150)
Robot find: Robot is close to the fork_2150. Robot is close to the kitchen_counter_119. Grabbing fork_2150 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot find: mat_32, phone_2029, drawing_33, Robot is close to the fork_2150. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchon_executor(faucet_20)
Robot find: Robot is close to the fork_2150. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned on. 
##############################
From agent.py
wash_executor(fork_2150)
Robot find: Robot is close to the fork_2150. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot find: Robot is close to the fork_2150. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned off. 
##############################
From agent.py
walk_executor(fork_2151)
Robot find: Robot is close to the fork_2150. Robot is close to the kitchen_counter_119. Robot is close to the fork_2151. 
##############################
From agent.py
grab_executor(fork_2151)
Robot find: Robot is close to the fork_2150. Robot is close to the kitchen_counter_119. Robot is close to the fork_2151. Grabbing fork_2151 by left hand. 
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: Robot is close to the fork_2150. Robot is close to the kitchen_counter_119. Robot is close to the fork_2151. 
##############################
From agent.py
put_executor(fork_2150, kitchen_counter_119)
Robot find: Robot is close to the fork_2150. Robot is close to the kitchen_counter_119. Robot is close to the fork_2151. fork_2150 is close kitchen_counter_119. fork_2150 is on kitchen_counter_119. fork_2150 released by right hand. 
##############################
From agent.py
switchon_executor(faucet_121)
Robot find: Robot is close to the fork_2150. Robot is close to the kitchen_counter_119. Robot is close to the fork_2151. faucet_121 is turned on. 
##############################
From agent.py
wash_executor(fork_2151)
Robot find: Robot is close to the fork_2150. Robot is close to the kitchen_counter_119. Robot is close to the fork_2151. 
##############################
From agent.py
switchoff_executor(faucet_121)
Robot find: Robot is close to the fork_2150. Robot is close to the kitchen_counter_119. Robot is close to the fork_2151. faucet_121 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Wash the bowls and plates with dishwasher. And wash forks by hand.
Action History:
['walk_executor(cupboard_117)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'walk_executor(sink_120)', 'walk_executor(dishwasher_129)', 'open_executor(dishwasher_129)', 'walk_executor(bowl_2140)', 'grab_executor(bowl_2140)', 'walk_executor(dishwasher_129)', 'putin_executor(bowl_2140, dishwasher_129)', 'walk_executor(bowl_2141)', 'grab_executor(bowl_2141)', 'walk_executor(dishwasher_129)', 'putin_executor(bowl_2141, dishwasher_129)', 'walk_executor(bowl_2142)', 'grab_executor(bowl_2142)', 'walk_executor(dishwasher_129)', 'putin_executor(bowl_2142, dishwasher_129)', 'walk_executor(plate_2152)', 'grab_executor(plate_2152)', 'walk_executor(dishwasher_129)', 'putin_executor(plate_2152, dishwasher_129)', 'close_executor(dishwasher_129)', 'switchon_executor(dishwasher_129)', 'walk_executor(fork_2150)', 'grab_executor(fork_2150)', 'walk_executor(faucet_20)', 'switchon_executor(faucet_20)', 'wash_executor(fork_2150)', 'switchoff_executor(faucet_20)', 'walk_executor(fork_2151)', 'grab_executor(fork_2151)', 'walk_executor(kitchen_counter_119)', 'put_executor(fork_2150, kitchen_counter_119)', 'switchon_executor(faucet_121)', 'wash_executor(fork_2151)', 'switchoff_executor(faucet_121)']
Time info:
Time consume: 251 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 4
goal correct times: 0
action_num: 37

Task complete rate:
1
Scene_id: 1
##############################
