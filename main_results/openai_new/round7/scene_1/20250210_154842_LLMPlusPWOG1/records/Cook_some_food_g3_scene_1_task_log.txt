From agent.py
Reset goals: The sub-goals are: 
['Boil some vegetables. Then cool them in a bowl.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2104_around_cupboard_117(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_onion,cupboard_instance)
        else:
            exp(food_onion,cupboard_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,cupboard_instance]=True
        close[cupboard_instance,food_onion]=True
    

behavior find_food_carrot_2086_around_cupboard_117(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_carrot,cupboard_instance)
        else:
            exp(food_carrot,cupboard_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,cupboard_instance]=True
        close[cupboard_instance,food_carrot]=True
    

behavior find_food_vegetable_2113_around_cupboard_117(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_vegetable,cupboard_instance)
        else:
            exp(food_vegetable,cupboard_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,cupboard_instance]=True
        close[cupboard_instance,food_vegetable]=True
    

behavior find_bowl_2141_around_cupboard_117(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

behavior find_pot_2040_around_cupboard_117(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(pot,cupboard_instance)
        else:
            exp(pot,cupboard_instance)
    eff:
        unknown[pot]=False
        close[pot,cupboard_instance]=True
        close[cupboard_instance,pot]=True
    

#exp_behavior_end

#goal_representation
 
behavior boil_vegetables(vegetables: item, pot: item, stove: item):
    body:
        achieve_once inside(vegetables, pot)
        # Place the vegetables inside the pot
        achieve_once has_water(pot)
        # Ensure theres water in the pot
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to start boiling

behavior cool_vegetables(vegetables: item, bowl: item):
    body:
        achieve_once inside(vegetables, bowl)
        # Place the boiled vegetables inside the bowl

behavior __goal__():
    body:
        bind vegetables: item where:
            is_food_vegetable(vegetables)
        bind pot: item where:
            is_pot(pot)
        bind stove: item where:
            is_stove(stove)
        bind bowl: item where:
            is_bowl(bowl)
        boil_vegetables(vegetables, pot, stove)
        cool_vegetables(vegetables, bowl)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior boil_vegetables(vegetables: item, pot: item, stove: item):
    body:
        achieve_once inside(vegetables, pot)
        # Place the vegetables inside the pot
        achieve_once has_water(pot)
        # Ensure theres water in the pot
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to start boiling

behavior cool_vegetables(vegetables: item, bowl: item):
    body:
        achieve_once inside(vegetables, bowl)
        # Place the boiled vegetables inside the bowl

behavior __goal__():
    body:
        bind vegetables: item where:
            is_food_vegetable(vegetables)
        bind pot: item where:
            is_pot(pot)
        bind stove: item where:
            is_stove(stove)
        bind bowl: item where:
            is_bowl(bowl)
        boil_vegetables(vegetables, pot, stove)
        cool_vegetables(vegetables, bowl)

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(pot_78, cupboard_117)exp(food_vegetable_2113, cupboard_117)walk_executor(pot_78)open_executor(pot_78)walk_executor(food_vegetable_2113)grab_executor(food_vegetable_2113)walk_executor(pot_78)putin_executor(food_vegetable_2113, pot_78)grab_executor(pot_78)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(stove_2135)put_executor(pot_78, stove_2135)switchon_executor(stove_2135)walk_executor(cupboard_117)exp(bowl_2141, cupboard_117)walk_executor(food_vegetable_2113)grab_executor(food_vegetable_2113)walk_executor(bowl_2141)putin_executor(food_vegetable_2113, bowl_2141)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, pot_78, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(pot_78, cupboard_117)
Find pot_78. 
##############################
From agent.py-> find a plan in act()
exp(food_vegetable_2113, cupboard_117)walk_executor(food_vegetable_2113)grab_executor(food_vegetable_2113)walk_executor(pot_78)putin_executor(food_vegetable_2113, pot_78)grab_executor(pot_78)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(stove_2135)put_executor(pot_78, stove_2135)switchon_executor(stove_2135)walk_executor(cupboard_117)exp(bowl_2141, cupboard_117)walk_executor(food_vegetable_2113)grab_executor(food_vegetable_2113)walk_executor(bowl_2141)putin_executor(food_vegetable_2113, bowl_2141)
##############################
From agent.py
exp(food_vegetable_2113, cupboard_117)
Fail to find food_vegetable_2113 around cupboard_117. 
##############################
Error record: object of type 'NoneType' has no len()
##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
['walk_executor(cupboard_117)']
Time info:
Time consume: 46 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 1
goal correct times: 0
action_num: 1

Task complete rate:
Keystate: k1 - Requires: 15 steps
Keystate: k2 - Requires: 16 steps
Keystate: k3 - Requires: 7 steps
Action Completion Rate: 0.0
Scene_id: 1
##############################
