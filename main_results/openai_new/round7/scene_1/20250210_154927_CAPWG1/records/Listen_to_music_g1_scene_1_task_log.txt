From agent.py
Reset goals: The sub-goals are: 
['1. Find the CD player.  ', '2. Insert the CD into the CD player.  ', '3. Play the music using the CD player.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cd_player_2129_around_tvstand_116(cd_player:item):
    goal: not unknown(cd_player)
    body:
        assert is_cd_player(cd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==116
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(cd_player,tvstand_instance)
        else:
            exp(cd_player,tvstand_instance)
    eff:
        unknown[cd_player]=False
        close[cd_player,tvstand_instance]=True
        close[tvstand_instance,cd_player]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        foreach o: item:
            if is_cd_player(o) and not visited(o):
                observe(o, "Check if this is the CD player")

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior __goal__():
    body:
        foreach o: item:
            if is_cd_player(o) and not visited(o):
                observe(o, "Check if this is the CD player")

##############################
From agent.py-> find a plan in act()
walk_executor(tvstand_116)exp(cd_player_2129, tvstand_116)walk_executor(cd_player_2129)open_executor(cd_player_2129)obs(cd_player_2129, Check if this is the CD player)
##############################
From agent.py
walk_executor(tvstand_116)
Robot find: pillow_107, phone_71, pillow_108, drawing_111, drawing_110, Robot is close to the tvstand_116. 
##############################
From agent.py
exp(cd_player_2129, tvstand_116)
Fail to find cd_player_2129 around tvstand_116. 
##############################
From agent.py-> find a plan in act()
walk_executor(tvstand_273)exp(cd_player_2129, tvstand_273)walk_executor(cd_player_2129)open_executor(cd_player_2129)obs(cd_player_2129, Check if this is the CD player)
##############################
From agent.py
walk_executor(tvstand_273)
Robot find: drawing_288, cd_2145, headset_2131, cd_player_2129, remote_control_2124, dvd_player_2130, mat_284, Robot is close to the tvstand_273. 
##############################
From agent.py
exp(cd_player_2129, tvstand_273)
Find cd_player_2129. 
##############################
From agent.py-> find a plan in act()
walk_executor(cd_player_2129)open_executor(cd_player_2129)obs(cd_player_2129, Check if this is the CD player)
##############################
From agent.py
walk_executor(cd_player_2129)
Robot find: Robot is close to the tvstand_273. Robot is close to the cd_player_2129. 
##############################
From agent.py
open_executor(cd_player_2129)
Robot find: Robot is close to the tvstand_273. Robot is close to the cd_player_2129. cd_player_2129 is opened. 
##############################
From agent.py
obs(cd_player_2129, Check if this is the CD player)
Get this information:  cd_player_2129 is inside home_office_241. cd_player_2129 is close to tvstand_273. cd_player_2129 is close to character_240. cd_player_2129 is on tvstand_273. cd_player_2129 is OFF. cd_player_2129 is OPEN. cd_player_2129 is PLUGGED_OUT.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cd_2145_around_cd_2145(cd:item):
    goal: not unknown(cd)
    body:
        assert is_cd(cd)
        bind cd_instance:item where:
            is_cd(cd_instance) and id[cd_instance]==2145
        achieve close_char(char,cd_instance)
        if can_open(cd_instance):
            achieve_once open(cd_instance)
            exp(cd,cd_instance)
        else:
            exp(cd,cd_instance)
    eff:
        unknown[cd]=False
        close[cd,cd_instance]=True
        close[cd_instance,cd]=True
    

behavior find_stereo_2050_around_nightstand_195(stereo:item):
    goal: not unknown(stereo)
    body:
        assert is_stereo(stereo)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==195
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(stereo,nightstand_instance)
        else:
            exp(stereo,nightstand_instance)
    eff:
        unknown[stereo]=False
        close[stereo,nightstand_instance]=True
        close[nightstand_instance,stereo]=True
    

#exp_behavior_end

#goal_representation
 
def is_cd_player_ready(cd_player:item):
    # Function to check if the CD player is open and ready for CD insertion
    return open(cd_player)

behavior walk_to_cd_player(cd_player:item):
    body:
        if not close_char(char, cd_player):
            walk_to(cd_player)

behavior insert_cd(cd_player:item, cd:item):
    body:
        if not inside(cd, cd_player):
            put_inside(cd, cd_player)

behavior __goal__():
    body:
        bind cd_player: item where:
            is_cd_player(cd_player)
            # Select the CD player
        bind cd: item where:
            is_cd(cd)
            # Select the CD
        walk_to_cd_player(cd_player)
        if is_cd_player_ready(cd_player):
            insert_cd(cd_player, cd)
        else:
            opens(cd_player)
            insert_cd(cd_player, cd)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_cd_player_ready(cd_player:item):
    # Function to check if the CD player is open and ready for CD insertion
    return open(cd_player)

behavior walk_to_cd_player(cd_player:item):
    body:
        if not close_char(char, cd_player):
            walk_to(cd_player)

behavior insert_cd(cd_player:item, cd:item):
    body:
        if not inside(cd, cd_player):
            put_inside(cd, cd_player)

behavior __goal__():
    body:
        bind cd_player: item where:
            is_cd_player(cd_player)
            # Select the CD player
        bind cd: item where:
            is_cd(cd)
            # Select the CD
        walk_to_cd_player(cd_player)
        if is_cd_player_ready(cd_player):
            insert_cd(cd_player, cd)
        else:
            opens(cd_player)
            insert_cd(cd_player, cd)

##############################
From agent.py-> find a plan in act()
walk_executor(cd_2145)grab_executor(cd_2145)walk_executor(cd_player_2129)putin_executor(cd_2145, cd_player_2129)
##############################
From agent.py
walk_executor(cd_2145)
Robot find: Robot is close to the tvstand_273. Robot is close to the cd_2145. 
##############################
From agent.py
grab_executor(cd_2145)
Robot find: Robot is close to the tvstand_273. Robot is close to the cd_2145. Grabbing cd_2145 by right hand. 
##############################
From agent.py
walk_executor(cd_player_2129)
Robot find: Robot is close to the tvstand_273. Robot is close to the cd_2145. Robot is close to the cd_player_2129. 
##############################
From agent.py
putin_executor(cd_2145, cd_player_2129)
Robot find: Robot is close to the tvstand_273. Robot is close to the cd_2145. Robot is close to the cd_player_2129. cd_2145 is close cd_player_2129. cd_player_2129 is close cd_2145. cd_2145 is inside cd_player_2129. cd_2145 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cd_2030_around_bookshelf_275(cd:item):
    goal: not unknown(cd)
    body:
        assert is_cd(cd)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==275
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(cd,bookshelf_instance)
        else:
            exp(cd,bookshelf_instance)
    eff:
        unknown[cd]=False
        close[cd,bookshelf_instance]=True
        close[bookshelf_instance,cd]=True
    

behavior find_stereo_2050_around_home_office_241(stereo:item):
    goal: not unknown(stereo)
    body:
        assert is_stereo(stereo)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(stereo,home_office_instance)
        else:
            exp(stereo,home_office_instance)
    eff:
        unknown[stereo]=False
        close[stereo,home_office_instance]=True
        close[home_office_instance,stereo]=True
    

#exp_behavior_end

#goal_representation
 
behavior play_music(cd_player:item):
    body:
        if is_off(cd_player):
            switch_on(cd_player) # Turn on the CD player to play music

behavior __goal__():
    body:
        bind cd_player: item where:
            is_cd_player(cd_player) and close_char(char, cd_player)
        # Select the CD player that is nearby
        play_music(cd_player) # Play music on the CD player

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior play_music(cd_player:item):
    body:
        if is_off(cd_player):
            switch_on(cd_player) # Turn on the CD player to play music

behavior __goal__():
    body:
        bind cd_player: item where:
            is_cd_player(cd_player) and close_char(char, cd_player)
        # Select the CD player that is nearby
        play_music(cd_player) # Play music on the CD player

##############################
From agent.py-> find a plan in act()
plugin_executor(cd_player_2129)close_executor(cd_player_2129)switchon_executor(cd_player_2129)
##############################
From agent.py
plugin_executor(cd_player_2129)
Robot find: Robot is close to the tvstand_273. Robot is close to the cd_2145. Robot is close to the cd_player_2129. cd_player_2129 is plugged in. 
##############################
From agent.py
close_executor(cd_player_2129)
Robot find: Robot is close to the tvstand_273. Robot is close to the cd_player_2129. cd_player_2129 is closed. 
##############################
From agent.py
switchon_executor(cd_player_2129)
Robot find: Robot is close to the tvstand_273. Robot is close to the cd_player_2129. cd_player_2129 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Insert a CD and play music using the CD player.
Action History:
['walk_executor(tvstand_116)', 'walk_executor(tvstand_273)', 'walk_executor(cd_player_2129)', 'open_executor(cd_player_2129)', 'walk_executor(cd_2145)', 'grab_executor(cd_2145)', 'walk_executor(cd_player_2129)', 'putin_executor(cd_2145, cd_player_2129)', 'plugin_executor(cd_player_2129)', 'close_executor(cd_player_2129)', 'switchon_executor(cd_player_2129)']
Time info:
Time consume: 63 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 3
goal correct times: 0
action_num: 11

Task complete rate:
1
Scene_id: 1
##############################
