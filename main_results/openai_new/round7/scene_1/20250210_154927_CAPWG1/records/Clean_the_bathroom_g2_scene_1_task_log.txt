From agent.py
Reset goals: The sub-goals are: 
['1. Find the bathroom sink.', '2. Fill the sink with water and add soap to create soapy water.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        # Select the bathroom
        
        foreach sink: item:
            if is_sink(sink) and inside(sink, bathroom) and not visited(sink):
                walk_to(sink)
                # Approach the sink in the bathroom

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        # Select the bathroom
        
        foreach sink: item:
            if is_sink(sink) and inside(sink, bathroom) and not visited(sink):
                walk_to(sink)
                # Approach the sink in the bathroom

##############################
From agent.py-> find a plan in act()
walk_executor(sink_19)
##############################
From agent.py
walk_executor(sink_19)
Robot find: after_shave_2063, soap_2125, detergent_2155, mat_32, phone_2029, cleaning_solution_2143, drawing_33, Robot is close to the bathroom_counter_18. Robot is close to the sink_19. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2126_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_sink_with_water(sink:item):
    body:
        if not has_water(sink):
            get_water(sink)

behavior add_soap(sink:item, soap:item):
    body:
        if not clean(sink):
            put_inside(soap, sink)

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and id[sink]==19
        # Select the sink sink_19
        bind soap: item where:
            is_soap(soap)
        fill_sink_with_water(sink)
        add_soap(sink, soap)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_sink_with_water(sink:item):
    body:
        if not has_water(sink):
            get_water(sink)

behavior add_soap(sink:item, soap:item):
    body:
        if not clean(sink):
            put_inside(soap, sink)

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and id[sink]==19
        # Select the sink sink_19
        bind soap: item where:
            is_soap(soap)
        fill_sink_with_water(sink)
        add_soap(sink, soap)

##############################
From agent.py-> find a plan in act()
walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(soap_2125)grab_executor(soap_2125)walk_executor(sink_19)putin_executor(soap_2125, sink_19)
##############################
From agent.py
walk_executor(faucet_20)
Robot find: Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchon_executor(faucet_20)
Robot find: Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot find: Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned off. 
##############################
From agent.py
walk_executor(soap_2125)
Robot find: Robot is close to the sink_19. Robot is close to the soap_2125. 
##############################
From agent.py
grab_executor(soap_2125)
Robot find: Robot is close to the sink_19. Robot is close to the soap_2125. Grabbing soap_2125 by right hand. 
##############################
From agent.py
walk_executor(sink_19)
Robot find: Robot is close to the sink_19. Robot is close to the soap_2125. Robot is close to the bathroom_counter_18. 
##############################
From agent.py
putin_executor(soap_2125, sink_19)
Robot find: Robot is close to the sink_19. Robot is close to the soap_2125. Robot is close to the bathroom_counter_18. soap_2125 is inside sink_19. soap_2125 is close sink_19. soap_2125 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Prepare a sink of soapy water in the bathroom.
Action History:
['walk_executor(sink_19)', 'walk_executor(faucet_20)', 'switchon_executor(faucet_20)', 'switchoff_executor(faucet_20)', 'walk_executor(soap_2125)', 'grab_executor(soap_2125)', 'walk_executor(sink_19)', 'putin_executor(soap_2125, sink_19)']
Time info:
Time consume: 31 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 2
goal correct times: 0
action_num: 8

Task complete rate:
1
Scene_id: 1
##############################
