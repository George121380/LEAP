From agent.py
Reset goals: The sub-goals are: 
['1. Locate the basket containing clothes.', '2. Load the clothes into the washing machine.', '3. Add soap to the washing machine.', '4. Run the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_skirt_2160_around_basket_for_clothes_2078(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

behavior find_clothes_dress_2116_around_basket_for_clothes_2078(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_dress,basket_for_clothes_instance)
        else:
            exp(clothes_dress,basket_for_clothes_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_dress]=True
    

behavior find_clothes_pants_2157_around_basket_for_clothes_2078(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_pants,basket_for_clothes_instance)
        else:
            exp(clothes_pants,basket_for_clothes_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_pants]=True
    

behavior find_clothes_gloves_2118_around_basket_for_clothes_2078(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_gloves,basket_for_clothes_instance)
        else:
            exp(clothes_gloves,basket_for_clothes_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_gloves]=True
    

behavior find_clothes_shirt_2158_around_basket_for_clothes_2078(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_shirt,basket_for_clothes_instance)
        else:
            exp(clothes_shirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_shirt]=True
    

behavior find_clothes_hat_2117_around_basket_for_clothes_2078(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_hat,basket_for_clothes_instance)
        else:
            exp(clothes_hat,basket_for_clothes_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_hat]=True
    

behavior find_clothes_underwear_2121_around_basket_for_clothes_2078(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_underwear,basket_for_clothes_instance)
        else:
            exp(clothes_underwear,basket_for_clothes_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_underwear]=True
    

behavior find_clothes_scarf_2120_around_basket_for_clothes_2078(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_scarf,basket_for_clothes_instance)
        else:
            exp(clothes_scarf,basket_for_clothes_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_scarf]=True
    

behavior find_clothes_jacket_2119_around_basket_for_clothes_2078(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_jacket,basket_for_clothes_instance)
        else:
            exp(clothes_jacket,basket_for_clothes_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_jacket]=True
    

behavior find_clothes_socks_2159_around_basket_for_clothes_2078(clothes_socks:item):
    goal: not unknown(clothes_socks)
    body:
        assert is_clothes_socks(clothes_socks)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_socks,basket_for_clothes_instance)
        else:
            exp(clothes_socks,basket_for_clothes_instance)
    eff:
        unknown[clothes_socks]=False
        close[clothes_socks,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_socks]=True
    

#exp_behavior_end

#goal_representation
 
behavior locate_basket(basket:item):
    body:
        achieve_once visited(basket) 
        # Mark the basket as visited after locating it

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket)
        # Select a basket identified as a basket for clothes
        locate_basket(basket)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior locate_basket(basket:item):
    body:
        achieve_once visited(basket) 
        # Mark the basket as visited after locating it

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket)
        # Select a basket identified as a basket for clothes
        locate_basket(basket)

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2078)obs(basket_for_clothes_2078, look around this place)
##############################
From agent.py
walk_executor(basket_for_clothes_2078)
Robot find: clothes_pants_2157, clothes_shirt_2158, clothes_socks_2159, clothes_skirt_2160, Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the clothes_socks_2159. Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. 
##############################
From agent.py
obs(basket_for_clothes_2078, look around this place)
Get this information:  clothes_skirt_2160 is inside basket_for_clothes_2078. basket_for_clothes_2078 is inside dining_room_41. clothes_pants_2157 is inside basket_for_clothes_2078. basket_for_clothes_2078 is close to clothes_pants_2157. basket_for_clothes_2078 is close to clothes_shirt_2158. basket_for_clothes_2078 is close to clothes_socks_2159. basket_for_clothes_2078 is close to clothes_skirt_2160. basket_for_clothes_2078 is close to sink_120. basket_for_clothes_2078 is close to fridge_126. basket_for_clothes_2078 is close to character_240. clothes_shirt_2158 is inside basket_for_clothes_2078. clothes_socks_2159 is inside basket_for_clothes_2078. basket_for_clothes_2078 is OPEN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_dress_2116_around_light_212(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_dress,light_instance)
        else:
            exp(clothes_dress,light_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,light_instance]=True
        close[light_instance,clothes_dress]=True
    

behavior find_clothes_pants_2036_around_light_212(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_pants,light_instance)
        else:
            exp(clothes_pants,light_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,light_instance]=True
        close[light_instance,clothes_pants]=True
    

behavior find_clothes_gloves_2118_around_light_212(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_gloves,light_instance)
        else:
            exp(clothes_gloves,light_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,light_instance]=True
        close[light_instance,clothes_gloves]=True
    

behavior find_clothes_hat_2117_around_light_212(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_hat,light_instance)
        else:
            exp(clothes_hat,light_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,light_instance]=True
        close[light_instance,clothes_hat]=True
    

behavior find_clothes_underwear_2121_around_light_212(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_underwear,light_instance)
        else:
            exp(clothes_underwear,light_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,light_instance]=True
        close[light_instance,clothes_underwear]=True
    

behavior find_clothes_scarf_2120_around_light_212(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_scarf,light_instance)
        else:
            exp(clothes_scarf,light_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,light_instance]=True
        close[light_instance,clothes_scarf]=True
    

behavior find_clothes_jacket_2119_around_washing_machine_2079(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
plain
behavior load_into_washing_machine(c:item, washing_machine:item):
    body:
        achieve_once inside(c, washing_machine)
        # Place the item inside the washing machine

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket)
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        foreach c: item:
            if is_clothes(c) and inside(c, basket):
                load_into_washing_machine(c, washing_machine)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('BASIC_TYPENAME', 'plain') at line 5313, column 1.
Expected one of: 
	* TYPEDEF
	* GOAL
	* $END
	* UNDIRECTED_GENERATOR
	* OBJECTS
	* INIT
	* INCLUDE
	* CONTROLLER
	* FEATURE
	* _NEWLINE
	* BEHAVIOR
	* _PRAGMA_KEYWORD
	* IMPORT
	* DEF
	* DOMAIN
	* GENERATOR
Previous tokens: [Token('_NEWLINE', '\n    \n\n#exp_behavior_end\n\n#goal_representation\n')]

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_dress_2116_around_light_212(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_dress,light_instance)
        else:
            exp(clothes_dress,light_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,light_instance]=True
        close[light_instance,clothes_dress]=True
    

behavior find_clothes_pants_2157_around_light_212(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_pants,light_instance)
        else:
            exp(clothes_pants,light_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,light_instance]=True
        close[light_instance,clothes_pants]=True
    

behavior find_clothes_gloves_2118_around_light_212(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_gloves,light_instance)
        else:
            exp(clothes_gloves,light_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,light_instance]=True
        close[light_instance,clothes_gloves]=True
    

behavior find_clothes_hat_2117_around_light_212(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_hat,light_instance)
        else:
            exp(clothes_hat,light_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,light_instance]=True
        close[light_instance,clothes_hat]=True
    

behavior find_clothes_underwear_2121_around_light_212(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_underwear,light_instance)
        else:
            exp(clothes_underwear,light_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,light_instance]=True
        close[light_instance,clothes_underwear]=True
    

behavior find_clothes_scarf_2120_around_light_212(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_scarf,light_instance)
        else:
            exp(clothes_scarf,light_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,light_instance]=True
        close[light_instance,clothes_scarf]=True
    

behavior find_clothes_jacket_2119_around_light_212(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_jacket,light_instance)
        else:
            exp(clothes_jacket,light_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,light_instance]=True
        close[light_instance,clothes_jacket]=True
    

#goal_representation
plain
behavior load_into_washing_machine(c:item, washing_machine:item):
    body:
        achieve_once inside(c, washing_machine)

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket)
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        foreach c: item:
            if is_clothes(c) and inside(c, basket):
                load_into_washing_machine(c, washing_machine)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('BASIC_TYPENAME', 'plain') at line 5313, column 1.
Expected one of: 
	* TYPEDEF
	* GOAL
	* $END
	* UNDIRECTED_GENERATOR
	* OBJECTS
	* INIT
	* INCLUDE
	* CONTROLLER
	* FEATURE
	* _NEWLINE
	* BEHAVIOR
	* _PRAGMA_KEYWORD
	* IMPORT
	* DEF
	* DOMAIN
	* GENERATOR
Previous tokens: [Token('_NEWLINE', '\n    \n\n#exp_behavior_end\n\n#goal_representation\n')]

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_dress_2116_around_light_212(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_dress,light_instance)
        else:
            exp(clothes_dress,light_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,light_instance]=True
        close[light_instance,clothes_dress]=True
    

behavior find_clothes_pants_2036_around_light_212(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_pants,light_instance)
        else:
            exp(clothes_pants,light_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,light_instance]=True
        close[light_instance,clothes_pants]=True
    

behavior find_clothes_gloves_2118_around_light_212(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_gloves,light_instance)
        else:
            exp(clothes_gloves,light_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,light_instance]=True
        close[light_instance,clothes_gloves]=True
    

behavior find_clothes_hat_2117_around_light_212(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_hat,light_instance)
        else:
            exp(clothes_hat,light_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,light_instance]=True
        close[light_instance,clothes_hat]=True
    

behavior find_clothes_underwear_2121_around_light_212(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_underwear,light_instance)
        else:
            exp(clothes_underwear,light_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,light_instance]=True
        close[light_instance,clothes_underwear]=True
    

behavior find_clothes_scarf_2120_around_light_212(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_scarf,light_instance)
        else:
            exp(clothes_scarf,light_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,light_instance]=True
        close[light_instance,clothes_scarf]=True
    

behavior find_clothes_jacket_2119_around_light_212(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==212
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_jacket,light_instance)
        else:
            exp(clothes_jacket,light_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,light_instance]=True
        close[light_instance,clothes_jacket]=True
    

#goal_representation
behavior load_into_washing_machine(c:item, washing_machine:item):
    body:
        achieve_once inside(c, washing_machine)

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket)
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        foreach c: item:
            if is_clothes(c) and inside(c, basket):
                load_into_washing_machine(c, washing_machine)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior load_into_washing_machine(c:item, washing_machine:item):
    body:
        achieve_once inside(c, washing_machine)

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket)
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        foreach c: item:
            if is_clothes(c) and inside(c, basket):
                load_into_washing_machine(c, washing_machine)
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2079)open_executor(washing_machine_2079)walk_executor(clothes_pants_2157)grab_executor(clothes_pants_2157)walk_executor(washing_machine_2079)putin_executor(clothes_pants_2157, washing_machine_2079)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(washing_machine_2079)putin_executor(clothes_shirt_2158, washing_machine_2079)walk_executor(clothes_socks_2159)grab_executor(clothes_socks_2159)walk_executor(washing_machine_2079)putin_executor(clothes_socks_2159, washing_machine_2079)walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)walk_executor(washing_machine_2079)putin_executor(clothes_skirt_2160, washing_machine_2079)
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. 
##############################
From agent.py
open_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is opened. 
##############################
From agent.py
walk_executor(clothes_pants_2157)
Robot find: Robot is close to the clothes_pants_2157. Robot is close to the basket_for_clothes_2078. 
##############################
From agent.py
grab_executor(clothes_pants_2157)
Robot find: Robot is close to the clothes_pants_2157. Robot is close to the basket_for_clothes_2078. Grabbing clothes_pants_2157 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot find: Robot is close to the clothes_pants_2157. Robot is close to the washing_machine_2079. 
##############################
From agent.py
putin_executor(clothes_pants_2157, washing_machine_2079)
Robot find: Robot is close to the clothes_pants_2157. Robot is close to the washing_machine_2079. clothes_pants_2157 is inside washing_machine_2079. clothes_pants_2157 is close washing_machine_2079. washing_machine_2079 is close clothes_pants_2157. clothes_pants_2157 released by right hand. 
##############################
From agent.py
walk_executor(clothes_shirt_2158)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the basket_for_clothes_2078. 
##############################
From agent.py
grab_executor(clothes_shirt_2158)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the basket_for_clothes_2078. Grabbing clothes_shirt_2158 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the clothes_pants_2157. Robot is close to the washing_machine_2079. 
##############################
From agent.py
putin_executor(clothes_shirt_2158, washing_machine_2079)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the clothes_pants_2157. Robot is close to the washing_machine_2079. clothes_shirt_2158 is inside washing_machine_2079. washing_machine_2079 is close clothes_shirt_2158. clothes_shirt_2158 is close washing_machine_2079. clothes_shirt_2158 released by right hand. 
##############################
From agent.py
walk_executor(clothes_socks_2159)
Robot find: Robot is close to the basket_for_clothes_2078. Robot is close to the clothes_socks_2159. 
##############################
From agent.py
grab_executor(clothes_socks_2159)
Robot find: Robot is close to the basket_for_clothes_2078. Robot is close to the clothes_socks_2159. Grabbing clothes_socks_2159 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot find: Robot is close to the clothes_socks_2159. Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the washing_machine_2079. 
##############################
From agent.py
putin_executor(clothes_socks_2159, washing_machine_2079)
Robot find: Robot is close to the clothes_socks_2159. Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the washing_machine_2079. clothes_socks_2159 is close washing_machine_2079. clothes_socks_2159 is inside washing_machine_2079. washing_machine_2079 is close clothes_socks_2159. clothes_socks_2159 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2160)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. 
##############################
From agent.py
grab_executor(clothes_skirt_2160)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. Grabbing clothes_skirt_2160 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the clothes_socks_2159. Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the washing_machine_2079. 
##############################
From agent.py
putin_executor(clothes_skirt_2160, washing_machine_2079)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the clothes_socks_2159. Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the washing_machine_2079. clothes_skirt_2160 is inside washing_machine_2079. clothes_skirt_2160 is close washing_machine_2079. washing_machine_2079 is close clothes_skirt_2160. clothes_skirt_2160 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_cupboard_118(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(detergent,cupboard_instance)
        else:
            exp(detergent,cupboard_instance)
    eff:
        unknown[detergent]=False
        close[detergent,cupboard_instance]=True
        close[cupboard_instance,detergent]=True
    

behavior find_soap_2126_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior add_soap_to_washer(soap: item, washing_machine: item):
    body:
        achieve_once inside(soap, washing_machine)

behavior __goal__():
    body:
        bind soap: item where:
            is_soap(soap)
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2079
        add_soap_to_washer(soap, washing_machine)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior add_soap_to_washer(soap: item, washing_machine: item):
    body:
        achieve_once inside(soap, washing_machine)

behavior __goal__():
    body:
        bind soap: item where:
            is_soap(soap)
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2079
        add_soap_to_washer(soap, washing_machine)

##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_cabinet_17)open_executor(bathroom_cabinet_17)exp(soap_2125, bathroom_cabinet_17)walk_executor(soap_2125)grab_executor(soap_2125)walk_executor(washing_machine_2079)putin_executor(soap_2125, washing_machine_2079)
##############################
From agent.py
walk_executor(bathroom_cabinet_17)
Robot find: drawing_33, Robot is close to the bathroom_cabinet_17. 
##############################
From agent.py
open_executor(bathroom_cabinet_17)
Robot find: tooth_paste_2059, Robot is close to the bathroom_cabinet_17. Robot is close to the tooth_paste_2059. bathroom_cabinet_17 is opened. 
##############################
From agent.py
exp(soap_2125, bathroom_cabinet_17)
Fail to find soap_2125 around bathroom_cabinet_17. 
##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_counter_18)exp(soap_2125, bathroom_counter_18)walk_executor(soap_2125)grab_executor(soap_2125)walk_executor(washing_machine_2079)putin_executor(soap_2125, washing_machine_2079)
##############################
From agent.py
walk_executor(bathroom_counter_18)
Robot find: mat_32, phone_2029, Robot is close to the bathroom_counter_18. 
##############################
From agent.py
exp(soap_2125, bathroom_counter_18)
Fail to find soap_2125 around bathroom_counter_18. 
##############################
From agent.py-> find a plan in act()
walk_executor(doorjamb_308)exp(soap_2125, doorjamb_308)walk_executor(soap_2125)grab_executor(soap_2125)walk_executor(washing_machine_2079)putin_executor(soap_2125, washing_machine_2079)
##############################
From agent.py
walk_executor(doorjamb_308)
Robot find: Robot is close to the doorjamb_308. 
##############################
From agent.py
exp(soap_2125, doorjamb_308)
Fail to find soap_2125 around doorjamb_308. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(soap_2125, cupboard_118)walk_executor(soap_2125)grab_executor(soap_2125)walk_executor(washing_machine_2079)putin_executor(soap_2125, washing_machine_2079)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: pot_78, Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(soap_2125, cupboard_118)
Fail to find soap_2125 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(shower_16)exp(soap_2125, shower_16)walk_executor(soap_2125)grab_executor(soap_2125)walk_executor(washing_machine_2079)putin_executor(soap_2125, washing_machine_2079)
##############################
From agent.py
walk_executor(shower_16)
Robot find: Robot is close to the shower_16. 
##############################
From agent.py
exp(soap_2125, shower_16)
Fail to find soap_2125 around shower_16. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_120)exp(soap_2125, sink_120)walk_executor(soap_2125)grab_executor(soap_2125)walk_executor(washing_machine_2079)putin_executor(soap_2125, washing_machine_2079)
##############################
From agent.py
walk_executor(sink_120)
Robot find: fork_2150, bowl_2142, food_salt_2041, soap_2126, soap_2010, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, ice_2024, Robot is close to the sink_120. Robot is close to the kitchen_counter_119. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find soap_2125 ?
Answer: Go to bathroom_1. Inside bathroom_1, locate sink_19. The target item, soap_2125, is on sink_19. You will find soap_2125 close to the surface of sink_19.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to bathroom_1. Inside bathroom_1, locate sink_19. The target item, soap_2125, is on sink_19. You will find soap_2125 close to the surface of sink_19.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2078.
Action 2: Observe around basket_for_clothes_2078 with the question of look around this place.
Action 3: Walk to washing_machine_2079.
Action 4: Open washing_machine_2079.
Action 5: Walk to clothes_pants_2157.
Action 6: Grab clothes_pants_2157.
Action 7: Walk to washing_machine_2079.
Action 8: Put clothes_pants_2157 into washing_machine_2079.
Action 9: Walk to clothes_shirt_2158.
Action 10: Grab clothes_shirt_2158.
Action 11: Walk to washing_machine_2079.
Action 12: Put clothes_shirt_2158 into washing_machine_2079.
Action 13: Walk to clothes_socks_2159.
Action 14: Grab clothes_socks_2159.
Action 15: Walk to washing_machine_2079.
Action 16: Put clothes_socks_2159 into washing_machine_2079.
Action 17: Walk to clothes_skirt_2160.
Action 18: Grab clothes_skirt_2160.
Action 19: Walk to washing_machine_2079.
Action 20: Put clothes_skirt_2160 into washing_machine_2079.
Action 21: Walk to bathroom_cabinet_17.
Action 22: Open bathroom_cabinet_17.
Action 23: look for soap_2125 around bathroom_cabinet_17.
Action 24: Walk to bathroom_counter_18.
Action 25: look for soap_2125 around bathroom_counter_18.
Action 26: Walk to doorjamb_308.
Action 27: look for soap_2125 around doorjamb_308.
Action 28: Walk to cupboard_118.
Action 29: Open cupboard_118.
Action 30: look for soap_2125 around cupboard_118.
Action 31: Walk to shower_16.
Action 32: look for soap_2125 around shower_16.
Action 33: Walk to sink_120.

##############################
From agent.py
exp(soap_2125, sink_120)
Fail to find soap_2125 around sink_120. 
##############################
From agent.py-> find a plan in act()
walk_executor(soap_2126)grab_executor(soap_2126)walk_executor(washing_machine_2079)putin_executor(soap_2126, washing_machine_2079)
##############################
From agent.py
walk_executor(soap_2126)
Robot find: Robot is close to the sink_120. Robot is close to the soap_2126. 
##############################
From agent.py
grab_executor(soap_2126)
Robot find: Robot is close to the sink_120. Robot is close to the soap_2126. Grabbing soap_2126 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot find: Robot is close to the soap_2126. Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the clothes_socks_2159. Robot is close to the clothes_skirt_2160. Robot is close to the washing_machine_2079. 
##############################
From agent.py
putin_executor(soap_2126, washing_machine_2079)
Robot find: Robot is close to the soap_2126. Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the clothes_socks_2159. Robot is close to the clothes_skirt_2160. Robot is close to the washing_machine_2079. soap_2126 is close washing_machine_2079. washing_machine_2079 is close soap_2126. soap_2126 is inside washing_machine_2079. soap_2126 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_kitchen_counter_123(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(detergent,kitchen_counter_instance)
        else:
            exp(detergent,kitchen_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,kitchen_counter_instance]=True
        close[kitchen_counter_instance,detergent]=True
    

behavior find_shampoo_2019_around_shower_21(shampoo:item):
    goal: not unknown(shampoo)
    body:
        assert is_shampoo(shampoo)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==21
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(shampoo,shower_instance)
        else:
            exp(shampoo,shower_instance)
    eff:
        unknown[shampoo]=False
        close[shampoo,shower_instance]=True
        close[shower_instance,shampoo]=True
    

behavior find_soap_2125_around_sink_19(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==19
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        start_washing_machine(washing_machine) # Turn on the washing machine

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        achieve plugged(washing_machine) # Ensure the washing machine is plugged in
        start_washing_machine(washing_machine) # Turn on the washing machine

##############################
From agent.py-> find a plan in act()
plugin_executor(washing_machine_2079)close_executor(washing_machine_2079)switchon_executor(washing_machine_2079)
##############################
From agent.py
plugin_executor(washing_machine_2079)
Robot find: Robot is close to the soap_2126. Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the clothes_socks_2159. Robot is close to the clothes_skirt_2160. Robot is close to the washing_machine_2079. washing_machine_2079 is plugged in. 
##############################
From agent.py
close_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is closed. 
##############################
From agent.py
switchon_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Wash all the clothes in the basket for clothes by adding soap to the washing machine and running it.
Action History:
['walk_executor(basket_for_clothes_2078)', 'walk_executor(washing_machine_2079)', 'open_executor(washing_machine_2079)', 'walk_executor(clothes_pants_2157)', 'grab_executor(clothes_pants_2157)', 'walk_executor(washing_machine_2079)', 'putin_executor(clothes_pants_2157, washing_machine_2079)', 'walk_executor(clothes_shirt_2158)', 'grab_executor(clothes_shirt_2158)', 'walk_executor(washing_machine_2079)', 'putin_executor(clothes_shirt_2158, washing_machine_2079)', 'walk_executor(clothes_socks_2159)', 'grab_executor(clothes_socks_2159)', 'walk_executor(washing_machine_2079)', 'putin_executor(clothes_socks_2159, washing_machine_2079)', 'walk_executor(clothes_skirt_2160)', 'grab_executor(clothes_skirt_2160)', 'walk_executor(washing_machine_2079)', 'putin_executor(clothes_skirt_2160, washing_machine_2079)', 'walk_executor(bathroom_cabinet_17)', 'open_executor(bathroom_cabinet_17)', 'walk_executor(bathroom_counter_18)', 'walk_executor(doorjamb_308)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'walk_executor(shower_16)', 'walk_executor(sink_120)', 'walk_executor(soap_2126)', 'grab_executor(soap_2126)', 'walk_executor(washing_machine_2079)', 'putin_executor(soap_2126, washing_machine_2079)', 'plugin_executor(washing_machine_2079)', 'close_executor(washing_machine_2079)', 'switchon_executor(washing_machine_2079)']
Time info:
Time consume: 200 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 4
goal correct times: 2
action_num: 34

Task complete rate:
1
Scene_id: 1
##############################
