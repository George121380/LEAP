From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the jacket.', '2. Wash the jacket using the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2143_around_bathroom_cabinet_17(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

behavior find_soap_2010_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_clothes_jacket_2119_around_basket_for_clothes_2078(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_jacket,basket_for_clothes_instance)
        else:
            exp(clothes_jacket,basket_for_clothes_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_jacket(jacket: item):
    body:
        achieve_once clean(jacket)
        achieve_once has_water(jacket)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and dirty(jacket)
        wash_jacket(jacket)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_cupboard_118(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(detergent,cupboard_instance)
        else:
            exp(detergent,cupboard_instance)
    eff:
        unknown[detergent]=False
        close[detergent,cupboard_instance]=True
        close[cupboard_instance,detergent]=True
    

behavior find_clothes_jacket_2119_around_basket_for_clothes_2078(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_jacket,basket_for_clothes_instance)
        else:
            exp(clothes_jacket,basket_for_clothes_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation

behavior wash_jacket(jacket:item):
    body:
        achieve_once clean(jacket)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select a jacket
        wash_jacket(jacket)
        # Hand wash the jacket

#goal_representation_end

##############################
From agent.py->reset_goal

behavior wash_jacket(jacket:item):
    body:
        achieve_once clean(jacket)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select a jacket
        wash_jacket(jacket)
        # Hand wash the jacket

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2078)exp(clothes_jacket_2119, basket_for_clothes_2078)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(basket_for_clothes_2078)
Robot find: clothes_pants_2157, clothes_shirt_2158, clothes_socks_2159, clothes_skirt_2160, Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the clothes_socks_2159. Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. 
##############################
From agent.py
exp(clothes_jacket_2119, basket_for_clothes_2078)
Fail to find clothes_jacket_2119 around basket_for_clothes_2078. 
##############################
From agent.py-> find a plan in act()
walk_executor(light_212)exp(clothes_jacket_2119, light_212)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(light_212)
Robot find: drawing_202, Robot is close to the light_212. 
##############################
From agent.py
exp(clothes_jacket_2119, light_212)
Fail to find clothes_jacket_2119 around light_212. 
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2079)open_executor(washing_machine_2079)exp(clothes_jacket_2119, washing_machine_2079)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. 
##############################
From agent.py
open_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is opened. 
##############################
From agent.py
exp(clothes_jacket_2119, washing_machine_2079)
Fail to find clothes_jacket_2119 around washing_machine_2079. 
##############################
From agent.py-> find a plan in act()
walk_executor(shower_16)exp(clothes_jacket_2119, shower_16)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(shower_16)
Robot find: mat_32, drawing_33, Robot is close to the shower_16. 
##############################
From agent.py
exp(clothes_jacket_2119, shower_16)
Fail to find clothes_jacket_2119 around shower_16. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the jacket.', '2. Wash the jacket using the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2119_around_bathroom_cabinet_17(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(clothes_jacket,bathroom_cabinet_instance)
        else:
            exp(clothes_jacket,bathroom_cabinet_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,clothes_jacket]=True
    

behavior find_soap_2126_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior observe_jacket_location():
    body:
        # No specific location found for the jacket observe different spots for its location
        foreach location: item:
            if is_basket_for_clothes(location) or is_washing_machine(location) or is_shower(location) or is_light(location):
                if not visited(location):
                    observe(location, "Check for clothes_jacket_2119")

behavior hand_wash_jacket(jacket: item):
    body:
        wash(jacket)
        scrub(jacket)
        rinse(jacket)
        squeeze(jacket)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Ensure that the jacket is found before the handwashing process
        observe_jacket_location()
        # After locating, proceed to hand wash the jacket
        hand_wash_jacket(jacket)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior observe_jacket_location():
    body:
        # No specific location found for the jacket observe different spots for its location
        foreach location: item:
            if is_basket_for_clothes(location) or is_washing_machine(location) or is_shower(location) or is_light(location):
                if not visited(location):
                    observe(location, "Check for clothes_jacket_2119")

behavior hand_wash_jacket(jacket: item):
    body:
        wash(jacket)
        scrub(jacket)
        rinse(jacket)
        squeeze(jacket)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Ensure that the jacket is found before the handwashing process
        observe_jacket_location()
        # After locating, proceed to hand wash the jacket
        hand_wash_jacket(jacket)

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2078)obs(basket_for_clothes_2078, Check for clothes_jacket_2119)walk_executor(washing_machine_2079)obs(washing_machine_2079, Check for clothes_jacket_2119)walk_executor(shower_16)obs(shower_16, Check for clothes_jacket_2119)walk_executor(shower_21)obs(shower_21, Check for clothes_jacket_2119)walk_executor(light_39)obs(light_39, Check for clothes_jacket_2119)walk_executor(light_73)obs(light_73, Check for clothes_jacket_2119)walk_executor(light_212)obs(light_212, Check for clothes_jacket_2119)walk_executor(light_283)obs(light_283, Check for clothes_jacket_2119)walk_executor(bathroom_cabinet_17)open_executor(bathroom_cabinet_17)exp(clothes_jacket_2119, bathroom_cabinet_17)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)walk_executor(clothes_jacket_2119)scrub_executor(clothes_jacket_2119)rinse_executor(clothes_jacket_2119)
##############################
From agent.py
walk_executor(basket_for_clothes_2078)
Robot find: Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the clothes_socks_2159. Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. 
##############################
From agent.py
obs(basket_for_clothes_2078, Check for clothes_jacket_2119)
Get this information:  clothes_skirt_2160 is inside basket_for_clothes_2078. basket_for_clothes_2078 is inside dining_room_41. clothes_pants_2157 is inside basket_for_clothes_2078. basket_for_clothes_2078 is close to clothes_pants_2157. basket_for_clothes_2078 is close to clothes_shirt_2158. basket_for_clothes_2078 is close to clothes_socks_2159. basket_for_clothes_2078 is close to clothes_skirt_2160. basket_for_clothes_2078 is close to sink_120. basket_for_clothes_2078 is close to fridge_126. basket_for_clothes_2078 is close to character_240. clothes_shirt_2158 is inside basket_for_clothes_2078. clothes_socks_2159 is inside basket_for_clothes_2078. basket_for_clothes_2078 is OPEN.
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. 
##############################
From agent.py
obs(washing_machine_2079, Check for clothes_jacket_2119)
Get this information:  washing_machine_2079 is inside dining_room_41. washing_machine_2079 is close to sink_120. washing_machine_2079 is close to fridge_126. washing_machine_2079 is close to character_240. washing_machine_2079 is OFF. washing_machine_2079 is CLEAN. washing_machine_2079 is OPEN. washing_machine_2079 is PLUGGED_OUT.
##############################
From agent.py
walk_executor(shower_16)
Robot find: Robot is close to the shower_16. 
##############################
From agent.py
obs(shower_16, Check for clothes_jacket_2119)
Get this information:  shower_16 is inside bathroom_1. shower_16 is close to wall_2. shower_16 is close to wall_5. shower_16 is close to ceiling_7. shower_16 is close to ceiling_8. shower_16 is close to floor_12. shower_16 is close to floor_13. shower_16 is close to toilet_15. shower_16 is close to shower_21. shower_16 is close to curtain_22. shower_16 is close to mat_32. shower_16 is close to ceilinglamp_35. shower_16 is close to doorjamb_37. shower_16 is close to door_38. shower_16 is close to light_39. shower_16 is close to floor_170. shower_16 is close to floor_43. shower_16 is close to floor_42. shower_16 is close to wall_176. shower_16 is close to ceiling_52. shower_16 is close to ceiling_183. shower_16 is close to bookshelf_196. shower_16 is close to wall_70. shower_16 is close to filing_cabinet_200. shower_16 is close to photoframe_219. shower_16 is close to character_240. shower_16 is facing drawing_33. shower_16 is CLEAN.
##############################
From agent.py
walk_executor(shower_21)
Robot find: Robot is close to the shower_21. 
##############################
From agent.py
obs(shower_21, Check for clothes_jacket_2119)
Get this information:  shower_21 is inside bathroom_1. curtain_22 is inside shower_21. shower_21 is on floor_13. shower_21 is close to ceilinglamp_35. shower_21 is close to wall_5. shower_21 is close to filing_cabinet_200. shower_21 is close to ceiling_8. shower_21 is close to drawing_202. shower_21 is close to floor_170. shower_21 is close to floor_13. shower_21 is close to wall_174. shower_21 is close to toilet_15. shower_21 is close to shower_16. shower_21 is close to wall_176. shower_21 is close to curtain_22. shower_21 is close to ceiling_183. shower_21 is close to photoframe_219. shower_21 is close to character_240. shower_21 is facing drawing_33. shower_21 is CLEAN.
##############################
From agent.py
walk_executor(light_39)
Robot find: Robot is close to the light_39. 
##############################
From agent.py
obs(light_39, Check for clothes_jacket_2119)
Get this information:  light_39 is inside bathroom_1. light_39 is close to wall_2. light_39 is close to doorjamb_37. light_39 is close to wall_70. light_39 is close to door_38. light_39 is close to ceiling_7. light_39 is close to floor_42. light_39 is close to floor_43. light_39 is close to pillow_108. light_39 is close to floor_12. light_39 is close to drawing_111. light_39 is close to shower_16. light_39 is close to floor_48. light_39 is close to ceiling_52. light_39 is close to tvstand_116. light_39 is close to ceiling_57. light_39 is close to wall_63. light_39 is close to character_240. light_39 is OFF. light_39 is CLOSED. light_39 is PLUGGED_IN. light_39 is CLEAN.
##############################
From agent.py
walk_executor(light_73)
Robot find: Robot is close to the light_73. 
##############################
From agent.py
obs(light_73, Check for clothes_jacket_2119)
Get this information:  light_73 is inside dining_room_41. light_73 is close to floor_163. light_73 is close to floor_164. light_73 is close to floor_169. light_73 is close to floor_44. light_73 is close to floor_45. light_73 is close to wall_175. light_73 is close to wall_179. light_73 is close to ceiling_53. light_73 is close to ceiling_182. light_73 is close to door_61. light_73 is close to doorjamb_190. light_73 is close to desk_193. light_73 is close to wall_66. light_73 is close to wall_67. light_73 is close to powersocket_72. light_73 is close to computer_209. light_73 is close to cpuscreen_210. light_73 is close to keyboard_211. light_73 is close to light_212. light_73 is close to mouse_213. light_73 is close to mousepad_214. light_73 is close to fridge_126. light_73 is close to character_240. light_73 is OFF. light_73 is CLOSED. light_73 is PLUGGED_IN. light_73 is CLEAN.
##############################
From agent.py
walk_executor(light_212)
Robot find: Robot is close to the light_212. 
##############################
From agent.py
obs(light_212, Check for clothes_jacket_2119)
Get this information:  light_212 is close to floor_169. light_212 is close to floor_170. light_212 is close to floor_43. light_212 is close to floor_44. light_212 is close to floor_42. light_212 is close to wall_176. light_212 is close to wall_179. light_212 is close to ceiling_52. light_212 is close to ceiling_53. light_212 is close to ceiling_182. light_212 is close to ceiling_183. light_212 is close to door_61. light_212 is close to doorjamb_190. light_212 is close to wall_66. light_212 is close to bookshelf_196. light_212 is close to wall_70. light_212 is close to powersocket_72. light_212 is close to light_73. light_212 is close to drawing_110. light_212 is close to bookshelf_124. light_212 is close to fridge_126. light_212 is close to character_240. light_212 is facing drawing_202. light_212 is inside bedroom_162. light_212 is OFF. light_212 is CLOSED. light_212 is PLUGGED_IN. light_212 is CLEAN.
##############################
From agent.py
walk_executor(light_283)
Robot find: mat_284, Robot is close to the light_283. 
##############################
From agent.py
obs(light_283, Check for clothes_jacket_2119)
Get this information:  light_283 is inside home_office_241. light_283 is close to wall_65. light_283 is close to ceiling_58. light_283 is close to wall_69. light_283 is close to floor_261. light_283 is close to floor_262. light_283 is close to floor_49. light_283 is close to floor_50. light_283 is close to wall_244. light_283 is close to doorjamb_309. light_283 is close to wall_246. light_283 is close to powersocket_282. light_283 is close to ceiling_251. light_283 is close to mat_284. light_283 is close to door_62. light_283 is close to character_240. light_283 is OFF. light_283 is CLOSED. light_283 is PLUGGED_IN. light_283 is CLEAN.
##############################
From agent.py
walk_executor(bathroom_cabinet_17)
Robot find: Robot is close to the bathroom_cabinet_17. 
##############################
From agent.py
open_executor(bathroom_cabinet_17)
Robot find: tooth_paste_2059, Robot is close to the bathroom_cabinet_17. Robot is close to the tooth_paste_2059. bathroom_cabinet_17 is opened. 
##############################
From agent.py
exp(clothes_jacket_2119, bathroom_cabinet_17)
Fail to find clothes_jacket_2119 around bathroom_cabinet_17. 
##############################
From agent.py-> find a plan in act()
walk_executor(tablelamp_238)exp(clothes_jacket_2119, tablelamp_238)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)walk_executor(clothes_jacket_2119)scrub_executor(clothes_jacket_2119)rinse_executor(clothes_jacket_2119)
##############################
From agent.py
walk_executor(tablelamp_238)
Robot find: pillow_208, drawing_201, Robot is close to the nightstand_192. Robot is close to the tablelamp_238. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_jacket_2119 ?
Answer: Go to bedroom_162. In there, locate couch_198. You will find clothes_jacket_2119 on top of couch_198.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to bedroom_162. In there, locate couch_198. You will find clothes_jacket_2119 on top of couch_198.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2078.
Action 2: look for clothes_jacket_2119 around basket_for_clothes_2078.
Action 3: Walk to light_212.
Action 4: look for clothes_jacket_2119 around light_212.
Action 5: Walk to washing_machine_2079.
Action 6: Open washing_machine_2079.
Action 7: look for clothes_jacket_2119 around washing_machine_2079.
Action 8: Walk to shower_16.
Action 9: look for clothes_jacket_2119 around shower_16.
Action 10: Walk to basket_for_clothes_2078.
Action 11: Observe around basket_for_clothes_2078 with the question of Check for clothes_jacket_2119.
Action 12: Walk to washing_machine_2079.
Action 13: Observe around washing_machine_2079 with the question of Check for clothes_jacket_2119.
Action 14: Walk to shower_16.
Action 15: Observe around shower_16 with the question of Check for clothes_jacket_2119.
Action 16: Walk to shower_21.
Action 17: Observe around shower_21 with the question of Check for clothes_jacket_2119.
Action 18: Walk to light_39.
Action 19: Observe around light_39 with the question of Check for clothes_jacket_2119.
Action 20: Walk to light_73.
Action 21: Observe around light_73 with the question of Check for clothes_jacket_2119.
Action 22: Walk to light_212.
Action 23: Observe around light_212 with the question of Check for clothes_jacket_2119.
Action 24: Walk to light_283.
Action 25: Observe around light_283 with the question of Check for clothes_jacket_2119.
Action 26: Walk to bathroom_cabinet_17.
Action 27: Open bathroom_cabinet_17.
Action 28: look for clothes_jacket_2119 around bathroom_cabinet_17.
Action 29: Walk to tablelamp_238.

##############################
From agent.py
exp(clothes_jacket_2119, tablelamp_238)
Fail to find clothes_jacket_2119 around tablelamp_238. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the jacket.', '2. Wash the jacket in the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_ironing_board_2144(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2144
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_detergent_2155_around_bathroom_counter_18(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(detergent,bathroom_counter_instance)
        else:
            exp(detergent,bathroom_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_counter_instance]=True
        close[bathroom_counter_instance,detergent]=True
    

behavior find_clothes_jacket_2119_around_couch_198(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==198
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(clothes_jacket,couch_instance)
        else:
            exp(clothes_jacket,couch_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,couch_instance]=True
        close[couch_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothes_jacket_on_couch(couch:item):
    # Function to check if clothes jacket is on the couch
    symbol jacket_on_couch = exists jacket: item : (is_clothes_jacket(jacket) and on(jacket, couch))
    return jacket_on_couch

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom) and id[bedroom] == 162
        # Select bedroom with ID 162

        bind couch: item where:
            is_couch(couch) and id[couch] == 198
        # Select couch with ID 198

        if not visited(couch):
            # If the couch has not been visited, observe to check for clothes_jacket
            observe(couch, "Check for clothes_jacket_2119")
        
        if is_clothes_jacket_on_couch(couch):
            bind jacket: item where:
                is_clothes_jacket(jacket) and on(jacket, couch)
            # Select jacket on the couch
            
            achieve_once close_char(char, jacket)
            # Move towards the jacket, it is necessary to close to the jacket before handwashing it
            
            achieve_once inhand(jacket)
            # Hold the jacket for handwashing

            wash(jacket)
            # Wash the jacket by hand

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_clothes_jacket_on_couch(couch:item):
    # Function to check if clothes jacket is on the couch
    symbol jacket_on_couch = exists jacket: item : (is_clothes_jacket(jacket) and on(jacket, couch))
    return jacket_on_couch

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom) and id[bedroom] == 162
        # Select bedroom with ID 162

        bind couch: item where:
            is_couch(couch) and id[couch] == 198
        # Select couch with ID 198

        if not visited(couch):
            # If the couch has not been visited, observe to check for clothes_jacket
            observe(couch, "Check for clothes_jacket_2119")
        
        if is_clothes_jacket_on_couch(couch):
            bind jacket: item where:
                is_clothes_jacket(jacket) and on(jacket, couch)
            # Select jacket on the couch
            
            achieve_once close_char(char, jacket)
            # Move towards the jacket, it is necessary to close to the jacket before handwashing it
            
            achieve_once inhand(jacket)
            # Hold the jacket for handwashing

            wash(jacket)
            # Wash the jacket by hand

##############################
From agent.py-> find a plan in act()
walk_executor(couch_198)obs(couch_198, Check for clothes_jacket_2119)
##############################
From agent.py
walk_executor(couch_198)
Robot find: chair_2003, instrument_guitar_2028, rag_2052, mat_203, phone_2016, clothes_jacket_2119, Robot is close to the couch_198. 
##############################
From agent.py
obs(couch_198, Check for clothes_jacket_2119)
Get this information:  chair_2003 is on couch_198. rag_2052 is on couch_198. couch_198 is close to phone_2016. couch_198 is close to rag_2052. couch_198 is close to table_199. couch_198 is close to clothes_jacket_2119. couch_198 is close to mat_203. couch_198 is close to floor_172. couch_198 is close to floor_171. couch_198 is close to wall_174. couch_198 is close to instrument_guitar_2028. couch_198 is close to wall_177. couch_198 is close to chair_2003. couch_198 is close to character_240. instrument_guitar_2028 is on couch_198. couch_198 is inside bedroom_162. clothes_jacket_2119 is on couch_198. phone_2016 is on couch_198. couch_198 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to approach and pick up the jacket from couch_198 and perform the hand washing of the jacket. Currently, you have only identified the location of the jacket but not yet completed the hand washing action.
##############################
From agent.py
Human Instruction: You need to approach and pick up the jacket from couch_198 and perform the hand washing of the jacket. Currently, you have only identified the location of the jacket but not yet completed the hand washing action.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2078.
Action 2: look for clothes_jacket_2119 around basket_for_clothes_2078.
Action 3: Walk to light_212.
Action 4: look for clothes_jacket_2119 around light_212.
Action 5: Walk to washing_machine_2079.
Action 6: Open washing_machine_2079.
Action 7: look for clothes_jacket_2119 around washing_machine_2079.
Action 8: Walk to shower_16.
Action 9: look for clothes_jacket_2119 around shower_16.
Action 10: Walk to basket_for_clothes_2078.
Action 11: Observe around basket_for_clothes_2078 with the question of Check for clothes_jacket_2119.
Action 12: Walk to washing_machine_2079.
Action 13: Observe around washing_machine_2079 with the question of Check for clothes_jacket_2119.
Action 14: Walk to shower_16.
Action 15: Observe around shower_16 with the question of Check for clothes_jacket_2119.
Action 16: Walk to shower_21.
Action 17: Observe around shower_21 with the question of Check for clothes_jacket_2119.
Action 18: Walk to light_39.
Action 19: Observe around light_39 with the question of Check for clothes_jacket_2119.
Action 20: Walk to light_73.
Action 21: Observe around light_73 with the question of Check for clothes_jacket_2119.
Action 22: Walk to light_212.
Action 23: Observe around light_212 with the question of Check for clothes_jacket_2119.
Action 24: Walk to light_283.
Action 25: Observe around light_283 with the question of Check for clothes_jacket_2119.
Action 26: Walk to bathroom_cabinet_17.
Action 27: Open bathroom_cabinet_17.
Action 28: look for clothes_jacket_2119 around bathroom_cabinet_17.
Action 29: Walk to tablelamp_238.
Action 30: look for clothes_jacket_2119 around tablelamp_238.
Action 31: Walk to couch_198.
Action 32: Observe around couch_198 with the question of Check for clothes_jacket_2119.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2143_around_cupboard_118(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cleaning_solution,cupboard_instance)
        else:
            exp(cleaning_solution,cupboard_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,cupboard_instance]=True
        close[cupboard_instance,cleaning_solution]=True
    

behavior find_soap_2010_around_sink_120(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_jacket(jacket:item):
    body:
        wash(jacket)
        # Perform the hand wash action on the jacket

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Identify the jacket to be washed
        achieve close_char(char, jacket)
        # Ensure the character is close to the jacket
        hand_wash_jacket(jacket)
        # Hand wash the jacket

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_cupboard_118(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(detergent,cupboard_instance)
        else:
            exp(detergent,cupboard_instance)
    eff:
        unknown[detergent]=False
        close[detergent,cupboard_instance]=True
        close[cupboard_instance,detergent]=True
    

behavior find_cleaning_solution_2143_around_cupboard_118(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cleaning_solution,cupboard_instance)
        else:
            exp(cleaning_solution,cupboard_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,cupboard_instance]=True
        close[cupboard_instance,cleaning_solution]=True
    

behavior find_soap_2010_around_sink_120(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2119
        
        achieve_once inhand(jacket)
        
        wash(jacket)
        scrub(jacket)
        rinse(jacket)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2119
        
        achieve_once inhand(jacket)
        
        wash(jacket)
        scrub(jacket)
        rinse(jacket)

##############################
From agent.py-> find a plan in act()
walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)walk_executor(clothes_jacket_2119)scrub_executor(clothes_jacket_2119)rinse_executor(clothes_jacket_2119)
##############################
From agent.py
walk_executor(clothes_jacket_2119)
Robot find: Robot is close to the couch_198. Robot is close to the clothes_jacket_2119. 
##############################
From agent.py
grab_executor(clothes_jacket_2119)
Robot find: Robot is close to the couch_198. Robot is close to the clothes_jacket_2119. Grabbing clothes_jacket_2119 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot find: phone_2029, Robot is close to the clothes_jacket_2119. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchon_executor(faucet_20)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned on. 
##############################
From agent.py
wash_executor(clothes_jacket_2119)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. clothes_jacket_2119 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned off. 
##############################
From agent.py
walk_executor(clothes_jacket_2119)
Robot find: Robot is close to the clothes_jacket_2119. 
##############################
From agent.py
scrub_executor(clothes_jacket_2119)
Robot find: Robot is close to the clothes_jacket_2119. 
##############################
From agent.py
rinse_executor(clothes_jacket_2119)
Robot find: Robot is close to the clothes_jacket_2119. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_ironing_board_2144(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2144
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_detergent_2011_around_cupboard_118(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(detergent,cupboard_instance)
        else:
            exp(detergent,cupboard_instance)
    eff:
        unknown[detergent]=False
        close[detergent,cupboard_instance]=True
        close[cupboard_instance,detergent]=True
    

behavior find_cleaning_solution_2143_around_cupboard_118(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cleaning_solution,cupboard_instance)
        else:
            exp(cleaning_solution,cupboard_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,cupboard_instance]=True
        close[cupboard_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_jacket_in_washing_machine(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)
        # Load the jacket into the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve_once closed(washing_machine) # Ensure the washing machine is closed
        achieve_once is_on(washing_machine) # Start the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and clean(jacket)
        # Identify the clean jacket that needs to be washed in the machine

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Identify the washing machine

        load_jacket_in_washing_machine(jacket, washing_machine)
        # Load the jacket into the washing machine

        start_washing_machine(washing_machine)
        # Start the washing process

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_jacket_in_washing_machine(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)
        # Load the jacket into the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve_once closed(washing_machine) # Ensure the washing machine is closed
        achieve_once is_on(washing_machine) # Start the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and clean(jacket)
        # Identify the clean jacket that needs to be washed in the machine

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Identify the washing machine

        load_jacket_in_washing_machine(jacket, washing_machine)
        # Load the jacket into the washing machine

        start_washing_machine(washing_machine)
        # Start the washing process

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2079)putin_executor(clothes_jacket_2119, washing_machine_2079)close_executor(washing_machine_2079)plugin_executor(washing_machine_2079)switchon_executor(washing_machine_2079)
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the washing_machine_2079. 
##############################
From agent.py
putin_executor(clothes_jacket_2119, washing_machine_2079)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the washing_machine_2079. clothes_jacket_2119 is inside washing_machine_2079. clothes_jacket_2119 is close washing_machine_2079. washing_machine_2079 is close clothes_jacket_2119. clothes_jacket_2119 released by right hand. 
##############################
From agent.py
close_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is closed. 
##############################
From agent.py
plugin_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is plugged in. 
##############################
From agent.py
switchon_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Hand wash the jacket, then wash it by washing machine.
Action History:
['walk_executor(basket_for_clothes_2078)', 'walk_executor(light_212)', 'walk_executor(washing_machine_2079)', 'open_executor(washing_machine_2079)', 'walk_executor(shower_16)', 'walk_executor(basket_for_clothes_2078)', 'walk_executor(washing_machine_2079)', 'walk_executor(shower_16)', 'walk_executor(shower_21)', 'walk_executor(light_39)', 'walk_executor(light_73)', 'walk_executor(light_212)', 'walk_executor(light_283)', 'walk_executor(bathroom_cabinet_17)', 'open_executor(bathroom_cabinet_17)', 'walk_executor(tablelamp_238)', 'walk_executor(couch_198)', 'walk_executor(clothes_jacket_2119)', 'grab_executor(clothes_jacket_2119)', 'walk_executor(faucet_20)', 'switchon_executor(faucet_20)', 'wash_executor(clothes_jacket_2119)', 'switchoff_executor(faucet_20)', 'walk_executor(clothes_jacket_2119)', 'scrub_executor(clothes_jacket_2119)', 'rinse_executor(clothes_jacket_2119)', 'walk_executor(washing_machine_2079)', 'putin_executor(clothes_jacket_2119, washing_machine_2079)', 'close_executor(washing_machine_2079)', 'plugin_executor(washing_machine_2079)', 'switchon_executor(washing_machine_2079)']
Time info:
Time consume: 196 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 7
goal correct times: 0
action_num: 31

Task complete rate:
1
Scene_id: 1
##############################
