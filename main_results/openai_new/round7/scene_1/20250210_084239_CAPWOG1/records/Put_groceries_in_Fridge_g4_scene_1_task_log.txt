From agent.py
Reset goals: The sub-goals are: 
['Cut the chicken into pieces and put it back in the fridge.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2089_around_fridge_126(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_knife_2122_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior cut_chicken(chicken:item, board:item):
    body:
        if cuttable(chicken) and on(chicken, board):
            cuts(chicken)

behavior put_chicken_in_fridge(chicken:item, fridge:item):
    body:
        if not inside(chicken, fridge):
            put_inside(chicken, fridge)

behavior close_fridge(fridge:item):
    body:
        if open(fridge):
            closes(fridge)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select a chicken
        
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        bind fridge: item where:
            is_fridge(fridge)
        # Select the fridge

        cut_chicken(chicken, cutting_board)
        put_chicken_in_fridge(chicken, fridge)
        close_fridge(fridge)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior cut_chicken(chicken:item, board:item):
    body:
        if cuttable(chicken) and on(chicken, board):
            cuts(chicken)

behavior put_chicken_in_fridge(chicken:item, fridge:item):
    body:
        if not inside(chicken, fridge):
            put_inside(chicken, fridge)

behavior close_fridge(fridge:item):
    body:
        if open(fridge):
            closes(fridge)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select a chicken
        
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        bind fridge: item where:
            is_fridge(fridge)
        # Select the fridge

        cut_chicken(chicken, cutting_board)
        put_chicken_in_fridge(chicken, fridge)
        close_fridge(fridge)

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_chicken_2089, fridge_126)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(fridge_126)putin_executor(food_chicken_2089, fridge_126)close_executor(fridge_126)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_chicken_2089, fridge_126)
Find food_chicken_2089. 
##############################
From agent.py-> find a plan in act()
close_executor(fridge_126)
##############################
From agent.py
close_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is closed. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to cut the chicken into pieces and then put it back into the fridge.
##############################
From agent.py
Human Instruction: You need to cut the chicken into pieces and then put it back into the fridge.

The actions you have taken:
Action 1: Walk to fridge_126.
Action 2: Switch off fridge_126.
Action 3: Open fridge_126.
Action 4: look for food_chicken_2089 around fridge_126.
Action 5: Close fridge_126.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_scrabble_2031_around_cupboard_118(scrabble:item):
    goal: not unknown(scrabble)
    body:
        assert is_scrabble(scrabble)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(scrabble,cupboard_instance)
        else:
            exp(scrabble,cupboard_instance)
    eff:
        unknown[scrabble]=False
        close[scrabble,cupboard_instance]=True
        close[cupboard_instance,scrabble]=True
    

#exp_behavior_end

#goal_representation
 
behavior grab_chicken(chicken:item):
    body:
        if not inhand(chicken):
            grab(chicken)

behavior cut_chicken(chicken:item):
    body:
        if not cut(chicken):
            cuts(chicken)

behavior store_in_fridge(chicken:item, fridge:item):
    body:
        if not inside(chicken, fridge):
            put_inside(chicken, fridge)

behavior close_the_fridge_door(fridge:item):
    body:
        if open(fridge):
            closes(fridge)

behavior __goal__():
    body:
        bind fridge: item where:
            is_fridge(fridge) and id[fridge]==126
        bind chicken: item where:
            is_food_chicken(chicken) and id[chicken]==2089
        walk_to(fridge)
        open(fridge)
        grab_chicken(chicken)
        cut_chicken(chicken)
        store_in_fridge(chicken, fridge)
        close_the_fridge_door(fridge)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2037_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior retrieve_chicken_from_fridge(chicken:item, fridge:item):
    body:
        if not inhand(chicken):
            walk_to(fridge)
            if closed(fridge):
                opens(fridge)
            if not inhand(chicken):
                grab(chicken)

behavior cut_chicken(chicken:item):
    body:
        if not cut(chicken):
            if inhand(chicken):
                empty_a_hand()
            cuts(chicken)

behavior store_back_in_fridge(chicken:item, fridge:item):
    body:
        if inhand(chicken):
            put_inside(chicken, fridge)
        if open(fridge):
            closes(fridge)

def initialize():
    bind chicken: item where:
        is_food_chicken(chicken)
    bind fridge: item where:
        is_fridge(fridge)
    return chicken, fridge

behavior __goal__():
    body:
        symbol chicken, fridge = initialize()
        retrieve_chicken_from_fridge(chicken, fridge)
        cut_chicken(chicken)
        retrieve_chicken_from_fridge(chicken, fridge)  # take chicken in hand after cutting again
        store_back_in_fridge(chicken, fridge)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2037_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior grab_chicken_and_cut(chicken:item, knife:item):
    body:
        if not cut(chicken):
            grab(chicken)
            # Assume cutting happens on a suitable surface
            cut(chicken)
            empty_a_hand() # Release the chicken after cutting

behavior store_chicken_in_fridge(chicken:item, fridge:item):
    body:
        if not inside(chicken, fridge):
            grab(chicken)
            put_inside(chicken, fridge)
            empty_a_hand()

behavior close_fridge(fridge:item):
    body:
        if open(fridge):
            closes(fridge)

behavior __goal__():
    body:
        bind fridge: item where:
            is_fridge(fridge) and id[fridge]==126
        bind chicken: item where:
            is_food_chicken(chicken) and inside(chicken, fridge)
        bind knife: item where:
            is_knife(knife)
        walk_to(fridge)
        if is_on(fridge):
            switch_off(fridge) # Ensure the fridge is off before opening
        if not open(fridge):
            opens(fridge)
        grab_chicken_and_cut(chicken, knife)
        store_chicken_in_fridge(chicken, fridge)
        close_fridge(fridge)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2122_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_box_2038_around_knifeblock_76(box:item):
    goal: not unknown(box)
    body:
        assert is_box(box)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(box,knifeblock_instance)
        else:
            exp(box,knifeblock_instance)
    eff:
        unknown[box]=False
        close[box,knifeblock_instance]=True
        close[knifeblock_instance,box]=True
    

behavior find_food_food_2073_around_kitchen_counter_119(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_food,kitchen_counter_instance)
        else:
            exp(food_food,kitchen_counter_instance)
    eff:
        unknown[food_food]=False
        close[food_food,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
 
behavior move_chicken_to_cutting_board(chicken: item, cutting_board: item):
    body:
        if not on(chicken, cutting_board):
            put_on(chicken, cutting_board)

behavior cut_chicken(chicken: item):
    body:
        if not cut(chicken):
            cuts(chicken)

behavior store_chicken_in_fridge(chicken: item, fridge: item):
    body:
        if not inside(chicken, fridge):
            put_inside(chicken, fridge)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken) and not cut(chicken)
        # Select a chicken that needs to be cut
        
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        bind fridge: item where:
            is_fridge(fridge)
        # Select a fridge

        move_chicken_to_cutting_board(chicken, cutting_board)
        cut_chicken(chicken)
        store_chicken_in_fridge(chicken, fridge)
        # Ensure the chicken is cut and stored back in the fridge

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior move_chicken_to_cutting_board(chicken: item, cutting_board: item):
    body:
        if not on(chicken, cutting_board):
            put_on(chicken, cutting_board)

behavior cut_chicken(chicken: item):
    body:
        if not cut(chicken):
            cuts(chicken)

behavior store_chicken_in_fridge(chicken: item, fridge: item):
    body:
        if not inside(chicken, fridge):
            put_inside(chicken, fridge)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken) and not cut(chicken)
        # Select a chicken that needs to be cut
        
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        bind fridge: item where:
            is_fridge(fridge)
        # Select a fridge

        move_chicken_to_cutting_board(chicken, cutting_board)
        cut_chicken(chicken)
        store_chicken_in_fridge(chicken, fridge)
        # Ensure the chicken is cut and stored back in the fridge

##############################
From agent.py-> find a plan in act()
open_executor(fridge_126)grab_executor(food_chicken_2089)walk_executor(cutting_board_2123)put_executor(food_chicken_2089, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_chicken_2089)cut_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(fridge_126)putin_executor(food_chicken_2089, fridge_126)
##############################
From agent.py
open_executor(fridge_126)
Robot find: Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
grab_executor(food_chicken_2089)
Robot find: Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. Grabbing food_chicken_2089 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_78, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_chicken_2089, cutting_board_2123)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. cutting_board_2123 is close food_chicken_2089. food_chicken_2089 is close cutting_board_2123. food_chicken_2089 is on cutting_board_2123. food_chicken_2089 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_76)
Robot find: Robot is close to the knifeblock_76. 
##############################
From agent.py
exp(knife_2122, knifeblock_76)
Fail to find knife_2122 around knifeblock_76. 
##############################
From agent.py-> find a plan in act()
walk_executor(window_2156)open_executor(window_2156)exp(knife_2122, window_2156)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_chicken_2089)cut_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(fridge_126)putin_executor(food_chicken_2089, fridge_126)
##############################
From agent.py
walk_executor(window_2156)
Robot find: Robot is close to the window_2156. 
##############################
From agent.py
open_executor(window_2156)
Robot find: Robot is close to the window_2156. window_2156 is opened. 
##############################
From agent.py
exp(knife_2122, window_2156)
Fail to find knife_2122 around window_2156. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(knife_2122, kitchen_counter_122)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_chicken_2089)cut_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(fridge_126)putin_executor(food_chicken_2089, fridge_126)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, fryingpan_2154, Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(knife_2122, kitchen_counter_122)
Fail to find knife_2122 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(knife_2122, cupboard_118)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_chicken_2089)cut_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(fridge_126)putin_executor(food_chicken_2089, fridge_126)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(knife_2122, cupboard_118)
Fail to find knife_2122 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
grab_executor(knife_2037)walk_executor(food_chicken_2089)cut_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(fridge_126)putin_executor(food_chicken_2089, fridge_126)
##############################
From agent.py
grab_executor(knife_2037)
Robot find: Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. Grabbing knife_2037 by right hand. 
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. 
##############################
From agent.py
cut_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. 
##############################
From agent.py
grab_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. Grabbing food_chicken_2089 by left hand. 
##############################
From agent.py
walk_executor(fridge_126)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. 
##############################
From agent.py
putin_executor(food_chicken_2089, fridge_126)
Robot find: Robot is close to the knife_2037. Robot is close to the food_chicken_2089. Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. food_chicken_2089 is inside fridge_126. food_chicken_2089 is close fridge_126. food_chicken_2089 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Cut the chicken into pieces, then put back to the fridge.
Action History:
['walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'close_executor(fridge_126)', 'open_executor(fridge_126)', 'grab_executor(food_chicken_2089)', 'walk_executor(cutting_board_2123)', 'put_executor(food_chicken_2089, cutting_board_2123)', 'walk_executor(knifeblock_76)', 'walk_executor(window_2156)', 'open_executor(window_2156)', 'walk_executor(kitchen_counter_122)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'grab_executor(knife_2037)', 'walk_executor(food_chicken_2089)', 'cut_executor(food_chicken_2089)', 'grab_executor(food_chicken_2089)', 'walk_executor(fridge_126)', 'putin_executor(food_chicken_2089, fridge_126)']
Time info:
Time consume: 155 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 5
goal correct times: 0
action_num: 20

Task complete rate:
Keystate: k1 - Requires: 5 steps
Keystate: k2 - Requires: 0 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
