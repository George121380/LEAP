From agent.py
Reset goals: The sub-goals are: 
['1. Turn on the lights in the bedroom.', '2. Turn on the lights in the bathroom.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior locate_and_turn_on_light(light:item, room:item):
    body:
        if not visited(light):
            if not close_char(char, room):
                walk_to(room)
            if not inside_char(char, room):
                observe(room, "Check if I am inside the room")
            if not close_char(char, light):
                observe(light, "Check if it is the room light")
        if is_off(light):
            switch_on(light)

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)

        bind light: item where:
            is_light(light) and inside(light, bedroom)

        locate_and_turn_on_light(light, bedroom)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior locate_and_turn_on_light(light:item, room:item):
    body:
        if not visited(light):
            if not close_char(char, room):
                walk_to(room)
            if not inside_char(char, room):
                observe(room, "Check if I am inside the room")
            if not close_char(char, light):
                observe(light, "Check if it is the room light")
        if is_off(light):
            switch_on(light)

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)

        bind light: item where:
            is_light(light) and inside(light, bedroom)

        locate_and_turn_on_light(light, bedroom)

##############################
From agent.py-> find a plan in act()
walk_executor(bedroom_220)obs(bedroom_220, Check if I am inside the room)walk_executor(light_258)obs(light_258, Check if it is the room light)switchon_executor(light_258)
##############################
From agent.py
walk_executor(bedroom_220)

##############################
From agent.py
obs(bedroom_220, Check if I am inside the room)
Get this information:  pillow_240 is inside bedroom_220. powersocket_259 is inside bedroom_220. wall_232 is inside bedroom_220. floor_221 is inside bedroom_220. clothes_jacket_2078 is inside bedroom_220. nightstand_262 is inside bedroom_220. floor_224 is inside bedroom_220. ceilinglamp_235 is inside bedroom_220. ceiling_227 is inside bedroom_220. photoframe_246 is inside bedroom_220. bedroom_220 is close to ironing_board_2099. character_219 is inside bedroom_220. drawing_238 is inside bedroom_220. bookshelf_260 is inside bedroom_220. floor_222 is inside bedroom_220. wall_230 is inside bedroom_220. clothes_hat_2076 is inside bedroom_220. iron_2117 is inside bedroom_220. clothes_scarf_2079 is inside bedroom_220. wall_233 is inside bedroom_220. chair_263 is inside bedroom_220. floor_225 is inside bedroom_220. tablelamp_236 is inside bedroom_220. pillow_239 is inside bedroom_220. ceiling_228 is inside bedroom_220. light_258 is inside bedroom_220. door_234 is between bedroom_220. clothes_gloves_2077 is inside bedroom_220. wall_231 is inside bedroom_220. desk_261 is inside bedroom_220. floor_223 is inside bedroom_220. ironing_board_2099 is inside bedroom_220. door_234 is inside bedroom_220. bed_264 is inside bedroom_220. ceiling_226 is inside bedroom_220. mat_237 is inside bedroom_220. ceiling_229 is inside bedroom_220. clothes_dress_2075 is inside bedroom_220. headset_2086 is inside bedroom_220. bedroom_220 is CLEAN.
##############################
From agent.py
walk_executor(light_258)
Robot find: drawing_238, Robot is close to the light_258. 
##############################
From agent.py
obs(light_258, Check if it is the room light)
Get this information:  light_258 is close to couch_192. light_258 is close to floor_224. light_258 is close to pillow_195. light_258 is close to drawing_196. light_258 is close to ceiling_228. light_258 is close to floor_165. light_258 is close to floor_164. light_258 is close to wall_232. light_258 is close to door_234. light_258 is close to wall_170. light_258 is close to wall_174. light_258 is close to drawing_238. light_258 is close to ceiling_179. light_258 is close to ceiling_180. light_258 is close to doorjamb_182. light_258 is close to character_219. light_258 is facing drawing_238. light_258 is inside bedroom_220. light_258 is PLUGGED_IN. light_258 is CLOSED. light_258 is OFF. light_258 is CLEAN.
##############################
From agent.py
switchon_executor(light_258)
Robot find: Robot is close to the light_258. light_258 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2038_around_bathroom_counter_306(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_toilet_paper_2118_around_toilet_302(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind toilet_instance:item where:
            is_toilet(toilet_instance) and id[toilet_instance]==302
        achieve close_char(char,toilet_instance)
        if can_open(toilet_instance):
            achieve_once open(toilet_instance)
            exp(toilet_paper,toilet_instance)
        else:
            exp(toilet_paper,toilet_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,toilet_instance]=True
        close[toilet_instance,toilet_paper]=True
    

#exp_behavior_end

#goal_representation
 
def is_light_in_bathroom(light:item):
    # Function to check if a light is in the bathroom
    symbol in_bathroom=exists room: item : (is_bathroom(room) and inside(light, room))
    return in_bathroom

behavior __goal__():
    body:
        bind light: item where:
            is_light(light) and is_light_in_bathroom(light)
        # Select the light inside the bathroom

        walk_to(light)
        # Move close to the light

        if is_off(light):
            switch_on(light)
            # Turn on the light if it is off

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_light_in_bathroom(light:item):
    # Function to check if a light is in the bathroom
    symbol in_bathroom=exists room: item : (is_bathroom(room) and inside(light, room))
    return in_bathroom

behavior __goal__():
    body:
        bind light: item where:
            is_light(light) and is_light_in_bathroom(light)
        # Select the light inside the bathroom

        walk_to(light)
        # Move close to the light

        if is_off(light):
            switch_on(light)
            # Turn on the light if it is off

##############################
From agent.py-> find a plan in act()
walk_executor(light_325)switchon_executor(light_325)
##############################
From agent.py
walk_executor(light_325)
Robot find: drawing_296, mat_292, Robot is close to the light_325. 
##############################
From agent.py
switchon_executor(light_325)
Robot find: Robot is close to the light_325. light_325 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to identify a light that is inside the bathroom and turn it on if it is off. So far, you have only turned on lights in the bedroom.
##############################
From agent.py
Human Instruction: You need to identify a light that is inside the bathroom and turn it on if it is off. So far, you have only turned on lights in the bedroom.

The actions you have taken:
Action 1: Walk to bedroom_220.
Action 2: Observe around bedroom_220 with the question of Check if I am inside the room.
Action 3: Walk to light_258.
Action 4: Observe around light_258 with the question of Check if it is the room light.
Action 5: Switch on light_258.
Action 6: Walk to light_325.
Action 7: Switch on light_325.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_light_in_bathroom(light:item):
    # Function to check if a light is in the bathroom
    symbol in_bathroom=exists room: item : (is_bathroom(room) and inside(light, room))
    return in_bathroom

behavior __goal__():
    body:
        bind light: item where:
            is_light(light) and is_light_in_bathroom(light)
        # Select the light inside the bathroom

        walk_to(light)
        # Move close to the light

        if is_off(light):
            switch_on(light)
            # Turn on the light if off

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_light_in_bathroom(light:item):
    # Function to check if a light is in the bathroom
    symbol in_bathroom=exists room: item : (is_bathroom(room) and inside(light, room))
    return in_bathroom

behavior __goal__():
    body:
        bind light: item where:
            is_light(light) and is_light_in_bathroom(light)
        # Select the light inside the bathroom

        walk_to(light)
        # Move close to the light

        if is_off(light):
            switch_on(light)
            # Turn on the light if off

##############################
From agent.py-> find a plan in act()
walk_executor(light_325)
##############################
From agent.py
walk_executor(light_325)
Robot find: Robot is close to the light_325. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to identify a light inside the bathroom and turn it on if it is off. So far, you have only turned on lights in the bedroom.
##############################
From agent.py
Human Instruction: You need to identify a light inside the bathroom and turn it on if it is off. So far, you have only turned on lights in the bedroom.

The actions you have taken:
Action 1: Walk to bedroom_220.
Action 2: Observe around bedroom_220 with the question of Check if I am inside the room.
Action 3: Walk to light_258.
Action 4: Observe around light_258 with the question of Check if it is the room light.
Action 5: Switch on light_258.
Action 6: Walk to light_325.
Action 7: Switch on light_325.
Action 8: Walk to light_325.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_light_in_bathroom(light:item):
    # Function to check if a light is in the bathroom
    symbol in_bathroom=exists room: item : (is_bathroom(room) and inside(light, room))
    return in_bathroom

behavior __goal__():
    body:
        bind light: item where:
            is_light(light) and is_light_in_bathroom(light)
        # Select the light inside the bathroom

        walk_to(light)
        # Move close to the light

        if is_off(light):
            switch_on(light)
            # Turn on the light if off

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_light_in_bathroom(light:item):
    # Function to check if a light is in the bathroom
    symbol in_bathroom=exists room: item : (is_bathroom(room) and inside(light, room))
    return in_bathroom

behavior __goal__():
    body:
        bind light: item where:
            is_light(light) and is_light_in_bathroom(light)
        # Select the light inside the bathroom

        walk_to(light)
        # Move close to the light

        if is_off(light):
            switch_on(light)
            # Turn on the light if off

##############################
From agent.py-> find a plan in act()
walk_executor(light_325)
##############################
From agent.py
walk_executor(light_325)
Robot find: Robot is close to the light_325. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to identify a light inside the bathroom and turn it on if it is off. So far, you have only turned on lights in the bedroom.
##############################
Task Summary:
Task Goal:
Turn on the lights in the bedroom. Then turn on the lights in the bathroom.
Action History:
['walk_executor(bedroom_220)', 'walk_executor(light_258)', 'switchon_executor(light_258)', 'walk_executor(light_325)', 'switchon_executor(light_325)', 'walk_executor(light_325)', 'walk_executor(light_325)']
Time info:
Time consume: 53 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 74
goal generate times: 4
goal correct times: 0
action_num: 7

Task complete rate:
1
Scene_id: 2
##############################
