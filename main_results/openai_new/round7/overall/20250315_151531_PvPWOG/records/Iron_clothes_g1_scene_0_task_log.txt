From agent.py
Reset goals: The sub-goals are: 
['Iron the skirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_skirt_2088_around_ironing_board_2074(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_skirt,ironing_board_instance)
        else:
            exp(clothes_skirt,ironing_board_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,ironing_board_instance]=True
        close[ironing_board_instance,clothes_skirt]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior grab_iron_and_switch_on(iron:item, skirt:item):
    body:
        if not inhand(iron):
            grab(iron)
        if not close_char(char, skirt):
            walk_to(skirt)
        if is_off(iron):
            switch_on(iron)

behavior iron_skirt(skirt:item, iron:item):
    body:
        if close_char(char, skirt) and inhand(iron):
            touch(skirt)

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        bind skirt: item where:
            is_clothes_skirt(skirt)
        grab_iron_and_switch_on(iron, skirt)
        iron_skirt(skirt, iron)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior grab_iron_and_switch_on(iron:item, skirt:item):
    body:
        if not inhand(iron):
            grab(iron)
        if not close_char(char, skirt):
            walk_to(skirt)
        if is_off(iron):
            switch_on(iron)

behavior iron_skirt(skirt:item, iron:item):
    body:
        if close_char(char, skirt) and inhand(iron):
            touch(skirt)

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        bind skirt: item where:
            is_clothes_skirt(skirt)
        grab_iron_and_switch_on(iron, skirt)
        iron_skirt(skirt, iron)

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)grab_executor(iron_2089)walk_executor(ironing_board_2074)exp(clothes_skirt_2088, ironing_board_2074)walk_executor(clothes_skirt_2088)touch_executor(clothes_skirt_2088)
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: iron_2089, Robot is close to the ironing_board_2074. 
##############################
From agent.py
exp(iron_2089, ironing_board_2074)
Find iron_2089. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2089)grab_executor(iron_2089)walk_executor(ironing_board_2074)exp(clothes_skirt_2088, ironing_board_2074)walk_executor(clothes_skirt_2088)walk_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)
##############################
From agent.py
walk_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. 
##############################
From agent.py
grab_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. Grabbing iron_2089 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. 
##############################
From agent.py
exp(clothes_skirt_2088, ironing_board_2074)
Fail to find clothes_skirt_2088 around ironing_board_2074. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)exp(clothes_skirt_2088, basket_for_clothes_2006)walk_executor(clothes_skirt_2088)walk_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Robot find: clothes_pants_2085, clothes_shirt_2086, clothes_socks_2087, clothes_skirt_2088, towel_rack_31, towel_rack_33, towel_rack_32, towel_rack_34, mat_22, Robot is close to the iron_2089. Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
exp(clothes_skirt_2088, basket_for_clothes_2006)
Find clothes_skirt_2088. 
##############################
From agent.py-> find a plan in act()
plugin_executor(iron_2089)switchon_executor(iron_2089)touch_executor(clothes_skirt_2088)
##############################
From agent.py
plugin_executor(iron_2089)
Robot find: Robot is close to the iron_2089. Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. iron_2089 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2089)
Robot find: Robot is close to the iron_2089. Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. iron_2089 is turned on. 
##############################
From agent.py
touch_executor(clothes_skirt_2088)
Robot find: Robot is close to the iron_2089. Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure that the skirt is brought to the ironing board and that the ironing action is completed. The iron is plugged in and turned on, so now you need to walk to the skirt, grab it, return to the ironing board, and then touch the skirt with the iron.
##############################
From agent.py
Human Instruction: You need to ensure that the skirt is brought to the ironing board and that the ironing action is completed. The iron is plugged in and turned on, so now you need to walk to the skirt, grab it, return to the ironing board, and then touch the skirt with the iron.

The actions you have taken:
Action 1: Walk to ironing_board_2074.
Action 2: look for iron_2089 around ironing_board_2074.
Action 3: Walk to iron_2089.
Action 4: Grab iron_2089.
Action 5: Walk to ironing_board_2074.
Action 6: look for clothes_skirt_2088 around ironing_board_2074.
Action 7: Walk to basket_for_clothes_2006.
Action 8: look for clothes_skirt_2088 around basket_for_clothes_2006.
Action 9: Plug in iron_2089.
Action 10: Switch on iron_2089.
Action 11: Touch clothes_skirt_2088.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_mat_173_around_mat_22(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind mat_instance:item where:
            is_mat(mat_instance) and id[mat_instance]==22
        achieve close_char(char,mat_instance)
        if can_open(mat_instance):
            achieve_once open(mat_instance)
            exp(mat,mat_instance)
        else:
            exp(mat,mat_instance)
    eff:
        unknown[mat]=False
        close[mat,mat_instance]=True
        close[mat_instance,mat]=True
    

behavior find_clothes_scarf_2048_around_closetdrawer_154(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==154
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_scarf,closetdrawer_instance)
        else:
            exp(clothes_scarf,closetdrawer_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_scarf]=True
    

behavior find_clothes_underwear_2049_around_closetdrawer_154(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==154
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_underwear,closetdrawer_instance)
        else:
            exp(clothes_underwear,closetdrawer_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_underwear]=True
    

#exp_behavior_end

#goal_representation
 
def is_skirt_at_board(skirt:item, ironing_board:item):
    # Check if the skirt is close to the ironing board
    symbol at_board=close(skirt, ironing_board)
    return at_board

behavior approach_skirt_and_board(skirt:item, ironing_board:item):
    body:
        if not is_skirt_at_board(skirt, ironing_board):
            if not close_char(char, ironing_board):
                walk_to(ironing_board)
            observe(ironing_board, "Check if clothes_skirt_2088 is close to the ironing board")

behavior grab_skirt_after_locating(skirt:item):
    body:
        if not inhand(skirt):
            grab(skirt)

behavior iron_skirt(skirt:item, iron:item):
    body:
        if is_on(iron) and inhand(skirt):
            touch(skirt)

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2074
        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2088
        bind iron: item where:
            is_iron(iron) and id[iron] == 2089

        approach_skirt_and_board(skirt, ironing_board)
        grab_skirt_after_locating(skirt)
        iron_skirt(skirt, iron)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_skirt_at_board(skirt:item, ironing_board:item):
    # Check if the skirt is close to the ironing board
    symbol at_board=close(skirt, ironing_board)
    return at_board

behavior approach_skirt_and_board(skirt:item, ironing_board:item):
    body:
        if not is_skirt_at_board(skirt, ironing_board):
            if not close_char(char, ironing_board):
                walk_to(ironing_board)
            observe(ironing_board, "Check if clothes_skirt_2088 is close to the ironing board")

behavior grab_skirt_after_locating(skirt:item):
    body:
        if not inhand(skirt):
            grab(skirt)

behavior iron_skirt(skirt:item, iron:item):
    body:
        if is_on(iron) and inhand(skirt):
            touch(skirt)

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2074
        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2088
        bind iron: item where:
            is_iron(iron) and id[iron] == 2089

        approach_skirt_and_board(skirt, ironing_board)
        grab_skirt_after_locating(skirt)
        iron_skirt(skirt, iron)

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2074)obs(ironing_board_2074, Check if clothes_skirt_2088 is close to the ironing board)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)touch_executor(clothes_skirt_2088)
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: Robot is close to the iron_2089. Robot is close to the ironing_board_2074. 
##############################
From agent.py
obs(ironing_board_2074, Check if clothes_skirt_2088 is close to the ironing board)
Get this information:  ironing_board_2074 is close to iron_2089. ironing_board_2074 is close to bathroom_1. ironing_board_2074 is close to character_65. ironing_board_2074 is inside bathroom_1.
##############################
From agent.py
walk_executor(clothes_skirt_2088)
Robot find: Robot is close to the iron_2089. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
grab_executor(clothes_skirt_2088)
Robot find: Robot is close to the iron_2089. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. Grabbing clothes_skirt_2088 by left hand. 
##############################
From agent.py
touch_executor(clothes_skirt_2088)
Robot find: Robot is close to the iron_2089. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to bring the skirt close to the ironing board and then touch the skirt with the iron. The current actions do not indicate that the robot has brought the skirt to the ironing board or has touched it with the iron while the skirt is at the ironing board.
##############################
From agent.py
Human Instruction: The robot needs to bring the skirt close to the ironing board and then touch the skirt with the iron. The current actions do not indicate that the robot has brought the skirt to the ironing board or has touched it with the iron while the skirt is at the ironing board.

The actions you have taken:
Action 1: Walk to ironing_board_2074.
Action 2: look for iron_2089 around ironing_board_2074.
Action 3: Walk to iron_2089.
Action 4: Grab iron_2089.
Action 5: Walk to ironing_board_2074.
Action 6: look for clothes_skirt_2088 around ironing_board_2074.
Action 7: Walk to basket_for_clothes_2006.
Action 8: look for clothes_skirt_2088 around basket_for_clothes_2006.
Action 9: Plug in iron_2089.
Action 10: Switch on iron_2089.
Action 11: Touch clothes_skirt_2088.
Action 12: Walk to ironing_board_2074.
Action 13: Observe around ironing_board_2074 with the question of Check if clothes_skirt_2088 is close to the ironing board.
Action 14: Walk to clothes_skirt_2088.
Action 15: Grab clothes_skirt_2088.
Action 16: Touch clothes_skirt_2088.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_mat_173_around_cutting_board_2051(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind cutting_board_instance:item where:
            is_cutting_board(cutting_board_instance) and id[cutting_board_instance]==2051
        achieve close_char(char,cutting_board_instance)
        if can_open(cutting_board_instance):
            achieve_once open(cutting_board_instance)
            exp(mat,cutting_board_instance)
        else:
            exp(mat,cutting_board_instance)
    eff:
        unknown[mat]=False
        close[mat,cutting_board_instance]=True
        close[cutting_board_instance,mat]=True
    

behavior find_hanger_140_around_closetdrawer_154(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==154
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(hanger,closetdrawer_instance)
        else:
            exp(hanger,closetdrawer_instance)
    eff:
        unknown[hanger]=False
        close[hanger,closetdrawer_instance]=True
        close[closetdrawer_instance,hanger]=True
    

#exp_behavior_end

#goal_representation
 
behavior bring_skirt_to_ironing_board_and_touch_with_iron(skirt:item, ironing_board:item, iron:item):
    body:
        if not close(skirt, ironing_board):
            if not close_char(char, skirt):
                walk_to(skirt)
            grab(skirt)
            walk_to(ironing_board)
            put_close(skirt, ironing_board)
        
        if close(skirt, ironing_board) and inhand(iron):
            touch(skirt)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt]==2088
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board]==2074
        bind iron: item where:
            is_iron(iron) and id[iron]==2089
        bring_skirt_to_ironing_board_and_touch_with_iron(skirt, ironing_board, iron)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior bring_skirt_to_ironing_board_and_touch_with_iron(skirt:item, ironing_board:item, iron:item):
    body:
        if not close(skirt, ironing_board):
            if not close_char(char, skirt):
                walk_to(skirt)
            grab(skirt)
            walk_to(ironing_board)
            put_close(skirt, ironing_board)
        
        if close(skirt, ironing_board) and inhand(iron):
            touch(skirt)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt]==2088
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board]==2074
        bind iron: item where:
            is_iron(iron) and id[iron]==2089
        bring_skirt_to_ironing_board_and_touch_with_iron(skirt, ironing_board, iron)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)put_executor(iron_2089, kitchen_counter_230)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(ironing_board_2074)put_executor(clothes_skirt_2088, ironing_board_2074)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the iron_2089. Robot is close to the clothes_skirt_2088. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
put_executor(iron_2089, kitchen_counter_230)
Robot find: Robot is close to the iron_2089. Robot is close to the clothes_skirt_2088. Robot is close to the kitchen_counter_230. kitchen_counter_230 is close iron_2089. iron_2089 is close kitchen_counter_230. iron_2089 is on kitchen_counter_230. iron_2089 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. 
##############################
From agent.py
grab_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Grabbing clothes_skirt_2088 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. 
##############################
From agent.py
put_executor(clothes_skirt_2088, ironing_board_2074)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. ironing_board_2074 is close clothes_skirt_2088. clothes_skirt_2088 is close ironing_board_2074. clothes_skirt_2088 is on ironing_board_2074. clothes_skirt_2088 released by left hand. clothes_skirt_2088 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The skirt was placed on the ironing board, but the robot still needs to take the iron to the ironing board and touch the skirt with the iron.
##############################
Task Summary:
Task Goal:
Directly iron a pair of skirt.
Action History:
['walk_executor(ironing_board_2074)', 'walk_executor(iron_2089)', 'grab_executor(iron_2089)', 'walk_executor(ironing_board_2074)', 'walk_executor(basket_for_clothes_2006)', 'plugin_executor(iron_2089)', 'switchon_executor(iron_2089)', 'touch_executor(clothes_skirt_2088)', 'walk_executor(ironing_board_2074)', 'walk_executor(clothes_skirt_2088)', 'grab_executor(clothes_skirt_2088)', 'touch_executor(clothes_skirt_2088)', 'walk_executor(kitchen_counter_230)', 'put_executor(iron_2089, kitchen_counter_230)', 'walk_executor(clothes_skirt_2088)', 'grab_executor(clothes_skirt_2088)', 'walk_executor(ironing_board_2074)', 'put_executor(clothes_skirt_2088, ironing_board_2074)']
Time info:
Time consume: 74 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 48
goal generate times: 3
goal correct times: 0
action_num: 18

Task complete rate:
Keystate: k1 - Requires: 4 steps
Action Completion Rate: 0.0
Scene_id: 0
##############################
