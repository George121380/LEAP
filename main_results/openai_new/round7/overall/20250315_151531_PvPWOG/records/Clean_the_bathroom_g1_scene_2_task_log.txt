From agent.py
Reset goals: The sub-goals are: 
['Clean the bathroom sink directly.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2098_around_bathroom_counter_306(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(cleaning_solution,bathroom_counter_instance)
        else:
            exp(cleaning_solution,bathroom_counter_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_counter_instance]=True
        close[bathroom_counter_instance,cleaning_solution]=True
    

behavior find_soap_2038_around_bathroom_counter_306(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

#exp_behavior_end

#goal_representation
behavior clean_bathroom_sink(sink:item):
    body:
        if dirty(sink):
            wipe(sink)

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink)
        clean_bathroom_sink(sink)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior clean_bathroom_sink(sink:item):
    body:
        if dirty(sink):
            wipe(sink)

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink)
        clean_bathroom_sink(sink)
##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)wipe_executor(sink_133)
##############################
From agent.py
walk_executor(sink_133)
Robot find: after_shave_2029, cleaning_solution_2098, juice_2034, pot_54, Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_bathroom_counter_306(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(towel,bathroom_counter_instance)
        else:
            exp(towel,bathroom_counter_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_counter_instance]=True
        close[bathroom_counter_instance,towel]=True
    

behavior find_alcohol_2002_around_bathroom_counter_306(alcohol:item):
    goal: not unknown(alcohol)
    body:
        assert is_alcohol(alcohol)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(alcohol,bathroom_counter_instance)
        else:
            exp(alcohol,bathroom_counter_instance)
    eff:
        unknown[alcohol]=False
        close[alcohol,bathroom_counter_instance]=True
        close[bathroom_counter_instance,alcohol]=True
    

#exp_behavior_end

#goal_representation
 
behavior clean_sink_directly(sink:item, cleaning_solution:item, towel:item):
    body:
        if not visited(sink):
            observe(sink, "Check if the sink is dirty")
        if dirty(sink):
            if not inhand(cleaning_solution):
                grab(cleaning_solution)
            if not inhand(towel):
                grab(towel)
            wipe(sink)

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and id[sink] == 133
        bind cleaning_solution: item where:
            is_cleaning_solution(cleaning_solution)
        bind towel: item where:
            is_towel(towel)
        walk_to(sink)
        clean_sink_directly(sink, cleaning_solution, towel)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior clean_sink_directly(sink:item, cleaning_solution:item, towel:item):
    body:
        if not visited(sink):
            observe(sink, "Check if the sink is dirty")
        if dirty(sink):
            if not inhand(cleaning_solution):
                grab(cleaning_solution)
            if not inhand(towel):
                grab(towel)
            wipe(sink)

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and id[sink] == 133
        bind cleaning_solution: item where:
            is_cleaning_solution(cleaning_solution)
        bind towel: item where:
            is_towel(towel)
        walk_to(sink)
        clean_sink_directly(sink, cleaning_solution, towel)

##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)obs(sink_133, Check if the sink is dirty)grab_executor(cleaning_solution_2098)walk_executor(bathroom_counter_306)exp(towel_2083, bathroom_counter_306)walk_executor(towel_2083)grab_executor(towel_2083)walk_executor(sink_133)wipe_executor(sink_133)
##############################
From agent.py
walk_executor(sink_133)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
obs(sink_133, Check if the sink is dirty)
Get this information:  after_shave_2029 is inside sink_133. sink_133 is close to kitchen_counter_128. sink_133 is close to wall_2. sink_133 is close to cupboard_130. sink_133 is close to kitchen_counter_132. sink_133 is close to faucet_134. sink_133 is close to wall_6. sink_133 is close to walllamp_45. sink_133 is close to after_shave_2029. sink_133 is close to floor_15. sink_133 is close to floor_16. sink_133 is close to cleaning_solution_2098. sink_133 is close to juice_2034. sink_133 is close to knifeblock_52. sink_133 is close to microwave_149. sink_133 is close to pot_54. sink_133 is close to character_219. cleaning_solution_2098 is on sink_133. juice_2034 is inside sink_133. sink_133 is inside dining_room_1. sink_133 is inside kitchen_counter_132. sink_133 is DIRTY.
##############################
From agent.py
grab_executor(cleaning_solution_2098)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the sink_133. Robot is close to the cleaning_solution_2098. Grabbing cleaning_solution_2098 by right hand. 
##############################
From agent.py
walk_executor(bathroom_counter_306)
Robot find: towel_rack_298, drawing_296, Robot is close to the cleaning_solution_2098. Robot is close to the bathroom_counter_306. 
##############################
From agent.py
exp(towel_2083, bathroom_counter_306)
Fail to find towel_2083 around bathroom_counter_306. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)walk_executor(bathroom_cabinet_305)open_executor(bathroom_cabinet_305)exp(towel_2083, bathroom_cabinet_305)walk_executor(towel_2083)grab_executor(towel_2083)walk_executor(sink_133)wipe_executor(sink_133)
##############################
From agent.py
walk_executor(sink_133)
Robot find: Robot is close to the cleaning_solution_2098. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
walk_executor(bathroom_cabinet_305)
Robot find: Robot is close to the cleaning_solution_2098. Robot is close to the bathroom_cabinet_305. 
##############################
From agent.py
open_executor(bathroom_cabinet_305)
Robot find: soap_2038, Robot is close to the cleaning_solution_2098. Robot is close to the bathroom_cabinet_305. Robot is close to the soap_2038. bathroom_cabinet_305 is opened. 
##############################
From agent.py
exp(towel_2083, bathroom_cabinet_305)
Fail to find towel_2083 around bathroom_cabinet_305. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)walk_executor(towel_rack_298)exp(towel_2083, towel_rack_298)walk_executor(towel_2083)grab_executor(towel_2083)walk_executor(sink_133)wipe_executor(sink_133)
##############################
From agent.py
walk_executor(sink_133)
Robot find: Robot is close to the cleaning_solution_2098. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
walk_executor(towel_rack_298)
Robot find: towel_2083, Robot is close to the cleaning_solution_2098. Robot is close to the towel_rack_298. 
##############################
From agent.py
exp(towel_2083, towel_rack_298)
Find towel_2083. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)walk_executor(towel_2083)grab_executor(towel_2083)walk_executor(sink_133)wipe_executor(sink_133)
##############################
From agent.py
walk_executor(sink_133)
Robot find: Robot is close to the cleaning_solution_2098. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
walk_executor(towel_2083)
Robot find: Robot is close to the cleaning_solution_2098. Robot is close to the towel_rack_298. Robot is close to the towel_2083. 
##############################
From agent.py
grab_executor(towel_2083)
Robot find: Robot is close to the cleaning_solution_2098. Robot is close to the towel_rack_298. Robot is close to the towel_2083. Grabbing towel_2083 by left hand. 
##############################
From agent.py
walk_executor(sink_133)
Robot find: Robot is close to the cleaning_solution_2098. Robot is close to the towel_2083. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
wipe_executor(sink_133)
Robot find: Robot is close to the cleaning_solution_2098. Robot is close to the towel_2083. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. sink_133 is cleaned. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Clean the bathroom sink directly.
Action History:
['walk_executor(sink_133)', 'wipe_executor(sink_133) (Failed)', 'walk_executor(sink_133)', 'grab_executor(cleaning_solution_2098)', 'walk_executor(bathroom_counter_306)', 'walk_executor(sink_133)', 'walk_executor(bathroom_cabinet_305)', 'open_executor(bathroom_cabinet_305)', 'walk_executor(sink_133)', 'walk_executor(towel_rack_298)', 'walk_executor(sink_133)', 'walk_executor(towel_2083)', 'grab_executor(towel_2083)', 'walk_executor(sink_133)', 'wipe_executor(sink_133)']
Time info:
Time consume: 48 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 65
goal generate times: 2
goal correct times: 0
action_num: 15

Task complete rate:
Action Completion Rate: 0.0
Scene_id: 2
##############################
