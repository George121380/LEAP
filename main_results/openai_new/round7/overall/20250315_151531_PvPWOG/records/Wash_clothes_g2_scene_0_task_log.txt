From agent.py
Reset goals: The sub-goals are: 
['1. Identify the basket with clothes in it.', '2. Load the clothes into the washing machine.', '3. Add soap to the washing machine and start it.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_skirt_2088_around_basket_for_clothes_2006(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

behavior find_clothes_scarf_2048_around_basket_for_clothes_2006(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_scarf,basket_for_clothes_instance)
        else:
            exp(clothes_scarf,basket_for_clothes_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_scarf]=True
    

behavior find_clothes_underwear_2049_around_basket_for_clothes_2006(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_underwear,basket_for_clothes_instance)
        else:
            exp(clothes_underwear,basket_for_clothes_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_underwear]=True
    

behavior find_clothes_hat_2045_around_basket_for_clothes_2006(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_hat,basket_for_clothes_instance)
        else:
            exp(clothes_hat,basket_for_clothes_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_hat]=True
    

behavior find_clothes_shirt_2086_around_basket_for_clothes_2006(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_shirt,basket_for_clothes_instance)
        else:
            exp(clothes_shirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_shirt]=True
    

behavior find_clothes_socks_2087_around_basket_for_clothes_2006(clothes_socks:item):
    goal: not unknown(clothes_socks)
    body:
        assert is_clothes_socks(clothes_socks)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_socks,basket_for_clothes_instance)
        else:
            exp(clothes_socks,basket_for_clothes_instance)
    eff:
        unknown[clothes_socks]=False
        close[clothes_socks,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_socks]=True
    

behavior find_clothes_dress_2044_around_basket_for_clothes_2006(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_dress,basket_for_clothes_instance)
        else:
            exp(clothes_dress,basket_for_clothes_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_dress]=True
    

behavior find_clothes_gloves_2046_around_basket_for_clothes_2006(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_gloves,basket_for_clothes_instance)
        else:
            exp(clothes_gloves,basket_for_clothes_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_gloves]=True
    

behavior find_clothes_pants_2085_around_basket_for_clothes_2006(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_pants,basket_for_clothes_instance)
        else:
            exp(clothes_pants,basket_for_clothes_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_pants]=True
    

behavior find_clothes_jacket_2047_around_basket_for_clothes_2006(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_jacket,basket_for_clothes_instance)
        else:
            exp(clothes_jacket,basket_for_clothes_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation

behavior locate_basket(basket: item):
    body:
        if not visited(basket):
            walk_to(basket)

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket)
        locate_basket(basket)

#goal_representation_end

##############################
From agent.py->reset_goal

behavior locate_basket(basket: item):
    body:
        if not visited(basket):
            walk_to(basket)

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket)
        locate_basket(basket)

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Robot find: clothes_pants_2085, clothes_shirt_2086, clothes_socks_2087, clothes_skirt_2088, towel_rack_31, towel_rack_33, towel_rack_32, towel_rack_34, mat_22, Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2048_around_closetdrawer_154(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==154
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_scarf,closetdrawer_instance)
        else:
            exp(clothes_scarf,closetdrawer_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_scarf]=True
    

behavior find_clothes_underwear_2049_around_closetdrawer_154(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==154
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_underwear,closetdrawer_instance)
        else:
            exp(clothes_underwear,closetdrawer_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_underwear]=True
    

behavior find_clothes_hat_2045_around_closetdrawer_154(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==154
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_hat,closetdrawer_instance)
        else:
            exp(clothes_hat,closetdrawer_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_hat]=True
    

behavior find_clothes_dress_2044_around_closetdrawer_154(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==154
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_dress,closetdrawer_instance)
        else:
            exp(clothes_dress,closetdrawer_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_dress]=True
    

behavior find_clothes_gloves_2046_around_closetdrawer_154(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==154
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_gloves,closetdrawer_instance)
        else:
            exp(clothes_gloves,closetdrawer_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_gloves]=True
    

behavior find_clothes_jacket_2047_around_closetdrawer_154(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==154
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_washing_machine(clothes:item, washing_machine:item):
    body:
        if not inside(clothes, washing_machine):
            put_inside(clothes, washing_machine)

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket)

        bind washing_machine: item where:
            is_washing_machine(washing_machine)

        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket):
                load_washing_machine(clothes, washing_machine)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_washing_machine(clothes:item, washing_machine:item):
    body:
        if not inside(clothes, washing_machine):
            put_inside(clothes, washing_machine)

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket)

        bind washing_machine: item where:
            is_washing_machine(washing_machine)

        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket):
                load_washing_machine(clothes, washing_machine)

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2007)open_executor(washing_machine_2007)walk_executor(clothes_pants_2085)grab_executor(clothes_pants_2085)walk_executor(washing_machine_2007)putin_executor(clothes_pants_2085, washing_machine_2007)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(washing_machine_2007)putin_executor(clothes_shirt_2086, washing_machine_2007)walk_executor(clothes_socks_2087)grab_executor(clothes_socks_2087)walk_executor(washing_machine_2007)putin_executor(clothes_socks_2087, washing_machine_2007)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(washing_machine_2007)putin_executor(clothes_skirt_2088, washing_machine_2007)
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. 
##############################
From agent.py
open_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is opened. 
##############################
From agent.py
walk_executor(clothes_pants_2085)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
grab_executor(clothes_pants_2085)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the basket_for_clothes_2006. Grabbing clothes_pants_2085 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the washing_machine_2007. 
##############################
From agent.py
putin_executor(clothes_pants_2085, washing_machine_2007)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the washing_machine_2007. clothes_pants_2085 is inside washing_machine_2007. clothes_pants_2085 is close washing_machine_2007. washing_machine_2007 is close clothes_pants_2085. clothes_pants_2085 released by right hand. 
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the basket_for_clothes_2006. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the clothes_pants_2085. Robot is close to the washing_machine_2007. 
##############################
From agent.py
putin_executor(clothes_shirt_2086, washing_machine_2007)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the clothes_pants_2085. Robot is close to the washing_machine_2007. washing_machine_2007 is close clothes_shirt_2086. clothes_shirt_2086 is close washing_machine_2007. clothes_shirt_2086 is inside washing_machine_2007. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
walk_executor(clothes_socks_2087)
Robot find: Robot is close to the basket_for_clothes_2006. Robot is close to the clothes_socks_2087. 
##############################
From agent.py
grab_executor(clothes_socks_2087)
Robot find: Robot is close to the basket_for_clothes_2006. Robot is close to the clothes_socks_2087. Grabbing clothes_socks_2087 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_socks_2087. Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the washing_machine_2007. 
##############################
From agent.py
putin_executor(clothes_socks_2087, washing_machine_2007)
Robot find: Robot is close to the clothes_socks_2087. Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the washing_machine_2007. clothes_socks_2087 is close washing_machine_2007. clothes_socks_2087 is inside washing_machine_2007. washing_machine_2007 is close clothes_socks_2087. clothes_socks_2087 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
grab_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. Grabbing clothes_skirt_2088 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the clothes_socks_2087. Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the washing_machine_2007. 
##############################
From agent.py
putin_executor(clothes_skirt_2088, washing_machine_2007)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the clothes_socks_2087. Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the washing_machine_2007. clothes_skirt_2088 is close washing_machine_2007. clothes_skirt_2088 is inside washing_machine_2007. washing_machine_2007 is close clothes_skirt_2088. clothes_skirt_2088 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_bathroom_counter_41(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(detergent,bathroom_counter_instance)
        else:
            exp(detergent,bathroom_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_counter_instance]=True
        close[bathroom_counter_instance,detergent]=True
    

behavior find_soap_2053_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
def is_washing_machine_plugged_and_open(washing_machine:item):
    # Function to check if the washing machine is plugged in and open
    return plugged(washing_machine) and open(washing_machine)

behavior add_soap_and_start_wash_cycle(washing_machine:item, soap:item):
    body:
        if not inside(soap, washing_machine):
            put_inside(soap, washing_machine)
        if is_washing_machine_plugged_and_open(washing_machine):
            closes(washing_machine) # Close the washing machine door
            switch_on(washing_machine) # Start the wash cycle

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2007
        bind soap: item where:
            is_soap(soap)
        add_soap_and_start_wash_cycle(washing_machine, soap)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_washing_machine_plugged_and_open(washing_machine:item):
    # Function to check if the washing machine is plugged in and open
    return plugged(washing_machine) and open(washing_machine)

behavior add_soap_and_start_wash_cycle(washing_machine:item, soap:item):
    body:
        if not inside(soap, washing_machine):
            put_inside(soap, washing_machine)
        if is_washing_machine_plugged_and_open(washing_machine):
            closes(washing_machine) # Close the washing machine door
            switch_on(washing_machine) # Start the wash cycle

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2007
        bind soap: item where:
            is_soap(soap)
        add_soap_and_start_wash_cycle(washing_machine, soap)

##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_counter_41)exp(soap_2053, bathroom_counter_41)walk_executor(soap_2053)grab_executor(soap_2053)walk_executor(washing_machine_2007)putin_executor(soap_2053, washing_machine_2007)
##############################
From agent.py
walk_executor(bathroom_counter_41)
Robot find: Robot is close to the bathroom_counter_41. 
##############################
From agent.py
exp(soap_2053, bathroom_counter_41)
Fail to find soap_2053 around bathroom_counter_41. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_42)exp(soap_2053, sink_42)walk_executor(soap_2053)grab_executor(soap_2053)walk_executor(washing_machine_2007)putin_executor(soap_2053, washing_machine_2007)
##############################
From agent.py
walk_executor(sink_42)
Robot find: detergent_2084, cleaning_solution_2073, soap_2053, Robot is close to the bathroom_counter_41. Robot is close to the sink_42. 
##############################
From agent.py
exp(soap_2053, sink_42)
Find soap_2053. 
##############################
From agent.py-> find a plan in act()
walk_executor(soap_2053)grab_executor(soap_2053)walk_executor(washing_machine_2007)putin_executor(soap_2053, washing_machine_2007)
##############################
From agent.py
walk_executor(soap_2053)
Robot find: Robot is close to the sink_42. Robot is close to the soap_2053. 
##############################
From agent.py
grab_executor(soap_2053)
Robot find: Robot is close to the sink_42. Robot is close to the soap_2053. Grabbing soap_2053 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the soap_2053. Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the washing_machine_2007. 
##############################
From agent.py
putin_executor(soap_2053, washing_machine_2007)
Robot find: Robot is close to the soap_2053. Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the washing_machine_2007. soap_2053 is close washing_machine_2007. washing_machine_2007 is close soap_2053. soap_2053 is inside washing_machine_2007. soap_2053 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure the washing machine is plugged in, close the washing machine door, and start the wash cycle by switching it on.
##############################
From agent.py
Human Instruction: You need to ensure the washing machine is plugged in, close the washing machine door, and start the wash cycle by switching it on.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2006.
Action 2: Walk to washing_machine_2007.
Action 3: Open washing_machine_2007.
Action 4: Walk to clothes_pants_2085.
Action 5: Grab clothes_pants_2085.
Action 6: Walk to washing_machine_2007.
Action 7: Put clothes_pants_2085 into washing_machine_2007.
Action 8: Walk to clothes_shirt_2086.
Action 9: Grab clothes_shirt_2086.
Action 10: Walk to washing_machine_2007.
Action 11: Put clothes_shirt_2086 into washing_machine_2007.
Action 12: Walk to clothes_socks_2087.
Action 13: Grab clothes_socks_2087.
Action 14: Walk to washing_machine_2007.
Action 15: Put clothes_socks_2087 into washing_machine_2007.
Action 16: Walk to clothes_skirt_2088.
Action 17: Grab clothes_skirt_2088.
Action 18: Walk to washing_machine_2007.
Action 19: Put clothes_skirt_2088 into washing_machine_2007.
Action 20: Walk to bathroom_counter_41.
Action 21: look for soap_2053 around bathroom_counter_41.
Action 22: Walk to sink_42.
Action 23: look for soap_2053 around sink_42.
Action 24: Walk to soap_2053.
Action 25: Grab soap_2053.
Action 26: Walk to washing_machine_2007.
Action 27: Put soap_2053 into washing_machine_2007.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2053_around_bathroom_cabinet_40(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior add_soap_and_start_washing(washing_machine:item, soap:item):
    body:
        if not inside(soap, washing_machine):
            put_inside(soap, washing_machine)
            # Add soap to the washing machine

        if open(washing_machine):
            closes(washing_machine) # Close the washing machine door

        if is_off(washing_machine):
            switch_on(washing_machine) # Start the wash cycle

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2007
        bind soap: item where:
            is_soap(soap)
        add_soap_and_start_washing(washing_machine, soap)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior add_soap_and_start_washing(washing_machine:item, soap:item):
    body:
        if not inside(soap, washing_machine):
            put_inside(soap, washing_machine)
            # Add soap to the washing machine

        if open(washing_machine):
            closes(washing_machine) # Close the washing machine door

        if is_off(washing_machine):
            switch_on(washing_machine) # Start the wash cycle

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2007
        bind soap: item where:
            is_soap(soap)
        add_soap_and_start_washing(washing_machine, soap)

##############################
From agent.py-> find a plan in act()
close_executor(washing_machine_2007)plugin_executor(washing_machine_2007)switchon_executor(washing_machine_2007)
##############################
From agent.py
close_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is closed. 
##############################
From agent.py
plugin_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is plugged in. 
##############################
From agent.py
switchon_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Wash all the clothes in the basket for clothes by adding soap to the washing machine and running it.
Action History:
['walk_executor(basket_for_clothes_2006)', 'walk_executor(washing_machine_2007)', 'open_executor(washing_machine_2007)', 'walk_executor(clothes_pants_2085)', 'grab_executor(clothes_pants_2085)', 'walk_executor(washing_machine_2007)', 'putin_executor(clothes_pants_2085, washing_machine_2007)', 'walk_executor(clothes_shirt_2086)', 'grab_executor(clothes_shirt_2086)', 'walk_executor(washing_machine_2007)', 'putin_executor(clothes_shirt_2086, washing_machine_2007)', 'walk_executor(clothes_socks_2087)', 'grab_executor(clothes_socks_2087)', 'walk_executor(washing_machine_2007)', 'putin_executor(clothes_socks_2087, washing_machine_2007)', 'walk_executor(clothes_skirt_2088)', 'grab_executor(clothes_skirt_2088)', 'walk_executor(washing_machine_2007)', 'putin_executor(clothes_skirt_2088, washing_machine_2007)', 'walk_executor(bathroom_counter_41)', 'walk_executor(sink_42)', 'walk_executor(soap_2053)', 'grab_executor(soap_2053)', 'walk_executor(washing_machine_2007)', 'putin_executor(soap_2053, washing_machine_2007)', 'close_executor(washing_machine_2007)', 'plugin_executor(washing_machine_2007)', 'switchon_executor(washing_machine_2007)']
Time info:
Time consume: 99 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 54
goal generate times: 4
goal correct times: 0
action_num: 28

Task complete rate:
1
Scene_id: 0
##############################
