From agent.py
Reset goals: The sub-goals are: 
['1. Find and pour milk into a cup.', '2. Heat the cup of milk in the microwave.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2074_around_fridge_140(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_cup_2087_around_cupboard_131(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
def has_milk_in_cup(cup: item):
    # Function to check if there is milk in the cup
    symbol has_milk=exists o: item : (is_milk(o) and inside(o, cup))
    return has_milk

behavior grab_milk_and_pour_into_cup(milk: item, cup: item):
    body:
        if not inhand(milk):
            grab(milk)
            # Grab the milk
        if not close_char(char, cup):
            walk_to(cup)
        if not has_milk_in_cup(cup):
            put_inside(milk, cup)
            # Pour the milk into the cup
        if inhand(milk):
            empty_a_hand()

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        grab_milk_and_pour_into_cup(milk, cup)
        # Execute the behavior to grab milk and pour it into the cup

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_milk_in_cup(cup: item):
    # Function to check if there is milk in the cup
    symbol has_milk=exists o: item : (is_milk(o) and inside(o, cup))
    return has_milk

behavior grab_milk_and_pour_into_cup(milk: item, cup: item):
    body:
        if not inhand(milk):
            grab(milk)
            # Grab the milk
        if not close_char(char, cup):
            walk_to(cup)
        if not has_milk_in_cup(cup):
            put_inside(milk, cup)
            # Pour the milk into the cup
        if inhand(milk):
            empty_a_hand()

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        grab_milk_and_pour_into_cup(milk, cup)
        # Execute the behavior to grab milk and pour it into the cup

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(milk_2074, fridge_140)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cupboard_131)open_executor(cupboard_131)exp(cup_2087, cupboard_131)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(milk_2074, fridge_140)
Find milk_2074. 
##############################
From agent.py-> find a plan in act()
walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cupboard_131)open_executor(cupboard_131)exp(cup_2087, cupboard_131)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(milk_2074)
Robot find: Robot is close to the fridge_140. Robot is close to the milk_2074. 
##############################
From agent.py
grab_executor(milk_2074)
Robot find: Robot is close to the fridge_140. Robot is close to the milk_2074. Grabbing milk_2074 by right hand. 
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: pot_54, Robot is close to the milk_2074. Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the milk_2074. Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(cup_2087, cupboard_131)
Fail to find cup_2087 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(cup_2087, cupboard_130)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the milk_2074. Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(cup_2087, cupboard_130)
Fail to find cup_2087 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_129)exp(cup_2087, kitchen_counter_129)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(kitchen_counter_129)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the milk_2074. Robot is close to the kitchen_counter_129. 
##############################
From agent.py
exp(cup_2087, kitchen_counter_129)
Fail to find cup_2087 around kitchen_counter_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(cup_2087, kitchen_counter_132)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the milk_2074. Robot is close to the kitchen_counter_132. 
##############################
From agent.py
exp(cup_2087, kitchen_counter_132)
Fail to find cup_2087 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(cup_2087, kitchen_counter_128)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the milk_2074. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(cup_2087, kitchen_counter_128)
Fail to find cup_2087 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(cup_2087, table_123)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, laptop_2015, fork_2103, cup_2087, bowl_2095, drawing_118, Robot is close to the milk_2074. Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
exp(cup_2087, table_123)
Find cup_2087. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(cup_2087)
Robot find: Robot is close to the milk_2074. Robot is close to the table_123. Robot is close to the cup_2087. 
##############################
From agent.py
putin_executor(milk_2074, cup_2087)
Robot find: Robot is close to the milk_2074. Robot is close to the table_123. Robot is close to the cup_2087. milk_2074 is close cup_2087. milk_2074 is inside cup_2087. cup_2087 is close milk_2074. milk_2074 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2006_around_cup_2088(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2088
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(cup,cup_instance)
        else:
            exp(cup,cup_instance)
    eff:
        unknown[cup]=False
        close[cup,cup_instance]=True
        close[cup_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_cup_in_microwave(cup:item, microwave:item):
    body:
        if not inside(cup, microwave):
            put_inside(cup, microwave)
            # Place the cup inside the microwave

behavior heat_milk_in_microwave(microwave:item):
    body:
        if open(microwave):
            closes(microwave) # Close the microwave door to start heating
        if is_off(microwave):
            switch_on(microwave) # Turn on the microwave

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup] == 2087
        # Select the cup with milk

        bind microwave: item where:
            is_microwave(microwave)
        # Select a microwave

        place_cup_in_microwave(cup, microwave)
        heat_milk_in_microwave(microwave)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior place_cup_in_microwave(cup:item, microwave:item):
    body:
        if not inside(cup, microwave):
            put_inside(cup, microwave)
            # Place the cup inside the microwave

behavior heat_milk_in_microwave(microwave:item):
    body:
        if open(microwave):
            closes(microwave) # Close the microwave door to start heating
        if is_off(microwave):
            switch_on(microwave) # Turn on the microwave

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup] == 2087
        # Select the cup with milk

        bind microwave: item where:
            is_microwave(microwave)
        # Select a microwave

        place_cup_in_microwave(cup, microwave)
        heat_milk_in_microwave(microwave)

##############################
From agent.py-> find a plan in act()
walk_executor(microwave_149)open_executor(microwave_149)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(microwave_149)putin_executor(cup_2087, microwave_149)close_executor(microwave_149)switchon_executor(microwave_149)
##############################
From agent.py
walk_executor(microwave_149)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. 
##############################
From agent.py
open_executor(microwave_149)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. microwave_149 is opened. 
##############################
From agent.py
walk_executor(cup_2087)
Robot find: Robot is close to the table_123. Robot is close to the cup_2087. 
##############################
From agent.py
grab_executor(cup_2087)
Robot find: Robot is close to the table_123. Robot is close to the cup_2087. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(microwave_149)
Robot find: Robot is close to the cup_2087. Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. 
##############################
From agent.py
putin_executor(cup_2087, microwave_149)
Robot find: Robot is close to the cup_2087. Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. microwave_149 is close cup_2087. cup_2087 is inside microwave_149. cup_2087 is close microwave_149. cup_2087 released by right hand. 
##############################
From agent.py
close_executor(microwave_149)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. microwave_149 is closed. 
##############################
From agent.py
switchon_executor(microwave_149)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. microwave_149 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Get a cup of milk and heat it by microwave.
Action History:
['walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'walk_executor(milk_2074)', 'grab_executor(milk_2074)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(cupboard_130)', 'walk_executor(kitchen_counter_129)', 'walk_executor(kitchen_counter_132)', 'walk_executor(kitchen_counter_128)', 'walk_executor(table_123)', 'walk_executor(cup_2087)', 'putin_executor(milk_2074, cup_2087)', 'walk_executor(microwave_149)', 'open_executor(microwave_149)', 'walk_executor(cup_2087)', 'grab_executor(cup_2087)', 'walk_executor(microwave_149)', 'putin_executor(cup_2087, microwave_149)', 'close_executor(microwave_149)', 'switchon_executor(microwave_149)']
Time info:
Time consume: 77 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 50
goal generate times: 2
goal correct times: 0
action_num: 22

Task complete rate:
1
Scene_id: 2
##############################
