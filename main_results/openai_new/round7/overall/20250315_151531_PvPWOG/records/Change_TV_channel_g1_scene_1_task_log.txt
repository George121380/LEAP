From agent.py
Reset goals: The sub-goals are: 
['Turn on the TV by touching the remote control.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_remote_control_2124_around_television_281(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind television_instance:item where:
            is_television(television_instance) and id[television_instance]==281
        achieve close_char(char,television_instance)
        if can_open(television_instance):
            achieve_once open(television_instance)
            exp(remote_control,television_instance)
        else:
            exp(remote_control,television_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,television_instance]=True
        close[television_instance,remote_control]=True
    

#exp_behavior_end

#goal_representation
 
behavior approach_remote_control_and_turn_on_tv(remote_control:item, television:item):
    body:
        if not close_char(char, remote_control):
            walk_to(remote_control)
        if not visited(remote_control):
            observe(remote_control, "Check if remote control can be used to turn on the TV")
        touch(remote_control)
        # Touch the remote control to attempt to turn on the TV
        if is_off(television):
            switch_on(television)
            # Turn on the TV if its off

behavior __goal__():
    body:
        bind remote_control: item where:
            is_remote_control(remote_control)
        bind television: item where:
            is_television(television)
        approach_remote_control_and_turn_on_tv(remote_control, television)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior approach_remote_control_and_turn_on_tv(remote_control:item, television:item):
    body:
        if not close_char(char, remote_control):
            walk_to(remote_control)
        if not visited(remote_control):
            observe(remote_control, "Check if remote control can be used to turn on the TV")
        touch(remote_control)
        # Touch the remote control to attempt to turn on the TV
        if is_off(television):
            switch_on(television)
            # Turn on the TV if its off

behavior __goal__():
    body:
        bind remote_control: item where:
            is_remote_control(remote_control)
        bind television: item where:
            is_television(television)
        approach_remote_control_and_turn_on_tv(remote_control, television)

##############################
From agent.py-> find a plan in act()
walk_executor(television_281)exp(remote_control_2124, television_281)walk_executor(remote_control_2124)obs(remote_control_2124, Check if remote control can be used to turn on the TV)touch_executor(remote_control_2124)walk_executor(television_281)switchon_executor(television_281)
##############################
From agent.py
walk_executor(television_281)
Robot find: drawing_288, cd_2145, mat_284, headset_2131, cd_player_2129, remote_control_2124, dvd_player_2130, Robot is close to the television_281. Robot is close to the tvstand_273. 
##############################
From agent.py
exp(remote_control_2124, television_281)
Find remote_control_2124. 
##############################
From agent.py-> find a plan in act()
walk_executor(remote_control_2124)obs(remote_control_2124, Check if remote control can be used to turn on the TV)touch_executor(remote_control_2124)walk_executor(television_281)switchon_executor(television_281)
##############################
From agent.py
walk_executor(remote_control_2124)
Robot find: Robot is close to the tvstand_273. Robot is close to the remote_control_2124. 
##############################
From agent.py
obs(remote_control_2124, Check if remote control can be used to turn on the TV)
Get this information:  remote_control_2124 is inside home_office_241. remote_control_2124 is close to tvstand_273. remote_control_2124 is close to character_240. remote_control_2124 is on tvstand_273. remote_control_2124 is OFF.
##############################
From agent.py
touch_executor(remote_control_2124)
Robot find: Robot is close to the tvstand_273. Robot is close to the remote_control_2124. 
##############################
From agent.py
walk_executor(television_281)
Robot find: Robot is close to the tvstand_273. Robot is close to the television_281. 
##############################
From agent.py
switchon_executor(television_281)
Robot find: Robot is close to the tvstand_273. Robot is close to the television_281. television_281 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Turn on the TV by touching the remote control.
Action History:
['walk_executor(television_281)', 'walk_executor(remote_control_2124)', 'touch_executor(remote_control_2124)', 'walk_executor(television_281)', 'switchon_executor(television_281)']
Time info:
Time consume: 20 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 47
goal generate times: 1
goal correct times: 0
action_num: 5

Task complete rate:
1
Scene_id: 1
##############################
