From agent.py
Reset goals: The sub-goals are: 
['Turn on the computer in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_keyboard_278_around_desk_272(keyboard:item):
    goal: not unknown(keyboard)
    body:
        assert is_keyboard(keyboard)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==272
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(keyboard,desk_instance)
        else:
            exp(keyboard,desk_instance)
    eff:
        unknown[keyboard]=False
        close[keyboard,desk_instance]=True
        close[desk_instance,keyboard]=True
    

behavior find_mouse_213_around_mousepad_214(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind mousepad_instance:item where:
            is_mousepad(mousepad_instance) and id[mousepad_instance]==214
        achieve close_char(char,mousepad_instance)
        if can_open(mousepad_instance):
            achieve_once open(mousepad_instance)
            exp(mouse,mousepad_instance)
        else:
            exp(mouse,mousepad_instance)
    eff:
        unknown[mouse]=False
        close[mouse,mousepad_instance]=True
        close[mousepad_instance,mouse]=True
    

#exp_behavior_end

#goal_representation
 
def is_computer_in_office(computer:item):
    # Function to check if a computer is in the home office
    symbol in_office=exists room: item : (is_home_office(room) and inside(computer, room))
    return in_office

behavior __goal__():
    body:
        bind computer: item where:
            is_computer(computer) and is_computer_in_office(computer)
        # Select the computer inside the home office

        walk_to(computer)
        # Move close to the computer

        if is_off(computer):
            switch_on(computer)
            # Turn on the computer if its off

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_computer_in_office(computer:item):
    # Function to check if a computer is in the home office
    symbol in_office=exists room: item : (is_home_office(room) and inside(computer, room))
    return in_office

behavior __goal__():
    body:
        bind computer: item where:
            is_computer(computer) and is_computer_in_office(computer)
        # Select the computer inside the home office

        walk_to(computer)
        # Move close to the computer

        if is_off(computer):
            switch_on(computer)
            # Turn on the computer if its off

##############################
From agent.py-> find a plan in act()
walk_executor(computer_276)switchon_executor(computer_276)
##############################
From agent.py
walk_executor(computer_276)
Robot find: mat_284, chair_271, keyboard_278, mouse_280, Robot is close to the computer_276. 
##############################
From agent.py
switchon_executor(computer_276)
Robot find: Robot is close to the computer_276. computer_276 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Turn on the computer in home office.
Action History:
['walk_executor(computer_276)', 'switchon_executor(computer_276)']
Time info:
Time consume: 14 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 39
goal generate times: 1
goal correct times: 0
action_num: 2

Task complete rate:
Keystate: k1 - Requires: 0 steps
Action Completion Rate: 0.0
Scene_id: 1
##############################
