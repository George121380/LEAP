From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the shirt.', '2. Iron the shirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2037_around_bathroom_counter_306(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_check_2033_around_washing_machine_2041(check:item):
    goal: not unknown(check)
    body:
        assert is_check(check)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(check,washing_machine_instance)
        else:
            exp(check,washing_machine_instance)
    eff:
        unknown[check]=False
        close[check,washing_machine_instance]=True
        close[washing_machine_instance,check]=True
    

behavior find_clothes_shirt_2114_around_basket_for_clothes_2040(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_shirt,basket_for_clothes_instance)
        else:
            exp(clothes_shirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_shirt_for_washing(shirt:item):
    body:
        if not inhand(shirt):
            if not visited(shirt):
                observe(shirt, "Check if shirt can be grabbed")
            grab(shirt)

behavior hand_wash_shirt(shirt:item):
    body:
        if dirty(shirt):
            wash(shirt)
            scrub(shirt)
            rinse(shirt)
            squeeze(shirt)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        prepare_shirt_for_washing(shirt)
        hand_wash_shirt(shirt)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior prepare_shirt_for_washing(shirt:item):
    body:
        if not inhand(shirt):
            if not visited(shirt):
                observe(shirt, "Check if shirt can be grabbed")
            grab(shirt)

behavior hand_wash_shirt(shirt:item):
    body:
        if dirty(shirt):
            wash(shirt)
            scrub(shirt)
            rinse(shirt)
            squeeze(shirt)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        prepare_shirt_for_washing(shirt)
        hand_wash_shirt(shirt)

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)exp(clothes_shirt_2114, basket_for_clothes_2040)walk_executor(clothes_shirt_2114)obs(clothes_shirt_2114, Check if shirt can be grabbed)grab_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Robot find: clothes_pants_2113, clothes_shirt_2114, clothes_socks_2115, clothes_skirt_2116, Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. 
##############################
From agent.py
exp(clothes_shirt_2114, basket_for_clothes_2040)
Find clothes_shirt_2114. 
##############################
From agent.py-> find a plan in act()
obs(clothes_shirt_2114, Check if shirt can be grabbed)grab_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(clothes_shirt_2114)scrub_executor(clothes_shirt_2114)rinse_executor(clothes_shirt_2114)
##############################
From agent.py
obs(clothes_shirt_2114, Check if shirt can be grabbed)
Get this information:  clothes_shirt_2114 is close to basket_for_clothes_2040. clothes_shirt_2114 is close to character_219. clothes_shirt_2114 is inside basket_for_clothes_2040. clothes_shirt_2114 is inside bathroom_265. clothes_shirt_2114 is DIRTY.
##############################
From agent.py
grab_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. Grabbing clothes_shirt_2114 by right hand. 
##############################
From agent.py
wash_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. clothes_shirt_2114 is cleaned. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: pot_54, Robot is close to the clothes_shirt_2114. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_shirt_2114. 
##############################
From agent.py
scrub_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_shirt_2114. 
##############################
From agent.py
rinse_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_shirt_2114. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to squeeze the shirt to complete the hand washing process.
##############################
From agent.py
Human Instruction: You need to squeeze the shirt to complete the hand washing process.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2040.
Action 2: look for clothes_shirt_2114 around basket_for_clothes_2040.
Action 3: Observe around clothes_shirt_2114 with the question of Check if shirt can be grabbed.
Action 4: Grab clothes_shirt_2114.
Action 5: Wash clothes_shirt_2114.
Action 6: Walk to faucet_134.
Action 7: Switch off faucet_134.
Action 8: Walk to clothes_shirt_2114.
Action 9: Scrub clothes_shirt_2114.
Action 10: Rinse clothes_shirt_2114.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_bathroom_counter_306(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(detergent,bathroom_counter_instance)
        else:
            exp(detergent,bathroom_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_counter_instance]=True
        close[bathroom_counter_instance,detergent]=True
    

behavior find_soap_2038_around_shower_303(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==303
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(soap,shower_instance)
        else:
            exp(soap,shower_instance)
    eff:
        unknown[soap]=False
        close[soap,shower_instance]=True
        close[shower_instance,soap]=True
    

behavior find_towel_2083_around_bathroom_counter_306(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(towel,bathroom_counter_instance)
        else:
            exp(towel,bathroom_counter_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_counter_instance]=True
        close[bathroom_counter_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_shirt(shirt: item, faucet: item):
    body:
        if dirty(shirt):
            if not inhand(shirt):
                grab(shirt)
            if not close_char(char, faucet):
                walk_to(faucet)
            wash(shirt)
            scrub(shirt)
            rinse(shirt)
            squeeze(shirt)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 134
        hand_wash_shirt(shirt, faucet)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_bathroom_counter_306(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(detergent,bathroom_counter_instance)
        else:
            exp(detergent,bathroom_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_counter_instance]=True
        close[bathroom_counter_instance,detergent]=True
    

behavior find_soap_2037_around_bathroom_counter_306(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_towel_2083_around_shower_303(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==303
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(towel,shower_instance)
        else:
            exp(towel,shower_instance)
    eff:
        unknown[towel]=False
        close[towel,shower_instance]=True
        close[shower_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior find_and_grab_shirt(clothes_shirt:item, basket:item):
    body:
        if not inhand(clothes_shirt):
            if not close_char(char, basket):
                walk_to(basket)
            if not visited(clothes_shirt):
                observe(clothes_shirt, "Check if shirt can be grabbed")
            grab(clothes_shirt)

behavior wash_shirt(clothes_shirt:item, faucet:item):
    body:
        if dirty(clothes_shirt):
            walk_to(faucet)
            if is_off(faucet):
                switch_on(faucet)
            wash(clothes_shirt)
            switch_off(faucet)
        scrub(clothes_shirt)
        rinse(clothes_shirt)

behavior squeeze_shirt(clothes_shirt:item):
    body:
        squeeze(clothes_shirt)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt] == 2114
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2040
        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 134
        
        find_and_grab_shirt(clothes_shirt, basket)
        wash_shirt(clothes_shirt, faucet)
        squeeze_shirt(clothes_shirt)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior find_and_grab_shirt(clothes_shirt:item, basket:item):
    body:
        if not inhand(clothes_shirt):
            if not close_char(char, basket):
                walk_to(basket)
            if not visited(clothes_shirt):
                observe(clothes_shirt, "Check if shirt can be grabbed")
            grab(clothes_shirt)

behavior wash_shirt(clothes_shirt:item, faucet:item):
    body:
        if dirty(clothes_shirt):
            walk_to(faucet)
            if is_off(faucet):
                switch_on(faucet)
            wash(clothes_shirt)
            switch_off(faucet)
        scrub(clothes_shirt)
        rinse(clothes_shirt)

behavior squeeze_shirt(clothes_shirt:item):
    body:
        squeeze(clothes_shirt)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt] == 2114
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2040
        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 134
        
        find_and_grab_shirt(clothes_shirt, basket)
        wash_shirt(clothes_shirt, faucet)
        squeeze_shirt(clothes_shirt)
##############################
From agent.py-> find a plan in act()
scrub_executor(clothes_shirt_2114)rinse_executor(clothes_shirt_2114)
##############################
From agent.py
scrub_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_shirt_2114. 
##############################
From agent.py
rinse_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_shirt_2114. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: Squeeze the shirt to complete the hand washing process.
##############################
From agent.py
Human Instruction: Squeeze the shirt to complete the hand washing process.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2040.
Action 2: look for clothes_shirt_2114 around basket_for_clothes_2040.
Action 3: Observe around clothes_shirt_2114 with the question of Check if shirt can be grabbed.
Action 4: Grab clothes_shirt_2114.
Action 5: Wash clothes_shirt_2114.
Action 6: Walk to faucet_134.
Action 7: Switch off faucet_134.
Action 8: Walk to clothes_shirt_2114.
Action 9: Scrub clothes_shirt_2114.
Action 10: Rinse clothes_shirt_2114.
Action 11: Scrub clothes_shirt_2114.
Action 12: Rinse clothes_shirt_2114.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2038_around_shower_303(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==303
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(soap,shower_instance)
        else:
            exp(soap,shower_instance)
    eff:
        unknown[soap]=False
        close[soap,shower_instance]=True
        close[shower_instance,soap]=True
    

behavior find_detergent_2108_around_bathroom_counter_306(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(detergent,bathroom_counter_instance)
        else:
            exp(detergent,bathroom_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_counter_instance]=True
        close[bathroom_counter_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_shirt(clothes_shirt:item):
    body:
        if dirty(clothes_shirt):
            wash(clothes_shirt)
        scrub(clothes_shirt)
        rinse(clothes_shirt)
        scrub(clothes_shirt)
        rinse(clothes_shirt)
        squeeze(clothes_shirt)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt] == 2114
        hand_wash_shirt(clothes_shirt)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior hand_wash_shirt(clothes_shirt:item):
    body:
        if dirty(clothes_shirt):
            wash(clothes_shirt)
        scrub(clothes_shirt)
        rinse(clothes_shirt)
        scrub(clothes_shirt)
        rinse(clothes_shirt)
        squeeze(clothes_shirt)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt] == 2114
        hand_wash_shirt(clothes_shirt)

##############################
From agent.py-> find a plan in act()
scrub_executor(clothes_shirt_2114)rinse_executor(clothes_shirt_2114)scrub_executor(clothes_shirt_2114)rinse_executor(clothes_shirt_2114)
##############################
From agent.py
scrub_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_shirt_2114. 
##############################
From agent.py
rinse_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_shirt_2114. 
##############################
From agent.py
scrub_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_shirt_2114. 
##############################
From agent.py
rinse_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_shirt_2114. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: Squeeze clothes_shirt_2114 to complete the hand washing process.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
def is_shirt_ironed(shirt:item):
    # Function to check if the shirt is already ironed
    symbol ironed=not dirty(shirt)
    return ironed

def is_shirt_ready_to_iron(shirt:item):
    # Function to check if the shirt can be ironed
    symbol ready= is_clothes_shirt(shirt) and not inhand(shirt)
    return ready

behavior iron_shirt(shirt:item, iron:item):
    body:
        if not is_shirt_ironed(shirt):
            grab(shirt)
            if plugged(iron) and is_on(iron):
                put_on(shirt, iron)
                observe(iron, "Check if the shirt is ironed")
                # Assume observing helps to know when the shirt is ironed
        
behavior prepare_to_iron(iron:item):
    body:
        if not plugged(iron):
            plugin(iron)
        if is_off(iron):
            switch_on(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        
        bind iron: item where:
            is_iron(iron)

        if is_shirt_ready_to_iron(shirt):
            prepare_to_iron(iron)
            iron_shirt(shirt, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        if not close_char(char, ironing_board):
            walk_to(ironing_board)
        if not on(shirt, ironing_board):
            put_on(shirt, ironing_board)
        if is_off(iron):
            switch_on(iron)
        if not close_char(char, shirt):
            walk_to(shirt)
        if inhand(shirt):
            observe(shirt, "Check if the shirt is ready to be ironed")
        put_on(shirt, ironing_board)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        bind iron: item where:
            is_iron(iron)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        iron_shirt(shirt, iron, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        if not close_char(char, ironing_board):
            walk_to(ironing_board)
        if not on(shirt, ironing_board):
            put_on(shirt, ironing_board)
        if is_off(iron):
            switch_on(iron)
        if not close_char(char, shirt):
            walk_to(shirt)
        if inhand(shirt):
            observe(shirt, "Check if the shirt is ready to be ironed")
        put_on(shirt, ironing_board)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        bind iron: item where:
            is_iron(iron)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        iron_shirt(shirt, iron, ironing_board)

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)put_executor(clothes_shirt_2114, ironing_board_2099)walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)walk_executor(ironing_board_2099)put_executor(clothes_shirt_2114, ironing_board_2099)
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: iron_2117, Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. 
##############################
From agent.py
put_executor(clothes_shirt_2114, ironing_board_2099)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. ironing_board_2099 is close clothes_shirt_2114. clothes_shirt_2114 is close ironing_board_2099. clothes_shirt_2114 is on ironing_board_2099. clothes_shirt_2114 released by right hand. 
##############################
From agent.py
walk_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. 
##############################
From agent.py
grab_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. Grabbing clothes_shirt_2114 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. 
##############################
From agent.py
put_executor(clothes_shirt_2114, ironing_board_2099)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. clothes_shirt_2114 is close ironing_board_2099. clothes_shirt_2114 is on ironing_board_2099. clothes_shirt_2114 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to switch on the iron and ensure that the shirt is in a proper position to be ironed on the ironing board.
##############################
From agent.py
Human Instruction: The robot needs to switch on the iron and ensure that the shirt is in a proper position to be ironed on the ironing board.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2040.
Action 2: look for clothes_shirt_2114 around basket_for_clothes_2040.
Action 3: Observe around clothes_shirt_2114 with the question of Check if shirt can be grabbed.
Action 4: Grab clothes_shirt_2114.
Action 5: Wash clothes_shirt_2114.
Action 6: Walk to faucet_134.
Action 7: Switch off faucet_134.
Action 8: Walk to clothes_shirt_2114.
Action 9: Scrub clothes_shirt_2114.
Action 10: Rinse clothes_shirt_2114.
Action 11: Scrub clothes_shirt_2114.
Action 12: Rinse clothes_shirt_2114.
Action 13: Scrub clothes_shirt_2114.
Action 14: Rinse clothes_shirt_2114.
Action 15: Scrub clothes_shirt_2114.
Action 16: Rinse clothes_shirt_2114.
Action 17: Walk to ironing_board_2099.
Action 18: Put clothes_shirt_2114 on ironing_board_2099.
Action 19: Walk to clothes_shirt_2114.
Action 20: Grab clothes_shirt_2114.
Action 21: Walk to ironing_board_2099.
Action 22: Put clothes_shirt_2114 on ironing_board_2099.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def position_shirt_properly(shirt:item, ironing_board:item):
    body:
        if not on(shirt, ironing_board):
            grab(shirt)
            walk_to(ironing_board)
            put_on(shirt, ironing_board)

behavior switch_on_iron(iron:item):
    body:
        if is_off(iron):
            switch_on(iron)

behavior iron_shirt(shirt:item, iron:item):
    body:
        if on(shirt, iron):
            walk_to(iron)
            if has_switch(iron):
                switch_on_iron(iron)
                
behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        bind iron: item where:
            is_iron(iron)
    
        position_shirt_properly(shirt, ironing_board)
        iron_shirt(shirt, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior switch_on_iron(iron:item):
    body:
        if is_off(iron):
            switch_on(iron)

behavior ensure_shirt_on_ironing_board(shirt:item, ironing_board:item):
    body:
        if not on(shirt, ironing_board):
            put_on(shirt, ironing_board)

behavior approach_iron_for_ironing(iron:item, shirt:item, ironing_board:item):
    body:
        if not close_char(char, iron):
            walk_to(iron)
        switch_on_iron(iron)
        ensure_shirt_on_ironing_board(shirt, ironing_board)
        
behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        approach_iron_for_ironing(iron, shirt, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior switch_on_iron(iron:item):
    body:
        if is_off(iron):
            switch_on(iron)

behavior ensure_shirt_on_ironing_board(shirt:item, ironing_board:item):
    body:
        if not on(shirt, ironing_board):
            put_on(shirt, ironing_board)

behavior approach_iron_for_ironing(iron:item, shirt:item, ironing_board:item):
    body:
        if not close_char(char, iron):
            walk_to(iron)
        switch_on_iron(iron)
        ensure_shirt_on_ironing_board(shirt, ironing_board)
        
behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        approach_iron_for_ironing(iron, shirt, ironing_board)

##############################
From agent.py-> find a plan in act()
walk_executor(iron_2117)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
walk_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. 
##############################
From agent.py
plugin_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. iron_2117 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. iron_2117 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Hand wash a shirt and iron this shirt.
Action History:
['walk_executor(basket_for_clothes_2040)', 'grab_executor(clothes_shirt_2114)', 'wash_executor(clothes_shirt_2114)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(clothes_shirt_2114)', 'scrub_executor(clothes_shirt_2114)', 'rinse_executor(clothes_shirt_2114)', 'scrub_executor(clothes_shirt_2114)', 'rinse_executor(clothes_shirt_2114)', 'scrub_executor(clothes_shirt_2114)', 'rinse_executor(clothes_shirt_2114)', 'scrub_executor(clothes_shirt_2114)', 'rinse_executor(clothes_shirt_2114)', 'walk_executor(ironing_board_2099)', 'put_executor(clothes_shirt_2114, ironing_board_2099)', 'walk_executor(clothes_shirt_2114)', 'grab_executor(clothes_shirt_2114)', 'walk_executor(ironing_board_2099)', 'put_executor(clothes_shirt_2114, ironing_board_2099)', 'walk_executor(iron_2117)', 'plugin_executor(iron_2117)', 'switchon_executor(iron_2117)']
Time info:
Time consume: 137 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 98
goal generate times: 8
goal correct times: 0
action_num: 23

Task complete rate:
Keystate: k1 - Requires: 0 steps
Keystate: k2 - Requires: 3 steps
Action Completion Rate: 0.0
Scene_id: 2
##############################
