From agent.py
Reset goals: The sub-goals are: 
['Open the windows in the bathroom.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior open_bathroom_windows(window:item):
    body:
        if closed(window) and is_window(window):
            opens(window)

behavior __goal__():
    body:
        bind bathroom_window: item where:
            is_window(bathroom_window) and inside(bathroom_window, bathroom)
        # Select the window inside the bathroom
        
        open_bathroom_windows(bathroom_window)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_sink_231(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_toilet_paper_2090_around_bathroom_counter_41(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(toilet_paper,bathroom_counter_instance)
        else:
            exp(toilet_paper,bathroom_counter_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,bathroom_counter_instance]=True
        close[bathroom_counter_instance,toilet_paper]=True
    

#exp_behavior_end

#goal_representation
 
behavior approach_bathroom(bathroom:item):
    body:
        if not close_char(char, bathroom):
            walk_to(bathroom)

behavior open_windows(window:item):
    body:
        if closed(window) and can_open(window):
            opens(window)

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)

        bind window: item where:
            is_window(window) and inside(window, bathroom)

        approach_bathroom(bathroom)
        open_windows(window)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior approach_bathroom(bathroom:item):
    body:
        if not close_char(char, bathroom):
            walk_to(bathroom)

behavior open_windows(window:item):
    body:
        if closed(window) and can_open(window):
            opens(window)

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)

        bind window: item where:
            is_window(window) and inside(window, bathroom)

        approach_bathroom(bathroom)
        open_windows(window)

##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_1)walk_executor(window_63)open_executor(window_63)
##############################
From agent.py
walk_executor(bathroom_1)

##############################
From agent.py
walk_executor(window_63)
Robot find: towel_rack_33, Robot is close to the window_63. 
##############################
From agent.py
open_executor(window_63)
Robot find: Robot is close to the window_63. window_63 is opened. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Open the windows in the bathroom.
Action History:
['walk_executor(bathroom_1)', 'walk_executor(window_63)', 'open_executor(window_63)']
Time info:
Time consume: 24 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 17
goal generate times: 2
goal correct times: 0
action_num: 3

Task complete rate:
1
Scene_id: 0
##############################
