From agent.py
Reset goals: The sub-goals are: 
['1. Identify the bowls and plates that need washing.', '2. Use the dishwasher to wash the identified bowls and plates.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_dishwasher_143(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==143
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(plate,dishwasher_instance)
        else:
            exp(plate,dishwasher_instance)
    eff:
        unknown[plate]=False
        close[plate,dishwasher_instance]=True
        close[dishwasher_instance,plate]=True
    

behavior find_bowl_2095_around_dishwasher_143(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==143
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(bowl,dishwasher_instance)
        else:
            exp(bowl,dishwasher_instance)
    eff:
        unknown[bowl]=False
        close[bowl,dishwasher_instance]=True
        close[dishwasher_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
def has_bowls_and_plates(dish:item):
    # Function to check if an item is classified as either a bowl or a plate
    symbol has_bowls_and_plates=exists o: item : ((is_bowl(o) or is_plate(o)) and inside(o, dish))
    return has_bowls_and_plates

behavior __goal__():
    body:
        foreach dish: item:
            # Check all dishes that have not been visited
            if (is_bowl(dish) or is_plate(dish)) and not visited(dish):
                observe(dish,"Check is there any bowl or plate that need washing")

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_bowls_and_plates(dish:item):
    # Function to check if an item is classified as either a bowl or a plate
    symbol has_bowls_and_plates=exists o: item : ((is_bowl(o) or is_plate(o)) and inside(o, dish))
    return has_bowls_and_plates

behavior __goal__():
    body:
        foreach dish: item:
            # Check all dishes that have not been visited
            if (is_bowl(dish) or is_plate(dish)) and not visited(dish):
                observe(dish,"Check is there any bowl or plate that need washing")

##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(bowl_2095, dishwasher_143)walk_executor(bowl_2095)obs(bowl_2095, Check is there any bowl or plate that need washing)walk_executor(dishwasher_143)exp(bowl_2096, dishwasher_143)walk_executor(bowl_2096)obs(bowl_2096, Check is there any bowl or plate that need washing)walk_executor(dishwasher_143)exp(bowl_2097, dishwasher_143)walk_executor(bowl_2097)obs(bowl_2097, Check is there any bowl or plate that need washing)walk_executor(dishwasher_143)exp(plate_2105, dishwasher_143)walk_executor(plate_2105)obs(plate_2105, Check is there any bowl or plate that need washing)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(bowl_2095, dishwasher_143)
Fail to find bowl_2095 around dishwasher_143. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Locate all the bowls and plates.', '2. Wash the bowls and plates using the dishwasher.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_cupboard_131(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(plate,cupboard_instance)
        else:
            exp(plate,cupboard_instance)
    eff:
        unknown[plate]=False
        close[plate,cupboard_instance]=True
        close[cupboard_instance,plate]=True
    

behavior find_bowl_2096_around_kitchen_counter_132(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior locate_bowls_and_plates(bowls_and_plates:item):
    body:
        if not visited(bowls_and_plates):
            observe(bowls_and_plates, "Check if it is a bowl or plate")

behavior __goal__():
    body:
        foreach bowls_and_plates: item:
            if (is_bowl(bowls_and_plates) or is_plate(bowls_and_plates)) and not visited(bowls_and_plates):
                locate_bowls_and_plates(bowls_and_plates)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior locate_bowls_and_plates(bowls_and_plates:item):
    body:
        if not visited(bowls_and_plates):
            observe(bowls_and_plates, "Check if it is a bowl or plate")

behavior __goal__():
    body:
        foreach bowls_and_plates: item:
            if (is_bowl(bowls_and_plates) or is_plate(bowls_and_plates)) and not visited(bowls_and_plates):
                locate_bowls_and_plates(bowls_and_plates)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(bowl_2095, kitchen_counter_132)walk_executor(bowl_2095)obs(bowl_2095, Check if it is a bowl or plate)walk_executor(kitchen_counter_132)exp(bowl_2096, kitchen_counter_132)walk_executor(bowl_2096)obs(bowl_2096, Check if it is a bowl or plate)walk_executor(kitchen_counter_132)exp(bowl_2097, kitchen_counter_132)walk_executor(bowl_2097)obs(bowl_2097, Check if it is a bowl or plate)walk_executor(cupboard_131)open_executor(cupboard_131)exp(plate_2105, cupboard_131)walk_executor(plate_2105)obs(plate_2105, Check if it is a bowl or plate)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: pot_54, Robot is close to the kitchen_counter_132. 
##############################
From agent.py
exp(bowl_2095, kitchen_counter_132)
Fail to find bowl_2095 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(bowl_2095, cupboard_131)walk_executor(bowl_2095)obs(bowl_2095, Check if it is a bowl or plate)walk_executor(cupboard_131)exp(bowl_2096, cupboard_131)walk_executor(bowl_2096)obs(bowl_2096, Check if it is a bowl or plate)walk_executor(cupboard_131)exp(bowl_2097, cupboard_131)walk_executor(bowl_2097)obs(bowl_2097, Check if it is a bowl or plate)walk_executor(cupboard_131)exp(plate_2105, cupboard_131)walk_executor(plate_2105)obs(plate_2105, Check if it is a bowl or plate)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(bowl_2095, cupboard_131)
Fail to find bowl_2095 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(bowl_2095, cupboard_130)walk_executor(bowl_2095)obs(bowl_2095, Check if it is a bowl or plate)walk_executor(cupboard_130)exp(bowl_2096, cupboard_130)walk_executor(bowl_2096)obs(bowl_2096, Check if it is a bowl or plate)walk_executor(cupboard_130)exp(bowl_2097, cupboard_130)walk_executor(bowl_2097)obs(bowl_2097, Check if it is a bowl or plate)walk_executor(cupboard_130)exp(plate_2105, cupboard_130)walk_executor(plate_2105)obs(plate_2105, Check if it is a bowl or plate)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(bowl_2095, cupboard_130)
Fail to find bowl_2095 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(bowl_2095, dishwasher_143)walk_executor(bowl_2095)obs(bowl_2095, Check if it is a bowl or plate)walk_executor(dishwasher_143)exp(bowl_2096, dishwasher_143)walk_executor(bowl_2096)obs(bowl_2096, Check if it is a bowl or plate)walk_executor(dishwasher_143)exp(bowl_2097, dishwasher_143)walk_executor(bowl_2097)obs(bowl_2097, Check if it is a bowl or plate)walk_executor(dishwasher_143)exp(plate_2105, dishwasher_143)walk_executor(plate_2105)obs(plate_2105, Check if it is a bowl or plate)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(bowl_2095, dishwasher_143)
Fail to find bowl_2095 around dishwasher_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)exp(bowl_2095, ironing_board_2099)walk_executor(bowl_2095)obs(bowl_2095, Check if it is a bowl or plate)walk_executor(ironing_board_2099)exp(bowl_2096, ironing_board_2099)walk_executor(bowl_2096)obs(bowl_2096, Check if it is a bowl or plate)walk_executor(ironing_board_2099)exp(bowl_2097, ironing_board_2099)walk_executor(bowl_2097)obs(bowl_2097, Check if it is a bowl or plate)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(plate_2105, fridge_140)walk_executor(plate_2105)obs(plate_2105, Check if it is a bowl or plate)
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: iron_2117, Robot is close to the ironing_board_2099. 
##############################
From agent.py
exp(bowl_2095, ironing_board_2099)
Fail to find bowl_2095 around ironing_board_2099. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(bowl_2095, fridge_140)walk_executor(bowl_2095)obs(bowl_2095, Check if it is a bowl or plate)walk_executor(fridge_140)exp(bowl_2096, fridge_140)walk_executor(bowl_2096)obs(bowl_2096, Check if it is a bowl or plate)walk_executor(fridge_140)exp(bowl_2097, fridge_140)walk_executor(bowl_2097)obs(bowl_2097, Check if it is a bowl or plate)walk_executor(oven_141)open_executor(oven_141)exp(plate_2105, oven_141)walk_executor(plate_2105)obs(plate_2105, Check if it is a bowl or plate)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2095 ?
Answer: Go to dining_room_1. Inside the room, locate table_123. You will find bowl_2095 placed on table_123.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_1. Inside the room, locate table_123. You will find bowl_2095 placed on table_123.

The actions you have taken:
Action 1: Walk to kitchen_counter_132.
Action 2: look for bowl_2095 around kitchen_counter_132.
Action 3: Walk to cupboard_131.
Action 4: Open cupboard_131.
Action 5: look for bowl_2095 around cupboard_131.
Action 6: Walk to cupboard_130.
Action 7: look for bowl_2095 around cupboard_130.
Action 8: Walk to dishwasher_143.
Action 9: Open dishwasher_143.
Action 10: look for bowl_2095 around dishwasher_143.
Action 11: Walk to ironing_board_2099.
Action 12: look for bowl_2095 around ironing_board_2099.
Action 13: Walk to fridge_140.
Action 14: Switch off fridge_140.
Action 15: Open fridge_140.

##############################
From agent.py
exp(bowl_2095, fridge_140)
Fail to find bowl_2095 around fridge_140. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(bowl_2095, table_123)walk_executor(bowl_2095)obs(bowl_2095, Check if it is a bowl or plate)walk_executor(table_123)exp(bowl_2096, table_123)walk_executor(bowl_2096)obs(bowl_2096, Check if it is a bowl or plate)walk_executor(table_123)exp(bowl_2097, table_123)walk_executor(bowl_2097)obs(bowl_2097, Check if it is a bowl or plate)walk_executor(table_123)exp(plate_2105, table_123)walk_executor(plate_2105)obs(plate_2105, Check if it is a bowl or plate)
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, laptop_2015, fork_2103, cup_2087, bowl_2095, drawing_118, Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
exp(bowl_2095, table_123)
Find bowl_2095. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2095)obs(bowl_2095, Check if it is a bowl or plate)walk_executor(table_123)exp(bowl_2096, table_123)walk_executor(bowl_2096)obs(bowl_2096, Check if it is a bowl or plate)walk_executor(table_123)exp(bowl_2097, table_123)walk_executor(bowl_2097)obs(bowl_2097, Check if it is a bowl or plate)walk_executor(table_123)exp(plate_2105, table_123)walk_executor(plate_2105)obs(plate_2105, Check if it is a bowl or plate)
##############################
From agent.py
walk_executor(bowl_2095)
Robot find: Robot is close to the table_123. Robot is close to the bowl_2095. 
##############################
From agent.py
obs(bowl_2095, Check if it is a bowl or plate)
Get this information:  bowl_2095 is inside dining_room_1. bowl_2095 is close to table_123. bowl_2095 is close to character_219. bowl_2095 is on table_123. bowl_2095 is DIRTY.
##############################
From agent.py
walk_executor(table_123)
Robot find: Robot is close to the table_123. Robot is close to the mat_114. 
##############################
From agent.py
exp(bowl_2096, table_123)
Fail to find bowl_2096 around table_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_193)exp(bowl_2096, table_193)walk_executor(bowl_2096)obs(bowl_2096, Check if it is a bowl or plate)walk_executor(table_193)exp(bowl_2097, table_193)walk_executor(bowl_2097)obs(bowl_2097, Check if it is a bowl or plate)walk_executor(table_193)exp(plate_2105, table_193)walk_executor(plate_2105)obs(plate_2105, Check if it is a bowl or plate)
##############################
From agent.py
walk_executor(table_193)
Robot find: dvd_player_2000, pillow_195, laser_pointer_2025, mat_201, mouse_2112, chair_2119, oil_2005, keyboard_2111, drawing_196, Robot is close to the table_193. 
##############################
From agent.py
exp(bowl_2096, table_193)
Fail to find bowl_2096 around table_193. 
##############################
From agent.py-> find a plan in act()
walk_executor(stove_2090)open_executor(stove_2090)exp(bowl_2096, stove_2090)walk_executor(bowl_2096)obs(bowl_2096, Check if it is a bowl or plate)walk_executor(stove_2090)exp(bowl_2097, stove_2090)walk_executor(bowl_2097)obs(bowl_2097, Check if it is a bowl or plate)walk_executor(table_127)exp(plate_2105, table_127)walk_executor(plate_2105)obs(plate_2105, Check if it is a bowl or plate)
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
open_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is opened. 
##############################
From agent.py
exp(bowl_2096, stove_2090)
Fail to find bowl_2096 around stove_2090. 
##############################
From agent.py-> find a plan in act()
walk_executor(fryingpan_2107)exp(bowl_2096, fryingpan_2107)walk_executor(bowl_2096)obs(bowl_2096, Check if it is a bowl or plate)walk_executor(fryingpan_2107)exp(bowl_2097, fryingpan_2107)walk_executor(bowl_2097)obs(bowl_2097, Check if it is a bowl or plate)walk_executor(table_127)exp(plate_2105, table_127)walk_executor(plate_2105)obs(plate_2105, Check if it is a bowl or plate)
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. 
##############################
From agent.py
exp(bowl_2096, fryingpan_2107)
Fail to find bowl_2096 around fryingpan_2107. 
##############################
From agent.py-> find a plan in act()
walk_executor(walllamp_291)exp(bowl_2096, walllamp_291)walk_executor(bowl_2096)obs(bowl_2096, Check if it is a bowl or plate)walk_executor(walllamp_291)exp(bowl_2097, walllamp_291)walk_executor(bowl_2097)obs(bowl_2097, Check if it is a bowl or plate)walk_executor(table_127)exp(plate_2105, table_127)walk_executor(plate_2105)obs(plate_2105, Check if it is a bowl or plate)
##############################
From agent.py
walk_executor(walllamp_291)
Robot find: Robot is close to the walllamp_291. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2096 ?
Answer: The target item, bowl_2096, is located in dining_room_1. It is on table_127. You can identify table_127 as being close to bowl_2096. Retrieve bowl_2096 from on top of table_127.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_1. Inside the room, locate table_123. You will find bowl_2095 placed on table_123.
The target item, bowl_2096, is located in dining_room_1. It is on table_127. You can identify table_127 as being close to bowl_2096. Retrieve bowl_2096 from on top of table_127.

The actions you have taken:
Action 1: Walk to kitchen_counter_132.
Action 2: look for bowl_2095 around kitchen_counter_132.
Action 3: Walk to cupboard_131.
Action 4: Open cupboard_131.
Action 5: look for bowl_2095 around cupboard_131.
Action 6: Walk to cupboard_130.
Action 7: look for bowl_2095 around cupboard_130.
Action 8: Walk to dishwasher_143.
Action 9: Open dishwasher_143.
Action 10: look for bowl_2095 around dishwasher_143.
Action 11: Walk to ironing_board_2099.
Action 12: look for bowl_2095 around ironing_board_2099.
Action 13: Walk to fridge_140.
Action 14: Switch off fridge_140.
Action 15: Open fridge_140.
Action 16: look for bowl_2095 around fridge_140.
Action 17: Walk to table_123.
Action 18: look for bowl_2095 around table_123.
Action 19: Walk to bowl_2095.
Action 20: Observe around bowl_2095 with the question of Check if it is a bowl or plate.
Action 21: Walk to table_123.
Action 22: look for bowl_2096 around table_123.
Action 23: Walk to table_193.
Action 24: look for bowl_2096 around table_193.
Action 25: Walk to stove_2090.
Action 26: Open stove_2090.
Action 27: look for bowl_2096 around stove_2090.
Action 28: Walk to fryingpan_2107.
Action 29: look for bowl_2096 around fryingpan_2107.
Action 30: Walk to walllamp_291.

##############################
From agent.py
exp(bowl_2096, walllamp_291)
Fail to find bowl_2096 around walllamp_291. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_127)exp(bowl_2096, table_127)walk_executor(bowl_2096)obs(bowl_2096, Check if it is a bowl or plate)walk_executor(table_127)exp(bowl_2097, table_127)walk_executor(bowl_2097)obs(bowl_2097, Check if it is a bowl or plate)walk_executor(table_127)exp(plate_2105, table_127)walk_executor(plate_2105)obs(plate_2105, Check if it is a bowl or plate)
##############################
From agent.py
walk_executor(table_127)
Robot find: mat_115, fork_2104, console_2027, crayon_2030, bowl_2096, bowl_2097, napkin_2014, plate_2105, Robot is close to the mat_115. Robot is close to the table_127. 
##############################
From agent.py
exp(bowl_2096, table_127)
Find bowl_2096. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2096)obs(bowl_2096, Check if it is a bowl or plate)walk_executor(bowl_2097)obs(bowl_2097, Check if it is a bowl or plate)walk_executor(plate_2105)obs(plate_2105, Check if it is a bowl or plate)
##############################
From agent.py
walk_executor(bowl_2096)
Robot find: Robot is close to the table_127. Robot is close to the bowl_2096. 
##############################
From agent.py
obs(bowl_2096, Check if it is a bowl or plate)
Get this information:  bowl_2096 is on table_127. bowl_2096 is close to table_127. bowl_2096 is close to character_219. bowl_2096 is inside dining_room_1. bowl_2096 is DIRTY.
##############################
From agent.py
walk_executor(bowl_2097)
Robot find: Robot is close to the table_127. Robot is close to the bowl_2097. 
##############################
From agent.py
obs(bowl_2097, Check if it is a bowl or plate)
Get this information:  bowl_2097 is inside dining_room_1. bowl_2097 is close to table_127. bowl_2097 is close to character_219. bowl_2097 is on table_127. bowl_2097 is DIRTY.
##############################
From agent.py
walk_executor(plate_2105)
Robot find: Robot is close to the table_127. Robot is close to the plate_2105. 
##############################
From agent.py
obs(plate_2105, Check if it is a bowl or plate)
Get this information:  plate_2105 is inside dining_room_1. plate_2105 is on table_127. plate_2105 is close to table_127. plate_2105 is close to character_219. plate_2105 is DIRTY.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_washing_machine_2041(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(dish:item, dishwasher:item):
    body:
        if not inside(dish, dishwasher):
            put_inside(dish, dishwasher)
            # Place the dish inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        if open(dishwasher):
            closes(dishwasher) # Close the dishwasher door
        if is_off(dishwasher):
            switch_on(dishwasher) # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher
        
        foreach dish: item:
        # Load all bowls and plates into the dishwasher
            if is_bowl(dish) or is_plate(dish):
                load_dishwasher(dish, dishwasher)
                
        start_dishwasher(dishwasher) # Start the washing cycle of the dishwasher

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_dishwasher(dish:item, dishwasher:item):
    body:
        if not inside(dish, dishwasher):
            put_inside(dish, dishwasher)
            # Place the dish inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        if open(dishwasher):
            closes(dishwasher) # Close the dishwasher door
        if is_off(dishwasher):
            switch_on(dishwasher) # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher
        
        foreach dish: item:
        # Load all bowls and plates into the dishwasher
            if is_bowl(dish) or is_plate(dish):
                load_dishwasher(dish, dishwasher)
                
        start_dishwasher(dishwasher) # Start the washing cycle of the dishwasher

##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(dishwasher_143)putin_executor(bowl_2095, dishwasher_143)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)close_executor(dishwasher_143)switchon_executor(dishwasher_143)
##############################
From agent.py
walk_executor(bowl_2095)
Robot find: Robot is close to the table_123. Robot is close to the bowl_2095. 
##############################
From agent.py
grab_executor(bowl_2095)
Robot find: Robot is close to the table_123. Robot is close to the bowl_2095. Grabbing bowl_2095 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the bowl_2095. Robot is close to the knife_2036. Robot is close to the dishwasher_143. 
##############################
From agent.py
putin_executor(bowl_2095, dishwasher_143)
Robot find: Robot is close to the bowl_2095. Robot is close to the knife_2036. Robot is close to the dishwasher_143. bowl_2095 is inside dishwasher_143. bowl_2095 is close dishwasher_143. dishwasher_143 is close bowl_2095. bowl_2095 released by right hand. 
##############################
From agent.py
walk_executor(bowl_2096)
Robot find: Robot is close to the bowl_2096. Robot is close to the table_127. 
##############################
From agent.py
grab_executor(bowl_2096)
Robot find: Robot is close to the bowl_2096. Robot is close to the table_127. Grabbing bowl_2096 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the bowl_2096. Robot is close to the knife_2036. Robot is close to the bowl_2095. Robot is close to the dishwasher_143. 
##############################
From agent.py
putin_executor(bowl_2096, dishwasher_143)
Robot find: Robot is close to the bowl_2096. Robot is close to the knife_2036. Robot is close to the bowl_2095. Robot is close to the dishwasher_143. bowl_2096 is close dishwasher_143. bowl_2096 is inside dishwasher_143. dishwasher_143 is close bowl_2096. bowl_2096 released by right hand. 
##############################
From agent.py
walk_executor(bowl_2097)
Robot find: Robot is close to the bowl_2097. Robot is close to the table_127. 
##############################
From agent.py
grab_executor(bowl_2097)
Robot find: Robot is close to the bowl_2097. Robot is close to the table_127. Grabbing bowl_2097 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the bowl_2097. Robot is close to the bowl_2095. Robot is close to the bowl_2096. Robot is close to the dishwasher_143. Robot is close to the knife_2036. 
##############################
From agent.py
putin_executor(bowl_2097, dishwasher_143)
Robot find: Robot is close to the bowl_2097. Robot is close to the bowl_2095. Robot is close to the bowl_2096. Robot is close to the dishwasher_143. Robot is close to the knife_2036. bowl_2097 is inside dishwasher_143. bowl_2097 is close dishwasher_143. dishwasher_143 is close bowl_2097. bowl_2097 released by right hand. 
##############################
From agent.py
walk_executor(plate_2105)
Robot find: Robot is close to the plate_2105. Robot is close to the table_127. 
##############################
From agent.py
grab_executor(plate_2105)
Robot find: Robot is close to the plate_2105. Robot is close to the table_127. Grabbing plate_2105 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the plate_2105. Robot is close to the bowl_2095. Robot is close to the bowl_2096. Robot is close to the bowl_2097. Robot is close to the dishwasher_143. Robot is close to the knife_2036. 
##############################
From agent.py
putin_executor(plate_2105, dishwasher_143)
Robot find: Robot is close to the plate_2105. Robot is close to the bowl_2095. Robot is close to the bowl_2096. Robot is close to the bowl_2097. Robot is close to the dishwasher_143. Robot is close to the knife_2036. plate_2105 is inside dishwasher_143. plate_2105 is close dishwasher_143. dishwasher_143 is close plate_2105. plate_2105 released by right hand. 
##############################
From agent.py
close_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. dishwasher_143 is closed. 
##############################
From agent.py
switchon_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. dishwasher_143 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
wash all the bowls and the plates with dishwasher
Action History:
['walk_executor(kitchen_counter_132)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(cupboard_130)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'walk_executor(ironing_board_2099)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'walk_executor(table_123)', 'walk_executor(bowl_2095)', 'walk_executor(table_123)', 'walk_executor(table_193)', 'walk_executor(stove_2090)', 'open_executor(stove_2090)', 'walk_executor(fryingpan_2107)', 'walk_executor(walllamp_291)', 'walk_executor(table_127)', 'walk_executor(bowl_2096)', 'walk_executor(bowl_2097)', 'walk_executor(plate_2105)', 'walk_executor(bowl_2095)', 'grab_executor(bowl_2095)', 'walk_executor(dishwasher_143)', 'putin_executor(bowl_2095, dishwasher_143)', 'walk_executor(bowl_2096)', 'grab_executor(bowl_2096)', 'walk_executor(dishwasher_143)', 'putin_executor(bowl_2096, dishwasher_143)', 'walk_executor(bowl_2097)', 'grab_executor(bowl_2097)', 'walk_executor(dishwasher_143)', 'putin_executor(bowl_2097, dishwasher_143)', 'walk_executor(plate_2105)', 'grab_executor(plate_2105)', 'walk_executor(dishwasher_143)', 'putin_executor(plate_2105, dishwasher_143)', 'close_executor(dishwasher_143)', 'switchon_executor(dishwasher_143)']
Time info:
Time consume: 201 seconds
Exp_helper query times: 2
Guidance query times: 0
library scale: 29
goal generate times: 2
goal correct times: 0
action_num: 40

Task complete rate:
1
Scene_id: 2
##############################
