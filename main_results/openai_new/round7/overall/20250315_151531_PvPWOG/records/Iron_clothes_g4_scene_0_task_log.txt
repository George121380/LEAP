From agent.py
Reset goals: The sub-goals are: 
['1. Iron the shirt.', '2. Put the shirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_shirt_2086_around_closetdrawer_143(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==143
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_iron_for_use(iron: item, powersocket: item):
    body:
        if unplugged(iron):
            plugin(iron)
        if is_off(iron):
            switch_on(iron)

behavior iron_shirt(shirt: item, ironing_board: item, iron: item):
    body:
        if not on(shirt, ironing_board):
            put_on(shirt, ironing_board)
        if not close_char(char, iron):
            walk_to(iron)
        if is_on(iron):
            observe(iron, "Check if the iron can be used on the shirt")
            # Ensures that the iron is hot and ready to use
        if not close_char(char, shirt):
            walk_to(shirt)

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        bind powersocket: item where:
            is_powersocket(powersocket)
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        prepare_iron_for_use(iron, powersocket)
        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior prepare_iron_for_use(iron: item, powersocket: item):
    body:
        if unplugged(iron):
            plugin(iron)
        if is_off(iron):
            switch_on(iron)

behavior iron_shirt(shirt: item, ironing_board: item, iron: item):
    body:
        if not on(shirt, ironing_board):
            put_on(shirt, ironing_board)
        if not close_char(char, iron):
            walk_to(iron)
        if is_on(iron):
            observe(iron, "Check if the iron can be used on the shirt")
            # Ensures that the iron is hot and ready to use
        if not close_char(char, shirt):
            walk_to(shirt)

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        bind powersocket: item where:
            is_powersocket(powersocket)
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        prepare_iron_for_use(iron, powersocket)
        iron_shirt(shirt, ironing_board, iron)

##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_143)exp(clothes_shirt_2086, closetdrawer_143)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(closetdrawer_143)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_143)
Fail to find clothes_shirt_2086 around closetdrawer_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_143)exp(clothes_shirt_2086, closetdrawer_143)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)walk_executor(closetdrawer_143)exp(iron_2089, closetdrawer_143)walk_executor(iron_2089)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(closetdrawer_143)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_143)
Fail to find clothes_shirt_2086 around closetdrawer_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_143)exp(clothes_shirt_2086, closetdrawer_143)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(closetdrawer_143)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_143)
Fail to find clothes_shirt_2086 around closetdrawer_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_143)exp(clothes_shirt_2086, closetdrawer_143)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(closetdrawer_143)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_143)
Fail to find clothes_shirt_2086 around closetdrawer_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_143)exp(clothes_shirt_2086, closetdrawer_143)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(closetdrawer_143)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_143)
Fail to find clothes_shirt_2086 around closetdrawer_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_143)exp(clothes_shirt_2086, closetdrawer_143)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(closetdrawer_143)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2086 ?
Answer: The item "clothes_shirt_2086" is located inside the basket for clothes identified as "basket_for_clothes_2006." You can find this basket inside bathroom_1. Look inside the basket in bathroom_1 to retrieve the shirt.
Re-decompose: None

##############################
From agent.py
Human Instruction: The item "clothes_shirt_2086" is located inside the basket for clothes identified as "basket_for_clothes_2006." You can find this basket inside bathroom_1. Look inside the basket in bathroom_1 to retrieve the shirt.

The actions you have taken:
Action 1: Walk to closetdrawer_143.
Action 2: look for clothes_shirt_2086 around closetdrawer_143.
Action 3: Walk to closetdrawer_143.
Action 4: look for clothes_shirt_2086 around closetdrawer_143.
Action 5: Walk to closetdrawer_143.
Action 6: look for clothes_shirt_2086 around closetdrawer_143.
Action 7: Walk to closetdrawer_143.
Action 8: look for clothes_shirt_2086 around closetdrawer_143.
Action 9: Walk to closetdrawer_143.
Action 10: look for clothes_shirt_2086 around closetdrawer_143.
Action 11: Walk to closetdrawer_143.

##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_143)
Fail to find clothes_shirt_2086 around closetdrawer_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)exp(clothes_shirt_2086, basket_for_clothes_2006)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Robot find: clothes_pants_2085, clothes_shirt_2086, clothes_socks_2087, clothes_skirt_2088, towel_rack_31, towel_rack_33, towel_rack_32, towel_rack_34, mat_22, Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
exp(clothes_shirt_2086, basket_for_clothes_2006)
Find clothes_shirt_2086. 
##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2086)walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)walk_executor(clothes_shirt_2086)
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: iron_2089, Robot is close to the clothes_shirt_2086. Robot is close to the ironing_board_2074. 
##############################
From agent.py
put_executor(clothes_shirt_2086, ironing_board_2074)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the ironing_board_2074. ironing_board_2074 is close clothes_shirt_2086. clothes_shirt_2086 is close ironing_board_2074. clothes_shirt_2086 is on ironing_board_2074. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
exp(iron_2089, ironing_board_2074)
Find iron_2089. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)obs(iron_2089, Check if the iron can be used on the shirt)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. 
##############################
From agent.py
plugin_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. iron_2089 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. iron_2089 is turned on. 
##############################
From agent.py
obs(iron_2089, Check if the iron can be used on the shirt)
Get this information:  iron_2089 is inside bathroom_1. iron_2089 is close to ironing_board_2074. iron_2089 is close to character_65. iron_2089 is on ironing_board_2074. iron_2089 is PLUGGED_IN. iron_2089 is CLEAN. iron_2089 is ON.
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the clothes_shirt_2086. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot must complete ironing the shirt, which involves actually using the iron on the shirt, as action 23 only shows the robot walking to the shirt and preparing the iron.
##############################
From agent.py
Human Instruction: The robot must complete ironing the shirt, which involves actually using the iron on the shirt, as action 23 only shows the robot walking to the shirt and preparing the iron.

The actions you have taken:
Action 1: Walk to closetdrawer_143.
Action 2: look for clothes_shirt_2086 around closetdrawer_143.
Action 3: Walk to closetdrawer_143.
Action 4: look for clothes_shirt_2086 around closetdrawer_143.
Action 5: Walk to closetdrawer_143.
Action 6: look for clothes_shirt_2086 around closetdrawer_143.
Action 7: Walk to closetdrawer_143.
Action 8: look for clothes_shirt_2086 around closetdrawer_143.
Action 9: Walk to closetdrawer_143.
Action 10: look for clothes_shirt_2086 around closetdrawer_143.
Action 11: Walk to closetdrawer_143.
Action 12: look for clothes_shirt_2086 around closetdrawer_143.
Action 13: Walk to basket_for_clothes_2006.
Action 14: look for clothes_shirt_2086 around basket_for_clothes_2006.
Action 15: Grab clothes_shirt_2086.
Action 16: Walk to ironing_board_2074.
Action 17: Put clothes_shirt_2086 on ironing_board_2074.
Action 18: look for iron_2089 around ironing_board_2074.
Action 19: Walk to iron_2089.
Action 20: Plug in iron_2089.
Action 21: Switch on iron_2089.
Action 22: Observe around iron_2089 with the question of Check if the iron can be used on the shirt.
Action 23: Walk to clothes_shirt_2086.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior iron_shirt(shirt:item, iron:item):
    body:
        # Ensure the iron is plugged in and switched on before using it
        if not is_on(iron):
            if not plugged(iron):
                plugin(iron)
            switch_on(iron)
        if not clean(shirt) and on(shirt, iron):
            # Iron the shirt until it is no longer dirty, and it remains on the ironing board
            observe(iron, "Check if the iron can be used on the shirt")
            # Ensure the task is being performed correctly with necessary checks

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt] == 2086
        # Select the shirt based on known id
        
        bind iron: item where:
            is_iron(iron) and has_switch(iron)
        # Select the iron based on available category determination

        walk_to(clothes_shirt)
        # Move to the shirt to begin ironing

        iron_shirt(clothes_shirt, iron)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior iron_shirt(shirt:item, iron:item):
    body:
        # Ensure the iron is plugged in and switched on before using it
        if not is_on(iron):
            if not plugged(iron):
                plugin(iron)
            switch_on(iron)
        if not clean(shirt) and on(shirt, iron):
            # Iron the shirt until it is no longer dirty, and it remains on the ironing board
            observe(iron, "Check if the iron can be used on the shirt")
            # Ensure the task is being performed correctly with necessary checks

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt] == 2086
        # Select the shirt based on known id
        
        bind iron: item where:
            is_iron(iron) and has_switch(iron)
        # Select the iron based on available category determination

        walk_to(clothes_shirt)
        # Move to the shirt to begin ironing

        iron_shirt(clothes_shirt, iron)
##############################
From agent.py-> find a plan in act()
walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the clothes_shirt_2086. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to actually use the iron on clothes_shirt_2086. While the shirt was placed on the ironing board and the iron was plugged in and switched on, there is no action that indicates the robot ironed the shirt. You need to ensure the shirt is pressed with the iron.
##############################
From agent.py
Human Instruction: The robot needs to actually use the iron on clothes_shirt_2086. While the shirt was placed on the ironing board and the iron was plugged in and switched on, there is no action that indicates the robot ironed the shirt. You need to ensure the shirt is pressed with the iron.

The actions you have taken:
Action 1: Walk to closetdrawer_143.
Action 2: look for clothes_shirt_2086 around closetdrawer_143.
Action 3: Walk to closetdrawer_143.
Action 4: look for clothes_shirt_2086 around closetdrawer_143.
Action 5: Walk to closetdrawer_143.
Action 6: look for clothes_shirt_2086 around closetdrawer_143.
Action 7: Walk to closetdrawer_143.
Action 8: look for clothes_shirt_2086 around closetdrawer_143.
Action 9: Walk to closetdrawer_143.
Action 10: look for clothes_shirt_2086 around closetdrawer_143.
Action 11: Walk to closetdrawer_143.
Action 12: look for clothes_shirt_2086 around closetdrawer_143.
Action 13: Walk to basket_for_clothes_2006.
Action 14: look for clothes_shirt_2086 around basket_for_clothes_2006.
Action 15: Grab clothes_shirt_2086.
Action 16: Walk to ironing_board_2074.
Action 17: Put clothes_shirt_2086 on ironing_board_2074.
Action 18: look for iron_2089 around ironing_board_2074.
Action 19: Walk to iron_2089.
Action 20: Plug in iron_2089.
Action 21: Switch on iron_2089.
Action 22: Observe around iron_2089 with the question of Check if the iron can be used on the shirt.
Action 23: Walk to clothes_shirt_2086.
Action 24: Walk to clothes_shirt_2086.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2083_around_stove_2065(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2065
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_chair_106_around_table_107(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==107
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(chair,table_instance)
        else:
            exp(chair,table_instance)
    eff:
        unknown[chair]=False
        close[chair,table_instance]=True
        close[table_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior grab_iron_and_iron_shirt(iron:item, shirt:item, ironing_board:item):
    body:
        if not close_char(char, ironing_board):
            walk_to(ironing_board)
        if not close_char(char, shirt):
            walk_to(shirt)
        if not inhand(shirt):
            grab(shirt)
        if not on(shirt, ironing_board):
            put_on(shirt, ironing_board)
        if not close_char(char, iron):
            walk_to(iron)
        if not plugged(iron):
            plugin(iron)
        if is_off(iron):
            switch_on(iron)
        if not visited(shirt):
            observe(shirt, "Check if clothes_shirt_2086 is ironed")
        # Ensure the shirt is ironed
        if inhand(shirt):
            empty_a_hand()

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)

        grab_iron_and_iron_shirt(iron, clothes_shirt, ironing_board)


#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior grab_iron_and_iron_shirt(iron:item, shirt:item, ironing_board:item):
    body:
        if not close_char(char, ironing_board):
            walk_to(ironing_board)
        if not close_char(char, shirt):
            walk_to(shirt)
        if not inhand(shirt):
            grab(shirt)
        if not on(shirt, ironing_board):
            put_on(shirt, ironing_board)
        if not close_char(char, iron):
            walk_to(iron)
        if not plugged(iron):
            plugin(iron)
        if is_off(iron):
            switch_on(iron)
        if not visited(shirt):
            observe(shirt, "Check if clothes_shirt_2086 is ironed")
        # Ensure the shirt is ironed
        if inhand(shirt):
            empty_a_hand()

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)

        grab_iron_and_iron_shirt(iron, clothes_shirt, ironing_board)


##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2086)put_executor(clothes_shirt_2086, ironing_board_2074)walk_executor(iron_2089)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Check if clothes_shirt_2086 is ironed)
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the clothes_shirt_2086. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
put_executor(clothes_shirt_2086, ironing_board_2074)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the clothes_shirt_2086. clothes_shirt_2086 is close ironing_board_2074. clothes_shirt_2086 is on ironing_board_2074. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
walk_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. 
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the clothes_shirt_2086. 
##############################
From agent.py
obs(clothes_shirt_2086, Check if clothes_shirt_2086 is ironed)
Get this information:  clothes_shirt_2086 is close to ironing_board_2074. clothes_shirt_2086 is close to character_65. clothes_shirt_2086 is inside bathroom_1. clothes_shirt_2086 is on ironing_board_2074. clothes_shirt_2086 is DIRTY.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to actually use the iron on clothes_shirt_2086 to complete the ironing task. While the shirt was placed on the ironing board and the iron was plugged in and switched on, there is no action that indicates the robot has ironed the shirt. You need to ensure the iron is applied to the shirt.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_405_around_bed_105(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==105
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        if not close_char(char, shirt):
            walk_to(shirt)
        if not inhand(shirt):
            grab(shirt)
        if not on(shirt, bed):
            put_on(shirt, bed)

behavior __goal__():
    body:
        bind bed: item where:
            is_bed(bed) 
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086 
        put_shirt_on_bed(shirt, bed) 

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior put_shirt_on_bed(shirt:item, bed:item):
    body:
        if not close_char(char, shirt):
            walk_to(shirt)
        if not inhand(shirt):
            grab(shirt)
        if not on(shirt, bed):
            put_on(shirt, bed)

behavior __goal__():
    body:
        bind bed: item where:
            is_bed(bed) 
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086 
        put_shirt_on_bed(shirt, bed) 

##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2086)walk_executor(bed_105)put_executor(clothes_shirt_2086, bed_105)
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the clothes_shirt_2086. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(bed_105)
Robot find: mat_173, drawing_176, pillow_183, clothes_underwear_2049, clothes_dress_2044, pillow_182, chair_106, clothes_scarf_2048, Robot is close to the clothes_shirt_2086. Robot is close to the bed_105. Robot is close to the mat_173. 
##############################
From agent.py
put_executor(clothes_shirt_2086, bed_105)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the bed_105. Robot is close to the mat_173. bed_105 is close clothes_shirt_2086. clothes_shirt_2086 is close bed_105. clothes_shirt_2086 is on bed_105. clothes_shirt_2086 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Iron a shirt, and put it in on the bed.
Action History:
['walk_executor(closetdrawer_143)', 'walk_executor(closetdrawer_143)', 'walk_executor(closetdrawer_143)', 'walk_executor(closetdrawer_143)', 'walk_executor(closetdrawer_143)', 'walk_executor(closetdrawer_143)', 'walk_executor(basket_for_clothes_2006)', 'grab_executor(clothes_shirt_2086)', 'walk_executor(ironing_board_2074)', 'put_executor(clothes_shirt_2086, ironing_board_2074)', 'walk_executor(iron_2089)', 'plugin_executor(iron_2089)', 'switchon_executor(iron_2089)', 'walk_executor(clothes_shirt_2086)', 'walk_executor(clothes_shirt_2086)', 'grab_executor(clothes_shirt_2086)', 'put_executor(clothes_shirt_2086, ironing_board_2074)', 'walk_executor(iron_2089)', 'walk_executor(clothes_shirt_2086)', 'grab_executor(clothes_shirt_2086)', 'walk_executor(bed_105)', 'put_executor(clothes_shirt_2086, bed_105)']
Time info:
Time consume: 148 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 95
goal generate times: 4
goal correct times: 0
action_num: 22

Task complete rate:
Keystate: k1 - Requires: 6 steps
Keystate: k2 - Requires: 0 steps
Action Completion Rate: 0.0
Scene_id: 0
##############################
