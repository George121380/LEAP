From agent.py
Reset goals: The sub-goals are: 
['Get a cup of water and add some sliced kiwi inside.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_kiwi_2054_around_fridge_126(food_kiwi:item):
    goal: not unknown(food_kiwi)
    body:
        assert is_food_kiwi(food_kiwi)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_kiwi,fridge_instance)
        else:
            exp(food_kiwi,fridge_instance)
    eff:
        unknown[food_kiwi]=False
        close[food_kiwi,fridge_instance]=True
        close[fridge_instance,food_kiwi]=True
    

behavior find_knife_2122_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_cup_2132_around_cupboard_117(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_with_water_and_kiwi(cup:item, kiwi:item):
    body:
        achieve has_water(cup)
        # Fill the cup with water
        achieve_once cut(kiwi)
        # Cut the kiwi into pieces
        achieve_once inside(kiwi, cup)
        # Add the sliced kiwi into the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup
        bind kiwi: item where:
            is_food_kiwi(kiwi)
        # Select a kiwi
        fill_with_water_and_kiwi(cup, kiwi)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior fill_with_water_and_kiwi(cup:item, kiwi:item):
    body:
        achieve has_water(cup)
        # Fill the cup with water
        achieve_once cut(kiwi)
        # Cut the kiwi into pieces
        achieve_once inside(kiwi, cup)
        # Add the sliced kiwi into the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup
        bind kiwi: item where:
            is_food_kiwi(kiwi)
        # Select a kiwi
        fill_with_water_and_kiwi(cup, kiwi)

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(cup_2132, cupboard_117)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_kiwi_2054, fridge_126)walk_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cutting_board_2123)put_executor(food_kiwi_2054, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_kiwi_2054)cut_executor(food_kiwi_2054)walk_executor(kitchen_counter_119)put_executor(knife_2122, kitchen_counter_119)walk_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cup_2132)putin_executor(food_kiwi_2054, cup_2132)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, pot_78, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(cup_2132, cupboard_117)
Fail to find cup_2132 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(cup_2132, table_114)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_kiwi_2054, fridge_126)walk_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cutting_board_2123)put_executor(food_kiwi_2054, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_kiwi_2054)cut_executor(food_kiwi_2054)walk_executor(kitchen_counter_119)put_executor(knife_2122, kitchen_counter_119)walk_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cup_2132)putin_executor(food_kiwi_2054, cup_2132)
##############################
From agent.py
walk_executor(table_114)
Robot find: mat_102, cup_2049, pillow_103, pillow_104, pillow_105, pillow_106, lighter_2004, lighter_2039, box_2038, clothes_hat_2117, milk_2115, cup_2134, check_2058, drawing_110, drawing_111, clothes_gloves_2118, cup_2132, food_bread_2084, dry_pasta_2114, knife_2122, cup_2133, table_cloth_2005, food_food_2021, Robot is close to the table_114. Robot is close to the mat_102. 
##############################
From agent.py
exp(cup_2132, table_114)
Find cup_2132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_kiwi_2054, fridge_126)walk_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cutting_board_2123)put_executor(food_kiwi_2054, cutting_board_2123)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_kiwi_2054)cut_executor(food_kiwi_2054)walk_executor(kitchen_counter_119)put_executor(knife_2122, kitchen_counter_119)walk_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cup_2132)putin_executor(food_kiwi_2054, cup_2132)
##############################
From agent.py
walk_executor(cup_2132)
Robot find: Robot is close to the table_114. Robot is close to the cup_2132. 
##############################
From agent.py
grab_executor(cup_2132)
Robot find: Robot is close to the table_114. Robot is close to the cup_2132. Grabbing cup_2132 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot find: mat_32, phone_2029, drawing_33, Robot is close to the cup_2132. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchon_executor(faucet_20)
Robot find: Robot is close to the cup_2132. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot find: Robot is close to the cup_2132. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned off. 
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the cup_2132. Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the cup_2132. Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the cup_2132. Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_kiwi_2054, fridge_126)
Fail to find food_kiwi_2054 around fridge_126. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_cloth_2005)exp(food_kiwi_2054, table_cloth_2005)walk_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cutting_board_2123)put_executor(food_kiwi_2054, cutting_board_2123)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_kiwi_2054)cut_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cup_2132)putin_executor(food_kiwi_2054, cup_2132)
##############################
From agent.py
walk_executor(table_cloth_2005)
Robot find: food_butter_2007, Robot is close to the cup_2132. Robot is close to the table_114. Robot is close to the table_cloth_2005. 
##############################
From agent.py
exp(food_kiwi_2054, table_cloth_2005)
Fail to find food_kiwi_2054 around table_cloth_2005. 
##############################
From agent.py-> find a plan in act()
walk_executor(mousepad_214)exp(food_kiwi_2054, mousepad_214)walk_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cutting_board_2123)put_executor(food_kiwi_2054, cutting_board_2123)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_kiwi_2054)cut_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cup_2132)putin_executor(food_kiwi_2054, cup_2132)
##############################
From agent.py
walk_executor(mousepad_214)
Robot find: mouse_213, keyboard_211, chair_194, check_2026, laser_pointer_2034, Robot is close to the cup_2132. Robot is close to the desk_193. Robot is close to the mousepad_214. 
##############################
From agent.py
exp(food_kiwi_2054, mousepad_214)
Fail to find food_kiwi_2054 around mousepad_214. 
##############################
From agent.py-> find a plan in act()
walk_executor(milk_2115)exp(food_kiwi_2054, milk_2115)walk_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cutting_board_2123)put_executor(food_kiwi_2054, cutting_board_2123)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_kiwi_2054)cut_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cup_2132)putin_executor(food_kiwi_2054, cup_2132)
##############################
From agent.py
walk_executor(milk_2115)
Robot find: Robot is close to the cup_2132. Robot is close to the table_114. Robot is close to the milk_2115. 
##############################
From agent.py
exp(food_kiwi_2054, milk_2115)
Fail to find food_kiwi_2054 around milk_2115. 
##############################
From agent.py-> find a plan in act()
walk_executor(curtain_206)exp(food_kiwi_2054, curtain_206)walk_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cutting_board_2123)put_executor(food_kiwi_2054, cutting_board_2123)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_kiwi_2054)cut_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cup_2132)putin_executor(food_kiwi_2054, cup_2132)
##############################
From agent.py
walk_executor(curtain_206)
Robot find: mat_203, drawing_201, Robot is close to the cup_2132. Robot is close to the curtain_206. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find food_kiwi_2054 ?
Answer: Robot, you can find the target item, food_kiwi_2054, in the dining_room_41. It is located on the kitchen_counter_123.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, you can find the target item, food_kiwi_2054, in the dining_room_41. It is located on the kitchen_counter_123.

The actions you have taken:
Action 1: Walk to cupboard_117.
Action 2: look for cup_2132 around cupboard_117.
Action 3: Walk to table_114.
Action 4: look for cup_2132 around table_114.
Action 5: Walk to cup_2132.
Action 6: Grab cup_2132.
Action 7: Walk to faucet_20.
Action 8: Switch on faucet_20.
Action 9: Switch off faucet_20.
Action 10: Walk to fridge_126.
Action 11: Switch off fridge_126.
Action 12: Open fridge_126.
Action 13: look for food_kiwi_2054 around fridge_126.
Action 14: Walk to table_cloth_2005.
Action 15: look for food_kiwi_2054 around table_cloth_2005.
Action 16: Walk to mousepad_214.
Action 17: look for food_kiwi_2054 around mousepad_214.
Action 18: Walk to milk_2115.
Action 19: look for food_kiwi_2054 around milk_2115.
Action 20: Walk to curtain_206.

##############################
From agent.py
exp(food_kiwi_2054, curtain_206)
Fail to find food_kiwi_2054 around curtain_206. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(food_kiwi_2054, kitchen_counter_123)walk_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cutting_board_2123)put_executor(food_kiwi_2054, cutting_board_2123)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_kiwi_2054)cut_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cup_2132)putin_executor(food_kiwi_2054, cup_2132)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Robot find: tray_2068, oil_2149, knife_2035, food_kiwi_2054, food_orange_2027, Robot is close to the cup_2132. Robot is close to the kitchen_counter_123. 
##############################
From agent.py
exp(food_kiwi_2054, kitchen_counter_123)
Find food_kiwi_2054. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cutting_board_2123)put_executor(food_kiwi_2054, cutting_board_2123)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_kiwi_2054)cut_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cup_2132)putin_executor(food_kiwi_2054, cup_2132)
##############################
From agent.py
walk_executor(food_kiwi_2054)
Robot find: Robot is close to the cup_2132. Robot is close to the kitchen_counter_123. Robot is close to the food_kiwi_2054. 
##############################
From agent.py
grab_executor(food_kiwi_2054)
Robot find: Robot is close to the cup_2132. Robot is close to the kitchen_counter_123. Robot is close to the food_kiwi_2054. Grabbing food_kiwi_2054 by left hand. 
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the cup_2132. Robot is close to the food_kiwi_2054. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_kiwi_2054, cutting_board_2123)
Robot find: Robot is close to the cup_2132. Robot is close to the food_kiwi_2054. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. cutting_board_2123 is close food_kiwi_2054. food_kiwi_2054 is close cutting_board_2123. food_kiwi_2054 is on cutting_board_2123. food_kiwi_2054 released by left hand. 
##############################
From agent.py
walk_executor(knife_2122)
Robot find: Robot is close to the cup_2132. Robot is close to the knife_2122. Robot is close to the table_114. 
##############################
From agent.py
grab_executor(knife_2122)
Robot find: Robot is close to the cup_2132. Robot is close to the knife_2122. Robot is close to the table_114. Grabbing knife_2122 by left hand. 
##############################
From agent.py
walk_executor(food_kiwi_2054)
Robot find: Robot is close to the cup_2132. Robot is close to the knife_2122. Robot is close to the cutting_board_2123. Robot is close to the food_kiwi_2054. 
##############################
From agent.py
cut_executor(food_kiwi_2054)
Robot find: Robot is close to the cup_2132. Robot is close to the knife_2122. Robot is close to the cutting_board_2123. Robot is close to the food_kiwi_2054. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_measuring_cup_2012_around_sink_120(measuring_cup:item):
    goal: not unknown(measuring_cup)
    body:
        assert is_measuring_cup(measuring_cup)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(measuring_cup,sink_instance)
        else:
            exp(measuring_cup,sink_instance)
    eff:
        unknown[measuring_cup]=False
        close[measuring_cup,sink_instance]=True
        close[sink_instance,measuring_cup]=True
    

behavior find_food_cheese_2088_around_oven_127(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==127
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_cheese,oven_instance)
        else:
            exp(food_cheese,oven_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,oven_instance]=True
        close[oven_instance,food_cheese]=True
    

behavior find_knife_2122_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_cd_2145_around_box_2038(cd:item):
    goal: not unknown(cd)
    body:
        assert is_cd(cd)
        bind box_instance:item where:
            is_box(box_instance) and id[box_instance]==2038
        achieve close_char(char,box_instance)
        if can_open(box_instance):
            achieve_once open(box_instance)
            exp(cd,box_instance)
        else:
            exp(cd,box_instance)
    eff:
        unknown[cd]=False
        close[cd,box_instance]=True
        close[box_instance,cd]=True
    

#exp_behavior_end

#goal_representation

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        
        bind kitchen_counter: item where:
            is_kitchen_counter(kitchen_counter) and inside(kitchen_counter, dining_room)

        bind kiwi: item where:
            is_food_kiwi(kiwi) and on(kiwi, kitchen_counter)
        
        bind water_faucet: item where:
            is_faucet(water_faucet) and inside(water_faucet, dining_room)
        
        bind cup: item where:
            is_cup(cup) and has_water(cup)

        cut_kiwi_and_add_to_cup(kiwi, cup)
        add_water(cup, water_faucet)

behavior cut_kiwi_and_add_to_cup(kiwi: item, cup: item):
    body:
        achieve_once cut(kiwi)
        achieve_once inside(kiwi, cup)

behavior add_water(cup: item, faucet: item):
    body:
        achieve has_water(cup)


#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

'Function cut_kiwi_and_add_to_cup not found. Note that recursive function calls are not supported in the current version.'
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_knife_2035_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#goal_representation

behavior cut_kiwi_and_add_to_cup(kiwi: item, cup: item):
    body:
        achieve_once cut(kiwi)
        achieve_once inside(kiwi, cup)

behavior add_water(cup: item, faucet: item):
    body:
        achieve has_water(cup)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        
        bind kitchen_counter: item where:
            is_kitchen_counter(kitchen_counter) and inside(kitchen_counter, dining_room)

        bind kiwi: item where:
            is_food_kiwi(kiwi) and on(kiwi, kitchen_counter)
        
        bind water_faucet: item where:
            is_faucet(water_faucet) and inside(water_faucet, dining_room)
        
        bind cup: item where:
            is_cup(cup) and has_water(cup)

        cut_kiwi_and_add_to_cup(kiwi, cup)
        add_water(cup, water_faucet)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_measuring_cup_2012_around_cup_2049(measuring_cup:item):
    goal: not unknown(measuring_cup)
    body:
        assert is_measuring_cup(measuring_cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2049
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(measuring_cup,cup_instance)
        else:
            exp(measuring_cup,cup_instance)
    eff:
        unknown[measuring_cup]=False
        close[measuring_cup,cup_instance]=True
        close[cup_instance,measuring_cup]=True
    

behavior find_headset_2131_around_box_2038(headset:item):
    goal: not unknown(headset)
    body:
        assert is_headset(headset)
        bind box_instance:item where:
            is_box(box_instance) and id[box_instance]==2038
        achieve close_char(char,box_instance)
        if can_open(box_instance):
            achieve_once open(box_instance)
            exp(headset,box_instance)
        else:
            exp(headset,box_instance)
    eff:
        unknown[headset]=False
        close[headset,box_instance]=True
        close[box_instance,headset]=True
    

behavior find_knife_2037_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup]==2132
        # Select cup 2132

        bind food_kiwi: item where:
            is_food_kiwi(food_kiwi) and id[food_kiwi]==2054
        # Select kiwi with ID 2054

        behavior has_water_in_cup(cup:item):
            body:
                achieve has_water(cup)
        
        behavior slice_kiwi(kiwi: item, cutting_board: item, knife: item):
            body:
                achieve_once on(kiwi, cutting_board) # Place kiwi on cutting board
                achieve_once inhand(knife) # Take the knife in hand
                achieve cut(kiwi) # Cut the kiwi
        
        behavior put_kiwi_in_cup(kiwi:item, cup:item):
            body:
                achieve_once inside(kiwi, cup) # Put the sliced kiwi inside the cup
                
        behavior __goal__():
            body:
                bind cutting_board: item where:
                    is_cutting_board(cutting_board) and id[cutting_board]==2123
                # Select the cutting board 2123

                bind knife: item where:
                    is_knife(knife) and id[knife]==2122
                # Select the knife 2122

                has_water_in_cup(cup) # Fill the cup with water
                slice_kiwi(food_kiwi, cutting_board, knife) # Slice the kiwi
                put_kiwi_in_cup(food_kiwi, cup) # Put sliced kiwi into the cup

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('BEHAVIOR', 'behavior') at line 5529, column 9.
Expected one of: 
	* DO
	* PASS
	* PREAMBLE
	* NONE
	* PROMOTABLE
	* ACHIEVE_HOLD
	* SYMBOL
	* IF
	* FINDALL
	* ASSERT
	* LONG_STRING
	* STRING
	* NOT
	* UNORDERED
	* DEC_NUMBER
	* EXISTS
	* UNTRACK
	* ACHIEVE
	* FOREACH
	* OCT_NUMBER
	* PACHIEVE
	* HEX_NUMBER
	* TILDE
	* ALTERNATIVE
	* _DEDENT
	* PACHIEVE_ONCE
	* MINUS
	* IMAG_NUMBER
	* BIN_NUMBER
	* STAR
	* FALSE
	* ASSERT_HOLD
	* ELLIPSIS
	* FINDONE
	* VARNAME
	* BIND
	* COMMIT
	* _LLSQB
	* FLOAT_NUMBER
	* LET
	* LSQB
	* RETURN
	* FORALL
	* ACHIEVE_ONCE
	* SEQUENTIAL
	* PACHIEVE_HOLD
	* WHILE
	* CRITICAL
	* COLON
	* ASSERT_ONCE
	* LPAR
	* PLUS
	* TRUE

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_knife_2035_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#goal_representation

behavior has_water_in_cup(cup:item):
    body:
        achieve has_water(cup)

behavior slice_kiwi(kiwi: item, cutting_board: item, knife: item):
    body:
        achieve_once on(kiwi, cutting_board) # Place kiwi on cutting board
        achieve_once inhand(knife) # Take the knife in hand
        achieve cut(kiwi) # Cut the kiwi

behavior put_kiwi_in_cup(kiwi:item, cup:item):
    body:
        achieve_once inside(kiwi, cup) # Put the sliced kiwi inside the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup]==2132
        # Select cup 2132

        bind food_kiwi: item where:
            is_food_kiwi(food_kiwi) and id[food_kiwi]==2054
        # Select kiwi with ID 2054

        bind cutting_board: item where:
            is_cutting_board(cutting_board) and id[cutting_board]==2123
        # Select the cutting board 2123

        bind knife: item where:
            is_knife(knife) and id[knife]==2122
        # Select the knife 2122

        has_water_in_cup(cup) # Fill the cup with water
        slice_kiwi(food_kiwi, cutting_board, knife) # Slice the kiwi
        put_kiwi_in_cup(food_kiwi, cup) # Put sliced kiwi into the cup

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior has_water_in_cup(cup:item):
    body:
        achieve has_water(cup)

behavior slice_kiwi(kiwi: item, cutting_board: item, knife: item):
    body:
        achieve_once on(kiwi, cutting_board) # Place kiwi on cutting board
        achieve_once inhand(knife) # Take the knife in hand
        achieve cut(kiwi) # Cut the kiwi

behavior put_kiwi_in_cup(kiwi:item, cup:item):
    body:
        achieve_once inside(kiwi, cup) # Put the sliced kiwi inside the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup]==2132
        # Select cup 2132

        bind food_kiwi: item where:
            is_food_kiwi(food_kiwi) and id[food_kiwi]==2054
        # Select kiwi with ID 2054

        bind cutting_board: item where:
            is_cutting_board(cutting_board) and id[cutting_board]==2123
        # Select the cutting board 2123

        bind knife: item where:
            is_knife(knife) and id[knife]==2122
        # Select the knife 2122

        has_water_in_cup(cup) # Fill the cup with water
        slice_kiwi(food_kiwi, cutting_board, knife) # Slice the kiwi
        put_kiwi_in_cup(food_kiwi, cup) # Put sliced kiwi into the cup

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)put_executor(knife_2122, kitchen_counter_119)walk_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cup_2132)putin_executor(food_kiwi_2054, cup_2132)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: Robot is close to the cup_2132. Robot is close to the knife_2122. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(knife_2122, kitchen_counter_119)
Robot find: Robot is close to the cup_2132. Robot is close to the knife_2122. Robot is close to the kitchen_counter_119. kitchen_counter_119 is close knife_2122. knife_2122 is close kitchen_counter_119. knife_2122 is on kitchen_counter_119. knife_2122 released by left hand. 
##############################
From agent.py
walk_executor(food_kiwi_2054)
Robot find: Robot is close to the cup_2132. Robot is close to the cutting_board_2123. Robot is close to the food_kiwi_2054. 
##############################
From agent.py
grab_executor(food_kiwi_2054)
Robot find: Robot is close to the cup_2132. Robot is close to the cutting_board_2123. Robot is close to the food_kiwi_2054. Grabbing food_kiwi_2054 by left hand. 
##############################
From agent.py
walk_executor(cup_2132)
Robot find: Robot is close to the cup_2132. Robot is close to the food_kiwi_2054. 
##############################
From agent.py
putin_executor(food_kiwi_2054, cup_2132)
Robot find: Robot is close to the cup_2132. Robot is close to the food_kiwi_2054. cup_2132 is close food_kiwi_2054. food_kiwi_2054 is inside cup_2132. food_kiwi_2054 is close cup_2132. food_kiwi_2054 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Get a cup of water and add some sliced kiwi inside.
Action History:
['walk_executor(cupboard_117)', 'walk_executor(table_114)', 'walk_executor(cup_2132)', 'grab_executor(cup_2132)', 'walk_executor(faucet_20)', 'switchon_executor(faucet_20)', 'switchoff_executor(faucet_20)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'walk_executor(table_cloth_2005)', 'walk_executor(mousepad_214)', 'walk_executor(milk_2115)', 'walk_executor(curtain_206)', 'walk_executor(kitchen_counter_123)', 'walk_executor(food_kiwi_2054)', 'grab_executor(food_kiwi_2054)', 'walk_executor(cutting_board_2123)', 'put_executor(food_kiwi_2054, cutting_board_2123)', 'walk_executor(knife_2122)', 'grab_executor(knife_2122)', 'walk_executor(food_kiwi_2054)', 'cut_executor(food_kiwi_2054)', 'grab_executor(food_kiwi_2054) (Failed)', 'walk_executor(kitchen_counter_119)', 'put_executor(knife_2122, kitchen_counter_119)', 'walk_executor(food_kiwi_2054)', 'grab_executor(food_kiwi_2054)', 'walk_executor(cup_2132)', 'putin_executor(food_kiwi_2054, cup_2132)']
Time info:
Time consume: 241 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 27
goal generate times: 3
goal correct times: 1
action_num: 30

Task complete rate:
1
Scene_id: 1
##############################
