From agent.py
Reset goals: The sub-goals are: 
['1. Find the shirt that needs to be ironed.', '2. Iron the shirt.', '3. Place the ironed shirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2086_around_ironing_board_2074(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_shirt,ironing_board_instance)
        else:
            exp(clothes_shirt,ironing_board_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,ironing_board_instance]=True
        close[ironing_board_instance,clothes_shirt]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        # Bind a shirt based on the available category and properties
        bind shirt: item where:
            is_clothes_shirt(shirt)
        
        # If a shirt is found, observe it for its current state
        observe(shirt, "Identify if the shirt needs to be ironed")
        
        # Ensure the character is close to the shirt after identifying it
        achieve close_char(char, shirt)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior __goal__():
    body:
        # Bind a shirt based on the available category and properties
        bind shirt: item where:
            is_clothes_shirt(shirt)
        
        # If a shirt is found, observe it for its current state
        observe(shirt, "Identify if the shirt needs to be ironed")
        
        # Ensure the character is close to the shirt after identifying it
        achieve close_char(char, shirt)

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2074)exp(clothes_shirt_2086, ironing_board_2074)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Identify if the shirt needs to be ironed)
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: iron_2089, Robot is close to the ironing_board_2074. 
##############################
From agent.py
exp(clothes_shirt_2086, ironing_board_2074)
Fail to find clothes_shirt_2086 around ironing_board_2074. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_117)exp(clothes_shirt_2086, closetdrawer_117)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Identify if the shirt needs to be ironed)
##############################
From agent.py
walk_executor(closetdrawer_117)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_117)
Fail to find clothes_shirt_2086 around closetdrawer_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_117)exp(clothes_shirt_2086, closetdrawer_117)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Identify if the shirt needs to be ironed)
##############################
From agent.py
walk_executor(closetdrawer_117)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_117)
Fail to find clothes_shirt_2086 around closetdrawer_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_117)exp(clothes_shirt_2086, closetdrawer_117)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Identify if the shirt needs to be ironed)
##############################
From agent.py
walk_executor(closetdrawer_117)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_117)
Fail to find clothes_shirt_2086 around closetdrawer_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_117)exp(clothes_shirt_2086, closetdrawer_117)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Identify if the shirt needs to be ironed)
##############################
From agent.py
walk_executor(closetdrawer_117)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_117)
Fail to find clothes_shirt_2086 around closetdrawer_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_117)exp(clothes_shirt_2086, closetdrawer_117)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Identify if the shirt needs to be ironed)
##############################
From agent.py
walk_executor(closetdrawer_117)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2086 ?
Answer: The target item, clothes_shirt_2086, is located inside basket_for_clothes_2006, which is in bathroom_1. Please head to bathroom_1 and look for the basket for clothes; the shirt will be inside it.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item, clothes_shirt_2086, is located inside basket_for_clothes_2006, which is in bathroom_1. Please head to bathroom_1 and look for the basket for clothes; the shirt will be inside it.

The actions you have taken:
Action 1: Walk to ironing_board_2074.
Action 2: look for clothes_shirt_2086 around ironing_board_2074.
Action 3: Walk to closetdrawer_117.
Action 4: look for clothes_shirt_2086 around closetdrawer_117.
Action 5: Walk to closetdrawer_117.
Action 6: look for clothes_shirt_2086 around closetdrawer_117.
Action 7: Walk to closetdrawer_117.
Action 8: look for clothes_shirt_2086 around closetdrawer_117.
Action 9: Walk to closetdrawer_117.
Action 10: look for clothes_shirt_2086 around closetdrawer_117.
Action 11: Walk to closetdrawer_117.

##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_117)
Fail to find clothes_shirt_2086 around closetdrawer_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)exp(clothes_shirt_2086, basket_for_clothes_2006)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Identify if the shirt needs to be ironed)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Robot find: clothes_pants_2085, clothes_shirt_2086, clothes_socks_2087, clothes_skirt_2088, towel_rack_31, towel_rack_33, towel_rack_32, towel_rack_34, mat_22, Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
exp(clothes_shirt_2086, basket_for_clothes_2006)
Find clothes_shirt_2086. 
##############################
From agent.py-> find a plan in act()
obs(clothes_shirt_2086, Identify if the shirt needs to be ironed)
##############################
From agent.py
obs(clothes_shirt_2086, Identify if the shirt needs to be ironed)
Get this information:  clothes_shirt_2086 is close to basket_for_clothes_2006. clothes_shirt_2086 is close to character_65. clothes_shirt_2086 is inside bathroom_1. clothes_shirt_2086 is inside basket_for_clothes_2006. clothes_shirt_2086 is DIRTY.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt]==2086
        # Select the shirt with ID 2086

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board
        
        bind iron: item where:
            is_iron(iron)
        # Select an iron
        
        achieve_once on(clothes_shirt, ironing_board)
        # Place the shirt on the ironing board
        
        achieve plugged(iron)
        # Plug in the iron

        achieve is_on(iron)
        # Turn on the iron

        # Iron the shirt
        achieve clean(clothes_shirt)
        # Shirt is ironed and clean
        
        achieve is_off(iron)
        # Turn off the iron

        achieve unplugged(iron)
        # Unplug the iron

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
def is_shirt(x: item):
    # Function to check if an item is a shirt
    return is_clothes_shirt(x)

def is_bathroom(y: item):
    # Function to check if an item is a bathroom
    return is_bathroom(y)

behavior iron_shirt(shirt: item, iron: item, ironing_board: item):
    body:
        achieve_once clean(shirt)
        # Ensure the shirt is clean
        achieve_once inhand(shirt)
        # Hold the shirt
        achieve_once on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve_once plugged(iron)
        # Ensure the iron is plugged in
        achieve_once is_on(iron)
        # Turn on the iron
        achieve_once clean(shirt)
        # Ensure the shirt is ironed

behavior __goal__():
    body:
        bind shirt: item where:
            is_shirt(shirt) and inside(shirt, bathroom_1)
        # Bind the shirt item that needs to be ironed, ensuring it is in bathroom_1
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Bind an ironing board item

        bind iron: item where:
            is_iron(iron)
        # Bind an iron item

        iron_shirt(shirt, iron, ironing_board)
        # Call the iron_shirt behavior to iron the shirt

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: bathroom_1; available variables: [Variable<shirt: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_soap_2054_around_bathroom_cabinet_40(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#goal_representation
 
def is_shirt(x: item):
    # Function to check if an item is a shirt
    return is_clothes_shirt(x)

def is_bathroom(y: item):
    # Function to check if an item is a bathroom
    return is_bathroom(y)

behavior iron_shirt(shirt: item, iron: item, ironing_board: item):
    body:
        achieve_once clean(shirt)
        # Ensure the shirt is clean
        achieve_once inhand(shirt)
        # Hold the shirt
        achieve_once on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve_once plugged(iron)
        # Ensure the iron is plugged in
        achieve_once is_on(iron)
        # Turn on the iron
        achieve_once clean(shirt)
        # Ensure the shirt is ironed

behavior __goal__():
    body:
        bind shirt: item where:
            is_shirt(shirt) and inside(shirt, basket_for_clothes_2006)
        # Bind the shirt item that needs to be ironed, ensuring it is in basket_for_clothes_2006
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Bind an ironing board item

        bind iron: item where:
            is_iron(iron)
        # Bind an iron item

        iron_shirt(shirt, iron, ironing_board)
        # Call the iron_shirt behavior to iron the shirt

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: basket_for_clothes_2006; available variables: [Variable<shirt: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_hat_2045_around_closetdrawer_117(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==117
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_hat,closetdrawer_instance)
        else:
            exp(clothes_hat,closetdrawer_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_hat]=True
    

behavior find_clothes_jacket_2047_around_closetdrawer_117(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==117
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

#goal_representation
 
def is_shirt(x: item):
    # Function to check if an item is a shirt
    return is_clothes_shirt(x)

def is_bathroom(y: item):
    # Function to check if an item is a bathroom
    return is_bathroom(y)

def is_basket_for_clothes(x: item):
    # Function to check if an item is a basket for clothes
    return is_basket_for_clothes(x)

behavior iron_shirt(shirt: item, iron: item, ironing_board: item):
    body:
        achieve_once clean(shirt)
        # Ensure the shirt is clean
        achieve_once inhand(shirt)
        # Hold the shirt
        achieve_once on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve_once plugged(iron)
        # Ensure the iron is plugged in
        achieve_once is_on(iron)
        # Turn on the iron
        achieve_once clean(shirt)
        # Ensure the shirt is ironed

behavior __goal__():
    body:
        bind shirt: item where:
            is_shirt(shirt) and inside(shirt, basket_for_clothes_2006)
        # Bind the shirt item that needs to be ironed, ensuring it is in basket_for_clothes_2006

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Bind an ironing board item

        bind iron: item where:
            is_iron(iron)
        # Bind an iron item

        iron_shirt(shirt, iron, ironing_board)
        # Call the iron_shirt behavior to iron the shirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt: item, iron_board: item, iron: item):
    body:
        achieve_once on(shirt, iron_board)
        # Place the shirt on the ironing board for ironing
        achieve plugged(iron)
        # Plug in the iron to prepare for use
        achieve is_on(iron)
        # Turn the iron on in preparation for ironing
        # Use the iron to remove wrinkles from the shirt
        if not clean(shirt):
            # If the shirt is not already clean, scrubstain iron it to clean
            scrub(shirt)
        else:
            touch(shirt)
            # If the shirt is clean, proceed to touchpatinai_ron it with a clean iron

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Bind the target shirt to iron
        bind iron_board: item where:
            is_ironing_board(iron_board) and id[iron_board] == 2074
        # Bind an ironing board for placing the shirt
        bind iron: item where:
            is_iron(iron)
        # Bind an iron for the ironing process
        iron_shirt(shirt, iron_board, iron)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_shirt(shirt: item, iron_board: item, iron: item):
    body:
        achieve_once on(shirt, iron_board)
        # Place the shirt on the ironing board for ironing
        achieve plugged(iron)
        # Plug in the iron to prepare for use
        achieve is_on(iron)
        # Turn the iron on in preparation for ironing
        # Use the iron to remove wrinkles from the shirt
        if not clean(shirt):
            # If the shirt is not already clean, scrubstain iron it to clean
            scrub(shirt)
        else:
            touch(shirt)
            # If the shirt is clean, proceed to touchpatinai_ron it with a clean iron

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Bind the target shirt to iron
        bind iron_board: item where:
            is_ironing_board(iron_board) and id[iron_board] == 2074
        # Bind an ironing board for placing the shirt
        bind iron: item where:
            is_iron(iron)
        # Bind an iron for the ironing process
        iron_shirt(shirt, iron_board, iron)

##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2086)walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)plugin_executor(iron_2089)switchon_executor(iron_2089)walk_executor(clothes_shirt_2086)scrub_executor(clothes_shirt_2086)
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the ironing_board_2074. 
##############################
From agent.py
put_executor(clothes_shirt_2086, ironing_board_2074)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the ironing_board_2074. ironing_board_2074 is close clothes_shirt_2086. clothes_shirt_2086 is close ironing_board_2074. clothes_shirt_2086 is on ironing_board_2074. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
plugin_executor(iron_2089)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the ironing_board_2074. iron_2089 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2089)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the ironing_board_2074. iron_2089 is turned on. 
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the ironing_board_2074. 
##############################
From agent.py
scrub_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the ironing_board_2074. clothes_shirt_2086 is cleaned. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_hanger_113_around_closetdrawer_117(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==117
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(hanger,closetdrawer_instance)
        else:
            exp(hanger,closetdrawer_instance)
    eff:
        unknown[hanger]=False
        close[hanger,closetdrawer_instance]=True
        close[closetdrawer_instance,hanger]=True
    

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_mat_401_around_bathtub_30(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind bathtub_instance:item where:
            is_bathtub(bathtub_instance) and id[bathtub_instance]==30
        achieve close_char(char,bathtub_instance)
        if can_open(bathtub_instance):
            achieve_once open(bathtub_instance)
            exp(mat,bathtub_instance)
        else:
            exp(mat,bathtub_instance)
    eff:
        unknown[mat]=False
        close[mat,bathtub_instance]=True
        close[bathtub_instance,mat]=True
    

#exp_behavior_end

#goal_representation
behavior place_shirt_on_bed(clothes_shirt:item, bed:item):
    body:
        achieve_once on(clothes_shirt, bed)

behavior locate_and_place_shirt_on_bed():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt]==2086
        bind bed: item where:
            is_bed(bed)
        observe(bed, "Check if the bed is suitable for placing clothes_shirt_2086")
        place_shirt_on_bed(clothes_shirt, bed)

behavior __goal__():
    body:
        locate_and_place_shirt_on_bed()
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior place_shirt_on_bed(clothes_shirt:item, bed:item):
    body:
        achieve_once on(clothes_shirt, bed)

behavior locate_and_place_shirt_on_bed():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt]==2086
        bind bed: item where:
            is_bed(bed)
        observe(bed, "Check if the bed is suitable for placing clothes_shirt_2086")
        place_shirt_on_bed(clothes_shirt, bed)

behavior __goal__():
    body:
        locate_and_place_shirt_on_bed()
##############################
From agent.py-> find a plan in act()
walk_executor(bed_105)obs(bed_105, Check if the bed is suitable for placing clothes_shirt_2086)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(bed_105)put_executor(clothes_shirt_2086, bed_105)
##############################
From agent.py
walk_executor(bed_105)
Robot find: mat_173, drawing_176, pillow_183, clothes_underwear_2049, clothes_dress_2044, pillow_182, chair_106, clothes_scarf_2048, Robot is close to the bed_105. Robot is close to the mat_173. 
##############################
From agent.py
obs(bed_105, Check if the bed is suitable for placing clothes_shirt_2086)
Get this information:  bed_105 is facing drawing_176. pillow_183 is on bed_105. clothes_underwear_2049 is on bed_105. clothes_dress_2044 is on bed_105. bed_105 is close to clothes_scarf_2048. bed_105 is close to clothes_underwear_2049. bed_105 is close to mat_173. bed_105 is close to curtain_179. bed_105 is close to curtain_180. bed_105 is close to curtain_181. bed_105 is close to pillow_182. bed_105 is close to pillow_183. bed_105 is close to floor_68. bed_105 is close to floor_69. bed_105 is close to floor_70. bed_105 is close to floor_71. bed_105 is close to floor_73. bed_105 is close to wall_80. bed_105 is close to wall_81. bed_105 is close to wall_82. bed_105 is close to window_86. bed_105 is close to tablelamp_97. bed_105 is close to tablelamp_98. bed_105 is close to nightstand_100. bed_105 is close to nightstand_102. bed_105 is close to clothes_dress_2044. bed_105 is close to character_65. bed_105 is on mat_173. bed_105 is on floor_70. bed_105 is inside bedroom_67. pillow_182 is on bed_105. clothes_scarf_2048 is on bed_105. bed_105 is CLEAN.
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the clothes_shirt_2086. 
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the clothes_shirt_2086. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(bed_105)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the bed_105. Robot is close to the mat_173. 
##############################
From agent.py
put_executor(clothes_shirt_2086, bed_105)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the bed_105. Robot is close to the mat_173. bed_105 is close clothes_shirt_2086. clothes_shirt_2086 is close bed_105. clothes_shirt_2086 is on bed_105. clothes_shirt_2086 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Iron a shirt, and put it in on the bed.
Action History:
['walk_executor(ironing_board_2074)', 'walk_executor(closetdrawer_117)', 'walk_executor(closetdrawer_117)', 'walk_executor(closetdrawer_117)', 'walk_executor(closetdrawer_117)', 'walk_executor(closetdrawer_117)', 'walk_executor(basket_for_clothes_2006)', 'grab_executor(clothes_shirt_2086)', 'walk_executor(ironing_board_2074)', 'put_executor(clothes_shirt_2086, ironing_board_2074)', 'plugin_executor(iron_2089)', 'switchon_executor(iron_2089)', 'walk_executor(clothes_shirt_2086)', 'scrub_executor(clothes_shirt_2086)', 'walk_executor(bed_105)', 'walk_executor(clothes_shirt_2086)', 'grab_executor(clothes_shirt_2086)', 'walk_executor(bed_105)', 'put_executor(clothes_shirt_2086, bed_105)']
Time info:
Time consume: 242 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 102
goal generate times: 5
goal correct times: 0
action_num: 19

Task complete rate:
Keystate: k1 - Requires: 6 steps
Keystate: k2 - Requires: 0 steps
Action Completion Rate: 0.0
Scene_id: 0
##############################
