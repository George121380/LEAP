From agent.py
Reset goals: The sub-goals are: 
['Iron the pair of skirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_skirt_2116_around_cupboard_130(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(clothes_skirt,cupboard_instance)
        else:
            exp(clothes_skirt,cupboard_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,cupboard_instance]=True
        close[cupboard_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
def is_ironing_board_near_iron(iron:item):
    # Function to check if there is an ironing board close to a specified iron
    symbol near_ironing_board= exists o: item : (is_ironing_board(o) and close(o, iron))
    return near_ironing_board

behavior iron_clothes(clothes:item, iron:item):
    body:
        achieve_once on(clothes, ironing_board)
        # Place the clothes on the ironing board
        achieve_once is_on(iron)
        # Turn on the iron
        achieve_once clean(clothes)
        # Ensure the clothes are ironed and clean

behavior __goal__():
    body:
        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt)
        # Select the skirt to be ironed
        bind iron: item where:
            is_iron(iron)
        # Select the iron
            
        if is_ironing_board_near_iron(iron):
            bind ironing_board: item where:
                is_ironing_board(ironing_board) and close(ironing_board, iron)
            # Select the ironing board close to the iron
            iron_clothes(clothes_skirt, iron)
        else:
            foreach ironing_board: item:
                if is_ironing_board(ironing_board) and not visited(ironing_board):
                    observe(ironing_board,"Ensure it is close to the iron")
                    # Verify and place clothes on the ironing board
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board; available variables: [Variable<clothes: item>, Variable<iron: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_skirt_2116_around_cupboard_130(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(clothes_skirt,cupboard_instance)
        else:
            exp(clothes_skirt,cupboard_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,cupboard_instance]=True
        close[cupboard_instance,clothes_skirt]=True
    

#goal_representation
 
def is_ironing_board_near_iron(iron:item):
    # Function to check if there is an ironing board close to a specified iron
    symbol near_ironing_board = exists o: item : (is_ironing_board(o) and close(o, iron))
    return near_ironing_board

behavior iron_clothes(clothes: item, iron: item, ironing_board: item):
    body:
        achieve_once on(clothes, ironing_board)
        # Place the clothes on the ironing board
        achieve_once is_on(iron)
        # Turn on the iron
        achieve_once clean(clothes)
        # Ensure the clothes are ironed and clean

behavior __goal__():
    body:
        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt)
        # Select the skirt to be ironed
        bind iron: item where:
            is_iron(iron)
        # Select the iron
            
        if is_ironing_board_near_iron(iron):
            bind ironing_board: item where:
                is_ironing_board(ironing_board) and close(ironing_board, iron)
            # Select the ironing board close to the iron
            iron_clothes(clothes_skirt, iron, ironing_board)
        else:
            foreach ironing_board: item:
                if is_ironing_board(ironing_board) and not visited(ironing_board):
                    observe(ironing_board, "Ensure it is close to the iron")
                    # Verify and place clothes on the ironing board

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_ironing_board_near_iron(iron:item):
    # Function to check if there is an ironing board close to a specified iron
    symbol near_ironing_board = exists o: item : (is_ironing_board(o) and close(o, iron))
    return near_ironing_board

behavior iron_clothes(clothes: item, iron: item, ironing_board: item):
    body:
        achieve_once on(clothes, ironing_board)
        # Place the clothes on the ironing board
        achieve_once is_on(iron)
        # Turn on the iron
        achieve_once clean(clothes)
        # Ensure the clothes are ironed and clean

behavior __goal__():
    body:
        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt)
        # Select the skirt to be ironed
        bind iron: item where:
            is_iron(iron)
        # Select the iron
            
        if is_ironing_board_near_iron(iron):
            bind ironing_board: item where:
                is_ironing_board(ironing_board) and close(ironing_board, iron)
            # Select the ironing board close to the iron
            iron_clothes(clothes_skirt, iron, ironing_board)
        else:
            foreach ironing_board: item:
                if is_ironing_board(ironing_board) and not visited(ironing_board):
                    observe(ironing_board, "Ensure it is close to the iron")
                    # Verify and place clothes on the ironing board

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)obs(ironing_board_2099, Ensure it is close to the iron)
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: iron_2117, Robot is close to the ironing_board_2099. 
##############################
From agent.py
obs(ironing_board_2099, Ensure it is close to the iron)
Get this information:  ironing_board_2099 is close to bedroom_220. ironing_board_2099 is close to iron_2117. ironing_board_2099 is close to character_219. iron_2117 is on ironing_board_2099. ironing_board_2099 is inside bedroom_220.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to place the skirt on the ironing board, turn on the iron, and ensure the skirt is ironed.
##############################
From agent.py
Human Instruction: The robot needs to place the skirt on the ironing board, turn on the iron, and ensure the skirt is ironed.

The actions you have taken:
Action 1: Walk to ironing_board_2099.
Action 2: Observe around ironing_board_2099 with the question of Ensure it is close to the iron.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_skirt_2116_around_basket_for_clothes_2040(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
## Output:
def is_ironing_board_close_to_iron(ironing_board: item):
    # Function to check if the ironing board is close to the iron
    symbol close_to_iron= exists iron: item where (is_iron(iron) and close(ironing_board, iron))
    return close_to_iron

behavior place_skirt_on_ironing_board(skirt: item, ironing_board: item):
    body:
        achieve_once on(skirt, ironing_board)

behavior turn_on_iron(iron: item):
    body:
        achieve_once is_on(iron)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        observe(ironing_board, "Ensure it is close to the iron")
        if is_ironing_board_close_to_iron(ironing_board):
            bind iron: item where:
                is_iron(iron) and close(iron, ironing_board)
            place_skirt_on_ironing_board(skirt, ironing_board)
            turn_on_iron(iron)
            achieve clean(skirt)
#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('LPAR', '(') at line 5742, column 51.
Expected one of: 
	* COLON
Previous tokens: [Token('WHERE', 'where')]

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_skirt_2116_around_basket_for_clothes_2040(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

#goal_representation
def is_ironing_board_close_to_iron(ironing_board: item):
    # Function to check if the ironing board is close to the iron
    symbol close_to_iron = exists iron: item where (is_iron(iron) and close(ironing_board, iron))
    return close_to_iron

behavior place_skirt_on_ironing_board(skirt: item, ironing_board: item):
    body:
        achieve_once on(skirt, ironing_board)

behavior turn_on_iron(iron: item):
    body:
        achieve_once is_on(iron)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        observe(ironing_board, "Ensure it is close to the iron")
        if is_ironing_board_close_to_iron(ironing_board):
            bind iron: item where:
                is_iron(iron) and close(iron, ironing_board)
            place_skirt_on_ironing_board(skirt, ironing_board)
            turn_on_iron(iron)
            achieve clean(skirt)
#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('LPAR', '(') at line 5741, column 52.
Expected one of: 
	* COLON
Previous tokens: [Token('WHERE', 'where')]

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_skirt_2116_around_cupboard_130(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(clothes_skirt,cupboard_instance)
        else:
            exp(clothes_skirt,cupboard_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,cupboard_instance]=True
        close[cupboard_instance,clothes_skirt]=True
    

#goal_representation
 
def is_ironing_board_close_to_iron(ironing_board: item):
    # Function to check if the ironing board is close to the iron
    symbol close_to_iron = exists iron: item where (is_iron(iron) and close(ironing_board, iron))
    return close_to_iron

behavior place_skirt_on_ironing_board(skirt: item, ironing_board: item):
    body:
        achieve_once on(skirt, ironing_board)

behavior turn_on_iron(iron: item):
    body:
        achieve_once is_on(iron)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        observe(ironing_board, "Ensure it is close to the iron")
        if is_ironing_board_close_to_iron(ironing_board):
            bind iron: item where:
                is_iron(iron) and close(iron, ironing_board)
            place_skirt_on_ironing_board(skirt, ironing_board)
            turn_on_iron(iron)
            achieve clean(skirt)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_skirt_2116_around_basket_for_clothes_2040(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
behavior place_skirt_on_board(skirt: item, ironing_board: item):
    body:
        achieve_once on(skirt, ironing_board) 

behavior turn_on_iron(iron: item):
    body:
        achieve_once is_on(iron)

behavior iron_skirt(skirt: item):
    body:
        achieve clean(skirt)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)

        bind iron: item where:
            is_iron(iron)

        bind ironing_board: item where:
            is_ironing_board(ironing_board)

        place_skirt_on_board(skirt, ironing_board)
        turn_on_iron(iron)
        achieve close(skirt, iron)
        iron_skirt(skirt)
#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_skirt_2116_around_basket_for_clothes_2040(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
def skirt_on_ironing_board(skirt:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)
        
def ensure_iron_on(iron:item):
    body:
        achieve is_on(iron)

def iron_the_clothes(iron:item, skirt:item, ironing_board:item):
    body:
        achieve on(skirt, ironing_board)
        achieve is_on(iron)
        achieve clean(skirt)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and visited(ironing_board)
        bind iron: item where:
            is_iron(iron) and close(iron, ironing_board)
            
        skirt_on_ironing_board(skirt, ironing_board)
        ensure_iron_on(iron)
        iron_the_clothes(iron, skirt, ironing_board)
#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('COLON', ':') at line 5740, column 9.
Expected one of: 
	* MINUS
	* __ANON_8
	* PERCENT
	* AMPERSAND
	* LESS_EQ
	* OR
	* STAR
	* PLUS
	* AND
	* DOUBLE_EQUAL
	* NOT_EQ
	* _NEWLINE
	* __ANON_4
	* RSHIFT
	* MORETHAN
	* COMMA
	* __ANON_5
	* LSHIFT
	* __ANON_2
	* LESSTHAN
	* VBAR
	* __ANON_0
	* SLASH
	* EQUAL
	* GREATER_EQ
	* IF
	* AT
	* __ANON_7
	* __ANON_3
	* __ANON_1
	* __ANON_6
	* FLOORDIV
	* SEMICOLON
	* CIRCUMFLEX

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_skirt_2116_around_basket_for_clothes_2040(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

#goal_representation
 
def skirt_on_ironing_board(skirt:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)

def ensure_iron_on(iron:item):
    body:
        achieve is_on(iron)

def iron_the_clothes(iron:item, skirt:item, ironing_board:item):
    body:
        achieve clean(skirt)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and visited(ironing_board)
        bind iron: item where:
            is_iron(iron) and close(iron, ironing_board)
        skirt_on_ironing_board(skirt, ironing_board)
        ensure_iron_on(iron)
        iron_the_clothes(iron, skirt, ironing_board)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('COLON', ':') at line 5741, column 9.
Expected one of: 
	* MINUS
	* __ANON_8
	* PERCENT
	* AMPERSAND
	* LESS_EQ
	* OR
	* STAR
	* PLUS
	* AND
	* DOUBLE_EQUAL
	* NOT_EQ
	* _NEWLINE
	* __ANON_4
	* RSHIFT
	* MORETHAN
	* COMMA
	* __ANON_5
	* LSHIFT
	* __ANON_2
	* LESSTHAN
	* VBAR
	* __ANON_0
	* SLASH
	* EQUAL
	* GREATER_EQ
	* IF
	* AT
	* __ANON_7
	* __ANON_3
	* __ANON_1
	* __ANON_6
	* FLOORDIV
	* SEMICOLON
	* CIRCUMFLEX

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_skirt_2116_around_basket_for_clothes_2040(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

#goal_representation
 
def skirt_on_ironing_board(skirt:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)

def ensure_iron_on(iron:item):
    body:
        achieve is_on(iron)

def iron_the_clothes(iron:item, skirt:item, ironing_board:item):
    body:
        achieve clean(skirt)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and visited(ironing_board)
        bind iron: item where:
            is_iron(iron) and close(iron, ironing_board)
        skirt_on_ironing_board(skirt, ironing_board)
        ensure_iron_on(iron)
        iron_the_clothes(iron, skirt, ironing_board)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "iron the pair of skirt." ?
Answer: Put the skirt on the ironing board. Turn on the iron. Then put the iron on the skirt, push and pull it on the skirt.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_skirt_2116_around_dresser_377(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_skirt,dresser_instance)
        else:
            exp(clothes_skirt,dresser_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,dresser_instance]=True
        close[dresser_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_clothes_and_iron(skirt: item, board: item, iron: item):
    body:
        achieve_once on(skirt, board)
        achieve_once is_on(iron)
        # Iron the skirt
        achieve_once close_char(char, board)
        achieve_once close_char(char, iron)

behavior __goal__():
    body:
        bind board: item where:
            is_ironing_board(board)
        bind iron: item where:
            is_iron(iron)
        bind skirt: item where:
            is_clothes_skirt(skirt)
        put_clothes_and_iron(skirt, board, iron)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior put_clothes_and_iron(skirt: item, board: item, iron: item):
    body:
        achieve_once on(skirt, board)
        achieve_once is_on(iron)
        # Iron the skirt
        achieve_once close_char(char, board)
        achieve_once close_char(char, iron)

behavior __goal__():
    body:
        bind board: item where:
            is_ironing_board(board)
        bind iron: item where:
            is_iron(iron)
        bind skirt: item where:
            is_clothes_skirt(skirt)
        put_clothes_and_iron(skirt, board, iron)

##############################
From agent.py-> find a plan in act()
walk_executor(dresser_377)exp(clothes_skirt_2116, dresser_377)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
walk_executor(dresser_377)
Robot find: novel_2010, pajamas_2039, drawing_388, drawing_387, Robot is close to the dresser_377. Robot is close to the novel_2010. Robot is close to the pajamas_2039. 
##############################
From agent.py
exp(clothes_skirt_2116, dresser_377)
Fail to find clothes_skirt_2116 around dresser_377. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(clothes_skirt_2116, cupboard_130)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, pot_54, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(clothes_skirt_2116, cupboard_130)
Fail to find clothes_skirt_2116 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(bed_376)exp(clothes_skirt_2116, bed_376)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
walk_executor(bed_376)
Robot find: mat_386, clothes_underwear_2022, pillow_370, drawing_389, pillow_368, Robot is close to the bed_376. Robot is close to the mat_386. 
##############################
From agent.py
exp(clothes_skirt_2116, bed_376)
Fail to find clothes_skirt_2116 around bed_376. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)exp(clothes_skirt_2116, basket_for_clothes_2040)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Robot find: clothes_pants_2113, clothes_shirt_2114, clothes_socks_2115, clothes_skirt_2116, Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. 
##############################
From agent.py
exp(clothes_skirt_2116, basket_for_clothes_2040)
Find clothes_skirt_2116. 
##############################
From agent.py-> find a plan in act()
grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
grab_executor(clothes_skirt_2116)
Robot find: Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. Grabbing clothes_skirt_2116 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. 
##############################
From agent.py
put_executor(clothes_skirt_2116, ironing_board_2099)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. ironing_board_2099 is close clothes_skirt_2116. clothes_skirt_2116 is close ironing_board_2099. clothes_skirt_2116 is on ironing_board_2099. clothes_skirt_2116 released by right hand. 
##############################
From agent.py
plugin_executor(iron_2117)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. iron_2117 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2117)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. iron_2117 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to iron the skirt by putting the iron on the skirt and moving it back and forth to ensure that the skirt is ironed.
##############################
From agent.py
Human Instruction: The robot needs to iron the skirt by putting the iron on the skirt and moving it back and forth to ensure that the skirt is ironed.

Human Guidance: Put the skirt on the ironing board. Turn on the iron. Then put the iron on the skirt, push and pull it on the skirt.
The actions you have taken:
Action 1: Walk to ironing_board_2099.
Action 2: Observe around ironing_board_2099 with the question of Ensure it is close to the iron.
Action 3: Walk to dresser_377.
Action 4: look for clothes_skirt_2116 around dresser_377.
Action 5: Walk to cupboard_130.
Action 6: look for clothes_skirt_2116 around cupboard_130.
Action 7: Walk to bed_376.
Action 8: look for clothes_skirt_2116 around bed_376.
Action 9: Walk to basket_for_clothes_2040.
Action 10: look for clothes_skirt_2116 around basket_for_clothes_2040.
Action 11: Grab clothes_skirt_2116.
Action 12: Walk to ironing_board_2099.
Action 13: Put clothes_skirt_2116 on ironing_board_2099.
Action 14: Plug in iron_2117.
Action 15: Switch on iron_2117.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_bathroom_counter_306(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(towel,bathroom_counter_instance)
        else:
            exp(towel,bathroom_counter_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_counter_instance]=True
        close[bathroom_counter_instance,towel]=True
    

behavior find_towel_rack_299_around_bathroom_counter_306(towel_rack:item):
    goal: not unknown(towel_rack)
    body:
        assert is_towel_rack(towel_rack)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(towel_rack,bathroom_counter_instance)
        else:
            exp(towel_rack,bathroom_counter_instance)
    eff:
        unknown[towel_rack]=False
        close[towel_rack,bathroom_counter_instance]=True
        close[bathroom_counter_instance,towel_rack]=True
    

#exp_behavior_end

#goal_representation
behavior iron_clothes(clothes:item, iron:item):
    body:
        achieve_once on(iron, clothes)

behavior __goal__():
    body:
        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt) and id[clothes_skirt] == 2116
        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        iron_clothes(clothes_skirt, iron)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior iron_clothes(clothes:item, iron:item):
    body:
        achieve_once on(iron, clothes)

behavior __goal__():
    body:
        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt) and id[clothes_skirt] == 2116
        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        iron_clothes(clothes_skirt, iron)
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2117)grab_executor(iron_2117)walk_executor(clothes_skirt_2116)put_executor(iron_2117, clothes_skirt_2116)
##############################
From agent.py
walk_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. 
##############################
From agent.py
grab_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. Grabbing iron_2117 by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2116)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. Robot is close to the clothes_skirt_2116. 
##############################
From agent.py
put_executor(iron_2117, clothes_skirt_2116)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. Robot is close to the clothes_skirt_2116. clothes_skirt_2116 is close iron_2117. iron_2117 is close clothes_skirt_2116. iron_2117 is on clothes_skirt_2116. iron_2117 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to move the iron back and forth on the skirt to complete the ironing process.
##############################
Task Summary:
Task Goal:
Directly iron a pair of skirt.
Action History:
['walk_executor(ironing_board_2099)', 'walk_executor(dresser_377)', 'walk_executor(cupboard_130)', 'walk_executor(bed_376)', 'walk_executor(basket_for_clothes_2040)', 'grab_executor(clothes_skirt_2116)', 'walk_executor(ironing_board_2099)', 'put_executor(clothes_skirt_2116, ironing_board_2099)', 'plugin_executor(iron_2117)', 'switchon_executor(iron_2117)', 'walk_executor(iron_2117)', 'grab_executor(iron_2117)', 'walk_executor(clothes_skirt_2116)', 'put_executor(iron_2117, clothes_skirt_2116)']
Time info:
Time consume: 179 seconds
Exp_helper query times: 0
Guidance query times: 1
library scale: 154
goal generate times: 6
goal correct times: 3
action_num: 14

Task complete rate:
Keystate: k1 - Requires: 0 steps
Action Completion Rate: 0.0
Scene_id: 2
##############################
