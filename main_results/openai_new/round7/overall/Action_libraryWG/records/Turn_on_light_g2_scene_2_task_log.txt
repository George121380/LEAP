From agent.py
Reset goals: The sub-goals are: 
['Turn on the lights in the bedroom, then turn on the lights in the bathroom.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)

        achieve close_char(char, bedroom_light)
        achieve is_on(bedroom_light)

        achieve close_char(char, bathroom_light)
        achieve is_on(bathroom_light)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: bedroom; available variables: [Variable<bedroom_light: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation
 
behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)

        bind bathroom: item where:
            is_bathroom(bathroom)

        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)

        achieve close_char(char, bedroom_light)
        achieve is_on(bedroom_light)

        achieve close_char(char, bathroom_light)
        achieve is_on(bathroom_light)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_remote_control_2081_around_tvstand_135(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==135
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(remote_control,tvstand_instance)
        else:
            exp(remote_control,tvstand_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,tvstand_instance]=True
        close[tvstand_instance,remote_control]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light,is_bedroom)

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light,is_bathroom)

        # Ensure the light in the bedroom is turned on
        achieve_once is_on(bedroom_light)
        
        # Ensure the light in the bathroom is turned on
        achieve_once is_on(bathroom_light)
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: is_bedroom; available variables: [Variable<bedroom_light: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation
 
behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, b: item where: is_bedroom(b))

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, b: item where: is_bathroom(b))

        # Ensure the light in the bedroom is turned on
        achieve_once is_on(bedroom_light)
        
        # Ensure the light in the bathroom is turned on
        achieve_once is_on(bathroom_light)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('COLON', ':') at line 5719, column 64.
Expected one of: 
	* RPAR
	* EQUAL
	* COMMA

##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation
behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, b: item where: is_bedroom(b))

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, b: item where: is_bathroom(b))

        # Ensure the light in the bedroom is turned on
        achieve_once is_on(bedroom_light)

        # Ensure the light in the bathroom is turned on
        achieve_once is_on(bathroom_light)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)
        # Select a light in the bedroom

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)
        # Select a light in the bathroom

        achieve is_on(bedroom_light)
        # Ensure the light in the bedroom is on

        achieve is_on(bathroom_light)
        # Ensure the light in the bathroom is on
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: bedroom; available variables: [Variable<bedroom_light: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation
 
behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        # Select the bedroom

        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)
        # Select a light in the bedroom

        bind bathroom: item where:
            is_bathroom(bathroom)
        # Select the bathroom

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)
        # Select a light in the bathroom

        achieve is_on(bedroom_light)
        # Ensure the light in the bedroom is on

        achieve is_on(bathroom_light)
        # Ensure the light in the bathroom is on

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        # Select the bedroom

        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)
        # Select a light in the bedroom

        bind bathroom: item where:
            is_bathroom(bathroom)
        # Select the bathroom

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)
        # Select a light in the bathroom

        achieve is_on(bedroom_light)
        # Ensure the light in the bedroom is on

        achieve is_on(bathroom_light)
        # Ensure the light in the bathroom is on

##############################
From agent.py-> find a plan in act()
walk_executor(light_258)switchon_executor(light_258)walk_executor(light_325)switchon_executor(light_325)
##############################
From agent.py
walk_executor(light_258)
Robot find: drawing_238, Robot is close to the light_258. 
##############################
From agent.py
switchon_executor(light_258)
Robot find: Robot is close to the light_258. light_258 is turned on. 
##############################
From agent.py
walk_executor(light_325)
Robot find: drawing_296, mat_292, Robot is close to the light_325. 
##############################
From agent.py
switchon_executor(light_325)
Robot find: Robot is close to the light_325. light_325 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Turn on the lights in the bedroom. Then turn on the lights in the bathroom.
Action History:
['walk_executor(light_258)', 'switchon_executor(light_258)', 'walk_executor(light_325)', 'switchon_executor(light_325)']
Time info:
Time consume: 119 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 82
goal generate times: 3
goal correct times: 1
action_num: 4

Task complete rate:
1
Scene_id: 2
##############################
