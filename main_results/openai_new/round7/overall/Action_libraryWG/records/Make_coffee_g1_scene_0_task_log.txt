From agent.py
Reset goals: The sub-goals are: 
['1. Find the coffee maker and ensure it is set up correctly.', '2. Brew a cup of coffee using the coffee maker.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_coffee_filter_2000_around_kitchen_counter_230(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(coffee_filter,kitchen_counter_instance)
        else:
            exp(coffee_filter,kitchen_counter_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,kitchen_counter_instance]=True
        close[kitchen_counter_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
def is_coffee_maker_set_up(coffee_maker: item):
    symbol set_up = is_on(coffee_maker) or has_water(coffee_maker) or plugged(coffee_maker)
    return set_up

behavior __goal__():
    body:
        if exists coffee_maker: item : (is_coffe_maker(coffee_maker) and not visited(coffee_maker)):
            # Check if the coffee maker has not been visited yet
            bind coffee_maker: item where:
                is_coffe_maker(coffee_maker) and not visited(coffee_maker) # The condition ensures the selection of the coffee maker instance which has not been visited
            observe(coffee_maker, "Check if the coffee maker is set up correctly")
        
        if exists coffee_maker: item : (is_coffe_maker(coffee_maker) and visited(coffee_maker) and not is_coffee_maker_set_up(coffee_maker)):
            # If a coffee maker has already been visited and not yet set up correctly, ensure actions are taken to set it up
            bind coffee_maker: item where:
                is_coffe_maker(coffee_maker) and visited(coffee_maker) and not is_coffee_maker_set_up(coffee_maker)
            achieve plugged(coffee_maker)
            observe(coffee_maker, "Ensure the coffee maker is plugged in and has water")

        if exists coffee_maker: item : (is_coffe_maker(coffee_maker) and is_coffee_maker_set_up(coffee_maker)):
            # Ensure the coffee maker is plugged in if set up correctly
            bind coffee_maker: item where:
                is_coffe_maker(coffee_maker) and is_coffee_maker_set_up(coffee_maker)
            achieve plugged(coffee_maker)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_coffee_maker_set_up(coffee_maker: item):
    symbol set_up = is_on(coffee_maker) or has_water(coffee_maker) or plugged(coffee_maker)
    return set_up

behavior __goal__():
    body:
        if exists coffee_maker: item : (is_coffe_maker(coffee_maker) and not visited(coffee_maker)):
            # Check if the coffee maker has not been visited yet
            bind coffee_maker: item where:
                is_coffe_maker(coffee_maker) and not visited(coffee_maker) # The condition ensures the selection of the coffee maker instance which has not been visited
            observe(coffee_maker, "Check if the coffee maker is set up correctly")
        
        if exists coffee_maker: item : (is_coffe_maker(coffee_maker) and visited(coffee_maker) and not is_coffee_maker_set_up(coffee_maker)):
            # If a coffee maker has already been visited and not yet set up correctly, ensure actions are taken to set it up
            bind coffee_maker: item where:
                is_coffe_maker(coffee_maker) and visited(coffee_maker) and not is_coffee_maker_set_up(coffee_maker)
            achieve plugged(coffee_maker)
            observe(coffee_maker, "Ensure the coffee maker is plugged in and has water")

        if exists coffee_maker: item : (is_coffe_maker(coffee_maker) and is_coffee_maker_set_up(coffee_maker)):
            # Ensure the coffee maker is plugged in if set up correctly
            bind coffee_maker: item where:
                is_coffe_maker(coffee_maker) and is_coffee_maker_set_up(coffee_maker)
            achieve plugged(coffee_maker)

##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_290)open_executor(coffe_maker_290)obs(coffe_maker_290, Check if the coffee maker is set up correctly)
##############################
From agent.py
walk_executor(coffe_maker_290)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the coffe_maker_290. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
open_executor(coffe_maker_290)
Robot find: Robot is close to the coffe_maker_290. Robot is close to the kitchen_counter_230. coffe_maker_290 is opened. 
##############################
From agent.py
obs(coffe_maker_290, Check if the coffee maker is set up correctly)
Get this information:  coffe_maker_290 is close to stovefan_288. coffe_maker_290 is close to toaster_292. coffe_maker_290 is close to cupboard_229. coffe_maker_290 is close to kitchen_counter_230. coffe_maker_290 is close to oven_295. coffe_maker_290 is close to tray_296. coffe_maker_290 is close to faucet_232. coffe_maker_290 is close to sink_231. coffe_maker_290 is close to shower_36. coffe_maker_290 is close to floor_204. coffe_maker_290 is close to wall_11. coffe_maker_290 is close to wall_15. coffe_maker_290 is close to wall_211. coffe_maker_290 is close to wall_212. coffe_maker_290 is close to wall_215. coffe_maker_290 is close to ceiling_221. coffe_maker_290 is close to character_65. coffe_maker_290 is on kitchen_counter_230. coffe_maker_290 is inside dining_room_201. coffe_maker_290 is facing drawing_238. coffe_maker_290 is facing drawing_239. coffe_maker_290 is facing drawing_240. coffe_maker_290 is facing drawing_241. coffe_maker_290 is facing drawing_242. coffe_maker_290 is facing drawing_243. coffe_maker_290 is PLUGGED_IN. coffe_maker_290 is OFF. coffe_maker_290 is CLEAN. coffe_maker_290 is OPEN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_coffee_filter_2000_around_cupboard_229(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==229
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(coffee_filter,cupboard_instance)
        else:
            exp(coffee_filter,cupboard_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,cupboard_instance]=True
        close[cupboard_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
behavior brew_coffee_using_maker(coffee_maker: item):
    body:
        if not is_on(coffee_maker):
            achieve_once is_on(coffee_maker)
        # Ensure the coffee maker is turned on

        if not has_water(coffee_maker):
            achieve_once has_water(coffee_maker)
        # Ensure the coffee maker has water

        achieve_once inhand(coffee_filter)
        achieve_once inside(coffee_filter, coffee_maker)
        # Place the coffee filter inside the coffee maker

        achieve_once inhand(coffee_pot)
        achieve_once close(coffee_pot, coffee_maker)
        # Place the coffee pot next to the coffee maker

        if is_off(coffee_maker):
            achieve_once is_on(coffee_maker)
        # Start brewing the coffee by turning the coffee maker on, if it is off

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Identify the coffee maker

        bind coffee_filter: item where:
            is_coffee_filter(coffee_filter)
        # Identify the coffee filter

        bind coffee_pot: item where:
            is_pot(coffee_pot)
        # Identify the coffee pot

        brew_coffee_using_maker(coffee_maker)  

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: coffee_filter; available variables: [Variable<coffee_maker: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_coffee_filter_2000_around_cupboard_229(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==229
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(coffee_filter,cupboard_instance)
        else:
            exp(coffee_filter,cupboard_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,cupboard_instance]=True
        close[cupboard_instance,coffee_filter]=True
    

#goal_representation
 
behavior brew_coffee_using_maker(coffee_maker: item, coffee_filter: item, coffee_pot: item):
    body:
        if not is_on(coffee_maker):
            achieve_once is_on(coffee_maker)
        # Ensure the coffee maker is turned on

        if not has_water(coffee_maker):
            achieve_once has_water(coffee_maker)
        # Ensure the coffee maker has water

        achieve_once inhand(coffee_filter)
        achieve_once inside(coffee_filter, coffee_maker)
        # Place the coffee filter inside the coffee maker

        achieve_once inhand(coffee_pot)
        achieve_once close(coffee_pot, coffee_maker)
        # Place the coffee pot next to the coffee maker

        if is_off(coffee_maker):
            achieve_once is_on(coffee_maker)
        # Start brewing the coffee by turning the coffee maker on, if it is off

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Identify the coffee maker

        bind coffee_filter: item where:
            is_coffee_filter(coffee_filter)
        # Identify the coffee filter

        bind coffee_pot: item where:
            is_pot(coffee_pot)
        # Identify the coffee pot

        brew_coffee_using_maker(coffee_maker, coffee_filter, coffee_pot)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior brew_coffee_using_maker(coffee_maker: item, coffee_filter: item, coffee_pot: item):
    body:
        if not is_on(coffee_maker):
            achieve_once is_on(coffee_maker)
        # Ensure the coffee maker is turned on

        if not has_water(coffee_maker):
            achieve_once has_water(coffee_maker)
        # Ensure the coffee maker has water

        achieve_once inhand(coffee_filter)
        achieve_once inside(coffee_filter, coffee_maker)
        # Place the coffee filter inside the coffee maker

        achieve_once inhand(coffee_pot)
        achieve_once close(coffee_pot, coffee_maker)
        # Place the coffee pot next to the coffee maker

        if is_off(coffee_maker):
            achieve_once is_on(coffee_maker)
        # Start brewing the coffee by turning the coffee maker on, if it is off

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Identify the coffee maker

        bind coffee_filter: item where:
            is_coffee_filter(coffee_filter)
        # Identify the coffee filter

        bind coffee_pot: item where:
            is_pot(coffee_pot)
        # Identify the coffee pot

        brew_coffee_using_maker(coffee_maker, coffee_filter, coffee_pot)

##############################
From agent.py-> find a plan in act()
close_executor(coffe_maker_290)switchon_executor(coffe_maker_290)walk_executor(faucet_232)switchon_executor(faucet_232)switchoff_executor(faucet_232)walk_executor(cupboard_229)open_executor(cupboard_229)exp(coffee_filter_2000, cupboard_229)walk_executor(coffee_filter_2000)grab_executor(coffee_filter_2000)walk_executor(coffe_maker_290)switchoff_executor(coffe_maker_290)open_executor(coffe_maker_290)putin_executor(coffee_filter_2000, coffe_maker_290)walk_executor(pot_2069)grab_executor(pot_2069)walk_executor(coffe_maker_290)put_executor(pot_2069, coffe_maker_290)close_executor(coffe_maker_290)switchon_executor(coffe_maker_290)
##############################
From agent.py
close_executor(coffe_maker_290)
Robot find: Robot is close to the coffe_maker_290. Robot is close to the kitchen_counter_230. coffe_maker_290 is closed. 
##############################
From agent.py
switchon_executor(coffe_maker_290)
Robot find: Robot is close to the coffe_maker_290. Robot is close to the kitchen_counter_230. coffe_maker_290 is turned on. 
##############################
From agent.py
walk_executor(faucet_232)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the faucet_232. 
##############################
From agent.py
switchon_executor(faucet_232)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the faucet_232. faucet_232 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_232)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the faucet_232. faucet_232 is turned off. 
##############################
From agent.py
walk_executor(cupboard_229)
Robot find: Robot is close to the cupboard_229. 
##############################
From agent.py
open_executor(cupboard_229)
Robot find: Robot is close to the cupboard_229. cupboard_229 is opened. 
##############################
From agent.py
exp(coffee_filter_2000, cupboard_229)
Fail to find coffee_filter_2000 around cupboard_229. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_380)exp(coffee_filter_2000, closetdrawer_380)walk_executor(coffee_filter_2000)grab_executor(coffee_filter_2000)walk_executor(coffe_maker_290)switchoff_executor(coffe_maker_290)open_executor(coffe_maker_290)putin_executor(coffee_filter_2000, coffe_maker_290)walk_executor(pot_2069)grab_executor(pot_2069)walk_executor(coffe_maker_290)put_executor(pot_2069, coffe_maker_290)close_executor(coffe_maker_290)switchon_executor(coffe_maker_290)
##############################
From agent.py
walk_executor(closetdrawer_380)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(coffee_filter_2000, closetdrawer_380)
Fail to find coffee_filter_2000 around closetdrawer_380. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_380)exp(coffee_filter_2000, closetdrawer_380)walk_executor(coffee_filter_2000)grab_executor(coffee_filter_2000)walk_executor(coffe_maker_290)switchoff_executor(coffe_maker_290)open_executor(coffe_maker_290)putin_executor(coffee_filter_2000, coffe_maker_290)walk_executor(pot_2069)grab_executor(pot_2069)walk_executor(coffe_maker_290)put_executor(pot_2069, coffe_maker_290)close_executor(coffe_maker_290)switchon_executor(coffe_maker_290)
##############################
From agent.py
walk_executor(closetdrawer_380)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(coffee_filter_2000, closetdrawer_380)
Fail to find coffee_filter_2000 around closetdrawer_380. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_380)exp(coffee_filter_2000, closetdrawer_380)walk_executor(coffee_filter_2000)grab_executor(coffee_filter_2000)walk_executor(coffe_maker_290)switchoff_executor(coffe_maker_290)open_executor(coffe_maker_290)putin_executor(coffee_filter_2000, coffe_maker_290)walk_executor(pot_2069)grab_executor(pot_2069)walk_executor(coffe_maker_290)put_executor(pot_2069, coffe_maker_290)close_executor(coffe_maker_290)switchon_executor(coffe_maker_290)
##############################
From agent.py
walk_executor(closetdrawer_380)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(coffee_filter_2000, closetdrawer_380)
Fail to find coffee_filter_2000 around closetdrawer_380. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_154)exp(coffee_filter_2000, closetdrawer_154)walk_executor(coffee_filter_2000)grab_executor(coffee_filter_2000)walk_executor(coffe_maker_290)switchoff_executor(coffe_maker_290)open_executor(coffe_maker_290)putin_executor(coffee_filter_2000, coffe_maker_290)walk_executor(pot_2069)grab_executor(pot_2069)walk_executor(coffe_maker_290)put_executor(pot_2069, coffe_maker_290)close_executor(coffe_maker_290)switchon_executor(coffe_maker_290)
##############################
From agent.py
walk_executor(closetdrawer_154)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(coffee_filter_2000, closetdrawer_154)
Fail to find coffee_filter_2000 around closetdrawer_154. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_154)exp(coffee_filter_2000, closetdrawer_154)walk_executor(coffee_filter_2000)grab_executor(coffee_filter_2000)walk_executor(coffe_maker_290)switchoff_executor(coffe_maker_290)open_executor(coffe_maker_290)putin_executor(coffee_filter_2000, coffe_maker_290)walk_executor(pot_2069)grab_executor(pot_2069)walk_executor(coffe_maker_290)put_executor(pot_2069, coffe_maker_290)close_executor(coffe_maker_290)switchon_executor(coffe_maker_290)
##############################
From agent.py
walk_executor(closetdrawer_154)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find coffee_filter_2000 ?
Answer: Locate the dining room labeled dining_room_201. Inside this room, find table_226. The coffee_filter_2000 is on table_226. It should be in close proximity to one side or corner of the table.
Re-decompose: None

##############################
From agent.py
Human Instruction: Locate the dining room labeled dining_room_201. Inside this room, find table_226. The coffee_filter_2000 is on table_226. It should be in close proximity to one side or corner of the table.

The actions you have taken:
Action 1: Walk to coffe_maker_290.
Action 2: Open coffe_maker_290.
Action 3: Observe around coffe_maker_290 with the question of Check if the coffee maker is set up correctly.
Action 4: Close coffe_maker_290.
Action 5: Switch on coffe_maker_290.
Action 6: Walk to faucet_232.
Action 7: Switch on faucet_232.
Action 8: Switch off faucet_232.
Action 9: Walk to cupboard_229.
Action 10: Open cupboard_229.
Action 11: look for coffee_filter_2000 around cupboard_229.
Action 12: Walk to closetdrawer_380.
Action 13: look for coffee_filter_2000 around closetdrawer_380.
Action 14: Walk to closetdrawer_380.
Action 15: look for coffee_filter_2000 around closetdrawer_380.
Action 16: Walk to closetdrawer_380.
Action 17: look for coffee_filter_2000 around closetdrawer_380.
Action 18: Walk to closetdrawer_154.
Action 19: look for coffee_filter_2000 around closetdrawer_154.
Action 20: Walk to closetdrawer_154.

##############################
From agent.py
exp(coffee_filter_2000, closetdrawer_154)
Fail to find coffee_filter_2000 around closetdrawer_154. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_226)exp(coffee_filter_2000, table_226)walk_executor(coffee_filter_2000)grab_executor(coffee_filter_2000)walk_executor(coffe_maker_290)switchoff_executor(coffe_maker_290)open_executor(coffe_maker_290)putin_executor(coffee_filter_2000, coffe_maker_290)walk_executor(pot_2069)grab_executor(pot_2069)walk_executor(coffe_maker_290)put_executor(pot_2069, coffe_maker_290)close_executor(coffe_maker_290)switchon_executor(coffe_maker_290)
##############################
From agent.py
walk_executor(table_226)
Robot find: bowl_2071, coffee_filter_2000, drawing_2003, bowl_2072, mat_236, fork_2080, fork_2081, mat_237, Robot is close to the table_226. 
##############################
From agent.py
exp(coffee_filter_2000, table_226)
Find coffee_filter_2000. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffee_filter_2000)grab_executor(coffee_filter_2000)walk_executor(coffe_maker_290)switchoff_executor(coffe_maker_290)open_executor(coffe_maker_290)putin_executor(coffee_filter_2000, coffe_maker_290)walk_executor(pot_2069)grab_executor(pot_2069)walk_executor(coffe_maker_290)put_executor(pot_2069, coffe_maker_290)close_executor(coffe_maker_290)switchon_executor(coffe_maker_290)
##############################
From agent.py
walk_executor(coffee_filter_2000)
Robot find: Robot is close to the table_226. Robot is close to the coffee_filter_2000. 
##############################
From agent.py
grab_executor(coffee_filter_2000)
Robot find: Robot is close to the table_226. Robot is close to the coffee_filter_2000. Grabbing coffee_filter_2000 by right hand. 
##############################
From agent.py
walk_executor(coffe_maker_290)
Robot find: Robot is close to the coffee_filter_2000. Robot is close to the coffe_maker_290. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
switchoff_executor(coffe_maker_290)
Robot find: Robot is close to the coffee_filter_2000. Robot is close to the coffe_maker_290. Robot is close to the kitchen_counter_230. coffe_maker_290 is turned off. 
##############################
From agent.py
open_executor(coffe_maker_290)
Robot find: Robot is close to the coffee_filter_2000. Robot is close to the coffe_maker_290. Robot is close to the kitchen_counter_230. coffe_maker_290 is opened. 
##############################
From agent.py
putin_executor(coffee_filter_2000, coffe_maker_290)
Robot find: Robot is close to the coffee_filter_2000. Robot is close to the coffe_maker_290. Robot is close to the kitchen_counter_230. coffe_maker_290 is close coffee_filter_2000. coffee_filter_2000 is inside coffe_maker_290. coffee_filter_2000 is close coffe_maker_290. coffee_filter_2000 released by right hand. 
##############################
From agent.py
walk_executor(pot_2069)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. 
##############################
From agent.py
grab_executor(pot_2069)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. Grabbing pot_2069 by right hand. 
##############################
From agent.py
walk_executor(coffe_maker_290)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. Robot is close to the coffee_filter_2000. Robot is close to the coffe_maker_290. 
##############################
From agent.py
put_executor(pot_2069, coffe_maker_290)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. Robot is close to the coffee_filter_2000. Robot is close to the coffe_maker_290. coffe_maker_290 is close pot_2069. pot_2069 is close coffe_maker_290. pot_2069 is on coffe_maker_290. pot_2069 released by right hand. 
##############################
From agent.py
close_executor(coffe_maker_290)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. Robot is close to the coffe_maker_290. coffe_maker_290 is closed. 
##############################
From agent.py
switchon_executor(coffe_maker_290)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. Robot is close to the coffe_maker_290. coffe_maker_290 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make a cup of coffee using the coffee maker.
Action History:
['walk_executor(coffe_maker_290)', 'open_executor(coffe_maker_290)', 'close_executor(coffe_maker_290)', 'switchon_executor(coffe_maker_290)', 'walk_executor(faucet_232)', 'switchon_executor(faucet_232)', 'switchoff_executor(faucet_232)', 'walk_executor(cupboard_229)', 'open_executor(cupboard_229)', 'walk_executor(closetdrawer_380)', 'walk_executor(closetdrawer_380)', 'walk_executor(closetdrawer_380)', 'walk_executor(closetdrawer_154)', 'walk_executor(closetdrawer_154)', 'walk_executor(table_226)', 'walk_executor(coffee_filter_2000)', 'grab_executor(coffee_filter_2000)', 'walk_executor(coffe_maker_290)', 'switchoff_executor(coffe_maker_290)', 'open_executor(coffe_maker_290)', 'putin_executor(coffee_filter_2000, coffe_maker_290)', 'walk_executor(pot_2069)', 'grab_executor(pot_2069)', 'walk_executor(coffe_maker_290)', 'put_executor(pot_2069, coffe_maker_290)', 'close_executor(coffe_maker_290)', 'switchon_executor(coffe_maker_290)']
Time info:
Time consume: 164 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 58
goal generate times: 2
goal correct times: 1
action_num: 27

Task complete rate:
Keystate: k1 - Requires: 8 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
