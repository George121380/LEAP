From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the underwear with soap in the sink in the bathroom.', '2. Put the underwear in the washing machine and add some detergent for a thorough clean.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2053_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_detergent_2084_around_bathroom_counter_41(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(detergent,bathroom_counter_instance)
        else:
            exp(detergent,bathroom_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_counter_instance]=True
        close[bathroom_counter_instance,detergent]=True
    

behavior find_clothes_underwear_2049_around_basket_for_clothes_2006(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_underwear,basket_for_clothes_instance)
        else:
            exp(clothes_underwear,basket_for_clothes_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_underwear]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        bind soap: item where:
            is_soap(soap)
        bind sink: item where:
            is_sink(sink) and inside(sink, bathroom)
        
        # Hand wash the underwear with soap in the sink
        foreach o: item:
            if is_clothes_underwear(o) and dirty(o) and not clean(o):
                achieve_once inhand(o)
                achieve_once inhand(soap)
                if has_water(sink):
                    wash(o)
            if is_clothes_underwear(o):
                scrub(o)
                rinse(o)
                squeeze(o)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: bathroom; available variables: [Variable<sink: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_soap_2053_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_detergent_2084_around_bathroom_cabinet_40(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_cleaning_solution_2073_around_bathroom_counter_41(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(cleaning_solution,bathroom_counter_instance)
        else:
            exp(cleaning_solution,bathroom_counter_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_counter_instance]=True
        close[bathroom_counter_instance,cleaning_solution]=True
    

#goal_representation
 
behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        bind underwear: item where:
            is_clothes_underwear(underwear)
        bind soap: item where:
            is_soap(soap)
        bind sink: item where:
            is_sink(sink) and inside(sink, bathroom)
        
        # Hand wash the underwear with soap in the sink
        foreach o: item:
            if is_clothes_underwear(o) and dirty(o) and not clean(o):
                achieve_once inhand(o)
                achieve_once inhand(soap)
                if has_water(sink):
                    wash(o)
            if is_clothes_underwear(o):
                scrub(o)
                rinse(o)
                squeeze(o)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2053_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_clothes_underwear_2049_around_basket_for_clothes_2006(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_underwear,basket_for_clothes_instance)
        else:
            exp(clothes_underwear,basket_for_clothes_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_underwear]=True
    

#exp_behavior_end

#goal_representation

def is_in_bathroom_sink(x: item):
    # Function to check if the item is in the bathroom sink
    symbol in_sink = exists s: item : (is_sink(s) and inside(x, s) and inside(s, bathroom))
    return in_sink

behavior hand_wash_underwear(underwear: item, soap: item, sink: item):
    body:
        if dirty(underwear):
            achieve_inside(underwear, sink)
            # Place underwear in the sink
            achieve_once clean(underwear)
            # Wash the underwear by hand

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        bind sink: item where:
            is_sink(sink) and inside(sink, bathroom)
        bind soap: item where:
            is_soap(soap)
        # Attempt to bind an available piece of underwear to variables
        foreach underwear: item:
            if is_clothes_underwear(underwear) and dirty(underwear) and not is_in_bathroom_sink(underwear):
                hand_wash_underwear(underwear, soap, sink)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Unknown variable: bathroom; available variables: [Variable<x: item>, Variable<s: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_soap_2053_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_clothes_underwear_2049_around_basket_for_clothes_2006(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_underwear,basket_for_clothes_instance)
        else:
            exp(clothes_underwear,basket_for_clothes_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_underwear]=True
    

#goal_representation
 
def is_in_bathroom_sink(x: item):
    # Function to check if the item is in the bathroom sink
    symbol in_sink = exists s: item : (is_sink(s) and inside(x, s) and inside(s, bathroom))
    return in_sink

behavior hand_wash_underwear(underwear: item, soap: item, sink: item):
    body:
        if dirty(underwear):
            achieve_inside(underwear, sink)
            # Place underwear in the sink
            achieve_once clean(underwear)
            # Wash the underwear by hand

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        bind sink: item where:
            is_sink(sink) and inside(sink, bathroom)
        bind soap: item where:
            is_soap(soap)
        # Attempt to bind an available piece of underwear to variables
        foreach underwear: item:
            if is_clothes_underwear(underwear) and dirty(underwear) and not is_in_bathroom_sink(underwear):
                hand_wash_underwear(underwear, soap, sink)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Unknown variable: bathroom; available variables: [Variable<x: item>, Variable<s: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_soap_2054_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_clothes_underwear_2049_around_basket_for_clothes_2006(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_underwear,basket_for_clothes_instance)
        else:
            exp(clothes_underwear,basket_for_clothes_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_underwear]=True
    

#goal_representation
 
def is_in_bathroom_sink(x: item):
    # Function to check if the item is in the bathroom sink
    symbol in_sink = exists s: item : (is_sink(s) and inside(x, s) and exists b: item : (is_bathroom(b) and inside(s, b)))
    return in_sink

behavior hand_wash_underwear(underwear: item, soap: item, sink: item):
    body:
        if dirty(underwear):
            achieve_once inside(underwear, sink)
            # Place underwear in the sink
            achieve_once clean(underwear)
            # Wash the underwear by hand

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        bind sink: item where:
            is_sink(sink) and inside(sink, bathroom)
        bind soap: item where:
            is_soap(soap)
        # Attempt to bind an available piece of underwear to variables
        foreach underwear: item:
            if is_clothes_underwear(underwear) and dirty(underwear) and not is_in_bathroom_sink(underwear):
                hand_wash_underwear(underwear, soap, sink)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_clothes_underwear_2049_around_basket_for_clothes_2006(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_underwear,basket_for_clothes_instance)
        else:
            exp(clothes_underwear,basket_for_clothes_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_underwear]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and inside(sink, bathroom) 
        # Select the sink in the bathroom

        bind underwear: item where:
            is_clothes_underwear(underwear) 
        # Select the underwear to be washed

        bind soap: item where:
            is_soap(soap)
        # Select the soap

        achieve_once inside(underwear, sink)
        # Place the underwear inside the sink

        achieve_once inside(soap, sink)
        # Place the soap inside the sink to start washing

        achieve has_water(sink)
        # Ensure the sink is filled with water for hand washing

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: bathroom; available variables: [Variable<sink: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_soap_2054_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_detergent_2084_around_bathroom_cabinet_40(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_clothes_underwear_2049_around_basket_for_clothes_2006(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_underwear,basket_for_clothes_instance)
        else:
            exp(clothes_underwear,basket_for_clothes_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_underwear]=True
    

#goal_representation
 
behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        # Select the bathroom to find the sink in it

        bind sink: item where:
            is_sink(sink) and inside(sink, bathroom) 
        # Select the sink in the bathroom

        bind underwear: item where:
            is_clothes_underwear(underwear) 
        # Select the underwear to be washed

        bind soap: item where:
            is_soap(soap)
        # Select the soap

        achieve_once inside(underwear, sink)
        # Place the underwear inside the sink

        achieve_once inside(soap, sink)
        # Place the soap inside the sink to start washing

        achieve has_water(sink)
        # Ensure the sink is filled with water for hand washing

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        # Select the bathroom to find the sink in it

        bind sink: item where:
            is_sink(sink) and inside(sink, bathroom) 
        # Select the sink in the bathroom

        bind underwear: item where:
            is_clothes_underwear(underwear) 
        # Select the underwear to be washed

        bind soap: item where:
            is_soap(soap)
        # Select the soap

        achieve_once inside(underwear, sink)
        # Place the underwear inside the sink

        achieve_once inside(soap, sink)
        # Place the soap inside the sink to start washing

        achieve has_water(sink)
        # Ensure the sink is filled with water for hand washing

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)exp(clothes_underwear_2049, basket_for_clothes_2006)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(sink_42)putin_executor(clothes_underwear_2049, sink_42)exp(soap_2053, bathroom_counter_41)walk_executor(soap_2053)grab_executor(soap_2053)walk_executor(sink_42)putin_executor(soap_2053, sink_42)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Robot find: clothes_pants_2085, clothes_shirt_2086, clothes_socks_2087, clothes_skirt_2088, towel_rack_31, towel_rack_33, towel_rack_32, towel_rack_34, mat_22, Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
exp(clothes_underwear_2049, basket_for_clothes_2006)
Fail to find clothes_underwear_2049 around basket_for_clothes_2006. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_154)exp(clothes_underwear_2049, closetdrawer_154)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(sink_42)putin_executor(clothes_underwear_2049, sink_42)exp(soap_2053, bathroom_counter_41)walk_executor(soap_2053)grab_executor(soap_2053)walk_executor(sink_42)putin_executor(soap_2053, sink_42)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_154)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_underwear_2049, closetdrawer_154)
Fail to find clothes_underwear_2049 around closetdrawer_154. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_154)exp(clothes_underwear_2049, closetdrawer_154)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(sink_42)putin_executor(clothes_underwear_2049, sink_42)walk_executor(sink_231)exp(soap_2053, sink_231)walk_executor(soap_2053)grab_executor(soap_2053)walk_executor(sink_42)putin_executor(soap_2053, sink_42)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_154)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_underwear_2049, closetdrawer_154)
Fail to find clothes_underwear_2049 around closetdrawer_154. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_154)exp(clothes_underwear_2049, closetdrawer_154)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(sink_42)putin_executor(clothes_underwear_2049, sink_42)exp(soap_2053, bathroom_counter_41)walk_executor(soap_2053)grab_executor(soap_2053)walk_executor(sink_42)putin_executor(soap_2053, sink_42)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_154)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_underwear_2049, closetdrawer_154)
Fail to find clothes_underwear_2049 around closetdrawer_154. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_154)exp(clothes_underwear_2049, closetdrawer_154)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(sink_42)putin_executor(clothes_underwear_2049, sink_42)exp(soap_2053, bathroom_counter_41)walk_executor(soap_2053)grab_executor(soap_2053)walk_executor(sink_42)putin_executor(soap_2053, sink_42)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_154)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_underwear_2049, closetdrawer_154)
Fail to find clothes_underwear_2049 around closetdrawer_154. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the underwear with soap in the sink in the bathroom.', '2. Put the underwear in the washing machine and add detergent for a thorough clean.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2053_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_clothes_underwear_2049_around_sink_231(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(clothes_underwear,sink_instance)
        else:
            exp(clothes_underwear,sink_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,sink_instance]=True
        close[sink_instance,clothes_underwear]=True
    

behavior find_detergent_2084_around_bathroom_counter_41(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(detergent,bathroom_counter_instance)
        else:
            exp(detergent,bathroom_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_counter_instance]=True
        close[bathroom_counter_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior wash_underwear_with_soap(underwear:item, soap:item, sink:item):
    body:
        achieve_once inside(underwear, sink)
        # Place the underwear in the sink
        wash(underwear)
        # Wash the underwear by hand with soap in the sink

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select the underwear to wash

        bind soap: item where:
            is_soap(soap)
        # Select a soap

        bind sink: item where:
            is_sink(sink) 
        # Select a sink in the bathroom
        
        wash_underwear_with_soap(underwear, soap, sink)
        # Wash the underwear in the sink with soap
#goal_representation_end

##############################
From agent.py->reset_goal
behavior wash_underwear_with_soap(underwear:item, soap:item, sink:item):
    body:
        achieve_once inside(underwear, sink)
        # Place the underwear in the sink
        wash(underwear)
        # Wash the underwear by hand with soap in the sink

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select the underwear to wash

        bind soap: item where:
            is_soap(soap)
        # Select a soap

        bind sink: item where:
            is_sink(sink) 
        # Select a sink in the bathroom
        
        wash_underwear_with_soap(underwear, soap, sink)
        # Wash the underwear in the sink with soap
##############################
From agent.py-> find a plan in act()
walk_executor(sink_231)exp(clothes_underwear_2049, sink_231)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(sink_42)putin_executor(clothes_underwear_2049, sink_42)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_underwear_2049)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(sink_231)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, soap_2054, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, plate_1000, Robot is close to the kitchen_counter_230. Robot is close to the sink_231. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_underwear_2049 ?
Answer: Move to bedroom_67 and locate bed_105. clothes_underwear_2049 is on top of bed_105.
Re-decompose: None

##############################
From agent.py
Human Instruction: Move to bedroom_67 and locate bed_105. clothes_underwear_2049 is on top of bed_105.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2006.
Action 2: look for clothes_underwear_2049 around basket_for_clothes_2006.
Action 3: Walk to closetdrawer_154.
Action 4: look for clothes_underwear_2049 around closetdrawer_154.
Action 5: Walk to closetdrawer_154.
Action 6: look for clothes_underwear_2049 around closetdrawer_154.
Action 7: Walk to closetdrawer_154.
Action 8: look for clothes_underwear_2049 around closetdrawer_154.
Action 9: Walk to closetdrawer_154.
Action 10: look for clothes_underwear_2049 around closetdrawer_154.
Action 11: Walk to sink_231.

##############################
From agent.py
exp(clothes_underwear_2049, sink_231)
Fail to find clothes_underwear_2049 around sink_231. 
##############################
From agent.py-> find a plan in act()
walk_executor(bed_105)exp(clothes_underwear_2049, bed_105)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(sink_42)putin_executor(clothes_underwear_2049, sink_42)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_underwear_2049)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(bed_105)
Robot find: mat_173, drawing_176, pillow_183, clothes_underwear_2049, clothes_dress_2044, pillow_182, chair_106, clothes_scarf_2048, Robot is close to the bed_105. Robot is close to the mat_173. 
##############################
From agent.py
exp(clothes_underwear_2049, bed_105)
Find clothes_underwear_2049. 
##############################
From agent.py-> find a plan in act()
walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(sink_42)putin_executor(clothes_underwear_2049, sink_42)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_underwear_2049)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(clothes_underwear_2049)
Robot find: Robot is close to the bed_105. Robot is close to the clothes_underwear_2049. 
##############################
From agent.py
grab_executor(clothes_underwear_2049)
Robot find: Robot is close to the bed_105. Robot is close to the clothes_underwear_2049. Grabbing clothes_underwear_2049 by right hand. 
##############################
From agent.py
walk_executor(sink_42)
Robot find: detergent_2084, cleaning_solution_2073, soap_2053, Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the sink_42. 
##############################
From agent.py
putin_executor(clothes_underwear_2049, sink_42)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the sink_42. clothes_underwear_2049 is close sink_42. clothes_underwear_2049 is inside sink_42. sink_42 is close clothes_underwear_2049. clothes_underwear_2049 released by right hand. 
##############################
From agent.py
walk_executor(clothes_underwear_2049)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the sink_42. 
##############################
From agent.py
grab_executor(clothes_underwear_2049)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the sink_42. Grabbing clothes_underwear_2049 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
wash_executor(clothes_underwear_2049)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. clothes_underwear_2049 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure the underwear is hand-washed with soap in the bathroom sink. The actions did not include any use of soap; therefore, the underwear was not washed with soap as specified.
##############################
From agent.py
Human Instruction: You need to ensure the underwear is hand-washed with soap in the bathroom sink. The actions did not include any use of soap; therefore, the underwear was not washed with soap as specified.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2006.
Action 2: look for clothes_underwear_2049 around basket_for_clothes_2006.
Action 3: Walk to closetdrawer_154.
Action 4: look for clothes_underwear_2049 around closetdrawer_154.
Action 5: Walk to closetdrawer_154.
Action 6: look for clothes_underwear_2049 around closetdrawer_154.
Action 7: Walk to closetdrawer_154.
Action 8: look for clothes_underwear_2049 around closetdrawer_154.
Action 9: Walk to closetdrawer_154.
Action 10: look for clothes_underwear_2049 around closetdrawer_154.
Action 11: Walk to sink_231.
Action 12: look for clothes_underwear_2049 around sink_231.
Action 13: Walk to bed_105.
Action 14: look for clothes_underwear_2049 around bed_105.
Action 15: Walk to clothes_underwear_2049.
Action 16: Grab clothes_underwear_2049.
Action 17: Walk to sink_42.
Action 18: Put clothes_underwear_2049 into sink_42.
Action 19: Walk to clothes_underwear_2049.
Action 20: Grab clothes_underwear_2049.
Action 21: Walk to faucet_43.
Action 22: Switch on faucet_43.
Action 23: Wash clothes_underwear_2049.
Action 24: Switch off faucet_43.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def hand_wash_with_soap(underwear: item, sink: item, soap: item):
    # Defines the behavior to hand wash clothes using soap
    body:
        achieve_once inhand(soap) # Pick up the soap
        achieve_once inhand(underwear) # Pick up the underwear
        achieve_once has_water(sink) # Ensure the sink has water
        wash(underwear) # Wash the underwear
        # Additional steps for scrubbing and rinsing could be added if required
        achieve_once clean(underwear) # Ensure the underwear is clean

def in_bathroom(item: item):
    # Function to check if an item is in the bathroom
    symbol in_bathroom = exists room: item : (is_bathroom(room) and inside(item, room))
    return in_bathroom

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Bind underwear

        bind sink: item where:
            is_sink(sink) and in_bathroom(sink)
        # Bind the sink located in the bathroom

        bind soap: item where:
            is_soap(soap)
        # Bind soap

        hand_wash_with_soap(underwear, sink, soap)
        # Execute the hand washing behavior

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('COLON', ':') at line 5774, column 9.
Expected one of: 
	* OR
	* __ANON_3
	* COMMA
	* __ANON_8
	* _NEWLINE
	* LESS_EQ
	* SLASH
	* PERCENT
	* AND
	* __ANON_4
	* IF
	* SEMICOLON
	* __ANON_1
	* __ANON_2
	* MINUS
	* GREATER_EQ
	* AT
	* __ANON_5
	* STAR
	* VBAR
	* DOUBLE_EQUAL
	* LESSTHAN
	* CIRCUMFLEX
	* AMPERSAND
	* FLOORDIV
	* MORETHAN
	* EQUAL
	* __ANON_7
	* __ANON_6
	* NOT_EQ
	* __ANON_0
	* RSHIFT
	* PLUS
	* LSHIFT

##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation
 
behavior hand_wash_with_soap(underwear:item, sink:item, soap:item):
    body:
        achieve_once inhand(soap) # Pick up the soap
        achieve_once inhand(underwear) # Pick up the underwear
        achieve_once has_water(sink) # Ensure the sink has water
        wash(underwear) # Wash the underwear
        achieve_once clean(underwear) # Ensure the underwear is clean

def in_bathroom(item: item):
    symbol in_bathroom = exists room: item : (is_bathroom(room) and inside(item, room))
    return in_bathroom

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Bind underwear

        bind sink: item where:
            is_sink(sink) and in_bathroom(sink)
        # Bind the sink located in the bathroom

        bind soap: item where:
            is_soap(soap)
        # Bind soap

        hand_wash_with_soap(underwear, sink, soap)
        # Execute the hand washing behavior

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior hand_wash_with_soap(underwear:item, sink:item, soap:item):
    body:
        achieve_once inhand(soap) # Pick up the soap
        achieve_once inhand(underwear) # Pick up the underwear
        achieve_once has_water(sink) # Ensure the sink has water
        wash(underwear) # Wash the underwear
        achieve_once clean(underwear) # Ensure the underwear is clean

def in_bathroom(item: item):
    symbol in_bathroom = exists room: item : (is_bathroom(room) and inside(item, room))
    return in_bathroom

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Bind underwear

        bind sink: item where:
            is_sink(sink) and in_bathroom(sink)
        # Bind the sink located in the bathroom

        bind soap: item where:
            is_soap(soap)
        # Bind soap

        hand_wash_with_soap(underwear, sink, soap)
        # Execute the hand washing behavior

##############################
From agent.py-> find a plan in act()
walk_executor(soap_2053)grab_executor(soap_2053)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_underwear_2049)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(soap_2053)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the sink_42. Robot is close to the soap_2053. 
##############################
From agent.py
grab_executor(soap_2053)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the sink_42. Robot is close to the soap_2053. Grabbing soap_2053 by left hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the soap_2053. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the soap_2053. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the soap_2053. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the soap_2053. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
wash_executor(clothes_underwear_2049)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the soap_2053. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the soap_2053. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure the underwear is washed with soap. The actions did not include any washing action that specifically includes soap. Make sure to use the soap to wash the underwear in the bathroom sink.
##############################
From agent.py
Human Instruction: You need to ensure the underwear is washed with soap. The actions did not include any washing action that specifically includes soap. Make sure to use the soap to wash the underwear in the bathroom sink.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2006.
Action 2: look for clothes_underwear_2049 around basket_for_clothes_2006.
Action 3: Walk to closetdrawer_154.
Action 4: look for clothes_underwear_2049 around closetdrawer_154.
Action 5: Walk to closetdrawer_154.
Action 6: look for clothes_underwear_2049 around closetdrawer_154.
Action 7: Walk to closetdrawer_154.
Action 8: look for clothes_underwear_2049 around closetdrawer_154.
Action 9: Walk to closetdrawer_154.
Action 10: look for clothes_underwear_2049 around closetdrawer_154.
Action 11: Walk to sink_231.
Action 12: look for clothes_underwear_2049 around sink_231.
Action 13: Walk to bed_105.
Action 14: look for clothes_underwear_2049 around bed_105.
Action 15: Walk to clothes_underwear_2049.
Action 16: Grab clothes_underwear_2049.
Action 17: Walk to sink_42.
Action 18: Put clothes_underwear_2049 into sink_42.
Action 19: Walk to clothes_underwear_2049.
Action 20: Grab clothes_underwear_2049.
Action 21: Walk to faucet_43.
Action 22: Switch on faucet_43.
Action 23: Wash clothes_underwear_2049.
Action 24: Switch off faucet_43.
Action 25: Walk to soap_2053.
Action 26: Grab soap_2053.
Action 27: Walk to faucet_43.
Action 28: Switch on faucet_43.
Action 29: Switch off faucet_43.
Action 30: Switch on faucet_43.
Action 31: Wash clothes_underwear_2049.
Action 32: Switch off faucet_43.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_toilet_paper_2090_around_toilet_37(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind toilet_instance:item where:
            is_toilet(toilet_instance) and id[toilet_instance]==37
        achieve close_char(char,toilet_instance)
        if can_open(toilet_instance):
            achieve_once open(toilet_instance)
            exp(toilet_paper,toilet_instance)
        else:
            exp(toilet_paper,toilet_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,toilet_instance]=True
        close[toilet_instance,toilet_paper]=True
    

behavior find_towel_2059_around_towel_rack_31(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==31
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior hand_wash_underwear_with_soap(underwear:item, soap:item, sink:item):
    body:
        achieve_once inside(underwear, sink)
        # Place the underwear inside the sink
        achieve_once inhand(soap)
        # Hold the soap in hand for washing
        achieve clean(underwear)
        # Ensure the underwear is clean at the end

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Bind the underwear item

        bind soap: item where:
            is_soap(soap)
        # Bind the soap item

        bind sink: item where:
            is_sink(sink) and is_bathroom(sink)
        # Bind the bathroom sink

        # Invoke the behavior to wash the underwear
        hand_wash_underwear_with_soap(underwear, soap, sink)
#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior wash_underwear(underwear:item, soap:item, faucet:item, sink:item):
    body:
        achieve inside(underwear, sink)
        # Place the underwear in the sink
        achieve_once inhand(soap)
        # Temporarily hold the soap
        achieve is_on(faucet)
        # Turn on the faucet to supply water
        wash(underwear)
        # Wash the underwear with soap and water
        achieve is_off(faucet)
        # Turn off the faucet after washing is complete

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select the underwear to be washed

        bind soap: item where:
            is_soap(soap)
        # Select the soap

        bind faucet: item where:
            is_faucet(faucet)
        # Select the faucet

        bind sink: item where:
            is_sink(sink)
        # Select the sink

        wash_underwear(underwear, soap, faucet, sink)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_food_2022_around_cupboard_229(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==229
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_food,cupboard_instance)
        else:
            exp(food_food,cupboard_instance)
    eff:
        unknown[food_food]=False
        close[food_food,cupboard_instance]=True
        close[cupboard_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_underwear(underwear:item, sink:item, soap:item):
    body:
        achieve close_char(char, sink)
        achieve_once inhand(underwear)
        achieve close_char(char, soap)
        achieve_once inhand(soap)
        wash(underwear)
        # Hand wash the underwear with soap in the sink

behavior __goal__():
    body:   
        bind underwear: item where:
            is_clothes_underwear(underwear)
        bind sink: item where:
            is_sink(sink) and is_bathroom(sink)
        bind soap: item where:
            is_soap(soap)
        # Ensure that underwear is grasped and wash it with soap in the bathroom sink
        hand_wash_underwear(underwear, sink, soap)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "1. hand wash the underwear with soap in the sink in the bathroom." ?
Answer: Put the underwear in a sink in the bathroom. Hold a soap and wash the underwear by hand.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2059_around_towel_rack_31(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==31
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
def has_soap_in_wash_process(sink: item):
    # Check if soap is used while washing clothes in the sink
    symbol has_soap = exists o: item : (is_soap(o) and inside(o, sink))
    return has_soap

behavior wash_underwear_in_sink(underwear: item, sink: item):
    body:
        bind soap: item where:
            is_soap(soap)
        # Ensure soap is used in the washing process
        if not has_soap_in_wash_process(sink):
            achieve_once inside(soap, sink)
        wash(underwear)  # Apply washing to the underwear

def has_water_in_sink(sink: item):
    # Check if there is water in the sink
    symbol sink_has_water = exists o: item : (has_water(o) and inside(o, sink))
    return sink_has_water

behavior fill_sink_with_water(sink: item):
    body:
        achieve_once is_on(faucet)
        achieve_once has_water(sink)

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Bind the underwear to be washed

        bind sink: item where:
            is_sink(sink) and inside(sink, bathroom)
        # Identify the sink in the bathroom for washing

        if not has_water_in_sink(sink):
            fill_sink_with_water(sink)
            # If the sink lacks water, fill it first

        wash_underwear_in_sink(underwear, sink)
        # Wash the underwear with soap in the sink

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: faucet; available variables: [Variable<sink: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_towel_2057_around_towel_rack_31(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==31
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#goal_representation
 
def has_soap_in_wash_process(sink: item):
    # Check if soap is used while washing clothes in the sink
    symbol has_soap = exists o: item : (is_soap(o) and inside(o, sink))
    return has_soap

behavior wash_underwear_in_sink(underwear: item, sink: item, soap: item):
    body:
        # Ensure soap is used in the washing process
        if not has_soap_in_wash_process(sink):
            achieve_once inside(soap, sink)
        wash(underwear)  # Apply washing to the underwear

def has_water_in_sink(sink: item):
    # Check if there is water in the sink
    symbol sink_has_water = exists o: item : (has_water(o) and inside(o, sink))
    return sink_has_water

behavior fill_sink_with_water(sink: item, faucet: item):
    body:
        achieve_once is_on(faucet)
        achieve_once has_water(sink)

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Bind the underwear to be washed

        bind sink: item where:
            is_sink(sink) and inside(sink, bathroom)
        # Identify the sink in the bathroom for washing

        bind soap: item where:
            is_soap(soap)
        # Select the available soap

        bind faucet: item where:
            is_faucet(faucet) and close(faucet, sink)
        # Select the faucet close to the sink

        if not has_water_in_sink(sink):
            fill_sink_with_water(sink, faucet)
            # If the sink lacks water, fill it first

        wash_underwear_in_sink(underwear, sink, soap)
        # Wash the underwear with soap in the sink

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: bathroom; available variables: [Variable<sink: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_towel_2058_around_towel_rack_31(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==31
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#goal_representation
 
def has_soap_in_wash_process(sink: item):
    # Check if soap is used while washing clothes in the sink
    symbol has_soap = exists o: item : (is_soap(o) and inside(o, sink))
    return has_soap

behavior wash_underwear_in_sink(underwear: item, sink: item, soap: item):
    body:
        # Ensure soap is used in the washing process
        if not has_soap_in_wash_process(sink):
            achieve_once inside(soap, sink)
        wash(underwear)  # Apply washing to the underwear

def has_water_in_sink(sink: item):
    # Check if there is water in the sink
    symbol sink_has_water = exists o: item : (has_water(o) and inside(o, sink))
    return sink_has_water

behavior fill_sink_with_water(sink: item, faucet: item):
    body:
        achieve_once is_on(faucet)
        achieve_once has_water(sink)

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        # Identify the bathroom

        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Bind the underwear to be washed

        bind sink: item where:
            is_sink(sink) and inside(sink, bathroom)
        # Identify the sink in the bathroom for washing

        bind soap: item where:
            is_soap(soap)
        # Select the available soap

        bind faucet: item where:
            is_faucet(faucet) and close(faucet, sink)
        # Select the faucet close to the sink

        if not has_water_in_sink(sink):
            fill_sink_with_water(sink, faucet)
            # If the sink lacks water, fill it first

        wash_underwear_in_sink(underwear, sink, soap)
        # Wash the underwear with soap in the sink

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def has_soap_in_wash_process(sink: item):
    # Check if soap is used while washing clothes in the sink
    symbol has_soap = exists o: item : (is_soap(o) and inside(o, sink))
    return has_soap

behavior wash_underwear_in_sink(underwear: item, sink: item, soap: item):
    body:
        # Ensure soap is used in the washing process
        if not has_soap_in_wash_process(sink):
            achieve_once inside(soap, sink)
        wash(underwear)  # Apply washing to the underwear

def has_water_in_sink(sink: item):
    # Check if there is water in the sink
    symbol sink_has_water = exists o: item : (has_water(o) and inside(o, sink))
    return sink_has_water

behavior fill_sink_with_water(sink: item, faucet: item):
    body:
        achieve_once is_on(faucet)
        achieve_once has_water(sink)

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        # Identify the bathroom

        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Bind the underwear to be washed

        bind sink: item where:
            is_sink(sink) and inside(sink, bathroom)
        # Identify the sink in the bathroom for washing

        bind soap: item where:
            is_soap(soap)
        # Select the available soap

        bind faucet: item where:
            is_faucet(faucet) and close(faucet, sink)
        # Select the faucet close to the sink

        if not has_water_in_sink(sink):
            fill_sink_with_water(sink, faucet)
            # If the sink lacks water, fill it first

        wash_underwear_in_sink(underwear, sink, soap)
        # Wash the underwear with soap in the sink

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)put_executor(soap_2053, kitchen_counter_230)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(soap_2053)grab_executor(soap_2053)walk_executor(sink_42)putin_executor(soap_2053, sink_42)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_underwear_2049)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the soap_2053. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
put_executor(soap_2053, kitchen_counter_230)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the soap_2053. Robot is close to the kitchen_counter_230. kitchen_counter_230 is close soap_2053. soap_2053 is close kitchen_counter_230. soap_2053 is on kitchen_counter_230. soap_2053 released by left hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py
walk_executor(soap_2053)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the soap_2053. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
grab_executor(soap_2053)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the soap_2053. Robot is close to the kitchen_counter_230. Grabbing soap_2053 by left hand. 
##############################
From agent.py
walk_executor(sink_42)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the soap_2053. Robot is close to the bathroom_counter_41. Robot is close to the sink_42. 
##############################
From agent.py
putin_executor(soap_2053, sink_42)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the soap_2053. Robot is close to the bathroom_counter_41. Robot is close to the sink_42. soap_2053 is close sink_42. soap_2053 is inside sink_42. soap_2053 released by left hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
wash_executor(clothes_underwear_2049)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2047_around_closetdrawer_154(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==154
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_detergent_in_washing_machine(detergent:item, washing_machine:item):
    body:
        achieve_once inside(detergent, washing_machine)
        # Add detergent into the washing machine for cleaning

behavior add_clothes_to_washing_machine(clothes:item, washing_machine:item):
    body:
        achieve_once inside(clothes, washing_machine)
        # Place the clothes into the washing machine for cleaning

behavior start_washing_machine(washing_machine:item):
    body:
        achieve_once closed(washing_machine)
        # Close the washing machine door
        achieve_once is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        bind detergent: item where:
            is_detergent(detergent)
        # Select detergent for the washing machine

        bind clothes_underwear: item where:
            is_clothes_underwear(clothes_underwear)
        # Select washed underwear

        put_detergent_in_washing_machine(detergent, washing_machine)
        # Add detergent to the washing machine
        
        add_clothes_to_washing_machine(clothes_underwear, washing_machine)
        # Add the washed underwear to the washing machine

        start_washing_machine(washing_machine)
        # Start the washing machine

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior put_detergent_in_washing_machine(detergent:item, washing_machine:item):
    body:
        achieve_once inside(detergent, washing_machine)
        # Add detergent into the washing machine for cleaning

behavior add_clothes_to_washing_machine(clothes:item, washing_machine:item):
    body:
        achieve_once inside(clothes, washing_machine)
        # Place the clothes into the washing machine for cleaning

behavior start_washing_machine(washing_machine:item):
    body:
        achieve_once closed(washing_machine)
        # Close the washing machine door
        achieve_once is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        bind detergent: item where:
            is_detergent(detergent)
        # Select detergent for the washing machine

        bind clothes_underwear: item where:
            is_clothes_underwear(clothes_underwear)
        # Select washed underwear

        put_detergent_in_washing_machine(detergent, washing_machine)
        # Add detergent to the washing machine
        
        add_clothes_to_washing_machine(clothes_underwear, washing_machine)
        # Add the washed underwear to the washing machine

        start_washing_machine(washing_machine)
        # Start the washing machine

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2007)open_executor(washing_machine_2007)walk_executor(detergent_2084)grab_executor(detergent_2084)walk_executor(washing_machine_2007)putin_executor(detergent_2084, washing_machine_2007)putin_executor(clothes_underwear_2049, washing_machine_2007)close_executor(washing_machine_2007)plugin_executor(washing_machine_2007)switchon_executor(washing_machine_2007)
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the washing_machine_2007. 
##############################
From agent.py
open_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the washing_machine_2007. washing_machine_2007 is opened. 
##############################
From agent.py
walk_executor(detergent_2084)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the sink_42. Robot is close to the detergent_2084. 
##############################
From agent.py
grab_executor(detergent_2084)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the sink_42. Robot is close to the detergent_2084. Grabbing detergent_2084 by left hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the detergent_2084. Robot is close to the washing_machine_2007. 
##############################
From agent.py
putin_executor(detergent_2084, washing_machine_2007)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the detergent_2084. Robot is close to the washing_machine_2007. detergent_2084 is close washing_machine_2007. detergent_2084 is inside washing_machine_2007. washing_machine_2007 is close detergent_2084. detergent_2084 released by left hand. 
##############################
From agent.py
putin_executor(clothes_underwear_2049, washing_machine_2007)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the detergent_2084. Robot is close to the washing_machine_2007. clothes_underwear_2049 is close washing_machine_2007. clothes_underwear_2049 is inside washing_machine_2007. washing_machine_2007 is close clothes_underwear_2049. clothes_underwear_2049 released by right hand. 
##############################
From agent.py
close_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is closed. 
##############################
From agent.py
plugin_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is plugged in. 
##############################
From agent.py
switchon_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
First, hand wash the underwear with soap in the sink in the bathroom, then put it in the washing machine, add some detergent for a thorough clean.
Action History:
['walk_executor(basket_for_clothes_2006)', 'walk_executor(closetdrawer_154)', 'walk_executor(closetdrawer_154)', 'walk_executor(closetdrawer_154)', 'walk_executor(closetdrawer_154)', 'walk_executor(sink_231)', 'walk_executor(bed_105)', 'walk_executor(clothes_underwear_2049)', 'grab_executor(clothes_underwear_2049)', 'walk_executor(sink_42)', 'putin_executor(clothes_underwear_2049, sink_42)', 'walk_executor(clothes_underwear_2049)', 'grab_executor(clothes_underwear_2049)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'wash_executor(clothes_underwear_2049)', 'switchoff_executor(faucet_43)', 'walk_executor(soap_2053)', 'grab_executor(soap_2053)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'switchoff_executor(faucet_43)', 'switchon_executor(faucet_43)', 'wash_executor(clothes_underwear_2049)', 'switchoff_executor(faucet_43)', 'walk_executor(kitchen_counter_230)', 'put_executor(soap_2053, kitchen_counter_230)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'switchoff_executor(faucet_43)', 'walk_executor(soap_2053)', 'grab_executor(soap_2053)', 'walk_executor(sink_42)', 'putin_executor(soap_2053, sink_42)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'wash_executor(clothes_underwear_2049)', 'switchoff_executor(faucet_43)', 'walk_executor(washing_machine_2007)', 'open_executor(washing_machine_2007)', 'walk_executor(detergent_2084)', 'grab_executor(detergent_2084)', 'walk_executor(washing_machine_2007)', 'putin_executor(detergent_2084, washing_machine_2007)', 'putin_executor(clothes_underwear_2049, washing_machine_2007)', 'close_executor(washing_machine_2007)', 'plugin_executor(washing_machine_2007)', 'switchon_executor(washing_machine_2007)']
Time info:
Time consume: 460 seconds
Exp_helper query times: 1
Guidance query times: 1
library scale: 54
goal generate times: 10
goal correct times: 4
action_num: 48

Task complete rate:
Keystate: k1 - Requires: 9 steps
Keystate: k2 - Requires: 0 steps
Action Completion Rate: 1.0
Scene_id: 0
##############################
