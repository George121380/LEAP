From agent.py
Reset goals: The sub-goals are: 
['1. Identify all the bowls and plates that need washing.', '2. Load the bowls and plates into the dishwasher.', '3. Start the dishwasher to wash the bowls and plates.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2140_around_dishwasher_129(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==129
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(bowl,dishwasher_instance)
        else:
            exp(bowl,dishwasher_instance)
    eff:
        unknown[bowl]=False
        close[bowl,dishwasher_instance]=True
        close[dishwasher_instance,bowl]=True
    

behavior find_plate_2152_around_cupboard_118(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(plate,cupboard_instance)
        else:
            exp(plate,cupboard_instance)
    eff:
        unknown[plate]=False
        close[plate,cupboard_instance]=True
        close[cupboard_instance,plate]=True
    

#exp_behavior_end

#goal_representation

def has_bowls_and_plates():
    # Function to check if there are bowls and plates needing washing
    symbol has_items= exists o: item : ((is_bowl(o) or is_plate(o)) and dirty(o))
    return has_items

behavior __goal__():
    body:
        if has_bowls_and_plates():
            # If bowls or plates are already identified as needing washing, no further action is needed to identify them
            foreach o: item:
                if (is_bowl(o) or is_plate(o)) and dirty(o) and not visited(o):
                    observe(o, "Check if it needs washing")

        else:
            # If information about dirty bowls or plates is not available, inspect potential candidates
            foreach o: item:
                if (is_bowl(o) or is_plate(o)) and not visited(o):
                    observe(o, "Check if it needs washing")

#goal_representation_end

##############################
From agent.py->reset_goal

def has_bowls_and_plates():
    # Function to check if there are bowls and plates needing washing
    symbol has_items= exists o: item : ((is_bowl(o) or is_plate(o)) and dirty(o))
    return has_items

behavior __goal__():
    body:
        if has_bowls_and_plates():
            # If bowls or plates are already identified as needing washing, no further action is needed to identify them
            foreach o: item:
                if (is_bowl(o) or is_plate(o)) and dirty(o) and not visited(o):
                    observe(o, "Check if it needs washing")

        else:
            # If information about dirty bowls or plates is not available, inspect potential candidates
            foreach o: item:
                if (is_bowl(o) or is_plate(o)) and not visited(o):
                    observe(o, "Check if it needs washing")

##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_129)open_executor(dishwasher_129)exp(bowl_2140, dishwasher_129)walk_executor(bowl_2140)obs(bowl_2140, Check if it needs washing)walk_executor(dishwasher_129)exp(bowl_2141, dishwasher_129)walk_executor(bowl_2141)obs(bowl_2141, Check if it needs washing)walk_executor(dishwasher_129)exp(bowl_2142, dishwasher_129)walk_executor(bowl_2142)obs(bowl_2142, Check if it needs washing)walk_executor(cupboard_118)open_executor(cupboard_118)exp(plate_2152, cupboard_118)walk_executor(plate_2152)obs(plate_2152, Check if it needs washing)
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the dishwasher_129. 
##############################
From agent.py
open_executor(dishwasher_129)
Robot find: detergent_2011, measuring_cup_2012, Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the measuring_cup_2012. dishwasher_129 is opened. 
##############################
From agent.py
exp(bowl_2140, dishwasher_129)
Fail to find bowl_2140 around dishwasher_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(bowl_2140, cupboard_118)walk_executor(bowl_2140)obs(bowl_2140, Check if it needs washing)walk_executor(cupboard_118)exp(bowl_2141, cupboard_118)walk_executor(bowl_2141)obs(bowl_2141, Check if it needs washing)walk_executor(cupboard_118)exp(bowl_2142, cupboard_118)walk_executor(bowl_2142)obs(bowl_2142, Check if it needs washing)walk_executor(cupboard_118)exp(plate_2152, cupboard_118)walk_executor(plate_2152)obs(plate_2152, Check if it needs washing)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: pot_78, Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(bowl_2140, cupboard_118)
Fail to find bowl_2140 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(bowl_2140, kitchen_counter_123)walk_executor(bowl_2140)obs(bowl_2140, Check if it needs washing)walk_executor(kitchen_counter_123)exp(bowl_2141, kitchen_counter_123)walk_executor(bowl_2141)obs(bowl_2141, Check if it needs washing)walk_executor(kitchen_counter_123)exp(bowl_2142, kitchen_counter_123)walk_executor(bowl_2142)obs(bowl_2142, Check if it needs washing)walk_executor(kitchen_counter_123)exp(plate_2152, kitchen_counter_123)walk_executor(plate_2152)obs(plate_2152, Check if it needs washing)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Robot find: tray_2068, oil_2149, knife_2035, food_kiwi_2054, food_orange_2027, Robot is close to the kitchen_counter_123. 
##############################
From agent.py
exp(bowl_2140, kitchen_counter_123)
Fail to find bowl_2140 around kitchen_counter_123. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Identify the bowls and plates that need washing.', '2. Use the dishwasher to wash the bowls and plates.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2142_around_fridge_126(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(bowl,fridge_instance)
        else:
            exp(bowl,fridge_instance)
    eff:
        unknown[bowl]=False
        close[bowl,fridge_instance]=True
        close[fridge_instance,bowl]=True
    

behavior find_plate_2152_around_sink_19(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==19
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(plate,sink_instance)
        else:
            exp(plate,sink_instance)
    eff:
        unknown[plate]=False
        close[plate,sink_instance]=True
        close[sink_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
def is_bowl_or_plate(item:item):
    # Function to check if an item is a bowl or a plate
    return is_bowl(item) or is_plate(item)

behavior __goal__():
    body:
        foreach loc: item:
            if (is_kitchen_counter(loc) or is_cupboard(loc) or is_dishwasher(loc)) and not visited(loc):
                # Check kitchen counters, cupboards, and dishwasher
                observe(loc, "Check if there is any bowl or plate around")
                # Observe the location for bowls or plates

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_bowl_or_plate(item:item):
    # Function to check if an item is a bowl or a plate
    return is_bowl(item) or is_plate(item)

behavior __goal__():
    body:
        foreach loc: item:
            if (is_kitchen_counter(loc) or is_cupboard(loc) or is_dishwasher(loc)) and not visited(loc):
                # Check kitchen counters, cupboards, and dishwasher
                observe(loc, "Check if there is any bowl or plate around")
                # Observe the location for bowls or plates

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)obs(cupboard_117, Check if there is any bowl or plate around)walk_executor(cupboard_118)obs(cupboard_118, Check if there is any bowl or plate around)walk_executor(kitchen_counter_119)obs(kitchen_counter_119, Check if there is any bowl or plate around)walk_executor(kitchen_counter_122)obs(kitchen_counter_122, Check if there is any bowl or plate around)walk_executor(kitchen_counter_123)obs(kitchen_counter_123, Check if there is any bowl or plate around)walk_executor(dishwasher_129)obs(dishwasher_129, Check if there is any bowl or plate around)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
obs(cupboard_117, Check if there is any bowl or plate around)
Get this information:  coffee_filter_2053 is inside cupboard_117. cupboard_117 is inside dining_room_41. cupboard_117 is close to wall_64. cupboard_117 is close to tray_128. cupboard_117 is close to wall_67. cupboard_117 is close to coffee_filter_2053. cupboard_117 is close to walllamp_140. cupboard_117 is close to knifeblock_76. cupboard_117 is close to pot_78. cupboard_117 is close to walllamp_141. cupboard_117 is close to ceiling_55. cupboard_117 is close to ceiling_54. cupboard_117 is close to kitchen_counter_119. cupboard_117 is close to sink_120. cupboard_117 is close to faucet_121. cupboard_117 is close to kitchen_counter_123. cupboard_117 is close to stovefan_125. cupboard_117 is close to oven_127. cupboard_117 is close to character_240. cupboard_117 is on wall_67. cupboard_117 is CLEAN. cupboard_117 is OPEN.
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. 
##############################
From agent.py
obs(cupboard_118, Check if there is any bowl or plate around)
Get this information:  cupboard_118 is on wall_68. knife_2037 is inside cupboard_118. cupboard_118 is inside dining_room_41. cupboard_118 is close to wall_64. cupboard_118 is close to dishwasher_129. cupboard_118 is close to coffe_maker_130. cupboard_118 is close to tray_128. cupboard_118 is close to toaster_132. cupboard_118 is close to wall_68. cupboard_118 is close to microwave_135. cupboard_118 is close to walllamp_139. cupboard_118 is close to walllamp_141. cupboard_118 is close to pot_78. cupboard_118 is close to tea_2066. cupboard_118 is close to food_peanut_butter_2077. cupboard_118 is close to knife_2037. cupboard_118 is close to ceiling_55. cupboard_118 is close to kitchen_counter_122. cupboard_118 is close to ceiling_60. cupboard_118 is close to stovefan_125. cupboard_118 is close to oven_127. cupboard_118 is close to character_240. food_peanut_butter_2077 is inside cupboard_118. tea_2066 is inside cupboard_118. cupboard_118 is CLEAN. cupboard_118 is OPEN.
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the kitchen_counter_119. 
##############################
From agent.py
obs(kitchen_counter_119, Check if there is any bowl or plate around)
Get this information:  kitchen_counter_119 is inside dining_room_41. food_salt_2041 is on kitchen_counter_119. fork_2150 is on kitchen_counter_119. faucet_121 is on kitchen_counter_119. cutting_board_2123 is on kitchen_counter_119. kitchen_counter_119 is close to tray_128. kitchen_counter_119 is close to walllamp_140. kitchen_counter_119 is close to walllamp_141. kitchen_counter_119 is close to food_salt_2041. kitchen_counter_119 is close to floor_45. kitchen_counter_119 is close to floor_46. kitchen_counter_119 is close to wall_64. kitchen_counter_119 is close to desk_193. kitchen_counter_119 is close to wall_67. kitchen_counter_119 is close to cutting_board_2123. kitchen_counter_119 is close to knifeblock_76. kitchen_counter_119 is close to pot_78. kitchen_counter_119 is close to cpuscreen_210. kitchen_counter_119 is close to stove_2135. kitchen_counter_119 is close to pot_2138. kitchen_counter_119 is close to bowl_2140. kitchen_counter_119 is close to bowl_2141. kitchen_counter_119 is close to bowl_2142. kitchen_counter_119 is close to fork_2150. kitchen_counter_119 is close to fork_2151. kitchen_counter_119 is close to plate_2152. kitchen_counter_119 is close to cupboard_117. kitchen_counter_119 is close to sink_120. kitchen_counter_119 is close to faucet_121. kitchen_counter_119 is close to kitchen_counter_123. kitchen_counter_119 is close to stovefan_125. kitchen_counter_119 is close to oven_127. kitchen_counter_119 is close to character_240. bowl_2142 is on kitchen_counter_119. sink_120 is inside kitchen_counter_119. bowl_2140 is on kitchen_counter_119. fork_2151 is on kitchen_counter_119. stove_2135 is on kitchen_counter_119. pot_2138 is on kitchen_counter_119. bowl_2141 is on kitchen_counter_119. plate_2152 is on kitchen_counter_119. kitchen_counter_119 is CLEAN. kitchen_counter_119 is OPEN.
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, fryingpan_2154, Robot is close to the kitchen_counter_122. 
##############################
From agent.py
obs(kitchen_counter_122, Check if there is any bowl or plate around)
Get this information:  spectacles_2153 is on kitchen_counter_122. microwave_135 is on kitchen_counter_122. kitchen_counter_122 is close to tray_128. kitchen_counter_122 is close to dishwasher_129. kitchen_counter_122 is close to coffe_maker_130. kitchen_counter_122 is close to trashcan_99. kitchen_counter_122 is close to toaster_132. kitchen_counter_122 is close to wall_68. kitchen_counter_122 is close to wall_64. kitchen_counter_122 is close to microwave_135. kitchen_counter_122 is close to spectacles_2153. kitchen_counter_122 is close to fryingpan_2154. kitchen_counter_122 is close to walllamp_139. kitchen_counter_122 is close to walllamp_141. kitchen_counter_122 is close to floor_46. kitchen_counter_122 is close to pot_78. kitchen_counter_122 is close to floor_51. kitchen_counter_122 is close to cupboard_118. kitchen_counter_122 is close to stovefan_125. kitchen_counter_122 is close to oven_127. kitchen_counter_122 is close to character_240. coffe_maker_130 is on kitchen_counter_122. toaster_132 is on kitchen_counter_122. fryingpan_2154 is on kitchen_counter_122. kitchen_counter_122 is inside dining_room_41. kitchen_counter_122 is DIRTY. kitchen_counter_122 is CLOSED.
##############################
From agent.py
walk_executor(kitchen_counter_123)
Robot find: Robot is close to the kitchen_counter_123. 
##############################
From agent.py
obs(kitchen_counter_123, Check if there is any bowl or plate around)
Get this information:  tray_2068 is on kitchen_counter_123. kitchen_counter_123 is inside dining_room_41. kitchen_counter_123 is close to desk_193. kitchen_counter_123 is close to floor_163. kitchen_counter_123 is close to wall_67. kitchen_counter_123 is close to floor_164. kitchen_counter_123 is close to oil_2149. kitchen_counter_123 is close to food_kiwi_2054. kitchen_counter_123 is close to food_orange_2027. kitchen_counter_123 is close to floor_45. kitchen_counter_123 is close to wall_175. kitchen_counter_123 is close to cpuscreen_210. kitchen_counter_123 is close to keyboard_211. kitchen_counter_123 is close to knife_2035. kitchen_counter_123 is close to cupboard_117. kitchen_counter_123 is close to tray_2068. kitchen_counter_123 is close to kitchen_counter_119. kitchen_counter_123 is close to sink_120. kitchen_counter_123 is close to character_240. oil_2149 is on kitchen_counter_123. knife_2035 is on kitchen_counter_123. food_kiwi_2054 is on kitchen_counter_123. food_orange_2027 is on kitchen_counter_123. kitchen_counter_123 is on floor_45. kitchen_counter_123 is CLEAN. kitchen_counter_123 is CLOSED.
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the measuring_cup_2012. 
##############################
From agent.py
obs(dishwasher_129, Check if there is any bowl or plate around)
Get this information:  dishwasher_129 is close to wall_64. dishwasher_129 is close to coffe_maker_130. dishwasher_129 is close to trashcan_99. dishwasher_129 is close to toaster_132. dishwasher_129 is close to wall_68. dishwasher_129 is close to microwave_135. dishwasher_129 is close to walllamp_139. dishwasher_129 is close to floor_46. dishwasher_129 is close to floor_51. dishwasher_129 is close to cupboard_118. dishwasher_129 is close to kitchen_counter_122. dishwasher_129 is close to detergent_2011. dishwasher_129 is close to measuring_cup_2012. dishwasher_129 is close to character_240. measuring_cup_2012 is inside dishwasher_129. detergent_2011 is inside dishwasher_129. dishwasher_129 is inside dining_room_41. dishwasher_129 is OFF. dishwasher_129 is OPEN. dishwasher_129 is PLUGGED_IN. dishwasher_129 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2037_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_cup_2049_around_stovefan_125(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind stovefan_instance:item where:
            is_stovefan(stovefan_instance) and id[stovefan_instance]==125
        achieve close_char(char,stovefan_instance)
        if can_open(stovefan_instance):
            achieve_once open(stovefan_instance)
            exp(cup,stovefan_instance)
        else:
            exp(cup,stovefan_instance)
    eff:
        unknown[cup]=False
        close[cup,stovefan_instance]=True
        close[stovefan_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher) and id[dishwasher] == 129
        # Select the dishwasher with ID 129

        foreach o: item:
        # Load all bowls and plates close to the dishwasher
            if is_bowl(o) or is_plate(o) and close(o, dishwasher):
                load_dishwasher(o, dishwasher)
                # Place each bowl and plate into the dishwasher

        start_dishwasher(dishwasher)
        # Start the dishwasher

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher) and id[dishwasher] == 129
        # Select the dishwasher with ID 129

        foreach o: item:
        # Load all bowls and plates close to the dishwasher
            if is_bowl(o) or is_plate(o) and close(o, dishwasher):
                load_dishwasher(o, dishwasher)
                # Place each bowl and plate into the dishwasher

        start_dishwasher(dishwasher)
        # Start the dishwasher

##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(dishwasher_129)putin_executor(bowl_2140, dishwasher_129)walk_executor(bowl_2141)grab_executor(bowl_2141)walk_executor(dishwasher_129)putin_executor(bowl_2141, dishwasher_129)walk_executor(bowl_2142)grab_executor(bowl_2142)walk_executor(dishwasher_129)putin_executor(bowl_2142, dishwasher_129)close_executor(dishwasher_129)switchon_executor(dishwasher_129)
##############################
From agent.py
walk_executor(bowl_2140)
Robot find: Robot is close to the bowl_2140. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
grab_executor(bowl_2140)
Robot find: Robot is close to the bowl_2140. Robot is close to the kitchen_counter_119. Grabbing bowl_2140 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the bowl_2140. Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the measuring_cup_2012. 
##############################
From agent.py
putin_executor(bowl_2140, dishwasher_129)
Robot find: Robot is close to the bowl_2140. Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the measuring_cup_2012. dishwasher_129 is close bowl_2140. bowl_2140 is close dishwasher_129. bowl_2140 is inside dishwasher_129. bowl_2140 released by right hand. 
##############################
From agent.py
walk_executor(bowl_2141)
Robot find: Robot is close to the bowl_2141. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
grab_executor(bowl_2141)
Robot find: Robot is close to the bowl_2141. Robot is close to the kitchen_counter_119. Grabbing bowl_2141 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the bowl_2141. Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the bowl_2140. Robot is close to the measuring_cup_2012. 
##############################
From agent.py
putin_executor(bowl_2141, dishwasher_129)
Robot find: Robot is close to the bowl_2141. Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the bowl_2140. Robot is close to the measuring_cup_2012. dishwasher_129 is close bowl_2141. bowl_2141 is inside dishwasher_129. bowl_2141 is close dishwasher_129. bowl_2141 released by right hand. 
##############################
From agent.py
walk_executor(bowl_2142)
Robot find: iron_2161, Robot is close to the bowl_2142. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
grab_executor(bowl_2142)
Robot find: Robot is close to the bowl_2142. Robot is close to the kitchen_counter_119. Grabbing bowl_2142 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the bowl_2142. Robot is close to the dishwasher_129. Robot is close to the measuring_cup_2012. Robot is close to the detergent_2011. Robot is close to the bowl_2140. Robot is close to the bowl_2141. 
##############################
From agent.py
putin_executor(bowl_2142, dishwasher_129)
Robot find: Robot is close to the bowl_2142. Robot is close to the dishwasher_129. Robot is close to the measuring_cup_2012. Robot is close to the detergent_2011. Robot is close to the bowl_2140. Robot is close to the bowl_2141. dishwasher_129 is close bowl_2142. bowl_2142 is close dishwasher_129. bowl_2142 is inside dishwasher_129. bowl_2142 released by right hand. 
##############################
From agent.py
close_executor(dishwasher_129)
Robot find: Robot is close to the dishwasher_129. dishwasher_129 is closed. 
##############################
From agent.py
switchon_executor(dishwasher_129)
Robot find: Robot is close to the dishwasher_129. dishwasher_129 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
wash all the bowls and the plates with dishwasher
Action History:
['walk_executor(dishwasher_129)', 'open_executor(dishwasher_129)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'walk_executor(kitchen_counter_123)', 'walk_executor(cupboard_117)', 'walk_executor(cupboard_118)', 'walk_executor(kitchen_counter_119)', 'walk_executor(kitchen_counter_122)', 'walk_executor(kitchen_counter_123)', 'walk_executor(dishwasher_129)', 'walk_executor(bowl_2140)', 'grab_executor(bowl_2140)', 'walk_executor(dishwasher_129)', 'putin_executor(bowl_2140, dishwasher_129)', 'walk_executor(bowl_2141)', 'grab_executor(bowl_2141)', 'walk_executor(dishwasher_129)', 'putin_executor(bowl_2141, dishwasher_129)', 'walk_executor(bowl_2142)', 'grab_executor(bowl_2142)', 'walk_executor(dishwasher_129)', 'putin_executor(bowl_2142, dishwasher_129)', 'close_executor(dishwasher_129)', 'switchon_executor(dishwasher_129)']
Time info:
Time consume: 141 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 116
goal generate times: 3
goal correct times: 0
action_num: 25

Task complete rate:
Keystate: k1 - Requires: 6 steps
Keystate: k2 - Requires: 0 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
