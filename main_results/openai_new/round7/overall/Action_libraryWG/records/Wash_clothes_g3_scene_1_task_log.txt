From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the jacket.', '2. Wash the jacket using the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2125_around_sink_120(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_detergent_2155_around_washing_machine_2079(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_towel_2128_around_sink_120(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(towel,sink_instance)
        else:
            exp(towel,sink_instance)
    eff:
        unknown[towel]=False
        close[towel,sink_instance]=True
        close[sink_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_jacket(jacket:item):
    body:
        achieve_once clean(jacket)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)

        hand_wash_jacket(jacket)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2010_around_sink_120(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_clothes_jacket_2119_around_basket_for_clothes_2078(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_jacket,basket_for_clothes_instance)
        else:
            exp(clothes_jacket,basket_for_clothes_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_jacket]=True
    

behavior find_detergent_2011_around_washing_machine_2079(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_jacket(jacket: item):
    body:
        achieve_once clean(jacket)
        # Ensure the jacket is clean after hand washing

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket to hand wash
        
        hand_wash_jacket(jacket)
        # Hand wash the jacket

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior hand_wash_jacket(jacket: item):
    body:
        achieve_once clean(jacket)
        # Ensure the jacket is clean after hand washing

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket to hand wash
        
        hand_wash_jacket(jacket)
        # Hand wash the jacket

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2078)exp(clothes_jacket_2119, basket_for_clothes_2078)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(basket_for_clothes_2078)
Robot find: clothes_pants_2157, clothes_shirt_2158, clothes_socks_2159, clothes_skirt_2160, Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the clothes_socks_2159. Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. 
##############################
From agent.py
exp(clothes_jacket_2119, basket_for_clothes_2078)
Fail to find clothes_jacket_2119 around basket_for_clothes_2078. 
##############################
From agent.py-> find a plan in act()
walk_executor(dresser_274)open_executor(dresser_274)exp(clothes_jacket_2119, dresser_274)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(dresser_274)
Robot find: Robot is close to the dresser_274. 
##############################
From agent.py
open_executor(dresser_274)
Robot find: hanger_292, hanger_293, hanger_294, blow_dryer_2057, cat_2069, check_2075, clothes_pants_2036, Robot is close to the hanger_292. Robot is close to the hanger_293. Robot is close to the hanger_294. Robot is close to the blow_dryer_2057. Robot is close to the dresser_274. Robot is close to the cat_2069. Robot is close to the check_2075. dresser_274 is opened. 
##############################
From agent.py
exp(clothes_jacket_2119, dresser_274)
Fail to find clothes_jacket_2119 around dresser_274. 
##############################
From agent.py-> find a plan in act()
walk_executor(cpuscreen_210)exp(clothes_jacket_2119, cpuscreen_210)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(cpuscreen_210)
Robot find: mouse_213, keyboard_211, check_2026, chair_194, laser_pointer_2034, Robot is close to the desk_193. Robot is close to the cpuscreen_210. 
##############################
From agent.py
exp(clothes_jacket_2119, cpuscreen_210)
Fail to find clothes_jacket_2119 around cpuscreen_210. 
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2079)open_executor(washing_machine_2079)exp(clothes_jacket_2119, washing_machine_2079)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. 
##############################
From agent.py
open_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is opened. 
##############################
From agent.py
exp(clothes_jacket_2119, washing_machine_2079)
Fail to find clothes_jacket_2119 around washing_machine_2079. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(clothes_jacket_2119, cupboard_117)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, pot_78, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(clothes_jacket_2119, cupboard_117)
Fail to find clothes_jacket_2119 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(mousepad_214)exp(clothes_jacket_2119, mousepad_214)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(mousepad_214)
Robot find: Robot is close to the desk_193. Robot is close to the mousepad_214. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_jacket_2119 ?
Answer: The clothes_jacket_2119 is located inside bedroom_162. You will find it on couch_198. Look for the couch within the bedroom, and the jacket should be on top of it.
Re-decompose: None

##############################
From agent.py
Human Instruction: The clothes_jacket_2119 is located inside bedroom_162. You will find it on couch_198. Look for the couch within the bedroom, and the jacket should be on top of it.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2078.
Action 2: look for clothes_jacket_2119 around basket_for_clothes_2078.
Action 3: Walk to dresser_274.
Action 4: Open dresser_274.
Action 5: look for clothes_jacket_2119 around dresser_274.
Action 6: Walk to cpuscreen_210.
Action 7: look for clothes_jacket_2119 around cpuscreen_210.
Action 8: Walk to washing_machine_2079.
Action 9: Open washing_machine_2079.
Action 10: look for clothes_jacket_2119 around washing_machine_2079.
Action 11: Walk to cupboard_117.
Action 12: look for clothes_jacket_2119 around cupboard_117.
Action 13: Walk to mousepad_214.

##############################
From agent.py
exp(clothes_jacket_2119, mousepad_214)
Fail to find clothes_jacket_2119 around mousepad_214. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the jacket.', '2. Wash the jacket using the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2010_around_sink_120(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
def jacket_is_on_couch(couch: item, jacket: item):
    # Function to check if the jacket is on the specified couch
    return on(jacket, couch)

behavior find_jacket(jacket: item):
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        bind couch: item where:
            is_couch(couch) and inside(couch, bedroom)
        # Select a couch inside the specified bedroom
        observe(couch, "Check is there a jacket on the couch")
        # Observe the couch to verify if a jacket is on it

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2119
        # Select the jacket with ID 2119
        bind couch: item where:
            is_couch(couch) and id[couch] == 198
        # Select the couch with ID 198
                       
        # If the initial information indicates that the jacket is on the couch, go directly to observe
        if not (exists jacket: item : (jacket_is_on_couch(couch, jacket))):
            find_jacket(jacket)
            # Confirm the presence of the jacket on the couch
        achieve close_char(char, couch) 
        # Move the character closer to the couch with the jacket


#goal_representation_end

##############################
From agent.py->reset_goal
 
def jacket_is_on_couch(couch: item, jacket: item):
    # Function to check if the jacket is on the specified couch
    return on(jacket, couch)

behavior find_jacket(jacket: item):
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        bind couch: item where:
            is_couch(couch) and inside(couch, bedroom)
        # Select a couch inside the specified bedroom
        observe(couch, "Check is there a jacket on the couch")
        # Observe the couch to verify if a jacket is on it

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2119
        # Select the jacket with ID 2119
        bind couch: item where:
            is_couch(couch) and id[couch] == 198
        # Select the couch with ID 198
                       
        # If the initial information indicates that the jacket is on the couch, go directly to observe
        if not (exists jacket: item : (jacket_is_on_couch(couch, jacket))):
            find_jacket(jacket)
            # Confirm the presence of the jacket on the couch
        achieve close_char(char, couch) 
        # Move the character closer to the couch with the jacket


##############################
From agent.py-> find a plan in act()
walk_executor(couch_198)obs(couch_198, Check is there a jacket on the couch)
##############################
From agent.py
walk_executor(couch_198)
Robot find: chair_2003, instrument_guitar_2028, rag_2052, mat_203, phone_2016, clothes_jacket_2119, Robot is close to the couch_198. 
##############################
From agent.py
obs(couch_198, Check is there a jacket on the couch)
Get this information:  chair_2003 is on couch_198. rag_2052 is on couch_198. couch_198 is close to phone_2016. couch_198 is close to rag_2052. couch_198 is close to table_199. couch_198 is close to clothes_jacket_2119. couch_198 is close to mat_203. couch_198 is close to floor_172. couch_198 is close to floor_171. couch_198 is close to wall_174. couch_198 is close to instrument_guitar_2028. couch_198 is close to wall_177. couch_198 is close to chair_2003. couch_198 is close to character_240. instrument_guitar_2028 is on couch_198. couch_198 is inside bedroom_162. clothes_jacket_2119 is on couch_198. phone_2016 is on couch_198. couch_198 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_cupboard_118(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(detergent,cupboard_instance)
        else:
            exp(detergent,cupboard_instance)
    eff:
        unknown[detergent]=False
        close[detergent,cupboard_instance]=True
        close[cupboard_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_jacket_in_machine(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)
        # Insert the jacket into the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve_once closed(washing_machine)
        # Ensure the washing machine door is closed
        achieve_once is_on(washing_machine)
        # Turn on the washing machine to start washing

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and inside(jacket, couch_198)
        # Bind the jacket located on couch_198
        
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Bind an instance of a washing machine
        
        place_jacket_in_machine(jacket, washing_machine)
        # Call behavior to place the jacket in the washing machine
        
        start_washing_machine(washing_machine)
        # Call behavior to start washing the jacket in the machine

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: couch_198; available variables: [Variable<jacket: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_detergent_2011_around_cupboard_118(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(detergent,cupboard_instance)
        else:
            exp(detergent,cupboard_instance)
    eff:
        unknown[detergent]=False
        close[detergent,cupboard_instance]=True
        close[cupboard_instance,detergent]=True
    

#goal_representation
 
behavior place_jacket_in_machine(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)
        # Insert the jacket into the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve_once closed(washing_machine)
        # Ensure the washing machine door is closed
        achieve_once is_on(washing_machine)
        # Turn on the washing machine to start washing

behavior __goal__():
    body:
        bind coutch: item where:
            is_couch(coutch) and id[coutch]==198
        # Select the couch with ID 198 where the jacket is expected to be

        bind jacket: item where:
            is_clothes_jacket(jacket) and inside(jacket, coutch)
        # Bind the jacket located on couch_198
        
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Bind an instance of a washing machine
        
        place_jacket_in_machine(jacket, washing_machine)
        # Call behavior to place the jacket in the washing machine
        
        start_washing_machine(washing_machine)
        # Call behavior to start washing the jacket in the machine

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_cupboard_118(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(detergent,cupboard_instance)
        else:
            exp(detergent,cupboard_instance)
    eff:
        unknown[detergent]=False
        close[detergent,cupboard_instance]=True
        close[cupboard_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_jacket_into_machine(jacket:item, machine:item):
    body:
        achieve_once inside(jacket, machine) # Place the jacket inside the washing machine

behavior start_washing_machine(machine:item):
    body:
        achieve_once closed(machine) # Ensure the washing machine is closed
        achieve is_on(machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2119
        # Select the jacket with a known ID

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine in the scene

        load_jacket_into_machine(jacket, washing_machine)
        start_washing_machine(washing_machine)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_jacket_into_machine(jacket:item, machine:item):
    body:
        achieve_once inside(jacket, machine) # Place the jacket inside the washing machine

behavior start_washing_machine(machine:item):
    body:
        achieve_once closed(machine) # Ensure the washing machine is closed
        achieve is_on(machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2119
        # Select the jacket with a known ID

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine in the scene

        load_jacket_into_machine(jacket, washing_machine)
        start_washing_machine(washing_machine)

##############################
From agent.py-> find a plan in act()
walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(washing_machine_2079)putin_executor(clothes_jacket_2119, washing_machine_2079)close_executor(washing_machine_2079)plugin_executor(washing_machine_2079)switchon_executor(washing_machine_2079)
##############################
From agent.py
walk_executor(clothes_jacket_2119)
Robot find: Robot is close to the couch_198. Robot is close to the clothes_jacket_2119. 
##############################
From agent.py
grab_executor(clothes_jacket_2119)
Robot find: Robot is close to the couch_198. Robot is close to the clothes_jacket_2119. Grabbing clothes_jacket_2119 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the washing_machine_2079. 
##############################
From agent.py
putin_executor(clothes_jacket_2119, washing_machine_2079)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the washing_machine_2079. clothes_jacket_2119 is inside washing_machine_2079. clothes_jacket_2119 is close washing_machine_2079. washing_machine_2079 is close clothes_jacket_2119. clothes_jacket_2119 released by right hand. 
##############################
From agent.py
close_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is closed. 
##############################
From agent.py
plugin_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is plugged in. 
##############################
From agent.py
switchon_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Hand wash the jacket, then wash it by washing machine.
Action History:
['walk_executor(basket_for_clothes_2078)', 'walk_executor(dresser_274)', 'open_executor(dresser_274)', 'walk_executor(cpuscreen_210)', 'walk_executor(washing_machine_2079)', 'open_executor(washing_machine_2079)', 'walk_executor(cupboard_117)', 'walk_executor(mousepad_214)', 'walk_executor(couch_198)', 'walk_executor(clothes_jacket_2119)', 'grab_executor(clothes_jacket_2119)', 'walk_executor(washing_machine_2079)', 'putin_executor(clothes_jacket_2119, washing_machine_2079)', 'close_executor(washing_machine_2079)', 'plugin_executor(washing_machine_2079)', 'switchon_executor(washing_machine_2079)']
Time info:
Time consume: 203 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 67
goal generate times: 5
goal correct times: 0
action_num: 16

Task complete rate:
Keystate: k1 - Requires: 0 steps
Action Completion Rate: 0.0
Scene_id: 1
##############################
