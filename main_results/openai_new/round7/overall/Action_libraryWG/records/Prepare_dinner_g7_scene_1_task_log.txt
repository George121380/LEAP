From agent.py
Reset goals: The sub-goals are: 
['1. Find and wash the fish.', '2. Cook the fish to make the soup.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_fish_2093_around_kitchen_counter_123(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_fish,kitchen_counter_instance)
        else:
            exp(food_fish,kitchen_counter_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_fish]=True
    

behavior find_food_potato_2107_around_kitchen_counter_123(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_potato,kitchen_counter_instance)
        else:
            exp(food_potato,kitchen_counter_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_potato]=True
    

behavior find_detergent_2155_around_washing_machine_2079(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_fish():
    body:
        foreach item: item:
            if is_food_fish(item) and not visited(item):
                observe(item, "Check if this is the fish")
        
behavior wash_fish(fish:item):
    body:
        wash(fish)
        achieve clean(fish)

behavior __goal__():
    body:
        find_fish()
        
        # Bind to the first unvisited found fish, if any
        bind fish: item where:
            is_food_fish(fish) and visited(fish)
        
        wash_fish(fish)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_fish():
    body:
        foreach item: item:
            if is_food_fish(item) and not visited(item):
                observe(item, "Check if this is the fish")
        
behavior wash_fish(fish:item):
    body:
        wash(fish)
        achieve clean(fish)

behavior __goal__():
    body:
        find_fish()
        
        # Bind to the first unvisited found fish, if any
        bind fish: item where:
            is_food_fish(fish) and visited(fish)
        
        wash_fish(fish)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(food_fish_2093, kitchen_counter_123)walk_executor(food_fish_2093)obs(food_fish_2093, Check if this is the fish)grab_executor(food_fish_2093)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_fish_2093)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Robot find: tray_2068, oil_2149, knife_2035, food_kiwi_2054, food_orange_2027, Robot is close to the kitchen_counter_123. 
##############################
From agent.py
exp(food_fish_2093, kitchen_counter_123)
Fail to find food_fish_2093 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(food_fish_2093, cupboard_117)walk_executor(food_fish_2093)obs(food_fish_2093, Check if this is the fish)grab_executor(food_fish_2093)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_fish_2093)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, pot_78, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(food_fish_2093, cupboard_117)
Fail to find food_fish_2093 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_fish_2093, fridge_126)walk_executor(food_fish_2093)obs(food_fish_2093, Check if this is the fish)grab_executor(food_fish_2093)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_fish_2093)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_fish_2093, fridge_126)
Find food_fish_2093. 
##############################
From agent.py-> find a plan in act()
obs(food_fish_2093, Check if this is the fish)grab_executor(food_fish_2093)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_fish_2093)switchoff_executor(faucet_20)
##############################
From agent.py
obs(food_fish_2093, Check if this is the fish)
Get this information:  food_fish_2093 is inside dining_room_41. food_fish_2093 is inside fridge_126. food_fish_2093 is close to fridge_126. food_fish_2093 is close to character_240. food_fish_2093 is DIRTY.
##############################
From agent.py
grab_executor(food_fish_2093)
Robot find: Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. Grabbing food_fish_2093 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot find: mat_32, phone_2029, drawing_33, Robot is close to the food_fish_2093. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchon_executor(faucet_20)
Robot find: Robot is close to the food_fish_2093. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned on. 
##############################
From agent.py
wash_executor(food_fish_2093)
Robot find: Robot is close to the food_fish_2093. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. food_fish_2093 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot find: Robot is close to the food_fish_2093. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2154_around_stove_2135(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2135
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_knife_2035_around_knife_2035(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knife_instance:item where:
            is_knife(knife_instance) and id[knife_instance]==2035
        achieve close_char(char,knife_instance)
        if can_open(knife_instance):
            achieve_once open(knife_instance)
            exp(knife,knife_instance)
        else:
            exp(knife,knife_instance)
    eff:
        unknown[knife]=False
        close[knife,knife_instance]=True
        close[knife_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior heat_food(food:item, stove:item):
    body:
        achieve_once on(food, stove)
        # Place the food on the stove
        achieve_once is_on(stove)
        # Turn on the stove to cook the food

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove)
        bind cleaned_fish: item where:
            is_food_fish(cleaned_fish) and clean(cleaned_fish)
        # Select a stove and a cleaned fish
        heat_food(cleaned_fish, stove)
        # Cook the fish by heating it on the stove

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior heat_food(food:item, stove:item):
    body:
        achieve_once on(food, stove)
        # Place the food on the stove
        achieve_once is_on(stove)
        # Turn on the stove to cook the food

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove)
        bind cleaned_fish: item where:
            is_food_fish(cleaned_fish) and clean(cleaned_fish)
        # Select a stove and a cleaned fish
        heat_food(cleaned_fish, stove)
        # Cook the fish by heating it on the stove

##############################
From agent.py-> find a plan in act()
walk_executor(stove_2135)put_executor(food_fish_2093, stove_2135)switchon_executor(stove_2135)
##############################
From agent.py
walk_executor(stove_2135)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the food_fish_2093. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. 
##############################
From agent.py
put_executor(food_fish_2093, stove_2135)
Robot find: Robot is close to the food_fish_2093. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. stove_2135 is close food_fish_2093. food_fish_2093 is close stove_2135. food_fish_2093 is on stove_2135. food_fish_2093 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2135)
Robot find: Robot is close to the food_fish_2093. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. stove_2135 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Cook a pot of fish soup.
Action History:
['walk_executor(kitchen_counter_123)', 'walk_executor(cupboard_117)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'grab_executor(food_fish_2093)', 'walk_executor(faucet_20)', 'switchon_executor(faucet_20)', 'wash_executor(food_fish_2093)', 'switchoff_executor(faucet_20)', 'walk_executor(stove_2135)', 'put_executor(food_fish_2093, stove_2135)', 'switchon_executor(stove_2135)']
Time info:
Time consume: 86 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 135
goal generate times: 2
goal correct times: 0
action_num: 13

Task complete rate:
Keystate: k1 - Requires: 19 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
