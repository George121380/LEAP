From agent.py
Reset goals: The sub-goals are: 
['1. Fry the steak.', '2. Cut the fried steak.', '3. Put the cut steak on a plate.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_bread_2016_around_cupboard_130(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_bread,cupboard_instance)
        else:
            exp(food_bread,cupboard_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,cupboard_instance]=True
        close[cupboard_instance,food_bread]=True
    

behavior find_fryingpan_2107_around_cupboard_130(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(fryingpan,cupboard_instance)
        else:
            exp(fryingpan,cupboard_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,cupboard_instance]=True
        close[cupboard_instance,fryingpan]=True
    

behavior find_food_steak_2042_around_fridge_140(food_steak:item):
    goal: not unknown(food_steak)
    body:
        assert is_food_steak(food_steak)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_steak,fridge_instance)
        else:
            exp(food_steak,fridge_instance)
    eff:
        unknown[food_steak]=False
        close[food_steak,fridge_instance]=True
        close[fridge_instance,food_steak]=True
    

#exp_behavior_end

#goal_representation
behavior fry_steak(stove: item, fryingpan: item, steak: item):
    body:
        achieve_once inside(steak, fryingpan) 
        # Place the steak in the frying pan
        achieve_once inside(fryingpan, stove)
        # Place the frying pan on the stove
        achieve_once is_on(stove)
        # Turn on the stove to fry the steak

### Main goal behavior ###
behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove)
        # Select a stove
        
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan
        
        bind steak: item where:
            is_food_steak(steak)
        # Select a steak

        fry_steak(stove, fryingpan, steak) 
        # Fry the steak
#goal_representation_end

##############################
From agent.py->reset_goal
behavior fry_steak(stove: item, fryingpan: item, steak: item):
    body:
        achieve_once inside(steak, fryingpan) 
        # Place the steak in the frying pan
        achieve_once inside(fryingpan, stove)
        # Place the frying pan on the stove
        achieve_once is_on(stove)
        # Turn on the stove to fry the steak

### Main goal behavior ###
behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove)
        # Select a stove
        
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan
        
        bind steak: item where:
            is_food_steak(steak)
        # Select a steak

        fry_steak(stove, fryingpan, steak) 
        # Fry the steak
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(fryingpan_2107, cupboard_130)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_steak_2042, fridge_140)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(fryingpan_2107)putin_executor(food_steak_2042, fryingpan_2107)walk_executor(stove_2090)open_executor(stove_2090)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)putin_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, pot_54, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(fryingpan_2107, cupboard_130)
Fail to find fryingpan_2107 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(fryingpan_2107, cupboard_131)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_steak_2042, fridge_140)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(fryingpan_2107)putin_executor(food_steak_2042, fryingpan_2107)walk_executor(stove_2090)open_executor(stove_2090)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)putin_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(fryingpan_2107, cupboard_131)
Fail to find fryingpan_2107 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(fryingpan_2107, kitchen_counter_132)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_steak_2042, fridge_140)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(fryingpan_2107)putin_executor(food_steak_2042, fryingpan_2107)walk_executor(stove_2090)open_executor(stove_2090)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)putin_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the kitchen_counter_132. 
##############################
From agent.py
exp(fryingpan_2107, kitchen_counter_132)
Fail to find fryingpan_2107 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(stove_2090)open_executor(stove_2090)exp(fryingpan_2107, stove_2090)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_steak_2042, fridge_140)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(fryingpan_2107)putin_executor(food_steak_2042, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)putin_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
open_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is opened. 
##############################
From agent.py
exp(fryingpan_2107, stove_2090)
Find fryingpan_2107. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_steak_2042, fridge_140)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(fryingpan_2107)putin_executor(food_steak_2042, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)putin_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_steak_2042, fridge_140)
Find food_steak_2042. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_steak_2042)walk_executor(fryingpan_2107)putin_executor(food_steak_2042, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)putin_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
grab_executor(food_steak_2042)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. Grabbing food_steak_2042 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the food_steak_2042. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_steak_2042, fryingpan_2107)
Robot find: Robot is close to the food_steak_2042. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. food_steak_2042 is close fryingpan_2107. food_steak_2042 is inside fryingpan_2107. fryingpan_2107 is close food_steak_2042. food_steak_2042 released by right hand. 
##############################
From agent.py
grab_executor(fryingpan_2107)
Robot find: Robot is close to the food_steak_2042. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Grabbing fryingpan_2107 by right hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. 
##############################
From agent.py
putin_executor(fryingpan_2107, stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. fryingpan_2107 is inside stove_2090. stove_2090 is close fryingpan_2107. fryingpan_2107 is close stove_2090. fryingpan_2107 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_table_123(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==123
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(plate,table_instance)
        else:
            exp(plate,table_instance)
    eff:
        unknown[plate]=False
        close[plate,table_instance]=True
        close[table_instance,plate]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior cut_food(food:item):
    body:
        achieve_once cut(food)

behavior add_to_plate(food:item, plate:item):
    body:
        achieve_once on(food, plate)

behavior __goal__():
    body:
        bind plate: item where:
            is_plate(plate)
           # Select any plate available in the scene

        bind food_steak: item where:
            is_food_steak(food_steak)
        # Select the steak that was fried

        cut_food(food_steak)
        add_to_plate(food_steak, plate)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior cut_food(food:item):
    body:
        achieve_once cut(food)

behavior add_to_plate(food:item, plate:item):
    body:
        achieve_once on(food, plate)

behavior __goal__():
    body:
        bind plate: item where:
            is_plate(plate)
           # Select any plate available in the scene

        bind food_steak: item where:
            is_food_steak(food_steak)
        # Select the steak that was fried

        cut_food(food_steak)
        add_to_plate(food_steak, plate)

##############################
From agent.py-> find a plan in act()
walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(cutting_board_2080)put_executor(food_steak_2042, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_steak_2042)cut_executor(food_steak_2042)walk_executor(table_123)exp(plate_2105, table_123)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
walk_executor(food_steak_2042)
Robot find: Robot is close to the fryingpan_2107. Robot is close to the food_steak_2042. 
##############################
From agent.py
grab_executor(food_steak_2042)
Robot find: Robot is close to the fryingpan_2107. Robot is close to the food_steak_2042. Grabbing food_steak_2042 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the food_steak_2042. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_steak_2042, cutting_board_2080)
Robot find: Robot is close to the food_steak_2042. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. cutting_board_2080 is close food_steak_2042. food_steak_2042 is close cutting_board_2080. food_steak_2042 is on cutting_board_2080. food_steak_2042 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_52)
Robot find: Robot is close to the knifeblock_52. 
##############################
From agent.py
exp(knife_2036, knifeblock_52)
Fail to find knife_2036 around knifeblock_52. 
##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_counter_306)exp(knife_2036, bathroom_counter_306)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_steak_2042)cut_executor(food_steak_2042)walk_executor(table_127)exp(plate_2105, table_127)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
walk_executor(bathroom_counter_306)
Robot find: towel_rack_298, drawing_296, Robot is close to the bathroom_counter_306. 
##############################
From agent.py
exp(knife_2036, bathroom_counter_306)
Fail to find knife_2036 around bathroom_counter_306. 
##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_cabinet_305)open_executor(bathroom_cabinet_305)exp(knife_2036, bathroom_cabinet_305)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_steak_2042)cut_executor(food_steak_2042)walk_executor(table_127)exp(plate_2105, table_127)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
walk_executor(bathroom_cabinet_305)
Robot find: Robot is close to the bathroom_cabinet_305. 
##############################
From agent.py
open_executor(bathroom_cabinet_305)
Robot find: soap_2038, Robot is close to the bathroom_cabinet_305. Robot is close to the soap_2038. bathroom_cabinet_305 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find knife_2036 ?
Answer: Go to dining_room_1. Inside you will find dishwasher_143. knife_2036 is located inside dishwasher_143.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_1. Inside you will find dishwasher_143. knife_2036 is located inside dishwasher_143.

The actions you have taken:
Action 1: Walk to cupboard_130.
Action 2: look for fryingpan_2107 around cupboard_130.
Action 3: Walk to cupboard_131.
Action 4: Open cupboard_131.
Action 5: look for fryingpan_2107 around cupboard_131.
Action 6: Walk to kitchen_counter_132.
Action 7: look for fryingpan_2107 around kitchen_counter_132.
Action 8: Walk to stove_2090.
Action 9: Open stove_2090.
Action 10: look for fryingpan_2107 around stove_2090.
Action 11: Walk to fridge_140.
Action 12: Switch off fridge_140.
Action 13: Open fridge_140.
Action 14: look for food_steak_2042 around fridge_140.
Action 15: Grab food_steak_2042.
Action 16: Walk to fryingpan_2107.
Action 17: Put food_steak_2042 into fryingpan_2107.
Action 18: Grab fryingpan_2107.
Action 19: Walk to stove_2090.
Action 20: Put fryingpan_2107 into stove_2090.
Action 21: Switch on stove_2090.
Action 22: Walk to food_steak_2042.
Action 23: Grab food_steak_2042.
Action 24: Walk to cutting_board_2080.
Action 25: Put food_steak_2042 on cutting_board_2080.
Action 26: Walk to knifeblock_52.
Action 27: look for knife_2036 around knifeblock_52.
Action 28: Walk to bathroom_counter_306.
Action 29: look for knife_2036 around bathroom_counter_306.
Action 30: Walk to bathroom_cabinet_305.
Action 31: Open bathroom_cabinet_305.

##############################
From agent.py
exp(knife_2036, bathroom_cabinet_305)
Fail to find knife_2036 around bathroom_cabinet_305. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(knife_2036, dishwasher_143)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_steak_2042)cut_executor(food_steak_2042)walk_executor(dishwasher_143)exp(plate_2105, dishwasher_143)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(knife_2036, dishwasher_143)
Find knife_2036. 
##############################
From agent.py-> find a plan in act()
grab_executor(knife_2036)walk_executor(food_steak_2042)cut_executor(food_steak_2042)walk_executor(dishwasher_143)exp(plate_2105, dishwasher_143)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
grab_executor(knife_2036)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. Grabbing knife_2036 by right hand. 
##############################
From agent.py
walk_executor(food_steak_2042)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_steak_2042. 
##############################
From agent.py
cut_executor(food_steak_2042)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_steak_2042. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. 
##############################
From agent.py
exp(plate_2105, dishwasher_143)
Fail to find plate_2105 around dishwasher_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_193)exp(plate_2105, table_193)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
walk_executor(table_193)
Robot find: dvd_player_2000, pillow_195, laser_pointer_2025, mat_201, mouse_2112, chair_2119, oil_2005, keyboard_2111, drawing_196, Robot is close to the knife_2036. Robot is close to the table_193. 
##############################
From agent.py
exp(plate_2105, table_193)
Fail to find plate_2105 around table_193. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(plate_2105, table_123)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, laptop_2015, fork_2103, cup_2087, bowl_2095, drawing_118, Robot is close to the knife_2036. Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
exp(plate_2105, table_123)
Fail to find plate_2105 around table_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(door_234)exp(plate_2105, door_234)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
walk_executor(door_234)
Robot find: drawing_238, Robot is close to the knife_2036. Robot is close to the door_234. 
##############################
From agent.py
exp(plate_2105, door_234)
Fail to find plate_2105 around door_234. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_127)exp(plate_2105, table_127)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
walk_executor(table_127)
Robot find: mat_115, fork_2104, console_2027, crayon_2030, bowl_2096, bowl_2097, napkin_2014, plate_2105, Robot is close to the knife_2036. Robot is close to the mat_115. Robot is close to the table_127. 
##############################
From agent.py
exp(plate_2105, table_127)
Find plate_2105. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
walk_executor(food_steak_2042)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_steak_2042. 
##############################
From agent.py
grab_executor(food_steak_2042)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_steak_2042. Grabbing food_steak_2042 by left hand. 
##############################
From agent.py
walk_executor(plate_2105)
Robot find: Robot is close to the knife_2036. Robot is close to the food_steak_2042. Robot is close to the plate_2105. Robot is close to the table_127. 
##############################
From agent.py
put_executor(food_steak_2042, plate_2105)
Robot find: Robot is close to the knife_2036. Robot is close to the food_steak_2042. Robot is close to the plate_2105. Robot is close to the table_127. food_steak_2042 is close plate_2105. plate_2105 is close food_steak_2042. food_steak_2042 is on plate_2105. food_steak_2042 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2087_around_cup_2087(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2087
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(cup,cup_instance)
        else:
            exp(cup,cup_instance)
    eff:
        unknown[cup]=False
        close[cup,cup_instance]=True
        close[cup_instance,cup]=True
    

#exp_behavior_end

#goal_representation
behavior put_steak_on_plate(steak:item, plate:item):
    body:
        achieve_once on(steak, plate)

behavior __goal__():
    body:
        bind steak: item where:
            is_food_steak(steak) and cut(steak)
        # Select the cut steak
        bind plate: item where:
            is_plate(plate)
        # Select a plate
        put_steak_on_plate(steak, plate)
        # Put the cut steak on the plate
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2089_around_cup_2088(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2088
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(cup,cup_instance)
        else:
            exp(cup,cup_instance)
    eff:
        unknown[cup]=False
        close[cup,cup_instance]=True
        close[cup_instance,cup]=True
    

#exp_behavior_end

#goal_representation
behavior place_on_plate(steak:item, plate:item):
    body:
        achieve_once on(steak, plate)

behavior __goal__():
    body:
        bind steak: item where:
            is_food_steak(steak)
        bind plate: item where:
            is_plate(plate)
        place_on_plate(steak, plate)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2006_around_coffe_maker_147(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind coffe_maker_instance:item where:
            is_coffe_maker(coffe_maker_instance) and id[coffe_maker_instance]==147
        achieve close_char(char,coffe_maker_instance)
        if can_open(coffe_maker_instance):
            achieve_once open(coffe_maker_instance)
            exp(cup,coffe_maker_instance)
        else:
            exp(cup,coffe_maker_instance)
    eff:
        unknown[cup]=False
        close[cup,coffe_maker_instance]=True
        close[coffe_maker_instance,cup]=True
    

behavior find_tray_142_around_sink_307(tray:item):
    goal: not unknown(tray)
    body:
        assert is_tray(tray)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(tray,sink_instance)
        else:
            exp(tray,sink_instance)
    eff:
        unknown[tray]=False
        close[tray,sink_instance]=True
        close[sink_instance,tray]=True
    

#exp_behavior_end

#goal_representation
behavior put_steak_on_plate(steak:item, plate:item):
    body:
        achieve_once on(steak, plate)

behavior __goal__():
    body:
        bind plate: item where:
            is_plate(plate)
            
        bind steak: item where:
            is_food_steak(steak) and cut(steak)
            
        put_steak_on_plate(steak, plate)
#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "3. put the cut steak on a plate." ?
Answer: After slicing, put it on a plate.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_bread_2016_around_doorjamb_285(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind doorjamb_instance:item where:
            is_doorjamb(doorjamb_instance) and id[doorjamb_instance]==285
        achieve close_char(char,doorjamb_instance)
        if can_open(doorjamb_instance):
            achieve_once open(doorjamb_instance)
            exp(food_bread,doorjamb_instance)
        else:
            exp(food_bread,doorjamb_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,doorjamb_instance]=True
        close[doorjamb_instance,food_bread]=True
    

behavior find_cup_2087_around_cup_2087(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2087
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(cup,cup_instance)
        else:
            exp(cup,cup_instance)
    eff:
        unknown[cup]=False
        close[cup,cup_instance]=True
        close[cup_instance,cup]=True
    

#exp_behavior_end

#goal_representation
behavior place_steak_on_plate(steak:item, plate:item):
    body:
        achieve_once on(steak, plate)

behavior __goal__():
    body:
        bind steak: item where:
            is_food_steak(steak) and cut(steak)
        
        foreach plate: item:
            if is_plate(plate) and not visited(plate):
                observe(plate, "Check is this the correct plate to place the steak on")
        
        bind target_plate : item where:
            is_plate(target_plate) and visited(target_plate)
        
        place_steak_on_plate(steak, target_plate)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior place_steak_on_plate(steak:item, plate:item):
    body:
        achieve_once on(steak, plate)

behavior __goal__():
    body:
        bind steak: item where:
            is_food_steak(steak) and cut(steak)
        
        foreach plate: item:
            if is_plate(plate) and not visited(plate):
                observe(plate, "Check is this the correct plate to place the steak on")
        
        bind target_plate : item where:
            is_plate(target_plate) and visited(target_plate)
        
        place_steak_on_plate(steak, target_plate)
##############################
From agent.py-> find a plan in act()
obs(plate_2105, Check is this the correct plate to place the steak on)
##############################
From agent.py
obs(plate_2105, Check is this the correct plate to place the steak on)
Get this information:  plate_2105 is inside dining_room_1. plate_2105 is on table_127. plate_2105 is close to table_127. plate_2105 is close to character_219. plate_2105 is close to food_steak_2042. food_steak_2042 is on plate_2105. plate_2105 is DIRTY.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Fried a steak. Then cut it and put it on a plate.
Action History:
['walk_executor(cupboard_130)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(kitchen_counter_132)', 'walk_executor(stove_2090)', 'open_executor(stove_2090)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'grab_executor(food_steak_2042)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_steak_2042, fryingpan_2107)', 'grab_executor(fryingpan_2107)', 'walk_executor(stove_2090)', 'putin_executor(fryingpan_2107, stove_2090)', 'switchon_executor(stove_2090)', 'walk_executor(food_steak_2042)', 'grab_executor(food_steak_2042)', 'walk_executor(cutting_board_2080)', 'put_executor(food_steak_2042, cutting_board_2080)', 'walk_executor(knifeblock_52)', 'walk_executor(bathroom_counter_306)', 'walk_executor(bathroom_cabinet_305)', 'open_executor(bathroom_cabinet_305)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'grab_executor(knife_2036)', 'walk_executor(food_steak_2042)', 'cut_executor(food_steak_2042)', 'walk_executor(dishwasher_143)', 'walk_executor(table_193)', 'walk_executor(table_123)', 'walk_executor(door_234)', 'walk_executor(table_127)', 'walk_executor(food_steak_2042)', 'grab_executor(food_steak_2042)', 'walk_executor(plate_2105)', 'put_executor(food_steak_2042, plate_2105)']
Time info:
Time consume: 317 seconds
Exp_helper query times: 1
Guidance query times: 1
library scale: 103
goal generate times: 6
goal correct times: 0
action_num: 38

Task complete rate:
Keystate: k1 - Requires: 11 steps
Keystate: k2 - Requires: 0 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
