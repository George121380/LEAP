From agent.py
Reset goals: The sub-goals are: 
['1. Identify all the rooms in the household.', '2. Ensure there is at least one light on in each identified room.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_toilet_paper_2076_around_toilet_15(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind toilet_instance:item where:
            is_toilet(toilet_instance) and id[toilet_instance]==15
        achieve close_char(char,toilet_instance)
        if can_open(toilet_instance):
            achieve_once open(toilet_instance)
            exp(toilet_paper,toilet_instance)
        else:
            exp(toilet_paper,toilet_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,toilet_instance]=True
        close[toilet_instance,toilet_paper]=True
    

behavior find_towel_2128_around_basket_for_clothes_2078(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(towel,basket_for_clothes_instance)
        else:
            exp(towel,basket_for_clothes_instance)
    eff:
        unknown[towel]=False
        close[towel,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,towel]=True
    

behavior find_shoes_2033_around_dresser_274(shoes:item):
    goal: not unknown(shoes)
    body:
        assert is_shoes(shoes)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==274
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(shoes,dresser_instance)
        else:
            exp(shoes,dresser_instance)
    eff:
        unknown[shoes]=False
        close[shoes,dresser_instance]=True
        close[dresser_instance,shoes]=True
    

#exp_behavior_end

#goal_representation
 
def has_unvisited_room():
    # Function to check if there are any unvisited rooms in the environment
    symbol has_unvisited=exists room: item : (is_bedroom(room) or is_bathroom(room) or is_home_office(room)) and not visited(room)
    return has_unvisited

behavior visit_room(room:item):
    body:
        achieve_once visited(room)
        # Mark the room as visited

behavior __goal__():
    body:
        if has_unvisited_room():
            # Find an unvisited room and visit it
            foreach room: item:
                if (is_bedroom(room) or is_bathroom(room) or is_home_office(room)) and not visited(room):
                    visit_room(room)
        else:
            # Attempt to gather information on all known rooms
            foreach room: item:
                if is_bedroom(room) or is_bathroom(room) or is_home_office(room):
                    visit_room(room)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_unvisited_room():
    # Function to check if there are any unvisited rooms in the environment
    symbol has_unvisited=exists room: item : (is_bedroom(room) or is_bathroom(room) or is_home_office(room)) and not visited(room)
    return has_unvisited

behavior visit_room(room:item):
    body:
        achieve_once visited(room)
        # Mark the room as visited

behavior __goal__():
    body:
        if has_unvisited_room():
            # Find an unvisited room and visit it
            foreach room: item:
                if (is_bedroom(room) or is_bathroom(room) or is_home_office(room)) and not visited(room):
                    visit_room(room)
        else:
            # Attempt to gather information on all known rooms
            foreach room: item:
                if is_bedroom(room) or is_bathroom(room) or is_home_office(room):
                    visit_room(room)

##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_1)obs(bathroom_1, look around this place)walk_executor(bedroom_162)obs(bedroom_162, look around this place)walk_executor(home_office_241)obs(home_office_241, look around this place)
##############################
From agent.py
walk_executor(bathroom_1)

##############################
From agent.py
obs(bathroom_1, look around this place)
Get this information:  wall_2 is inside bathroom_1. shower_21 is inside bathroom_1. mat_32 is inside bathroom_1. wall_5 is inside bathroom_1. ceilinglamp_35 is inside bathroom_1. floor_13 is inside bathroom_1. cleaning_solution_2143 is inside bathroom_1. shower_16 is inside bathroom_1. toy_2056 is inside bathroom_1. character_240 is inside bathroom_1. piano_bench_2067 is inside bathroom_1. phone_2029 is inside bathroom_1. ceiling_8 is inside bathroom_1. sink_19 is inside bathroom_1. door_38 is inside bathroom_1. floor_11 is inside bathroom_1. tooth_paste_2059 is inside bathroom_1. curtain_22 is inside bathroom_1. wall_3 is inside bathroom_1. floor_14 is inside bathroom_1. drawing_33 is inside bathroom_1. ceiling_6 is inside bathroom_1. door_38 is between bathroom_1. walllamp_36 is inside bathroom_1. bathroom_cabinet_17 is inside bathroom_1. soap_2125 is inside bathroom_1. toilet_paper_2076 is inside bathroom_1. detergent_2155 is inside bathroom_1. ceiling_9 is inside bathroom_1. light_39 is inside bathroom_1. window_2156 is inside bathroom_1. faucet_20 is inside bathroom_1. towel_2128 is inside bathroom_1. floor_12 is inside bathroom_1. wall_4 is inside bathroom_1. after_shave_2063 is inside bathroom_1. toilet_15 is inside bathroom_1. walllamp_34 is inside bathroom_1. ceiling_7 is inside bathroom_1. bathroom_counter_18 is inside bathroom_1. bathroom_1 is close to window_2156. doorjamb_37 is inside bathroom_1. floor_10 is inside bathroom_1. bathroom_1 is CLEAN.
##############################
From agent.py
walk_executor(bedroom_162)

##############################
From agent.py
obs(bedroom_162, look around this place)
Get this information:  ceiling_185 is inside bedroom_162. wall_174 is inside bedroom_162. scrabble_2031 is inside bedroom_162. curtain_204 is inside bedroom_162. stereo_2050 is inside bedroom_162. wall_177 is inside bedroom_162. tea_bag_2023 is inside bedroom_162. wall_176 is inside bedroom_162. after_shave_2042 is inside bedroom_162. wall_179 is inside bedroom_162. pillow_207 is inside bedroom_162. laser_pointer_2034 is inside bedroom_162. floor_169 is inside bedroom_162. clothes_underwear_2121 is inside bedroom_162. ceilinglamp_237 is inside bedroom_162. table_199 is inside bedroom_162. cpuscreen_210 is inside bedroom_162. ceiling_188 is inside bedroom_162. floor_172 is inside bedroom_162. envelope_2018 is inside bedroom_162. floor_171 is inside bedroom_162. check_2026 is inside bedroom_162. drawing_201 is inside bedroom_162. character_240 is inside bedroom_162. floor_163 is inside bedroom_162. drawing_202 is inside bedroom_162. floor_164 is inside bedroom_162. clothes_dress_2116 is inside bedroom_162. chair_194 is inside bedroom_162. ceiling_183 is inside bedroom_162. clothes_jacket_2119 is inside bedroom_162. mouse_213 is inside bedroom_162. chessboard_2070 is inside bedroom_162. floor_166 is inside bedroom_162. bookshelf_196 is inside bedroom_162. after_shave_2051 is inside bedroom_162. ceiling_186 is inside bedroom_162. bed_197 is inside bedroom_162. floor_167 is inside bedroom_162. ceiling_189 is inside bedroom_162. wall_178 is inside bedroom_162. pillow_208 is inside bedroom_162. phone_2016 is inside bedroom_162. wall_180 is inside bedroom_162. window_191 is inside bedroom_162. photoframe_219 is inside bedroom_162. ceiling_181 is inside bedroom_162. diary_2008 is inside bedroom_162. tablelamp_238 is inside bedroom_162. filing_cabinet_200 is inside bedroom_162. keyboard_211 is inside bedroom_162. wall_173 is inside bedroom_162. nightstand_192 is inside bedroom_162. mat_203 is inside bedroom_162. novel_2060 is inside bedroom_162. wooden_spoon_2000 is inside bedroom_162. wall_175 is inside bedroom_162. mousepad_214 is inside bedroom_162. cd_2030 is inside bedroom_162. chair_2003 is inside bedroom_162. curtain_205 is inside bedroom_162. curtain_206 is inside bedroom_162. nightstand_195 is inside bedroom_162. rag_2052 is inside bedroom_162. floor_168 is inside bedroom_162. clothes_scarf_2120 is inside bedroom_162. check_2071 is inside bedroom_162. ceiling_187 is inside bedroom_162. couch_198 is inside bedroom_162. shoe_rack_2044 is inside bedroom_162. food_food_2074 is inside bedroom_162. floor_170 is inside bedroom_162. rag_2025 is inside bedroom_162. tablelamp_239 is inside bedroom_162. doorjamb_190 is inside bedroom_162. homework_2047 is inside bedroom_162. computer_209 is inside bedroom_162. ceiling_182 is inside bedroom_162. instrument_guitar_2028 is inside bedroom_162. door_61 is between bedroom_162. floor_165 is inside bedroom_162. desk_193 is inside bedroom_162. ceiling_184 is inside bedroom_162. light_212 is inside bedroom_162. bedroom_162 is CLEAN.
##############################
From agent.py
walk_executor(home_office_241)

##############################
From agent.py
obs(home_office_241, look around this place)
Get this information:  cat_2069 is inside home_office_241. ceiling_253 is inside home_office_241. wall_242 is inside home_office_241. desk_272 is inside home_office_241. cd_player_2129 is inside home_office_241. floor_264 is inside home_office_241. hanger_294 is inside home_office_241. light_283 is inside home_office_241. ceiling_256 is inside home_office_241. wall_245 is inside home_office_241. bookshelf_275 is inside home_office_241. pillow_286 is inside home_office_241. wall_248 is inside home_office_241. walllamp_305 is inside home_office_241. floor_267 is inside home_office_241. remote_control_2124 is inside home_office_241. check_2075 is inside home_office_241. keyboard_278 is inside home_office_241. curtain_289 is inside home_office_241. character_240 is inside home_office_241. doorjamb_308 is inside home_office_241. floor_259 is inside home_office_241. table_270 is inside home_office_241. television_281 is inside home_office_241. wall_243 is inside home_office_241. headset_2146 is inside home_office_241. ceiling_251 is inside home_office_241. floor_262 is inside home_office_241. door_62 is between home_office_241. brush_2002 is inside home_office_241. mouse_280 is inside home_office_241. stamp_2043 is inside home_office_241. tvstand_273 is inside home_office_241. hanger_292 is inside home_office_241. ceilinglamp_303 is inside home_office_241. floor_265 is inside home_office_241. ceiling_254 is inside home_office_241. mat_284 is inside home_office_241. dvd_player_2130 is inside home_office_241. wall_246 is inside home_office_241. walllamp_306 is inside home_office_241. ceiling_257 is inside home_office_241. floor_268 is inside home_office_241. pillow_287 is inside home_office_241. computer_276 is inside home_office_241. wall_249 is inside home_office_241. floor_260 is inside home_office_241. mousepad_279 is inside home_office_241. blow_dryer_2057 is inside home_office_241. shampoo_2019 is inside home_office_241. curtain_290 is inside home_office_241. stamp_2022 is inside home_office_241. ceiling_252 is inside home_office_241. doorjamb_309 is inside home_office_241. powersocket_282 is inside home_office_241. hanger_293 is inside home_office_241. chair_271 is inside home_office_241. wall_244 is inside home_office_241. phone_2147 is inside home_office_241. floor_263 is inside home_office_241. dresser_274 is inside home_office_241. headset_2131 is inside home_office_241. pencil_2014 is inside home_office_241. ceiling_255 is inside home_office_241. shoes_2033 is inside home_office_241. orchid_285 is inside home_office_241. walllamp_304 is inside home_office_241. clothes_pants_2036 is inside home_office_241. floor_266 is inside home_office_241. cpuscreen_277 is inside home_office_241. walllamp_307 is inside home_office_241. phone_2017 is inside home_office_241. couch_269 is inside home_office_241. ceiling_258 is inside home_office_241. wall_247 is inside home_office_241. drawing_288 is inside home_office_241. cd_2145 is inside home_office_241. ceiling_250 is inside home_office_241. window_310 is inside home_office_241. pencil_2020 is inside home_office_241. floor_261 is inside home_office_241. curtain_291 is inside home_office_241. home_office_241 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation

def has_light_in(room:item):
    # Function to check if there is a light turned on in the specified room
    symbol has_light=exists o: item : (is_light(o) and is_on(o) and inside(o, room))
    return has_light

behavior __goal__():
    body:
        if exists room: item : (not has_light_in(room)):
            # If there is any room without a light turned on, find and address it
            foreach room: item:
                if not has_light_in(room) and not visited(room):
                    # Identify any room without a light turned on that hasnt been visited yet
                    observe(room, "Check if there is any light and turn it on if needed")
                    # Observe whether there is any light in the room that needs to be turned on

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior ensure_light_on_in_room(room:item):
    body:
        bind light: item where:
            is_light(light) and inside(light, room) 
            # Select a light that is inside the specified room
        achieve is_on(light) 
        # Ensure that the light is turned on

def room_has_light_on(room:item):
    # Function to check if there is at least one light on in the given room
    symbol has_light_on = exists light: item : (is_light(light) and inside(light, room) and is_on(light))
    return has_light_on

behavior __goal__():
    body:
        foreach room: item:
            if is_bathroom(room) or is_bedroom(room) or is_home_office(room):
                # Assume any room can be categorized as bathroom, bedroom, or home office
                if not room_has_light_on(room):
                    # Check if there is no light on in the identified room
                    ensure_light_on_in_room(room)
                    # Ensure a light is on in each room
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior ensure_light_on_in_room(room:item):
    body:
        bind light: item where:
            is_light(light) and inside(light, room) 
            # Select a light that is inside the specified room
        achieve is_on(light) 
        # Ensure that the light is turned on

def room_has_light_on(room:item):
    # Function to check if there is at least one light on in the given room
    symbol has_light_on = exists light: item : (is_light(light) and inside(light, room) and is_on(light))
    return has_light_on

behavior __goal__():
    body:
        foreach room: item:
            if is_bathroom(room) or is_bedroom(room) or is_home_office(room):
                # Assume any room can be categorized as bathroom, bedroom, or home office
                if not room_has_light_on(room):
                    # Check if there is no light on in the identified room
                    ensure_light_on_in_room(room)
                    # Ensure a light is on in each room
##############################
From agent.py-> find a plan in act()
walk_executor(light_39)switchon_executor(light_39)walk_executor(light_212)switchon_executor(light_212)walk_executor(light_283)switchon_executor(light_283)
##############################
From agent.py
walk_executor(light_39)
Robot find: Robot is close to the light_39. 
##############################
From agent.py
switchon_executor(light_39)
Robot find: Robot is close to the light_39. light_39 is turned on. 
##############################
From agent.py
walk_executor(light_212)
Robot find: drawing_202, Robot is close to the light_212. 
##############################
From agent.py
switchon_executor(light_212)
Robot find: Robot is close to the light_212. light_212 is turned on. 
##############################
From agent.py
walk_executor(light_283)
Robot find: mat_284, Robot is close to the light_283. 
##############################
From agent.py
switchon_executor(light_283)
Robot find: Robot is close to the light_283. light_283 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make sure there is at least one light on in every room.
Action History:
['walk_executor(bathroom_1)', 'walk_executor(bedroom_162)', 'walk_executor(home_office_241)', 'walk_executor(light_39)', 'switchon_executor(light_39)', 'walk_executor(light_212)', 'switchon_executor(light_212)', 'walk_executor(light_283)', 'switchon_executor(light_283)']
Time info:
Time consume: 60 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 22
goal generate times: 3
goal correct times: 0
action_num: 9

Task complete rate:
Keystate: k1 - Requires: 2 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
