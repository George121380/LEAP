From agent.py
Reset goals: The sub-goals are: 
['1. Fill a bowl with water.', '2. Put the bowl on the table in the home office.', '3. Find the cat and put it on the table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2071_around_coffee_table_2068(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind coffee_table_instance:item where:
            is_coffee_table(coffee_table_instance) and id[coffee_table_instance]==2068
        achieve close_char(char,coffee_table_instance)
        if can_open(coffee_table_instance):
            achieve_once open(coffee_table_instance)
            exp(bowl,coffee_table_instance)
        else:
            exp(bowl,coffee_table_instance)
    eff:
        unknown[bowl]=False
        close[bowl,coffee_table_instance]=True
        close[coffee_table_instance,bowl]=True
    

#exp_behavior_end

#goal_representation

behavior fill_bowl_with_water(bowl: item, water_source: item):
    body:
        achieve_once has_water(bowl) 

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        
        bind water_source: item where:
            is_faucet(water_source) or is_sink(water_source)
        
        fill_bowl_with_water(bowl, water_source)
#goal_representation_end

##############################
From agent.py->reset_goal

behavior fill_bowl_with_water(bowl: item, water_source: item):
    body:
        achieve_once has_water(bowl) 

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        
        bind water_source: item where:
            is_faucet(water_source) or is_sink(water_source)
        
        fill_bowl_with_water(bowl, water_source)
##############################
From agent.py-> find a plan in act()
walk_executor(coffee_table_2068)exp(bowl_2071, coffee_table_2068)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot find: Robot is close to the coffee_table_2068. 
##############################
From agent.py
exp(bowl_2071, coffee_table_2068)
Fail to find bowl_2071 around coffee_table_2068. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_107)exp(bowl_2071, table_107)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(table_107)
Robot find: mat_173, clothes_hat_2045, clothes_gloves_2046, drawing_176, drawing_174, drawing_175, Robot is close to the table_107. 
##############################
From agent.py
exp(bowl_2071, table_107)
Fail to find bowl_2071 around table_107. 
##############################
From agent.py-> find a plan in act()
walk_executor(stove_2065)open_executor(stove_2065)exp(bowl_2071, stove_2065)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(stove_2065)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
open_executor(stove_2065)
Robot find: Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. stove_2065 is opened. 
##############################
From agent.py
exp(bowl_2071, stove_2065)
Fail to find bowl_2071 around stove_2065. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_380)exp(bowl_2071, closetdrawer_380)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_380)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(bowl_2071, closetdrawer_380)
Fail to find bowl_2071 around closetdrawer_380. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_380)exp(bowl_2071, closetdrawer_380)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_380)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(bowl_2071, closetdrawer_380)
Fail to find bowl_2071 around closetdrawer_380. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_380)exp(bowl_2071, closetdrawer_380)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_380)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2071 ?
Answer: Robot, please locate bowl_2071. It is inside dining_room_201, placed on table_226. The bowl is very close to this table, so look for it directly on top of table_226.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, please locate bowl_2071. It is inside dining_room_201, placed on table_226. The bowl is very close to this table, so look for it directly on top of table_226.

The actions you have taken:
Action 1: Walk to coffee_table_2068.
Action 2: look for bowl_2071 around coffee_table_2068.
Action 3: Walk to table_107.
Action 4: look for bowl_2071 around table_107.
Action 5: Walk to stove_2065.
Action 6: Open stove_2065.
Action 7: look for bowl_2071 around stove_2065.
Action 8: Walk to closetdrawer_380.
Action 9: look for bowl_2071 around closetdrawer_380.
Action 10: Walk to closetdrawer_380.
Action 11: look for bowl_2071 around closetdrawer_380.
Action 12: Walk to closetdrawer_380.

##############################
From agent.py
exp(bowl_2071, closetdrawer_380)
Fail to find bowl_2071 around closetdrawer_380. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_226)exp(bowl_2071, table_226)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(table_226)
Robot find: bowl_2071, coffee_filter_2000, drawing_2003, bowl_2072, mat_236, fork_2080, fork_2081, mat_237, Robot is close to the table_226. 
##############################
From agent.py
exp(bowl_2071, table_226)
Find bowl_2071. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(bowl_2071)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2071. 
##############################
From agent.py
grab_executor(bowl_2071)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2071. Grabbing bowl_2071 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: towel_rack_31, towel_rack_32, towel_rack_34, Robot is close to the bowl_2071. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the bowl_2071. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the bowl_2071. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_keyboard_168_around_computer_170(keyboard:item):
    goal: not unknown(keyboard)
    body:
        assert is_keyboard(keyboard)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==170
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(keyboard,computer_instance)
        else:
            exp(keyboard,computer_instance)
    eff:
        unknown[keyboard]=False
        close[keyboard,computer_instance]=True
        close[computer_instance,keyboard]=True
    

behavior find_headset_2062_around_closetdrawer_380(headset:item):
    goal: not unknown(headset)
    body:
        assert is_headset(headset)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==380
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(headset,closetdrawer_instance)
        else:
            exp(headset,closetdrawer_instance)
    eff:
        unknown[headset]=False
        close[headset,closetdrawer_instance]=True
        close[closetdrawer_instance,headset]=True
    

#exp_behavior_end

#goal_representation
behavior place_bowl_on_table(bowl:item, table:item):
    body:
        achieve_once on(bowl, table)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and id[bowl]==2071
        bind home_office: item where:
            is_home_office(home_office)
        bind table: item where:
            is_table(table) and inside(table, home_office)
        place_bowl_on_table(bowl, table)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior place_bowl_on_table(bowl:item, table:item):
    body:
        achieve_once on(bowl, table)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and id[bowl]==2071
        bind home_office: item where:
            is_home_office(home_office)
        bind table: item where:
            is_table(table) and inside(table, home_office)
        place_bowl_on_table(bowl, table)
##############################
From agent.py-> find a plan in act()
walk_executor(table_355)put_executor(bowl_2071, table_355)
##############################
From agent.py
walk_executor(table_355)
Robot find: mat_401, headset_2062, spectacles_2082, pillow_406, remote_control_2052, clothes_jacket_2047, pillow_405, cat_2055, drawing_400, drawing_404, hairbrush_2002, vacuum_cleaner_2070, Robot is close to the bowl_2071. Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. 
##############################
From agent.py
put_executor(bowl_2071, table_355)
Robot find: Robot is close to the bowl_2071. Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. table_355 is close bowl_2071. bowl_2071 is close table_355. bowl_2071 is on table_355. bowl_2071 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to put bowl_2071 on the table in the home office. Currently, the bowl is placed on table_355, which is not in the home office. Identify the correct table in the home office and place the bowl on it.
##############################
From agent.py
Human Instruction: You need to put bowl_2071 on the table in the home office. Currently, the bowl is placed on table_355, which is not in the home office. Identify the correct table in the home office and place the bowl on it.

The actions you have taken:
Action 1: Walk to coffee_table_2068.
Action 2: look for bowl_2071 around coffee_table_2068.
Action 3: Walk to table_107.
Action 4: look for bowl_2071 around table_107.
Action 5: Walk to stove_2065.
Action 6: Open stove_2065.
Action 7: look for bowl_2071 around stove_2065.
Action 8: Walk to closetdrawer_380.
Action 9: look for bowl_2071 around closetdrawer_380.
Action 10: Walk to closetdrawer_380.
Action 11: look for bowl_2071 around closetdrawer_380.
Action 12: Walk to closetdrawer_380.
Action 13: look for bowl_2071 around closetdrawer_380.
Action 14: Walk to table_226.
Action 15: look for bowl_2071 around table_226.
Action 16: Walk to bowl_2071.
Action 17: Grab bowl_2071.
Action 18: Walk to faucet_43.
Action 19: Switch on faucet_43.
Action 20: Switch off faucet_43.
Action 21: Walk to table_355.
Action 22: Put bowl_2071 on table_355.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_turkey_2040_around_fridge_289(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_turkey,fridge_instance)
        else:
            exp(food_turkey,fridge_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,fridge_instance]=True
        close[fridge_instance,food_turkey]=True
    

#exp_behavior_end

#goal_representation
behavior move_bowl_to_home_office_table(bowl:item, table:item):
    goal:
        achieve on(bowl, table)
    body:
        achieve_once inhand(bowl)
        achieve_once on(bowl, table)

behavior __goal__():
    body:
        bind bowl_2071: item where:
            is_bowl(bowl_2071)
        bind home_office: item where:
            is_home_office(home_office)
        bind table_home_office: item where:
            is_table(table_home_office) and inside(table_home_office, home_office)
        move_bowl_to_home_office_table(bowl_2071, table_home_office)
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Achieve statements are not allowed in the current mode: SymbolicExecutionMode.DERIVED
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_chair_103_around_bed_105(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==105
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(chair,bed_instance)
        else:
            exp(chair,bed_instance)
    eff:
        unknown[chair]=False
        close[chair,bed_instance]=True
        close[bed_instance,chair]=True
    

behavior find_wall_clock_249_around_wallshelf_234(wall_clock:item):
    goal: not unknown(wall_clock)
    body:
        assert is_wall_clock(wall_clock)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==234
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(wall_clock,wallshelf_instance)
        else:
            exp(wall_clock,wallshelf_instance)
    eff:
        unknown[wall_clock]=False
        close[wall_clock,wallshelf_instance]=True
        close[wallshelf_instance,wall_clock]=True
    

behavior find_pencil_2001_around_bookshelf_233(pencil:item):
    goal: not unknown(pencil)
    body:
        assert is_pencil(pencil)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==233
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(pencil,bookshelf_instance)
        else:
            exp(pencil,bookshelf_instance)
    eff:
        unknown[pencil]=False
        close[pencil,bookshelf_instance]=True
        close[bookshelf_instance,pencil]=True
    

behavior find_keyboard_415_around_cpuscreen_416(keyboard:item):
    goal: not unknown(keyboard)
    body:
        assert is_keyboard(keyboard)
        bind cpuscreen_instance:item where:
            is_cpuscreen(cpuscreen_instance) and id[cpuscreen_instance]==416
        achieve close_char(char,cpuscreen_instance)
        if can_open(cpuscreen_instance):
            achieve_once open(cpuscreen_instance)
            exp(keyboard,cpuscreen_instance)
        else:
            exp(keyboard,cpuscreen_instance)
    eff:
        unknown[keyboard]=False
        close[keyboard,cpuscreen_instance]=True
        close[cpuscreen_instance,keyboard]=True
    

behavior find_mouse_166_around_closetdrawer_160(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==160
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(mouse,closetdrawer_instance)
        else:
            exp(mouse,closetdrawer_instance)
    eff:
        unknown[mouse]=False
        close[mouse,closetdrawer_instance]=True
        close[closetdrawer_instance,mouse]=True
    

#goal_representation
behavior move_bowl_to_home_office_table(bowl:item, table:item):
    body:
        achieve_once inhand(bowl)
        achieve_once on(bowl, table)

behavior __goal__():
    body:
        bind bowl_2071: item where:
            is_bowl(bowl_2071)
        bind home_office: item where:
            is_home_office(home_office)
        bind table_home_office: item where:
            is_table(table_home_office) and inside(table_home_office, home_office)
        move_bowl_to_home_office_table(bowl_2071, table_home_office)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior move_bowl_to_home_office_table(bowl:item, table:item):
    body:
        achieve_once inhand(bowl)
        achieve_once on(bowl, table)

behavior __goal__():
    body:
        bind bowl_2071: item where:
            is_bowl(bowl_2071)
        bind home_office: item where:
            is_home_office(home_office)
        bind table_home_office: item where:
            is_table(table_home_office) and inside(table_home_office, home_office)
        move_bowl_to_home_office_table(bowl_2071, table_home_office)
##############################
From agent.py-> find a plan in act()
grab_executor(bowl_2071)put_executor(bowl_2071, table_355)
##############################
From agent.py
grab_executor(bowl_2071)
Robot find: Robot is close to the bowl_2071. Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. Grabbing bowl_2071 by right hand. 
##############################
From agent.py
put_executor(bowl_2071, table_355)
Robot find: Robot is close to the bowl_2071. Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. bowl_2071 is close table_355. bowl_2071 is on table_355. bowl_2071 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: Identify the correct table in the home office and place bowl_2071 on it. Currently, bowl_2071 is placed on table_355, which is not in the home office. You need to move the bowl to the specific table located inside the home office.
##############################
From agent.py
Human Instruction: Identify the correct table in the home office and place bowl_2071 on it. Currently, bowl_2071 is placed on table_355, which is not in the home office. You need to move the bowl to the specific table located inside the home office.

The actions you have taken:
Action 1: Walk to coffee_table_2068.
Action 2: look for bowl_2071 around coffee_table_2068.
Action 3: Walk to table_107.
Action 4: look for bowl_2071 around table_107.
Action 5: Walk to stove_2065.
Action 6: Open stove_2065.
Action 7: look for bowl_2071 around stove_2065.
Action 8: Walk to closetdrawer_380.
Action 9: look for bowl_2071 around closetdrawer_380.
Action 10: Walk to closetdrawer_380.
Action 11: look for bowl_2071 around closetdrawer_380.
Action 12: Walk to closetdrawer_380.
Action 13: look for bowl_2071 around closetdrawer_380.
Action 14: Walk to table_226.
Action 15: look for bowl_2071 around table_226.
Action 16: Walk to bowl_2071.
Action 17: Grab bowl_2071.
Action 18: Walk to faucet_43.
Action 19: Switch on faucet_43.
Action 20: Switch off faucet_43.
Action 21: Walk to table_355.
Action 22: Put bowl_2071 on table_355.
Action 23: Grab bowl_2071.
Action 24: Put bowl_2071 on table_355.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior move_bowl_to_home_office_table(bowl:item, home_office_table:item):
    body:
        achieve_once inhand(bowl)
        achieve_once on(bowl, home_office_table)

behavior __goal__():
    body:
        bind home_office_table: item where:
            is_table(home_office_table) and inside(home_office_table, home_office)
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2071
        move_bowl_to_home_office_table(bowl, home_office_table)
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: home_office; available variables: [Variable<home_office_table: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_chair_106_around_bed_105(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==105
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(chair,bed_instance)
        else:
            exp(chair,bed_instance)
    eff:
        unknown[chair]=False
        close[chair,bed_instance]=True
        close[bed_instance,chair]=True
    

behavior find_keyboard_168_around_desk_357(keyboard:item):
    goal: not unknown(keyboard)
    body:
        assert is_keyboard(keyboard)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==357
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(keyboard,desk_instance)
        else:
            exp(keyboard,desk_instance)
    eff:
        unknown[keyboard]=False
        close[keyboard,desk_instance]=True
        close[desk_instance,keyboard]=True
    

behavior find_mouse_166_around_closetdrawer_380(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==380
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(mouse,closetdrawer_instance)
        else:
            exp(mouse,closetdrawer_instance)
    eff:
        unknown[mouse]=False
        close[mouse,closetdrawer_instance]=True
        close[closetdrawer_instance,mouse]=True
    

#goal_representation
behavior move_bowl_to_home_office_table(bowl:item, home_office_table:item, home_office:item):
    body:
        achieve_once inhand(bowl)
        achieve_once on(bowl, home_office_table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        bind home_office_table: item where:
            is_table(home_office_table) and inside(home_office_table, home_office)
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2071
        move_bowl_to_home_office_table(bowl, home_office_table, home_office)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior move_bowl_to_home_office_table(bowl:item, home_office_table:item, home_office:item):
    body:
        achieve_once inhand(bowl)
        achieve_once on(bowl, home_office_table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        bind home_office_table: item where:
            is_table(home_office_table) and inside(home_office_table, home_office)
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2071
        move_bowl_to_home_office_table(bowl, home_office_table, home_office)
##############################
From agent.py-> find a plan in act()
grab_executor(bowl_2071)put_executor(bowl_2071, table_355)
##############################
From agent.py
grab_executor(bowl_2071)
Robot find: Robot is close to the bowl_2071. Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. Grabbing bowl_2071 by right hand. 
##############################
From agent.py
put_executor(bowl_2071, table_355)
Robot find: Robot is close to the bowl_2071. Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. bowl_2071 is close table_355. bowl_2071 is on table_355. bowl_2071 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to place the bowl on the specific table located inside the home office. Currently, the bowl is on table_355, which is not in the home office. Identify the correct table in the home office and move the bowl_2071 to that table.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_phone_2077_around_powersocket_412(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind powersocket_instance:item where:
            is_powersocket(powersocket_instance) and id[powersocket_instance]==412
        achieve close_char(char,powersocket_instance)
        if can_open(powersocket_instance):
            achieve_once open(powersocket_instance)
            exp(phone,powersocket_instance)
        else:
            exp(phone,powersocket_instance)
    eff:
        unknown[phone]=False
        close[phone,powersocket_instance]=True
        close[powersocket_instance,phone]=True
    

behavior find_pencil_2001_around_bookshelf_233(pencil:item):
    goal: not unknown(pencil)
    body:
        assert is_pencil(pencil)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==233
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(pencil,bookshelf_instance)
        else:
            exp(pencil,bookshelf_instance)
    eff:
        unknown[pencil]=False
        close[pencil,bookshelf_instance]=True
        close[bookshelf_instance,pencil]=True
    

#exp_behavior_end

#goal_representation
 
# Function to verify if a table is inside the home office
def in_home_office(table: item):
    symbol in_home_office = exists room: item : (is_home_office(room) and inside(table, room))
    return in_home_office

behavior __goal__():
    body:
        # Bind the cat 
        bind cat: item where:
            is_cat(cat)
            
        # Bind the table in the home office
        bind table: item where:
            is_table(table) and in_home_office(table)
            
        # Achieve the goal of finding the cat and placing it on the table in the home office
        achieve_once on(cat, table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
# Function to verify if a table is inside the home office
def in_home_office(table: item):
    symbol in_home_office = exists room: item : (is_home_office(room) and inside(table, room))
    return in_home_office

behavior __goal__():
    body:
        # Bind the cat 
        bind cat: item where:
            is_cat(cat)
            
        # Bind the table in the home office
        bind table: item where:
            is_table(table) and in_home_office(table)
            
        # Achieve the goal of finding the cat and placing it on the table in the home office
        achieve_once on(cat, table)

##############################
From agent.py-> find a plan in act()
walk_executor(cat_2055)grab_executor(cat_2055)walk_executor(table_355)put_executor(cat_2055, table_355)
##############################
From agent.py
walk_executor(cat_2055)
Robot find: Robot is close to the couch_352. Robot is close to the cat_2055. 
##############################
From agent.py
grab_executor(cat_2055)
Robot find: Robot is close to the couch_352. Robot is close to the cat_2055. Grabbing cat_2055 by right hand. 
##############################
From agent.py
walk_executor(table_355)
Robot find: Robot is close to the couch_352. Robot is close to the cat_2055. Robot is close to the mat_401. Robot is close to the table_355. 
##############################
From agent.py
put_executor(cat_2055, table_355)
Robot find: Robot is close to the couch_352. Robot is close to the cat_2055. Robot is close to the mat_401. Robot is close to the table_355. table_355 is close cat_2055. cat_2055 is on table_355. cat_2055 is close table_355. cat_2055 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Prepare a bowl of water and put the bowl on the table in home office. Then find my cat put it on the table.
Action History:
['walk_executor(coffee_table_2068)', 'walk_executor(table_107)', 'walk_executor(stove_2065)', 'open_executor(stove_2065)', 'walk_executor(closetdrawer_380)', 'walk_executor(closetdrawer_380)', 'walk_executor(closetdrawer_380)', 'walk_executor(table_226)', 'walk_executor(bowl_2071)', 'grab_executor(bowl_2071)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'switchoff_executor(faucet_43)', 'walk_executor(table_355)', 'put_executor(bowl_2071, table_355)', 'grab_executor(bowl_2071)', 'put_executor(bowl_2071, table_355)', 'grab_executor(bowl_2071)', 'put_executor(bowl_2071, table_355)', 'walk_executor(cat_2055)', 'grab_executor(cat_2055)', 'walk_executor(table_355)', 'put_executor(cat_2055, table_355)']
Time info:
Time consume: 219 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 150
goal generate times: 5
goal correct times: 2
action_num: 23

Task complete rate:
1
Scene_id: 0
##############################
