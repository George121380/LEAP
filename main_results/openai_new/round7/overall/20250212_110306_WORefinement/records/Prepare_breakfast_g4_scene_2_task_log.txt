From agent.py
Reset goals: The sub-goals are: 
['1. Find and boil the pasta.', '2. Cook the chicken.', '3. Combine the cooked pasta and chicken, and put them on a plate.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_dry_pasta_2073_around_cupboard_131(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(dry_pasta,cupboard_instance)
        else:
            exp(dry_pasta,cupboard_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,cupboard_instance]=True
        close[cupboard_instance,dry_pasta]=True
    

behavior find_pot_2093_around_cupboard_131(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(pot,cupboard_instance)
        else:
            exp(pot,cupboard_instance)
    eff:
        unknown[pot]=False
        close[pot,cupboard_instance]=True
        close[cupboard_instance,pot]=True
    

behavior find_cup_2087_around_cupboard_131(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

#exp_behavior_end

#goal_representation
behavior find_and_boil_pasta(pasta:item, pot:item, stove:item):
    body:
        achieve_once inside(pasta, pot)
        # Place the pasta inside the pot
        achieve has_water(pot)
        # Fill the pot with water
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil the pasta

behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select dry pasta

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        find_and_boil_pasta(pasta, pot, stove)
        # Find the pasta and boil it using the stove
#goal_representation_end

##############################
From agent.py->reset_goal
behavior find_and_boil_pasta(pasta:item, pot:item, stove:item):
    body:
        achieve_once inside(pasta, pot)
        # Place the pasta inside the pot
        achieve has_water(pot)
        # Fill the pot with water
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil the pasta

behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select dry pasta

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        find_and_boil_pasta(pasta, pot, stove)
        # Find the pasta and boil it using the stove
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(pot_2093, cupboard_131)exp(dry_pasta_2073, cupboard_131)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_2093)putin_executor(dry_pasta_2073, pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: pot_54, Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(pot_2093, cupboard_131)
Fail to find pot_2093 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(dry_pasta_2073, cupboard_130)walk_executor(pot_54)open_executor(pot_54)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_54)putin_executor(dry_pasta_2073, pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(dry_pasta_2073, cupboard_130)
Fail to find dry_pasta_2073 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_187)exp(dry_pasta_2073, wallshelf_187)walk_executor(pot_54)open_executor(pot_54)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_54)putin_executor(dry_pasta_2073, pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(wallshelf_187)
Robot find: Robot is close to the wallshelf_187. 
##############################
From agent.py
exp(dry_pasta_2073, wallshelf_187)
Fail to find dry_pasta_2073 around wallshelf_187. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_190)exp(dry_pasta_2073, wallshelf_190)walk_executor(pot_54)open_executor(pot_54)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_54)putin_executor(dry_pasta_2073, pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(wallshelf_190)
Robot find: Robot is close to the wallshelf_190. 
##############################
From agent.py
exp(dry_pasta_2073, wallshelf_190)
Fail to find dry_pasta_2073 around wallshelf_190. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_191)exp(dry_pasta_2073, wallshelf_191)walk_executor(pot_54)open_executor(pot_54)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_54)putin_executor(dry_pasta_2073, pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(wallshelf_191)
Robot find: Robot is close to the wallshelf_191. 
##############################
From agent.py
exp(dry_pasta_2073, wallshelf_191)
Fail to find dry_pasta_2073 around wallshelf_191. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(dry_pasta_2073, kitchen_counter_132)walk_executor(pot_54)open_executor(pot_54)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_54)putin_executor(dry_pasta_2073, pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the kitchen_counter_132. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find dry_pasta_2073 ?
Answer: Robot, you will find the target item, dry_pasta_2073, in dining_room_1. It is located on top of fridge_140. Look for the fridge, and you will see the dry_pasta_2073 placed on it.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, you will find the target item, dry_pasta_2073, in dining_room_1. It is located on top of fridge_140. Look for the fridge, and you will see the dry_pasta_2073 placed on it.

The actions you have taken:
Action 1: Walk to cupboard_131.
Action 2: Open cupboard_131.
Action 3: look for pot_2093 around cupboard_131.
Action 4: Walk to cupboard_130.
Action 5: look for dry_pasta_2073 around cupboard_130.
Action 6: Walk to wallshelf_187.
Action 7: look for dry_pasta_2073 around wallshelf_187.
Action 8: Walk to wallshelf_190.
Action 9: look for dry_pasta_2073 around wallshelf_190.
Action 10: Walk to wallshelf_191.
Action 11: look for dry_pasta_2073 around wallshelf_191.
Action 12: Walk to kitchen_counter_132.

##############################
From agent.py
exp(dry_pasta_2073, kitchen_counter_132)
Fail to find dry_pasta_2073 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(dry_pasta_2073, fridge_140)walk_executor(pot_54)open_executor(pot_54)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_54)putin_executor(dry_pasta_2073, pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(dry_pasta_2073, fridge_140)
Find dry_pasta_2073. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_54)open_executor(pot_54)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_54)putin_executor(dry_pasta_2073, pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
open_executor(pot_54)
Robot find: Robot is close to the oven_141. Robot is close to the pot_54. pot_54 is opened. 
##############################
From agent.py
walk_executor(dry_pasta_2073)
Robot find: Robot is close to the dry_pasta_2073. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(dry_pasta_2073)
Robot find: Robot is close to the dry_pasta_2073. Robot is close to the fridge_140. Grabbing dry_pasta_2073 by right hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the dry_pasta_2073. Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
putin_executor(dry_pasta_2073, pot_54)
Robot find: Robot is close to the dry_pasta_2073. Robot is close to the oven_141. Robot is close to the pot_54. dry_pasta_2073 is inside pot_54. dry_pasta_2073 is close pot_54. pot_54 is close dry_pasta_2073. dry_pasta_2073 released by right hand. 
##############################
From agent.py
grab_executor(pot_54)
Robot find: Robot is close to the dry_pasta_2073. Robot is close to the oven_141. Robot is close to the pot_54. Grabbing pot_54 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(pot_54, stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. pot_54 is on stove_2090. pot_54 is close stove_2090. stove_2090 is close pot_54. pot_54 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The pot with the pasta should have been filled with water for boiling. You need to ensure that there is water in the pot before placing it on the stove and turning it on.
##############################
From agent.py
Human Instruction: The pot with the pasta should have been filled with water for boiling. You need to ensure that there is water in the pot before placing it on the stove and turning it on.

The actions you have taken:
Action 1: Walk to cupboard_131.
Action 2: Open cupboard_131.
Action 3: look for pot_2093 around cupboard_131.
Action 4: Walk to cupboard_130.
Action 5: look for dry_pasta_2073 around cupboard_130.
Action 6: Walk to wallshelf_187.
Action 7: look for dry_pasta_2073 around wallshelf_187.
Action 8: Walk to wallshelf_190.
Action 9: look for dry_pasta_2073 around wallshelf_190.
Action 10: Walk to wallshelf_191.
Action 11: look for dry_pasta_2073 around wallshelf_191.
Action 12: Walk to kitchen_counter_132.
Action 13: look for dry_pasta_2073 around kitchen_counter_132.
Action 14: Walk to fridge_140.
Action 15: Switch off fridge_140.
Action 16: Open fridge_140.
Action 17: look for dry_pasta_2073 around fridge_140.
Action 18: Walk to pot_54.
Action 19: Open pot_54.
Action 20: Walk to dry_pasta_2073.
Action 21: Grab dry_pasta_2073.
Action 22: Walk to pot_54.
Action 23: Put dry_pasta_2073 into pot_54.
Action 24: Grab pot_54.
Action 25: Walk to faucet_134.
Action 26: Switch off faucet_134.
Action 27: Walk to stove_2090.
Action 28: Put pot_54 on stove_2090.
Action 29: Switch on stove_2090.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_kitchen_counter_128(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(plate,kitchen_counter_instance)
        else:
            exp(plate,kitchen_counter_instance)
    eff:
        unknown[plate]=False
        close[plate,kitchen_counter_instance]=True
        close[kitchen_counter_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        # Ensure the character is close to the faucet
        achieve has_water(pot)
        # Fill the pot with water

behavior boil_pasta(pot:item, stove:item):
    body:
        achieve_once inside(dry_pasta, pot)
        # Ensure the pasta is inside the pot
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil the pasta

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove
            
        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        bind dry_pasta: item where:
            is_dry_pasta(dry_pasta)
        # Select dry pasta
        
        fill_pot_with_water(pot, faucet)
        boil_pasta(pot, stove)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_window_287(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind window_instance:item where:
            is_window(window_instance) and id[window_instance]==287
        achieve close_char(char,window_instance)
        if can_open(window_instance):
            achieve_once open(window_instance)
            exp(plate,window_instance)
        else:
            exp(plate,window_instance)
    eff:
        unknown[plate]=False
        close[plate,window_instance]=True
        close[window_instance,plate]=True
    

behavior find_clothes_skirt_2116_around_basket_for_clothes_2040(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve has_water(pot)
        # Fill the pot with water

behavior place_pasta_in_pot(pasta:item, pot:item):
    body:
        achieve_once inside(pasta, pot)
        # Place the pasta inside the pot

behavior boil_pasta(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)
        achieve is_on(stove)
        # Place the pot on the stove and turn it on to boil the pasta

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot] == 54
        # Select the pot with ID 54

        bind pasta: item where:
            is_dry_pasta(pasta) and id[pasta] == 2073
        # Select the dry pasta with ID 2073

        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 134
        # Select the faucet with ID 134

        bind stove: item where:
            is_stove(stove) and id[stove] == 2090
        # Select the stove with ID 2090

        fill_pot_with_water(pot, faucet)
        # Fill the pot with water

        place_pasta_in_pot(pasta, pot)
        # Place the dry pasta inside the pot

        boil_pasta(pot, stove)
        # Boil the pasta on the stove

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve has_water(pot)
        # Fill the pot with water

behavior place_pasta_in_pot(pasta:item, pot:item):
    body:
        achieve_once inside(pasta, pot)
        # Place the pasta inside the pot

behavior boil_pasta(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)
        achieve is_on(stove)
        # Place the pot on the stove and turn it on to boil the pasta

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot] == 54
        # Select the pot with ID 54

        bind pasta: item where:
            is_dry_pasta(pasta) and id[pasta] == 2073
        # Select the dry pasta with ID 2073

        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 134
        # Select the faucet with ID 134

        bind stove: item where:
            is_stove(stove) and id[stove] == 2090
        # Select the stove with ID 2090

        fill_pot_with_water(pot, faucet)
        # Fill the pot with water

        place_pasta_in_pot(pasta, pot)
        # Place the dry pasta inside the pot

        boil_pasta(pot, stove)
        # Boil the pasta on the stove

##############################
From agent.py-> find a plan in act()
grab_executor(pot_54)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(stove_2090)put_executor(pot_54, stove_2090)
##############################
From agent.py
grab_executor(pot_54)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. Grabbing pot_54 by right hand. 
##############################
From agent.py
walk_executor(faucet_308)
Robot find: drawing_296, towel_rack_298, Robot is close to the pot_54. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. 
##############################
From agent.py
switchoff_executor(faucet_308)
Robot find: Robot is close to the pot_54. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. faucet_308 is turned off. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(pot_54, stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. pot_54 is on stove_2090. pot_54 is close stove_2090. pot_54 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to fill the pot with water before placing it on the stove and turning the stove on to boil the pasta.
##############################
From agent.py
Human Instruction: You need to fill the pot with water before placing it on the stove and turning the stove on to boil the pasta.

The actions you have taken:
Action 1: Walk to cupboard_131.
Action 2: Open cupboard_131.
Action 3: look for pot_2093 around cupboard_131.
Action 4: Walk to cupboard_130.
Action 5: look for dry_pasta_2073 around cupboard_130.
Action 6: Walk to wallshelf_187.
Action 7: look for dry_pasta_2073 around wallshelf_187.
Action 8: Walk to wallshelf_190.
Action 9: look for dry_pasta_2073 around wallshelf_190.
Action 10: Walk to wallshelf_191.
Action 11: look for dry_pasta_2073 around wallshelf_191.
Action 12: Walk to kitchen_counter_132.
Action 13: look for dry_pasta_2073 around kitchen_counter_132.
Action 14: Walk to fridge_140.
Action 15: Switch off fridge_140.
Action 16: Open fridge_140.
Action 17: look for dry_pasta_2073 around fridge_140.
Action 18: Walk to pot_54.
Action 19: Open pot_54.
Action 20: Walk to dry_pasta_2073.
Action 21: Grab dry_pasta_2073.
Action 22: Walk to pot_54.
Action 23: Put dry_pasta_2073 into pot_54.
Action 24: Grab pot_54.
Action 25: Walk to faucet_134.
Action 26: Switch off faucet_134.
Action 27: Walk to stove_2090.
Action 28: Put pot_54 on stove_2090.
Action 29: Switch on stove_2090.
Action 30: Grab pot_54.
Action 31: Walk to faucet_308.
Action 32: Switch off faucet_308.
Action 33: Walk to stove_2090.
Action 34: Put pot_54 on stove_2090.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_skirt_2116_around_basket_for_clothes_2040(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

behavior find_plate_2105_around_sink_133(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(plate,sink_instance)
        else:
            exp(plate,sink_instance)
    eff:
        unknown[plate]=False
        close[plate,sink_instance]=True
        close[sink_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior locate_pot_and_fill_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        # Ensure the character is close to the faucet
        achieve has_water(pot)
        # Fill the pot with water

behavior heat_pot_with_pasta(pasta:item, pot:item, stove:item):
    body:
        achieve_once inside(pasta, pot)
        # Add pasta to the pot
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil the pasta

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select dry pasta
      
        locate_pot_and_fill_with_water(pot, faucet)
        heat_pot_with_pasta(pasta, pot, stove)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior locate_pot_and_fill_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        # Ensure the character is close to the faucet
        achieve has_water(pot)
        # Fill the pot with water

behavior heat_pot_with_pasta(pasta:item, pot:item, stove:item):
    body:
        achieve_once inside(pasta, pot)
        # Add pasta to the pot
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil the pasta

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select dry pasta
      
        locate_pot_and_fill_with_water(pot, faucet)
        heat_pot_with_pasta(pasta, pot, stove)

##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)walk_executor(pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchon_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the dry_pasta_2073. Robot is close to the stove_2090. Robot is close to the pot_54. 
##############################
From agent.py
grab_executor(pot_54)
Robot find: Robot is close to the dry_pasta_2073. Robot is close to the stove_2090. Robot is close to the pot_54. Grabbing pot_54 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(pot_54, stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. pot_54 is on stove_2090. pot_54 is close stove_2090. pot_54 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2026_around_sink_133(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(food_onion,sink_instance)
        else:
            exp(food_onion,sink_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,sink_instance]=True
        close[sink_instance,food_onion]=True
    

behavior find_clothes_skirt_2116_around_basket_for_clothes_2040(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
def is_food_chicken(x: item):
    return is_food(x) and is_food_chicken(x)

def on_stove(pan: item, stove: item):
    return on(pan, stove) and is_on(stove)

behavior prepare_chicken(chicken: item, stove: item, pan: item):
    body:
        achieve_once inhand(chicken)
        # The chicken should be in hand as preparation starts
        achieve on(chicken, pan)
        # Place chicken in a cooking pan
        achieve on_stove(pan, stove)
        # Ensure theres a pan on the stove and its on heat

behavior cook_chicken(chicken: item, stove: item, pan: item):
    body:
        prepare_chicken(chicken, stove, pan)
        # Prepare chicken for cooking by placing it in a pan on the stove

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken item

        bind stove: item where:
            is_stove(stove)
        # Select stove for cooking

        bind pan: item where:
            is_fryingpan(pan)
        # Select a frying pan for cooking

        cook_chicken(chicken, stove, pan)
        # Process of cooking chicken


#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2026_around_sink_307(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(food_onion,sink_instance)
        else:
            exp(food_onion,sink_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,sink_instance]=True
        close[sink_instance,food_onion]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
behavior cook_chicken(chicken:item, pan:item, stove:item):
    body:
        achieve_once inside(chicken, pan)
        # Place the chicken inside the pan
        achieve_once on(pan, stove)
        # Place the pan on the stove
        achieve is_on(stove)
        # Ensure the stove is on to cook the chicken

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken item

        bind pan: item where:
            is_fryingpan(pan)
        # Select a frying pan

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        cook_chicken(chicken, pan, stove)
        # Cook the chicken using the pan and stove
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior cook_chicken(chicken:item, pan:item, stove:item):
    body:
        achieve_once inside(chicken, pan)
        # Place the chicken inside the pan
        achieve_once on(pan, stove)
        # Place the pan on the stove
        achieve is_on(stove)
        # Ensure the stove is on to cook the chicken

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken item

        bind pan: item where:
            is_fryingpan(pan)
        # Select a frying pan

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        cook_chicken(chicken, pan, stove)
        # Cook the chicken using the pan and stove
##############################
From agent.py-> find a plan in act()
walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(fryingpan_2107)putin_executor(food_chicken_2050, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)
##############################
From agent.py
walk_executor(food_chicken_2050)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_chicken_2050)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the fridge_140. Grabbing food_chicken_2050 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_chicken_2050, fryingpan_2107)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. food_chicken_2050 is close fryingpan_2107. food_chicken_2050 is inside fryingpan_2107. fryingpan_2107 is close food_chicken_2050. food_chicken_2050 released by right hand. 
##############################
From agent.py
grab_executor(fryingpan_2107)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Grabbing fryingpan_2107 by right hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(fryingpan_2107, stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. fryingpan_2107 is on stove_2090. stove_2090 is close fryingpan_2107. fryingpan_2107 is close stove_2090. fryingpan_2107 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_kitchen_counter_128(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(plate,kitchen_counter_instance)
        else:
            exp(plate,kitchen_counter_instance)
    eff:
        unknown[plate]=False
        close[plate,kitchen_counter_instance]=True
        close[kitchen_counter_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior combine_and_plate(cooked_pasta:item, cooked_chicken:item, plate:item):
    body:
        achieve_once on(cooked_pasta, plate)
        achieve_once on(cooked_chicken, plate)

behavior __goal__():
    body:
        bind cooked_pasta: item where:
            is_dry_pasta(cooked_pasta)
        # Select the cooked pasta

        bind cooked_chicken: item where:
            is_food_chicken(cooked_chicken)
        # Select the cooked chicken

        bind plate: item where:
            is_plate(plate)
        # Select a plate

        combine_and_plate(cooked_pasta, cooked_chicken, plate)
        # Combine the cooked pasta and chicken, and put them on a plate

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior combine_and_plate(cooked_pasta:item, cooked_chicken:item, plate:item):
    body:
        achieve_once on(cooked_pasta, plate)
        achieve_once on(cooked_chicken, plate)

behavior __goal__():
    body:
        bind cooked_pasta: item where:
            is_dry_pasta(cooked_pasta)
        # Select the cooked pasta

        bind cooked_chicken: item where:
            is_food_chicken(cooked_chicken)
        # Select the cooked chicken

        bind plate: item where:
            is_plate(plate)
        # Select a plate

        combine_and_plate(cooked_pasta, cooked_chicken, plate)
        # Combine the cooked pasta and chicken, and put them on a plate

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(plate_2105, kitchen_counter_128)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(plate_2105)put_executor(dry_pasta_2073, plate_2105)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(plate_2105)put_executor(food_chicken_2050, plate_2105)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(plate_2105, kitchen_counter_128)
Fail to find plate_2105 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(plate_2105, dishwasher_143)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(plate_2105)put_executor(dry_pasta_2073, plate_2105)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(plate_2105)put_executor(food_chicken_2050, plate_2105)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(plate_2105, dishwasher_143)
Fail to find plate_2105 around dishwasher_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(walllamp_289)exp(plate_2105, walllamp_289)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(plate_2105)put_executor(dry_pasta_2073, plate_2105)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(plate_2105)put_executor(food_chicken_2050, plate_2105)
##############################
From agent.py
walk_executor(walllamp_289)
Robot find: towel_rack_300, Robot is close to the walllamp_289. 
##############################
From agent.py
exp(plate_2105, walllamp_289)
Fail to find plate_2105 around walllamp_289. 
##############################
From agent.py-> find a plan in act()
walk_executor(toaster_144)open_executor(toaster_144)exp(plate_2105, toaster_144)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(plate_2105)put_executor(dry_pasta_2073, plate_2105)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(plate_2105)put_executor(food_chicken_2050, plate_2105)
##############################
From agent.py
walk_executor(toaster_144)
Robot find: Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. 
##############################
From agent.py
open_executor(toaster_144)
Robot find: Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. toaster_144 is opened. 
##############################
From agent.py
exp(plate_2105, toaster_144)
Fail to find plate_2105 around toaster_144. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)exp(plate_2105, sink_133)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(plate_2105)put_executor(dry_pasta_2073, plate_2105)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(plate_2105)put_executor(food_chicken_2050, plate_2105)
##############################
From agent.py
walk_executor(sink_133)
Robot find: after_shave_2029, cleaning_solution_2098, juice_2034, Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find plate_2105 ?
Answer: Go to dining_room_1. Locate table_127; plate_2105 is on this table.
Re-decompose: None

##############################
From agent.py
Human Instruction: You need to fill the pot with water before placing it on the stove and turning the stove on to boil the pasta.
Go to dining_room_1. Locate table_127; plate_2105 is on this table.

The actions you have taken:
Action 1: Walk to cupboard_131.
Action 2: Open cupboard_131.
Action 3: look for pot_2093 around cupboard_131.
Action 4: Walk to cupboard_130.
Action 5: look for dry_pasta_2073 around cupboard_130.
Action 6: Walk to wallshelf_187.
Action 7: look for dry_pasta_2073 around wallshelf_187.
Action 8: Walk to wallshelf_190.
Action 9: look for dry_pasta_2073 around wallshelf_190.
Action 10: Walk to wallshelf_191.
Action 11: look for dry_pasta_2073 around wallshelf_191.
Action 12: Walk to kitchen_counter_132.
Action 13: look for dry_pasta_2073 around kitchen_counter_132.
Action 14: Walk to fridge_140.
Action 15: Switch off fridge_140.
Action 16: Open fridge_140.
Action 17: look for dry_pasta_2073 around fridge_140.
Action 18: Walk to pot_54.
Action 19: Open pot_54.
Action 20: Walk to dry_pasta_2073.
Action 21: Grab dry_pasta_2073.
Action 22: Walk to pot_54.
Action 23: Put dry_pasta_2073 into pot_54.
Action 24: Grab pot_54.
Action 25: Walk to faucet_134.
Action 26: Switch off faucet_134.
Action 27: Walk to stove_2090.
Action 28: Put pot_54 on stove_2090.
Action 29: Switch on stove_2090.
Action 30: Grab pot_54.
Action 31: Walk to faucet_308.
Action 32: Switch off faucet_308.
Action 33: Walk to stove_2090.
Action 34: Put pot_54 on stove_2090.
Action 35: Walk to faucet_134.
Action 36: Walk to pot_54.
Action 37: Grab pot_54.
Action 38: Walk to faucet_134.
Action 39: Switch on faucet_134.
Action 40: Switch off faucet_134.
Action 41: Walk to stove_2090.
Action 42: Put pot_54 on stove_2090.
Action 43: Walk to food_chicken_2050.
Action 44: Grab food_chicken_2050.
Action 45: Walk to fryingpan_2107.
Action 46: Put food_chicken_2050 into fryingpan_2107.
Action 47: Grab fryingpan_2107.
Action 48: Walk to stove_2090.
Action 49: Put fryingpan_2107 on stove_2090.
Action 50: Walk to kitchen_counter_128.
Action 51: look for plate_2105 around kitchen_counter_128.
Action 52: Walk to dishwasher_143.
Action 53: Open dishwasher_143.
Action 54: look for plate_2105 around dishwasher_143.
Action 55: Walk to walllamp_289.
Action 56: look for plate_2105 around walllamp_289.
Action 57: Walk to toaster_144.
Action 58: Open toaster_144.
Action 59: look for plate_2105 around toaster_144.
Action 60: Walk to sink_133.

##############################
From agent.py
exp(plate_2105, sink_133)
Fail to find plate_2105 around sink_133. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_127)exp(plate_2105, table_127)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(plate_2105)put_executor(dry_pasta_2073, plate_2105)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(plate_2105)put_executor(food_chicken_2050, plate_2105)
##############################
From agent.py
walk_executor(table_127)
Robot find: mat_115, fork_2104, console_2027, crayon_2030, bowl_2096, bowl_2097, napkin_2014, plate_2105, drawing_118, Robot is close to the mat_115. Robot is close to the table_127. 
##############################
From agent.py
exp(plate_2105, table_127)
Find plate_2105. 
##############################
From agent.py-> find a plan in act()
walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(plate_2105)put_executor(dry_pasta_2073, plate_2105)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(plate_2105)put_executor(food_chicken_2050, plate_2105)
##############################
From agent.py
walk_executor(dry_pasta_2073)
Robot find: Robot is close to the dry_pasta_2073. Robot is close to the pot_54. 
##############################
From agent.py
grab_executor(dry_pasta_2073)
Robot find: Robot is close to the dry_pasta_2073. Robot is close to the pot_54. Grabbing dry_pasta_2073 by right hand. 
##############################
From agent.py
walk_executor(plate_2105)
Robot find: Robot is close to the dry_pasta_2073. Robot is close to the plate_2105. Robot is close to the table_127. 
##############################
From agent.py
put_executor(dry_pasta_2073, plate_2105)
Robot find: Robot is close to the dry_pasta_2073. Robot is close to the plate_2105. Robot is close to the table_127. dry_pasta_2073 is close plate_2105. dry_pasta_2073 is on plate_2105. plate_2105 is close dry_pasta_2073. dry_pasta_2073 released by right hand. 
##############################
From agent.py
walk_executor(food_chicken_2050)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the fryingpan_2107. 
##############################
From agent.py
grab_executor(food_chicken_2050)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the fryingpan_2107. Grabbing food_chicken_2050 by right hand. 
##############################
From agent.py
walk_executor(plate_2105)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the plate_2105. Robot is close to the table_127. 
##############################
From agent.py
put_executor(food_chicken_2050, plate_2105)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the plate_2105. Robot is close to the table_127. food_chicken_2050 is close plate_2105. plate_2105 is close food_chicken_2050. food_chicken_2050 is on plate_2105. food_chicken_2050 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make chicken pasta, put it in a plate.
Action History:
['walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(cupboard_130)', 'walk_executor(wallshelf_187)', 'walk_executor(wallshelf_190)', 'walk_executor(wallshelf_191)', 'walk_executor(kitchen_counter_132)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'walk_executor(pot_54)', 'open_executor(pot_54)', 'walk_executor(dry_pasta_2073)', 'grab_executor(dry_pasta_2073)', 'walk_executor(pot_54)', 'putin_executor(dry_pasta_2073, pot_54)', 'grab_executor(pot_54)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(stove_2090)', 'put_executor(pot_54, stove_2090)', 'switchon_executor(stove_2090)', 'grab_executor(pot_54)', 'walk_executor(faucet_308)', 'switchoff_executor(faucet_308)', 'walk_executor(stove_2090)', 'put_executor(pot_54, stove_2090)', 'walk_executor(faucet_134)', 'walk_executor(pot_54)', 'grab_executor(pot_54)', 'walk_executor(faucet_134)', 'switchon_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(stove_2090)', 'put_executor(pot_54, stove_2090)', 'walk_executor(food_chicken_2050)', 'grab_executor(food_chicken_2050)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_chicken_2050, fryingpan_2107)', 'grab_executor(fryingpan_2107)', 'walk_executor(stove_2090)', 'put_executor(fryingpan_2107, stove_2090)', 'walk_executor(kitchen_counter_128)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'walk_executor(walllamp_289)', 'walk_executor(toaster_144)', 'open_executor(toaster_144)', 'walk_executor(sink_133)', 'walk_executor(table_127)', 'walk_executor(dry_pasta_2073)', 'grab_executor(dry_pasta_2073)', 'walk_executor(plate_2105)', 'put_executor(dry_pasta_2073, plate_2105)', 'walk_executor(food_chicken_2050)', 'grab_executor(food_chicken_2050)', 'walk_executor(plate_2105)', 'put_executor(food_chicken_2050, plate_2105)']
Time info:
Time consume: 458 seconds
Exp_helper query times: 2
Guidance query times: 0
library scale: 83
goal generate times: 7
goal correct times: 0
action_num: 58

Task complete rate:
Keystate: k1 - Requires: 0 steps
Keystate: k2 - Requires: 8 steps
Keystate: k3 - Requires: 6 steps
Keystate: k4 - Requires: 0 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
