From agent.py
Reset goals: The sub-goals are: 
['Boil the egg.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_egg_2053_around_cupboard_130(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_egg,cupboard_instance)
        else:
            exp(food_egg,cupboard_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,cupboard_instance]=True
        close[cupboard_instance,food_egg]=True
    

behavior find_pot_54_around_cupboard_130(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(pot,cupboard_instance)
        else:
            exp(pot,cupboard_instance)
    eff:
        unknown[pot]=False
        close[pot,cupboard_instance]=True
        close[cupboard_instance,pot]=True
    

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)
        # Fill the pot with water

behavior heat_pot_until_boiling(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to heat the pot

behavior place_egg_in_pot(egg:item, pot:item):
    body:
        achieve_once inside(egg, pot)
        # Place the egg inside the pot

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot item

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind egg: item where:
            is_food_egg(egg)
        # Select an egg item

        fill_pot_with_water(pot) # Step to fill the pot with water
        heat_pot_until_boiling(pot, stove) # Step to heat the pot and boil the water
        place_egg_in_pot(egg, pot) # Step to place the egg in the boiled water

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)
        # Fill the pot with water

behavior heat_pot_until_boiling(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to heat the pot

behavior place_egg_in_pot(egg:item, pot:item):
    body:
        achieve_once inside(egg, pot)
        # Place the egg inside the pot

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot item

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind egg: item where:
            is_food_egg(egg)
        # Select an egg item

        fill_pot_with_water(pot) # Step to fill the pot with water
        heat_pot_until_boiling(pot, stove) # Step to heat the pot and boil the water
        place_egg_in_pot(egg, pot) # Step to place the egg in the boiled water

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(pot_2093, cupboard_130)walk_executor(pot_2093)open_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)walk_executor(cupboard_130)exp(food_egg_2053, cupboard_130)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_2093)putin_executor(food_egg_2053, pot_2093)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, pot_54, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(pot_2093, cupboard_130)
Fail to find pot_2093 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_54)open_executor(pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_54)putin_executor(food_egg_2053, pot_54)
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
open_executor(pot_54)
Robot find: Robot is close to the oven_141. Robot is close to the pot_54. pot_54 is opened. 
##############################
From agent.py
grab_executor(pot_54)
Robot find: Robot is close to the oven_141. Robot is close to the pot_54. Grabbing pot_54 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(pot_54, stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. pot_54 is on stove_2090. pot_54 is close stove_2090. stove_2090 is close pot_54. pot_54 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_egg_2053, fridge_140)
Find food_egg_2053. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_54)grab_executor(pot_54)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(stove_2090)put_executor(pot_54, stove_2090)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_54)putin_executor(food_egg_2053, pot_54)
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the stove_2090. Robot is close to the pot_54. 
##############################
From agent.py
grab_executor(pot_54)
Robot find: Robot is close to the stove_2090. Robot is close to the pot_54. Grabbing pot_54 by right hand. 
##############################
From agent.py
walk_executor(faucet_308)
Robot find: drawing_296, towel_rack_298, Robot is close to the pot_54. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. 
##############################
From agent.py
switchoff_executor(faucet_308)
Robot find: Robot is close to the pot_54. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. faucet_308 is turned off. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(pot_54, stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. pot_54 is on stove_2090. pot_54 is close stove_2090. pot_54 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the fridge_140. Robot is close to the food_egg_2053. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the fridge_140. Robot is close to the food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the food_egg_2053. Robot is close to the stove_2090. Robot is close to the pot_54. 
##############################
From agent.py
putin_executor(food_egg_2053, pot_54)
Robot find: Robot is close to the food_egg_2053. Robot is close to the stove_2090. Robot is close to the pot_54. food_egg_2053 is close pot_54. pot_54 is close food_egg_2053. food_egg_2053 is inside pot_54. food_egg_2053 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to fill pot_54 with water before you can proceed with boiling the egg. Once the pot has water, the egg can be boiled when you place it on the stove and ensure the stove is turned on.
##############################
From agent.py
Human Instruction: You need to fill pot_54 with water before you can proceed with boiling the egg. Once the pot has water, the egg can be boiled when you place it on the stove and ensure the stove is turned on.

The actions you have taken:
Action 1: Walk to cupboard_130.
Action 2: look for pot_2093 around cupboard_130.
Action 3: Walk to pot_54.
Action 4: Open pot_54.
Action 5: Grab pot_54.
Action 6: Walk to faucet_134.
Action 7: Switch off faucet_134.
Action 8: Walk to stove_2090.
Action 9: Put pot_54 on stove_2090.
Action 10: Switch on stove_2090.
Action 11: Walk to fridge_140.
Action 12: Switch off fridge_140.
Action 13: Open fridge_140.
Action 14: look for food_egg_2053 around fridge_140.
Action 15: Walk to pot_54.
Action 16: Grab pot_54.
Action 17: Walk to faucet_308.
Action 18: Switch off faucet_308.
Action 19: Walk to stove_2090.
Action 20: Put pot_54 on stove_2090.
Action 21: Walk to food_egg_2053.
Action 22: Grab food_egg_2053.
Action 23: Walk to pot_54.
Action 24: Put food_egg_2053 into pot_54.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        # Ensure the character is close to the faucet
        achieve has_water(pot)
        # Fill the pot with water

behavior heat_pot(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil water

behavior put_egg_in_pot(egg:item, pot:item):
    body:
        achieve_once inside(egg, pot)
        # Place the egg inside the pot

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot] == 54
        # Select the pot with ID 54

        bind stove: item where:
            is_stove(stove) and id[stove] == 2090
        # Select the stove with ID 2090 

        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 308
        # Select the faucet with ID 308

        bind egg: item where:
            is_food_egg(egg) and id[egg] == 2053
        # Select the egg with ID 2053

        fill_pot_with_water(pot, faucet) 
        # Fill the pot with water
        heat_pot(pot, stove) 
        # Boil water using the stove
        put_egg_in_pot(egg, pot)
        # Put the egg into the pot

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        # Ensure the character is close to the faucet
        achieve has_water(pot)
        # Fill the pot with water

behavior heat_pot(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil water

behavior put_egg_in_pot(egg:item, pot:item):
    body:
        achieve_once inside(egg, pot)
        # Place the egg inside the pot

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot] == 54
        # Select the pot with ID 54

        bind stove: item where:
            is_stove(stove) and id[stove] == 2090
        # Select the stove with ID 2090 

        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 308
        # Select the faucet with ID 308

        bind egg: item where:
            is_food_egg(egg) and id[egg] == 2053
        # Select the egg with ID 2053

        fill_pot_with_water(pot, faucet) 
        # Fill the pot with water
        heat_pot(pot, stove) 
        # Boil water using the stove
        put_egg_in_pot(egg, pot)
        # Put the egg into the pot

##############################
From agent.py-> find a plan in act()
walk_executor(faucet_308)walk_executor(pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchon_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)
##############################
From agent.py
walk_executor(faucet_308)
Robot find: Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the stove_2090. Robot is close to the food_egg_2053. Robot is close to the pot_54. 
##############################
From agent.py
grab_executor(pot_54)
Robot find: Robot is close to the stove_2090. Robot is close to the food_egg_2053. Robot is close to the pot_54. Grabbing pot_54 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(pot_54, stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. pot_54 is on stove_2090. pot_54 is close stove_2090. pot_54 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure that pot_54 is filled with water, as the current actions do not confirm this step was completed. Fill the pot with water using one of the faucets before placing it on the stove again.
##############################
From agent.py
Human Instruction: You need to ensure that pot_54 is filled with water, as the current actions do not confirm this step was completed. Fill the pot with water using one of the faucets before placing it on the stove again.

The actions you have taken:
Action 1: Walk to cupboard_130.
Action 2: look for pot_2093 around cupboard_130.
Action 3: Walk to pot_54.
Action 4: Open pot_54.
Action 5: Grab pot_54.
Action 6: Walk to faucet_134.
Action 7: Switch off faucet_134.
Action 8: Walk to stove_2090.
Action 9: Put pot_54 on stove_2090.
Action 10: Switch on stove_2090.
Action 11: Walk to fridge_140.
Action 12: Switch off fridge_140.
Action 13: Open fridge_140.
Action 14: look for food_egg_2053 around fridge_140.
Action 15: Walk to pot_54.
Action 16: Grab pot_54.
Action 17: Walk to faucet_308.
Action 18: Switch off faucet_308.
Action 19: Walk to stove_2090.
Action 20: Put pot_54 on stove_2090.
Action 21: Walk to food_egg_2053.
Action 22: Grab food_egg_2053.
Action 23: Walk to pot_54.
Action 24: Put food_egg_2053 into pot_54.
Action 25: Walk to faucet_308.
Action 26: Walk to pot_54.
Action 27: Grab pot_54.
Action 28: Walk to faucet_134.
Action 29: Switch on faucet_134.
Action 30: Switch off faucet_134.
Action 31: Walk to stove_2090.
Action 32: Put pot_54 on stove_2090.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_laptop_2015_around_computer_379(laptop:item):
    goal: not unknown(laptop)
    body:
        assert is_laptop(laptop)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==379
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(laptop,computer_instance)
        else:
            exp(laptop,computer_instance)
    eff:
        unknown[laptop]=False
        close[laptop,computer_instance]=True
        close[computer_instance,laptop]=True
    

behavior find_bowl_2097_around_wallshelf_190(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==190
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(bowl,wallshelf_instance)
        else:
            exp(bowl,wallshelf_instance)
    eff:
        unknown[bowl]=False
        close[bowl,wallshelf_instance]=True
        close[wallshelf_instance,bowl]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet) 
        # Ensure the character is close to the faucet
        achieve has_water(pot)
        # Fill the pot with water

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)
        # Place the pot on the stove

behavior boil_egg_in_pot(egg:item, pot:item):
    body:
        achieve_once inside(egg, pot)
        # Place the egg inside the pot

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot] == 54
        # Select the pot with ID 54

        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 134 
        # Select the faucet with ID 134

        bind stove: item where:
            is_stove(stove) and id[stove] == 2090
        # Select the stove with ID 2090

        bind egg: item where:
            is_food_egg(egg) and id[egg] == 2053
        # Select the egg with ID 2053

        fill_pot_with_water(pot, faucet)
        # Fill the pot with water

        place_pot_on_stove(pot, stove)
        # Place the pot on the stove

        boil_egg_in_pot(egg, pot)
        # Boil the egg in the pot

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet) 
        # Ensure the character is close to the faucet
        achieve has_water(pot)
        # Fill the pot with water

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)
        # Place the pot on the stove

behavior boil_egg_in_pot(egg:item, pot:item):
    body:
        achieve_once inside(egg, pot)
        # Place the egg inside the pot

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot] == 54
        # Select the pot with ID 54

        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 134 
        # Select the faucet with ID 134

        bind stove: item where:
            is_stove(stove) and id[stove] == 2090
        # Select the stove with ID 2090

        bind egg: item where:
            is_food_egg(egg) and id[egg] == 2053
        # Select the egg with ID 2053

        fill_pot_with_water(pot, faucet)
        # Fill the pot with water

        place_pot_on_stove(pot, stove)
        # Place the pot on the stove

        boil_egg_in_pot(egg, pot)
        # Boil the egg in the pot

##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The pot needs to be filled with water. Ensure that you fill pot_54 with water using faucet_134 before placing it back on the stove.
##############################
Task Summary:
Task Goal:
Boil egg.
Action History:
['walk_executor(cupboard_130)', 'walk_executor(pot_54)', 'open_executor(pot_54)', 'grab_executor(pot_54)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(stove_2090)', 'put_executor(pot_54, stove_2090)', 'switchon_executor(stove_2090)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'walk_executor(pot_54)', 'grab_executor(pot_54)', 'walk_executor(faucet_308)', 'switchoff_executor(faucet_308)', 'walk_executor(stove_2090)', 'put_executor(pot_54, stove_2090)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(pot_54)', 'putin_executor(food_egg_2053, pot_54)', 'walk_executor(faucet_308)', 'walk_executor(pot_54)', 'grab_executor(pot_54)', 'walk_executor(faucet_134)', 'switchon_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(stove_2090)', 'put_executor(pot_54, stove_2090)', 'walk_executor(faucet_134)']
Time info:
Time consume: 120 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 168
goal generate times: 3
goal correct times: 0
action_num: 31

Task complete rate:
1
Scene_id: 2
##############################
