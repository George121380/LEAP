From agent.py
Reset goals: The sub-goals are: 
['1. Find an iron and ironing board.', '2. Iron the shirt.', '3. Place the ironed shirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation

behavior find_ironing_items(iron:item, ironing_board:item):
    body:
        observe(iron, "Determine the current location of the iron")
        observe(ironing_board, "Determine the current location of the ironing board")

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        # Select an iron item

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board item

        find_ironing_items(iron, ironing_board)
        # Find the iron and ironing board

#goal_representation_end

##############################
From agent.py->reset_goal

behavior find_ironing_items(iron:item, ironing_board:item):
    body:
        observe(iron, "Determine the current location of the iron")
        observe(ironing_board, "Determine the current location of the ironing board")

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        # Select an iron item

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board item

        find_ironing_items(iron, ironing_board)
        # Find the iron and ironing board

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)exp(iron_2117, ironing_board_2099)walk_executor(iron_2117)obs(iron_2117, Determine the current location of the iron)walk_executor(ironing_board_2099)obs(ironing_board_2099, Determine the current location of the ironing board)
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: iron_2117, Robot is close to the ironing_board_2099. 
##############################
From agent.py
exp(iron_2117, ironing_board_2099)
Find iron_2117. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2117)obs(iron_2117, Determine the current location of the iron)walk_executor(ironing_board_2099)obs(ironing_board_2099, Determine the current location of the ironing board)
##############################
From agent.py
walk_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. 
##############################
From agent.py
obs(iron_2117, Determine the current location of the iron)
Get this information:  iron_2117 is inside bedroom_220. iron_2117 is close to ironing_board_2099. iron_2117 is close to character_219. iron_2117 is on ironing_board_2099. iron_2117 is CLEAN. iron_2117 is PLUGGED_OUT. iron_2117 is OFF.
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the ironing_board_2099. 
##############################
From agent.py
obs(ironing_board_2099, Determine the current location of the ironing board)
Get this information:  ironing_board_2099 is close to bedroom_220. ironing_board_2099 is close to iron_2117. ironing_board_2099 is close to character_219. iron_2117 is on ironing_board_2099. ironing_board_2099 is inside bedroom_220.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2114_around_dresser_377(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_shirt,dresser_instance)
        else:
            exp(clothes_shirt,dresser_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,dresser_instance]=True
        close[dresser_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_ironing_area(iron:item, ironing_board:item):
    body:
        achieve_once close_char(char, ironing_board)
        # Ensure the character is close to the ironing board
        achieve_once close_char(char, iron)
        # Ensure the character is close to the iron

behavior plug_in_iron(iron:item):
    body:
        achieve plugged(iron)
        # Ensure the iron is plugged in

behavior check_iron_is_working(iron:item):
    body:
        achieve is_on(iron)
        # Turn on the iron to verify its working

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron) and id[iron]==2117
        # Select iron with ID 2117

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board]==2099
        # Select ironing board with ID 2099

        prepare_ironing_area(iron, ironing_board)
        # Set up the area for ironing

        plug_in_iron(iron)
        # Plug in the iron

        check_iron_is_working(iron)
        # Ensure the iron is working

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior prepare_ironing_area(iron:item, ironing_board:item):
    body:
        achieve_once close_char(char, ironing_board)
        # Ensure the character is close to the ironing board
        achieve_once close_char(char, iron)
        # Ensure the character is close to the iron

behavior plug_in_iron(iron:item):
    body:
        achieve plugged(iron)
        # Ensure the iron is plugged in

behavior check_iron_is_working(iron:item):
    body:
        achieve is_on(iron)
        # Turn on the iron to verify its working

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron) and id[iron]==2117
        # Select iron with ID 2117

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board]==2099
        # Select ironing board with ID 2099

        prepare_ironing_area(iron, ironing_board)
        # Set up the area for ironing

        plug_in_iron(iron)
        # Plug in the iron

        check_iron_is_working(iron)
        # Ensure the iron is working

##############################
From agent.py-> find a plan in act()
walk_executor(iron_2117)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
walk_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. 
##############################
From agent.py
plugin_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. iron_2117 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. iron_2117 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to iron the shirt using the now plugged-in and on iron_2117.
##############################
From agent.py
Human Instruction: You need to iron the shirt using the now plugged-in and on iron_2117.

The actions you have taken:
Action 1: Walk to ironing_board_2099.
Action 2: look for iron_2117 around ironing_board_2099.
Action 3: Walk to iron_2117.
Action 4: Observe around iron_2117 with the question of Determine the current location of the iron.
Action 5: Walk to ironing_board_2099.
Action 6: Observe around ironing_board_2099 with the question of Determine the current location of the ironing board.
Action 7: Walk to iron_2117.
Action 8: Plug in iron_2117.
Action 9: Switch on iron_2117.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2114_around_basket_for_clothes_2040(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_shirt,basket_for_clothes_instance)
        else:
            exp(clothes_shirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve_once close_char(char, ironing_board)
        # Ensure the character is close to the ironing board
        achieve_once close_char(char, iron)
        # Ensure the character is close to the iron
        achieve_once on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve is_on(iron)
        # Ensure the iron remains on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to iron
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron that is plugged in and on

        iron_shirt(shirt, ironing_board, iron)
        # Iron the shirt on the ironing board using the iron
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve_once close_char(char, ironing_board)
        # Ensure the character is close to the ironing board
        achieve_once close_char(char, iron)
        # Ensure the character is close to the iron
        achieve_once on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve is_on(iron)
        # Ensure the iron remains on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to iron
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron that is plugged in and on

        iron_shirt(shirt, ironing_board, iron)
        # Iron the shirt on the ironing board using the iron
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)exp(clothes_shirt_2114, basket_for_clothes_2040)walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)walk_executor(ironing_board_2099)put_executor(clothes_shirt_2114, ironing_board_2099)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Robot find: clothes_pants_2113, clothes_shirt_2114, clothes_socks_2115, clothes_skirt_2116, Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. 
##############################
From agent.py
exp(clothes_shirt_2114, basket_for_clothes_2040)
Find clothes_shirt_2114. 
##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)walk_executor(ironing_board_2099)put_executor(clothes_shirt_2114, ironing_board_2099)
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the ironing_board_2099. 
##############################
From agent.py
walk_executor(clothes_shirt_2114)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_shirt_2114. 
##############################
From agent.py
grab_executor(clothes_shirt_2114)
Robot find: Robot is close to the basket_for_clothes_2040. Robot is close to the clothes_shirt_2114. Grabbing clothes_shirt_2114 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. 
##############################
From agent.py
put_executor(clothes_shirt_2114, ironing_board_2099)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. ironing_board_2099 is close clothes_shirt_2114. clothes_shirt_2114 is close ironing_board_2099. clothes_shirt_2114 is on ironing_board_2099. clothes_shirt_2114 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The iron needs to be used to press the shirt. After placing the clothes_shirt_2114 on the ironing_board_2099, you need to perform ironing actions such as moving the iron over the shirt to complete the task of ironing.
##############################
From agent.py
Human Instruction: The iron needs to be used to press the shirt. After placing the clothes_shirt_2114 on the ironing_board_2099, you need to perform ironing actions such as moving the iron over the shirt to complete the task of ironing.

The actions you have taken:
Action 1: Walk to ironing_board_2099.
Action 2: look for iron_2117 around ironing_board_2099.
Action 3: Walk to iron_2117.
Action 4: Observe around iron_2117 with the question of Determine the current location of the iron.
Action 5: Walk to ironing_board_2099.
Action 6: Observe around ironing_board_2099 with the question of Determine the current location of the ironing board.
Action 7: Walk to iron_2117.
Action 8: Plug in iron_2117.
Action 9: Switch on iron_2117.
Action 10: Walk to basket_for_clothes_2040.
Action 11: look for clothes_shirt_2114 around basket_for_clothes_2040.
Action 12: Walk to ironing_board_2099.
Action 13: Walk to clothes_shirt_2114.
Action 14: Grab clothes_shirt_2114.
Action 15: Walk to ironing_board_2099.
Action 16: Put clothes_shirt_2114 on ironing_board_2099.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve plugged(iron)
        # Iron is plugged in
        achieve is_on(iron)
        # Iron is switched on
        achieve close_char(char, ironing_board)
        # Ensure the character is close to the ironing board for effective ironing
        # Perform ironing actions here

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt item
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(shirt, ironing_board, iron)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_window_287(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind window_instance:item where:
            is_window(window_instance) and id[window_instance]==287
        achieve close_char(char,window_instance)
        if can_open(window_instance):
            achieve_once open(window_instance)
            exp(towel,window_instance)
        else:
            exp(towel,window_instance)
    eff:
        unknown[towel]=False
        close[towel,window_instance]=True
        close[window_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(shirt, ironing_board)
        # Ensure the shirt is placed on the ironing board
        achieve close_char(char, iron)
        # Ensure you are close to the iron to operate it
        achieve is_on(iron)
        # Keep the iron turned on during the process
        achieve close_char(char, ironing_board)
        # Ensure you are close to the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt with ID 2114

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2099
        # Select the ironing board with ID 2099

        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        # Select the iron with ID 2117
        
        iron_shirt(shirt, ironing_board, iron)
        # Iron the shirt placed on the ironing board using the specified iron
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(shirt, ironing_board)
        # Ensure the shirt is placed on the ironing board
        achieve close_char(char, iron)
        # Ensure you are close to the iron to operate it
        achieve is_on(iron)
        # Keep the iron turned on during the process
        achieve close_char(char, ironing_board)
        # Ensure you are close to the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt with ID 2114

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2099
        # Select the ironing board with ID 2099

        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        # Select the iron with ID 2117
        
        iron_shirt(shirt, ironing_board, iron)
        # Iron the shirt placed on the ironing board using the specified iron
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2117)walk_executor(ironing_board_2099)
##############################
From agent.py
walk_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. 
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the ironing_board_2099. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to move the iron over the shirt to perform the actual ironing action, as simply having the iron turned on and placing the shirt on the ironing board is insufficient to complete the task of ironing.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_368_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt]==2114
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt]==2114
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

##############################
From agent.py-> find a plan in act()
walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)walk_executor(bed_264)put_executor(clothes_shirt_2114, bed_264)
##############################
From agent.py
walk_executor(clothes_shirt_2114)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the clothes_shirt_2114. 
##############################
From agent.py
grab_executor(clothes_shirt_2114)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the clothes_shirt_2114. Grabbing clothes_shirt_2114 by right hand. 
##############################
From agent.py
walk_executor(bed_264)
Robot find: clothes_scarf_2079, pillow_239, clothes_dress_2075, pillow_240, clothes_jacket_2078, mat_237, drawing_238, Robot is close to the clothes_shirt_2114. Robot is close to the bed_264. 
##############################
From agent.py
put_executor(clothes_shirt_2114, bed_264)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the bed_264. bed_264 is close clothes_shirt_2114. clothes_shirt_2114 is close bed_264. clothes_shirt_2114 is on bed_264. clothes_shirt_2114 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to iron the shirt before placing it on the bed. Ensure that after placing clothes_shirt_2114 on ironing_board_2099, you perform ironing actions such as moving the iron over the shirt to complete the task of ironing.
##############################
From agent.py
Human Instruction: You need to iron the shirt before placing it on the bed. Ensure that after placing clothes_shirt_2114 on ironing_board_2099, you perform ironing actions such as moving the iron over the shirt to complete the task of ironing.

The actions you have taken:
Action 1: Walk to ironing_board_2099.
Action 2: look for iron_2117 around ironing_board_2099.
Action 3: Walk to iron_2117.
Action 4: Observe around iron_2117 with the question of Determine the current location of the iron.
Action 5: Walk to ironing_board_2099.
Action 6: Observe around ironing_board_2099 with the question of Determine the current location of the ironing board.
Action 7: Walk to iron_2117.
Action 8: Plug in iron_2117.
Action 9: Switch on iron_2117.
Action 10: Walk to basket_for_clothes_2040.
Action 11: look for clothes_shirt_2114 around basket_for_clothes_2040.
Action 12: Walk to ironing_board_2099.
Action 13: Walk to clothes_shirt_2114.
Action 14: Grab clothes_shirt_2114.
Action 15: Walk to ironing_board_2099.
Action 16: Put clothes_shirt_2114 on ironing_board_2099.
Action 17: Walk to iron_2117.
Action 18: Walk to ironing_board_2099.
Action 19: Walk to clothes_shirt_2114.
Action 20: Grab clothes_shirt_2114.
Action 21: Walk to bed_264.
Action 22: Put clothes_shirt_2114 on bed_264.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_jam_2059_around_fridge_140(food_jam:item):
    goal: not unknown(food_jam)
    body:
        assert is_food_jam(food_jam)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_jam,fridge_instance)
        else:
            exp(food_jam,fridge_instance)
    eff:
        unknown[food_jam]=False
        close[food_jam,fridge_instance]=True
        close[fridge_instance,food_jam]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt: item, bed: item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the ironed shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with ID 264

        place_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_370_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

behavior find_oil_2005_around_kitchen_counter_129(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(oil,kitchen_counter_instance)
        else:
            exp(oil,kitchen_counter_instance)
    eff:
        unknown[oil]=False
        close[oil,kitchen_counter_instance]=True
        close[kitchen_counter_instance,oil]=True
    

behavior find_cd_2100_around_wallshelf_187(cd:item):
    goal: not unknown(cd)
    body:
        assert is_cd(cd)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==187
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(cd,wallshelf_instance)
        else:
            exp(cd,wallshelf_instance)
    eff:
        unknown[cd]=False
        close[cd,wallshelf_instance]=True
        close[wallshelf_instance,cd]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_138_around_desk_261(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==261
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

behavior find_towel_2083_around_sink_133(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(towel,sink_instance)
        else:
            exp(towel,sink_instance)
    eff:
        unknown[towel]=False
        close[towel,sink_instance]=True
        close[sink_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the ironed shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with ID 264

        place_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt item

        bind bed: item where:
            is_bed(bed)
        # Select the bed item

        place_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_240_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_hat_2076_around_cupboard_131(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(clothes_hat,cupboard_instance)
        else:
            exp(clothes_hat,cupboard_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,cupboard_instance]=True
        close[cupboard_instance,clothes_hat]=True
    

behavior find_dvd_player_2085_around_tvstand_186(dvd_player:item):
    goal: not unknown(dvd_player)
    body:
        assert is_dvd_player(dvd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==186
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(dvd_player,tvstand_instance)
        else:
            exp(dvd_player,tvstand_instance)
    eff:
        unknown[dvd_player]=False
        close[dvd_player,tvstand_instance]=True
        close[tvstand_instance,dvd_player]=True
    

behavior find_food_jam_2059_around_fridge_140(food_jam:item):
    goal: not unknown(food_jam)
    body:
        assert is_food_jam(food_jam)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_jam,fridge_instance)
        else:
            exp(food_jam,fridge_instance)
    eff:
        unknown[food_jam]=False
        close[food_jam,fridge_instance]=True
        close[fridge_instance,food_jam]=True
    

behavior find_clothes_underwear_2022_around_washing_machine_2041(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_underwear,washing_machine_instance)
        else:
            exp(clothes_underwear,washing_machine_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,washing_machine_instance]=True
        close[washing_machine_instance,clothes_underwear]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)
        # Place the shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with ID 264

        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "3. place the ironed shirt on the bed." ?
Answer: Place the shirt on the bed.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the ironed shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with ID 264

        place_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt]==2114
        # Select the shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed]==264
        # Select the bed with ID 264

        place_shirt_on_bed(shirt, bed)
        # Place the shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_box_2023_around_orchid_117(box:item):
    goal: not unknown(box)
    body:
        assert is_box(box)
        bind orchid_instance:item where:
            is_orchid(orchid_instance) and id[orchid_instance]==117
        achieve close_char(char,orchid_instance)
        if can_open(orchid_instance):
            achieve_once open(orchid_instance)
            exp(box,orchid_instance)
        else:
            exp(box,orchid_instance)
    eff:
        unknown[box]=False
        close[box,orchid_instance]=True
        close[orchid_instance,box]=True
    

behavior find_chair_374_around_desk_375(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==375
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

behavior find_pillow_240_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt]==2114
        # Select the shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed]==264
        # Select the bed with ID 264

        place_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with ID 264

        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_hat_2076_around_cupboard_131(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(clothes_hat,cupboard_instance)
        else:
            exp(clothes_hat,cupboard_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,cupboard_instance]=True
        close[cupboard_instance,clothes_hat]=True
    

behavior find_pillow_195_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the specific shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the specific bed with ID 264

        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_368_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

behavior find_chair_263_around_nightstand_262(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==262
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(chair,nightstand_instance)
        else:
            exp(chair,nightstand_instance)
    eff:
        unknown[chair]=False
        close[chair,nightstand_instance]=True
        close[nightstand_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(clothes_shirt:item, bed:item):
    body:
        achieve_once on(clothes_shirt, bed)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt)
        # Select the clothes shirt item

        bind bed: item where:
            is_bed(bed)
        # Select the bed item

        place_shirt_on_bed(clothes_shirt, bed)
        # Place the clothes shirt on the bed

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(clothes_shirt:item, bed:item):
    body:
        achieve_once on(clothes_shirt, bed)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt] == 2114
        # Select the shirt with the ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with the ID 264

        place_ironed_shirt_on_bed(clothes_shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_240_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

behavior find_food_bacon_2044_around_fridge_140(food_bacon:item):
    goal: not unknown(food_bacon)
    body:
        assert is_food_bacon(food_bacon)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_bacon,fridge_instance)
        else:
            exp(food_bacon,fridge_instance)
    eff:
        unknown[food_bacon]=False
        close[food_bacon,fridge_instance]=True
        close[fridge_instance,food_bacon]=True
    

behavior find_clothes_hat_2076_around_cupboard_131(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(clothes_hat,cupboard_instance)
        else:
            exp(clothes_hat,cupboard_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,cupboard_instance]=True
        close[cupboard_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with ID 264

        place_shirt_on_bed(shirt, bed)
        # Place the shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with ID 264

        place_shirt_on_bed(shirt, bed)
        # Place the shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_hamburger_2057_around_fridge_140(food_hamburger:item):
    goal: not unknown(food_hamburger)
    body:
        assert is_food_hamburger(food_hamburger)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_hamburger,fridge_instance)
        else:
            exp(food_hamburger,fridge_instance)
    eff:
        unknown[food_hamburger]=False
        close[food_hamburger,fridge_instance]=True
        close[fridge_instance,food_hamburger]=True
    

behavior find_pillow_240_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt item

        bind bed: item where:
            is_bed(bed)
        # Select the bed in the room

        place_shirt_on_bed(shirt, bed)
        # Place the shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_370_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

behavior find_stereo_2007_around_tvstand_186(stereo:item):
    goal: not unknown(stereo)
    body:
        assert is_stereo(stereo)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==186
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(stereo,tvstand_instance)
        else:
            exp(stereo,tvstand_instance)
    eff:
        unknown[stereo]=False
        close[stereo,tvstand_instance]=True
        close[tvstand_instance,stereo]=True
    

behavior find_chair_263_around_nightstand_262(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==262
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(chair,nightstand_instance)
        else:
            exp(chair,nightstand_instance)
    eff:
        unknown[chair]=False
        close[chair,nightstand_instance]=True
        close[nightstand_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with ID 264

        place_shirt_on_bed(shirt, bed)
        # Place the shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_368_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt]==2114
        
        bind bed: item where:
            is_bed(bed) and id[bed]==264
        
        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "3. place the ironed shirt on the bed." ?
Answer: Place the ironed shirt on the bed.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(ironed_shirt:item, bed:item):
    body:
        achieve_once on(ironed_shirt, bed) 
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt) and id[ironed_shirt]==2114
        # Select the ironed shirt with ID 2114
        
        bind bed: item where:
            is_bed(bed) and id[bed]==264
        # Select the bed with ID 264
        
        place_ironed_shirt_on_bed(ironed_shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_240_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

behavior find_towel_2083_around_sink_133(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(towel,sink_instance)
        else:
            exp(towel,sink_instance)
    eff:
        unknown[towel]=False
        close[towel,sink_instance]=True
        close[sink_instance,towel]=True
    

behavior find_novel_2010_around_bookshelf_188(novel:item):
    goal: not unknown(novel)
    body:
        assert is_novel(novel)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==188
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(novel,bookshelf_instance)
        else:
            exp(novel,bookshelf_instance)
    eff:
        unknown[novel]=False
        close[novel,bookshelf_instance]=True
        close[bookshelf_instance,novel]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(clothes_shirt:item, bed:item):
    body:
        achieve_once on(clothes_shirt, bed)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt] == 2114
        # Select the shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with ID 264
        
        place_ironed_shirt_on_bed(clothes_shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2091_around_bookshelf_188(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==188
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select an ironed shirt item

        bind bed: item where:
            is_bed(bed)
        # Select bed item

        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_368_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt that needs to be placed on the bed

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt] == 2114
        # Select the specific shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with ID 264

        place_ironed_shirt_on_bed(clothes_shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt]==2114
        # Select the ironed shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed]==264
        # Select the bed with ID 264

        place_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pajamas_2039_around_cupboard_131(pajamas:item):
    goal: not unknown(pajamas)
    body:
        assert is_pajamas(pajamas)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(pajamas,cupboard_instance)
        else:
            exp(pajamas,cupboard_instance)
    eff:
        unknown[pajamas]=False
        close[pajamas,cupboard_instance]=True
        close[cupboard_instance,pajamas]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt] == 2114
        # Select clothes_shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select bed with ID 264

        achieve_once on(clothes_shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_sink_133(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(towel,sink_instance)
        else:
            exp(towel,sink_instance)
    eff:
        unknown[towel]=False
        close[towel,sink_instance]=True
        close[sink_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(clothes_shirt:item, bed:item):
    body:
        achieve_once on(clothes_shirt, bed)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt]==2114
        # Select the ironed shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with ID 264

        place_ironed_shirt_on_bed(clothes_shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_240_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the ironed shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with ID 264

        place_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cat_2082_around_couch_192(cat:item):
    goal: not unknown(cat)
    body:
        assert is_cat(cat)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==192
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(cat,couch_instance)
        else:
            exp(cat,couch_instance)
    eff:
        unknown[cat]=False
        close[cat,couch_instance]=True
        close[couch_instance,cat]=True
    

behavior find_pillow_240_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

behavior find_towel_2083_around_sink_133(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(towel,sink_instance)
        else:
            exp(towel,sink_instance)
    eff:
        unknown[towel]=False
        close[towel,sink_instance]=True
        close[sink_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with ID 264

        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_370_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and not dirty(shirt) and id[shirt]==2114
        # Select the specific ironed shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed]==264
        # Select the bed with ID 264

        place_ironed_shirt_on_bed(shirt, bed)
        # Ensure the shirt is placed on the bed


#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_toilet_paper_2118_around_bathroom_cabinet_305(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(toilet_paper,bathroom_cabinet_instance)
        else:
            exp(toilet_paper,bathroom_cabinet_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,toilet_paper]=True
    

behavior find_mat_292_around_mousepad_381(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind mousepad_instance:item where:
            is_mousepad(mousepad_instance) and id[mousepad_instance]==381
        achieve close_char(char,mousepad_instance)
        if can_open(mousepad_instance):
            achieve_once open(mousepad_instance)
            exp(mat,mousepad_instance)
        else:
            exp(mat,mousepad_instance)
    eff:
        unknown[mat]=False
        close[mat,mousepad_instance]=True
        close[mousepad_instance,mat]=True
    

behavior find_pillow_368_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "3. place the ironed shirt on the bed." ?
Answer: Place the ironed shirt on the bed.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt item

        bind bed: item where:
            is_bed(bed)
        # Select the bed item

        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_gloves_2077_around_cupboard_131(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(clothes_gloves,cupboard_instance)
        else:
            exp(clothes_gloves,cupboard_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,cupboard_instance]=True
        close[cupboard_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation

behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed and clean shirt

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_sink_133(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(towel,sink_instance)
        else:
            exp(towel,sink_instance)
    eff:
        unknown[towel]=False
        close[towel,sink_instance]=True
        close[sink_instance,towel]=True
    

#exp_behavior_end

#goal_representation

behavior place_ironed_shirt_on_bed(ironed_shirt:item, bed:item):
    body:
        achieve_once on(ironed_shirt, bed)

behavior __goal__():
    body:
        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt) and clean(ironed_shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_shirt_on_bed(ironed_shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_370_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

behavior find_towel_2083_around_bathroom_cabinet_305(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel,bathroom_cabinet_instance)
        else:
            exp(towel,bathroom_cabinet_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt with ID 2114

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation

behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with ID 264

        place_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed
#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior place_ironed_shirt_on_bed(ironed_shirt:item, bed:item):
    body:
        achieve_once on(ironed_shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt)
        # Select the ironed shirt
        
        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_ironed_shirt_on_bed(ironed_shirt, bed)
        # Place the ironed shirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_240_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

behavior find_shoes_2001_around_bed_376(shoes:item):
    goal: not unknown(shoes)
    body:
        assert is_shoes(shoes)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(shoes,bed_instance)
        else:
            exp(shoes,bed_instance)
    eff:
        unknown[shoes]=False
        close[shoes,bed_instance]=True
        close[bed_instance,shoes]=True
    

#exp_behavior_end

#goal_representation

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt with ID 2114 that has been ironed
        
        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with ID 264

        place_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_368_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

behavior find_food_orange_2008_around_fridge_140(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_orange,fridge_instance)
        else:
            exp(food_orange,fridge_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,fridge_instance]=True
        close[fridge_instance,food_orange]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt item

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with ID 264

        place_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_sink_133(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(towel,sink_instance)
        else:
            exp(towel,sink_instance)
    eff:
        unknown[towel]=False
        close[towel,sink_instance]=True
        close[sink_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_374_around_nightstand_373(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==373
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(chair,nightstand_instance)
        else:
            exp(chair,nightstand_instance)
    eff:
        unknown[chair]=False
        close[chair,nightstand_instance]=True
        close[nightstand_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(clothes_shirt:item, bed:item):
    body:
        achieve_once on(clothes_shirt, bed)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt)
        # Select the ironed shirt
        
        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_shirt_on_bed(clothes_shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_jam_2059_around_fridge_140(food_jam:item):
    goal: not unknown(food_jam)
    body:
        assert is_food_jam(food_jam)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_jam,fridge_instance)
        else:
            exp(food_jam,fridge_instance)
    eff:
        unknown[food_jam]=False
        close[food_jam,fridge_instance]=True
        close[fridge_instance,food_jam]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_239_around_pillow_239(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==239
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_shoes_2001_around_wallshelf_187(shoes:item):
    goal: not unknown(shoes)
    body:
        assert is_shoes(shoes)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==187
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(shoes,wallshelf_instance)
        else:
            exp(shoes,wallshelf_instance)
    eff:
        unknown[shoes]=False
        close[shoes,wallshelf_instance]=True
        close[wallshelf_instance,shoes]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select a bed to place the shirt on

        place_ironed_shirt_on_bed(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt with ID 2114
        
        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with ID 264

        achieve_once on(shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior place_ironed_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with ID 264

        place_ironed_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_shirt_on_bed(shirt, bed)
        # Place the shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_368_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(ironed_shirt:item, bed:item):
    body:
        achieve_once on(ironed_shirt, bed)

behavior __goal__():
    body:
        bind ironed_shirt: item where:
            is_clothes_shirt(ironed_shirt)
        # Select the ironed shirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_ironed_shirt_on_bed(ironed_shirt, bed)
        # Place the ironed shirt on the bed

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
Task Summary:
Task Goal:
Iron a shirt, and put it in on the bed.
Action History:
['walk_executor(ironing_board_2099)', 'walk_executor(iron_2117)', 'walk_executor(ironing_board_2099)', 'walk_executor(iron_2117)', 'plugin_executor(iron_2117)', 'switchon_executor(iron_2117)', 'walk_executor(basket_for_clothes_2040)', 'walk_executor(ironing_board_2099)', 'walk_executor(clothes_shirt_2114)', 'grab_executor(clothes_shirt_2114)', 'walk_executor(ironing_board_2099)', 'put_executor(clothes_shirt_2114, ironing_board_2099)', 'walk_executor(iron_2117)', 'walk_executor(ironing_board_2099)', 'walk_executor(clothes_shirt_2114)', 'grab_executor(clothes_shirt_2114)', 'walk_executor(bed_264)', 'put_executor(clothes_shirt_2114, bed_264)']
Time info:
Time consume: 547 seconds
Exp_helper query times: 0
Guidance query times: 3
library scale: 56
goal generate times: 54
goal correct times: 0
action_num: 18

Task complete rate:
Keystate: k1 - Requires: 6 steps
Keystate: k2 - Requires: 0 steps
Action Completion Rate: 0.0
Scene_id: 2
##############################
