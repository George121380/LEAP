From agent.py
Reset goals: The sub-goals are: 
['1. Identify each room in the household.', '2. Check if each room has at least one light on; if not, turn on a light in that room.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2070_around_washing_machine_2007(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(vacuum_cleaner,washing_machine_instance)
        else:
            exp(vacuum_cleaner,washing_machine_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,washing_machine_instance]=True
        close[washing_machine_instance,vacuum_cleaner]=True
    

behavior find_dvd_player_2061_around_tvstand_353(dvd_player:item):
    goal: not unknown(dvd_player)
    body:
        assert is_dvd_player(dvd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==353
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(dvd_player,tvstand_instance)
        else:
            exp(dvd_player,tvstand_instance)
    eff:
        unknown[dvd_player]=False
        close[dvd_player,tvstand_instance]=True
        close[tvstand_instance,dvd_player]=True
    

behavior find_wall_clock_249_around_walllamp_351(wall_clock:item):
    goal: not unknown(wall_clock)
    body:
        assert is_wall_clock(wall_clock)
        bind walllamp_instance:item where:
            is_walllamp(walllamp_instance) and id[walllamp_instance]==351
        achieve close_char(char,walllamp_instance)
        if can_open(walllamp_instance):
            achieve_once open(walllamp_instance)
            exp(wall_clock,walllamp_instance)
        else:
            exp(wall_clock,walllamp_instance)
    eff:
        unknown[wall_clock]=False
        close[wall_clock,walllamp_instance]=True
        close[walllamp_instance,wall_clock]=True
    

#exp_behavior_end

#goal_representation

behavior identify_room(room:item):
    body:
        observe(room, "Check if this is a room")

behavior __goal__():
    body:
        foreach room: item:
            if not visited(room):
                identify_room(room)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2070_around_basket_for_clothes_2006(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(vacuum_cleaner,basket_for_clothes_instance)
        else:
            exp(vacuum_cleaner,basket_for_clothes_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,vacuum_cleaner]=True
    

behavior find_chair_103_around_desk_357(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==357
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

#exp_behavior_end

#goal_representation
behavior identify_room(room:item):
    body:
        observe(room, "Identify if this is a room")

behavior __goal__():
    body:
        foreach room: item:
            identify_room(room)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_356_around_table_355(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==355
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(chair,table_instance)
        else:
            exp(chair,table_instance)
    eff:
        unknown[chair]=False
        close[chair,table_instance]=True
        close[table_instance,chair]=True
    

behavior find_wall_clock_249_around_wallshelf_35(wall_clock:item):
    goal: not unknown(wall_clock)
    body:
        assert is_wall_clock(wall_clock)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==35
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(wall_clock,wallshelf_instance)
        else:
            exp(wall_clock,wallshelf_instance)
    eff:
        unknown[wall_clock]=False
        close[wall_clock,wallshelf_instance]=True
        close[wallshelf_instance,wall_clock]=True
    

behavior find_towel_rack_33_around_shower_36(towel_rack:item):
    goal: not unknown(towel_rack)
    body:
        assert is_towel_rack(towel_rack)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==36
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(towel_rack,shower_instance)
        else:
            exp(towel_rack,shower_instance)
    eff:
        unknown[towel_rack]=False
        close[towel_rack,shower_instance]=True
        close[shower_instance,towel_rack]=True
    

#exp_behavior_end

#goal_representation
 
behavior identify_rooms(room:item):
    body:
        observe(room, "Check if this is a room")

behavior __goal__():
    body:
        foreach room: item:
            identify_rooms(room)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2070_around_basket_for_clothes_2006(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(vacuum_cleaner,basket_for_clothes_instance)
        else:
            exp(vacuum_cleaner,basket_for_clothes_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,vacuum_cleaner]=True
    

behavior find_chair_2004_around_desk_357(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==357
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

behavior find_wall_clock_249_around_wallshelf_35(wall_clock:item):
    goal: not unknown(wall_clock)
    body:
        assert is_wall_clock(wall_clock)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==35
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(wall_clock,wallshelf_instance)
        else:
            exp(wall_clock,wallshelf_instance)
    eff:
        unknown[wall_clock]=False
        close[wall_clock,wallshelf_instance]=True
        close[wallshelf_instance,wall_clock]=True
    

#exp_behavior_end

#goal_representation

behavior identify_room(room:item):
    body:
        observe(room, "Determine the room")

behavior __goal__():
    body:
        foreach room: item:
            identify_room(room)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2070_around_washing_machine_2007(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(vacuum_cleaner,washing_machine_instance)
        else:
            exp(vacuum_cleaner,washing_machine_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,washing_machine_instance]=True
        close[washing_machine_instance,vacuum_cleaner]=True
    

behavior find_chair_356_around_table_355(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==355
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(chair,table_instance)
        else:
            exp(chair,table_instance)
    eff:
        unknown[chair]=False
        close[chair,table_instance]=True
        close[table_instance,chair]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior identify_room(room:item):
    body:
        observe(room, "Determine the current location and if this is a room")

behavior __goal__():
    body:
        foreach room: item:
            if not visited(room):
                identify_room(room)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_106_around_desk_357(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==357
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

behavior find_mat_401_around_bathtub_30(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind bathtub_instance:item where:
            is_bathtub(bathtub_instance) and id[bathtub_instance]==30
        achieve close_char(char,bathtub_instance)
        if can_open(bathtub_instance):
            achieve_once open(bathtub_instance)
            exp(mat,bathtub_instance)
        else:
            exp(mat,bathtub_instance)
    eff:
        unknown[mat]=False
        close[mat,bathtub_instance]=True
        close[bathtub_instance,mat]=True
    

behavior find_towel_rack_33_around_shower_36(towel_rack:item):
    goal: not unknown(towel_rack)
    body:
        assert is_towel_rack(towel_rack)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==36
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(towel_rack,shower_instance)
        else:
            exp(towel_rack,shower_instance)
    eff:
        unknown[towel_rack]=False
        close[towel_rack,shower_instance]=True
        close[shower_instance,towel_rack]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_toilet_paper_2090_around_toilet_37(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind toilet_instance:item where:
            is_toilet(toilet_instance) and id[toilet_instance]==37
        achieve close_char(char,toilet_instance)
        if can_open(toilet_instance):
            achieve_once open(toilet_instance)
            exp(toilet_paper,toilet_instance)
        else:
            exp(toilet_paper,toilet_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,toilet_instance]=True
        close[toilet_instance,toilet_paper]=True
    

#exp_behavior_end

#goal_representation
 
behavior identify_room(room:item):
    body:
        observe(room, "Determine if the item is a room")

behavior __goal__():
    body:
        foreach room: item:
            identify_room(room)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "1. identify each room in the household." ?
Answer: Focus on ensuring there is at least one light on in every room without specifically identifying each room.
Re-decompose: True

##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Check if there is at least one light on in each room.', '2. Turn on a light in rooms where no light is on.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_wall_clock_249_around_television_248(wall_clock:item):
    goal: not unknown(wall_clock)
    body:
        assert is_wall_clock(wall_clock)
        bind television_instance:item where:
            is_television(television_instance) and id[television_instance]==248
        achieve close_char(char,television_instance)
        if can_open(television_instance):
            achieve_once open(television_instance)
            exp(wall_clock,television_instance)
        else:
            exp(wall_clock,television_instance)
    eff:
        unknown[wall_clock]=False
        close[wall_clock,television_instance]=True
        close[television_instance,wall_clock]=True
    

#exp_behavior_end

#goal_representation
 
behavior ensure_light_on(light:item):
    body:
        if has_switch(light):
            achieve is_on(light)

behavior handle_room_lights(room:item):
    body:
        foreach light: item:
            if is_light(light) and inside(light, room):
                ensure_light_on(light)

behavior visit_all_rooms(room:item):
    body:
        if not visited(room):
            observe(room, "Check if this is a room")

behavior __goal__():
    body:
        foreach room: item:
            if is_bathroom(room) or is_dining_room(room) or is_bedroom(room) or is_home_office(room):
                visit_all_rooms(room)
                handle_room_lights(room)

#goal_representation_end

##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_1)obs(bathroom_1, Check if this is a room)walk_executor(light_64)switchon_executor(light_64)walk_executor(bedroom_67)obs(bedroom_67, Check if this is a room)walk_executor(light_169)switchon_executor(light_169)walk_executor(dining_room_201)obs(dining_room_201, Check if this is a room)walk_executor(light_245)switchon_executor(light_245)walk_executor(home_office_319)obs(home_office_319, Check if this is a room)walk_executor(light_411)switchon_executor(light_411)
##############################
From agent.py
walk_executor(bathroom_1)

##############################
From agent.py
obs(bathroom_1, Check if this is a room)
Get this information:  wall_11 is inside bathroom_1. towel_2059 is inside bathroom_1. mat_22 is inside bathroom_1. toilet_paper_2090 is inside bathroom_1. bathroom_counter_41 is inside bathroom_1. floor_3 is inside bathroom_1. wall_14 is inside bathroom_1. towel_rack_33 is inside bathroom_1. door_44 is inside bathroom_1. bathroom_1 is close to ironing_board_2074. window_63 is inside bathroom_1. curtain_25 is inside bathroom_1. floor_6 is inside bathroom_1. detergent_2084 is inside bathroom_1. clothes_pants_2085 is inside bathroom_1. shower_36 is inside bathroom_1. walllamp_28 is inside bathroom_1. towel_2057 is inside bathroom_1. ceiling_17 is inside bathroom_1. clothes_socks_2087 is inside bathroom_1. wall_9 is inside bathroom_1. curtain_39 is inside bathroom_1. ceiling_20 is inside bathroom_1. towel_rack_31 is inside bathroom_1. curtain_23 is inside bathroom_1. wall_12 is inside bathroom_1. sink_42 is inside bathroom_1. floor_4 is inside bathroom_1. basket_for_clothes_2006 is inside bathroom_1. ironing_board_2074 is inside bathroom_1. light_64 is inside bathroom_1. ceilinglamp_26 is inside bathroom_1. wall_15 is inside bathroom_1. doorjamb_45 is inside bathroom_1. towel_rack_34 is inside bathroom_1. floor_7 is inside bathroom_1. ceiling_18 is inside bathroom_1. toilet_37 is inside bathroom_1. towel_2058 is inside bathroom_1. wall_10 is inside bathroom_1. clothes_skirt_2088 is inside bathroom_1. iron_2089 is inside bathroom_1. bathroom_cabinet_40 is inside bathroom_1. walllamp_29 is inside bathroom_1. floor_2 is inside bathroom_1. ceiling_21 is inside bathroom_1. soap_2053 is inside bathroom_1. faucet_43 is inside bathroom_1. towel_rack_32 is inside bathroom_1. floor_5 is inside bathroom_1. cleaning_solution_2073 is inside bathroom_1. curtain_24 is inside bathroom_1. wallshelf_35 is inside bathroom_1. wall_13 is inside bathroom_1. door_44 is between bathroom_1. ceiling_16 is inside bathroom_1. towel_2056 is inside bathroom_1. washing_machine_2007 is inside bathroom_1. clothes_shirt_2086 is inside bathroom_1. character_65 is inside bathroom_1. walllamp_27 is inside bathroom_1. bathtub_30 is inside bathroom_1. floor_8 is inside bathroom_1. ceiling_19 is inside bathroom_1. shower_38 is inside bathroom_1. bathroom_1 is CLEAN.
##############################
From agent.py
walk_executor(light_64)
Robot find: towel_rack_32, mat_22, Robot is close to the light_64. 
##############################
From agent.py
switchon_executor(light_64)
Robot find: Robot is close to the light_64. light_64 is turned on. 
##############################
From agent.py
walk_executor(bedroom_67)

##############################
From agent.py
obs(bedroom_67, Check if this is a room)
Get this information:  pillow_183 is inside bedroom_67. floor_77 is inside bedroom_67. ceilinglamp_96 is inside bedroom_67. closetdrawer_118 is inside bedroom_67. table_107 is inside bedroom_67. drawing_175 is inside bedroom_67. wall_79 is inside bedroom_67. ceiling_90 is inside bedroom_67. closetdrawer_120 is inside bedroom_67. hanger_109 is inside bedroom_67. closetdrawer_148 is inside bedroom_67. wall_82 is inside bedroom_67. floor_71 is inside bedroom_67. hanger_110 is inside bedroom_67. mousepad_167 is inside bedroom_67. orchid_178 is inside bedroom_67. floor_72 is inside bedroom_67. hanger_140 is inside bedroom_67. ceiling_91 is inside bedroom_67. nightstand_102 is inside bedroom_67. computer_170 is inside bedroom_67. hanger_132 is inside bedroom_67. wall_85 is inside bedroom_67. floor_74 is inside bedroom_67. clothes_gloves_2046 is inside bedroom_67. curtain_181 is inside bedroom_67. hanger_115 is inside bedroom_67. desk_104 is inside bedroom_67. closetdrawer_143 is inside bedroom_67. hanger_134 is inside bedroom_67. mat_173 is inside bedroom_67. hanger_124 is inside bedroom_67. window_86 is inside bedroom_67. tablelamp_97 is inside bedroom_67. clothes_underwear_2049 is inside bedroom_67. closetdrawer_154 is inside bedroom_67. doorjamb_165 is inside bedroom_67. closetdrawer_116 is inside bedroom_67. wall_80 is inside bedroom_67. floor_69 is inside bedroom_67. trashcan_99 is inside bedroom_67. ceiling_88 is inside bedroom_67. keyboard_168 is inside bedroom_67. closetdrawer_119 is inside bedroom_67. drawing_176 is inside bedroom_67. wall_81 is inside bedroom_67. clothes_dress_2044 is inside bedroom_67. closetdrawer_160 is inside bedroom_67. hanger_138 is inside bedroom_67. hanger_111 is inside bedroom_67. curtain_179 is inside bedroom_67. closetdrawer_121 is inside bedroom_67. ceiling_94 is inside bedroom_67. wall_83 is inside bedroom_67. closetdrawer_122 is inside bedroom_67. hanger_113 is inside bedroom_67. hanger_141 is inside bedroom_67. floor_75 is inside bedroom_67. chair_103 is inside bedroom_67. hanger_114 is inside bedroom_67. cpuscreen_171 is inside bedroom_67. pillow_182 is inside bedroom_67. floor_76 is inside bedroom_67. chair_106 is inside bedroom_67. bed_105 is inside bedroom_67. ceiling_89 is inside bedroom_67. wall_78 is inside bedroom_67. closetdrawer_146 is inside bedroom_67. photoframe_185 is inside bedroom_67. drawing_174 is inside bedroom_67. dresser_108 is inside bedroom_67. hanger_136 is inside bedroom_67. floor_70 is inside bedroom_67. tablelamp_98 is inside bedroom_67. mouse_166 is inside bedroom_67. hanger_128 is inside bedroom_67. closetdrawer_117 is inside bedroom_67. bookshelf_101 is inside bedroom_67. closetdrawer_158 is inside bedroom_67. chair_2004 is inside bedroom_67. nightstand_100 is inside bedroom_67. floor_73 is inside bedroom_67. hanger_130 is inside bedroom_67. light_169 is inside bedroom_67. door_44 is between bedroom_67. ceiling_92 is inside bedroom_67. ceiling_93 is inside bedroom_67. clothes_hat_2045 is inside bedroom_67. closetdrawer_150 is inside bedroom_67. hanger_112 is inside bedroom_67. dresser_123 is inside bedroom_67. curtain_180 is inside bedroom_67. character_65 is inside bedroom_67. clothes_scarf_2048 is inside bedroom_67. hanger_142 is inside bedroom_67. ceiling_95 is inside bedroom_67. wall_84 is inside bedroom_67. floor_68 is inside bedroom_67. door_222 is between bedroom_67. ceiling_87 is inside bedroom_67. hanger_126 is inside bedroom_67. bedroom_67 is CLEAN.
##############################
From agent.py
walk_executor(light_169)
Robot find: keyboard_168, drawing_175, chair_103, drawing_174, Robot is close to the light_169. 
##############################
From agent.py
switchon_executor(light_169)
Robot find: Robot is close to the light_169. light_169 is turned on. 
##############################
From agent.py
walk_executor(dining_room_201)

##############################
From agent.py
obs(dining_room_201, Check if this is a room)
Get this information:  food_turkey_2040 is inside dining_room_201. wall_213 is inside dining_room_201. ceilinglamp_224 is inside dining_room_201. fork_2081 is inside dining_room_201. food_fish_2021 is inside dining_room_201. milk_2043 is inside dining_room_201. food_onion_2032 is inside dining_room_201. floor_205 is inside dining_room_201. wallshelf_235 is inside dining_room_201. cutting_board_2051 is inside dining_room_201. toaster_292 is inside dining_room_201. food_cake_2013 is inside dining_room_201. ceiling_216 is inside dining_room_201. bench_227 is inside dining_room_201. oven_295 is inside dining_room_201. powersocket_246 is inside dining_room_201. food_hamburger_2024 is inside dining_room_201. food_potato_2035 is inside dining_room_201. floor_208 is inside dining_room_201. soap_2054 is inside dining_room_201. stove_2065 is inside dining_room_201. food_cheese_2016 is inside dining_room_201. food_kiwi_2027 is inside dining_room_201. napkin_2005 is inside dining_room_201. ceiling_219 is inside dining_room_201. food_steak_2008 is inside dining_room_201. wall_clock_249 is inside dining_room_201. drawing_238 is inside dining_room_201. door_222 is inside dining_room_201. wall_211 is inside dining_room_201. drawing_241 is inside dining_room_201. kitchen_counter_230 is inside dining_room_201. food_donut_2019 is inside dining_room_201. floor_203 is inside dining_room_201. doorjamb_346 is between dining_room_201. food_snack_2038 is inside dining_room_201. cd_player_2060 is inside dining_room_201. coffe_maker_290 is inside dining_room_201. food_banana_2011 is inside dining_room_201. food_food_2022 is inside dining_room_201. coffee_filter_2000 is inside dining_room_201. oil_2079 is inside dining_room_201. wall_214 is inside dining_room_201. food_oatmeal_2030 is inside dining_room_201. food_vegetable_2041 is inside dining_room_201. pot_2069 is inside dining_room_201. drawing_2003 is inside dining_room_201. orchid_244 is inside dining_room_201. bookshelf_233 is inside dining_room_201. floor_206 is inside dining_room_201. tvstand_225 is inside dining_room_201. mat_236 is inside dining_room_201. food_carrot_2014 is inside dining_room_201. bowl_2071 is inside dining_room_201. food_peanut_butter_2033 is inside dining_room_201. photoframe_285 is inside dining_room_201. ceiling_217 is inside dining_room_201. plate_1000 is inside dining_room_201. cup_2063 is inside dining_room_201. food_rice_2036 is inside dining_room_201. food_ice_cream_2025 is inside dining_room_201. cup_2064 is inside dining_room_201. drawing_239 is inside dining_room_201. bench_228 is inside dining_room_201. fryingpan_2083 is inside dining_room_201. tray_296 is inside dining_room_201. food_chicken_2017 is inside dining_room_201. phone_247 is inside dining_room_201. ceiling_220 is inside dining_room_201. wall_209 is inside dining_room_201. stovefan_288 is inside dining_room_201. food_lemon_2028 is inside dining_room_201. food_sugar_2039 is inside dining_room_201. sink_231 is inside dining_room_201. food_apple_2009 is inside dining_room_201. food_egg_2020 is inside dining_room_201. ceilinglamp_223 is inside dining_room_201. wall_212 is inside dining_room_201. sauce_2078 is inside dining_room_201. drawing_242 is inside dining_room_201. food_orange_2031 is inside dining_room_201. floor_204 is inside dining_room_201. wall_215 is inside dining_room_201. knife_2050 is inside dining_room_201. bowl_2072 is inside dining_room_201. wallshelf_234 is inside dining_room_201. food_bread_2012 is inside dining_room_201. food_fruit_2023 is inside dining_room_201. fork_2080 is inside dining_room_201. dry_pasta_2042 is inside dining_room_201. food_cereal_2015 is inside dining_room_201. light_245 is inside dining_room_201. floor_207 is inside dining_room_201. ceiling_218 is inside dining_room_201. food_pizza_2034 is inside dining_room_201. dishwasher_1001 is inside dining_room_201. table_226 is inside dining_room_201. television_248 is inside dining_room_201. mat_237 is inside dining_room_201. wall_210 is inside dining_room_201. cupboard_229 is inside dining_room_201. food_dessert_2018 is inside dining_room_201. cd_2075 is inside dining_room_201. character_65 is inside dining_room_201. food_jam_2026 is inside dining_room_201. food_salt_2037 is inside dining_room_201. fridge_289 is inside dining_room_201. food_bacon_2010 is inside dining_room_201. drawing_240 is inside dining_room_201. microwave_297 is inside dining_room_201. floor_202 is inside dining_room_201. door_222 is between dining_room_201. food_noodles_2029 is inside dining_room_201. drawing_243 is inside dining_room_201. faucet_232 is inside dining_room_201. ceiling_221 is inside dining_room_201. dining_room_201 is CLEAN.
##############################
From agent.py
walk_executor(light_245)
Robot find: drawing_240, drawing_238, wall_clock_249, drawing_241, drawing_242, drawing_243, drawing_239, phone_247, Robot is close to the light_245. 
##############################
From agent.py
switchon_executor(light_245)
Robot find: Robot is close to the light_245. light_245 is turned on. 
##############################
From agent.py
walk_executor(home_office_319)

##############################
From agent.py
obs(home_office_319, Check if this is a room)
Get this information:  curtain_407 is inside home_office_319. hairbrush_2002 is inside home_office_319. ceilinglamp_349 is inside home_office_319. vacuum_cleaner_2070 is inside home_office_319. ceiling_341 is inside home_office_319. couch_352 is inside home_office_319. wall_330 is inside home_office_319. headset_2062 is inside home_office_319. curtain_409 is inside home_office_319. filing_cabinet_399 is inside home_office_319. television_410 is inside home_office_319. floor_322 is inside home_office_319. wall_333 is inside home_office_319. hanger_361 is inside home_office_319. drawing_402 is inside home_office_319. ceiling_344 is inside home_office_319. hanger_363 is inside home_office_319. hanger_374 is inside home_office_319. floor_325 is inside home_office_319. wall_336 is inside home_office_319. drawing_404 is inside home_office_319. table_355 is inside home_office_319. closetdrawer_394 is inside home_office_319. chair_356 is inside home_office_319. mouse_413 is inside home_office_319. headset_2076 is inside home_office_319. doorjamb_346 is between home_office_319. floor_328 is inside home_office_319. ceiling_339 is inside home_office_319. cpuscreen_416 is inside home_office_319. hanger_369 is inside home_office_319. doorjamb_347 is inside home_office_319. dresser_358 is inside home_office_319. wall_331 is inside home_office_319. floor_320 is inside home_office_319. closetdrawer_388 is inside home_office_319. walllamp_350 is inside home_office_319. curtain_408 is inside home_office_319. remote_control_2052 is inside home_office_319. spectacles_2082 is inside home_office_319. floor_323 is inside home_office_319. closetdrawer_380 is inside home_office_319. tvstand_353 is inside home_office_319. ceiling_342 is inside home_office_319. hanger_372 is inside home_office_319. light_411 is inside home_office_319. ceiling_345 is inside home_office_319. wall_334 is inside home_office_319. cat_2055 is inside home_office_319. wall_335 is inside home_office_319. closetdrawer_392 is inside home_office_319. clothes_jacket_2047 is inside home_office_319. drawing_403 is inside home_office_319. floor_326 is inside home_office_319. book_2066 is inside home_office_319. phone_2077 is inside home_office_319. hanger_375 is inside home_office_319. pencil_2001 is inside home_office_319. window_348 is inside home_office_319. ceiling_337 is inside home_office_319. pillow_405 is inside home_office_319. hanger_367 is inside home_office_319. pillow_406 is inside home_office_319. wall_329 is inside home_office_319. ceiling_340 is inside home_office_319. hanger_359 is inside home_office_319. computer_417 is inside home_office_319. dvd_player_2061 is inside home_office_319. home_office_319 is close to coffee_table_2068. floor_321 is inside home_office_319. wall_332 is inside home_office_319. drawing_400 is inside home_office_319. walllamp_351 is inside home_office_319. photoframe_430 is inside home_office_319. floor_324 is inside home_office_319. ceiling_343 is inside home_office_319. closetdrawer_382 is inside home_office_319. mat_401 is inside home_office_319. powersocket_412 is inside home_office_319. bookshelf_354 is inside home_office_319. hanger_365 is inside home_office_319. floor_327 is inside home_office_319. character_65 is inside home_office_319. closetdrawer_384 is inside home_office_319. doorjamb_346 is inside home_office_319. desk_357 is inside home_office_319. book_2067 is inside home_office_319. mousepad_414 is inside home_office_319. hanger_376 is inside home_office_319. coffee_table_2068 is inside home_office_319. keyboard_415 is inside home_office_319. ceiling_338 is inside home_office_319. closetdrawer_377 is inside home_office_319. home_office_319 is CLEAN.
##############################
From agent.py
walk_executor(light_411)
Robot find: drawing_404, drawing_402, Robot is close to the light_411. 
##############################
From agent.py
switchon_executor(light_411)
Robot find: Robot is close to the light_411. light_411 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior ensure_light_on(light:item):
    body:
        if has_switch(light):
            achieve is_on(light)

behavior handle_room_lights(room:item):
    body:
        foreach light: item:
            if is_light(light) and inside(light, room):
                ensure_light_on(light)

behavior visit_all_rooms(room:item):
    body:
        if not visited(room):
            observe(room, "Check if this is a room")

behavior __goal__():
    body:
        foreach room: item:
            if is_bathroom(room) or is_dining_room(room) or is_bedroom(room) or is_home_office(room):
                visit_all_rooms(room)
                handle_room_lights(room)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_light(light:item):
    body:
        if has_switch(light):
            achieve is_on(light)

behavior handle_room_lights(room:item):
    body:
        foreach light: item:
            if is_light(light) and inside(light, room):
                turn_on_light(light)

behavior visit_all_rooms(room:item):
    body:
        if not visited(room):
            observe(room, "Check if this is a room")

behavior __goal__():
    body:
        foreach room: item:
            if is_bathroom(room) or is_dining_room(room) or is_bedroom(room) or is_home_office(room):
                visit_all_rooms(room)
                handle_room_lights(room)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2070_around_basket_for_clothes_2006(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(vacuum_cleaner,basket_for_clothes_instance)
        else:
            exp(vacuum_cleaner,basket_for_clothes_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,vacuum_cleaner]=True
    

#exp_behavior_end

#goal_representation
 
behavior ensure_light_on(light:item):
    body:
        if has_switch(light):
            achieve is_on(light)

behavior handle_room_lights(room:item):
    body:
        foreach light: item:
            if is_light(light) and inside(light, room):
                ensure_light_on(light)

behavior visit_all_rooms(room:item):
    body:
        if not visited(room):
            observe(room, "Check if this is a room")

behavior __goal__():
    body:
        foreach room: item:
            if is_bathroom(room) or is_dining_room(room) or is_bedroom(room) or is_home_office(room):
                visit_all_rooms(room)
                handle_room_lights(room)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2070_around_bathroom_cabinet_40(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(vacuum_cleaner,bathroom_cabinet_instance)
        else:
            exp(vacuum_cleaner,bathroom_cabinet_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,vacuum_cleaner]=True
    

behavior find_soap_2054_around_bathroom_cabinet_40(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_toilet_paper_2090_around_bathroom_cabinet_40(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(toilet_paper,bathroom_cabinet_instance)
        else:
            exp(toilet_paper,bathroom_cabinet_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,toilet_paper]=True
    

#exp_behavior_end

#goal_representation
behavior ensure_light_on(light:item):
    body:
        if has_switch(light):
            achieve is_on(light)

behavior handle_room_lights(room:item):
    body:
        foreach light: item:
            if is_light(light) and inside(light, room):
                ensure_light_on(light)

behavior visit_all_rooms(room:item):
    body:
        if not visited(room):
            observe(room, "Check if this is a room")

behavior __goal__():
    body:
        foreach room: item:
            if is_bathroom(room) or is_dining_room(room) or is_bedroom(room) or is_home_office(room):
                visit_all_rooms(room)
                handle_room_lights(room)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior ensure_light_on(light:item):
    body:
        if has_switch(light):
            achieve is_on(light)

behavior visit_all_rooms(room:item): 
    body:
        if not visited(room):
            observe(room, "Check if this is a room")

behavior __goal__():
    body:
        foreach room: item:
            if is_bathroom(room) or is_dining_room(room) or is_bedroom(room) or is_home_office(room):
                visit_all_rooms(room)
                foreach light: item:
                    if is_light(light) and inside(light, room):
                        ensure_light_on(light)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior ensure_light_on(light:item):
    body:
        if has_switch(light):
            achieve is_on(light)

behavior handle_room_lights(room:item):
    body:
        foreach light: item:
            if is_light(light) and inside(light, room):
                ensure_light_on(light)

behavior visit_all_rooms(room:item):
    body:
        if not visited(room):
            observe(room, "Check if this is a room")

behavior __goal__():
    body:
        foreach room: item:
            if is_bathroom(room) or is_dining_room(room) or is_bedroom(room) or is_home_office(room):
                visit_all_rooms(room)
                handle_room_lights(room)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "2. turn on a light in rooms where no light is on." ?
Answer: Turn on a light in rooms where no light is on.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior ensure_light_on(light:item):
    body:
        if has_switch(light):
            achieve is_on(light)

behavior handle_room_lights(room:item):
    body:
        foreach light: item:
            if is_light(light) and inside(light, room):
                ensure_light_on(light)

behavior visit_all_rooms(room:item):
    body:
        if not visited(room):
            observe(room, "Check if this is a room")

behavior __goal__():
    body:
        foreach room: item:
            if is_bathroom(room) or is_dining_room(room) or is_bedroom(room) or is_home_office(room):
                visit_all_rooms(room)
                handle_room_lights(room)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_bathroom_cabinet_40(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_vacuum_cleaner_2070_around_washing_machine_2007(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(vacuum_cleaner,washing_machine_instance)
        else:
            exp(vacuum_cleaner,washing_machine_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,washing_machine_instance]=True
        close[washing_machine_instance,vacuum_cleaner]=True
    

behavior find_toilet_paper_2090_around_bathroom_cabinet_40(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(toilet_paper,bathroom_cabinet_instance)
        else:
            exp(toilet_paper,bathroom_cabinet_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,toilet_paper]=True
    

#exp_behavior_end

#goal_representation
 
behavior ensure_light_on(light:item):
    body:
        if has_switch(light):
            achieve is_on(light)

behavior handle_room_lights(room:item):
    body:
        foreach light: item:
            if is_light(light) and inside(light, room):
                ensure_light_on(light)

behavior visit_all_rooms(room:item):
    body:
        if not visited(room):
            observe(room, "Check if this is a room")

behavior __goal__():
    body:
        foreach room: item:
            if is_bathroom(room) or is_dining_room(room) or is_bedroom(room) or is_home_office(room):
                visit_all_rooms(room)
                handle_room_lights(room)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2070_around_basket_for_clothes_2006(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(vacuum_cleaner,basket_for_clothes_instance)
        else:
            exp(vacuum_cleaner,basket_for_clothes_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,vacuum_cleaner]=True
    

#exp_behavior_end

#goal_representation
 
behavior ensure_light_on(light:item):
    body:
        if has_switch(light):
            achieve is_on(light)

behavior handle_room_lights(room:item):
    body:
        foreach light: item:
            if is_light(light) and inside(light, room):
                ensure_light_on(light)

behavior visit_all_rooms(room:item):
    body:
        if not visited(room):
            observe(room, "Check if this is a room")

behavior __goal__():
    body:
        foreach room: item:
            if is_bathroom(room) or is_dining_room(room) or is_bedroom(room) or is_home_office(room):
                visit_all_rooms(room)
                handle_room_lights(room)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior ensure_light_on(light:item):
    body:
        if has_switch(light):
            achieve is_on(light)

behavior handle_room_lights(room:item):
    body:
        foreach light: item:
            if is_light(light) and inside(light, room):
                ensure_light_on(light)

behavior visit_all_rooms(room:item):
    body:
        if not visited(room):
            observe(room, "Check if this is a room")

behavior __goal__():
    body:
        foreach room: item:
            if is_bathroom(room) or is_dining_room(room) or is_bedroom(room) or is_home_office(room):
                visit_all_rooms(room)
                handle_room_lights(room)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior ensure_light_on(light:item):
    body:
        if has_switch(light):
            achieve is_on(light)

behavior handle_room_lights(room:item):
    body:
        foreach light: item:
            if is_light(light) and inside(light, room):
                ensure_light_on(light)

behavior visit_room(room:item):
    body:
        if not visited(room):
            observe(room, "Check if this is a room")

behavior __goal__():
    body:
        foreach room: item:
            if is_bathroom(room) or is_dining_room(room) or is_bedroom(room) or is_home_office(room):
                visit_room(room)
                handle_room_lights(room)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior ensure_light_on(light:item):
    body:
        if has_switch(light):
            achieve is_on(light)

behavior handle_room_lights(room:item):
    body:
        foreach light: item:
            if is_light(light) and inside(light, room):
                ensure_light_on(light)

behavior visit_all_rooms(room:item):
    body:
        if not visited(room):
            observe(room, "Check if this is a room")

behavior __goal__():
    body:
        foreach room: item:
            if is_bathroom(room) or is_dining_room(room) or is_bedroom(room) or is_home_office(room):
                visit_all_rooms(room)
                handle_room_lights(room)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2070_around_washing_machine_2007(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(vacuum_cleaner,washing_machine_instance)
        else:
            exp(vacuum_cleaner,washing_machine_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,washing_machine_instance]=True
        close[washing_machine_instance,vacuum_cleaner]=True
    

behavior find_toilet_paper_2090_around_bathroom_cabinet_40(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(toilet_paper,bathroom_cabinet_instance)
        else:
            exp(toilet_paper,bathroom_cabinet_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,toilet_paper]=True
    

behavior find_towel_rack_33_around_bathroom_cabinet_40(towel_rack:item):
    goal: not unknown(towel_rack)
    body:
        assert is_towel_rack(towel_rack)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel_rack,bathroom_cabinet_instance)
        else:
            exp(towel_rack,bathroom_cabinet_instance)
    eff:
        unknown[towel_rack]=False
        close[towel_rack,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel_rack]=True
    

#exp_behavior_end

#goal_representation
 
behavior turn_on_light(light:item):
    body:
        if has_switch(light):
            achieve is_on(light)

behavior ensure_room_light(room:item):
    body:
        foreach light: item:
            if is_light(light) and inside(light, room) and is_off(light):
                turn_on_light(light)

behavior identify_room(room:item):
    body:
        observe(room, "Check if this is a room")

behavior __goal__():
    body:
        foreach room: item:
            if is_bathroom(room) or is_dining_room(room) or is_bedroom(room) or is_home_office(room):
                identify_room(room)
                ensure_room_light(room)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior turn_on_light(light:item):
    body:
        if has_switch(light):
            achieve is_on(light)

behavior ensure_room_light(room:item):
    body:
        foreach light: item:
            if is_light(light) and inside(light, room) and is_off(light):
                turn_on_light(light)

behavior identify_room(room:item):
    body:
        observe(room, "Check if this is a room")

behavior __goal__():
    body:
        foreach room: item:
            if is_bathroom(room) or is_dining_room(room) or is_bedroom(room) or is_home_office(room):
                identify_room(room)
                ensure_room_light(room)

##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_1)obs(bathroom_1, Check if this is a room)walk_executor(bedroom_67)obs(bedroom_67, Check if this is a room)walk_executor(dining_room_201)obs(dining_room_201, Check if this is a room)walk_executor(home_office_319)obs(home_office_319, Check if this is a room)
##############################
From agent.py
walk_executor(bathroom_1)

##############################
From agent.py
obs(bathroom_1, Check if this is a room)
Get this information:  wall_11 is inside bathroom_1. towel_2059 is inside bathroom_1. mat_22 is inside bathroom_1. toilet_paper_2090 is inside bathroom_1. bathroom_counter_41 is inside bathroom_1. floor_3 is inside bathroom_1. wall_14 is inside bathroom_1. towel_rack_33 is inside bathroom_1. door_44 is inside bathroom_1. bathroom_1 is close to ironing_board_2074. window_63 is inside bathroom_1. curtain_25 is inside bathroom_1. floor_6 is inside bathroom_1. detergent_2084 is inside bathroom_1. clothes_pants_2085 is inside bathroom_1. shower_36 is inside bathroom_1. walllamp_28 is inside bathroom_1. towel_2057 is inside bathroom_1. ceiling_17 is inside bathroom_1. clothes_socks_2087 is inside bathroom_1. wall_9 is inside bathroom_1. curtain_39 is inside bathroom_1. ceiling_20 is inside bathroom_1. towel_rack_31 is inside bathroom_1. curtain_23 is inside bathroom_1. wall_12 is inside bathroom_1. sink_42 is inside bathroom_1. floor_4 is inside bathroom_1. basket_for_clothes_2006 is inside bathroom_1. ironing_board_2074 is inside bathroom_1. light_64 is inside bathroom_1. ceilinglamp_26 is inside bathroom_1. wall_15 is inside bathroom_1. doorjamb_45 is inside bathroom_1. towel_rack_34 is inside bathroom_1. floor_7 is inside bathroom_1. ceiling_18 is inside bathroom_1. toilet_37 is inside bathroom_1. towel_2058 is inside bathroom_1. wall_10 is inside bathroom_1. clothes_skirt_2088 is inside bathroom_1. iron_2089 is inside bathroom_1. bathroom_cabinet_40 is inside bathroom_1. walllamp_29 is inside bathroom_1. floor_2 is inside bathroom_1. ceiling_21 is inside bathroom_1. soap_2053 is inside bathroom_1. faucet_43 is inside bathroom_1. towel_rack_32 is inside bathroom_1. floor_5 is inside bathroom_1. cleaning_solution_2073 is inside bathroom_1. curtain_24 is inside bathroom_1. wallshelf_35 is inside bathroom_1. wall_13 is inside bathroom_1. door_44 is between bathroom_1. ceiling_16 is inside bathroom_1. towel_2056 is inside bathroom_1. washing_machine_2007 is inside bathroom_1. clothes_shirt_2086 is inside bathroom_1. character_65 is inside bathroom_1. walllamp_27 is inside bathroom_1. bathtub_30 is inside bathroom_1. floor_8 is inside bathroom_1. ceiling_19 is inside bathroom_1. shower_38 is inside bathroom_1. bathroom_1 is CLEAN.
##############################
From agent.py
walk_executor(bedroom_67)

##############################
From agent.py
obs(bedroom_67, Check if this is a room)
Get this information:  pillow_183 is inside bedroom_67. floor_77 is inside bedroom_67. ceilinglamp_96 is inside bedroom_67. closetdrawer_118 is inside bedroom_67. table_107 is inside bedroom_67. drawing_175 is inside bedroom_67. wall_79 is inside bedroom_67. ceiling_90 is inside bedroom_67. closetdrawer_120 is inside bedroom_67. hanger_109 is inside bedroom_67. closetdrawer_148 is inside bedroom_67. wall_82 is inside bedroom_67. floor_71 is inside bedroom_67. hanger_110 is inside bedroom_67. mousepad_167 is inside bedroom_67. orchid_178 is inside bedroom_67. floor_72 is inside bedroom_67. hanger_140 is inside bedroom_67. ceiling_91 is inside bedroom_67. nightstand_102 is inside bedroom_67. computer_170 is inside bedroom_67. hanger_132 is inside bedroom_67. wall_85 is inside bedroom_67. floor_74 is inside bedroom_67. clothes_gloves_2046 is inside bedroom_67. curtain_181 is inside bedroom_67. hanger_115 is inside bedroom_67. desk_104 is inside bedroom_67. closetdrawer_143 is inside bedroom_67. hanger_134 is inside bedroom_67. mat_173 is inside bedroom_67. hanger_124 is inside bedroom_67. window_86 is inside bedroom_67. tablelamp_97 is inside bedroom_67. clothes_underwear_2049 is inside bedroom_67. closetdrawer_154 is inside bedroom_67. doorjamb_165 is inside bedroom_67. closetdrawer_116 is inside bedroom_67. wall_80 is inside bedroom_67. floor_69 is inside bedroom_67. trashcan_99 is inside bedroom_67. ceiling_88 is inside bedroom_67. keyboard_168 is inside bedroom_67. closetdrawer_119 is inside bedroom_67. drawing_176 is inside bedroom_67. wall_81 is inside bedroom_67. clothes_dress_2044 is inside bedroom_67. closetdrawer_160 is inside bedroom_67. hanger_138 is inside bedroom_67. hanger_111 is inside bedroom_67. curtain_179 is inside bedroom_67. closetdrawer_121 is inside bedroom_67. ceiling_94 is inside bedroom_67. wall_83 is inside bedroom_67. closetdrawer_122 is inside bedroom_67. hanger_113 is inside bedroom_67. hanger_141 is inside bedroom_67. floor_75 is inside bedroom_67. chair_103 is inside bedroom_67. hanger_114 is inside bedroom_67. cpuscreen_171 is inside bedroom_67. pillow_182 is inside bedroom_67. floor_76 is inside bedroom_67. chair_106 is inside bedroom_67. bed_105 is inside bedroom_67. ceiling_89 is inside bedroom_67. wall_78 is inside bedroom_67. closetdrawer_146 is inside bedroom_67. photoframe_185 is inside bedroom_67. drawing_174 is inside bedroom_67. dresser_108 is inside bedroom_67. hanger_136 is inside bedroom_67. floor_70 is inside bedroom_67. tablelamp_98 is inside bedroom_67. mouse_166 is inside bedroom_67. hanger_128 is inside bedroom_67. closetdrawer_117 is inside bedroom_67. bookshelf_101 is inside bedroom_67. closetdrawer_158 is inside bedroom_67. chair_2004 is inside bedroom_67. nightstand_100 is inside bedroom_67. floor_73 is inside bedroom_67. hanger_130 is inside bedroom_67. light_169 is inside bedroom_67. door_44 is between bedroom_67. ceiling_92 is inside bedroom_67. ceiling_93 is inside bedroom_67. clothes_hat_2045 is inside bedroom_67. closetdrawer_150 is inside bedroom_67. hanger_112 is inside bedroom_67. dresser_123 is inside bedroom_67. curtain_180 is inside bedroom_67. character_65 is inside bedroom_67. clothes_scarf_2048 is inside bedroom_67. hanger_142 is inside bedroom_67. ceiling_95 is inside bedroom_67. wall_84 is inside bedroom_67. floor_68 is inside bedroom_67. door_222 is between bedroom_67. ceiling_87 is inside bedroom_67. hanger_126 is inside bedroom_67. bedroom_67 is CLEAN.
##############################
From agent.py
walk_executor(dining_room_201)

##############################
From agent.py
obs(dining_room_201, Check if this is a room)
Get this information:  food_turkey_2040 is inside dining_room_201. wall_213 is inside dining_room_201. ceilinglamp_224 is inside dining_room_201. fork_2081 is inside dining_room_201. food_fish_2021 is inside dining_room_201. milk_2043 is inside dining_room_201. food_onion_2032 is inside dining_room_201. floor_205 is inside dining_room_201. wallshelf_235 is inside dining_room_201. cutting_board_2051 is inside dining_room_201. toaster_292 is inside dining_room_201. food_cake_2013 is inside dining_room_201. ceiling_216 is inside dining_room_201. bench_227 is inside dining_room_201. oven_295 is inside dining_room_201. powersocket_246 is inside dining_room_201. food_hamburger_2024 is inside dining_room_201. food_potato_2035 is inside dining_room_201. floor_208 is inside dining_room_201. soap_2054 is inside dining_room_201. stove_2065 is inside dining_room_201. food_cheese_2016 is inside dining_room_201. food_kiwi_2027 is inside dining_room_201. napkin_2005 is inside dining_room_201. ceiling_219 is inside dining_room_201. food_steak_2008 is inside dining_room_201. wall_clock_249 is inside dining_room_201. drawing_238 is inside dining_room_201. door_222 is inside dining_room_201. wall_211 is inside dining_room_201. drawing_241 is inside dining_room_201. kitchen_counter_230 is inside dining_room_201. food_donut_2019 is inside dining_room_201. floor_203 is inside dining_room_201. doorjamb_346 is between dining_room_201. food_snack_2038 is inside dining_room_201. cd_player_2060 is inside dining_room_201. coffe_maker_290 is inside dining_room_201. food_banana_2011 is inside dining_room_201. food_food_2022 is inside dining_room_201. coffee_filter_2000 is inside dining_room_201. oil_2079 is inside dining_room_201. wall_214 is inside dining_room_201. food_oatmeal_2030 is inside dining_room_201. food_vegetable_2041 is inside dining_room_201. pot_2069 is inside dining_room_201. drawing_2003 is inside dining_room_201. orchid_244 is inside dining_room_201. bookshelf_233 is inside dining_room_201. floor_206 is inside dining_room_201. tvstand_225 is inside dining_room_201. mat_236 is inside dining_room_201. food_carrot_2014 is inside dining_room_201. bowl_2071 is inside dining_room_201. food_peanut_butter_2033 is inside dining_room_201. photoframe_285 is inside dining_room_201. ceiling_217 is inside dining_room_201. plate_1000 is inside dining_room_201. cup_2063 is inside dining_room_201. food_rice_2036 is inside dining_room_201. food_ice_cream_2025 is inside dining_room_201. cup_2064 is inside dining_room_201. drawing_239 is inside dining_room_201. bench_228 is inside dining_room_201. fryingpan_2083 is inside dining_room_201. tray_296 is inside dining_room_201. food_chicken_2017 is inside dining_room_201. phone_247 is inside dining_room_201. ceiling_220 is inside dining_room_201. wall_209 is inside dining_room_201. stovefan_288 is inside dining_room_201. food_lemon_2028 is inside dining_room_201. food_sugar_2039 is inside dining_room_201. sink_231 is inside dining_room_201. food_apple_2009 is inside dining_room_201. food_egg_2020 is inside dining_room_201. ceilinglamp_223 is inside dining_room_201. wall_212 is inside dining_room_201. sauce_2078 is inside dining_room_201. drawing_242 is inside dining_room_201. food_orange_2031 is inside dining_room_201. floor_204 is inside dining_room_201. wall_215 is inside dining_room_201. knife_2050 is inside dining_room_201. bowl_2072 is inside dining_room_201. wallshelf_234 is inside dining_room_201. food_bread_2012 is inside dining_room_201. food_fruit_2023 is inside dining_room_201. fork_2080 is inside dining_room_201. dry_pasta_2042 is inside dining_room_201. food_cereal_2015 is inside dining_room_201. light_245 is inside dining_room_201. floor_207 is inside dining_room_201. ceiling_218 is inside dining_room_201. food_pizza_2034 is inside dining_room_201. dishwasher_1001 is inside dining_room_201. table_226 is inside dining_room_201. television_248 is inside dining_room_201. mat_237 is inside dining_room_201. wall_210 is inside dining_room_201. cupboard_229 is inside dining_room_201. food_dessert_2018 is inside dining_room_201. cd_2075 is inside dining_room_201. character_65 is inside dining_room_201. food_jam_2026 is inside dining_room_201. food_salt_2037 is inside dining_room_201. fridge_289 is inside dining_room_201. food_bacon_2010 is inside dining_room_201. drawing_240 is inside dining_room_201. microwave_297 is inside dining_room_201. floor_202 is inside dining_room_201. door_222 is between dining_room_201. food_noodles_2029 is inside dining_room_201. drawing_243 is inside dining_room_201. faucet_232 is inside dining_room_201. ceiling_221 is inside dining_room_201. dining_room_201 is CLEAN.
##############################
From agent.py
walk_executor(home_office_319)

##############################
From agent.py
obs(home_office_319, Check if this is a room)
Get this information:  curtain_407 is inside home_office_319. hairbrush_2002 is inside home_office_319. ceilinglamp_349 is inside home_office_319. vacuum_cleaner_2070 is inside home_office_319. ceiling_341 is inside home_office_319. couch_352 is inside home_office_319. wall_330 is inside home_office_319. headset_2062 is inside home_office_319. curtain_409 is inside home_office_319. filing_cabinet_399 is inside home_office_319. television_410 is inside home_office_319. floor_322 is inside home_office_319. wall_333 is inside home_office_319. hanger_361 is inside home_office_319. drawing_402 is inside home_office_319. ceiling_344 is inside home_office_319. hanger_363 is inside home_office_319. hanger_374 is inside home_office_319. floor_325 is inside home_office_319. wall_336 is inside home_office_319. drawing_404 is inside home_office_319. table_355 is inside home_office_319. closetdrawer_394 is inside home_office_319. chair_356 is inside home_office_319. mouse_413 is inside home_office_319. headset_2076 is inside home_office_319. doorjamb_346 is between home_office_319. floor_328 is inside home_office_319. ceiling_339 is inside home_office_319. cpuscreen_416 is inside home_office_319. hanger_369 is inside home_office_319. doorjamb_347 is inside home_office_319. dresser_358 is inside home_office_319. wall_331 is inside home_office_319. floor_320 is inside home_office_319. closetdrawer_388 is inside home_office_319. walllamp_350 is inside home_office_319. curtain_408 is inside home_office_319. remote_control_2052 is inside home_office_319. spectacles_2082 is inside home_office_319. floor_323 is inside home_office_319. closetdrawer_380 is inside home_office_319. tvstand_353 is inside home_office_319. ceiling_342 is inside home_office_319. hanger_372 is inside home_office_319. light_411 is inside home_office_319. ceiling_345 is inside home_office_319. wall_334 is inside home_office_319. cat_2055 is inside home_office_319. wall_335 is inside home_office_319. closetdrawer_392 is inside home_office_319. clothes_jacket_2047 is inside home_office_319. drawing_403 is inside home_office_319. floor_326 is inside home_office_319. book_2066 is inside home_office_319. phone_2077 is inside home_office_319. hanger_375 is inside home_office_319. pencil_2001 is inside home_office_319. window_348 is inside home_office_319. ceiling_337 is inside home_office_319. pillow_405 is inside home_office_319. hanger_367 is inside home_office_319. pillow_406 is inside home_office_319. wall_329 is inside home_office_319. ceiling_340 is inside home_office_319. hanger_359 is inside home_office_319. computer_417 is inside home_office_319. dvd_player_2061 is inside home_office_319. home_office_319 is close to coffee_table_2068. floor_321 is inside home_office_319. wall_332 is inside home_office_319. drawing_400 is inside home_office_319. walllamp_351 is inside home_office_319. photoframe_430 is inside home_office_319. floor_324 is inside home_office_319. ceiling_343 is inside home_office_319. closetdrawer_382 is inside home_office_319. mat_401 is inside home_office_319. powersocket_412 is inside home_office_319. bookshelf_354 is inside home_office_319. hanger_365 is inside home_office_319. floor_327 is inside home_office_319. character_65 is inside home_office_319. closetdrawer_384 is inside home_office_319. doorjamb_346 is inside home_office_319. desk_357 is inside home_office_319. book_2067 is inside home_office_319. mousepad_414 is inside home_office_319. hanger_376 is inside home_office_319. coffee_table_2068 is inside home_office_319. keyboard_415 is inside home_office_319. ceiling_338 is inside home_office_319. closetdrawer_377 is inside home_office_319. home_office_319 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make sure there is at least one light on in every room.
Action History:
['walk_executor(bathroom_1)', 'walk_executor(light_64)', 'switchon_executor(light_64)', 'walk_executor(bedroom_67)', 'walk_executor(light_169)', 'switchon_executor(light_169)', 'walk_executor(dining_room_201)', 'walk_executor(light_245)', 'switchon_executor(light_245)', 'walk_executor(home_office_319)', 'walk_executor(light_411)', 'switchon_executor(light_411)', 'walk_executor(bathroom_1)', 'walk_executor(bedroom_67)', 'walk_executor(dining_room_201)', 'walk_executor(home_office_319)']
Time info:
Time consume: 257 seconds
Exp_helper query times: 0
Guidance query times: 2
library scale: 37
goal generate times: 20
goal correct times: 0
action_num: 16

Task complete rate:
1
Scene_id: 0
##############################
