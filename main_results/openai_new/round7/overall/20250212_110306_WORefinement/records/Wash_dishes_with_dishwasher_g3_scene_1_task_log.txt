From agent.py
Reset goals: The sub-goals are: 
['1. Identify the bowls and plates to be washed.', '2. Load the bowls and plates into the dishwasher and start it.', '3. Find the forks and wash them by hand.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2152_around_table_270(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==270
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(plate,table_instance)
        else:
            exp(plate,table_instance)
    eff:
        unknown[plate]=False
        close[plate,table_instance]=True
        close[table_instance,plate]=True
    

behavior find_bowl_2142_around_table_270(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==270
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(bowl,table_instance)
        else:
            exp(bowl,table_instance)
    eff:
        unknown[bowl]=False
        close[bowl,table_instance]=True
        close[table_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
def has_bowls_or_plates(dishwasher:item):
    # Function to check if there are bowls or plates in or near the dishwasher
    symbol has_items= exists o: item : ((is_bowl(o) or is_plate(o)) and close(o, dishwasher))
    return has_items

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher

        if has_bowls_or_plates(dishwasher):
            # If there are bowls or plates near or in the dishwasher, inspect them
            foreach o: item:
                if (is_bowl(o) or is_plate(o)) and close(o, dishwasher):
                    observe(o, "Verify if the item is ready to load into the dishwasher")
        else:
            # If no bowls or plates are near the dishwasher, search for them
            foreach o: item:
                if (is_bowl(o) or is_plate(o)) and not visited(o):
                    observe(o, "Search for any unvisited bowls or plates")

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_bowls_or_plates(dishwasher:item):
    # Function to check if there are bowls or plates in or near the dishwasher
    symbol has_items= exists o: item : ((is_bowl(o) or is_plate(o)) and close(o, dishwasher))
    return has_items

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher

        if has_bowls_or_plates(dishwasher):
            # If there are bowls or plates near or in the dishwasher, inspect them
            foreach o: item:
                if (is_bowl(o) or is_plate(o)) and close(o, dishwasher):
                    observe(o, "Verify if the item is ready to load into the dishwasher")
        else:
            # If no bowls or plates are near the dishwasher, search for them
            foreach o: item:
                if (is_bowl(o) or is_plate(o)) and not visited(o):
                    observe(o, "Search for any unvisited bowls or plates")

##############################
From agent.py-> find a plan in act()
walk_executor(table_270)exp(bowl_2140, table_270)walk_executor(bowl_2140)obs(bowl_2140, Search for any unvisited bowls or plates)walk_executor(table_270)exp(bowl_2141, table_270)walk_executor(bowl_2141)obs(bowl_2141, Search for any unvisited bowls or plates)walk_executor(table_270)exp(bowl_2142, table_270)walk_executor(bowl_2142)obs(bowl_2142, Search for any unvisited bowls or plates)walk_executor(table_270)exp(plate_2152, table_270)walk_executor(plate_2152)obs(plate_2152, Search for any unvisited bowls or plates)
##############################
From agent.py
walk_executor(table_270)
Robot find: shoes_2033, shampoo_2019, pillow_286, pencil_2014, phone_2017, pillow_287, drawing_288, brush_2002, Robot is close to the couch_269. Robot is close to the table_270. 
##############################
From agent.py
exp(bowl_2140, table_270)
Fail to find bowl_2140 around table_270. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_199)exp(bowl_2140, table_199)walk_executor(bowl_2140)obs(bowl_2140, Search for any unvisited bowls or plates)walk_executor(table_199)exp(bowl_2141, table_199)walk_executor(bowl_2141)obs(bowl_2141, Search for any unvisited bowls or plates)walk_executor(table_199)exp(bowl_2142, table_199)walk_executor(bowl_2142)obs(bowl_2142, Search for any unvisited bowls or plates)walk_executor(table_199)exp(plate_2152, table_199)walk_executor(plate_2152)obs(plate_2152, Search for any unvisited bowls or plates)
##############################
From agent.py
walk_executor(table_199)
Robot find: wooden_spoon_2000, mat_203, tea_bag_2023, drawing_201, drawing_202, Robot is close to the table_199. 
##############################
From agent.py
exp(bowl_2140, table_199)
Fail to find bowl_2140 around table_199. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_129)open_executor(dishwasher_129)exp(bowl_2140, dishwasher_129)walk_executor(bowl_2140)obs(bowl_2140, Search for any unvisited bowls or plates)walk_executor(dishwasher_129)exp(bowl_2141, dishwasher_129)walk_executor(bowl_2141)obs(bowl_2141, Search for any unvisited bowls or plates)walk_executor(dishwasher_129)exp(bowl_2142, dishwasher_129)walk_executor(bowl_2142)obs(bowl_2142, Search for any unvisited bowls or plates)walk_executor(dishwasher_129)exp(plate_2152, dishwasher_129)walk_executor(plate_2152)obs(plate_2152, Search for any unvisited bowls or plates)
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the dishwasher_129. 
##############################
From agent.py
open_executor(dishwasher_129)
Robot find: detergent_2011, measuring_cup_2012, Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the measuring_cup_2012. dishwasher_129 is opened. 
##############################
From agent.py
exp(bowl_2140, dishwasher_129)
Fail to find bowl_2140 around dishwasher_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(powersocket_282)exp(bowl_2140, powersocket_282)walk_executor(bowl_2140)obs(bowl_2140, Search for any unvisited bowls or plates)walk_executor(powersocket_282)exp(bowl_2141, powersocket_282)walk_executor(bowl_2141)obs(bowl_2141, Search for any unvisited bowls or plates)walk_executor(powersocket_282)exp(bowl_2142, powersocket_282)walk_executor(bowl_2142)obs(bowl_2142, Search for any unvisited bowls or plates)walk_executor(powersocket_282)exp(plate_2152, powersocket_282)walk_executor(plate_2152)obs(plate_2152, Search for any unvisited bowls or plates)
##############################
From agent.py
walk_executor(powersocket_282)
Robot find: mat_284, Robot is close to the powersocket_282. 
##############################
From agent.py
exp(bowl_2140, powersocket_282)
Fail to find bowl_2140 around powersocket_282. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(bowl_2140, kitchen_counter_122)walk_executor(bowl_2140)obs(bowl_2140, Search for any unvisited bowls or plates)walk_executor(kitchen_counter_122)exp(bowl_2141, kitchen_counter_122)walk_executor(bowl_2141)obs(bowl_2141, Search for any unvisited bowls or plates)walk_executor(kitchen_counter_122)exp(bowl_2142, kitchen_counter_122)walk_executor(bowl_2142)obs(bowl_2142, Search for any unvisited bowls or plates)walk_executor(kitchen_counter_122)exp(plate_2152, kitchen_counter_122)walk_executor(plate_2152)obs(plate_2152, Search for any unvisited bowls or plates)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, pot_78, fryingpan_2154, Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(bowl_2140, kitchen_counter_122)
Fail to find bowl_2140 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(bowl_2140, kitchen_counter_123)walk_executor(bowl_2140)obs(bowl_2140, Search for any unvisited bowls or plates)walk_executor(kitchen_counter_123)exp(bowl_2141, kitchen_counter_123)walk_executor(bowl_2141)obs(bowl_2141, Search for any unvisited bowls or plates)walk_executor(kitchen_counter_123)exp(bowl_2142, kitchen_counter_123)walk_executor(bowl_2142)obs(bowl_2142, Search for any unvisited bowls or plates)walk_executor(microwave_135)open_executor(microwave_135)exp(plate_2152, microwave_135)walk_executor(plate_2152)obs(plate_2152, Search for any unvisited bowls or plates)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Robot find: tray_2068, oil_2149, knife_2035, food_kiwi_2054, food_orange_2027, Robot is close to the kitchen_counter_123. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2140 ?
Answer: The target item, bowl_2140, is located in the dining_room_41. Specifically, it is on top of kitchen_counter_119. Look for a spot on the kitchen counter in the dining room where bowl_2140 is situated. You will identify the correct counter as it is the one closest to the bowl.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item, bowl_2140, is located in the dining_room_41. Specifically, it is on top of kitchen_counter_119. Look for a spot on the kitchen counter in the dining room where bowl_2140 is situated. You will identify the correct counter as it is the one closest to the bowl.

The actions you have taken:
Action 1: Walk to table_270.
Action 2: look for bowl_2140 around table_270.
Action 3: Walk to table_199.
Action 4: look for bowl_2140 around table_199.
Action 5: Walk to dishwasher_129.
Action 6: Open dishwasher_129.
Action 7: look for bowl_2140 around dishwasher_129.
Action 8: Walk to powersocket_282.
Action 9: look for bowl_2140 around powersocket_282.
Action 10: Walk to kitchen_counter_122.
Action 11: look for bowl_2140 around kitchen_counter_122.
Action 12: Walk to kitchen_counter_123.

##############################
From agent.py
exp(bowl_2140, kitchen_counter_123)
Fail to find bowl_2140 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(bowl_2140, kitchen_counter_119)walk_executor(bowl_2140)obs(bowl_2140, Search for any unvisited bowls or plates)walk_executor(kitchen_counter_119)exp(bowl_2141, kitchen_counter_119)walk_executor(bowl_2141)obs(bowl_2141, Search for any unvisited bowls or plates)walk_executor(kitchen_counter_119)exp(bowl_2142, kitchen_counter_119)walk_executor(bowl_2142)obs(bowl_2142, Search for any unvisited bowls or plates)walk_executor(kitchen_counter_119)exp(plate_2152, kitchen_counter_119)walk_executor(plate_2152)obs(plate_2152, Search for any unvisited bowls or plates)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(bowl_2140, kitchen_counter_119)
Find bowl_2140. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2140)obs(bowl_2140, Search for any unvisited bowls or plates)walk_executor(bowl_2141)obs(bowl_2141, Search for any unvisited bowls or plates)walk_executor(bowl_2142)obs(bowl_2142, Search for any unvisited bowls or plates)walk_executor(plate_2152)obs(plate_2152, Search for any unvisited bowls or plates)
##############################
From agent.py
walk_executor(bowl_2140)
Robot find: Robot is close to the kitchen_counter_119. Robot is close to the bowl_2140. 
##############################
From agent.py
obs(bowl_2140, Search for any unvisited bowls or plates)
Get this information:  bowl_2140 is close to kitchen_counter_119. bowl_2140 is close to character_240. bowl_2140 is on kitchen_counter_119. bowl_2140 is inside dining_room_41. bowl_2140 is DIRTY.
##############################
From agent.py
walk_executor(bowl_2141)
Robot find: Robot is close to the kitchen_counter_119. Robot is close to the bowl_2141. 
##############################
From agent.py
obs(bowl_2141, Search for any unvisited bowls or plates)
Get this information:  bowl_2141 is inside dining_room_41. bowl_2141 is close to kitchen_counter_119. bowl_2141 is close to character_240. bowl_2141 is on kitchen_counter_119. bowl_2141 is DIRTY.
##############################
From agent.py
walk_executor(bowl_2142)
Robot find: iron_2161, Robot is close to the kitchen_counter_119. Robot is close to the bowl_2142. 
##############################
From agent.py
obs(bowl_2142, Search for any unvisited bowls or plates)
Get this information:  bowl_2142 is close to iron_2161. bowl_2142 is close to kitchen_counter_119. bowl_2142 is close to character_240. iron_2161 is on bowl_2142. bowl_2142 is on kitchen_counter_119. bowl_2142 is inside dining_room_41. bowl_2142 is DIRTY.
##############################
From agent.py
walk_executor(plate_2152)
Robot find: Robot is close to the kitchen_counter_119. Robot is close to the plate_2152. 
##############################
From agent.py
obs(plate_2152, Search for any unvisited bowls or plates)
Get this information:  plate_2152 is inside dining_room_41. plate_2152 is close to kitchen_counter_119. plate_2152 is close to character_240. plate_2152 is on kitchen_counter_119. plate_2152 is DIRTY.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2115_around_fridge_126(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_detergent_2011_around_sink_19(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==19
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(detergent,sink_instance)
        else:
            exp(detergent,sink_instance)
    eff:
        unknown[detergent]=False
        close[detergent,sink_instance]=True
        close[sink_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_bowls_and_plates_into_dishwasher(bowl_or_plate:item, dishwasher:item):
    body:
        achieve_once inside(bowl_or_plate, dishwasher)
        # Load the bowl or plate into the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher)
        # Close the dishwasher door
        achieve_once is_on(dishwasher)
        # Turn on the dishwasher to start the washing process

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher

        foreach dish: item:
            if is_bowl(dish) or is_plate(dish):
                load_bowls_and_plates_into_dishwasher(dish, dishwasher)
        start_dishwasher(dishwasher)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_bowls_and_plates_into_dishwasher(bowl_or_plate:item, dishwasher:item):
    body:
        achieve_once inside(bowl_or_plate, dishwasher)
        # Load the bowl or plate into the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher)
        # Close the dishwasher door
        achieve_once is_on(dishwasher)
        # Turn on the dishwasher to start the washing process

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher

        foreach dish: item:
            if is_bowl(dish) or is_plate(dish):
                load_bowls_and_plates_into_dishwasher(dish, dishwasher)
        start_dishwasher(dishwasher)

##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(dishwasher_129)putin_executor(bowl_2140, dishwasher_129)walk_executor(bowl_2141)grab_executor(bowl_2141)walk_executor(dishwasher_129)putin_executor(bowl_2141, dishwasher_129)walk_executor(bowl_2142)grab_executor(bowl_2142)walk_executor(dishwasher_129)putin_executor(bowl_2142, dishwasher_129)walk_executor(plate_2152)grab_executor(plate_2152)walk_executor(dishwasher_129)putin_executor(plate_2152, dishwasher_129)close_executor(dishwasher_129)switchon_executor(dishwasher_129)
##############################
From agent.py
walk_executor(bowl_2140)
Robot find: Robot is close to the kitchen_counter_119. Robot is close to the bowl_2140. 
##############################
From agent.py
grab_executor(bowl_2140)
Robot find: Robot is close to the kitchen_counter_119. Robot is close to the bowl_2140. Grabbing bowl_2140 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the bowl_2140. Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the measuring_cup_2012. 
##############################
From agent.py
putin_executor(bowl_2140, dishwasher_129)
Robot find: Robot is close to the bowl_2140. Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the measuring_cup_2012. dishwasher_129 is close bowl_2140. bowl_2140 is close dishwasher_129. bowl_2140 is inside dishwasher_129. bowl_2140 released by right hand. 
##############################
From agent.py
walk_executor(bowl_2141)
Robot find: Robot is close to the bowl_2141. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
grab_executor(bowl_2141)
Robot find: Robot is close to the bowl_2141. Robot is close to the kitchen_counter_119. Grabbing bowl_2141 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the bowl_2141. Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the bowl_2140. Robot is close to the measuring_cup_2012. 
##############################
From agent.py
putin_executor(bowl_2141, dishwasher_129)
Robot find: Robot is close to the bowl_2141. Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the bowl_2140. Robot is close to the measuring_cup_2012. dishwasher_129 is close bowl_2141. bowl_2141 is inside dishwasher_129. bowl_2141 is close dishwasher_129. bowl_2141 released by right hand. 
##############################
From agent.py
walk_executor(bowl_2142)
Robot find: Robot is close to the bowl_2142. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
grab_executor(bowl_2142)
Robot find: Robot is close to the bowl_2142. Robot is close to the kitchen_counter_119. Grabbing bowl_2142 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the bowl_2142. Robot is close to the dishwasher_129. Robot is close to the measuring_cup_2012. Robot is close to the detergent_2011. Robot is close to the bowl_2140. Robot is close to the bowl_2141. 
##############################
From agent.py
putin_executor(bowl_2142, dishwasher_129)
Robot find: Robot is close to the bowl_2142. Robot is close to the dishwasher_129. Robot is close to the measuring_cup_2012. Robot is close to the detergent_2011. Robot is close to the bowl_2140. Robot is close to the bowl_2141. dishwasher_129 is close bowl_2142. bowl_2142 is close dishwasher_129. bowl_2142 is inside dishwasher_129. bowl_2142 released by right hand. 
##############################
From agent.py
walk_executor(plate_2152)
Robot find: Robot is close to the plate_2152. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
grab_executor(plate_2152)
Robot find: Robot is close to the plate_2152. Robot is close to the kitchen_counter_119. Grabbing plate_2152 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the plate_2152. Robot is close to the dishwasher_129. Robot is close to the measuring_cup_2012. Robot is close to the detergent_2011. Robot is close to the bowl_2140. Robot is close to the bowl_2141. Robot is close to the bowl_2142. 
##############################
From agent.py
putin_executor(plate_2152, dishwasher_129)
Robot find: Robot is close to the plate_2152. Robot is close to the dishwasher_129. Robot is close to the measuring_cup_2012. Robot is close to the detergent_2011. Robot is close to the bowl_2140. Robot is close to the bowl_2141. Robot is close to the bowl_2142. dishwasher_129 is close plate_2152. plate_2152 is inside dishwasher_129. plate_2152 is close dishwasher_129. plate_2152 released by right hand. 
##############################
From agent.py
close_executor(dishwasher_129)
Robot find: Robot is close to the dishwasher_129. dishwasher_129 is closed. 
##############################
From agent.py
switchon_executor(dishwasher_129)
Robot find: Robot is close to the dishwasher_129. dishwasher_129 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2037_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
def is_fork_inhand_or_clean(fork:item):
    # Function to check if a fork is already clean or needs to be taken in hand
    symbol fork_state = dirty(fork) or not clean(fork)
    return fork_state

behavior find_and_clean_forks():
    body:
        foreach fork: item:
            if is_fork(fork) and is_fork_inhand_or_clean(fork):
                achieve_once inhand(fork)
                wash(fork)

behavior __goal__():
    body:
        find_and_clean_forks()

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_fork_on_location(location:item):
    # Function to check if there is a fork on a specified location
    symbol has_fork= exists o: item : (is_fork(o) and close(o, location))
    return has_fork

behavior wash_fork_by_hand(fork:item):
    body:
        wash(fork)

behavior __goal__():
    body:
        if exists location: item : (close(location, kitchen_counter_119) and is_fork_on_location(location)):
            # Check if there are forks that need washing based on available information
            bind fork: item where:
                is_fork(fork) and close(fork, kitchen_counter_119)
            # Select forks close to a known location
            wash_fork_by_hand(fork)

        else:
            # If no fork is found yet, explore locations particularly around detected ones for forks
            foreach location: item:
                if location=kitchen_counter_119 and not visited(location):
                    observe(location, "Find forks that need to be washed by hand")

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2037_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation

behavior locate_fork_for_hand_washing(fork:item):
    body:
        observe(fork, "Check the location of fork for hand washing")

behavior wash_fork_by_hand(fork:item):
    body:
        wash(fork)

behavior __goal__():
    body:
        foreach fork: item:
            if is_fork(fork) and not visited(fork):
                locate_fork_for_hand_washing(fork)
                wash_fork_by_hand(fork)

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior locate_fork_for_hand_washing(fork:item):
    body:
        observe(fork, "Check the location of fork for hand washing")

behavior wash_fork_by_hand(fork:item):
    body:
        wash(fork)

behavior __goal__():
    body:
        foreach fork: item:
            if is_fork(fork) and not visited(fork):
                locate_fork_for_hand_washing(fork)
                wash_fork_by_hand(fork)

##############################
From agent.py-> find a plan in act()
walk_executor(fork_2150)obs(fork_2150, Check the location of fork for hand washing)grab_executor(fork_2150)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(fork_2150)switchoff_executor(faucet_20)walk_executor(fork_2151)obs(fork_2151, Check the location of fork for hand washing)grab_executor(fork_2151)walk_executor(kitchen_counter_119)put_executor(fork_2150, kitchen_counter_119)switchon_executor(faucet_121)wash_executor(fork_2151)switchoff_executor(faucet_121)
##############################
From agent.py
walk_executor(fork_2150)
Robot find: Robot is close to the fork_2150. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
obs(fork_2150, Check the location of fork for hand washing)
Get this information:  fork_2150 is close to kitchen_counter_119. fork_2150 is close to character_240. fork_2150 is on kitchen_counter_119. fork_2150 is inside dining_room_41. fork_2150 is CLEAN.
##############################
From agent.py
grab_executor(fork_2150)
Robot find: Robot is close to the fork_2150. Robot is close to the kitchen_counter_119. Grabbing fork_2150 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot find: mat_32, phone_2029, drawing_33, Robot is close to the fork_2150. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchon_executor(faucet_20)
Robot find: Robot is close to the fork_2150. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned on. 
##############################
From agent.py
wash_executor(fork_2150)
Robot find: Robot is close to the fork_2150. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot find: Robot is close to the fork_2150. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned off. 
##############################
From agent.py
walk_executor(fork_2151)
Robot find: Robot is close to the fork_2150. Robot is close to the kitchen_counter_119. Robot is close to the fork_2151. 
##############################
From agent.py
obs(fork_2151, Check the location of fork for hand washing)
Get this information:  fork_2151 is inside dining_room_41. fork_2151 is close to kitchen_counter_119. fork_2151 is close to character_240. fork_2151 is on kitchen_counter_119. fork_2151 is CLEAN.
##############################
From agent.py
grab_executor(fork_2151)
Robot find: Robot is close to the fork_2150. Robot is close to the kitchen_counter_119. Robot is close to the fork_2151. Grabbing fork_2151 by left hand. 
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: Robot is close to the fork_2150. Robot is close to the kitchen_counter_119. Robot is close to the fork_2151. 
##############################
From agent.py
put_executor(fork_2150, kitchen_counter_119)
Robot find: Robot is close to the fork_2150. Robot is close to the kitchen_counter_119. Robot is close to the fork_2151. fork_2150 is close kitchen_counter_119. fork_2150 is on kitchen_counter_119. fork_2150 released by right hand. 
##############################
From agent.py
switchon_executor(faucet_121)
Robot find: Robot is close to the fork_2150. Robot is close to the kitchen_counter_119. Robot is close to the fork_2151. faucet_121 is turned on. 
##############################
From agent.py
wash_executor(fork_2151)
Robot find: Robot is close to the fork_2150. Robot is close to the kitchen_counter_119. Robot is close to the fork_2151. 
##############################
From agent.py
switchoff_executor(faucet_121)
Robot find: Robot is close to the fork_2150. Robot is close to the kitchen_counter_119. Robot is close to the fork_2151. faucet_121 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Wash the bowls and plates with dishwasher. And wash forks by hand.
Action History:
['walk_executor(table_270)', 'walk_executor(table_199)', 'walk_executor(dishwasher_129)', 'open_executor(dishwasher_129)', 'walk_executor(powersocket_282)', 'walk_executor(kitchen_counter_122)', 'walk_executor(kitchen_counter_123)', 'walk_executor(kitchen_counter_119)', 'walk_executor(bowl_2140)', 'walk_executor(bowl_2141)', 'walk_executor(bowl_2142)', 'walk_executor(plate_2152)', 'walk_executor(bowl_2140)', 'grab_executor(bowl_2140)', 'walk_executor(dishwasher_129)', 'putin_executor(bowl_2140, dishwasher_129)', 'walk_executor(bowl_2141)', 'grab_executor(bowl_2141)', 'walk_executor(dishwasher_129)', 'putin_executor(bowl_2141, dishwasher_129)', 'walk_executor(bowl_2142)', 'grab_executor(bowl_2142)', 'walk_executor(dishwasher_129)', 'putin_executor(bowl_2142, dishwasher_129)', 'walk_executor(plate_2152)', 'grab_executor(plate_2152)', 'walk_executor(dishwasher_129)', 'putin_executor(plate_2152, dishwasher_129)', 'close_executor(dishwasher_129)', 'switchon_executor(dishwasher_129)', 'walk_executor(fork_2150)', 'grab_executor(fork_2150)', 'walk_executor(faucet_20)', 'switchon_executor(faucet_20)', 'wash_executor(fork_2150)', 'switchoff_executor(faucet_20)', 'walk_executor(fork_2151)', 'grab_executor(fork_2151)', 'walk_executor(kitchen_counter_119)', 'put_executor(fork_2150, kitchen_counter_119)', 'switchon_executor(faucet_121)', 'wash_executor(fork_2151)', 'switchoff_executor(faucet_121)']
Time info:
Time consume: 208 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 127
goal generate times: 5
goal correct times: 0
action_num: 43

Task complete rate:
1
Scene_id: 1
##############################
