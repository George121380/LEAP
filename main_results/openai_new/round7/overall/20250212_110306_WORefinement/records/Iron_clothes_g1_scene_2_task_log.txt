From agent.py
Reset goals: The sub-goals are: 
['Iron the skirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_skirt_2116_around_basket_for_clothes_2040(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once close_char(char, ironing_board)
        # Move close to the ironing board
        achieve_once on(skirt, ironing_board)
        # Place the skirt on the ironing board
        achieve is_on(iron)
        # Ensure the iron is on to commence ironing
        achieve_once inhand(iron)
        # Temporarily hold the iron for ironing the skirt

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt item
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board
        
        bind iron: item where:
            is_iron(iron) and has_plug(iron) and plugged(iron)
        # Select a pluggedin iron

        iron_skirt(skirt, iron, ironing_board)
        # Implement the ironing process

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_skirt_2116_around_basket_for_clothes_2040(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_iron_with_water(iron:item):
    body:
        achieve has_water(iron)
        # Fill the iron with water if it requires steam for ironing

behavior prepare_to_iron(skirt:item, iron:item):
    body:
        achieve_once close_char(char, iron)
        # Move close to the iron
        achieve_once inhand(iron)
        # Hold the iron in hand
        achieve on(skirt, ironing_board)
        # Place the skirt on the ironing board

behavior iron_skirt(iron:item, skirt:item):
    body:
        achieve is_on(iron)
        # Turn on the iron to start ironing the skirt

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind iron: item where:
            is_iron(iron) and has_switch(iron)
        # Select an iron with a switch

        if not has_water(iron):
            fill_iron_with_water(iron)
        # If the iron requires water for steam, fill it

        prepare_to_iron(skirt, iron)
        iron_skirt(iron, skirt)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_skirt_2116_around_basket_for_clothes_2040(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)
        # Place the skirt on the ironing board
        achieve plugged(iron)
        # Ensure the iron is plugged in
        achieve is_on(iron)
        # Turn on the iron to begin ironing

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select a skirt item

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        iron_skirt(skirt, iron, ironing_board)
        # Perform the ironing of the skirt on the ironing board
 
#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)
        # Place the skirt on the ironing board
        achieve plugged(iron)
        # Ensure the iron is plugged in
        achieve is_on(iron)
        # Turn on the iron to begin ironing

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select a skirt item

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        iron_skirt(skirt, iron, ironing_board)
        # Perform the ironing of the skirt on the ironing board
 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)exp(clothes_skirt_2116, basket_for_clothes_2040)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)exp(iron_2117, ironing_board_2099)walk_executor(iron_2117)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Robot find: clothes_pants_2113, clothes_shirt_2114, clothes_socks_2115, clothes_skirt_2116, Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. 
##############################
From agent.py
exp(clothes_skirt_2116, basket_for_clothes_2040)
Find clothes_skirt_2116. 
##############################
From agent.py-> find a plan in act()
grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)exp(iron_2117, ironing_board_2099)walk_executor(iron_2117)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
grab_executor(clothes_skirt_2116)
Robot find: Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. Grabbing clothes_skirt_2116 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: iron_2117, Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. 
##############################
From agent.py
put_executor(clothes_skirt_2116, ironing_board_2099)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. ironing_board_2099 is close clothes_skirt_2116. clothes_skirt_2116 is close ironing_board_2099. clothes_skirt_2116 is on ironing_board_2099. clothes_skirt_2116 released by right hand. 
##############################
From agent.py
exp(iron_2117, ironing_board_2099)
Find iron_2117. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2117)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
walk_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. 
##############################
From agent.py
plugin_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. iron_2117 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. iron_2117 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to use the iron on the skirt to complete the ironing.
##############################
From agent.py
Human Instruction: You need to use the iron on the skirt to complete the ironing.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2040.
Action 2: look for clothes_skirt_2116 around basket_for_clothes_2040.
Action 3: Grab clothes_skirt_2116.
Action 4: Walk to ironing_board_2099.
Action 5: Put clothes_skirt_2116 on ironing_board_2099.
Action 6: look for iron_2117 around ironing_board_2099.
Action 7: Walk to iron_2117.
Action 8: Plug in iron_2117.
Action 9: Switch on iron_2117.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_clothes_with_iron(clothes:item, iron:item):
    body:
        achieve_once on(clothes, ironing_board_2099)
        # Place the clothes on the ironing board
        achieve_once is_on(iron)
        # Ensure the iron is on
        achieve close_char(char, clothes)
        # Make sure the character is close to the clothes

behavior __goal__():
    body:
        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt) and id[clothes_skirt] == 2116
        # Select the skirt

        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        # Select the iron

        iron_clothes_with_iron(clothes_skirt, iron)
        # Iron the clothes using the iron

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_clothes_with_iron(clothes:item, iron:item):
    body:
        achieve_once on(clothes, ironing_board_2099)
        # Place the clothes on the ironing board
        achieve_once is_on(iron)
        # Ensure the iron is on
        achieve close_char(char, clothes)
        # Make sure the character is close to the clothes

behavior __goal__():
    body:
        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt) and id[clothes_skirt] == 2116
        # Select the skirt

        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        # Select the iron

        iron_clothes_with_iron(clothes_skirt, iron)
        # Iron the clothes using the iron

##############################
From agent.py-> find a plan in act()
walk_executor(clothes_skirt_2116)
##############################
From agent.py
walk_executor(clothes_skirt_2116)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the clothes_skirt_2116. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to use the iron on the skirt to complete the ironing process.
##############################
From agent.py
Human Instruction: You need to use the iron on the skirt to complete the ironing process.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2040.
Action 2: look for clothes_skirt_2116 around basket_for_clothes_2040.
Action 3: Grab clothes_skirt_2116.
Action 4: Walk to ironing_board_2099.
Action 5: Put clothes_skirt_2116 on ironing_board_2099.
Action 6: look for iron_2117 around ironing_board_2099.
Action 7: Walk to iron_2117.
Action 8: Plug in iron_2117.
Action 9: Switch on iron_2117.
Action 10: Walk to clothes_skirt_2116.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_sauce_2101_around_cupboard_130(sauce:item):
    goal: not unknown(sauce)
    body:
        assert is_sauce(sauce)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(sauce,cupboard_instance)
        else:
            exp(sauce,cupboard_instance)
    eff:
        unknown[sauce]=False
        close[sauce,cupboard_instance]=True
        close[cupboard_instance,sauce]=True
    

#exp_behavior_end

#goal_representation
 
behavior switch_on_iron(iron:item):
    body:
        achieve is_on(iron)

behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)
        achieve_once close_char(char, iron)
        switch_on_iron(iron)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt item

        bind iron: item where:
            is_iron(iron) and plugged(iron)
        # Select a pluggedin iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        iron_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior switch_on_iron(iron:item):
    body:
        achieve is_on(iron)

behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)
        achieve_once close_char(char, iron)
        switch_on_iron(iron)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt item

        bind iron: item where:
            is_iron(iron) and plugged(iron)
        # Select a pluggedin iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        iron_skirt(skirt, iron, ironing_board)

##############################
From agent.py-> find a plan in act()
walk_executor(iron_2117)
##############################
From agent.py
walk_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to use the iron on the skirt to complete the ironing process. The current actions have prepared the skirt and iron, but the act of ironing hasn't been performed yet.
##############################
Task Summary:
Task Goal:
Directly iron a pair of skirt.
Action History:
['walk_executor(basket_for_clothes_2040)', 'grab_executor(clothes_skirt_2116)', 'walk_executor(ironing_board_2099)', 'put_executor(clothes_skirt_2116, ironing_board_2099)', 'walk_executor(iron_2117)', 'plugin_executor(iron_2117)', 'switchon_executor(iron_2117)', 'walk_executor(clothes_skirt_2116)', 'walk_executor(iron_2117)']
Time info:
Time consume: 101 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 181
goal generate times: 5
goal correct times: 0
action_num: 9

Task complete rate:
Keystate: k1 - Requires: 3 steps
Action Completion Rate: 0.0
Scene_id: 2
##############################
