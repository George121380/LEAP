From agent.py
Reset goals: The sub-goals are: 
['1. Find a bowl.', '2. Scoop ice cream into the bowl.', '3. Add jam on top of the ice cream.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2141_around_kitchen_counter_122(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

#exp_behavior_end

#goal_representation

behavior find_bowl(bowl:item):
    body:
        observe(bowl, "Determine the current location of the bowl")

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl item

        find_bowl(bowl)
        # Find the bowl

#goal_representation_end

##############################
From agent.py->reset_goal

behavior find_bowl(bowl:item):
    body:
        observe(bowl, "Determine the current location of the bowl")

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl item

        find_bowl(bowl)
        # Find the bowl

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(bowl_2140, kitchen_counter_122)walk_executor(bowl_2140)obs(bowl_2140, Determine the current location of the bowl)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, pot_78, fryingpan_2154, Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(bowl_2140, kitchen_counter_122)
Fail to find bowl_2140 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(bowl_2140, kitchen_counter_123)walk_executor(bowl_2140)obs(bowl_2140, Determine the current location of the bowl)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Robot find: tray_2068, oil_2149, knife_2035, food_kiwi_2054, food_orange_2027, Robot is close to the kitchen_counter_123. 
##############################
From agent.py
exp(bowl_2140, kitchen_counter_123)
Fail to find bowl_2140 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_199)exp(bowl_2140, table_199)walk_executor(bowl_2140)obs(bowl_2140, Determine the current location of the bowl)
##############################
From agent.py
walk_executor(table_199)
Robot find: wooden_spoon_2000, mat_203, tea_bag_2023, drawing_201, drawing_202, Robot is close to the table_199. 
##############################
From agent.py
exp(bowl_2140, table_199)
Fail to find bowl_2140 around table_199. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(bowl_2140, kitchen_counter_119)walk_executor(bowl_2140)obs(bowl_2140, Determine the current location of the bowl)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(bowl_2140, kitchen_counter_119)
Find bowl_2140. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2140)obs(bowl_2140, Determine the current location of the bowl)
##############################
From agent.py
walk_executor(bowl_2140)
Robot find: Robot is close to the kitchen_counter_119. Robot is close to the bowl_2140. 
##############################
From agent.py
obs(bowl_2140, Determine the current location of the bowl)
Get this information:  bowl_2140 is close to kitchen_counter_119. bowl_2140 is close to character_240. bowl_2140 is on kitchen_counter_119. bowl_2140 is inside dining_room_41. bowl_2140 is DIRTY.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_ice_cream_2097_around_fridge_126(food_ice_cream:item):
    goal: not unknown(food_ice_cream)
    body:
        assert is_food_ice_cream(food_ice_cream)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_ice_cream,fridge_instance)
        else:
            exp(food_ice_cream,fridge_instance)
    eff:
        unknown[food_ice_cream]=False
        close[food_ice_cream,fridge_instance]=True
        close[fridge_instance,food_ice_cream]=True
    

#exp_behavior_end

#goal_representation
behavior scoop_ice_cream_into_bowl(ice_cream:item, bowl:item):
    body:
        achieve_once inside(ice_cream, bowl)
        # Place the ice cream inside the bowl

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select the bowl with ID 2140

        bind ice_cream: item where:
            is_food_ice_cream(ice_cream)
        # Select the ice cream item

        scoop_ice_cream_into_bowl(ice_cream, bowl)
        # Scoop the ice cream into the bowl
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior scoop_ice_cream_into_bowl(ice_cream:item, bowl:item):
    body:
        achieve_once inside(ice_cream, bowl)
        # Place the ice cream inside the bowl

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select the bowl with ID 2140

        bind ice_cream: item where:
            is_food_ice_cream(ice_cream)
        # Select the ice cream item

        scoop_ice_cream_into_bowl(ice_cream, bowl)
        # Scoop the ice cream into the bowl
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_ice_cream_2097, fridge_126)walk_executor(food_ice_cream_2097)grab_executor(food_ice_cream_2097)walk_executor(bowl_2140)putin_executor(food_ice_cream_2097, bowl_2140)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_ice_cream_2097, fridge_126)
Find food_ice_cream_2097. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_ice_cream_2097)walk_executor(bowl_2140)putin_executor(food_ice_cream_2097, bowl_2140)
##############################
From agent.py
grab_executor(food_ice_cream_2097)
Robot find: Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. Grabbing food_ice_cream_2097 by right hand. 
##############################
From agent.py
walk_executor(bowl_2140)
Robot find: Robot is close to the food_ice_cream_2097. Robot is close to the bowl_2140. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
putin_executor(food_ice_cream_2097, bowl_2140)
Robot find: Robot is close to the food_ice_cream_2097. Robot is close to the bowl_2140. Robot is close to the kitchen_counter_119. food_ice_cream_2097 is inside bowl_2140. bowl_2140 is close food_ice_cream_2097. food_ice_cream_2097 is close bowl_2140. food_ice_cream_2097 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_food_2094_around_cupboard_118(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_food,cupboard_instance)
        else:
            exp(food_food,cupboard_instance)
    eff:
        unknown[food_food]=False
        close[food_food,cupboard_instance]=True
        close[cupboard_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
 
behavior add_jam_on_ice_cream(jam:item, ice_cream_bowl:item):
    body:
        achieve_once on(jam, ice_cream_bowl)
        # Add the jam on top of the ice cream

behavior __goal__():
    body:
        bind jam: item where:
            is_food_jam(jam)
        # Select the jam item

        bind ice_cream_bowl: item where:
            is_bowl(ice_cream_bowl) and inside(food_ice_cream_2097, ice_cream_bowl)
        # Select the bowl that already contains ice cream

        add_jam_on_ice_cream(jam, ice_cream_bowl)
        # Add jam on top of the ice cream


#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_food_2064_around_cupboard_118(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_food,cupboard_instance)
        else:
            exp(food_food,cupboard_instance)
    eff:
        unknown[food_food]=False
        close[food_food,cupboard_instance]=True
        close[cupboard_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
 
behavior add_jam_on_ice_cream(jam:item, bowl:item):
    body:
        achieve_once on(jam, bowl)
        # Add jam on top of the ice cream in the bowl

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2140
        # Select the bowl with ice cream

        bind jam: item where:
            is_food_jam(jam)
        # Select jam item

        add_jam_on_ice_cream(jam, bowl)
        # Add jam on top of the ice cream in the bowl

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior add_jam_on_ice_cream(jam:item, bowl:item):
    body:
        achieve_once on(jam, bowl)
        # Add jam on top of the ice cream in the bowl

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2140
        # Select the bowl with ice cream

        bind jam: item where:
            is_food_jam(jam)
        # Select jam item

        add_jam_on_ice_cream(jam, bowl)
        # Add jam on top of the ice cream in the bowl

##############################
From agent.py-> find a plan in act()
walk_executor(food_jam_2098)grab_executor(food_jam_2098)walk_executor(bowl_2140)put_executor(food_jam_2098, bowl_2140)
##############################
From agent.py
walk_executor(food_jam_2098)
Robot find: Robot is close to the food_jam_2098. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_jam_2098)
Robot find: Robot is close to the food_jam_2098. Robot is close to the fridge_126. Grabbing food_jam_2098 by right hand. 
##############################
From agent.py
walk_executor(bowl_2140)
Robot find: Robot is close to the food_jam_2098. Robot is close to the bowl_2140. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_jam_2098, bowl_2140)
Robot find: Robot is close to the food_jam_2098. Robot is close to the bowl_2140. Robot is close to the kitchen_counter_119. bowl_2140 is close food_jam_2098. food_jam_2098 is close bowl_2140. food_jam_2098 is on bowl_2140. food_jam_2098 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Get a bowl of ice cream and add some jam on the top.
Action History:
['walk_executor(kitchen_counter_122)', 'walk_executor(kitchen_counter_123)', 'walk_executor(table_199)', 'walk_executor(kitchen_counter_119)', 'walk_executor(bowl_2140)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'grab_executor(food_ice_cream_2097)', 'walk_executor(bowl_2140)', 'putin_executor(food_ice_cream_2097, bowl_2140)', 'walk_executor(food_jam_2098)', 'grab_executor(food_jam_2098)', 'walk_executor(bowl_2140)', 'put_executor(food_jam_2098, bowl_2140)']
Time info:
Time consume: 136 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 154
goal generate times: 4
goal correct times: 0
action_num: 15

Task complete rate:
Keystate: k1 - Requires: 3 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
