From agent.py
Reset goals: The sub-goals are: 
['1. Slice the chicken into small pieces.', '2. Serve the sliced chicken to the cat.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2050_around_fridge_140(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
behavior slice_chicken(chicken:item, knife:item, cutting_board:item):
    body:
        achieve_once on(chicken, cutting_board)
        # Place the chicken on the cutting board
        achieve_once cut(chicken)
        # Slice the chicken using the knife

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken item

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        slice_chicken(chicken, knife, cutting_board)
        # Slice the chicken using the knife on the cutting board
#goal_representation_end

##############################
From agent.py->reset_goal
behavior slice_chicken(chicken:item, knife:item, cutting_board:item):
    body:
        achieve_once on(chicken, cutting_board)
        # Place the chicken on the cutting board
        achieve_once cut(chicken)
        # Slice the chicken using the knife

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken item

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        slice_chicken(chicken, knife, cutting_board)
        # Slice the chicken using the knife on the cutting board
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(cutting_board_2080)put_executor(food_chicken_2050, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_chicken_2050)cut_executor(food_chicken_2050)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_chicken_2050, fridge_140)
Find food_chicken_2050. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_chicken_2050)walk_executor(cutting_board_2080)put_executor(food_chicken_2050, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_chicken_2050)cut_executor(food_chicken_2050)
##############################
From agent.py
grab_executor(food_chicken_2050)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. Grabbing food_chicken_2050 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the food_chicken_2050. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_chicken_2050, cutting_board_2080)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_chicken_2050 is close cutting_board_2080. cutting_board_2080 is close food_chicken_2050. food_chicken_2050 is on cutting_board_2080. food_chicken_2050 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_52)
Robot find: pot_54, Robot is close to the knifeblock_52. 
##############################
From agent.py
exp(knife_2036, knifeblock_52)
Fail to find knife_2036 around knifeblock_52. 
##############################
From agent.py-> find a plan in act()
walk_executor(ceilinglamp_41)exp(knife_2036, ceilinglamp_41)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_chicken_2050)cut_executor(food_chicken_2050)
##############################
From agent.py
walk_executor(ceilinglamp_41)
Robot find: Robot is close to the ceilinglamp_41. 
##############################
From agent.py
exp(knife_2036, ceilinglamp_41)
Fail to find knife_2036 around ceilinglamp_41. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(knife_2036, cupboard_131)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_chicken_2050)cut_executor(food_chicken_2050)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(knife_2036, cupboard_131)
Fail to find knife_2036 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(knife_2036, cupboard_130)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_chicken_2050)cut_executor(food_chicken_2050)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(knife_2036, cupboard_130)
Fail to find knife_2036 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(knife_2036, kitchen_counter_132)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_chicken_2050)cut_executor(food_chicken_2050)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the kitchen_counter_132. 
##############################
From agent.py
exp(knife_2036, kitchen_counter_132)
Fail to find knife_2036 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_307)exp(knife_2036, sink_307)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_chicken_2050)cut_executor(food_chicken_2050)
##############################
From agent.py
walk_executor(sink_307)
Robot find: detergent_2108, drawing_296, towel_rack_298, Robot is close to the bathroom_counter_306. Robot is close to the sink_307. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find knife_2036 ?
Answer: Robot, please go to the dining room labeled dining_room_1. You will find the target item, knife_2036, inside the dishwasher_143.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, please go to the dining room labeled dining_room_1. You will find the target item, knife_2036, inside the dishwasher_143.

The actions you have taken:
Action 1: Walk to fridge_140.
Action 2: Switch off fridge_140.
Action 3: Open fridge_140.
Action 4: look for food_chicken_2050 around fridge_140.
Action 5: Grab food_chicken_2050.
Action 6: Walk to cutting_board_2080.
Action 7: Put food_chicken_2050 on cutting_board_2080.
Action 8: Walk to knifeblock_52.
Action 9: look for knife_2036 around knifeblock_52.
Action 10: Walk to ceilinglamp_41.
Action 11: look for knife_2036 around ceilinglamp_41.
Action 12: Walk to cupboard_131.
Action 13: Open cupboard_131.
Action 14: look for knife_2036 around cupboard_131.
Action 15: Walk to cupboard_130.
Action 16: look for knife_2036 around cupboard_130.
Action 17: Walk to kitchen_counter_132.
Action 18: look for knife_2036 around kitchen_counter_132.
Action 19: Walk to sink_307.

##############################
From agent.py
exp(knife_2036, sink_307)
Fail to find knife_2036 around sink_307. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(knife_2036, dishwasher_143)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_chicken_2050)cut_executor(food_chicken_2050)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(knife_2036, dishwasher_143)
Find knife_2036. 
##############################
From agent.py-> find a plan in act()
grab_executor(knife_2036)walk_executor(food_chicken_2050)cut_executor(food_chicken_2050)
##############################
From agent.py
grab_executor(knife_2036)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. Grabbing knife_2036 by right hand. 
##############################
From agent.py
walk_executor(food_chicken_2050)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_chicken_2050. 
##############################
From agent.py
cut_executor(food_chicken_2050)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_chicken_2050. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_table_127(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(plate,table_instance)
        else:
            exp(plate,table_instance)
    eff:
        unknown[plate]=False
        close[plate,table_instance]=True
        close[table_instance,plate]=True
    

behavior find_cup_2088_around_sink_133(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(cup,sink_instance)
        else:
            exp(cup,sink_instance)
    eff:
        unknown[cup]=False
        close[cup,sink_instance]=True
        close[sink_instance,cup]=True
    

behavior find_chair_374_around_desk_375(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==375
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

behavior find_bowl_2095_around_table_127(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(bowl,table_instance)
        else:
            exp(bowl,table_instance)
    eff:
        unknown[bowl]=False
        close[bowl,table_instance]=True
        close[table_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior serve_sliced_chicken_to_cat(chicken:item, cat:item, table:item):
    body:
        achieve_once on(chicken, table)
        # Place the sliced chicken on a table
        achieve close_char(char, cat)
        # Approach the cat to serve the chicken

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken) and cut(chicken)
        # Select the chicken that has already been sliced

        bind cat: item where:
            is_cat(cat)
        # Select the cat item

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        foreach table: item:
            if is_table(table) and inside(table, dining_room):
                # Select a table in the dining room
                serve_sliced_chicken_to_cat(chicken, cat, table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_kitchen_counter_129(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(plate,kitchen_counter_instance)
        else:
            exp(plate,kitchen_counter_instance)
    eff:
        unknown[plate]=False
        close[plate,kitchen_counter_instance]=True
        close[kitchen_counter_instance,plate]=True
    

behavior find_bowl_2096_around_kitchen_counter_129(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

behavior find_cat_2082_around_bed_376(cat:item):
    goal: not unknown(cat)
    body:
        assert is_cat(cat)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(cat,bed_instance)
        else:
            exp(cat,bed_instance)
    eff:
        unknown[cat]=False
        close[cat,bed_instance]=True
        close[bed_instance,cat]=True
    

#exp_behavior_end

#goal_representation

behavior serve_sliced_chicken_to_cat(chicken:item, cat:item, table:item):
    body:
        achieve_once on(chicken, table)
        # Place the sliced chicken on the table
        achieve close(chicken, cat)
        # Ensure the chicken is close to the cat

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken) and cut(chicken)
        # Select the sliced chicken item

        bind cat: item where:
            is_cat(cat)
        # Select the cat item

        bind table: item where:
            is_table(table)
        # Select a table

        serve_sliced_chicken_to_cat(chicken, cat, table)
        # Serve the sliced chicken to the cat

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior serve_sliced_chicken_to_cat(chicken:item, cat:item, table:item):
    body:
        achieve_once on(chicken, table)
        # Place the sliced chicken on the table
        achieve close(chicken, cat)
        # Ensure the chicken is close to the cat

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken) and cut(chicken)
        # Select the sliced chicken item

        bind cat: item where:
            is_cat(cat)
        # Select the cat item

        bind table: item where:
            is_table(table)
        # Select a table

        serve_sliced_chicken_to_cat(chicken, cat, table)
        # Serve the sliced chicken to the cat

##############################
From agent.py-> find a plan in act()
grab_executor(food_chicken_2050)walk_executor(table_123)put_executor(food_chicken_2050, table_123)walk_executor(bed_376)exp(cat_2082, bed_376)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(cat_2082)put_executor(food_chicken_2050, cat_2082)
##############################
From agent.py
grab_executor(food_chicken_2050)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_chicken_2050. Grabbing food_chicken_2050 by left hand. 
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, laptop_2015, fork_2103, cup_2087, bowl_2095, drawing_118, Robot is close to the knife_2036. Robot is close to the food_chicken_2050. Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
put_executor(food_chicken_2050, table_123)
Robot find: Robot is close to the knife_2036. Robot is close to the food_chicken_2050. Robot is close to the mat_114. Robot is close to the table_123. food_chicken_2050 is close table_123. table_123 is close food_chicken_2050. food_chicken_2050 is on table_123. food_chicken_2050 released by left hand. 
##############################
From agent.py
walk_executor(bed_376)
Robot find: mat_386, clothes_underwear_2022, pillow_370, drawing_389, pillow_368, drawing_388, Robot is close to the knife_2036. Robot is close to the bed_376. Robot is close to the mat_386. 
##############################
From agent.py
exp(cat_2082, bed_376)
Fail to find cat_2082 around bed_376. 
##############################
From agent.py-> find a plan in act()
walk_executor(bed_264)exp(cat_2082, bed_264)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(cat_2082)put_executor(food_chicken_2050, cat_2082)
##############################
From agent.py
walk_executor(bed_264)
Robot find: clothes_scarf_2079, pillow_239, clothes_dress_2075, pillow_240, clothes_jacket_2078, mat_237, drawing_238, Robot is close to the knife_2036. Robot is close to the bed_264. 
##############################
From agent.py
exp(cat_2082, bed_264)
Fail to find cat_2082 around bed_264. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_189)open_executor(bookshelf_189)exp(cat_2082, bookshelf_189)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(cat_2082)put_executor(food_chicken_2050, cat_2082)
##############################
From agent.py
walk_executor(bookshelf_189)
Robot find: Robot is close to the knife_2036. Robot is close to the bookshelf_189. 
##############################
From agent.py
open_executor(bookshelf_189)
Robot find: Robot is close to the knife_2036. Robot is close to the bookshelf_189. bookshelf_189 is opened. 
##############################
From agent.py
exp(cat_2082, bookshelf_189)
Fail to find cat_2082 around bookshelf_189. 
##############################
From agent.py-> find a plan in act()
walk_executor(nightstand_262)exp(cat_2082, nightstand_262)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(cat_2082)put_executor(food_chicken_2050, cat_2082)
##############################
From agent.py
walk_executor(nightstand_262)
Robot find: headset_2086, Robot is close to the knife_2036. Robot is close to the nightstand_262. 
##############################
From agent.py
exp(cat_2082, nightstand_262)
Fail to find cat_2082 around nightstand_262. 
##############################
From agent.py-> find a plan in act()
walk_executor(couch_192)exp(cat_2082, couch_192)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(cat_2082)put_executor(food_chicken_2050, cat_2082)
##############################
From agent.py
walk_executor(couch_192)
Robot find: pillow_195, vacuum_cleaner_2094, drawing_196, cat_2082, Robot is close to the knife_2036. Robot is close to the couch_192. 
##############################
From agent.py
exp(cat_2082, couch_192)
Find cat_2082. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(cat_2082)put_executor(food_chicken_2050, cat_2082)
##############################
From agent.py
walk_executor(food_chicken_2050)
Robot find: Robot is close to the knife_2036. Robot is close to the food_chicken_2050. Robot is close to the table_123. 
##############################
From agent.py
grab_executor(food_chicken_2050)
Robot find: Robot is close to the knife_2036. Robot is close to the food_chicken_2050. Robot is close to the table_123. Grabbing food_chicken_2050 by left hand. 
##############################
From agent.py
walk_executor(cat_2082)
Robot find: Robot is close to the knife_2036. Robot is close to the food_chicken_2050. Robot is close to the couch_192. Robot is close to the cat_2082. 
##############################
From agent.py
put_executor(food_chicken_2050, cat_2082)
Robot find: Robot is close to the knife_2036. Robot is close to the food_chicken_2050. Robot is close to the couch_192. Robot is close to the cat_2082. food_chicken_2050 is close cat_2082. cat_2082 is close food_chicken_2050. food_chicken_2050 is on cat_2082. food_chicken_2050 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Slice some chicken and give it to my cat.
Action History:
['walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'grab_executor(food_chicken_2050)', 'walk_executor(cutting_board_2080)', 'put_executor(food_chicken_2050, cutting_board_2080)', 'walk_executor(knifeblock_52)', 'walk_executor(ceilinglamp_41)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(cupboard_130)', 'walk_executor(kitchen_counter_132)', 'walk_executor(sink_307)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'grab_executor(knife_2036)', 'walk_executor(food_chicken_2050)', 'cut_executor(food_chicken_2050)', 'grab_executor(food_chicken_2050)', 'walk_executor(table_123)', 'put_executor(food_chicken_2050, table_123)', 'walk_executor(bed_376)', 'walk_executor(bed_264)', 'walk_executor(bookshelf_189)', 'open_executor(bookshelf_189)', 'walk_executor(nightstand_262)', 'walk_executor(couch_192)', 'walk_executor(food_chicken_2050)', 'grab_executor(food_chicken_2050)', 'walk_executor(cat_2082)', 'put_executor(food_chicken_2050, cat_2082)']
Time info:
Time consume: 213 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 103
goal generate times: 3
goal correct times: 0
action_num: 31

Task complete rate:
1
Scene_id: 2
##############################
