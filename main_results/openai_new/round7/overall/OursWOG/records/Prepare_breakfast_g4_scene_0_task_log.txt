From agent.py
Reset goals: The sub-goals are: 
['1. Boil the pasta and cook the chicken.', '2. Combine the cooked chicken and pasta, then put them on a plate.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_2069_around_stove_2065(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2065
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(pot,stove_instance)
        else:
            exp(pot,stove_instance)
    eff:
        unknown[pot]=False
        close[pot,stove_instance]=True
        close[stove_instance,pot]=True
    

behavior find_food_chicken_2017_around_stove_2065(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2065
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(food_chicken,stove_instance)
        else:
            exp(food_chicken,stove_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,stove_instance]=True
        close[stove_instance,food_chicken]=True
    

behavior find_dry_pasta_2042_around_cupboard_229(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==229
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(dry_pasta,cupboard_instance)
        else:
            exp(dry_pasta,cupboard_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,cupboard_instance]=True
        close[cupboard_instance,dry_pasta]=True
    

behavior find_fryingpan_2083_around_stove_2065(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2065
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

#exp_behavior_end

#goal_representation
 
behavior boil_the_pasta(pasta:item, pot:item, stove:item):
    body:
        achieve_once has_water(pot)
        # Ensure the pot has water
        achieve_once inside(pasta, pot)
        # Place the pasta in the pot
        achieve_once is_on(stove)
        # Turn on the stove
        achieve on(pot, stove)
        # Place the pot with pasta on the stove

behavior cook_the_chicken(chicken:item, pan:item, stove:item):
    body:
        achieve_once on(chicken, pan)
        # Place the chicken in the pan
        achieve_once is_on(stove)
        # Ensure the stove is on
        achieve on(pan, stove)
        # Place the pan with chicken on the stove

behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select dry pasta

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select chicken

        bind pot: item where:
            is_pot(pot)
        # Select a pot to boil pasta

        bind pan: item where:
            is_fryingpan(pan)
        # Select a frying pan for cooking chicken

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        boil_the_pasta(pasta, pot, stove)
        cook_the_chicken(chicken, pan, stove)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior boil_the_pasta(pasta:item, pot:item, stove:item):
    body:
        achieve_once has_water(pot)
        # Ensure the pot has water
        achieve_once inside(pasta, pot)
        # Place the pasta in the pot
        achieve_once is_on(stove)
        # Turn on the stove
        achieve on(pot, stove)
        # Place the pot with pasta on the stove

behavior cook_the_chicken(chicken:item, pan:item, stove:item):
    body:
        achieve_once on(chicken, pan)
        # Place the chicken in the pan
        achieve_once is_on(stove)
        # Ensure the stove is on
        achieve on(pan, stove)
        # Place the pan with chicken on the stove

behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select dry pasta

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select chicken

        bind pot: item where:
            is_pot(pot)
        # Select a pot to boil pasta

        bind pan: item where:
            is_fryingpan(pan)
        # Select a frying pan for cooking chicken

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        boil_the_pasta(pasta, pot, stove)
        cook_the_chicken(chicken, pan, stove)

##############################
From agent.py-> find a plan in act()
walk_executor(stove_2065)open_executor(stove_2065)exp(pot_2069, stove_2065)walk_executor(pot_2069)open_executor(pot_2069)grab_executor(pot_2069)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(cupboard_229)open_executor(cupboard_229)exp(dry_pasta_2042, cupboard_229)walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(pot_2069)putin_executor(dry_pasta_2042, pot_2069)walk_executor(stove_2065)switchon_executor(stove_2065)put_executor(pot_2069, stove_2065)exp(fryingpan_2083, stove_2065)exp(food_chicken_2017, stove_2065)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(fryingpan_2083)put_executor(food_chicken_2017, fryingpan_2083)grab_executor(fryingpan_2083)walk_executor(stove_2065)put_executor(fryingpan_2083, stove_2065)
##############################
From agent.py
walk_executor(stove_2065)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
open_executor(stove_2065)
Robot find: Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. stove_2065 is opened. 
##############################
From agent.py
exp(pot_2069, stove_2065)
Find pot_2069. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_2069)open_executor(pot_2069)grab_executor(pot_2069)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(cupboard_229)open_executor(cupboard_229)exp(dry_pasta_2042, cupboard_229)walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(pot_2069)putin_executor(dry_pasta_2042, pot_2069)walk_executor(stove_2065)switchon_executor(stove_2065)put_executor(pot_2069, stove_2065)exp(food_chicken_2017, stove_2065)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(fryingpan_2083)put_executor(food_chicken_2017, fryingpan_2083)grab_executor(fryingpan_2083)walk_executor(stove_2065)put_executor(fryingpan_2083, stove_2065)
##############################
From agent.py
walk_executor(pot_2069)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. 
##############################
From agent.py
open_executor(pot_2069)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. pot_2069 is opened. 
##############################
From agent.py
grab_executor(pot_2069)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. Grabbing pot_2069 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: towel_rack_31, towel_rack_32, towel_rack_34, Robot is close to the pot_2069. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the pot_2069. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the pot_2069. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py
walk_executor(cupboard_229)
Robot find: Robot is close to the pot_2069. Robot is close to the cupboard_229. 
##############################
From agent.py
open_executor(cupboard_229)
Robot find: Robot is close to the pot_2069. Robot is close to the cupboard_229. cupboard_229 is opened. 
##############################
From agent.py
exp(dry_pasta_2042, cupboard_229)
Fail to find dry_pasta_2042 around cupboard_229. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_35)exp(dry_pasta_2042, wallshelf_35)walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(pot_2069)putin_executor(dry_pasta_2042, pot_2069)walk_executor(stove_2065)switchon_executor(stove_2065)put_executor(pot_2069, stove_2065)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_chicken_2017, fridge_289)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(fryingpan_2083)put_executor(food_chicken_2017, fryingpan_2083)grab_executor(fryingpan_2083)walk_executor(stove_2065)put_executor(fryingpan_2083, stove_2065)
##############################
From agent.py
walk_executor(wallshelf_35)
Robot find: towel_rack_33, Robot is close to the pot_2069. Robot is close to the wallshelf_35. 
##############################
From agent.py
exp(dry_pasta_2042, wallshelf_35)
Fail to find dry_pasta_2042 around wallshelf_35. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Cook the chicken and pasta.', '2. Combine the chicken and pasta on a plate.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2017_around_fridge_289(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_dry_pasta_2042_around_doorjamb_347(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind doorjamb_instance:item where:
            is_doorjamb(doorjamb_instance) and id[doorjamb_instance]==347
        achieve close_char(char,doorjamb_instance)
        if can_open(doorjamb_instance):
            achieve_once open(doorjamb_instance)
            exp(dry_pasta,doorjamb_instance)
        else:
            exp(dry_pasta,doorjamb_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,doorjamb_instance]=True
        close[doorjamb_instance,dry_pasta]=True
    

#exp_behavior_end

#goal_representation
 
behavior cook_chicken_and_pasta(chicken:item, pasta:item, pot:item, stove:item):
    body:
        achieve has_water(pot)
        achieve_once inside(chicken, pot)
        achieve_once inside(pasta, pot)
        achieve_once on(pot, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken to be cooked

        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select the pasta to be cooked

        bind pot: item where:
            is_pot(pot)
        # Select the pot for cooking

        bind stove: item where:
            is_stove(stove)
        # Select the stove for cooking

        cook_chicken_and_pasta(chicken, pasta, pot, stove)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior cook_chicken_and_pasta(chicken:item, pasta:item, pot:item, stove:item):
    body:
        achieve has_water(pot)
        achieve_once inside(chicken, pot)
        achieve_once inside(pasta, pot)
        achieve_once on(pot, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken to be cooked

        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select the pasta to be cooked

        bind pot: item where:
            is_pot(pot)
        # Select the pot for cooking

        bind stove: item where:
            is_stove(stove)
        # Select the stove for cooking

        cook_chicken_and_pasta(chicken, pasta, pot, stove)

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_chicken_2017, fridge_289)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(pot_2069)putin_executor(food_chicken_2017, pot_2069)walk_executor(doorjamb_347)exp(dry_pasta_2042, doorjamb_347)walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(pot_2069)putin_executor(dry_pasta_2042, pot_2069)walk_executor(stove_2065)put_executor(pot_2069, stove_2065)switchon_executor(stove_2065)
##############################
From agent.py
walk_executor(fridge_289)
Robot find: Robot is close to the pot_2069. Robot is close to the fridge_289. 
##############################
From agent.py
switchoff_executor(fridge_289)
Robot find: Robot is close to the pot_2069. Robot is close to the fridge_289. fridge_289 is turned off. 
##############################
From agent.py
open_executor(fridge_289)
Robot find: sauce_2078, food_steak_2008, food_apple_2009, food_bacon_2010, food_banana_2011, food_bread_2012, food_cake_2013, food_carrot_2014, food_cereal_2015, food_cheese_2016, food_chicken_2017, food_dessert_2018, food_donut_2019, food_egg_2020, food_fish_2021, food_food_2022, food_fruit_2023, food_hamburger_2024, food_ice_cream_2025, food_jam_2026, food_kiwi_2027, food_lemon_2028, food_noodles_2029, food_oatmeal_2030, food_orange_2031, food_onion_2032, food_peanut_butter_2033, food_pizza_2034, food_potato_2035, food_rice_2036, food_salt_2037, food_snack_2038, food_sugar_2039, food_turkey_2040, food_vegetable_2041, dry_pasta_2042, milk_2043, Robot is close to the pot_2069. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. fridge_289 is opened. 
##############################
From agent.py
exp(food_chicken_2017, fridge_289)
Find food_chicken_2017. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_chicken_2017)putin_executor(food_chicken_2017, pot_2069)grab_executor(dry_pasta_2042)putin_executor(dry_pasta_2042, pot_2069)walk_executor(stove_2065)put_executor(pot_2069, stove_2065)switchon_executor(stove_2065)
##############################
From agent.py
grab_executor(food_chicken_2017)
Robot find: Robot is close to the pot_2069. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. Grabbing food_chicken_2017 by left hand. 
##############################
From agent.py
putin_executor(food_chicken_2017, pot_2069)
Robot find: Robot is close to the pot_2069. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. pot_2069 is close food_chicken_2017. food_chicken_2017 is inside pot_2069. food_chicken_2017 is close pot_2069. food_chicken_2017 released by left hand. 
##############################
From agent.py
grab_executor(dry_pasta_2042)
Robot find: Robot is close to the pot_2069. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. Grabbing dry_pasta_2042 by left hand. 
##############################
From agent.py
putin_executor(dry_pasta_2042, pot_2069)
Robot find: Robot is close to the pot_2069. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. pot_2069 is close dry_pasta_2042. dry_pasta_2042 is close pot_2069. dry_pasta_2042 is inside pot_2069. dry_pasta_2042 released by left hand. 
##############################
From agent.py
walk_executor(stove_2065)
Robot find: Robot is close to the pot_2069. Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
put_executor(pot_2069, stove_2065)
Robot find: Robot is close to the pot_2069. Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. pot_2069 is close stove_2065. pot_2069 is on stove_2065. stove_2065 is close pot_2069. pot_2069 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2065)
Robot find: Robot is close to the pot_2069. Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. stove_2065 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_1000_around_coffee_table_2068(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind coffee_table_instance:item where:
            is_coffee_table(coffee_table_instance) and id[coffee_table_instance]==2068
        achieve close_char(char,coffee_table_instance)
        if can_open(coffee_table_instance):
            achieve_once open(coffee_table_instance)
            exp(plate,coffee_table_instance)
        else:
            exp(plate,coffee_table_instance)
    eff:
        unknown[plate]=False
        close[plate,coffee_table_instance]=True
        close[coffee_table_instance,plate]=True
    

#exp_behavior_end

#goal_representation

behavior combine_chicken_and_pasta_on_plate(chicken:item, pasta:item, plate:item):
    body:
        achieve_once on(chicken, plate)
        achieve_once on(pasta, plate)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the cooked chicken

        bind dry_pasta: item where:
            is_dry_pasta(dry_pasta)
        # Select the cooked pasta

        bind plate: item where:
            is_plate(plate)
        # Select a plate to place the chicken and pasta on

        combine_chicken_and_pasta_on_plate(chicken, dry_pasta, plate)

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior combine_chicken_and_pasta_on_plate(chicken:item, pasta:item, plate:item):
    body:
        achieve_once on(chicken, plate)
        achieve_once on(pasta, plate)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the cooked chicken

        bind dry_pasta: item where:
            is_dry_pasta(dry_pasta)
        # Select the cooked pasta

        bind plate: item where:
            is_plate(plate)
        # Select a plate to place the chicken and pasta on

        combine_chicken_and_pasta_on_plate(chicken, dry_pasta, plate)

##############################
From agent.py-> find a plan in act()
walk_executor(coffee_table_2068)exp(plate_1000, coffee_table_2068)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(plate_1000)put_executor(food_chicken_2017, plate_1000)walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(plate_1000)put_executor(dry_pasta_2042, plate_1000)
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot find: Robot is close to the coffee_table_2068. 
##############################
From agent.py
exp(plate_1000, coffee_table_2068)
Fail to find plate_1000 around coffee_table_2068. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_1001)open_executor(dishwasher_1001)exp(plate_1000, dishwasher_1001)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(plate_1000)put_executor(food_chicken_2017, plate_1000)walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(plate_1000)put_executor(dry_pasta_2042, plate_1000)
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. 
##############################
From agent.py
open_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is opened. 
##############################
From agent.py
exp(plate_1000, dishwasher_1001)
Fail to find plate_1000 around dishwasher_1001. 
##############################
From agent.py-> find a plan in act()
walk_executor(photoframe_430)exp(plate_1000, photoframe_430)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(plate_1000)put_executor(food_chicken_2017, plate_1000)walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(plate_1000)put_executor(dry_pasta_2042, plate_1000)
##############################
From agent.py
walk_executor(photoframe_430)
Robot find: drawing_402, drawing_403, drawing_404, book_2066, book_2067, Robot is close to the bookshelf_354. 
##############################
From agent.py
exp(plate_1000, photoframe_430)
Fail to find plate_1000 around photoframe_430. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_107)exp(plate_1000, table_107)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(plate_1000)put_executor(food_chicken_2017, plate_1000)walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(plate_1000)put_executor(dry_pasta_2042, plate_1000)
##############################
From agent.py
walk_executor(table_107)
Robot find: mat_173, clothes_hat_2045, clothes_gloves_2046, drawing_176, drawing_174, drawing_175, Robot is close to the table_107. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find plate_1000 ?
Answer: The target item, plate_1000, can be found in dining_room_201. It is located on top of sink_231. To identify sink_231, look for the only sink in the dining room, and the plate will be directly on it.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item, plate_1000, can be found in dining_room_201. It is located on top of sink_231. To identify sink_231, look for the only sink in the dining room, and the plate will be directly on it.

The actions you have taken:
Action 1: Walk to stove_2065.
Action 2: Open stove_2065.
Action 3: look for pot_2069 around stove_2065.
Action 4: Walk to pot_2069.
Action 5: Open pot_2069.
Action 6: Grab pot_2069.
Action 7: Walk to faucet_43.
Action 8: Switch on faucet_43.
Action 9: Switch off faucet_43.
Action 10: Walk to cupboard_229.
Action 11: Open cupboard_229.
Action 12: look for dry_pasta_2042 around cupboard_229.
Action 13: Walk to wallshelf_35.
Action 14: look for dry_pasta_2042 around wallshelf_35.
Action 15: Walk to fridge_289.
Action 16: Switch off fridge_289.
Action 17: Open fridge_289.
Action 18: look for food_chicken_2017 around fridge_289.
Action 19: Grab food_chicken_2017.
Action 20: Put food_chicken_2017 into pot_2069.
Action 21: Grab dry_pasta_2042.
Action 22: Put dry_pasta_2042 into pot_2069.
Action 23: Walk to stove_2065.
Action 24: Put pot_2069 on stove_2065.
Action 25: Switch on stove_2065.
Action 26: Walk to coffee_table_2068.
Action 27: look for plate_1000 around coffee_table_2068.
Action 28: Walk to dishwasher_1001.
Action 29: Open dishwasher_1001.
Action 30: look for plate_1000 around dishwasher_1001.
Action 31: Walk to photoframe_430.
Action 32: look for plate_1000 around photoframe_430.
Action 33: Walk to table_107.

##############################
From agent.py
exp(plate_1000, table_107)
Fail to find plate_1000 around table_107. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_231)exp(plate_1000, sink_231)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(plate_1000)put_executor(food_chicken_2017, plate_1000)walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(plate_1000)put_executor(dry_pasta_2042, plate_1000)
##############################
From agent.py
walk_executor(sink_231)
Robot find: soap_2054, plate_1000, Robot is close to the kitchen_counter_230. Robot is close to the sink_231. 
##############################
From agent.py
exp(plate_1000, sink_231)
Find plate_1000. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(plate_1000)put_executor(food_chicken_2017, plate_1000)walk_executor(dry_pasta_2042)grab_executor(dry_pasta_2042)walk_executor(plate_1000)put_executor(dry_pasta_2042, plate_1000)
##############################
From agent.py
walk_executor(food_chicken_2017)
Robot find: Robot is close to the food_chicken_2017. Robot is close to the pot_2069. 
##############################
From agent.py
grab_executor(food_chicken_2017)
Robot find: Robot is close to the food_chicken_2017. Robot is close to the pot_2069. Grabbing food_chicken_2017 by right hand. 
##############################
From agent.py
walk_executor(plate_1000)
Robot find: Robot is close to the food_chicken_2017. Robot is close to the plate_1000. Robot is close to the sink_231. 
##############################
From agent.py
put_executor(food_chicken_2017, plate_1000)
Robot find: Robot is close to the food_chicken_2017. Robot is close to the plate_1000. Robot is close to the sink_231. plate_1000 is close food_chicken_2017. food_chicken_2017 is close plate_1000. food_chicken_2017 is on plate_1000. food_chicken_2017 released by right hand. 
##############################
From agent.py
walk_executor(dry_pasta_2042)
Robot find: Robot is close to the dry_pasta_2042. Robot is close to the pot_2069. 
##############################
From agent.py
grab_executor(dry_pasta_2042)
Robot find: Robot is close to the dry_pasta_2042. Robot is close to the pot_2069. Grabbing dry_pasta_2042 by right hand. 
##############################
From agent.py
walk_executor(plate_1000)
Robot find: Robot is close to the dry_pasta_2042. Robot is close to the plate_1000. Robot is close to the sink_231. 
##############################
From agent.py
put_executor(dry_pasta_2042, plate_1000)
Robot find: Robot is close to the dry_pasta_2042. Robot is close to the plate_1000. Robot is close to the sink_231. dry_pasta_2042 is close plate_1000. plate_1000 is close dry_pasta_2042. dry_pasta_2042 is on plate_1000. dry_pasta_2042 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make chicken pasta, put it in a plate.
Action History:
['walk_executor(stove_2065)', 'open_executor(stove_2065)', 'walk_executor(pot_2069)', 'open_executor(pot_2069)', 'grab_executor(pot_2069)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'switchoff_executor(faucet_43)', 'walk_executor(cupboard_229)', 'open_executor(cupboard_229)', 'walk_executor(wallshelf_35)', 'walk_executor(fridge_289)', 'switchoff_executor(fridge_289)', 'open_executor(fridge_289)', 'grab_executor(food_chicken_2017)', 'putin_executor(food_chicken_2017, pot_2069)', 'grab_executor(dry_pasta_2042)', 'putin_executor(dry_pasta_2042, pot_2069)', 'walk_executor(stove_2065)', 'put_executor(pot_2069, stove_2065)', 'switchon_executor(stove_2065)', 'walk_executor(coffee_table_2068)', 'walk_executor(dishwasher_1001)', 'open_executor(dishwasher_1001)', 'walk_executor(photoframe_430)', 'walk_executor(table_107)', 'walk_executor(sink_231)', 'walk_executor(food_chicken_2017)', 'grab_executor(food_chicken_2017)', 'walk_executor(plate_1000)', 'put_executor(food_chicken_2017, plate_1000)', 'walk_executor(dry_pasta_2042)', 'grab_executor(dry_pasta_2042)', 'walk_executor(plate_1000)', 'put_executor(dry_pasta_2042, plate_1000)']
Time info:
Time consume: 285 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 31
goal generate times: 3
goal correct times: 0
action_num: 35

Task complete rate:
Keystate: k1 - Requires: 0 steps
Keystate: k2 - Requires: 11 steps
Keystate: k3 - Requires: 6 steps
Keystate: k4 - Requires: 0 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
