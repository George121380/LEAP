From agent.py
Reset goals: The sub-goals are: 
['1. Locate the shirt that needs ironing.  ', '2. Iron the shirt.  ', '3. Place the ironed shirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2114_around_ironing_board_2099(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_shirt,ironing_board_instance)
        else:
            exp(clothes_shirt,ironing_board_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,ironing_board_instance]=True
        close[ironing_board_instance,clothes_shirt]=True
    

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation

def has_shirt_visible():
    # Function to check if there is a shirt that is visible and can be identified
    symbol visible=exists o: item : (is_clothes_shirt(o) and visited(o))
    return visible

behavior __goal__():
    body:
        if has_shirt_visible():
            # If a shirt has already been identified as visible
            bind shirt: item where:
                is_clothes_shirt(shirt) and visited(shirt)
            # Move closer to the identified shirt
            achieve close_char(char, shirt)

        else:
            # If no shirt is found as visible, begin observation to locate one
            foreach shirt: item:
                if is_clothes_shirt(shirt) and not visited(shirt):
                    observe(shirt, "Check the location of the shirt")

#goal_representation_end

##############################
From agent.py->reset_goal

def has_shirt_visible():
    # Function to check if there is a shirt that is visible and can be identified
    symbol visible=exists o: item : (is_clothes_shirt(o) and visited(o))
    return visible

behavior __goal__():
    body:
        if has_shirt_visible():
            # If a shirt has already been identified as visible
            bind shirt: item where:
                is_clothes_shirt(shirt) and visited(shirt)
            # Move closer to the identified shirt
            achieve close_char(char, shirt)

        else:
            # If no shirt is found as visible, begin observation to locate one
            foreach shirt: item:
                if is_clothes_shirt(shirt) and not visited(shirt):
                    observe(shirt, "Check the location of the shirt")

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)exp(clothes_shirt_2114, ironing_board_2099)walk_executor(clothes_shirt_2114)obs(clothes_shirt_2114, Check the location of the shirt)
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: iron_2117, Robot is close to the ironing_board_2099. 
##############################
From agent.py
exp(clothes_shirt_2114, ironing_board_2099)
Fail to find clothes_shirt_2114 around ironing_board_2099. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)exp(clothes_shirt_2114, basket_for_clothes_2040)walk_executor(clothes_shirt_2114)obs(clothes_shirt_2114, Check the location of the shirt)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Robot find: clothes_pants_2113, clothes_shirt_2114, clothes_socks_2115, clothes_skirt_2116, Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. 
##############################
From agent.py
exp(clothes_shirt_2114, basket_for_clothes_2040)
Find clothes_shirt_2114. 
##############################
From agent.py-> find a plan in act()
obs(clothes_shirt_2114, Check the location of the shirt)
##############################
From agent.py
obs(clothes_shirt_2114, Check the location of the shirt)
Get this information:  clothes_shirt_2114 is close to basket_for_clothes_2040. clothes_shirt_2114 is close to character_219. clothes_shirt_2114 is inside basket_for_clothes_2040. clothes_shirt_2114 is inside bathroom_265. clothes_shirt_2114 is DIRTY.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2098_around_washing_machine_2041(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(cleaning_solution,washing_machine_instance)
        else:
            exp(cleaning_solution,washing_machine_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,washing_machine_instance]=True
        close[washing_machine_instance,cleaning_solution]=True
    

behavior find_detergent_2108_around_washing_machine_2041(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation

behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve_once is_on(iron)
        # Ensure the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select clothes_shirt_2114

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2099
        # Select ironing_board_2099

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        iron_shirt(shirt, iron, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve_once is_on(iron)
        # Ensure the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select clothes_shirt_2114

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2099
        # Select ironing_board_2099

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        iron_shirt(shirt, iron, ironing_board)

##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2114)walk_executor(ironing_board_2099)put_executor(clothes_shirt_2114, ironing_board_2099)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
grab_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. Grabbing clothes_shirt_2114 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. 
##############################
From agent.py
put_executor(clothes_shirt_2114, ironing_board_2099)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. ironing_board_2099 is close clothes_shirt_2114. clothes_shirt_2114 is close ironing_board_2099. clothes_shirt_2114 is on ironing_board_2099. clothes_shirt_2114 released by right hand. 
##############################
From agent.py
plugin_executor(iron_2117)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. iron_2117 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2117)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. iron_2117 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to actually iron the shirt. The current actions have only led to placing the shirt on the ironing board and turning on the iron, but no action has been taken to use the iron on the shirt.
##############################
From agent.py
Human Instruction: The robot needs to actually iron the shirt. The current actions have only led to placing the shirt on the ironing board and turning on the iron, but no action has been taken to use the iron on the shirt.

The actions you have taken:
Action 1: Walk to ironing_board_2099.
Action 2: look for clothes_shirt_2114 around ironing_board_2099.
Action 3: Walk to basket_for_clothes_2040.
Action 4: look for clothes_shirt_2114 around basket_for_clothes_2040.
Action 5: Observe around clothes_shirt_2114 with the question of Check the location of the shirt.
Action 6: Grab clothes_shirt_2114.
Action 7: Walk to ironing_board_2099.
Action 8: Put clothes_shirt_2114 on ironing_board_2099.
Action 9: Plug in iron_2117.
Action 10: Switch on iron_2117.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2078_around_bed_376(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(clothes_jacket,bed_instance)
        else:
            exp(clothes_jacket,bed_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,bed_instance]=True
        close[bed_instance,clothes_jacket]=True
    

behavior find_cleaning_solution_2098_around_sink_133(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(cleaning_solution,sink_instance)
        else:
            exp(cleaning_solution,sink_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,sink_instance]=True
        close[sink_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board) 
        # Ensure the shirt is on the ironing board
        achieve close_char(char, iron)
        # Move the character closer to the iron
        achieve_once clean(shirt)
        # The task of ironing the shirt results in it being cleanwellironed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt that needs ironing

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(shirt, iron, ironing_board)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_apple_2043_around_fridge_140(food_apple:item):
    goal: not unknown(food_apple)
    body:
        assert is_food_apple(food_apple)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_apple,fridge_instance)
        else:
            exp(food_apple,fridge_instance)
    eff:
        unknown[food_apple]=False
        close[food_apple,fridge_instance]=True
        close[fridge_instance,food_apple]=True
    

behavior find_food_orange_2008_around_fridge_140(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_orange,fridge_instance)
        else:
            exp(food_orange,fridge_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,fridge_instance]=True
        close[fridge_instance,food_orange]=True
    

behavior find_mouse_380_around_mousepad_381(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind mousepad_instance:item where:
            is_mousepad(mousepad_instance) and id[mousepad_instance]==381
        achieve close_char(char,mousepad_instance)
        if can_open(mousepad_instance):
            achieve_once open(mousepad_instance)
            exp(mouse,mousepad_instance)
        else:
            exp(mouse,mousepad_instance)
    eff:
        unknown[mouse]=False
        close[mouse,mousepad_instance]=True
        close[mousepad_instance,mouse]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_the_shirt(shirt:item, iron:item):
    body:
        achieve_once clean(shirt)
        # Iron the shirt with the iron

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and on(shirt, ironing_board_2099)
        # Select clothes_shirt_2114 on the ironing board

        bind iron: item where:
            is_iron(iron) and is_on(iron)
        # Select iron_2117, which is currently on

        iron_the_shirt(shirt, iron)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board_2099; available variables: [Variable<shirt: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_cleaning_solution_2098_around_sink_133(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(cleaning_solution,sink_instance)
        else:
            exp(cleaning_solution,sink_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,sink_instance]=True
        close[sink_instance,cleaning_solution]=True
    

#goal_representation

behavior iron_the_shirt(shirt:item, iron:item):
    body:
        achieve_once clean(shirt)
        # Iron the shirt with the iron

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and on(shirt, ironing_board_2099)
        # Select clothes_shirt_2114 on the ironing board

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2099

        bind iron: item where:
            is_iron(iron) and is_on(iron)
        # Select iron_2117, which is currently on

        iron_the_shirt(shirt, iron)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board_2099; available variables: [Variable<shirt: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_apple_2043_around_fridge_140(food_apple:item):
    goal: not unknown(food_apple)
    body:
        assert is_food_apple(food_apple)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_apple,fridge_instance)
        else:
            exp(food_apple,fridge_instance)
    eff:
        unknown[food_apple]=False
        close[food_apple,fridge_instance]=True
        close[fridge_instance,food_apple]=True
    

#goal_representation
 
behavior iron_the_shirt(shirt:item, iron:item):
    body:
        achieve_once clean(shirt)
        # Iron the shirt with the iron

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and on(shirt, ironing_board)
        # Select clothes_shirt_2114 on the ironing board

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2099

        bind iron: item where:
            is_iron(iron) and is_on(iron)
        # Select iron_2117, which is currently on

        iron_the_shirt(shirt, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(clothes_shirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(clothes_shirt, ironing_board)
        # Ensure the shirt is on the ironing board for ironing
        achieve_once is_on(iron)
        # Ensure the iron is turned on for use on the shirt

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt] == 2114
        # Select clothes_shirt_2114 that needs ironing

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2099
        # Select ironing_board_2099 on which the shirt is placed

        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        # Select iron_2117 for ironing

        iron_shirt(clothes_shirt, iron, ironing_board)
        # Iron the shirt on the ironing board

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2078_around_washing_machine_2041(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt: item, iron: item, ironing_board: item):
    body:
        achieve_once on(shirt, ironing_board) # Ensure the shirt is on the ironing board to iron it
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt with ID 2114

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2099
        # Select the ironing board with ID 2099

        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        # Select the iron with ID 2117

        iron_shirt(shirt, iron, ironing_board)


#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve is_on(iron) # Ensure the iron is on
        # At this point, assume using the iron on the shirt to complete the task

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select clothes_shirt_2114

        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        # Select iron_2117

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2099
        # Select ironing_board_2099

        iron_shirt(shirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2098_around_sink_133(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(cleaning_solution,sink_instance)
        else:
            exp(cleaning_solution,sink_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,sink_instance]=True
        close[sink_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board
        achieve has_water(iron)
        # Ensure iron has water for steam if needed
        achieve plugged(iron)
        # Make sure the iron is plugged in
        achieve is_on(iron)
        # Ensure the iron is turned on
        achieve clean(shirt)
        # Iron the shirt to clean it, ensuring its wrinklefree

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select clothes_shirt_2114

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2099
        # Select ironing_board_2099

        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        # Select iron_2117

        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board
        achieve has_water(iron)
        # Ensure iron has water for steam if needed
        achieve plugged(iron)
        # Make sure the iron is plugged in
        achieve is_on(iron)
        # Ensure the iron is turned on
        achieve clean(shirt)
        # Iron the shirt to clean it, ensuring its wrinklefree

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select clothes_shirt_2114

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2099
        # Select ironing_board_2099

        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        # Select iron_2117

        iron_shirt(shirt, ironing_board, iron)

##############################
From agent.py-> find a plan in act()
walk_executor(iron_2117)grab_executor(iron_2117)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)walk_executor(kitchen_counter_132)put_executor(iron_2117, kitchen_counter_132)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. 
##############################
From agent.py
grab_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. Grabbing iron_2117 by right hand. 
##############################
From agent.py
walk_executor(faucet_308)
Robot find: drawing_296, towel_rack_298, Robot is close to the iron_2117. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. 
##############################
From agent.py
switchoff_executor(faucet_308)
Robot find: Robot is close to the iron_2117. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. faucet_308 is turned off. 
##############################
From agent.py
walk_executor(clothes_shirt_2114)
Robot find: Robot is close to the iron_2117. Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. 
##############################
From agent.py
grab_executor(clothes_shirt_2114)
Robot find: Robot is close to the iron_2117. Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. Grabbing clothes_shirt_2114 by left hand. 
##############################
From agent.py
wash_executor(clothes_shirt_2114)
Robot find: Robot is close to the iron_2117. Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. clothes_shirt_2114 is cleaned. 
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: pot_54, Robot is close to the iron_2117. Robot is close to the clothes_shirt_2114. Robot is close to the kitchen_counter_132. 
##############################
From agent.py
put_executor(iron_2117, kitchen_counter_132)
Robot find: Robot is close to the iron_2117. Robot is close to the clothes_shirt_2114. Robot is close to the kitchen_counter_132. iron_2117 is close kitchen_counter_132. iron_2117 is on kitchen_counter_132. kitchen_counter_132 is close iron_2117. iron_2117 released by right hand. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the iron_2117. Robot is close to the clothes_shirt_2114. Robot is close to the kitchen_counter_132. faucet_134 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to actually use the iron on the shirt to iron out the wrinkles. No action has yet been taken to do this.
##############################
From agent.py
Human Instruction: The robot needs to actually use the iron on the shirt to iron out the wrinkles. No action has yet been taken to do this.

The actions you have taken:
Action 1: Walk to ironing_board_2099.
Action 2: look for clothes_shirt_2114 around ironing_board_2099.
Action 3: Walk to basket_for_clothes_2040.
Action 4: look for clothes_shirt_2114 around basket_for_clothes_2040.
Action 5: Observe around clothes_shirt_2114 with the question of Check the location of the shirt.
Action 6: Grab clothes_shirt_2114.
Action 7: Walk to ironing_board_2099.
Action 8: Put clothes_shirt_2114 on ironing_board_2099.
Action 9: Plug in iron_2117.
Action 10: Switch on iron_2117.
Action 11: Walk to iron_2117.
Action 12: Grab iron_2117.
Action 13: Walk to faucet_308.
Action 14: Switch off faucet_308.
Action 15: Walk to clothes_shirt_2114.
Action 16: Grab clothes_shirt_2114.
Action 17: Wash clothes_shirt_2114.
Action 18: Walk to kitchen_counter_132.
Action 19: Put iron_2117 on kitchen_counter_132.
Action 20: Switch off faucet_134.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2098_around_bathroom_cabinet_305(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
def has_wrinkles_on_shirt(shirt:item):
    # Function to check if the shirt has wrinkles
    symbol is_wrinkled=dirty(shirt)
    return is_wrinkled

behavior iron_shirt_with_iron(shirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board) # Place the shirt on the ironing board
        achieve_once plugged(iron) # Ensure the iron is plugged in
        if not is_on(iron):
            achieve_once is_on(iron)  # Turn on the iron
        while has_wrinkles_on_shirt(shirt):
            achieve_once clean(shirt) # Iron the shirt until it has no wrinkles

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2099
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        # Select the iron to be used
        
        iron_shirt_with_iron(shirt, iron, ironing_board) # Iron the shirt

#goal_representation_end

##############################
Error is:

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2078_around_washing_machine_2041(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

behavior find_clothes_underwear_2022_around_washing_machine_2041(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_underwear,washing_machine_instance)
        else:
            exp(clothes_underwear,washing_machine_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,washing_machine_instance]=True
        close[washing_machine_instance,clothes_underwear]=True
    

behavior find_clothes_hat_2076_around_bench_124(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==124
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(clothes_hat,bench_instance)
        else:
            exp(clothes_hat,bench_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,bench_instance]=True
        close[bench_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_the_shirt(shirt: item, iron: item, ironing_board: item):
    body:
        achieve_once on(shirt, ironing_board) 
        achieve_once is_on(iron)
        achieve close_char(char, shirt)
        # Ensure the shirt is on the ironing board and the iron is on, get close to the shirt for ironing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the clothes_shirt_2114

        bind iron: item where:
            is_iron(iron)
        # Select iron_2117 for ironing
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select ironing_board_2099 to place the shirt on

        iron_the_shirt(shirt, iron, ironing_board)
        # Iron the shirt

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_the_shirt(shirt: item, iron: item, ironing_board: item):
    body:
        achieve_once on(shirt, ironing_board) 
        achieve_once is_on(iron)
        achieve close_char(char, shirt)
        # Ensure the shirt is on the ironing board and the iron is on, get close to the shirt for ironing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the clothes_shirt_2114

        bind iron: item where:
            is_iron(iron)
        # Select iron_2117 for ironing
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select ironing_board_2099 to place the shirt on

        iron_the_shirt(shirt, iron, ironing_board)
        # Iron the shirt

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)put_executor(clothes_shirt_2114, ironing_board_2099)walk_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. 
##############################
From agent.py
put_executor(clothes_shirt_2114, ironing_board_2099)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. clothes_shirt_2114 is close ironing_board_2099. clothes_shirt_2114 is on ironing_board_2099. clothes_shirt_2114 released by left hand. 
##############################
From agent.py
walk_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to use the iron on the shirt to iron out the wrinkles. The shirt is placed on the ironing board, and the iron is on and ready, but the action of actually ironing the shirt has not been performed.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cat_2082_around_bed_376(cat:item):
    goal: not unknown(cat)
    body:
        assert is_cat(cat)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(cat,bed_instance)
        else:
            exp(cat,bed_instance)
    eff:
        unknown[cat]=False
        close[cat,bed_instance]=True
        close[bed_instance,cat]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ironed_shirt_on_bed(shirt: item, bed: item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt that needs to be placed on the bed

        bind bed: item where:
            is_bed(bed)
        # Select a bed to place the shirt on

        place_ironed_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior place_ironed_shirt_on_bed(shirt: item, bed: item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt that needs to be placed on the bed

        bind bed: item where:
            is_bed(bed)
        # Select a bed to place the shirt on

        place_ironed_shirt_on_bed(shirt, bed)

##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2114)walk_executor(bed_264)put_executor(clothes_shirt_2114, bed_264)
##############################
From agent.py
grab_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. Grabbing clothes_shirt_2114 by right hand. 
##############################
From agent.py
walk_executor(bed_264)
Robot find: clothes_scarf_2079, pillow_239, clothes_dress_2075, pillow_240, clothes_jacket_2078, mat_237, drawing_238, Robot is close to the clothes_shirt_2114. Robot is close to the bed_264. 
##############################
From agent.py
put_executor(clothes_shirt_2114, bed_264)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the bed_264. bed_264 is close clothes_shirt_2114. clothes_shirt_2114 is close bed_264. clothes_shirt_2114 is on bed_264. clothes_shirt_2114 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to actually use the iron on the shirt to iron out the wrinkles before placing it on the bed.
##############################
From agent.py
Human Instruction: The robot needs to actually use the iron on the shirt to iron out the wrinkles before placing it on the bed.

The actions you have taken:
Action 1: Walk to ironing_board_2099.
Action 2: look for clothes_shirt_2114 around ironing_board_2099.
Action 3: Walk to basket_for_clothes_2040.
Action 4: look for clothes_shirt_2114 around basket_for_clothes_2040.
Action 5: Observe around clothes_shirt_2114 with the question of Check the location of the shirt.
Action 6: Grab clothes_shirt_2114.
Action 7: Walk to ironing_board_2099.
Action 8: Put clothes_shirt_2114 on ironing_board_2099.
Action 9: Plug in iron_2117.
Action 10: Switch on iron_2117.
Action 11: Walk to iron_2117.
Action 12: Grab iron_2117.
Action 13: Walk to faucet_308.
Action 14: Switch off faucet_308.
Action 15: Walk to clothes_shirt_2114.
Action 16: Grab clothes_shirt_2114.
Action 17: Wash clothes_shirt_2114.
Action 18: Walk to kitchen_counter_132.
Action 19: Put iron_2117 on kitchen_counter_132.
Action 20: Switch off faucet_134.
Action 21: Walk to ironing_board_2099.
Action 22: Put clothes_shirt_2114 on ironing_board_2099.
Action 23: Walk to clothes_shirt_2114.
Action 24: Grab clothes_shirt_2114.
Action 25: Walk to bed_264.
Action 26: Put clothes_shirt_2114 on bed_264.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_374_around_desk_375(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==375
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

behavior find_pillow_370_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt: item, bed: item):
    body:
        achieve_once on(shirt, bed)
        # Place the shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select clothes_shirt_2114, which was previously ironed

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt: item, bed: item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select clothes_shirt_2114 that was ironed in a previous step

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_underwear_2022_around_washing_machine_2041(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_underwear,washing_machine_instance)
        else:
            exp(clothes_underwear,washing_machine_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,washing_machine_instance]=True
        close[washing_machine_instance,clothes_underwear]=True
    

behavior find_clothes_hat_2076_around_bookshelf_188(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==188
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(clothes_hat,bookshelf_instance)
        else:
            exp(clothes_hat,bookshelf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,bookshelf_instance]=True
        close[bookshelf_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt: item, bed: item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the ironed shirt with the specific ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select bed with ID 264

        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_underwear_2022_around_washing_machine_2041(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_underwear,washing_machine_instance)
        else:
            exp(clothes_underwear,washing_machine_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,washing_machine_instance]=True
        close[washing_machine_instance,clothes_underwear]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt: item, bed: item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select clothes_shirt_2114 that has been ironed

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select bed_264

        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_underwear_2022_around_washing_machine_2041(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_underwear,washing_machine_instance)
        else:
            exp(clothes_underwear,washing_machine_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,washing_machine_instance]=True
        close[washing_machine_instance,clothes_underwear]=True
    

behavior find_pillow_370_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the ironed shirt with ID 2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select the bed with ID 264

        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_hat_2076_around_ceilinglamp_43(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind ceilinglamp_instance:item where:
            is_ceilinglamp(ceilinglamp_instance) and id[ceilinglamp_instance]==43
        achieve close_char(char,ceilinglamp_instance)
        if can_open(ceilinglamp_instance):
            achieve_once open(ceilinglamp_instance)
            exp(clothes_hat,ceilinglamp_instance)
        else:
            exp(clothes_hat,ceilinglamp_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,ceilinglamp_instance]=True
        close[ceilinglamp_instance,clothes_hat]=True
    

behavior find_pillow_370_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_shirt_on_bed(shirt: item, bed: item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select clothes_shirt_2114

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select bed_264

        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
Task Summary:
Task Goal:
Iron a shirt, and put it in on the bed.
Action History:
['walk_executor(ironing_board_2099)', 'walk_executor(basket_for_clothes_2040)', 'grab_executor(clothes_shirt_2114)', 'walk_executor(ironing_board_2099)', 'put_executor(clothes_shirt_2114, ironing_board_2099)', 'plugin_executor(iron_2117)', 'switchon_executor(iron_2117)', 'walk_executor(iron_2117)', 'grab_executor(iron_2117)', 'walk_executor(faucet_308)', 'switchoff_executor(faucet_308)', 'walk_executor(clothes_shirt_2114)', 'grab_executor(clothes_shirt_2114)', 'wash_executor(clothes_shirt_2114)', 'walk_executor(kitchen_counter_132)', 'put_executor(iron_2117, kitchen_counter_132)', 'switchoff_executor(faucet_134)', 'walk_executor(ironing_board_2099)', 'put_executor(clothes_shirt_2114, ironing_board_2099)', 'walk_executor(clothes_shirt_2114)', 'grab_executor(clothes_shirt_2114)', 'walk_executor(bed_264)', 'put_executor(clothes_shirt_2114, bed_264)']
Time info:
Time consume: 303 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 48
goal generate times: 17
goal correct times: 0
action_num: 23

Task complete rate:
Keystate: k1 - Requires: 7 steps
Keystate: k2 - Requires: 0 steps
Action Completion Rate: 0.0
Scene_id: 2
##############################
