From agent.py
Reset goals: The sub-goals are: 
['1. Find the shirt that needs to be washed.', '2. Hand wash the shirt with water and detergent.', '3. Dry the shirt thoroughly.', '4. Iron the shirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2086_around_washing_machine_2007(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_shirt,washing_machine_instance)
        else:
            exp(clothes_shirt,washing_machine_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,washing_machine_instance]=True
        close[washing_machine_instance,clothes_shirt]=True
    

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior locate_shirt(shirt:item):
    body:
        achieve close_char(char, shirt)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        locate_shirt(shirt)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior locate_shirt(shirt:item):
    body:
        achieve close_char(char, shirt)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        locate_shirt(shirt)

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2007)open_executor(washing_machine_2007)exp(clothes_shirt_2086, washing_machine_2007)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. 
##############################
From agent.py
open_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is opened. 
##############################
From agent.py
exp(clothes_shirt_2086, washing_machine_2007)
Fail to find clothes_shirt_2086 around washing_machine_2007. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)exp(clothes_shirt_2086, basket_for_clothes_2006)walk_executor(clothes_shirt_2086)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Robot find: clothes_pants_2085, clothes_shirt_2086, clothes_socks_2087, clothes_skirt_2088, towel_rack_31, towel_rack_33, towel_rack_32, towel_rack_34, mat_22, Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
exp(clothes_shirt_2086, basket_for_clothes_2006)
Find clothes_shirt_2086. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the shirt.', '2. Iron the washed shirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_sink_231(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_detergent_2084_around_sink_231(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(detergent,sink_instance)
        else:
            exp(detergent,sink_instance)
    eff:
        unknown[detergent]=False
        close[detergent,sink_instance]=True
        close[sink_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_prepare_for_wash(clothes_shirt: item):
    body:
        achieve_once inhand(clothes_shirt)
        # Temporarily hold the shirt in hand

behavior wash_shirt(clothes_shirt: item):
    body:
        wash(clothes_shirt)
        # Wash the shirt by hand

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and not dirty(clothes_shirt)
        # Select a shirt that is dirty

        find_and_prepare_for_wash(clothes_shirt)
        wash_shirt(clothes_shirt)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2053_around_sink_231(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_detergent_2084_around_sink_231(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(detergent,sink_instance)
        else:
            exp(detergent,sink_instance)
    eff:
        unknown[detergent]=False
        close[detergent,sink_instance]=True
        close[sink_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_shirt(shirt:item):
    body:
        wash(shirt) # Wash the shirt by hand

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)

        achieve dirty(shirt) # Ensure the shirt is initially dirty
        
        achieve_once clean(shirt) # Wash the shirt and make it clean
        
        foreach location: item:
            if is_basket_for_clothes(location) or is_washing_machine(location):
                # Check for the shirts location
                if inside(shirt, location):
                    observe(location, "Check if the shirt is in the basket or washing machine")


#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_sink_231(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_detergent_2084_around_sink_231(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(detergent,sink_instance)
        else:
            exp(detergent,sink_instance)
    eff:
        unknown[detergent]=False
        close[detergent,sink_instance]=True
        close[sink_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior observe_shirt(washing_machine: item, basket: item):
    body:
        if not exists shirt: item : (is_clothes_shirt(shirt) and (inside(shirt, washing_machine) or inside(shirt, basket))):
            observe(washing_machine, "Check if clothes_shirt_2086 is inside the washing machine")
            observe(basket, "Check if clothes_shirt_2086 is inside the basket")
            
behavior clean_shirt(shirt: item):
    goal:
        achieve clean(shirt)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2007

        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2006

        observe_shirt(washing_machine, basket)

        bind shirt: item where:
            is_clothes_shirt(shirt) and exists w: item : (inside(shirt, w) and (id[w] == 2007 or id[w] == 2006))

        clean_shirt(shirt)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'shirt') at line 5697, column 23.
Expected one of: 
	* COLON

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_gloves_2046_around_sink_231(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(clothes_gloves,sink_instance)
        else:
            exp(clothes_gloves,sink_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,sink_instance]=True
        close[sink_instance,clothes_gloves]=True
    

behavior find_soap_2053_around_sink_231(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_cleaning_solution_2073_around_sink_231(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(cleaning_solution,sink_instance)
        else:
            exp(cleaning_solution,sink_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,sink_instance]=True
        close[sink_instance,cleaning_solution]=True
    

behavior find_detergent_2084_around_sink_231(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(detergent,sink_instance)
        else:
            exp(detergent,sink_instance)
    eff:
        unknown[detergent]=False
        close[detergent,sink_instance]=True
        close[sink_instance,detergent]=True
    

#goal_representation
 
behavior observe_shirt(washing_machine: item, basket: item):
    body:
        if not exists shirt: item : (is_clothes_shirt(shirt) and (inside(shirt, washing_machine) or inside(shirt, basket))):
            observe(washing_machine, "Check if clothes_shirt_2086 is inside the washing machine")
            observe(basket, "Check if clothes_shirt_2086 is inside the basket")
            
behavior clean_shirt(shirt: item):
    goal:
        achieve clean(shirt)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2007

        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2006

        observe_shirt(washing_machine, basket)

        bind shirt: item where:
            is_clothes_shirt(shirt) and exists w: item : (inside(shirt, w) and (id[w] == 2007 or id[w] == 2006))

        clean_shirt(shirt)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'shirt') at line 5733, column 23.
Expected one of: 
	* COLON

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_detergent_2084_around_sink_231(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(detergent,sink_instance)
        else:
            exp(detergent,sink_instance)
    eff:
        unknown[detergent]=False
        close[detergent,sink_instance]=True
        close[sink_instance,detergent]=True
    

behavior find_soap_2054_around_sink_231(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#goal_representation

behavior observe_shirt(washing_machine: item, basket: item):
    body:
        if not exists shirt: item : (is_clothes_shirt(shirt) and (inside(shirt, washing_machine) or inside(shirt, basket))):
            observe(washing_machine, "Check if clothes_shirt_2086 is inside the washing machine")
            observe(basket, "Check if clothes_shirt_2086 is inside the basket")

behavior clean_shirt(shirt: item):
    goal:
        achieve clean(shirt)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2007

        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2006

        observe_shirt(washing_machine, basket)

        bind shirt: item where:
            is_clothes_shirt(shirt) and exists w: item : (inside(shirt, w) and (id[w] == 2007 or id[w] == 2006))

        clean_shirt(shirt)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
Error record: Error during problem transformation
##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
['walk_executor(washing_machine_2007)', 'open_executor(washing_machine_2007)', 'walk_executor(basket_for_clothes_2006)']
Time info:
Time consume: 98 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 2
goal generate times: 4
goal correct times: 2
action_num: 3

Task complete rate:
Keystate: k1 - Requires: 5 steps
Keystate: k2 - Requires: 9 steps
Action Completion Rate: 0.0
Scene_id: 0
##############################
