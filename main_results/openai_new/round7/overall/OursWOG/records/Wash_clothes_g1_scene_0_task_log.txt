From agent.py
Reset goals: The sub-goals are: 
['1. Identify the basket containing clothes.', '2. Load the clothes from the basket into the washing machine.', '3. Start the washing machine to wash the clothes.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2086_around_basket_for_clothes_2006(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_shirt,basket_for_clothes_instance)
        else:
            exp(clothes_shirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_shirt]=True
    

behavior find_clothes_jacket_2047_around_basket_for_clothes_2006(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_jacket,basket_for_clothes_instance)
        else:
            exp(clothes_jacket,basket_for_clothes_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_jacket]=True
    

behavior find_clothes_socks_2087_around_basket_for_clothes_2006(clothes_socks:item):
    goal: not unknown(clothes_socks)
    body:
        assert is_clothes_socks(clothes_socks)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_socks,basket_for_clothes_instance)
        else:
            exp(clothes_socks,basket_for_clothes_instance)
    eff:
        unknown[clothes_socks]=False
        close[clothes_socks,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_socks]=True
    

behavior find_clothes_underwear_2049_around_basket_for_clothes_2006(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_underwear,basket_for_clothes_instance)
        else:
            exp(clothes_underwear,basket_for_clothes_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_underwear]=True
    

behavior find_clothes_hat_2045_around_basket_for_clothes_2006(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_hat,basket_for_clothes_instance)
        else:
            exp(clothes_hat,basket_for_clothes_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_hat]=True
    

behavior find_clothes_pants_2085_around_basket_for_clothes_2006(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_pants,basket_for_clothes_instance)
        else:
            exp(clothes_pants,basket_for_clothes_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_pants]=True
    

behavior find_clothes_scarf_2048_around_basket_for_clothes_2006(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_scarf,basket_for_clothes_instance)
        else:
            exp(clothes_scarf,basket_for_clothes_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_scarf]=True
    

behavior find_clothes_dress_2044_around_basket_for_clothes_2006(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_dress,basket_for_clothes_instance)
        else:
            exp(clothes_dress,basket_for_clothes_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_dress]=True
    

behavior find_clothes_gloves_2046_around_basket_for_clothes_2006(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_gloves,basket_for_clothes_instance)
        else:
            exp(clothes_gloves,basket_for_clothes_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_gloves]=True
    

behavior find_clothes_skirt_2088_around_basket_for_clothes_2006(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        if exists basket: item : (is_basket_for_clothes(basket)):
            # Check if we have already identified the basket for clothes
            bind basket: item where:
                is_basket_for_clothes(basket)
            # Select the basket that is for clothes
            achieve close_char(char, basket)
            # Approach the clothes basket

        else:
            # If no basket has been identified, explore to find one
            foreach basket: item:
                if is_basket_for_clothes(basket) and not visited(basket):
                    observe(basket, "Identify the basket for clothes")

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior __goal__():
    body:
        if exists basket: item : (is_basket_for_clothes(basket)):
            # Check if we have already identified the basket for clothes
            bind basket: item where:
                is_basket_for_clothes(basket)
            # Select the basket that is for clothes
            achieve close_char(char, basket)
            # Approach the clothes basket

        else:
            # If no basket has been identified, explore to find one
            foreach basket: item:
                if is_basket_for_clothes(basket) and not visited(basket):
                    observe(basket, "Identify the basket for clothes")

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Robot find: clothes_pants_2085, clothes_shirt_2086, clothes_socks_2087, clothes_skirt_2088, towel_rack_31, towel_rack_33, towel_rack_32, towel_rack_34, mat_22, Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2047_around_dresser_358(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==358
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_jacket,dresser_instance)
        else:
            exp(clothes_jacket,dresser_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,dresser_instance]=True
        close[dresser_instance,clothes_jacket]=True
    

behavior find_clothes_underwear_2049_around_dresser_358(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==358
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_underwear,dresser_instance)
        else:
            exp(clothes_underwear,dresser_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,dresser_instance]=True
        close[dresser_instance,clothes_underwear]=True
    

behavior find_clothes_hat_2045_around_dresser_358(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==358
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_hat,dresser_instance)
        else:
            exp(clothes_hat,dresser_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,dresser_instance]=True
        close[dresser_instance,clothes_hat]=True
    

behavior find_clothes_scarf_2048_around_closetdrawer_117(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==117
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_scarf,closetdrawer_instance)
        else:
            exp(clothes_scarf,closetdrawer_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_scarf]=True
    

behavior find_clothes_dress_2044_around_dresser_358(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==358
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_dress,dresser_instance)
        else:
            exp(clothes_dress,dresser_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,dresser_instance]=True
        close[dresser_instance,clothes_dress]=True
    

behavior find_clothes_gloves_2046_around_dresser_358(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==358
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_gloves,dresser_instance)
        else:
            exp(clothes_gloves,dresser_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,dresser_instance]=True
        close[dresser_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_clothes_into_washing_machine(clothes: item, washing_machine: item):
    body:
        achieve_once inside(clothes, washing_machine)
        # Load clothes into the washing machine

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2006
        # Select the basket for clothes with ID 2006

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine

        foreach clothes: item:
        # Load all clothes from the basket into the washing machine
            if is_clothes(clothes) and inside(clothes, basket):
                load_clothes_into_washing_machine(clothes, washing_machine)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_clothes_into_washing_machine(clothes: item, washing_machine: item):
    body:
        achieve_once inside(clothes, washing_machine)
        # Load clothes into the washing machine

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2006
        # Select the basket for clothes with ID 2006

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine

        foreach clothes: item:
        # Load all clothes from the basket into the washing machine
            if is_clothes(clothes) and inside(clothes, basket):
                load_clothes_into_washing_machine(clothes, washing_machine)

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2007)open_executor(washing_machine_2007)walk_executor(clothes_pants_2085)grab_executor(clothes_pants_2085)walk_executor(washing_machine_2007)putin_executor(clothes_pants_2085, washing_machine_2007)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(washing_machine_2007)putin_executor(clothes_shirt_2086, washing_machine_2007)walk_executor(clothes_socks_2087)grab_executor(clothes_socks_2087)walk_executor(washing_machine_2007)putin_executor(clothes_socks_2087, washing_machine_2007)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(washing_machine_2007)putin_executor(clothes_skirt_2088, washing_machine_2007)
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. 
##############################
From agent.py
open_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is opened. 
##############################
From agent.py
walk_executor(clothes_pants_2085)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
grab_executor(clothes_pants_2085)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the basket_for_clothes_2006. Grabbing clothes_pants_2085 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the washing_machine_2007. 
##############################
From agent.py
putin_executor(clothes_pants_2085, washing_machine_2007)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the washing_machine_2007. clothes_pants_2085 is inside washing_machine_2007. clothes_pants_2085 is close washing_machine_2007. washing_machine_2007 is close clothes_pants_2085. clothes_pants_2085 released by right hand. 
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the basket_for_clothes_2006. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the clothes_pants_2085. Robot is close to the washing_machine_2007. 
##############################
From agent.py
putin_executor(clothes_shirt_2086, washing_machine_2007)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the clothes_pants_2085. Robot is close to the washing_machine_2007. washing_machine_2007 is close clothes_shirt_2086. clothes_shirt_2086 is close washing_machine_2007. clothes_shirt_2086 is inside washing_machine_2007. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
walk_executor(clothes_socks_2087)
Robot find: Robot is close to the basket_for_clothes_2006. Robot is close to the clothes_socks_2087. 
##############################
From agent.py
grab_executor(clothes_socks_2087)
Robot find: Robot is close to the basket_for_clothes_2006. Robot is close to the clothes_socks_2087. Grabbing clothes_socks_2087 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_socks_2087. Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the washing_machine_2007. 
##############################
From agent.py
putin_executor(clothes_socks_2087, washing_machine_2007)
Robot find: Robot is close to the clothes_socks_2087. Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the washing_machine_2007. clothes_socks_2087 is close washing_machine_2007. clothes_socks_2087 is inside washing_machine_2007. washing_machine_2007 is close clothes_socks_2087. clothes_socks_2087 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
grab_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. Grabbing clothes_skirt_2088 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the clothes_socks_2087. Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the washing_machine_2007. 
##############################
From agent.py
putin_executor(clothes_skirt_2088, washing_machine_2007)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the clothes_socks_2087. Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the washing_machine_2007. clothes_skirt_2088 is close washing_machine_2007. clothes_skirt_2088 is inside washing_machine_2007. washing_machine_2007 is close clothes_skirt_2088. clothes_skirt_2088 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_bathroom_counter_41(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(detergent,bathroom_counter_instance)
        else:
            exp(detergent,bathroom_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_counter_instance]=True
        close[bathroom_counter_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve_once is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2007
        # Select the washing machine with ID 2007

        start_washing_machine(washing_machine)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve_once is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2007
        # Select the washing machine with ID 2007

        start_washing_machine(washing_machine)

##############################
From agent.py-> find a plan in act()
plugin_executor(washing_machine_2007)close_executor(washing_machine_2007)switchon_executor(washing_machine_2007)
##############################
From agent.py
plugin_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the clothes_socks_2087. Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the washing_machine_2007. washing_machine_2007 is plugged in. 
##############################
From agent.py
close_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is closed. 
##############################
From agent.py
switchon_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Wash all the clothes in the basket for clothes by washing machine.
Action History:
['walk_executor(basket_for_clothes_2006)', 'walk_executor(washing_machine_2007)', 'open_executor(washing_machine_2007)', 'walk_executor(clothes_pants_2085)', 'grab_executor(clothes_pants_2085)', 'walk_executor(washing_machine_2007)', 'putin_executor(clothes_pants_2085, washing_machine_2007)', 'walk_executor(clothes_shirt_2086)', 'grab_executor(clothes_shirt_2086)', 'walk_executor(washing_machine_2007)', 'putin_executor(clothes_shirt_2086, washing_machine_2007)', 'walk_executor(clothes_socks_2087)', 'grab_executor(clothes_socks_2087)', 'walk_executor(washing_machine_2007)', 'putin_executor(clothes_socks_2087, washing_machine_2007)', 'walk_executor(clothes_skirt_2088)', 'grab_executor(clothes_skirt_2088)', 'walk_executor(washing_machine_2007)', 'putin_executor(clothes_skirt_2088, washing_machine_2007)', 'plugin_executor(washing_machine_2007)', 'close_executor(washing_machine_2007)', 'switchon_executor(washing_machine_2007)']
Time info:
Time consume: 95 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 71
goal generate times: 3
goal correct times: 0
action_num: 22

Task complete rate:
1
Scene_id: 0
##############################
