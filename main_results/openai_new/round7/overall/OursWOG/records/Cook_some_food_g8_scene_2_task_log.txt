From agent.py
Reset goals: The sub-goals are: 
['1. Boil the eggs and wash the vegetables.', '2. Cut the boiled eggs, lemon, and vegetables accordingly.', '3. Mix all the prepared ingredients in a bowl to make the salad.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_vegetable_2072_around_kitchen_counter_132(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_vegetable,kitchen_counter_instance)
        else:
            exp(food_vegetable,kitchen_counter_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_vegetable]=True
    

behavior find_pot_2093_around_kitchen_counter_132(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(pot,kitchen_counter_instance)
        else:
            exp(pot,kitchen_counter_instance)
    eff:
        unknown[pot]=False
        close[pot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,pot]=True
    

behavior find_food_carrot_2047_around_kitchen_counter_132(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_carrot,kitchen_counter_instance)
        else:
            exp(food_carrot,kitchen_counter_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_carrot]=True
    

behavior find_food_lemon_2061_around_kitchen_counter_132(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_lemon,kitchen_counter_instance)
        else:
            exp(food_lemon,kitchen_counter_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_lemon]=True
    

behavior find_food_onion_2026_around_kitchen_counter_132(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_onion,kitchen_counter_instance)
        else:
            exp(food_onion,kitchen_counter_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_onion]=True
    

behavior find_food_potato_2066_around_kitchen_counter_132(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_potato,kitchen_counter_instance)
        else:
            exp(food_potato,kitchen_counter_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_potato]=True
    

behavior find_food_egg_2053_around_kitchen_counter_132(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_egg,kitchen_counter_instance)
        else:
            exp(food_egg,kitchen_counter_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
 
behavior boil_eggs_and_clean_vegetables(eggs: item, stove: item, pot:item, vegetables: item, sink: item):
    body:
        achieve_once inside(eggs, pot) 
        # Place eggs inside the pot
        achieve_once has_water(pot) 
        # Fill the pot with water
        achieve on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil the eggs
        foreach veg: item:
            if is_food_vegetable(veg) and inside(veg, sink):
                wash(veg)
        # Wash the vegetables in the sink

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove)
        # Select the stove
        
        bind pot: item where:
            is_pot(pot)
        # Select the pot

        bind eggs: item where:
            is_food_egg(eggs)
        # Select the eggs

        bind vegetables: item where:
            is_food_vegetable(vegetables)
        # Select the vegetables
        
        bind sink: item where:
            is_sink(sink)
        # Select the sink for washing vegetables

        boil_eggs_and_clean_vegetables(eggs, stove, pot, vegetables, sink)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior boil_eggs_and_clean_vegetables(eggs: item, stove: item, pot:item, vegetables: item, sink: item):
    body:
        achieve_once inside(eggs, pot) 
        # Place eggs inside the pot
        achieve_once has_water(pot) 
        # Fill the pot with water
        achieve on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil the eggs
        foreach veg: item:
            if is_food_vegetable(veg) and inside(veg, sink):
                wash(veg)
        # Wash the vegetables in the sink

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove)
        # Select the stove
        
        bind pot: item where:
            is_pot(pot)
        # Select the pot

        bind eggs: item where:
            is_food_egg(eggs)
        # Select the eggs

        bind vegetables: item where:
            is_food_vegetable(vegetables)
        # Select the vegetables
        
        bind sink: item where:
            is_sink(sink)
        # Select the sink for washing vegetables

        boil_eggs_and_clean_vegetables(eggs, stove, pot, vegetables, sink)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(pot_2093, kitchen_counter_132)exp(food_egg_2053, kitchen_counter_132)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_2093)putin_executor(food_egg_2053, pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: pot_54, Robot is close to the kitchen_counter_132. 
##############################
From agent.py
exp(pot_2093, kitchen_counter_132)
Fail to find pot_2093 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(pot_54)open_executor(pot_54)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_54)putin_executor(food_egg_2053, pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_egg_2053, fridge_140)
Find food_egg_2053. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_54)open_executor(pot_54)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_54)putin_executor(food_egg_2053, pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
open_executor(pot_54)
Robot find: Robot is close to the oven_141. Robot is close to the pot_54. pot_54 is opened. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the fridge_140. Robot is close to the food_egg_2053. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the fridge_140. Robot is close to the food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the food_egg_2053. Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
putin_executor(food_egg_2053, pot_54)
Robot find: Robot is close to the food_egg_2053. Robot is close to the oven_141. Robot is close to the pot_54. food_egg_2053 is close pot_54. pot_54 is close food_egg_2053. food_egg_2053 is inside pot_54. food_egg_2053 released by right hand. 
##############################
From agent.py
grab_executor(pot_54)
Robot find: Robot is close to the food_egg_2053. Robot is close to the oven_141. Robot is close to the pot_54. Grabbing pot_54 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(pot_54, stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. pot_54 is on stove_2090. pot_54 is close stove_2090. stove_2090 is close pot_54. pot_54 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to fill the pot with water to achieve "has_water(pot)" and wash the vegetables in the sink to ensure "wash(veg)" has been completed.
##############################
From agent.py
Human Instruction: The robot needs to fill the pot with water to achieve "has_water(pot)" and wash the vegetables in the sink to ensure "wash(veg)" has been completed.

The actions you have taken:
Action 1: Walk to kitchen_counter_132.
Action 2: look for pot_2093 around kitchen_counter_132.
Action 3: Walk to fridge_140.
Action 4: Switch off fridge_140.
Action 5: Open fridge_140.
Action 6: look for food_egg_2053 around fridge_140.
Action 7: Walk to pot_54.
Action 8: Open pot_54.
Action 9: Walk to food_egg_2053.
Action 10: Grab food_egg_2053.
Action 11: Walk to pot_54.
Action 12: Put food_egg_2053 into pot_54.
Action 13: Grab pot_54.
Action 14: Walk to faucet_134.
Action 15: Switch off faucet_134.
Action 16: Walk to stove_2090.
Action 17: Put pot_54 on stove_2090.
Action 18: Switch on stove_2090.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2037_around_bathroom_counter_306(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_cleaning_solution_2098_around_bathroom_counter_306(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(cleaning_solution,bathroom_counter_instance)
        else:
            exp(cleaning_solution,bathroom_counter_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_counter_instance]=True
        close[bathroom_counter_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot: item):
    body:
        achieve has_water(pot)

behavior wash_vegetables(veg:item):
    body:
        wash(veg)
        achieve wash(veg)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot to fill with water

        bind sink: item where:
            is_sink(sink)
        # Select a sink where vegetables are washed

        fill_pot_with_water(pot)
        wash_vegetables(veg)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: veg; available variables: [].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_soap_2037_around_bathroom_counter_306(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_food_onion_2026_around_cupboard_131(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_onion,cupboard_instance)
        else:
            exp(food_onion,cupboard_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,cupboard_instance]=True
        close[cupboard_instance,food_onion]=True
    

#goal_representation
 
behavior fill_pot_with_water(pot: item):
    body:
        achieve has_water(pot)

behavior wash_vegetables(veg: item):
    body:
        wash(veg)
        achieve wash(veg)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot to fill with water

        bind veg: item where:
            is_food_vegetable(veg)
        # Select a vegetable to wash

        fill_pot_with_water(pot)
        wash_vegetables(veg)

#goal_representation_end

##############################
Error is:
Unknown expression type: <class 'concepts.dm.crow.behavior.CrowBehaviorApplicationExpression'>.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2114_around_basket_for_clothes_2040(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_shirt,basket_for_clothes_instance)
        else:
            exp(clothes_shirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_shirt]=True
    

behavior find_food_onion_2026_around_cupboard_131(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_onion,cupboard_instance)
        else:
            exp(food_onion,cupboard_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,cupboard_instance]=True
        close[cupboard_instance,food_onion]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot: item, faucet: item):
    body:
        achieve_once has_water(pot)
        # Fill the pot with water from the faucet

behavior wash_vegetables(vegetables: item, sink: item):
    body:
        wash(vegetables)
        # Wash the vegetables in the sink

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet for filling the pot with water

        bind sink: item where:
            is_sink(sink)
        # Select a sink for washing vegetables

        fill_pot_with_water(pot, faucet)

        foreach veg: item:
        # Wash all vegetables in the sink
            if is_food_vegetable(veg):
                wash_vegetables(veg, sink)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_pot_with_water(pot: item, faucet: item):
    body:
        achieve_once has_water(pot)
        # Fill the pot with water from the faucet

behavior wash_vegetables(vegetables: item, sink: item):
    body:
        wash(vegetables)
        # Wash the vegetables in the sink

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet for filling the pot with water

        bind sink: item where:
            is_sink(sink)
        # Select a sink for washing vegetables

        fill_pot_with_water(pot, faucet)

        foreach veg: item:
        # Wash all vegetables in the sink
            if is_food_vegetable(veg):
                wash_vegetables(veg, sink)

##############################
From agent.py-> find a plan in act()
grab_executor(pot_54)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(kitchen_counter_132)put_executor(pot_54, kitchen_counter_132)switchon_executor(faucet_134)wash_executor(food_vegetable_2072)switchoff_executor(faucet_134)
##############################
From agent.py
grab_executor(pot_54)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. Grabbing pot_54 by right hand. 
##############################
From agent.py
walk_executor(faucet_308)
Robot find: drawing_296, towel_rack_298, Robot is close to the pot_54. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. 
##############################
From agent.py
switchoff_executor(faucet_308)
Robot find: Robot is close to the pot_54. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. faucet_308 is turned off. 
##############################
From agent.py
walk_executor(food_vegetable_2072)
Robot find: Robot is close to the pot_54. Robot is close to the food_vegetable_2072. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_vegetable_2072)
Robot find: Robot is close to the pot_54. Robot is close to the food_vegetable_2072. Robot is close to the fridge_140. Grabbing food_vegetable_2072 by left hand. 
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the pot_54. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. 
##############################
From agent.py
put_executor(pot_54, kitchen_counter_132)
Robot find: Robot is close to the pot_54. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. pot_54 is on kitchen_counter_132. pot_54 is close kitchen_counter_132. pot_54 released by right hand. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. faucet_134 is turned on. 
##############################
From agent.py
wash_executor(food_vegetable_2072)
Robot find: Robot is close to the pot_54. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. food_vegetable_2072 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. faucet_134 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to fill the pot with water using a faucet to complete the goal of "has_water(pot)."
##############################
From agent.py
Human Instruction: You need to fill the pot with water using a faucet to complete the goal of "has_water(pot)."

The actions you have taken:
Action 1: Walk to kitchen_counter_132.
Action 2: look for pot_2093 around kitchen_counter_132.
Action 3: Walk to fridge_140.
Action 4: Switch off fridge_140.
Action 5: Open fridge_140.
Action 6: look for food_egg_2053 around fridge_140.
Action 7: Walk to pot_54.
Action 8: Open pot_54.
Action 9: Walk to food_egg_2053.
Action 10: Grab food_egg_2053.
Action 11: Walk to pot_54.
Action 12: Put food_egg_2053 into pot_54.
Action 13: Grab pot_54.
Action 14: Walk to faucet_134.
Action 15: Switch off faucet_134.
Action 16: Walk to stove_2090.
Action 17: Put pot_54 on stove_2090.
Action 18: Switch on stove_2090.
Action 19: Grab pot_54.
Action 20: Walk to faucet_308.
Action 21: Switch off faucet_308.
Action 22: Walk to food_vegetable_2072.
Action 23: Grab food_vegetable_2072.
Action 24: Walk to kitchen_counter_132.
Action 25: Put pot_54 on kitchen_counter_132.
Action 26: Switch on faucet_134.
Action 27: Wash food_vegetable_2072.
Action 28: Switch off faucet_134.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2114_around_basket_for_clothes_2040(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_shirt,basket_for_clothes_instance)
        else:
            exp(clothes_shirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_shirt]=True
    

behavior find_box_2023_around_pot_2093(box:item):
    goal: not unknown(box)
    body:
        assert is_box(box)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==2093
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(box,pot_instance)
        else:
            exp(box,pot_instance)
    eff:
        unknown[box]=False
        close[box,pot_instance]=True
        close[pot_instance,box]=True
    

behavior find_soap_2038_around_bathroom_cabinet_305(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot: item, faucet: item):
    body:
        achieve has_water(pot)
        # Fill the pot with water from the faucet

behavior boil_eggs(pot: item, stove: item, eggs: item):
    body:
        achieve inside(eggs, pot)
        # Boil the eggs inside the pot
        achieve on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn the stove on to boil the eggs

behavior wash_vegetables(vegetables: item, sink: item):
    body:
        wash(vegetables)
        # Wash the vegetables in the sink

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet to fill the pot with water

        fill_pot_with_water(pot, faucet)
        # Fill the pot with water

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind eggs: item where:
            is_food_egg(eggs)
        # Select eggs for boiling

        boil_eggs(pot, stove, eggs)
        # Boil the eggs

        bind sink: item where:
            is_sink(sink)
        # Select a sink for washing vegetables

        bind vegetables: item where:
            is_food_vegetable(vegetables)
        # Select vegetables for washing

        wash_vegetables(vegetables, sink)
        # Wash the vegetables

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_pot_with_water(pot: item, faucet: item):
    body:
        achieve has_water(pot)
        # Fill the pot with water from the faucet

behavior boil_eggs(pot: item, stove: item, eggs: item):
    body:
        achieve inside(eggs, pot)
        # Boil the eggs inside the pot
        achieve on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn the stove on to boil the eggs

behavior wash_vegetables(vegetables: item, sink: item):
    body:
        wash(vegetables)
        # Wash the vegetables in the sink

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet to fill the pot with water

        fill_pot_with_water(pot, faucet)
        # Fill the pot with water

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind eggs: item where:
            is_food_egg(eggs)
        # Select eggs for boiling

        boil_eggs(pot, stove, eggs)
        # Boil the eggs

        bind sink: item where:
            is_sink(sink)
        # Select a sink for washing vegetables

        bind vegetables: item where:
            is_food_vegetable(vegetables)
        # Select vegetables for washing

        wash_vegetables(vegetables, sink)
        # Wash the vegetables

##############################
From agent.py-> find a plan in act()
grab_executor(pot_54)walk_executor(faucet_134)walk_executor(kitchen_counter_132)put_executor(pot_54, kitchen_counter_132)switchon_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(pot_54)grab_executor(pot_54)walk_executor(stove_2090)put_executor(pot_54, stove_2090)walk_executor(faucet_134)switchon_executor(faucet_134)wash_executor(food_vegetable_2072)switchoff_executor(faucet_134)
##############################
From agent.py
grab_executor(pot_54)
Robot find: Robot is close to the pot_54. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. Grabbing pot_54 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the pot_54. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. 
##############################
From agent.py
put_executor(pot_54, kitchen_counter_132)
Robot find: Robot is close to the pot_54. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. pot_54 is on kitchen_counter_132. pot_54 is close kitchen_counter_132. pot_54 released by right hand. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. faucet_134 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the pot_54. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the pot_54. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. Robot is close to the food_egg_2053. 
##############################
From agent.py
grab_executor(pot_54)
Robot find: Robot is close to the pot_54. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. Robot is close to the food_egg_2053. Grabbing pot_54 by right hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(pot_54, stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. pot_54 is on stove_2090. pot_54 is close stove_2090. pot_54 released by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned on. 
##############################
From agent.py
wash_executor(food_vegetable_2072)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to fill the pot with water from the faucet to complete the goal of "has_water(pot)" before boiling the eggs.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior cut_eggs_lemon_vegetables(eggs:item, lemon:item, vegetables:item, cutting_board:item, knife:item):
    body:
        achieve_once on(eggs, cutting_board)
        achieve_once cut(eggs)
        achieve_once on(lemon, cutting_board)
        achieve_once cut(lemon)
        achieve_once on(vegetables, cutting_board)
        achieve_once cut(vegetables)

behavior __goal__():
    body:
        bind eggs: item where:
            is_food_egg(eggs)
        # Select the boiled eggs

        bind lemon: item where:
            is_food_lemon(lemon)
        # Select the lemon

        bind vegetables: item where:
            is_food_vegetable(vegetables)
        # Select the washed vegetables

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board for cutting

        bind knife: item where:
            is_knife(knife)
        # Select a knife for cutting

        cut_eggs_lemon_vegetables(eggs, lemon, vegetables, cutting_board, knife)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior cut_eggs_lemon_vegetables(eggs:item, lemon:item, vegetables:item, cutting_board:item, knife:item):
    body:
        achieve_once on(eggs, cutting_board)
        achieve_once cut(eggs)
        achieve_once on(lemon, cutting_board)
        achieve_once cut(lemon)
        achieve_once on(vegetables, cutting_board)
        achieve_once cut(vegetables)

behavior __goal__():
    body:
        bind eggs: item where:
            is_food_egg(eggs)
        # Select the boiled eggs

        bind lemon: item where:
            is_food_lemon(lemon)
        # Select the lemon

        bind vegetables: item where:
            is_food_vegetable(vegetables)
        # Select the washed vegetables

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board for cutting

        bind knife: item where:
            is_knife(knife)
        # Select a knife for cutting

        cut_eggs_lemon_vegetables(eggs, lemon, vegetables, cutting_board, knife)

##############################
From agent.py-> find a plan in act()
walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)walk_executor(kitchen_counter_128)put_executor(food_vegetable_2072, kitchen_counter_128)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(cutting_board_2080)put_executor(food_lemon_2061, cutting_board_2080)walk_executor(food_lemon_2061)cut_executor(food_lemon_2061)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the food_egg_2053. Robot is close to the pot_54. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the food_egg_2053. Robot is close to the pot_54. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the food_vegetable_2072. Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_egg_2053, cutting_board_2080)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. cutting_board_2080 is close food_egg_2053. food_egg_2053 is close cutting_board_2080. food_egg_2053 is on cutting_board_2080. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_52)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the knifeblock_52. 
##############################
From agent.py
exp(knife_2036, knifeblock_52)
Fail to find knife_2036 around knifeblock_52. 
##############################
From agent.py-> find a plan in act()
walk_executor(curtain_390)open_executor(curtain_390)exp(knife_2036, curtain_390)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)walk_executor(kitchen_counter_128)put_executor(food_vegetable_2072, kitchen_counter_128)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(cutting_board_2080)put_executor(food_lemon_2061, cutting_board_2080)walk_executor(food_lemon_2061)cut_executor(food_lemon_2061)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)
##############################
From agent.py
walk_executor(curtain_390)
Robot find: pillow_370, mat_386, pillow_368, drawing_388, Robot is close to the food_vegetable_2072. Robot is close to the curtain_390. 
##############################
From agent.py
open_executor(curtain_390)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the curtain_390. Robot is close to the curtain_391. curtain_390 is opened. 
##############################
From agent.py
exp(knife_2036, curtain_390)
Fail to find knife_2036 around curtain_390. 
##############################
From agent.py-> find a plan in act()
walk_executor(chair_138)exp(knife_2036, chair_138)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)walk_executor(kitchen_counter_128)put_executor(food_vegetable_2072, kitchen_counter_128)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(cutting_board_2080)put_executor(food_lemon_2061, cutting_board_2080)walk_executor(food_lemon_2061)cut_executor(food_lemon_2061)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)
##############################
From agent.py
walk_executor(chair_138)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the chair_138. 
##############################
From agent.py
exp(knife_2036, chair_138)
Fail to find knife_2036 around chair_138. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(knife_2036, cupboard_131)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)walk_executor(kitchen_counter_128)put_executor(food_vegetable_2072, kitchen_counter_128)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(cutting_board_2080)put_executor(food_lemon_2061, cutting_board_2080)walk_executor(food_lemon_2061)cut_executor(food_lemon_2061)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(knife_2036, cupboard_131)
Fail to find knife_2036 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(knife_2036, cupboard_130)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)walk_executor(kitchen_counter_128)put_executor(food_vegetable_2072, kitchen_counter_128)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(cutting_board_2080)put_executor(food_lemon_2061, cutting_board_2080)walk_executor(food_lemon_2061)cut_executor(food_lemon_2061)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the food_vegetable_2072. Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find knife_2036 ?
Answer: Robot, locate dining_room_1. Inside dining_room_1, find dishwasher_143. Inside dishwasher_143, you will find knife_2036.
Re-decompose: None

##############################
From agent.py
Human Instruction: You need to fill the pot with water using a faucet to complete the goal of "has_water(pot)."
Robot, locate dining_room_1. Inside dining_room_1, find dishwasher_143. Inside dishwasher_143, you will find knife_2036.

The actions you have taken:
Action 1: Walk to kitchen_counter_132.
Action 2: look for pot_2093 around kitchen_counter_132.
Action 3: Walk to fridge_140.
Action 4: Switch off fridge_140.
Action 5: Open fridge_140.
Action 6: look for food_egg_2053 around fridge_140.
Action 7: Walk to pot_54.
Action 8: Open pot_54.
Action 9: Walk to food_egg_2053.
Action 10: Grab food_egg_2053.
Action 11: Walk to pot_54.
Action 12: Put food_egg_2053 into pot_54.
Action 13: Grab pot_54.
Action 14: Walk to faucet_134.
Action 15: Switch off faucet_134.
Action 16: Walk to stove_2090.
Action 17: Put pot_54 on stove_2090.
Action 18: Switch on stove_2090.
Action 19: Grab pot_54.
Action 20: Walk to faucet_308.
Action 21: Switch off faucet_308.
Action 22: Walk to food_vegetable_2072.
Action 23: Grab food_vegetable_2072.
Action 24: Walk to kitchen_counter_132.
Action 25: Put pot_54 on kitchen_counter_132.
Action 26: Switch on faucet_134.
Action 27: Wash food_vegetable_2072.
Action 28: Switch off faucet_134.
Action 29: Grab pot_54.
Action 30: Walk to faucet_134.
Action 31: Walk to kitchen_counter_132.
Action 32: Put pot_54 on kitchen_counter_132.
Action 33: Switch on faucet_134.
Action 34: Switch off faucet_134.
Action 35: Walk to pot_54.
Action 36: Grab pot_54.
Action 37: Walk to stove_2090.
Action 38: Put pot_54 on stove_2090.
Action 39: Walk to faucet_134.
Action 40: Switch on faucet_134.
Action 41: Wash food_vegetable_2072.
Action 42: Switch off faucet_134.
Action 43: Walk to food_egg_2053.
Action 44: Grab food_egg_2053.
Action 45: Walk to cutting_board_2080.
Action 46: Put food_egg_2053 on cutting_board_2080.
Action 47: Walk to knifeblock_52.
Action 48: look for knife_2036 around knifeblock_52.
Action 49: Walk to curtain_390.
Action 50: Open curtain_390.
Action 51: look for knife_2036 around curtain_390.
Action 52: Walk to chair_138.
Action 53: look for knife_2036 around chair_138.
Action 54: Walk to cupboard_131.
Action 55: Open cupboard_131.
Action 56: look for knife_2036 around cupboard_131.
Action 57: Walk to cupboard_130.

##############################
From agent.py
exp(knife_2036, cupboard_130)
Fail to find knife_2036 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(knife_2036, dishwasher_143)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)walk_executor(kitchen_counter_128)put_executor(food_vegetable_2072, kitchen_counter_128)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(cutting_board_2080)put_executor(food_lemon_2061, cutting_board_2080)walk_executor(food_lemon_2061)cut_executor(food_lemon_2061)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the food_vegetable_2072. Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(knife_2036, dishwasher_143)
Find knife_2036. 
##############################
From agent.py-> find a plan in act()
grab_executor(knife_2036)walk_executor(food_egg_2053)cut_executor(food_egg_2053)walk_executor(kitchen_counter_128)put_executor(food_vegetable_2072, kitchen_counter_128)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(cutting_board_2080)put_executor(food_lemon_2061, cutting_board_2080)walk_executor(food_lemon_2061)cut_executor(food_lemon_2061)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)
##############################
From agent.py
grab_executor(knife_2036)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the knife_2036. Robot is close to the dishwasher_143. Grabbing knife_2036 by right hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. 
##############################
From agent.py
cut_executor(food_egg_2053)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. 
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the knife_2036. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_vegetable_2072, kitchen_counter_128)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the knife_2036. Robot is close to the kitchen_counter_128. food_vegetable_2072 is close kitchen_counter_128. kitchen_counter_128 is close food_vegetable_2072. food_vegetable_2072 is on kitchen_counter_128. food_vegetable_2072 released by left hand. 
##############################
From agent.py
walk_executor(food_lemon_2061)
Robot find: Robot is close to the knife_2036. Robot is close to the fridge_140. Robot is close to the food_lemon_2061. 
##############################
From agent.py
grab_executor(food_lemon_2061)
Robot find: Robot is close to the knife_2036. Robot is close to the fridge_140. Robot is close to the food_lemon_2061. Grabbing food_lemon_2061 by left hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_lemon_2061. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_lemon_2061, cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_lemon_2061. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_lemon_2061 is close cutting_board_2080. cutting_board_2080 is close food_lemon_2061. food_lemon_2061 is on cutting_board_2080. food_lemon_2061 released by left hand. 
##############################
From agent.py
walk_executor(food_lemon_2061)
Robot find: Robot is close to the knife_2036. Robot is close to the food_lemon_2061. Robot is close to the cutting_board_2080. 
##############################
From agent.py
cut_executor(food_lemon_2061)
Robot find: Robot is close to the knife_2036. Robot is close to the food_lemon_2061. Robot is close to the cutting_board_2080. 
##############################
From agent.py
walk_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
grab_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_128. Grabbing food_vegetable_2072 by left hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_128. Robot is close to the cutting_board_2080. 
##############################
From agent.py
put_executor(food_vegetable_2072, cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_128. Robot is close to the cutting_board_2080. food_vegetable_2072 is close cutting_board_2080. cutting_board_2080 is close food_vegetable_2072. food_vegetable_2072 is on cutting_board_2080. food_vegetable_2072 released by left hand. 
##############################
From agent.py
walk_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the cutting_board_2080. 
##############################
From agent.py
cut_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the cutting_board_2080. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2097_around_bench_126(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==126
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(bowl,bench_instance)
        else:
            exp(bowl,bench_instance)
    eff:
        unknown[bowl]=False
        close[bowl,bench_instance]=True
        close[bench_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
behavior mix_ingredients_in_bowl(egg: item, lemon: item, vegetables: item, bowl: item):
    body:
        achieve_once inside(egg, bowl)
        achieve_once inside(lemon, bowl)
        achieve_once inside(vegetables, bowl)

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg) and cut(egg)
        # Select the cut egg

        bind lemon: item where:
            is_food_lemon(lemon) and cut(lemon)
        # Select the cut lemon

        bind vegetables: item where:
            is_food_vegetable(vegetables) and cut(vegetables)
        # Select the cut vegetables

        bind bowl: item where:
            is_bowl(bowl)
        # Select the bowl to mix ingredients in

        mix_ingredients_in_bowl(egg, lemon, vegetables, bowl)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior mix_ingredients_in_bowl(egg: item, lemon: item, vegetables: item, bowl: item):
    body:
        achieve_once inside(egg, bowl)
        achieve_once inside(lemon, bowl)
        achieve_once inside(vegetables, bowl)

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg) and cut(egg)
        # Select the cut egg

        bind lemon: item where:
            is_food_lemon(lemon) and cut(lemon)
        # Select the cut lemon

        bind vegetables: item where:
            is_food_vegetable(vegetables) and cut(vegetables)
        # Select the cut vegetables

        bind bowl: item where:
            is_bowl(bowl)
        # Select the bowl to mix ingredients in

        mix_ingredients_in_bowl(egg, lemon, vegetables, bowl)
##############################
From agent.py-> find a plan in act()
walk_executor(bench_126)exp(bowl_2096, bench_126)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(bowl_2096)putin_executor(food_egg_2053, bowl_2096)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(bowl_2096)putin_executor(food_lemon_2061, bowl_2096)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(bowl_2096)putin_executor(food_vegetable_2072, bowl_2096)
##############################
From agent.py
walk_executor(bench_126)
Robot find: mat_115, Robot is close to the knife_2036. Robot is close to the bench_126. 
##############################
From agent.py
exp(bowl_2096, bench_126)
Fail to find bowl_2096 around bench_126. 
##############################
From agent.py-> find a plan in act()
walk_executor(bench_124)exp(bowl_2096, bench_124)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(bowl_2096)putin_executor(food_egg_2053, bowl_2096)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(bowl_2096)putin_executor(food_lemon_2061, bowl_2096)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(bowl_2096)putin_executor(food_vegetable_2072, bowl_2096)
##############################
From agent.py
walk_executor(bench_124)
Robot find: mat_114, drawing_118, Robot is close to the knife_2036. Robot is close to the bench_124. 
##############################
From agent.py
exp(bowl_2096, bench_124)
Fail to find bowl_2096 around bench_124. 
##############################
From agent.py-> find a plan in act()
walk_executor(bench_125)exp(bowl_2096, bench_125)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(bowl_2096)putin_executor(food_egg_2053, bowl_2096)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(bowl_2096)putin_executor(food_lemon_2061, bowl_2096)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(bowl_2096)putin_executor(food_vegetable_2072, bowl_2096)
##############################
From agent.py
walk_executor(bench_125)
Robot find: Robot is close to the knife_2036. Robot is close to the bench_125. 
##############################
From agent.py
exp(bowl_2096, bench_125)
Fail to find bowl_2096 around bench_125. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_127)exp(bowl_2096, table_127)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(bowl_2096)putin_executor(food_egg_2053, bowl_2096)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(bowl_2096)putin_executor(food_lemon_2061, bowl_2096)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(bowl_2096)putin_executor(food_vegetable_2072, bowl_2096)
##############################
From agent.py
walk_executor(table_127)
Robot find: fork_2104, console_2027, crayon_2030, bowl_2096, bowl_2097, napkin_2014, plate_2105, Robot is close to the knife_2036. Robot is close to the mat_115. Robot is close to the table_127. 
##############################
From agent.py
exp(bowl_2096, table_127)
Find bowl_2096. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(bowl_2096)putin_executor(food_egg_2053, bowl_2096)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(bowl_2096)putin_executor(food_lemon_2061, bowl_2096)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(bowl_2096)putin_executor(food_vegetable_2072, bowl_2096)
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. Grabbing food_egg_2053 by left hand. 
##############################
From agent.py
walk_executor(bowl_2096)
Robot find: Robot is close to the knife_2036. Robot is close to the food_egg_2053. Robot is close to the bowl_2096. Robot is close to the table_127. 
##############################
From agent.py
putin_executor(food_egg_2053, bowl_2096)
Robot find: Robot is close to the knife_2036. Robot is close to the food_egg_2053. Robot is close to the bowl_2096. Robot is close to the table_127. bowl_2096 is close food_egg_2053. food_egg_2053 is close bowl_2096. food_egg_2053 is inside bowl_2096. food_egg_2053 released by left hand. 
##############################
From agent.py
walk_executor(food_lemon_2061)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_lemon_2061. 
##############################
From agent.py
grab_executor(food_lemon_2061)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_lemon_2061. Grabbing food_lemon_2061 by left hand. 
##############################
From agent.py
walk_executor(bowl_2096)
Robot find: Robot is close to the knife_2036. Robot is close to the food_lemon_2061. Robot is close to the bowl_2096. Robot is close to the table_127. 
##############################
From agent.py
putin_executor(food_lemon_2061, bowl_2096)
Robot find: Robot is close to the knife_2036. Robot is close to the food_lemon_2061. Robot is close to the bowl_2096. Robot is close to the table_127. food_lemon_2061 is close bowl_2096. bowl_2096 is close food_lemon_2061. food_lemon_2061 is inside bowl_2096. food_lemon_2061 released by left hand. 
##############################
From agent.py
walk_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the cutting_board_2080. 
##############################
From agent.py
grab_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the cutting_board_2080. Grabbing food_vegetable_2072 by left hand. 
##############################
From agent.py
walk_executor(bowl_2096)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the bowl_2096. Robot is close to the table_127. 
##############################
From agent.py
putin_executor(food_vegetable_2072, bowl_2096)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the bowl_2096. Robot is close to the table_127. food_vegetable_2072 is close bowl_2096. bowl_2096 is close food_vegetable_2072. food_vegetable_2072 is inside bowl_2096. food_vegetable_2072 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make a bowl of egg salad with boiled egg, lemon, and vegetables.
Action History:
['walk_executor(kitchen_counter_132)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'walk_executor(pot_54)', 'open_executor(pot_54)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(pot_54)', 'putin_executor(food_egg_2053, pot_54)', 'grab_executor(pot_54)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(stove_2090)', 'put_executor(pot_54, stove_2090)', 'switchon_executor(stove_2090)', 'grab_executor(pot_54)', 'walk_executor(faucet_308)', 'switchoff_executor(faucet_308)', 'walk_executor(food_vegetable_2072)', 'grab_executor(food_vegetable_2072)', 'walk_executor(kitchen_counter_132)', 'put_executor(pot_54, kitchen_counter_132)', 'switchon_executor(faucet_134)', 'wash_executor(food_vegetable_2072)', 'switchoff_executor(faucet_134)', 'grab_executor(pot_54)', 'walk_executor(faucet_134)', 'walk_executor(kitchen_counter_132)', 'put_executor(pot_54, kitchen_counter_132)', 'switchon_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(pot_54)', 'grab_executor(pot_54)', 'walk_executor(stove_2090)', 'put_executor(pot_54, stove_2090)', 'walk_executor(faucet_134)', 'switchon_executor(faucet_134)', 'wash_executor(food_vegetable_2072)', 'switchoff_executor(faucet_134)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(cutting_board_2080)', 'put_executor(food_egg_2053, cutting_board_2080)', 'walk_executor(knifeblock_52)', 'walk_executor(curtain_390)', 'open_executor(curtain_390)', 'walk_executor(chair_138)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(cupboard_130)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'grab_executor(knife_2036)', 'walk_executor(food_egg_2053)', 'cut_executor(food_egg_2053)', 'walk_executor(kitchen_counter_128)', 'put_executor(food_vegetable_2072, kitchen_counter_128)', 'walk_executor(food_lemon_2061)', 'grab_executor(food_lemon_2061)', 'walk_executor(cutting_board_2080)', 'put_executor(food_lemon_2061, cutting_board_2080)', 'walk_executor(food_lemon_2061)', 'cut_executor(food_lemon_2061)', 'walk_executor(food_vegetable_2072)', 'grab_executor(food_vegetable_2072)', 'walk_executor(cutting_board_2080)', 'put_executor(food_vegetable_2072, cutting_board_2080)', 'walk_executor(food_vegetable_2072)', 'cut_executor(food_vegetable_2072)', 'walk_executor(bench_126)', 'walk_executor(bench_124)', 'walk_executor(bench_125)', 'walk_executor(table_127)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(bowl_2096)', 'putin_executor(food_egg_2053, bowl_2096)', 'walk_executor(food_lemon_2061)', 'grab_executor(food_lemon_2061)', 'walk_executor(bowl_2096)', 'putin_executor(food_lemon_2061, bowl_2096)', 'walk_executor(food_vegetable_2072)', 'grab_executor(food_vegetable_2072)', 'walk_executor(bowl_2096)', 'putin_executor(food_vegetable_2072, bowl_2096)']
Time info:
Time consume: 566 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 100
goal generate times: 6
goal correct times: 0
action_num: 86

Task complete rate:
Keystate: k1 - Requires: 11 steps
Keystate: k2 - Requires: 0 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
