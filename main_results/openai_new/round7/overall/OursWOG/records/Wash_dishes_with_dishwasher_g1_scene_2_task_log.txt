From agent.py
Reset goals: The sub-goals are: 
['1. Identify and gather all the bowls and plates that need washing.', '2. Load the bowls and plates into the dishwasher and start it.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2095_around_sink_133(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(bowl,sink_instance)
        else:
            exp(bowl,sink_instance)
    eff:
        unknown[bowl]=False
        close[bowl,sink_instance]=True
        close[sink_instance,bowl]=True
    

behavior find_plate_2105_around_sink_133(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(plate,sink_instance)
        else:
            exp(plate,sink_instance)
    eff:
        unknown[plate]=False
        close[plate,sink_instance]=True
        close[sink_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
def has_bowls_or_plates():
    # Function to check if there are bowls or plates in previously visited areas
    symbol available=exists o: item : ((is_bowl(o) or is_plate(o)) and visited(o) and dirty(o))
    return available

behavior __goal__():
    body:
        if has_bowls_or_plates():
            # If we have already found bowls or plates that need washing based on known information
            bind dish: item where:
                (is_bowl(dish) or is_plate(dish)) and visited(dish) and dirty(dish)
            # Move closer to the found dish
            achieve close_char(char, dish)

        else:
            # If no dirty bowls or plates are found in the visited areas, start exploring
            foreach dish: item:
                if (is_bowl(dish) or is_plate(dish)) and not visited(dish) and dirty(dish):
                    observe(dish, "Check the location of dirty bowls or plates")

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2095_around_sink_133(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(bowl,sink_instance)
        else:
            exp(bowl,sink_instance)
    eff:
        unknown[bowl]=False
        close[bowl,sink_instance]=True
        close[sink_instance,bowl]=True
    

behavior find_plate_2105_around_sink_133(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(plate,sink_instance)
        else:
            exp(plate,sink_instance)
    eff:
        unknown[plate]=False
        close[plate,sink_instance]=True
        close[sink_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
def has_bowls_or_plates_in_location():
    # Function to check if there are any bowls or plates in previously visited locations
    symbol available=exists o: item : ((is_bowl(o) or is_plate(o)) and visited(o))
    return available

behavior __goal__():
    body:
        if has_bowls_or_plates_in_location():
            # If we have already found bowls or plates based on known information
            bind item: item where:
                (is_bowl(item) or is_plate(item)) and visited(item)
            # Move closer to the found item
            achieve close_char(char, item)

        else:
            # If no bowls or plates are found in visited areas, start exploring
            foreach o: item:
                if (is_bowl(o) or is_plate(o)) and not visited(o):
                    observe(o, "Check the location of the bowls and plates")

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_bowls_or_plates_in_location():
    # Function to check if there are any bowls or plates in previously visited locations
    symbol available=exists o: item : ((is_bowl(o) or is_plate(o)) and visited(o))
    return available

behavior __goal__():
    body:
        if has_bowls_or_plates_in_location():
            # If we have already found bowls or plates based on known information
            bind item: item where:
                (is_bowl(item) or is_plate(item)) and visited(item)
            # Move closer to the found item
            achieve close_char(char, item)

        else:
            # If no bowls or plates are found in visited areas, start exploring
            foreach o: item:
                if (is_bowl(o) or is_plate(o)) and not visited(o):
                    observe(o, "Check the location of the bowls and plates")

##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)exp(bowl_2095, sink_133)walk_executor(bowl_2095)obs(bowl_2095, Check the location of the bowls and plates)walk_executor(sink_133)exp(bowl_2096, sink_133)walk_executor(bowl_2096)obs(bowl_2096, Check the location of the bowls and plates)walk_executor(sink_133)exp(bowl_2097, sink_133)walk_executor(bowl_2097)obs(bowl_2097, Check the location of the bowls and plates)walk_executor(sink_133)exp(plate_2105, sink_133)walk_executor(plate_2105)obs(plate_2105, Check the location of the bowls and plates)
##############################
From agent.py
walk_executor(sink_133)
Robot find: after_shave_2029, cleaning_solution_2098, juice_2034, pot_54, Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
exp(bowl_2095, sink_133)
Fail to find bowl_2095 around sink_133. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_129)exp(bowl_2095, kitchen_counter_129)walk_executor(bowl_2095)obs(bowl_2095, Check the location of the bowls and plates)walk_executor(kitchen_counter_129)exp(bowl_2096, kitchen_counter_129)walk_executor(bowl_2096)obs(bowl_2096, Check the location of the bowls and plates)walk_executor(kitchen_counter_129)exp(bowl_2097, kitchen_counter_129)walk_executor(bowl_2097)obs(bowl_2097, Check the location of the bowls and plates)walk_executor(kitchen_counter_128)exp(plate_2105, kitchen_counter_128)walk_executor(plate_2105)obs(plate_2105, Check the location of the bowls and plates)
##############################
From agent.py
walk_executor(kitchen_counter_129)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the kitchen_counter_129. 
##############################
From agent.py
exp(bowl_2095, kitchen_counter_129)
Fail to find bowl_2095 around kitchen_counter_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(bowl_2095, kitchen_counter_128)walk_executor(bowl_2095)obs(bowl_2095, Check the location of the bowls and plates)walk_executor(kitchen_counter_128)exp(bowl_2096, kitchen_counter_128)walk_executor(bowl_2096)obs(bowl_2096, Check the location of the bowls and plates)walk_executor(kitchen_counter_128)exp(bowl_2097, kitchen_counter_128)walk_executor(bowl_2097)obs(bowl_2097, Check the location of the bowls and plates)walk_executor(kitchen_counter_128)exp(plate_2105, kitchen_counter_128)walk_executor(plate_2105)obs(plate_2105, Check the location of the bowls and plates)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(bowl_2095, kitchen_counter_128)
Fail to find bowl_2095 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(stove_2090)open_executor(stove_2090)exp(bowl_2095, stove_2090)walk_executor(bowl_2095)obs(bowl_2095, Check the location of the bowls and plates)walk_executor(stove_2090)exp(bowl_2096, stove_2090)walk_executor(bowl_2096)obs(bowl_2096, Check the location of the bowls and plates)walk_executor(stove_2090)exp(bowl_2097, stove_2090)walk_executor(bowl_2097)obs(bowl_2097, Check the location of the bowls and plates)walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(plate_2105, dishwasher_143)walk_executor(plate_2105)obs(plate_2105, Check the location of the bowls and plates)
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
open_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is opened. 
##############################
From agent.py
exp(bowl_2095, stove_2090)
Fail to find bowl_2095 around stove_2090. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(bowl_2095, cupboard_131)walk_executor(bowl_2095)obs(bowl_2095, Check the location of the bowls and plates)walk_executor(cupboard_131)exp(bowl_2096, cupboard_131)walk_executor(bowl_2096)obs(bowl_2096, Check the location of the bowls and plates)walk_executor(cupboard_131)exp(bowl_2097, cupboard_131)walk_executor(bowl_2097)obs(bowl_2097, Check the location of the bowls and plates)walk_executor(cupboard_130)exp(plate_2105, cupboard_130)walk_executor(plate_2105)obs(plate_2105, Check the location of the bowls and plates)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(bowl_2095, cupboard_131)
Fail to find bowl_2095 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(bowl_2095, cupboard_130)walk_executor(bowl_2095)obs(bowl_2095, Check the location of the bowls and plates)walk_executor(cupboard_130)exp(bowl_2096, cupboard_130)walk_executor(bowl_2096)obs(bowl_2096, Check the location of the bowls and plates)walk_executor(cupboard_130)exp(bowl_2097, cupboard_130)walk_executor(bowl_2097)obs(bowl_2097, Check the location of the bowls and plates)walk_executor(cupboard_130)exp(plate_2105, cupboard_130)walk_executor(plate_2105)obs(plate_2105, Check the location of the bowls and plates)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2095 ?
Answer: Robot, you can find bowl_2095 inside dining_room_1. It is located on top of table_123. To aid your identification, look for the bowl situated on this table.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, you can find bowl_2095 inside dining_room_1. It is located on top of table_123. To aid your identification, look for the bowl situated on this table.

The actions you have taken:
Action 1: Walk to sink_133.
Action 2: look for bowl_2095 around sink_133.
Action 3: Walk to kitchen_counter_129.
Action 4: look for bowl_2095 around kitchen_counter_129.
Action 5: Walk to kitchen_counter_128.
Action 6: look for bowl_2095 around kitchen_counter_128.
Action 7: Walk to stove_2090.
Action 8: Open stove_2090.
Action 9: look for bowl_2095 around stove_2090.
Action 10: Walk to cupboard_131.
Action 11: Open cupboard_131.
Action 12: look for bowl_2095 around cupboard_131.
Action 13: Walk to cupboard_130.

##############################
From agent.py
exp(bowl_2095, cupboard_130)
Fail to find bowl_2095 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(bowl_2095, table_123)walk_executor(bowl_2095)obs(bowl_2095, Check the location of the bowls and plates)walk_executor(table_123)exp(bowl_2096, table_123)walk_executor(bowl_2096)obs(bowl_2096, Check the location of the bowls and plates)walk_executor(table_123)exp(bowl_2097, table_123)walk_executor(bowl_2097)obs(bowl_2097, Check the location of the bowls and plates)walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(plate_2105, dishwasher_143)walk_executor(plate_2105)obs(plate_2105, Check the location of the bowls and plates)
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, laptop_2015, fork_2103, cup_2087, bowl_2095, drawing_118, Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
exp(bowl_2095, table_123)
Find bowl_2095. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2095)obs(bowl_2095, Check the location of the bowls and plates)walk_executor(table_123)exp(bowl_2096, table_123)walk_executor(bowl_2096)obs(bowl_2096, Check the location of the bowls and plates)walk_executor(table_123)exp(bowl_2097, table_123)walk_executor(bowl_2097)obs(bowl_2097, Check the location of the bowls and plates)walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(plate_2105, dishwasher_143)walk_executor(plate_2105)obs(plate_2105, Check the location of the bowls and plates)
##############################
From agent.py
walk_executor(bowl_2095)
Robot find: Robot is close to the table_123. Robot is close to the bowl_2095. 
##############################
From agent.py
obs(bowl_2095, Check the location of the bowls and plates)
Get this information:  bowl_2095 is inside dining_room_1. bowl_2095 is close to table_123. bowl_2095 is close to character_219. bowl_2095 is on table_123. bowl_2095 is DIRTY.
##############################
From agent.py
walk_executor(table_123)
Robot find: Robot is close to the table_123. Robot is close to the mat_114. 
##############################
From agent.py
exp(bowl_2096, table_123)
Fail to find bowl_2096 around table_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2095)
##############################
From agent.py
walk_executor(bowl_2095)
Robot find: Robot is close to the table_123. Robot is close to the bowl_2095. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2096_around_table_127(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(bowl,table_instance)
        else:
            exp(bowl,table_instance)
    eff:
        unknown[bowl]=False
        close[bowl,table_instance]=True
        close[table_instance,bowl]=True
    

behavior find_plate_2105_around_dishwasher_143(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==143
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(plate,dishwasher_instance)
        else:
            exp(plate,dishwasher_instance)
    eff:
        unknown[plate]=False
        close[plate,dishwasher_instance]=True
        close[dishwasher_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(item: item, dishwasher: item):
    body:
        achieve_once inside(item, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher: item):
    body:
        achieve_once closed(dishwasher)
        # Close the dishwasher door
        achieve_once is_on(dishwasher)
        # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher

        foreach item: item:
        # Load all bowls and plates into the dishwasher
            if is_bowl(item) or is_plate(item):
                load_dishwasher(item, dishwasher)

        start_dishwasher(dishwasher)
        # Start the dishwasher

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_dishwasher(item: item, dishwasher: item):
    body:
        achieve_once inside(item, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher: item):
    body:
        achieve_once closed(dishwasher)
        # Close the dishwasher door
        achieve_once is_on(dishwasher)
        # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher

        foreach item: item:
        # Load all bowls and plates into the dishwasher
            if is_bowl(item) or is_plate(item):
                load_dishwasher(item, dishwasher)

        start_dishwasher(dishwasher)
        # Start the dishwasher

##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)open_executor(dishwasher_143)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(dishwasher_143)putin_executor(bowl_2095, dishwasher_143)walk_executor(table_127)exp(bowl_2096, table_127)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(table_127)exp(bowl_2097, table_127)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)exp(plate_2105, dishwasher_143)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)close_executor(dishwasher_143)switchon_executor(dishwasher_143)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
walk_executor(bowl_2095)
Robot find: Robot is close to the table_123. Robot is close to the bowl_2095. 
##############################
From agent.py
grab_executor(bowl_2095)
Robot find: Robot is close to the table_123. Robot is close to the bowl_2095. Grabbing bowl_2095 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the bowl_2095. Robot is close to the knife_2036. Robot is close to the dishwasher_143. 
##############################
From agent.py
putin_executor(bowl_2095, dishwasher_143)
Robot find: Robot is close to the bowl_2095. Robot is close to the knife_2036. Robot is close to the dishwasher_143. bowl_2095 is inside dishwasher_143. bowl_2095 is close dishwasher_143. dishwasher_143 is close bowl_2095. bowl_2095 released by right hand. 
##############################
From agent.py
walk_executor(table_127)
Robot find: mat_115, fork_2104, console_2027, crayon_2030, bowl_2096, bowl_2097, napkin_2014, plate_2105, Robot is close to the mat_115. Robot is close to the table_127. 
##############################
From agent.py
exp(bowl_2096, table_127)
Find bowl_2096. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)close_executor(dishwasher_143)switchon_executor(dishwasher_143)
##############################
From agent.py
walk_executor(bowl_2096)
Robot find: Robot is close to the table_127. Robot is close to the bowl_2096. 
##############################
From agent.py
grab_executor(bowl_2096)
Robot find: Robot is close to the table_127. Robot is close to the bowl_2096. Grabbing bowl_2096 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the bowl_2096. Robot is close to the knife_2036. Robot is close to the bowl_2095. Robot is close to the dishwasher_143. 
##############################
From agent.py
putin_executor(bowl_2096, dishwasher_143)
Robot find: Robot is close to the bowl_2096. Robot is close to the knife_2036. Robot is close to the bowl_2095. Robot is close to the dishwasher_143. bowl_2096 is close dishwasher_143. bowl_2096 is inside dishwasher_143. dishwasher_143 is close bowl_2096. bowl_2096 released by right hand. 
##############################
From agent.py
walk_executor(bowl_2097)
Robot find: Robot is close to the bowl_2097. Robot is close to the table_127. 
##############################
From agent.py
grab_executor(bowl_2097)
Robot find: Robot is close to the bowl_2097. Robot is close to the table_127. Grabbing bowl_2097 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the bowl_2097. Robot is close to the bowl_2095. Robot is close to the bowl_2096. Robot is close to the dishwasher_143. Robot is close to the knife_2036. 
##############################
From agent.py
putin_executor(bowl_2097, dishwasher_143)
Robot find: Robot is close to the bowl_2097. Robot is close to the bowl_2095. Robot is close to the bowl_2096. Robot is close to the dishwasher_143. Robot is close to the knife_2036. bowl_2097 is inside dishwasher_143. bowl_2097 is close dishwasher_143. dishwasher_143 is close bowl_2097. bowl_2097 released by right hand. 
##############################
From agent.py
walk_executor(plate_2105)
Robot find: Robot is close to the plate_2105. Robot is close to the table_127. 
##############################
From agent.py
grab_executor(plate_2105)
Robot find: Robot is close to the plate_2105. Robot is close to the table_127. Grabbing plate_2105 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the plate_2105. Robot is close to the bowl_2095. Robot is close to the bowl_2096. Robot is close to the bowl_2097. Robot is close to the dishwasher_143. Robot is close to the knife_2036. 
##############################
From agent.py
putin_executor(plate_2105, dishwasher_143)
Robot find: Robot is close to the plate_2105. Robot is close to the bowl_2095. Robot is close to the bowl_2096. Robot is close to the bowl_2097. Robot is close to the dishwasher_143. Robot is close to the knife_2036. plate_2105 is inside dishwasher_143. plate_2105 is close dishwasher_143. dishwasher_143 is close plate_2105. plate_2105 released by right hand. 
##############################
From agent.py
close_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. dishwasher_143 is closed. 
##############################
From agent.py
switchon_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. dishwasher_143 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
wash all the bowls and the plates with dishwasher
Action History:
['walk_executor(sink_133)', 'walk_executor(kitchen_counter_129)', 'walk_executor(kitchen_counter_128)', 'walk_executor(stove_2090)', 'open_executor(stove_2090)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(cupboard_130)', 'walk_executor(table_123)', 'walk_executor(bowl_2095)', 'walk_executor(table_123)', 'walk_executor(bowl_2095)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'walk_executor(bowl_2095)', 'grab_executor(bowl_2095)', 'walk_executor(dishwasher_143)', 'putin_executor(bowl_2095, dishwasher_143)', 'walk_executor(table_127)', 'walk_executor(bowl_2096)', 'grab_executor(bowl_2096)', 'walk_executor(dishwasher_143)', 'putin_executor(bowl_2096, dishwasher_143)', 'walk_executor(bowl_2097)', 'grab_executor(bowl_2097)', 'walk_executor(dishwasher_143)', 'putin_executor(bowl_2097, dishwasher_143)', 'walk_executor(plate_2105)', 'grab_executor(plate_2105)', 'walk_executor(dishwasher_143)', 'putin_executor(plate_2105, dishwasher_143)', 'close_executor(dishwasher_143)', 'switchon_executor(dishwasher_143)']
Time info:
Time consume: 184 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 35
goal generate times: 3
goal correct times: 0
action_num: 33

Task complete rate:
1
Scene_id: 2
##############################
