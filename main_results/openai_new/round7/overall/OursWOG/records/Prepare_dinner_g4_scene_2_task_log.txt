From agent.py
Reset goals: The sub-goals are: 
['1. Find and prepare the ingredients for fried rice with egg, ensuring they are cut and ready for cooking if needed.  ', '2. Cook the rice and scramble the egg together.  ', '3. Mix the ingredients thoroughly to make the fried rice with egg.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_carrot_2047_around_fridge_140(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_carrot,fridge_instance)
        else:
            exp(food_carrot,fridge_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,fridge_instance]=True
        close[fridge_instance,food_carrot]=True
    

behavior find_food_rice_2067_around_fridge_140(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_rice,fridge_instance)
        else:
            exp(food_rice,fridge_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,fridge_instance]=True
        close[fridge_instance,food_rice]=True
    

behavior find_food_onion_2026_around_fridge_140(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_onion,fridge_instance)
        else:
            exp(food_onion,fridge_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,fridge_instance]=True
        close[fridge_instance,food_onion]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_food_vegetable_2072_around_fridge_140(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_vegetable,fridge_instance)
        else:
            exp(food_vegetable,fridge_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,fridge_instance]=True
        close[fridge_instance,food_vegetable]=True
    

#exp_behavior_end

#goal_representation
 
def is_needed_ingredient(ingredient:item):
    # Function to check if an item is a needed ingredient for fried rice with egg
    symbol needed= is_food_rice(ingredient) or is_food_egg(ingredient) or is_food_vegetable(ingredient) or is_food_carrot(ingredient) or is_food_onion(ingredient)
    return needed

behavior prepare_ingredient(ingredient:item, cutting_board:item, knife:item):
    body:
        if cuttable(ingredient):
            achieve_once on(ingredient, cutting_board)
            achieve_once cut(ingredient)

behavior __goal__():
    body:
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board for preparing the ingredients

        bind knife: item where:
            is_knife(knife)
        # Select a knife for preparing the ingredients

        foreach ingredient: item:
            if is_needed_ingredient(ingredient):
                prepare_ingredient(ingredient, cutting_board, knife)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_needed_ingredient(ingredient:item):
    # Function to check if an item is a needed ingredient for fried rice with egg
    symbol needed= is_food_rice(ingredient) or is_food_egg(ingredient) or is_food_vegetable(ingredient) or is_food_carrot(ingredient) or is_food_onion(ingredient)
    return needed

behavior prepare_ingredient(ingredient:item, cutting_board:item, knife:item):
    body:
        if cuttable(ingredient):
            achieve_once on(ingredient, cutting_board)
            achieve_once cut(ingredient)

behavior __goal__():
    body:
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board for preparing the ingredients

        bind knife: item where:
            is_knife(knife)
        # Select a knife for preparing the ingredients

        foreach ingredient: item:
            if is_needed_ingredient(ingredient):
                prepare_ingredient(ingredient, cutting_board, knife)

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_carrot_2047, fridge_140)walk_executor(food_carrot_2047)grab_executor(food_carrot_2047)walk_executor(cutting_board_2080)put_executor(food_carrot_2047, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_carrot_2047)cut_executor(food_carrot_2047)walk_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(food_egg_2053)cut_executor(food_egg_2053)walk_executor(fridge_140)exp(food_vegetable_2072, fridge_140)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)walk_executor(fridge_140)exp(food_onion_2026, fridge_140)walk_executor(food_onion_2026)grab_executor(food_onion_2026)walk_executor(cutting_board_2080)put_executor(food_onion_2026, cutting_board_2080)walk_executor(food_onion_2026)cut_executor(food_onion_2026)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_carrot_2047, fridge_140)
Find food_carrot_2047. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_carrot_2047)walk_executor(cutting_board_2080)put_executor(food_carrot_2047, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_carrot_2047)cut_executor(food_carrot_2047)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(food_egg_2053)cut_executor(food_egg_2053)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)walk_executor(fridge_140)exp(food_onion_2026, fridge_140)walk_executor(food_onion_2026)grab_executor(food_onion_2026)walk_executor(cutting_board_2080)put_executor(food_onion_2026, cutting_board_2080)walk_executor(food_onion_2026)cut_executor(food_onion_2026)
##############################
From agent.py
grab_executor(food_carrot_2047)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. Grabbing food_carrot_2047 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the food_carrot_2047. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_carrot_2047, cutting_board_2080)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. cutting_board_2080 is close food_carrot_2047. food_carrot_2047 is close cutting_board_2080. food_carrot_2047 is on cutting_board_2080. food_carrot_2047 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_52)
Robot find: pot_54, Robot is close to the knifeblock_52. 
##############################
From agent.py
exp(knife_2036, knifeblock_52)
Fail to find knife_2036 around knifeblock_52. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_188)open_executor(bookshelf_188)exp(knife_2036, bookshelf_188)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_carrot_2047)cut_executor(food_carrot_2047)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(food_egg_2053)cut_executor(food_egg_2053)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)walk_executor(kitchen_counter_132)exp(food_onion_2026, kitchen_counter_132)walk_executor(food_onion_2026)grab_executor(food_onion_2026)walk_executor(cutting_board_2080)put_executor(food_onion_2026, cutting_board_2080)walk_executor(food_onion_2026)cut_executor(food_onion_2026)
##############################
From agent.py
walk_executor(bookshelf_188)
Robot find: drawing_196, Robot is close to the bookshelf_188. 
##############################
From agent.py
open_executor(bookshelf_188)
Robot find: Robot is close to the bookshelf_188. bookshelf_188 is opened. 
##############################
From agent.py
exp(knife_2036, bookshelf_188)
Fail to find knife_2036 around bookshelf_188. 
##############################
From agent.py-> find a plan in act()
walk_executor(stove_2090)open_executor(stove_2090)exp(knife_2036, stove_2090)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_carrot_2047)cut_executor(food_carrot_2047)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(food_egg_2053)cut_executor(food_egg_2053)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)walk_executor(kitchen_counter_132)exp(food_onion_2026, kitchen_counter_132)walk_executor(food_onion_2026)grab_executor(food_onion_2026)walk_executor(cutting_board_2080)put_executor(food_onion_2026, cutting_board_2080)walk_executor(food_onion_2026)cut_executor(food_onion_2026)
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
open_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is opened. 
##############################
From agent.py
exp(knife_2036, stove_2090)
Fail to find knife_2036 around stove_2090. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)exp(knife_2036, sink_133)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_carrot_2047)cut_executor(food_carrot_2047)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(food_egg_2053)cut_executor(food_egg_2053)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)walk_executor(bookshelf_136)exp(food_onion_2026, bookshelf_136)walk_executor(food_onion_2026)grab_executor(food_onion_2026)walk_executor(cutting_board_2080)put_executor(food_onion_2026, cutting_board_2080)walk_executor(food_onion_2026)cut_executor(food_onion_2026)
##############################
From agent.py
walk_executor(sink_133)
Robot find: after_shave_2029, cleaning_solution_2098, juice_2034, Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
exp(knife_2036, sink_133)
Fail to find knife_2036 around sink_133. 
##############################
From agent.py-> find a plan in act()
walk_executor(microwave_149)open_executor(microwave_149)exp(knife_2036, microwave_149)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_carrot_2047)cut_executor(food_carrot_2047)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(food_egg_2053)cut_executor(food_egg_2053)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)walk_executor(cupboard_130)exp(food_onion_2026, cupboard_130)walk_executor(food_onion_2026)grab_executor(food_onion_2026)walk_executor(cutting_board_2080)put_executor(food_onion_2026, cutting_board_2080)walk_executor(food_onion_2026)cut_executor(food_onion_2026)
##############################
From agent.py
walk_executor(microwave_149)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. 
##############################
From agent.py
open_executor(microwave_149)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. microwave_149 is opened. 
##############################
From agent.py
exp(knife_2036, microwave_149)
Fail to find knife_2036 around microwave_149. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_189)open_executor(bookshelf_189)exp(knife_2036, bookshelf_189)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_carrot_2047)cut_executor(food_carrot_2047)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(food_egg_2053)cut_executor(food_egg_2053)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)walk_executor(cupboard_131)open_executor(cupboard_131)exp(food_onion_2026, cupboard_131)walk_executor(food_onion_2026)grab_executor(food_onion_2026)walk_executor(cutting_board_2080)put_executor(food_onion_2026, cutting_board_2080)walk_executor(food_onion_2026)cut_executor(food_onion_2026)
##############################
From agent.py
walk_executor(bookshelf_189)
Robot find: Robot is close to the bookshelf_189. 
##############################
From agent.py
open_executor(bookshelf_189)
Robot find: Robot is close to the bookshelf_189. bookshelf_189 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find knife_2036 ?
Answer: Robot, go to dining_room_1 and locate dishwasher_143. knife_2036 is inside the dishwasher.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, go to dining_room_1 and locate dishwasher_143. knife_2036 is inside the dishwasher.

The actions you have taken:
Action 1: Walk to fridge_140.
Action 2: Switch off fridge_140.
Action 3: Open fridge_140.
Action 4: look for food_carrot_2047 around fridge_140.
Action 5: Grab food_carrot_2047.
Action 6: Walk to cutting_board_2080.
Action 7: Put food_carrot_2047 on cutting_board_2080.
Action 8: Walk to knifeblock_52.
Action 9: look for knife_2036 around knifeblock_52.
Action 10: Walk to bookshelf_188.
Action 11: Open bookshelf_188.
Action 12: look for knife_2036 around bookshelf_188.
Action 13: Walk to stove_2090.
Action 14: Open stove_2090.
Action 15: look for knife_2036 around stove_2090.
Action 16: Walk to sink_133.
Action 17: look for knife_2036 around sink_133.
Action 18: Walk to microwave_149.
Action 19: Open microwave_149.
Action 20: look for knife_2036 around microwave_149.
Action 21: Walk to bookshelf_189.
Action 22: Open bookshelf_189.

##############################
From agent.py
exp(knife_2036, bookshelf_189)
Fail to find knife_2036 around bookshelf_189. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(knife_2036, dishwasher_143)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_carrot_2047)cut_executor(food_carrot_2047)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(food_egg_2053)cut_executor(food_egg_2053)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)walk_executor(dishwasher_143)exp(food_onion_2026, dishwasher_143)walk_executor(food_onion_2026)grab_executor(food_onion_2026)walk_executor(cutting_board_2080)put_executor(food_onion_2026, cutting_board_2080)walk_executor(food_onion_2026)cut_executor(food_onion_2026)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(knife_2036, dishwasher_143)
Find knife_2036. 
##############################
From agent.py-> find a plan in act()
grab_executor(knife_2036)walk_executor(food_carrot_2047)cut_executor(food_carrot_2047)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(cutting_board_2080)put_executor(food_egg_2053, cutting_board_2080)walk_executor(food_egg_2053)cut_executor(food_egg_2053)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)walk_executor(dishwasher_143)exp(food_onion_2026, dishwasher_143)walk_executor(food_onion_2026)grab_executor(food_onion_2026)walk_executor(cutting_board_2080)put_executor(food_onion_2026, cutting_board_2080)walk_executor(food_onion_2026)cut_executor(food_onion_2026)
##############################
From agent.py
grab_executor(knife_2036)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. Grabbing knife_2036 by right hand. 
##############################
From agent.py
walk_executor(food_carrot_2047)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_carrot_2047. 
##############################
From agent.py
cut_executor(food_carrot_2047)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_carrot_2047. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the knife_2036. Robot is close to the fridge_140. Robot is close to the food_egg_2053. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the knife_2036. Robot is close to the fridge_140. Robot is close to the food_egg_2053. Grabbing food_egg_2053 by left hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_egg_2053, cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. cutting_board_2080 is close food_egg_2053. food_egg_2053 is close cutting_board_2080. food_egg_2053 is on cutting_board_2080. food_egg_2053 released by left hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the knife_2036. Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. 
##############################
From agent.py
cut_executor(food_egg_2053)
Robot find: Robot is close to the knife_2036. Robot is close to the food_egg_2053. Robot is close to the cutting_board_2080. 
##############################
From agent.py
walk_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the fridge_140. Grabbing food_vegetable_2072 by left hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_vegetable_2072, cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_vegetable_2072 is close cutting_board_2080. cutting_board_2080 is close food_vegetable_2072. food_vegetable_2072 is on cutting_board_2080. food_vegetable_2072 released by left hand. 
##############################
From agent.py
walk_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the cutting_board_2080. 
##############################
From agent.py
cut_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the cutting_board_2080. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. 
##############################
From agent.py
exp(food_onion_2026, dishwasher_143)
Fail to find food_onion_2026 around dishwasher_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(cleaning_solution_2098)exp(food_onion_2026, cleaning_solution_2098)walk_executor(food_onion_2026)grab_executor(food_onion_2026)walk_executor(cutting_board_2080)put_executor(food_onion_2026, cutting_board_2080)walk_executor(food_onion_2026)cut_executor(food_onion_2026)
##############################
From agent.py
walk_executor(cleaning_solution_2098)
Robot find: Robot is close to the knife_2036. Robot is close to the cleaning_solution_2098. Robot is close to the sink_133. 
##############################
From agent.py
exp(food_onion_2026, cleaning_solution_2098)
Fail to find food_onion_2026 around cleaning_solution_2098. 
##############################
From agent.py-> find a plan in act()
walk_executor(oven_141)open_executor(oven_141)exp(food_onion_2026, oven_141)walk_executor(food_onion_2026)grab_executor(food_onion_2026)walk_executor(cutting_board_2080)put_executor(food_onion_2026, cutting_board_2080)walk_executor(food_onion_2026)cut_executor(food_onion_2026)
##############################
From agent.py
walk_executor(oven_141)
Robot find: Robot is close to the knife_2036. Robot is close to the oven_141. 
##############################
From agent.py
open_executor(oven_141)
Robot find: food_butter_2018, dough_2021, food_onion_2026, tray_142, Robot is close to the knife_2036. Robot is close to the food_butter_2018. Robot is close to the dough_2021. Robot is close to the food_onion_2026. Robot is close to the oven_141. Robot is close to the tray_142. oven_141 is opened. 
##############################
From agent.py
exp(food_onion_2026, oven_141)
Find food_onion_2026. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_onion_2026)walk_executor(cutting_board_2080)put_executor(food_onion_2026, cutting_board_2080)walk_executor(food_onion_2026)cut_executor(food_onion_2026)
##############################
From agent.py
grab_executor(food_onion_2026)
Robot find: Robot is close to the knife_2036. Robot is close to the food_butter_2018. Robot is close to the dough_2021. Robot is close to the food_onion_2026. Robot is close to the oven_141. Robot is close to the tray_142. Grabbing food_onion_2026 by left hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_onion_2026. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_onion_2026, cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_onion_2026. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. cutting_board_2080 is close food_onion_2026. food_onion_2026 is close cutting_board_2080. food_onion_2026 is on cutting_board_2080. food_onion_2026 released by left hand. 
##############################
From agent.py
walk_executor(food_onion_2026)
Robot find: Robot is close to the knife_2036. Robot is close to the food_onion_2026. Robot is close to the cutting_board_2080. 
##############################
From agent.py
cut_executor(food_onion_2026)
Robot find: Robot is close to the knife_2036. Robot is close to the food_onion_2026. Robot is close to the cutting_board_2080. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2092_around_bookshelf_372(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==372
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_blender_2032_around_toaster_144(blender:item):
    goal: not unknown(blender)
    body:
        assert is_blender(blender)
        bind toaster_instance:item where:
            is_toaster(toaster_instance) and id[toaster_instance]==144
        achieve close_char(char,toaster_instance)
        if can_open(toaster_instance):
            achieve_once open(toaster_instance)
            exp(blender,toaster_instance)
        else:
            exp(blender,toaster_instance)
    eff:
        unknown[blender]=False
        close[blender,toaster_instance]=True
        close[toaster_instance,blender]=True
    

#exp_behavior_end

#goal_representation
behavior cook_rice_and_scramble_egg(rice:item, egg:item, stove:item, fryingpan:item):
    body:
        achieve_once inside(rice, fryingpan)
        achieve_once inhand(egg)
        achieve_once on(fryingpan, stove)
        achieve_once cut(egg) # Assuming this implies cracking the egg
        achieve_once is_on(stove) 

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select the rice

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan

        cook_rice_and_scramble_egg(rice, egg, stove, fryingpan)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior cook_rice_and_scramble_egg(rice:item, egg:item, stove:item, fryingpan:item):
    body:
        achieve_once inside(rice, fryingpan)
        achieve_once inhand(egg)
        achieve_once on(fryingpan, stove)
        achieve_once cut(egg) # Assuming this implies cracking the egg
        achieve_once is_on(stove) 

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select the rice

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan

        cook_rice_and_scramble_egg(rice, egg, stove, fryingpan)
##############################
From agent.py-> find a plan in act()
walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(fryingpan_2107)putin_executor(food_rice_2067, fryingpan_2107)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(food_rice_2067)
Robot find: Robot is close to the knife_2036. Robot is close to the food_rice_2067. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_rice_2067)
Robot find: Robot is close to the knife_2036. Robot is close to the food_rice_2067. Robot is close to the fridge_140. Grabbing food_rice_2067 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_rice_2067. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_rice_2067, fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_rice_2067. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. food_rice_2067 is inside fryingpan_2107. food_rice_2067 is close fryingpan_2107. fryingpan_2107 is close food_rice_2067. food_rice_2067 released by left hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_egg_2053. Grabbing food_egg_2053 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_egg_2053. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_blender_2032_around_cupboard_131(blender:item):
    goal: not unknown(blender)
    body:
        assert is_blender(blender)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(blender,cupboard_instance)
        else:
            exp(blender,cupboard_instance)
    eff:
        unknown[blender]=False
        close[blender,cupboard_instance]=True
        close[cupboard_instance,blender]=True
    

behavior find_box_2023_around_cupboard_131(box:item):
    goal: not unknown(box)
    body:
        assert is_box(box)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(box,cupboard_instance)
        else:
            exp(box,cupboard_instance)
    eff:
        unknown[box]=False
        close[box,cupboard_instance]=True
        close[cupboard_instance,box]=True
    

#exp_behavior_end

#goal_representation
 
def is_egg_inside_fryingpan(fryingpan:item):
    # Function to check if the egg is already inside the frying pan
    symbol egg_inside=exists o: item : (is_food_egg(o) and inside(o, fryingpan))
    return egg_inside

def is_rice_inside_fryingpan(fryingpan:item):
    # Function to check if the rice is already inside the frying pan
    symbol rice_inside=exists o: item : (is_food_rice(o) and inside(o, fryingpan))
    return rice_inside

behavior add_egg_and_rice_to_fryingpan(egg:item, rice:item, fryingpan:item):
    body:
        if not is_egg_inside_fryingpan(fryingpan):
            achieve_once inside(egg, fryingpan)
            
        if not is_rice_inside_fryingpan(fryingpan):
            achieve_once inside(rice, fryingpan)
            
behavior turn_on_stove_and_cook(fryingpan:item, stove:item):
    body:
        achieve_once on(fryingpan, stove)
        achieve is_on(stove)
        
behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg) and id[egg] == 2053
        # Select egg_2053

        bind rice: item where:
            is_food_rice(rice) and id[rice] == 2067
        # Select rice_2067

        bind fryingpan: item where:
            is_fryingpan(fryingpan) and id[fryingpan] == 2107
        # Select fryingpan_2107

        bind stove: item where:
            is_stove(stove) and id[stove] == 2090
        # Select stove_2090

        add_egg_and_rice_to_fryingpan(egg, rice, fryingpan)
        turn_on_stove_and_cook(fryingpan, stove)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_egg_inside_fryingpan(fryingpan:item):
    # Function to check if the egg is already inside the frying pan
    symbol egg_inside=exists o: item : (is_food_egg(o) and inside(o, fryingpan))
    return egg_inside

def is_rice_inside_fryingpan(fryingpan:item):
    # Function to check if the rice is already inside the frying pan
    symbol rice_inside=exists o: item : (is_food_rice(o) and inside(o, fryingpan))
    return rice_inside

behavior add_egg_and_rice_to_fryingpan(egg:item, rice:item, fryingpan:item):
    body:
        if not is_egg_inside_fryingpan(fryingpan):
            achieve_once inside(egg, fryingpan)
            
        if not is_rice_inside_fryingpan(fryingpan):
            achieve_once inside(rice, fryingpan)
            
behavior turn_on_stove_and_cook(fryingpan:item, stove:item):
    body:
        achieve_once on(fryingpan, stove)
        achieve is_on(stove)
        
behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg) and id[egg] == 2053
        # Select egg_2053

        bind rice: item where:
            is_food_rice(rice) and id[rice] == 2067
        # Select rice_2067

        bind fryingpan: item where:
            is_fryingpan(fryingpan) and id[fryingpan] == 2107
        # Select fryingpan_2107

        bind stove: item where:
            is_stove(stove) and id[stove] == 2090
        # Select stove_2090

        add_egg_and_rice_to_fryingpan(egg, rice, fryingpan)
        turn_on_stove_and_cook(fryingpan, stove)

##############################
From agent.py-> find a plan in act()
putin_executor(food_egg_2053, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
putin_executor(food_egg_2053, fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_egg_2053. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. food_egg_2053 is close fryingpan_2107. food_egg_2053 is inside fryingpan_2107. fryingpan_2107 is close food_egg_2053. food_egg_2053 released by left hand. 
##############################
From agent.py
grab_executor(fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_egg_2053. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Grabbing fryingpan_2107 by left hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(fryingpan_2107, stove_2090)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. fryingpan_2107 is on stove_2090. stove_2090 is close fryingpan_2107. fryingpan_2107 is close stove_2090. fryingpan_2107 released by left hand. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_bread_2016_around_toaster_144(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind toaster_instance:item where:
            is_toaster(toaster_instance) and id[toaster_instance]==144
        achieve close_char(char,toaster_instance)
        if can_open(toaster_instance):
            achieve_once open(toaster_instance)
            exp(food_bread,toaster_instance)
        else:
            exp(food_bread,toaster_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,toaster_instance]=True
        close[toaster_instance,food_bread]=True
    

behavior find_box_2023_around_door_234(box:item):
    goal: not unknown(box)
    body:
        assert is_box(box)
        bind door_instance:item where:
            is_door(door_instance) and id[door_instance]==234
        achieve close_char(char,door_instance)
        if can_open(door_instance):
            achieve_once open(door_instance)
            exp(box,door_instance)
        else:
            exp(box,door_instance)
    eff:
        unknown[box]=False
        close[box,door_instance]=True
        close[door_instance,box]=True
    

#exp_behavior_end

#goal_representation
 
behavior mix_ingredients_thoroughly(o1:item, o2:item, o3:item, fryingpan:item):
    body:
        achieve_once inside(o1, fryingpan)
        achieve_once inside(o2, fryingpan)
        achieve_once inside(o3, fryingpan)
        achieve_once cut(o1)
        achieve_once cut(o2)
        achieve_once cut(o3)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice) and id[rice] == 2067
        # Select the cooked rice

        bind egg: item where:
            is_food_egg(egg) and id[egg] == 2053
        # Select the scrambled egg

        bind fryingpan: item where:
            is_fryingpan(fryingpan) and id[fryingpan] == 2107
        # Select the frying pan containing cooked rice and scrambled egg

        bind carrot: item where:
            is_food_carrot(carrot) and id[carrot] == 2047
        # Select the carrot that needs to be thoroughly mixed

        bind onion: item where:
            is_food_onion(onion) and id[onion] == 2026
        # Select the onion that needs to be thoroughly mixed

        bind vegetable: item where:
            is_food_vegetable(vegetable) and id[vegetable] == 2072
        # Select the vegetable that needs to be thoroughly mixed

        mix_ingredients_thoroughly(carrot, onion, vegetable, fryingpan)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior mix_ingredients_thoroughly(o1:item, o2:item, o3:item, fryingpan:item):
    body:
        achieve_once inside(o1, fryingpan)
        achieve_once inside(o2, fryingpan)
        achieve_once inside(o3, fryingpan)
        achieve_once cut(o1)
        achieve_once cut(o2)
        achieve_once cut(o3)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice) and id[rice] == 2067
        # Select the cooked rice

        bind egg: item where:
            is_food_egg(egg) and id[egg] == 2053
        # Select the scrambled egg

        bind fryingpan: item where:
            is_fryingpan(fryingpan) and id[fryingpan] == 2107
        # Select the frying pan containing cooked rice and scrambled egg

        bind carrot: item where:
            is_food_carrot(carrot) and id[carrot] == 2047
        # Select the carrot that needs to be thoroughly mixed

        bind onion: item where:
            is_food_onion(onion) and id[onion] == 2026
        # Select the onion that needs to be thoroughly mixed

        bind vegetable: item where:
            is_food_vegetable(vegetable) and id[vegetable] == 2072
        # Select the vegetable that needs to be thoroughly mixed

        mix_ingredients_thoroughly(carrot, onion, vegetable, fryingpan)

##############################
From agent.py-> find a plan in act()
walk_executor(food_carrot_2047)grab_executor(food_carrot_2047)walk_executor(fryingpan_2107)putin_executor(food_carrot_2047, fryingpan_2107)walk_executor(food_onion_2026)grab_executor(food_onion_2026)walk_executor(fryingpan_2107)putin_executor(food_onion_2026, fryingpan_2107)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(fryingpan_2107)putin_executor(food_vegetable_2072, fryingpan_2107)
##############################
From agent.py
walk_executor(food_carrot_2047)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_carrot_2047. 
##############################
From agent.py
grab_executor(food_carrot_2047)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_carrot_2047. Grabbing food_carrot_2047 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_carrot_2047. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_carrot_2047, fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_carrot_2047. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. food_carrot_2047 is inside fryingpan_2107. food_carrot_2047 is close fryingpan_2107. fryingpan_2107 is close food_carrot_2047. food_carrot_2047 released by left hand. 
##############################
From agent.py
walk_executor(food_onion_2026)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_onion_2026. 
##############################
From agent.py
grab_executor(food_onion_2026)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_onion_2026. Grabbing food_onion_2026 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_onion_2026. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_onion_2026, fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_onion_2026. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. food_onion_2026 is close fryingpan_2107. food_onion_2026 is inside fryingpan_2107. fryingpan_2107 is close food_onion_2026. food_onion_2026 released by left hand. 
##############################
From agent.py
walk_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the cutting_board_2080. 
##############################
From agent.py
grab_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the cutting_board_2080. Grabbing food_vegetable_2072 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_vegetable_2072, fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. food_vegetable_2072 is close fryingpan_2107. food_vegetable_2072 is inside fryingpan_2107. fryingpan_2107 is close food_vegetable_2072. food_vegetable_2072 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Fried rice with egg.
Action History:
['walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'grab_executor(food_carrot_2047)', 'walk_executor(cutting_board_2080)', 'put_executor(food_carrot_2047, cutting_board_2080)', 'walk_executor(knifeblock_52)', 'walk_executor(bookshelf_188)', 'open_executor(bookshelf_188)', 'walk_executor(stove_2090)', 'open_executor(stove_2090)', 'walk_executor(sink_133)', 'walk_executor(microwave_149)', 'open_executor(microwave_149)', 'walk_executor(bookshelf_189)', 'open_executor(bookshelf_189)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'grab_executor(knife_2036)', 'walk_executor(food_carrot_2047)', 'cut_executor(food_carrot_2047)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(cutting_board_2080)', 'put_executor(food_egg_2053, cutting_board_2080)', 'walk_executor(food_egg_2053)', 'cut_executor(food_egg_2053)', 'walk_executor(food_vegetable_2072)', 'grab_executor(food_vegetable_2072)', 'walk_executor(cutting_board_2080)', 'put_executor(food_vegetable_2072, cutting_board_2080)', 'walk_executor(food_vegetable_2072)', 'cut_executor(food_vegetable_2072)', 'walk_executor(dishwasher_143)', 'walk_executor(cleaning_solution_2098)', 'walk_executor(oven_141)', 'open_executor(oven_141)', 'grab_executor(food_onion_2026)', 'walk_executor(cutting_board_2080)', 'put_executor(food_onion_2026, cutting_board_2080)', 'walk_executor(food_onion_2026)', 'cut_executor(food_onion_2026)', 'walk_executor(food_rice_2067)', 'grab_executor(food_rice_2067)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_rice_2067, fryingpan_2107)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(fryingpan_2107)', 'grab_executor(fryingpan_2107) (Failed)', 'putin_executor(food_egg_2053, fryingpan_2107)', 'grab_executor(fryingpan_2107)', 'walk_executor(stove_2090)', 'put_executor(fryingpan_2107, stove_2090)', 'switchon_executor(stove_2090)', 'walk_executor(food_carrot_2047)', 'grab_executor(food_carrot_2047)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_carrot_2047, fryingpan_2107)', 'walk_executor(food_onion_2026)', 'grab_executor(food_onion_2026)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_onion_2026, fryingpan_2107)', 'walk_executor(food_vegetable_2072)', 'grab_executor(food_vegetable_2072)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_vegetable_2072, fryingpan_2107)']
Time info:
Time consume: 423 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 44
goal generate times: 4
goal correct times: 0
action_num: 67

Task complete rate:
Keystate: k1 - Requires: 11 steps
Keystate: k2 - Requires: 4 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
