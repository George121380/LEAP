From agent.py
Reset goals: The sub-goals are: 
['1. Heat the milk using the microwave or stove.', '2. Pour the heated milk into a cup and add the cereal.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_hanger_112_around_closetdrawer_122(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==122
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(hanger,closetdrawer_instance)
        else:
            exp(hanger,closetdrawer_instance)
    eff:
        unknown[hanger]=False
        close[hanger,closetdrawer_instance]=True
        close[closetdrawer_instance,hanger]=True
    

behavior find_milk_2043_around_fridge_289(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

#exp_behavior_end

#goal_representation
 
behavior heat_milk(milk:item, microwave:item, stove:item):
    body:
        achieve_once inside(milk, microwave)
        # Place the milk inside the microwave temporarily
        achieve_once is_on(microwave)
        # Turn on the microwave to heat the milk

        # If the microwave is not available, use the stove
        achieve_once inside(milk, stove)
        # Place the milk on the stove temporarily
        achieve_once is_on(stove)
        # Turn on the stove to heat the milk

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind microwave: item where:
            is_microwave(microwave)
        # Select a microwave

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        heat_milk(milk, microwave, stove)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior heat_milk(milk:item, microwave:item, stove:item):
    body:
        achieve_once inside(milk, microwave)
        # Place the milk inside the microwave temporarily
        achieve_once is_on(microwave)
        # Turn on the microwave to heat the milk

        # If the microwave is not available, use the stove
        achieve_once inside(milk, stove)
        # Place the milk on the stove temporarily
        achieve_once is_on(stove)
        # Turn on the stove to heat the milk

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind microwave: item where:
            is_microwave(microwave)
        # Select a microwave

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        heat_milk(milk, microwave, stove)

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(milk_2043, fridge_289)walk_executor(microwave_297)open_executor(microwave_297)walk_executor(milk_2043)grab_executor(milk_2043)walk_executor(microwave_297)putin_executor(milk_2043, microwave_297)close_executor(microwave_297)switchon_executor(microwave_297)walk_executor(stove_2065)open_executor(stove_2065)walk_executor(microwave_297)switchoff_executor(microwave_297)open_executor(microwave_297)walk_executor(milk_2043)grab_executor(milk_2043)walk_executor(stove_2065)putin_executor(milk_2043, stove_2065)switchon_executor(stove_2065)
##############################
From agent.py
walk_executor(fridge_289)
Robot find: drawing_240, drawing_239, Robot is close to the fridge_289. 
##############################
From agent.py
switchoff_executor(fridge_289)
Robot find: Robot is close to the fridge_289. fridge_289 is turned off. 
##############################
From agent.py
open_executor(fridge_289)
Robot find: sauce_2078, food_steak_2008, food_apple_2009, food_bacon_2010, food_banana_2011, food_bread_2012, food_cake_2013, food_carrot_2014, food_cereal_2015, food_cheese_2016, food_chicken_2017, food_dessert_2018, food_donut_2019, food_egg_2020, food_fish_2021, food_food_2022, food_fruit_2023, food_hamburger_2024, food_ice_cream_2025, food_jam_2026, food_kiwi_2027, food_lemon_2028, food_noodles_2029, food_oatmeal_2030, food_orange_2031, food_onion_2032, food_peanut_butter_2033, food_pizza_2034, food_potato_2035, food_rice_2036, food_salt_2037, food_snack_2038, food_sugar_2039, food_turkey_2040, food_vegetable_2041, dry_pasta_2042, milk_2043, Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. fridge_289 is opened. 
##############################
From agent.py
exp(milk_2043, fridge_289)
Find milk_2043. 
##############################
From agent.py-> find a plan in act()
walk_executor(microwave_297)open_executor(microwave_297)walk_executor(milk_2043)grab_executor(milk_2043)walk_executor(microwave_297)putin_executor(milk_2043, microwave_297)close_executor(microwave_297)switchon_executor(microwave_297)walk_executor(stove_2065)open_executor(stove_2065)walk_executor(microwave_297)switchoff_executor(microwave_297)open_executor(microwave_297)walk_executor(milk_2043)grab_executor(milk_2043)walk_executor(stove_2065)putin_executor(milk_2043, stove_2065)switchon_executor(stove_2065)
##############################
From agent.py
walk_executor(microwave_297)
Robot find: drawing_238, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the microwave_297. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
open_executor(microwave_297)
Robot find: Robot is close to the microwave_297. Robot is close to the kitchen_counter_230. microwave_297 is opened. 
##############################
From agent.py
walk_executor(milk_2043)
Robot find: Robot is close to the fridge_289. Robot is close to the milk_2043. 
##############################
From agent.py
grab_executor(milk_2043)
Robot find: Robot is close to the fridge_289. Robot is close to the milk_2043. Grabbing milk_2043 by right hand. 
##############################
From agent.py
walk_executor(microwave_297)
Robot find: Robot is close to the milk_2043. Robot is close to the microwave_297. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
putin_executor(milk_2043, microwave_297)
Robot find: Robot is close to the milk_2043. Robot is close to the microwave_297. Robot is close to the kitchen_counter_230. milk_2043 is inside microwave_297. microwave_297 is close milk_2043. milk_2043 is close microwave_297. milk_2043 released by right hand. 
##############################
From agent.py
close_executor(microwave_297)
Robot find: Robot is close to the microwave_297. Robot is close to the kitchen_counter_230. microwave_297 is closed. 
##############################
From agent.py
switchon_executor(microwave_297)
Robot find: Robot is close to the microwave_297. Robot is close to the kitchen_counter_230. microwave_297 is turned on. 
##############################
From agent.py
walk_executor(stove_2065)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the stove_2065. 
##############################
From agent.py
open_executor(stove_2065)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the stove_2065. stove_2065 is opened. 
##############################
From agent.py
walk_executor(microwave_297)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the microwave_297. 
##############################
From agent.py
switchoff_executor(microwave_297)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the microwave_297. microwave_297 is turned off. 
##############################
From agent.py
open_executor(microwave_297)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the microwave_297. Robot is close to the milk_2043. microwave_297 is opened. 
##############################
From agent.py
walk_executor(milk_2043)
Robot find: Robot is close to the microwave_297. Robot is close to the milk_2043. 
##############################
From agent.py
grab_executor(milk_2043)
Robot find: Robot is close to the microwave_297. Robot is close to the milk_2043. Grabbing milk_2043 by right hand. 
##############################
From agent.py
walk_executor(stove_2065)
Robot find: Robot is close to the milk_2043. Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
putin_executor(milk_2043, stove_2065)
Robot find: Robot is close to the milk_2043. Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. milk_2043 is inside stove_2065. milk_2043 is close stove_2065. stove_2065 is close milk_2043. milk_2043 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2065)
Robot find: Robot is close to the milk_2043. Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. stove_2065 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2072_around_table_226(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==226
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(bowl,table_instance)
        else:
            exp(bowl,table_instance)
    eff:
        unknown[bowl]=False
        close[bowl,table_instance]=True
        close[table_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior pour_milk_into_cup(milk:item, cup:item):
    body:
        achieve_once inside(milk, cup)
        # Pour the heated milk into the cup

behavior add_cereal(cereal:item, cup:item):
    body:
        achieve_once inside(cereal, cup)
        # Add cereal to the cup with milk

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the heated milk

        bind cereal: item where:
            is_food_cereal(cereal)
        # Select the cereal

        bind cup: item where:
            is_cup(cup)
        # Select a cup for pouring milk and adding cereal

        pour_milk_into_cup(milk, cup) 
        add_cereal(cereal, cup)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior pour_milk_into_cup(milk:item, cup:item):
    body:
        achieve_once inside(milk, cup)
        # Pour the heated milk into the cup

behavior add_cereal(cereal:item, cup:item):
    body:
        achieve_once inside(cereal, cup)
        # Add cereal to the cup with milk

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the heated milk

        bind cereal: item where:
            is_food_cereal(cereal)
        # Select the cereal

        bind cup: item where:
            is_cup(cup)
        # Select a cup for pouring milk and adding cereal

        pour_milk_into_cup(milk, cup) 
        add_cereal(cereal, cup)

##############################
From agent.py-> find a plan in act()
grab_executor(milk_2043)walk_executor(cup_2063)putin_executor(milk_2043, cup_2063)walk_executor(food_cereal_2015)grab_executor(food_cereal_2015)walk_executor(cup_2063)putin_executor(food_cereal_2015, cup_2063)
##############################
From agent.py
grab_executor(milk_2043)
Robot find: Robot is close to the milk_2043. Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. Grabbing milk_2043 by right hand. 
##############################
From agent.py
walk_executor(cup_2063)
Robot find: Robot is close to the milk_2043. Robot is close to the kitchen_counter_230. Robot is close to the cup_2063. 
##############################
From agent.py
putin_executor(milk_2043, cup_2063)
Robot find: Robot is close to the milk_2043. Robot is close to the kitchen_counter_230. Robot is close to the cup_2063. milk_2043 is inside cup_2063. cup_2063 is close milk_2043. milk_2043 is close cup_2063. milk_2043 released by right hand. 
##############################
From agent.py
walk_executor(food_cereal_2015)
Robot find: Robot is close to the fridge_289. Robot is close to the food_cereal_2015. 
##############################
From agent.py
grab_executor(food_cereal_2015)
Robot find: Robot is close to the fridge_289. Robot is close to the food_cereal_2015. Grabbing food_cereal_2015 by right hand. 
##############################
From agent.py
walk_executor(cup_2063)
Robot find: Robot is close to the food_cereal_2015. Robot is close to the kitchen_counter_230. Robot is close to the cup_2063. 
##############################
From agent.py
putin_executor(food_cereal_2015, cup_2063)
Robot find: Robot is close to the food_cereal_2015. Robot is close to the kitchen_counter_230. Robot is close to the cup_2063. cup_2063 is close food_cereal_2015. food_cereal_2015 is inside cup_2063. food_cereal_2015 is close cup_2063. food_cereal_2015 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Prepare a cup of hot milk with cereal inside.
Action History:
['walk_executor(fridge_289)', 'switchoff_executor(fridge_289)', 'open_executor(fridge_289)', 'walk_executor(microwave_297)', 'open_executor(microwave_297)', 'walk_executor(milk_2043)', 'grab_executor(milk_2043)', 'walk_executor(microwave_297)', 'putin_executor(milk_2043, microwave_297)', 'close_executor(microwave_297)', 'switchon_executor(microwave_297)', 'walk_executor(stove_2065)', 'open_executor(stove_2065)', 'walk_executor(microwave_297)', 'switchoff_executor(microwave_297)', 'open_executor(microwave_297)', 'walk_executor(milk_2043)', 'grab_executor(milk_2043)', 'walk_executor(stove_2065)', 'putin_executor(milk_2043, stove_2065)', 'switchon_executor(stove_2065)', 'grab_executor(milk_2043)', 'walk_executor(cup_2063)', 'putin_executor(milk_2043, cup_2063)', 'walk_executor(food_cereal_2015)', 'grab_executor(food_cereal_2015)', 'walk_executor(cup_2063)', 'putin_executor(food_cereal_2015, cup_2063)']
Time info:
Time consume: 81 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 13
goal generate times: 2
goal correct times: 0
action_num: 28

Task complete rate:
Keystate: k1 - Requires: 5 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
