From agent.py
Reset goals: The sub-goals are: 
['Vacuum the floor by pushing and pulling the vacuum cleaner.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2094_around_bookshelf_188(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==188
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(vacuum_cleaner,bookshelf_instance)
        else:
            exp(vacuum_cleaner,bookshelf_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,bookshelf_instance]=True
        close[bookshelf_instance,vacuum_cleaner]=True
    

#exp_behavior_end

#goal_representation
 
behavior push_vacuum_cleaner(vacuum_cleaner: item):
    body:
        push(vacuum_cleaner)

behavior pull_vacuum_cleaner(vacuum_cleaner: item):
    body:
        pull(vacuum_cleaner)

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner)
        # Select the vacuum cleaner

        push_vacuum_cleaner(vacuum_cleaner)
        # Push the vacuum cleaner

        pull_vacuum_cleaner(vacuum_cleaner)
        # Pull the vacuum cleaner

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior push_vacuum_cleaner(vacuum_cleaner: item):
    body:
        push(vacuum_cleaner)

behavior pull_vacuum_cleaner(vacuum_cleaner: item):
    body:
        pull(vacuum_cleaner)

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner)
        # Select the vacuum cleaner

        push_vacuum_cleaner(vacuum_cleaner)
        # Push the vacuum cleaner

        pull_vacuum_cleaner(vacuum_cleaner)
        # Pull the vacuum cleaner

##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_188)open_executor(bookshelf_188)exp(vacuum_cleaner_2094, bookshelf_188)walk_executor(vacuum_cleaner_2094)push_executor(vacuum_cleaner_2094)pull_executor(vacuum_cleaner_2094)
##############################
From agent.py
walk_executor(bookshelf_188)
Robot find: drawing_196, Robot is close to the bookshelf_188. 
##############################
From agent.py
open_executor(bookshelf_188)
Robot find: Robot is close to the bookshelf_188. bookshelf_188 is opened. 
##############################
From agent.py
exp(vacuum_cleaner_2094, bookshelf_188)
Fail to find vacuum_cleaner_2094 around bookshelf_188. 
##############################
From agent.py-> find a plan in act()
walk_executor(home_office_161)exp(vacuum_cleaner_2094, home_office_161)walk_executor(vacuum_cleaner_2094)push_executor(vacuum_cleaner_2094)pull_executor(vacuum_cleaner_2094)
##############################
From agent.py
walk_executor(home_office_161)

##############################
From agent.py
exp(vacuum_cleaner_2094, home_office_161)
Fail to find vacuum_cleaner_2094 around home_office_161. 
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2041)open_executor(washing_machine_2041)exp(vacuum_cleaner_2094, washing_machine_2041)walk_executor(vacuum_cleaner_2094)push_executor(vacuum_cleaner_2094)pull_executor(vacuum_cleaner_2094)
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. 
##############################
From agent.py
open_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. washing_machine_2041 is opened. 
##############################
From agent.py
exp(vacuum_cleaner_2094, washing_machine_2041)
Fail to find vacuum_cleaner_2094 around washing_machine_2041. 
##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)exp(vacuum_cleaner_2094, ironing_board_2099)walk_executor(vacuum_cleaner_2094)push_executor(vacuum_cleaner_2094)pull_executor(vacuum_cleaner_2094)
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: iron_2117, Robot is close to the ironing_board_2099. 
##############################
From agent.py
exp(vacuum_cleaner_2094, ironing_board_2099)
Fail to find vacuum_cleaner_2094 around ironing_board_2099. 
##############################
From agent.py-> find a plan in act()
walk_executor(couch_192)exp(vacuum_cleaner_2094, couch_192)walk_executor(vacuum_cleaner_2094)push_executor(vacuum_cleaner_2094)pull_executor(vacuum_cleaner_2094)
##############################
From agent.py
walk_executor(couch_192)
Robot find: pillow_195, vacuum_cleaner_2094, cat_2082, Robot is close to the couch_192. 
##############################
From agent.py
exp(vacuum_cleaner_2094, couch_192)
Find vacuum_cleaner_2094. 
##############################
From agent.py-> find a plan in act()
walk_executor(vacuum_cleaner_2094)push_executor(vacuum_cleaner_2094)pull_executor(vacuum_cleaner_2094)
##############################
From agent.py
walk_executor(vacuum_cleaner_2094)
Robot find: Robot is close to the vacuum_cleaner_2094. 
##############################
From agent.py
push_executor(vacuum_cleaner_2094)
Robot find: Robot is close to the vacuum_cleaner_2094. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2094)
Robot find: Robot is close to the vacuum_cleaner_2094. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Vacuum the floor by push and pull the vacuume clearner.
Action History:
['walk_executor(bookshelf_188)', 'open_executor(bookshelf_188)', 'walk_executor(home_office_161)', 'walk_executor(washing_machine_2041)', 'open_executor(washing_machine_2041)', 'walk_executor(ironing_board_2099)', 'walk_executor(couch_192)', 'walk_executor(vacuum_cleaner_2094)', 'push_executor(vacuum_cleaner_2094)', 'pull_executor(vacuum_cleaner_2094)']
Time info:
Time consume: 51 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 22
goal generate times: 1
goal correct times: 0
action_num: 10

Task complete rate:
Keystate: k1 - Requires: 3 steps
Action Completion Rate: 1.0
Scene_id: 2
##############################
