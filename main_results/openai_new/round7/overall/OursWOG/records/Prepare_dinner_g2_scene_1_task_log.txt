From agent.py
Reset goals: The sub-goals are: 
['1. Prepare the chicken and onion for roasting. ', '2. Put the chicken and onion in the oven to roast.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2089_around_fridge_126(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_knife_2122_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_food_onion_2009_around_kitchen_counter_123(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_onion,kitchen_counter_instance)
        else:
            exp(food_onion,kitchen_counter_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_onion]=True
    

#exp_behavior_end

#goal_representation
behavior prepare_chicken_and_onion(chicken: item, onion: item, cutting_board: item, knife: item):
    body:
        achieve_once on(chicken, cutting_board) # Place the chicken on the cutting board
        achieve_once cut(chicken) # Cut the chicken
        achieve_once on(onion, cutting_board) # Place the onion on the cutting board
        achieve_once cut(onion) # Cut the onion

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken
    
        bind onion: item where:
            is_food_onion(onion)
        # Select the onion

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board for preparation

        bind knife: item where:
            is_knife(knife)
        # Select a knife for cutting

        prepare_chicken_and_onion(chicken, onion, cutting_board, knife)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior prepare_chicken_and_onion(chicken: item, onion: item, cutting_board: item, knife: item):
    body:
        achieve_once on(chicken, cutting_board) # Place the chicken on the cutting board
        achieve_once cut(chicken) # Cut the chicken
        achieve_once on(onion, cutting_board) # Place the onion on the cutting board
        achieve_once cut(onion) # Cut the onion

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken
    
        bind onion: item where:
            is_food_onion(onion)
        # Select the onion

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board for preparation

        bind knife: item where:
            is_knife(knife)
        # Select a knife for cutting

        prepare_chicken_and_onion(chicken, onion, cutting_board, knife)
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_chicken_2089, fridge_126)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(cutting_board_2123)put_executor(food_chicken_2089, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_chicken_2089)cut_executor(food_chicken_2089)walk_executor(kitchen_counter_123)exp(food_onion_2104, kitchen_counter_123)walk_executor(food_onion_2104)grab_executor(food_onion_2104)walk_executor(cutting_board_2123)put_executor(food_onion_2104, cutting_board_2123)walk_executor(food_onion_2104)cut_executor(food_onion_2104)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_chicken_2089, fridge_126)
Find food_chicken_2089. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_chicken_2089)walk_executor(cutting_board_2123)put_executor(food_chicken_2089, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_chicken_2089)cut_executor(food_chicken_2089)walk_executor(food_onion_2104)grab_executor(food_onion_2104)walk_executor(cutting_board_2123)put_executor(food_onion_2104, cutting_board_2123)walk_executor(food_onion_2104)cut_executor(food_onion_2104)
##############################
From agent.py
grab_executor(food_chicken_2089)
Robot find: Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. Grabbing food_chicken_2089 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_78, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_chicken_2089, cutting_board_2123)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. cutting_board_2123 is close food_chicken_2089. food_chicken_2089 is close cutting_board_2123. food_chicken_2089 is on cutting_board_2123. food_chicken_2089 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_76)
Robot find: Robot is close to the knifeblock_76. 
##############################
From agent.py
exp(knife_2122, knifeblock_76)
Fail to find knife_2122 around knifeblock_76. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2142)exp(knife_2122, bowl_2142)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_chicken_2089)cut_executor(food_chicken_2089)walk_executor(food_onion_2104)grab_executor(food_onion_2104)walk_executor(cutting_board_2123)put_executor(food_onion_2104, cutting_board_2123)walk_executor(food_onion_2104)cut_executor(food_onion_2104)
##############################
From agent.py
walk_executor(bowl_2142)
Robot find: iron_2161, Robot is close to the bowl_2142. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(knife_2122, bowl_2142)
Fail to find knife_2122 around bowl_2142. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(knife_2122, kitchen_counter_123)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_chicken_2089)cut_executor(food_chicken_2089)walk_executor(food_onion_2104)grab_executor(food_onion_2104)walk_executor(cutting_board_2123)put_executor(food_onion_2104, cutting_board_2123)walk_executor(food_onion_2104)cut_executor(food_onion_2104)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Robot find: tray_2068, oil_2149, knife_2035, food_kiwi_2054, food_orange_2027, Robot is close to the kitchen_counter_123. 
##############################
From agent.py
exp(knife_2122, kitchen_counter_123)
Fail to find knife_2122 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(knife_2035)grab_executor(knife_2035)walk_executor(food_chicken_2089)cut_executor(food_chicken_2089)walk_executor(food_onion_2104)grab_executor(food_onion_2104)walk_executor(cutting_board_2123)put_executor(food_onion_2104, cutting_board_2123)walk_executor(food_onion_2104)cut_executor(food_onion_2104)
##############################
From agent.py
walk_executor(knife_2035)
Robot find: Robot is close to the kitchen_counter_123. Robot is close to the knife_2035. 
##############################
From agent.py
grab_executor(knife_2035)
Robot find: Robot is close to the kitchen_counter_123. Robot is close to the knife_2035. Grabbing knife_2035 by right hand. 
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2035. Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. 
##############################
From agent.py
cut_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2035. Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. 
##############################
From agent.py
walk_executor(food_onion_2104)
Robot find: Robot is close to the knife_2035. Robot is close to the food_onion_2104. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_onion_2104)
Robot find: Robot is close to the knife_2035. Robot is close to the food_onion_2104. Robot is close to the fridge_126. Grabbing food_onion_2104 by left hand. 
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot find: Robot is close to the knife_2035. Robot is close to the food_onion_2104. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_onion_2104, cutting_board_2123)
Robot find: Robot is close to the knife_2035. Robot is close to the food_onion_2104. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. cutting_board_2123 is close food_onion_2104. food_onion_2104 is close cutting_board_2123. food_onion_2104 is on cutting_board_2123. food_onion_2104 released by left hand. 
##############################
From agent.py
walk_executor(food_onion_2104)
Robot find: Robot is close to the knife_2035. Robot is close to the food_onion_2104. Robot is close to the cutting_board_2123. 
##############################
From agent.py
cut_executor(food_onion_2104)
Robot find: Robot is close to the knife_2035. Robot is close to the food_onion_2104. Robot is close to the cutting_board_2123. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2048_around_cupboard_117(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_onion,cupboard_instance)
        else:
            exp(food_onion,cupboard_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,cupboard_instance]=True
        close[cupboard_instance,food_onion]=True
    

behavior find_fryingpan_2154_around_stove_2135(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2135
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

#exp_behavior_end

#goal_representation

behavior roast_chicken_and_onion_in_oven(chicken:item, onion:item, oven:item):
    body:
        achieve_once inside(chicken, oven)
        achieve_once inside(onion, oven)

behavior close_oven(oven:item):
    body:
        achieve_once closed(oven)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken) and cut(chicken)
        # Select the cut chicken

        bind onion: item where:
            is_food_onion(onion) and cut(onion)
        # Select the cut onion

        bind oven: item where:
            is_oven(oven)
        # Select the oven

        roast_chicken_and_onion_in_oven(chicken, onion, oven)
        close_oven(oven)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_tray_2068_around_oven_127(tray:item):
    goal: not unknown(tray)
    body:
        assert is_tray(tray)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==127
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(tray,oven_instance)
        else:
            exp(tray,oven_instance)
    eff:
        unknown[tray]=False
        close[tray,oven_instance]=True
        close[oven_instance,tray]=True
    

behavior find_pot_2138_around_stove_2135(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2135
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(pot,stove_instance)
        else:
            exp(pot,stove_instance)
    eff:
        unknown[pot]=False
        close[pot,stove_instance]=True
        close[stove_instance,pot]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_chicken_and_onion_in_oven(chicken: item, onion: item, oven: item):
    body:
        achieve_once inside(chicken, oven)
        achieve_once inside(onion, oven)

behavior start_roasting(oven: item):
    body:
        achieve is_on(oven)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken) and cut(chicken)
        # Select the cut chicken

        bind onion: item where:
            is_food_onion(onion) and cut(onion)
        # Select the cut onion

        bind oven: item where:
            is_oven(oven)
        # Select the oven

        place_chicken_and_onion_in_oven(chicken, onion, oven)
        start_roasting(oven)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_tray_128_around_oven_127(tray:item):
    goal: not unknown(tray)
    body:
        assert is_tray(tray)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==127
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(tray,oven_instance)
        else:
            exp(tray,oven_instance)
    eff:
        unknown[tray]=False
        close[tray,oven_instance]=True
        close[oven_instance,tray]=True
    

behavior find_food_onion_2048_around_cupboard_117(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_onion,cupboard_instance)
        else:
            exp(food_onion,cupboard_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,cupboard_instance]=True
        close[cupboard_instance,food_onion]=True
    

behavior find_fryingpan_2154_around_stove_2135(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2135
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

#exp_behavior_end

#goal_representation
behavior roast_chicken_and_onion_in_oven(chicken: item, onion: item, oven: item):
    body:
        achieve_once inside(chicken, oven)
        achieve_once inside(onion, oven)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the prepared chicken

        bind onion: item where:
            is_food_onion(onion)
        # Select the prepared onion

        bind oven: item where:
            is_oven(oven)
        # Select the oven for roasting

        roast_chicken_and_onion_in_oven(chicken, onion, oven)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior roast_chicken_and_onion_in_oven(chicken: item, onion: item, oven: item):
    body:
        achieve_once inside(chicken, oven)
        achieve_once inside(onion, oven)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the prepared chicken

        bind onion: item where:
            is_food_onion(onion)
        # Select the prepared onion

        bind oven: item where:
            is_oven(oven)
        # Select the oven for roasting

        roast_chicken_and_onion_in_oven(chicken, onion, oven)
##############################
From agent.py-> find a plan in act()
walk_executor(oven_127)open_executor(oven_127)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(oven_127)putin_executor(food_chicken_2089, oven_127)walk_executor(food_onion_2104)grab_executor(food_onion_2104)walk_executor(oven_127)putin_executor(food_onion_2104, oven_127)
##############################
From agent.py
walk_executor(oven_127)
Robot find: food_food_2064, Robot is close to the knife_2035. Robot is close to the oven_127. 
##############################
From agent.py
open_executor(oven_127)
Robot find: tray_128, food_cheese_2072, oil_2013, food_carrot_2015, Robot is close to the knife_2035. Robot is close to the tray_128. Robot is close to the food_cheese_2072. Robot is close to the oven_127. Robot is close to the oil_2013. Robot is close to the food_carrot_2015. oven_127 is opened. 
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2035. Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. 
##############################
From agent.py
grab_executor(food_chicken_2089)
Robot find: Robot is close to the knife_2035. Robot is close to the food_chicken_2089. Robot is close to the cutting_board_2123. Grabbing food_chicken_2089 by left hand. 
##############################
From agent.py
walk_executor(oven_127)
Robot find: Robot is close to the knife_2035. Robot is close to the food_chicken_2089. Robot is close to the tray_128. Robot is close to the food_cheese_2072. Robot is close to the oven_127. Robot is close to the oil_2013. Robot is close to the food_carrot_2015. 
##############################
From agent.py
putin_executor(food_chicken_2089, oven_127)
Robot find: Robot is close to the knife_2035. Robot is close to the food_chicken_2089. Robot is close to the tray_128. Robot is close to the food_cheese_2072. Robot is close to the oven_127. Robot is close to the oil_2013. Robot is close to the food_carrot_2015. oven_127 is close food_chicken_2089. food_chicken_2089 is inside oven_127. food_chicken_2089 is close oven_127. food_chicken_2089 released by left hand. 
##############################
From agent.py
walk_executor(food_onion_2104)
Robot find: Robot is close to the knife_2035. Robot is close to the food_onion_2104. Robot is close to the cutting_board_2123. 
##############################
From agent.py
grab_executor(food_onion_2104)
Robot find: Robot is close to the knife_2035. Robot is close to the food_onion_2104. Robot is close to the cutting_board_2123. Grabbing food_onion_2104 by left hand. 
##############################
From agent.py
walk_executor(oven_127)
Robot find: Robot is close to the knife_2035. Robot is close to the food_onion_2104. Robot is close to the tray_128. Robot is close to the food_chicken_2089. Robot is close to the food_cheese_2072. Robot is close to the oven_127. Robot is close to the oil_2013. Robot is close to the food_carrot_2015. 
##############################
From agent.py
putin_executor(food_onion_2104, oven_127)
Robot find: Robot is close to the knife_2035. Robot is close to the food_onion_2104. Robot is close to the tray_128. Robot is close to the food_chicken_2089. Robot is close to the food_cheese_2072. Robot is close to the oven_127. Robot is close to the oil_2013. Robot is close to the food_carrot_2015. food_onion_2104 is close oven_127. oven_127 is close food_onion_2104. food_onion_2104 is inside oven_127. food_onion_2104 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Roast chicken with onion in the oven.
Action History:
['walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'grab_executor(food_chicken_2089)', 'walk_executor(cutting_board_2123)', 'put_executor(food_chicken_2089, cutting_board_2123)', 'walk_executor(knifeblock_76)', 'walk_executor(bowl_2142)', 'walk_executor(kitchen_counter_123)', 'walk_executor(knife_2035)', 'grab_executor(knife_2035)', 'walk_executor(food_chicken_2089)', 'cut_executor(food_chicken_2089)', 'walk_executor(food_onion_2104)', 'grab_executor(food_onion_2104)', 'walk_executor(cutting_board_2123)', 'put_executor(food_onion_2104, cutting_board_2123)', 'walk_executor(food_onion_2104)', 'cut_executor(food_onion_2104)', 'walk_executor(oven_127)', 'open_executor(oven_127)', 'walk_executor(food_chicken_2089)', 'grab_executor(food_chicken_2089)', 'walk_executor(oven_127)', 'putin_executor(food_chicken_2089, oven_127)', 'walk_executor(food_onion_2104)', 'grab_executor(food_onion_2104)', 'walk_executor(oven_127)', 'putin_executor(food_onion_2104, oven_127)']
Time info:
Time consume: 206 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 99
goal generate times: 4
goal correct times: 0
action_num: 29

Task complete rate:
Keystate: k1 - Requires: 2 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
