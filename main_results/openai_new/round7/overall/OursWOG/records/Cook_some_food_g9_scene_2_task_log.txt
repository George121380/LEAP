From agent.py
Reset goals: The sub-goals are: 
['1. Wash and peel the potatoes.', '2. Cut the potatoes into fry-shaped pieces.', '3. Fry the potatoes until they are crispy and golden brown.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_potato_2066_around_fridge_140(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_potato,fridge_instance)
        else:
            exp(food_potato,fridge_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,fridge_instance]=True
        close[fridge_instance,food_potato]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_and_peel_potato(potato: item, sink: item, knife: item):
    body:
        achieve_once on(potato, sink)
        wash(potato) # Wash the potato
        achieve_once clean(potato)
        achieve_once cut(potato) # This indicates peeling the potato with a knife

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)
        # Select a potato

        bind sink: item where:
            is_sink(sink)
        # Select a sink for washing

        bind knife: item where:
            is_knife(knife)
        # Select a knife for peeling

        wash_and_peel_potato(potato, sink, knife)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior wash_and_peel_potato(potato: item, sink: item, knife: item):
    body:
        achieve_once on(potato, sink)
        wash(potato) # Wash the potato
        achieve_once clean(potato)
        achieve_once cut(potato) # This indicates peeling the potato with a knife

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)
        # Select a potato

        bind sink: item where:
            is_sink(sink)
        # Select a sink for washing

        bind knife: item where:
            is_knife(knife)
        # Select a knife for peeling

        wash_and_peel_potato(potato, sink, knife)

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_potato_2066, fridge_140)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(sink_133)put_executor(food_potato_2066, sink_133)walk_executor(food_potato_2066)grab_executor(food_potato_2066)wash_executor(food_potato_2066)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_potato_2066, fridge_140)
Find food_potato_2066. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_potato_2066)walk_executor(sink_133)put_executor(food_potato_2066, sink_133)walk_executor(food_potato_2066)grab_executor(food_potato_2066)wash_executor(food_potato_2066)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
walk_executor(sink_133)
Robot find: after_shave_2029, cleaning_solution_2098, juice_2034, pot_54, Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
put_executor(food_potato_2066, sink_133)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. sink_133 is close food_potato_2066. food_potato_2066 is close sink_133. food_potato_2066 is on sink_133. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
wash_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_potato_2066, cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. cutting_board_2080 is close food_potato_2066. food_potato_2066 is close cutting_board_2080. food_potato_2066 is on cutting_board_2080. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_52)
Robot find: Robot is close to the knifeblock_52. 
##############################
From agent.py
exp(knife_2036, knifeblock_52)
Fail to find knife_2036 around knifeblock_52. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(sink_133)put_executor(food_potato_2066, sink_133)walk_executor(food_potato_2066)grab_executor(food_potato_2066)wash_executor(food_potato_2066)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(window_2109)open_executor(window_2109)exp(knife_2036, window_2109)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
walk_executor(sink_133)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
put_executor(food_potato_2066, sink_133)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. food_potato_2066 is close sink_133. food_potato_2066 is on sink_133. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
wash_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. 
##############################
From agent.py
walk_executor(faucet_308)
Robot find: drawing_296, towel_rack_298, Robot is close to the food_potato_2066. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. 
##############################
From agent.py
switchoff_executor(faucet_308)
Robot find: Robot is close to the food_potato_2066. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. faucet_308 is turned off. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_potato_2066, cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_potato_2066 is close cutting_board_2080. food_potato_2066 is on cutting_board_2080. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(window_2109)
Robot find: Robot is close to the window_2109. 
##############################
From agent.py
open_executor(window_2109)
Robot find: Robot is close to the window_2109. window_2109 is opened. 
##############################
From agent.py
exp(knife_2036, window_2109)
Fail to find knife_2036 around window_2109. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(sink_133)put_executor(food_potato_2066, sink_133)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(faucet_134)switchon_executor(faucet_134)wash_executor(food_potato_2066)switchoff_executor(faucet_134)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(stove_2090)open_executor(stove_2090)exp(knife_2036, stove_2090)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
walk_executor(sink_133)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
put_executor(food_potato_2066, sink_133)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. food_potato_2066 is close sink_133. food_potato_2066 is on sink_133. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned on. 
##############################
From agent.py
wash_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_potato_2066, cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_potato_2066 is close cutting_board_2080. food_potato_2066 is on cutting_board_2080. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
open_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is opened. 
##############################
From agent.py
exp(knife_2036, stove_2090)
Fail to find knife_2036 around stove_2090. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(sink_133)put_executor(food_potato_2066, sink_133)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(faucet_134)switchon_executor(faucet_134)wash_executor(food_potato_2066)switchoff_executor(faucet_134)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(ironing_board_2099)exp(knife_2036, ironing_board_2099)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
walk_executor(sink_133)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
put_executor(food_potato_2066, sink_133)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. food_potato_2066 is close sink_133. food_potato_2066 is on sink_133. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned on. 
##############################
From agent.py
wash_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_potato_2066, cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_potato_2066 is close cutting_board_2080. food_potato_2066 is on cutting_board_2080. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: iron_2117, Robot is close to the ironing_board_2099. 
##############################
From agent.py
exp(knife_2036, ironing_board_2099)
Fail to find knife_2036 around ironing_board_2099. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(sink_133)put_executor(food_potato_2066, sink_133)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(faucet_134)switchon_executor(faucet_134)wash_executor(food_potato_2066)switchoff_executor(faucet_134)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(fryingpan_2107)exp(knife_2036, fryingpan_2107)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
walk_executor(sink_133)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
put_executor(food_potato_2066, sink_133)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. food_potato_2066 is close sink_133. food_potato_2066 is on sink_133. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned on. 
##############################
From agent.py
wash_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_potato_2066, cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_potato_2066 is close cutting_board_2080. food_potato_2066 is on cutting_board_2080. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. 
##############################
From agent.py
exp(knife_2036, fryingpan_2107)
Fail to find knife_2036 around fryingpan_2107. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(sink_133)put_executor(food_potato_2066, sink_133)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(faucet_134)switchon_executor(faucet_134)wash_executor(food_potato_2066)switchoff_executor(faucet_134)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(window_287)open_executor(window_287)exp(knife_2036, window_287)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
walk_executor(sink_133)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
put_executor(food_potato_2066, sink_133)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. food_potato_2066 is close sink_133. food_potato_2066 is on sink_133. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned on. 
##############################
From agent.py
wash_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_potato_2066, cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_potato_2066 is close cutting_board_2080. food_potato_2066 is on cutting_board_2080. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(window_287)
Robot find: towel_rack_299, Robot is close to the window_287. 
##############################
From agent.py
open_executor(window_287)
Robot find: Robot is close to the window_287. window_287 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find knife_2036 ?
Answer: The target item, knife_2036, is located inside dining_room_1, within dishwasher_143. To retrieve knife_2036, direct your attention to the dishwasher in the dining room, as it is stored inside.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item, knife_2036, is located inside dining_room_1, within dishwasher_143. To retrieve knife_2036, direct your attention to the dishwasher in the dining room, as it is stored inside.

The actions you have taken:
Action 1: Walk to fridge_140.
Action 2: Switch off fridge_140.
Action 3: Open fridge_140.
Action 4: look for food_potato_2066 around fridge_140.
Action 5: Grab food_potato_2066.
Action 6: Walk to sink_133.
Action 7: Put food_potato_2066 on sink_133.
Action 8: Walk to food_potato_2066.
Action 9: Grab food_potato_2066.
Action 10: Wash food_potato_2066.
Action 11: Walk to faucet_134.
Action 12: Switch off faucet_134.
Action 13: Walk to cutting_board_2080.
Action 14: Put food_potato_2066 on cutting_board_2080.
Action 15: Walk to knifeblock_52.
Action 16: look for knife_2036 around knifeblock_52.
Action 17: Walk to food_potato_2066.
Action 18: Grab food_potato_2066.
Action 19: Walk to sink_133.
Action 20: Put food_potato_2066 on sink_133.
Action 21: Walk to food_potato_2066.
Action 22: Grab food_potato_2066.
Action 23: Wash food_potato_2066.
Action 24: Walk to faucet_308.
Action 25: Switch off faucet_308.
Action 26: Walk to cutting_board_2080.
Action 27: Put food_potato_2066 on cutting_board_2080.
Action 28: Walk to window_2109.
Action 29: Open window_2109.
Action 30: look for knife_2036 around window_2109.
Action 31: Walk to food_potato_2066.
Action 32: Grab food_potato_2066.
Action 33: Walk to sink_133.
Action 34: Put food_potato_2066 on sink_133.
Action 35: Walk to food_potato_2066.
Action 36: Grab food_potato_2066.
Action 37: Walk to faucet_134.
Action 38: Switch on faucet_134.
Action 39: Wash food_potato_2066.
Action 40: Switch off faucet_134.
Action 41: Walk to cutting_board_2080.
Action 42: Put food_potato_2066 on cutting_board_2080.
Action 43: Walk to stove_2090.
Action 44: Open stove_2090.
Action 45: look for knife_2036 around stove_2090.
Action 46: Walk to food_potato_2066.
Action 47: Grab food_potato_2066.
Action 48: Walk to sink_133.
Action 49: Put food_potato_2066 on sink_133.
Action 50: Walk to food_potato_2066.
Action 51: Grab food_potato_2066.
Action 52: Walk to faucet_134.
Action 53: Switch on faucet_134.
Action 54: Wash food_potato_2066.
Action 55: Switch off faucet_134.
Action 56: Walk to cutting_board_2080.
Action 57: Put food_potato_2066 on cutting_board_2080.
Action 58: Walk to ironing_board_2099.
Action 59: look for knife_2036 around ironing_board_2099.
Action 60: Walk to food_potato_2066.
Action 61: Grab food_potato_2066.
Action 62: Walk to sink_133.
Action 63: Put food_potato_2066 on sink_133.
Action 64: Walk to food_potato_2066.
Action 65: Grab food_potato_2066.
Action 66: Walk to faucet_134.
Action 67: Switch on faucet_134.
Action 68: Wash food_potato_2066.
Action 69: Switch off faucet_134.
Action 70: Walk to cutting_board_2080.
Action 71: Put food_potato_2066 on cutting_board_2080.
Action 72: Walk to fryingpan_2107.
Action 73: look for knife_2036 around fryingpan_2107.
Action 74: Walk to food_potato_2066.
Action 75: Grab food_potato_2066.
Action 76: Walk to sink_133.
Action 77: Put food_potato_2066 on sink_133.
Action 78: Walk to food_potato_2066.
Action 79: Grab food_potato_2066.
Action 80: Walk to faucet_134.
Action 81: Switch on faucet_134.
Action 82: Wash food_potato_2066.
Action 83: Switch off faucet_134.
Action 84: Walk to cutting_board_2080.
Action 85: Put food_potato_2066 on cutting_board_2080.
Action 86: Walk to window_287.
Action 87: Open window_287.

##############################
From agent.py
exp(knife_2036, window_287)
Fail to find knife_2036 around window_287. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(sink_133)put_executor(food_potato_2066, sink_133)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(faucet_134)switchon_executor(faucet_134)wash_executor(food_potato_2066)switchoff_executor(faucet_134)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(knife_2036, dishwasher_143)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
walk_executor(sink_133)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
put_executor(food_potato_2066, sink_133)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. food_potato_2066 is close sink_133. food_potato_2066 is on sink_133. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned on. 
##############################
From agent.py
wash_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_potato_2066, cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_potato_2066 is close cutting_board_2080. food_potato_2066 is on cutting_board_2080. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(knife_2036, dishwasher_143)
Find knife_2036. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(sink_133)put_executor(food_potato_2066, sink_133)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(faucet_134)switchon_executor(faucet_134)wash_executor(food_potato_2066)switchoff_executor(faucet_134)walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
walk_executor(sink_133)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
put_executor(food_potato_2066, sink_133)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. food_potato_2066 is close sink_133. food_potato_2066 is on sink_133. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned on. 
##############################
From agent.py
wash_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_potato_2066, cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_potato_2066 is close cutting_board_2080. food_potato_2066 is on cutting_board_2080. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(knife_2036)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. 
##############################
From agent.py
grab_executor(knife_2036)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. Grabbing knife_2036 by right hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. 
##############################
From agent.py
cut_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior cut_potatoes(potatoes:item, knife:item, cutting_board:item):
    body:
        achieve_once on(potatoes, cutting_board)
        achieve_once cut(potatoes)

behavior __goal__():
    body:
        bind potatoes: item where:
            is_food_potato(potatoes) and id[potatoes] == 2066
        # Select the washed and peeled potatoes with ID 2066

        bind knife: item where:
            is_knife(knife) and id[knife] == 2036
        # Select the knife with ID 2036

        bind cutting_board: item where:
            is_cutting_board(cutting_board) and id[cutting_board] == 2080
        # Select the cutting board with ID 2080

        cut_potatoes(potatoes, knife, cutting_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior cut_potatoes(potatoes:item, cutting_board:item, knife:item):
    body:
        achieve_once on(potatoes, cutting_board)
        # Place the potatoes on the cutting board
        achieve_once cut(potatoes)
        # Cut the potatoes into fryshaped pieces

behavior __goal__():
    body:
        bind potatoes: item where:
            is_food_potato(potatoes) and id[potatoes]==2066
        # Select food_potato_2066
        
        bind cutting_board: item where:
            is_cutting_board(cutting_board) and id[cutting_board]==2080
        # Select cutting_board_2080

        bind knife: item where:
            is_knife(knife) and id[knife]==2036
        # Select knife_2036

        cut_potatoes(potatoes, cutting_board, knife)
        # Cut the potatoes into fryshaped pieces

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2026_around_microwave_149(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind microwave_instance:item where:
            is_microwave(microwave_instance) and id[microwave_instance]==149
        achieve close_char(char,microwave_instance)
        if can_open(microwave_instance):
            achieve_once open(microwave_instance)
            exp(food_onion,microwave_instance)
        else:
            exp(food_onion,microwave_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,microwave_instance]=True
        close[microwave_instance,food_onion]=True
    

behavior find_food_butter_2018_around_microwave_149(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind microwave_instance:item where:
            is_microwave(microwave_instance) and id[microwave_instance]==149
        achieve close_char(char,microwave_instance)
        if can_open(microwave_instance):
            achieve_once open(microwave_instance)
            exp(food_butter,microwave_instance)
        else:
            exp(food_butter,microwave_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,microwave_instance]=True
        close[microwave_instance,food_butter]=True
    

behavior find_food_bread_2016_around_microwave_149(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind microwave_instance:item where:
            is_microwave(microwave_instance) and id[microwave_instance]==149
        achieve close_char(char,microwave_instance)
        if can_open(microwave_instance):
            achieve_once open(microwave_instance)
            exp(food_bread,microwave_instance)
        else:
            exp(food_bread,microwave_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,microwave_instance]=True
        close[microwave_instance,food_bread]=True
    

#exp_behavior_end

#goal_representation
 
behavior cut_potatoes(potatoes:item, cutting_board:item, knife:item):
    body:
        achieve_once on(potatoes, cutting_board)
        # Place the potatoes on the cutting board
        achieve_once cut(potatoes)
        # Cut the potatoes into fryshaped pieces

behavior __goal__():
    body:
        bind potatoes: item where:
            is_food_potato(potatoes)
        # Select the potatoes to be cut

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board for cutting the potatoes

        bind knife: item where:
            is_knife(knife) and id[knife] == 2036
        # Select knife_2036 for cutting the potatoes

        cut_potatoes(potatoes, cutting_board, knife)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior cut_potatoes(potato:item, cutting_board:item, knife:item):
    body:
        achieve_once on(potato, cutting_board)
        achieve_once cut(potato)

behavior __goal__():
    body:
        bind food_potato: item where:
            is_food_potato(food_potato)
        # Select the potatoes to be cut

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board for cutting the potatoes

        bind knife: item where:
            is_knife(knife)
        # Select a knife for cutting the potatoes

        cut_potatoes(food_potato, cutting_board, knife)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2026_around_microwave_149(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind microwave_instance:item where:
            is_microwave(microwave_instance) and id[microwave_instance]==149
        achieve close_char(char,microwave_instance)
        if can_open(microwave_instance):
            achieve_once open(microwave_instance)
            exp(food_onion,microwave_instance)
        else:
            exp(food_onion,microwave_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,microwave_instance]=True
        close[microwave_instance,food_onion]=True
    

behavior find_clothes_gloves_2077_around_basket_for_clothes_2040(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_gloves,basket_for_clothes_instance)
        else:
            exp(clothes_gloves,basket_for_clothes_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_gloves]=True
    

behavior find_plate_2105_around_table_127(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(plate,table_instance)
        else:
            exp(plate,table_instance)
    eff:
        unknown[plate]=False
        close[plate,table_instance]=True
        close[table_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior slice_potatoes(potato: item, knife: item, cutting_board: item):
    body:
        achieve_once on(potato, cutting_board)
        achieve_once cut(potato)

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato) and id[potato] == 2066
        # Select food_potato_2066

        bind knife: item where:
            is_knife(knife) and id[knife] == 2036
        # Select knife_2036 for slicing

        bind cutting_board: item where:
            is_cutting_board(cutting_board) and id[cutting_board] == 2080
        # Select cutting_board_2080 for slicing

        slice_potatoes(potato, knife, cutting_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2026_around_microwave_149(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind microwave_instance:item where:
            is_microwave(microwave_instance) and id[microwave_instance]==149
        achieve close_char(char,microwave_instance)
        if can_open(microwave_instance):
            achieve_once open(microwave_instance)
            exp(food_onion,microwave_instance)
        else:
            exp(food_onion,microwave_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,microwave_instance]=True
        close[microwave_instance,food_onion]=True
    

behavior find_clothes_gloves_2077_around_basket_for_clothes_2040(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_gloves,basket_for_clothes_instance)
        else:
            exp(clothes_gloves,basket_for_clothes_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior cut_potatoes(potatoes:item, cutting_board:item, knife:item):
    body:
        achieve_once on(potatoes, cutting_board)
        # Place the potatoes on the cutting board
        achieve_once cut(potatoes)
        # Cut the potatoes into fryshaped pieces

behavior __goal__():
    body:
        bind potatoes: item where:
            is_food_potato(potatoes) and id[potatoes] == 2066
        # Select potatoes to be cut

        bind cutting_board: item where:
            is_cutting_board(cutting_board) and id[cutting_board] == 2080
        # Select a cutting board for cutting

        bind knife: item where:
            is_knife(knife) and id[knife] == 2036
        # Select a knife for cutting

        cut_potatoes(potatoes, cutting_board, knife)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
Goal representation from planning.py

#exp_behavior

behavior find_dough_2021_around_microwave_149(dough:item):
    goal: not unknown(dough)
    body:
        assert is_dough(dough)
        bind microwave_instance:item where:
            is_microwave(microwave_instance) and id[microwave_instance]==149
        achieve close_char(char,microwave_instance)
        if can_open(microwave_instance):
            achieve_once open(microwave_instance)
            exp(dough,microwave_instance)
        else:
            exp(dough,microwave_instance)
    eff:
        unknown[dough]=False
        close[dough,microwave_instance]=True
        close[microwave_instance,dough]=True
    

behavior find_food_onion_2026_around_microwave_149(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind microwave_instance:item where:
            is_microwave(microwave_instance) and id[microwave_instance]==149
        achieve close_char(char,microwave_instance)
        if can_open(microwave_instance):
            achieve_once open(microwave_instance)
            exp(food_onion,microwave_instance)
        else:
            exp(food_onion,microwave_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,microwave_instance]=True
        close[microwave_instance,food_onion]=True
    

behavior find_chair_263_around_home_office_161(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==161
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(chair,home_office_instance)
        else:
            exp(chair,home_office_instance)
    eff:
        unknown[chair]=False
        close[chair,home_office_instance]=True
        close[home_office_instance,chair]=True
    

behavior find_drawing_389_around_bookshelf_189(drawing:item):
    goal: not unknown(drawing)
    body:
        assert is_drawing(drawing)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==189
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(drawing,bookshelf_instance)
        else:
            exp(drawing,bookshelf_instance)
    eff:
        unknown[drawing]=False
        close[drawing,bookshelf_instance]=True
        close[bookshelf_instance,drawing]=True
    

#exp_behavior_end

#goal_representation
 
behavior cut_potatoes_into_fries(potatoes:item, cutting_board:item, knife:item):
    body:
        achieve_once on(potatoes, cutting_board)  # Place the potatoes on the cutting board
        achieve_once cut(potatoes)  # Cut the potatoes into fryshaped pieces

behavior __goal__():
    body:
        bind potatoes: item where:
            is_food_potato(potatoes)
        # Select the potatoes to be cut

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board for cutting

        bind knife: item where:
            is_knife(knife) and id[knife] == 2036
        # Select the specific knife_2036 for cutting

        cut_potatoes_into_fries(potatoes, cutting_board, knife)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior cut_potatoes(potato: item, cutting_board: item, knife: item):
    body:
        achieve_once on(potato, cutting_board)
        achieve_once cut(potato)

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)
        # Select the potato to be cut

        bind cutting_board: item where:
            is_cutting_board(cutting_board) and id[cutting_board] == 2080
        # Select cutting board with ID 2080

        bind knife: item where:
            is_knife(knife) and id[knife] == 2036
        # Select knife with ID 2036

        cut_potatoes(potato, cutting_board, knife)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2026_around_microwave_149(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind microwave_instance:item where:
            is_microwave(microwave_instance) and id[microwave_instance]==149
        achieve close_char(char,microwave_instance)
        if can_open(microwave_instance):
            achieve_once open(microwave_instance)
            exp(food_onion,microwave_instance)
        else:
            exp(food_onion,microwave_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,microwave_instance]=True
        close[microwave_instance,food_onion]=True
    

behavior find_clothes_gloves_2077_around_basket_for_clothes_2040(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_gloves,basket_for_clothes_instance)
        else:
            exp(clothes_gloves,basket_for_clothes_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior cut_potatoes(potatoes:item, cutting_board:item, knife:item):
    body:
        achieve_once on(potatoes, cutting_board)
        achieve_once cut(potatoes)

behavior __goal__():
    body:
        bind potatoes: item where:
            is_food_potato(potatoes) and id[potatoes] == 2066
        # Select the identified potatoes to be cut

        bind knife: item where:
            is_knife(knife) and id[knife] == 2036
        # Select knife_2036 for cutting

        bind cutting_board: item where:
            is_cutting_board(cutting_board) and id[cutting_board] == 2080
        # Select cutting board for cutting potatoes

        cut_potatoes(potatoes, cutting_board, knife)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
Task Summary:
Task Goal:
Make some French fries.
Action History:
['walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'grab_executor(food_potato_2066)', 'walk_executor(sink_133)', 'put_executor(food_potato_2066, sink_133)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'wash_executor(food_potato_2066)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(cutting_board_2080)', 'put_executor(food_potato_2066, cutting_board_2080)', 'walk_executor(knifeblock_52)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(sink_133)', 'put_executor(food_potato_2066, sink_133)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'wash_executor(food_potato_2066)', 'walk_executor(faucet_308)', 'switchoff_executor(faucet_308)', 'walk_executor(cutting_board_2080)', 'put_executor(food_potato_2066, cutting_board_2080)', 'walk_executor(window_2109)', 'open_executor(window_2109)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(sink_133)', 'put_executor(food_potato_2066, sink_133)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(faucet_134)', 'switchon_executor(faucet_134)', 'wash_executor(food_potato_2066)', 'switchoff_executor(faucet_134)', 'walk_executor(cutting_board_2080)', 'put_executor(food_potato_2066, cutting_board_2080)', 'walk_executor(stove_2090)', 'open_executor(stove_2090)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(sink_133)', 'put_executor(food_potato_2066, sink_133)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(faucet_134)', 'switchon_executor(faucet_134)', 'wash_executor(food_potato_2066)', 'switchoff_executor(faucet_134)', 'walk_executor(cutting_board_2080)', 'put_executor(food_potato_2066, cutting_board_2080)', 'walk_executor(ironing_board_2099)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(sink_133)', 'put_executor(food_potato_2066, sink_133)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(faucet_134)', 'switchon_executor(faucet_134)', 'wash_executor(food_potato_2066)', 'switchoff_executor(faucet_134)', 'walk_executor(cutting_board_2080)', 'put_executor(food_potato_2066, cutting_board_2080)', 'walk_executor(fryingpan_2107)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(sink_133)', 'put_executor(food_potato_2066, sink_133)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(faucet_134)', 'switchon_executor(faucet_134)', 'wash_executor(food_potato_2066)', 'switchoff_executor(faucet_134)', 'walk_executor(cutting_board_2080)', 'put_executor(food_potato_2066, cutting_board_2080)', 'walk_executor(window_287)', 'open_executor(window_287)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(sink_133)', 'put_executor(food_potato_2066, sink_133)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(faucet_134)', 'switchon_executor(faucet_134)', 'wash_executor(food_potato_2066)', 'switchoff_executor(faucet_134)', 'walk_executor(cutting_board_2080)', 'put_executor(food_potato_2066, cutting_board_2080)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(sink_133)', 'put_executor(food_potato_2066, sink_133)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(faucet_134)', 'switchon_executor(faucet_134)', 'wash_executor(food_potato_2066)', 'switchoff_executor(faucet_134)', 'walk_executor(cutting_board_2080)', 'put_executor(food_potato_2066, cutting_board_2080)', 'walk_executor(knife_2036)', 'grab_executor(knife_2036)', 'walk_executor(food_potato_2066)', 'cut_executor(food_potato_2066)']
Time info:
Time consume: 423 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 57
goal generate times: 10
goal correct times: 0
action_num: 111

Task complete rate:
Keystate: k1 - Requires: 13 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
