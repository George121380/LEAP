From agent.py
Reset goals: The sub-goals are: 
['1. Find the ingredients required for the fish soup and wash them thoroughly.', '2. Cook the fish and ingredients in a pot until the soup is ready.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_carrot_2047_around_kitchen_counter_132(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_carrot,kitchen_counter_instance)
        else:
            exp(food_carrot,kitchen_counter_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_carrot]=True
    

behavior find_food_onion_2026_around_kitchen_counter_132(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_onion,kitchen_counter_instance)
        else:
            exp(food_onion,kitchen_counter_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_onion]=True
    

behavior find_food_potato_2066_around_kitchen_counter_132(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_potato,kitchen_counter_instance)
        else:
            exp(food_potato,kitchen_counter_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_potato]=True
    

behavior find_food_fish_2054_around_kitchen_counter_132(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_fish,kitchen_counter_instance)
        else:
            exp(food_fish,kitchen_counter_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_fish]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_ingredient(ingredient:item):
    body:
        wash(ingredient)
        # Wash the ingredient thoroughly

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        # Select the fish

        bind carrot: item where:
            is_food_carrot(carrot)
        # Select the carrot

        bind potato: item where:
            is_food_potato(potato)
        # Select the potato

        bind onion: item where:
            is_food_onion(onion)
        # Select the onion
        
        wash_ingredient(fish)
        wash_ingredient(carrot)
        wash_ingredient(potato)
        wash_ingredient(onion)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior wash_ingredient(ingredient:item):
    body:
        wash(ingredient)
        # Wash the ingredient thoroughly

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        # Select the fish

        bind carrot: item where:
            is_food_carrot(carrot)
        # Select the carrot

        bind potato: item where:
            is_food_potato(potato)
        # Select the potato

        bind onion: item where:
            is_food_onion(onion)
        # Select the onion
        
        wash_ingredient(fish)
        wash_ingredient(carrot)
        wash_ingredient(potato)
        wash_ingredient(onion)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(food_fish_2054, kitchen_counter_132)walk_executor(food_fish_2054)grab_executor(food_fish_2054)wash_executor(food_fish_2054)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(kitchen_counter_132)exp(food_carrot_2047, kitchen_counter_132)walk_executor(food_carrot_2047)grab_executor(food_carrot_2047)walk_executor(kitchen_counter_132)put_executor(food_fish_2054, kitchen_counter_132)switchon_executor(faucet_134)wash_executor(food_carrot_2047)switchoff_executor(faucet_134)exp(food_potato_2066, kitchen_counter_132)walk_executor(food_potato_2066)grab_executor(food_potato_2066)wash_executor(food_potato_2066)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(kitchen_counter_132)exp(food_onion_2026, kitchen_counter_132)walk_executor(food_onion_2026)grab_executor(food_onion_2026)walk_executor(kitchen_counter_132)put_executor(food_carrot_2047, kitchen_counter_132)switchon_executor(faucet_134)wash_executor(food_onion_2026)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: pot_54, Robot is close to the kitchen_counter_132. 
##############################
From agent.py
exp(food_fish_2054, kitchen_counter_132)
Fail to find food_fish_2054 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_fish_2054, fridge_140)walk_executor(food_fish_2054)grab_executor(food_fish_2054)wash_executor(food_fish_2054)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(kitchen_counter_128)exp(food_carrot_2047, kitchen_counter_128)walk_executor(food_carrot_2047)grab_executor(food_carrot_2047)walk_executor(kitchen_counter_132)put_executor(food_fish_2054, kitchen_counter_132)switchon_executor(faucet_134)wash_executor(food_carrot_2047)switchoff_executor(faucet_134)walk_executor(kitchen_counter_128)exp(food_potato_2066, kitchen_counter_128)walk_executor(food_potato_2066)grab_executor(food_potato_2066)wash_executor(food_potato_2066)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(cupboard_131)open_executor(cupboard_131)exp(food_onion_2026, cupboard_131)walk_executor(food_onion_2026)grab_executor(food_onion_2026)walk_executor(kitchen_counter_132)put_executor(food_carrot_2047, kitchen_counter_132)switchon_executor(faucet_134)wash_executor(food_onion_2026)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_fish_2054, fridge_140)
Find food_fish_2054. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_fish_2054)wash_executor(food_fish_2054)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(food_carrot_2047)grab_executor(food_carrot_2047)walk_executor(kitchen_counter_132)put_executor(food_fish_2054, kitchen_counter_132)switchon_executor(faucet_134)wash_executor(food_carrot_2047)switchoff_executor(faucet_134)walk_executor(food_potato_2066)grab_executor(food_potato_2066)wash_executor(food_potato_2066)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(cupboard_131)open_executor(cupboard_131)exp(food_onion_2026, cupboard_131)walk_executor(food_onion_2026)grab_executor(food_onion_2026)walk_executor(kitchen_counter_132)put_executor(food_carrot_2047, kitchen_counter_132)switchon_executor(faucet_134)wash_executor(food_onion_2026)switchoff_executor(faucet_134)
##############################
From agent.py
grab_executor(food_fish_2054)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. Grabbing food_fish_2054 by right hand. 
##############################
From agent.py
wash_executor(food_fish_2054)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_fish_2054 is cleaned. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the food_fish_2054. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the food_fish_2054. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(food_carrot_2047)
Robot find: Robot is close to the food_fish_2054. Robot is close to the fridge_140. Robot is close to the food_carrot_2047. 
##############################
From agent.py
grab_executor(food_carrot_2047)
Robot find: Robot is close to the food_fish_2054. Robot is close to the fridge_140. Robot is close to the food_carrot_2047. Grabbing food_carrot_2047 by left hand. 
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the food_fish_2054. Robot is close to the food_carrot_2047. Robot is close to the kitchen_counter_132. 
##############################
From agent.py
put_executor(food_fish_2054, kitchen_counter_132)
Robot find: Robot is close to the food_fish_2054. Robot is close to the food_carrot_2047. Robot is close to the kitchen_counter_132. food_fish_2054 is close kitchen_counter_132. kitchen_counter_132 is close food_fish_2054. food_fish_2054 is on kitchen_counter_132. food_fish_2054 released by right hand. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the food_fish_2054. Robot is close to the food_carrot_2047. Robot is close to the kitchen_counter_132. faucet_134 is turned on. 
##############################
From agent.py
wash_executor(food_carrot_2047)
Robot find: Robot is close to the food_fish_2054. Robot is close to the food_carrot_2047. Robot is close to the kitchen_counter_132. food_carrot_2047 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the food_fish_2054. Robot is close to the food_carrot_2047. Robot is close to the kitchen_counter_132. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the food_potato_2066. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the food_potato_2066. Robot is close to the fridge_140. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
wash_executor(food_potato_2066)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the food_potato_2066. Robot is close to the fridge_140. 
##############################
From agent.py
walk_executor(faucet_308)
Robot find: drawing_296, towel_rack_298, Robot is close to the food_carrot_2047. Robot is close to the food_potato_2066. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. 
##############################
From agent.py
switchoff_executor(faucet_308)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the food_potato_2066. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. faucet_308 is turned off. 
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the food_potato_2066. Robot is close to the cupboard_131. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_blender_2032_around_dishwasher_143(blender:item):
    goal: not unknown(blender)
    body:
        assert is_blender(blender)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==143
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(blender,dishwasher_instance)
        else:
            exp(blender,dishwasher_instance)
    eff:
        unknown[blender]=False
        close[blender,dishwasher_instance]=True
        close[dishwasher_instance,blender]=True
    

behavior find_pot_2093_around_stove_2090(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(pot,stove_instance)
        else:
            exp(pot,stove_instance)
    eff:
        unknown[pot]=False
        close[pot,stove_instance]=True
        close[stove_instance,pot]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
def is_fish(x:item):
    # Function to check if an item is fish
    return is_food_fish(x)

def is_vegetable(x:item):
    # Function to check if an item is a vegetable
    return is_food_carrot(x) or is_food_potato(x)

behavior wash_item(item:item, faucet:item):
    body:
        achieve_once has_water(item)
        # Achieve the state where the item is washed with water

behavior __goal__():
    body:
        bind fish: item where:
            is_fish(fish) and id[fish] == 2054
        # Select the fish with ID 2054
        
        bind carrot: item where:
            is_food_carrot(carrot) and id[carrot] == 2047
        # Select the carrot with ID 2047
        
        bind potato: item where:
            is_food_potato(potato) and id[potato] == 2066
        # Select the potato with ID 2066
        
        bind faucet_134: item where:
            is_faucet(faucet_134) and id[faucet_134] == 134
        # Select the faucet with ID 134

        bind faucet_308: item where:
            is_faucet(faucet_308) and id[faucet_308] == 308
        # Select the faucet with ID 308

        wash_item(fish, faucet_134)
        wash_item(carrot, faucet_134)
        wash_item(potato, faucet_308)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_fish(x:item):
    # Function to check if an item is fish
    return is_food_fish(x)

def is_vegetable(x:item):
    # Function to check if an item is a vegetable
    return is_food_carrot(x) or is_food_potato(x)

behavior wash_item(item:item, faucet:item):
    body:
        achieve_once has_water(item)
        # Achieve the state where the item is washed with water

behavior __goal__():
    body:
        bind fish: item where:
            is_fish(fish) and id[fish] == 2054
        # Select the fish with ID 2054
        
        bind carrot: item where:
            is_food_carrot(carrot) and id[carrot] == 2047
        # Select the carrot with ID 2047
        
        bind potato: item where:
            is_food_potato(potato) and id[potato] == 2066
        # Select the potato with ID 2066
        
        bind faucet_134: item where:
            is_faucet(faucet_134) and id[faucet_134] == 134
        # Select the faucet with ID 134

        bind faucet_308: item where:
            is_faucet(faucet_308) and id[faucet_308] == 308
        # Select the faucet with ID 308

        wash_item(fish, faucet_134)
        wash_item(carrot, faucet_134)
        wash_item(potato, faucet_308)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)put_executor(food_carrot_2047, kitchen_counter_132)grab_executor(food_fish_2054)switchon_executor(faucet_134)switchoff_executor(faucet_134)switchon_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. 
##############################
From agent.py
put_executor(food_carrot_2047, kitchen_counter_132)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. kitchen_counter_132 is close food_carrot_2047. food_carrot_2047 is close kitchen_counter_132. food_carrot_2047 is on kitchen_counter_132. food_carrot_2047 released by left hand. 
##############################
From agent.py
grab_executor(food_fish_2054)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Grabbing food_fish_2054 by left hand. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. faucet_134 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. faucet_134 is turned off. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. faucet_134 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. faucet_134 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The potato still needs to be washed. Use a faucet to wash the food_potato_2066, likely the robot intended to use faucet_308 for this purpose.
##############################
From agent.py
Human Instruction: The potato still needs to be washed. Use a faucet to wash the food_potato_2066, likely the robot intended to use faucet_308 for this purpose.

Trial and Error: You can not open cupboard_131
The actions you have taken:
Action 1: Walk to kitchen_counter_132.
Action 2: look for food_fish_2054 around kitchen_counter_132.
Action 3: Walk to fridge_140.
Action 4: Switch off fridge_140.
Action 5: Open fridge_140.
Action 6: look for food_fish_2054 around fridge_140.
Action 7: Grab food_fish_2054.
Action 8: Wash food_fish_2054.
Action 9: Walk to faucet_134.
Action 10: Switch off faucet_134.
Action 11: Walk to food_carrot_2047.
Action 12: Grab food_carrot_2047.
Action 13: Walk to kitchen_counter_132.
Action 14: Put food_fish_2054 on kitchen_counter_132.
Action 15: Switch on faucet_134.
Action 16: Wash food_carrot_2047.
Action 17: Switch off faucet_134.
Action 18: Walk to food_potato_2066.
Action 19: Grab food_potato_2066.
Action 20: Wash food_potato_2066.
Action 21: Walk to faucet_308.
Action 22: Switch off faucet_308.
Action 23: Walk to cupboard_131.
Action 24: Walk to kitchen_counter_132.
Action 25: Put food_carrot_2047 on kitchen_counter_132.
Action 26: Grab food_fish_2054.
Action 27: Switch on faucet_134.
Action 28: Switch off faucet_134.
Action 29: Switch on faucet_134.
Action 30: Switch off faucet_134.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2114_around_basket_for_clothes_2040(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_shirt,basket_for_clothes_instance)
        else:
            exp(clothes_shirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_shirt]=True
    

behavior find_food_onion_2026_around_kitchen_counter_129(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_onion,kitchen_counter_instance)
        else:
            exp(food_onion,kitchen_counter_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_onion]=True
    

behavior find_food_butter_2018_around_oven_141(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_butter,oven_instance)
        else:
            exp(food_butter,oven_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,oven_instance]=True
        close[oven_instance,food_butter]=True
    

behavior find_pot_2093_around_stove_2090(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(pot,stove_instance)
        else:
            exp(pot,stove_instance)
    eff:
        unknown[pot]=False
        close[pot,stove_instance]=True
        close[stove_instance,pot]=True
    

behavior find_bowl_2096_around_kitchen_counter_128(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_ingredient(ingredient: item):
    body:
        wash(ingredient)
        # Wash the ingredient

behavior __goal__():
    body:
        bind food_fish: item where:
            is_food_fish(food_fish)
        # Select the fish to be washed

        bind food_carrot: item where:
            is_food_carrot(food_carrot)
        # Select the carrot to be washed

        bind food_potato: item where:
            is_food_potato(food_potato) and id[food_potato] == 2066
        # Select the potato to be washed

        wash_ingredient(food_fish)
        # Wash the fish

        wash_ingredient(food_carrot)
        # Wash the carrot

        wash_ingredient(food_potato)
        # Wash the potato

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior wash_ingredient(ingredient: item):
    body:
        wash(ingredient)
        # Wash the ingredient

behavior __goal__():
    body:
        bind food_fish: item where:
            is_food_fish(food_fish)
        # Select the fish to be washed

        bind food_carrot: item where:
            is_food_carrot(food_carrot)
        # Select the carrot to be washed

        bind food_potato: item where:
            is_food_potato(food_potato) and id[food_potato] == 2066
        # Select the potato to be washed

        wash_ingredient(food_fish)
        # Wash the fish

        wash_ingredient(food_carrot)
        # Wash the carrot

        wash_ingredient(food_potato)
        # Wash the potato

##############################
From agent.py-> find a plan in act()
put_executor(food_potato_2066, kitchen_counter_132)walk_executor(faucet_134)switchon_executor(faucet_134)wash_executor(food_fish_2054)switchoff_executor(faucet_134)walk_executor(food_carrot_2047)grab_executor(food_carrot_2047)walk_executor(kitchen_counter_132)put_executor(food_fish_2054, kitchen_counter_132)switchon_executor(faucet_134)wash_executor(food_carrot_2047)switchoff_executor(faucet_134)grab_executor(food_potato_2066)switchon_executor(faucet_134)wash_executor(food_potato_2066)switchoff_executor(faucet_134)
##############################
From agent.py
put_executor(food_potato_2066, kitchen_counter_132)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. kitchen_counter_132 is close food_potato_2066. food_potato_2066 is close kitchen_counter_132. food_potato_2066 is on kitchen_counter_132. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Robot is close to the faucet_134. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Robot is close to the faucet_134. faucet_134 is turned on. 
##############################
From agent.py
wash_executor(food_fish_2054)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(food_carrot_2047)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Robot is close to the food_carrot_2047. 
##############################
From agent.py
grab_executor(food_carrot_2047)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Robot is close to the food_carrot_2047. Grabbing food_carrot_2047 by right hand. 
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Robot is close to the food_carrot_2047. 
##############################
From agent.py
put_executor(food_fish_2054, kitchen_counter_132)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Robot is close to the food_carrot_2047. food_fish_2054 is close kitchen_counter_132. food_fish_2054 is on kitchen_counter_132. food_fish_2054 released by left hand. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Robot is close to the food_carrot_2047. faucet_134 is turned on. 
##############################
From agent.py
wash_executor(food_carrot_2047)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Robot is close to the food_carrot_2047. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Robot is close to the food_carrot_2047. faucet_134 is turned off. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Robot is close to the food_carrot_2047. Robot is close to the food_potato_2066. Grabbing food_potato_2066 by left hand. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Robot is close to the food_carrot_2047. Robot is close to the food_potato_2066. faucet_134 is turned on. 
##############################
From agent.py
wash_executor(food_potato_2066)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Robot is close to the food_carrot_2047. Robot is close to the food_potato_2066. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Robot is close to the food_carrot_2047. Robot is close to the food_potato_2066. faucet_134 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_box_2023_around_pot_54(box:item):
    goal: not unknown(box)
    body:
        assert is_box(box)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==54
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(box,pot_instance)
        else:
            exp(box,pot_instance)
    eff:
        unknown[box]=False
        close[box,pot_instance]=True
        close[pot_instance,box]=True
    

behavior find_pot_54_around_pot_54(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==54
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(pot,pot_instance)
        else:
            exp(pot,pot_instance)
    eff:
        unknown[pot]=False
        close[pot,pot_instance]=True
        close[pot_instance,pot]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior cook_fish_and_ingredients(pot: item, stove: item, fish: item, carrot: item, potato: item):
    body:
        achieve has_water(pot)
        achieve_once inside(fish, pot)
        achieve_once inside(carrot, pot)
        achieve_once inside(potato, pot)
        achieve_once on(pot, stove)
        achieve is_on(stove)
        
behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind fish: item where:
            is_food_fish(fish) and clean(fish)
        # Select the cleaned fish

        bind carrot: item where:
            is_food_carrot(carrot) and clean(carrot)
        # Select the cleaned carrot

        bind potato: item where:
            is_food_potato(potato) and clean(potato)
        # Select the cleaned potato

        cook_fish_and_ingredients(pot, stove, fish, carrot, potato)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior cook_fish_and_ingredients(pot: item, stove: item, fish: item, carrot: item, potato: item):
    body:
        achieve has_water(pot)
        achieve_once inside(fish, pot)
        achieve_once inside(carrot, pot)
        achieve_once inside(potato, pot)
        achieve_once on(pot, stove)
        achieve is_on(stove)
        
behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind fish: item where:
            is_food_fish(fish) and clean(fish)
        # Select the cleaned fish

        bind carrot: item where:
            is_food_carrot(carrot) and clean(carrot)
        # Select the cleaned carrot

        bind potato: item where:
            is_food_potato(potato) and clean(potato)
        # Select the cleaned potato

        cook_fish_and_ingredients(pot, stove, fish, carrot, potato)

##############################
From agent.py-> find a plan in act()
put_executor(food_potato_2066, kitchen_counter_132)walk_executor(pot_54)open_executor(pot_54)grab_executor(pot_54)walk_executor(faucet_134)switchon_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(food_fish_2054)grab_executor(food_fish_2054)walk_executor(pot_54)putin_executor(food_fish_2054, pot_54)putin_executor(food_carrot_2047, pot_54)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(pot_54)putin_executor(food_potato_2066, pot_54)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
put_executor(food_potato_2066, kitchen_counter_132)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Robot is close to the food_carrot_2047. Robot is close to the food_potato_2066. food_potato_2066 is close kitchen_counter_132. food_potato_2066 is on kitchen_counter_132. food_potato_2066 released by left hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
open_executor(pot_54)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the oven_141. Robot is close to the pot_54. pot_54 is opened. 
##############################
From agent.py
grab_executor(pot_54)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the oven_141. Robot is close to the pot_54. Grabbing pot_54 by left hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(food_fish_2054)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_box_2023_around_cupboard_130(box:item):
    goal: not unknown(box)
    body:
        assert is_box(box)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(box,cupboard_instance)
        else:
            exp(box,cupboard_instance)
    eff:
        unknown[box]=False
        close[box,cupboard_instance]=True
        close[cupboard_instance,box]=True
    

behavior find_pot_54_around_stove_2090(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(pot,stove_instance)
        else:
            exp(pot,stove_instance)
    eff:
        unknown[pot]=False
        close[pot,stove_instance]=True
        close[stove_instance,pot]=True
    

#exp_behavior_end

#goal_representation

behavior cook_ingredients_in_pot(fish:item, carrot:item, potato:item, pot:item, stove:item):
    body:
        achieve_once inside(fish, pot)
        achieve_once inside(carrot, pot)
        achieve_once inside(potato, pot)
        achieve is_on(stove)
        achieve on(pot, stove)

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        # Select the fish to cook

        bind carrot: item where:
            is_food_carrot(carrot)
        # Select the carrot to cook

        bind potato: item where:
            is_food_potato(potato)
        # Select the potato to cook

        bind pot: item where:
            is_pot(pot)
        # Select a pot to cook the ingredients in

        bind stove: item where:
            is_stove(stove)
        # Select a stove to cook the ingredients

        cook_ingredients_in_pot(fish, carrot, potato, pot, stove)

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior cook_ingredients_in_pot(fish:item, carrot:item, potato:item, pot:item, stove:item):
    body:
        achieve_once inside(fish, pot)
        achieve_once inside(carrot, pot)
        achieve_once inside(potato, pot)
        achieve is_on(stove)
        achieve on(pot, stove)

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        # Select the fish to cook

        bind carrot: item where:
            is_food_carrot(carrot)
        # Select the carrot to cook

        bind potato: item where:
            is_food_potato(potato)
        # Select the potato to cook

        bind pot: item where:
            is_pot(pot)
        # Select a pot to cook the ingredients in

        bind stove: item where:
            is_stove(stove)
        # Select a stove to cook the ingredients

        cook_ingredients_in_pot(fish, carrot, potato, pot, stove)

##############################
From agent.py-> find a plan in act()
put_executor(food_carrot_2047, kitchen_counter_132)grab_executor(food_fish_2054)putin_executor(food_fish_2054, pot_54)grab_executor(food_carrot_2047)putin_executor(food_carrot_2047, pot_54)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(pot_54)putin_executor(food_potato_2066, pot_54)walk_executor(stove_2090)switchon_executor(stove_2090)put_executor(pot_54, stove_2090)
##############################
From agent.py
put_executor(food_carrot_2047, kitchen_counter_132)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. food_carrot_2047 is close kitchen_counter_132. food_carrot_2047 is on kitchen_counter_132. food_carrot_2047 released by right hand. 
##############################
From agent.py
grab_executor(food_fish_2054)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Grabbing food_fish_2054 by right hand. 
##############################
From agent.py
putin_executor(food_fish_2054, pot_54)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. food_fish_2054 is inside pot_54. pot_54 is close food_fish_2054. food_fish_2054 is close pot_54. food_fish_2054 released by right hand. 
##############################
From agent.py
grab_executor(food_carrot_2047)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Grabbing food_carrot_2047 by right hand. 
##############################
From agent.py
putin_executor(food_carrot_2047, pot_54)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. pot_54 is close food_carrot_2047. food_carrot_2047 is inside pot_54. food_carrot_2047 is close pot_54. food_carrot_2047 released by right hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the food_potato_2066. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the food_potato_2066. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the pot_54. Robot is close to the food_potato_2066. Robot is close to the food_fish_2054. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_potato_2066, pot_54)
Robot find: Robot is close to the pot_54. Robot is close to the food_potato_2066. Robot is close to the food_fish_2054. Robot is close to the food_carrot_2047. pot_54 is close food_potato_2066. food_potato_2066 is inside pot_54. food_potato_2066 is close pot_54. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py
put_executor(pot_54, stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. pot_54 is on stove_2090. pot_54 is close stove_2090. stove_2090 is close pot_54. pot_54 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Cook a pot of fish soup.
Action History:
['walk_executor(kitchen_counter_132)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'grab_executor(food_fish_2054)', 'wash_executor(food_fish_2054)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(food_carrot_2047)', 'grab_executor(food_carrot_2047)', 'walk_executor(kitchen_counter_132)', 'put_executor(food_fish_2054, kitchen_counter_132)', 'switchon_executor(faucet_134)', 'wash_executor(food_carrot_2047)', 'switchoff_executor(faucet_134)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'wash_executor(food_potato_2066)', 'walk_executor(faucet_308)', 'switchoff_executor(faucet_308)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131) (Failed)', 'walk_executor(kitchen_counter_132)', 'put_executor(food_carrot_2047, kitchen_counter_132)', 'grab_executor(food_fish_2054)', 'switchon_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'switchon_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'put_executor(food_potato_2066, kitchen_counter_132)', 'walk_executor(faucet_134)', 'switchon_executor(faucet_134)', 'wash_executor(food_fish_2054)', 'switchoff_executor(faucet_134)', 'walk_executor(food_carrot_2047)', 'grab_executor(food_carrot_2047)', 'walk_executor(kitchen_counter_132)', 'put_executor(food_fish_2054, kitchen_counter_132)', 'switchon_executor(faucet_134)', 'wash_executor(food_carrot_2047)', 'switchoff_executor(faucet_134)', 'grab_executor(food_potato_2066)', 'switchon_executor(faucet_134)', 'wash_executor(food_potato_2066)', 'switchoff_executor(faucet_134)', 'put_executor(food_potato_2066, kitchen_counter_132)', 'walk_executor(pot_54)', 'open_executor(pot_54)', 'grab_executor(pot_54)', 'walk_executor(faucet_134)', 'switchon_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(food_fish_2054)', 'grab_executor(food_fish_2054) (Failed)', 'put_executor(food_carrot_2047, kitchen_counter_132)', 'grab_executor(food_fish_2054)', 'putin_executor(food_fish_2054, pot_54)', 'grab_executor(food_carrot_2047)', 'putin_executor(food_carrot_2047, pot_54)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(pot_54)', 'putin_executor(food_potato_2066, pot_54)', 'walk_executor(stove_2090)', 'switchon_executor(stove_2090)', 'put_executor(pot_54, stove_2090)']
Time info:
Time consume: 272 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 134
goal generate times: 5
goal correct times: 0
action_num: 66

Task complete rate:
Keystate: k1 - Requires: 13 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
