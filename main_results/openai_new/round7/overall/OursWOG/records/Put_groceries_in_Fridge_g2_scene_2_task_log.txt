From agent.py
Reset goals: The sub-goals are: 
['1. Wash the fish.', '2. Put the milk, turkey, eggs, fish, and chicken on one of the tables in the dining room.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_fish_2054_around_fridge_140(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_fish,fridge_instance)
        else:
            exp(food_fish,fridge_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,fridge_instance]=True
        close[fridge_instance,food_fish]=True
    

#exp_behavior_end

#goal_representation
behavior wash_fish(fish:item):
    body:
        wash(fish)

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        # Select the fish that needs to be washed

        wash_fish(fish)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior wash_fish(fish:item):
    body:
        wash(fish)

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        # Select the fish that needs to be washed

        wash_fish(fish)
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_fish_2054, fridge_140)walk_executor(food_fish_2054)grab_executor(food_fish_2054)wash_executor(food_fish_2054)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_fish_2054, fridge_140)
Find food_fish_2054. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_fish_2054)wash_executor(food_fish_2054)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
grab_executor(food_fish_2054)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. Grabbing food_fish_2054 by right hand. 
##############################
From agent.py
wash_executor(food_fish_2054)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_fish_2054 is cleaned. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: pot_54, Robot is close to the food_fish_2054. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the food_fish_2054. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_mouse_2112_around_mousepad_381(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind mousepad_instance:item where:
            is_mousepad(mousepad_instance) and id[mousepad_instance]==381
        achieve close_char(char,mousepad_instance)
        if can_open(mousepad_instance):
            achieve_once open(mousepad_instance)
            exp(mouse,mousepad_instance)
        else:
            exp(mouse,mousepad_instance)
    eff:
        unknown[mouse]=False
        close[mouse,mousepad_instance]=True
        close[mousepad_instance,mouse]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
behavior place_items_on_table(milk:item, turkey:item, eggs:item, fish:item, chicken:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(turkey, table)
        achieve_once on(eggs, table)
        achieve_once on(fish, table)
        achieve_once on(chicken, table)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind table: item where:
            is_table(table) and inside(table, dining_room)
        # Select a table in the dining room

        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind turkey: item where:
            is_food_turkey(turkey)
        # Select the turkey

        bind eggs: item where:
            is_food_egg(eggs)
        # Select the eggs

        bind fish: item where:
            is_food_fish(fish)
        # Select the fish

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken

        place_items_on_table(milk, turkey, eggs, fish, chicken, table)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior place_items_on_table(milk:item, turkey:item, eggs:item, fish:item, chicken:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(turkey, table)
        achieve_once on(eggs, table)
        achieve_once on(fish, table)
        achieve_once on(chicken, table)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind table: item where:
            is_table(table) and inside(table, dining_room)
        # Select a table in the dining room

        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind turkey: item where:
            is_food_turkey(turkey)
        # Select the turkey

        bind eggs: item where:
            is_food_egg(eggs)
        # Select the eggs

        bind fish: item where:
            is_food_fish(fish)
        # Select the fish

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken

        place_items_on_table(milk, turkey, eggs, fish, chicken, table)
##############################
From agent.py-> find a plan in act()
walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(table_123)put_executor(milk_2074, table_123)walk_executor(food_turkey_2071)grab_executor(food_turkey_2071)walk_executor(table_123)put_executor(food_turkey_2071, table_123)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(table_123)put_executor(food_egg_2053, table_123)put_executor(food_fish_2054, table_123)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(table_123)put_executor(food_chicken_2050, table_123)
##############################
From agent.py
walk_executor(milk_2074)
Robot find: Robot is close to the food_fish_2054. Robot is close to the milk_2074. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(milk_2074)
Robot find: Robot is close to the food_fish_2054. Robot is close to the milk_2074. Robot is close to the fridge_140. Grabbing milk_2074 by left hand. 
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, laptop_2015, fork_2103, cup_2087, bowl_2095, drawing_118, Robot is close to the food_fish_2054. Robot is close to the milk_2074. Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
put_executor(milk_2074, table_123)
Robot find: Robot is close to the food_fish_2054. Robot is close to the milk_2074. Robot is close to the mat_114. Robot is close to the table_123. milk_2074 is close table_123. table_123 is close milk_2074. milk_2074 is on table_123. milk_2074 released by left hand. 
##############################
From agent.py
walk_executor(food_turkey_2071)
Robot find: Robot is close to the food_fish_2054. Robot is close to the fridge_140. Robot is close to the food_turkey_2071. 
##############################
From agent.py
grab_executor(food_turkey_2071)
Robot find: Robot is close to the food_fish_2054. Robot is close to the fridge_140. Robot is close to the food_turkey_2071. Grabbing food_turkey_2071 by left hand. 
##############################
From agent.py
walk_executor(table_123)
Robot find: Robot is close to the food_fish_2054. Robot is close to the food_turkey_2071. Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
put_executor(food_turkey_2071, table_123)
Robot find: Robot is close to the food_fish_2054. Robot is close to the food_turkey_2071. Robot is close to the mat_114. Robot is close to the table_123. table_123 is close food_turkey_2071. food_turkey_2071 is close table_123. food_turkey_2071 is on table_123. food_turkey_2071 released by left hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the food_fish_2054. Robot is close to the fridge_140. Robot is close to the food_egg_2053. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the food_fish_2054. Robot is close to the fridge_140. Robot is close to the food_egg_2053. Grabbing food_egg_2053 by left hand. 
##############################
From agent.py
walk_executor(table_123)
Robot find: Robot is close to the food_fish_2054. Robot is close to the food_egg_2053. Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
put_executor(food_egg_2053, table_123)
Robot find: Robot is close to the food_fish_2054. Robot is close to the food_egg_2053. Robot is close to the mat_114. Robot is close to the table_123. food_egg_2053 is close table_123. table_123 is close food_egg_2053. food_egg_2053 is on table_123. food_egg_2053 released by left hand. 
##############################
From agent.py
put_executor(food_fish_2054, table_123)
Robot find: Robot is close to the food_fish_2054. Robot is close to the food_egg_2053. Robot is close to the mat_114. Robot is close to the table_123. table_123 is close food_fish_2054. food_fish_2054 is close table_123. food_fish_2054 is on table_123. food_fish_2054 released by right hand. 
##############################
From agent.py
walk_executor(food_chicken_2050)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_chicken_2050)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the fridge_140. Grabbing food_chicken_2050 by right hand. 
##############################
From agent.py
walk_executor(table_123)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
put_executor(food_chicken_2050, table_123)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the mat_114. Robot is close to the table_123. food_chicken_2050 is close table_123. table_123 is close food_chicken_2050. food_chicken_2050 is on table_123. food_chicken_2050 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Wash the fish at first. Then put milk, turkey, eggs, fish and chicken on one of the table in dining room.
Action History:
['walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'grab_executor(food_fish_2054)', 'wash_executor(food_fish_2054)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(milk_2074)', 'grab_executor(milk_2074)', 'walk_executor(table_123)', 'put_executor(milk_2074, table_123)', 'walk_executor(food_turkey_2071)', 'grab_executor(food_turkey_2071)', 'walk_executor(table_123)', 'put_executor(food_turkey_2071, table_123)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(table_123)', 'put_executor(food_egg_2053, table_123)', 'put_executor(food_fish_2054, table_123)', 'walk_executor(food_chicken_2050)', 'grab_executor(food_chicken_2050)', 'walk_executor(table_123)', 'put_executor(food_chicken_2050, table_123)']
Time info:
Time consume: 96 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 45
goal generate times: 2
goal correct times: 0
action_num: 24

Task complete rate:
Keystate: k1 - Requires: 4 steps
Keystate: k2 - Requires: 0 steps
Action Completion Rate: 1.0
Scene_id: 2
##############################
