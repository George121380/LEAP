From agent.py
Reset goals: The sub-goals are: 
['1. Find the book and put it on the coffee table in the home office.', '2. Prepare a cup of hot milk and put it on the table.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2091_around_bookshelf_188(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==188
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_novel_2010_around_bookshelf_188(novel:item):
    goal: not unknown(novel)
    body:
        assert is_novel(novel)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==188
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(novel,bookshelf_instance)
        else:
            exp(novel,bookshelf_instance)
    eff:
        unknown[novel]=False
        close[novel,bookshelf_instance]=True
        close[bookshelf_instance,novel]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_book_on_table(book: item, table: item):
    body:
        achieve_once on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        
        bind home_office: item where:
            is_home_office(home_office)

        bind table: item where:
            is_table(table) and inside(table, home_office)

        place_book_on_table(book, table)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior place_book_on_table(book: item, table: item):
    body:
        achieve_once on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        
        bind home_office: item where:
            is_home_office(home_office)

        bind table: item where:
            is_table(table) and inside(table, home_office)

        place_book_on_table(book, table)

##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_188)open_executor(bookshelf_188)exp(book_2091, bookshelf_188)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(bookshelf_188)
Robot find: drawing_196, Robot is close to the bookshelf_188. 
##############################
From agent.py
open_executor(bookshelf_188)
Robot find: Robot is close to the bookshelf_188. bookshelf_188 is opened. 
##############################
From agent.py
exp(book_2091, bookshelf_188)
Fail to find book_2091 around bookshelf_188. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_136)exp(book_2091, bookshelf_136)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(bookshelf_136)
Robot find: book_2091, Robot is close to the bookshelf_136. 
##############################
From agent.py
exp(book_2091, bookshelf_136)
Find book_2091. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(book_2091)
Robot find: Robot is close to the bookshelf_136. Robot is close to the book_2091. 
##############################
From agent.py
grab_executor(book_2091)
Robot find: Robot is close to the bookshelf_136. Robot is close to the book_2091. Grabbing book_2091 by right hand. 
##############################
From agent.py
walk_executor(table_193)
Robot find: dvd_player_2000, pillow_195, laser_pointer_2025, mat_201, mouse_2112, chair_2119, oil_2005, keyboard_2111, Robot is close to the book_2091. Robot is close to the table_193. 
##############################
From agent.py
put_executor(book_2091, table_193)
Robot find: Robot is close to the book_2091. Robot is close to the table_193. book_2091 is on table_193. table_193 is close book_2091. book_2091 is close table_193. book_2091 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_fork_2103_around_sink_133(fork:item):
    goal: not unknown(fork)
    body:
        assert is_fork(fork)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(fork,sink_instance)
        else:
            exp(fork,sink_instance)
    eff:
        unknown[fork]=False
        close[fork,sink_instance]=True
        close[sink_instance,fork]=True
    

behavior find_milk_2074_around_fridge_140(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_cup_2089_around_fridge_140(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(cup,fridge_instance)
        else:
            exp(cup,fridge_instance)
    eff:
        unknown[cup]=False
        close[cup,fridge_instance]=True
        close[fridge_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_hot_milk(cup: item, stove: item):
    body:
        achieve_once has_water(cup)
        achieve_once is_on(stove)
        achieve_once on(cup, stove)

behavior place_cup_on_table(cup: item, table: item):
    body:
        achieve_once on(cup, table)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)

        bind stove: item where:
            is_stove(stove)

        bind home_office: item where:
            is_home_office(home_office)

        bind table: item where:
            is_table(table) and inside(table, home_office)

        prepare_hot_milk(cup, stove)
        place_cup_on_table(cup, table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior prepare_hot_milk(cup: item, stove: item):
    body:
        achieve_once has_water(cup)
        achieve_once is_on(stove)
        achieve_once on(cup, stove)

behavior place_cup_on_table(cup: item, table: item):
    body:
        achieve_once on(cup, table)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)

        bind stove: item where:
            is_stove(stove)

        bind home_office: item where:
            is_home_office(home_office)

        bind table: item where:
            is_table(table) and inside(table, home_office)

        prepare_hot_milk(cup, stove)
        place_cup_on_table(cup, table)

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(cup_2087, fridge_140)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)switchon_executor(stove_2090)put_executor(cup_2087, stove_2090)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(table_193)put_executor(cup_2087, table_193)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(cup_2087, fridge_140)
Fail to find cup_2087 around fridge_140. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)exp(cup_2087, sink_133)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)switchon_executor(stove_2090)put_executor(cup_2087, stove_2090)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(table_193)put_executor(cup_2087, table_193)
##############################
From agent.py
walk_executor(sink_133)
Robot find: after_shave_2029, cleaning_solution_2098, juice_2034, pot_54, Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
exp(cup_2087, sink_133)
Fail to find cup_2087 around sink_133. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(cup_2087, kitchen_counter_128)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)switchon_executor(stove_2090)put_executor(cup_2087, stove_2090)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(table_193)put_executor(cup_2087, table_193)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(cup_2087, kitchen_counter_128)
Fail to find cup_2087 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(orchid_200)exp(cup_2087, orchid_200)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)switchon_executor(stove_2090)put_executor(cup_2087, stove_2090)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(table_193)put_executor(cup_2087, table_193)
##############################
From agent.py
walk_executor(orchid_200)
Robot find: Robot is close to the orchid_200. Robot is close to the table_193. 
##############################
From agent.py
exp(cup_2087, orchid_200)
Fail to find cup_2087 around orchid_200. 
##############################
From agent.py-> find a plan in act()
walk_executor(cpuscreen_383)exp(cup_2087, cpuscreen_383)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)switchon_executor(stove_2090)put_executor(cup_2087, stove_2090)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(table_193)put_executor(cup_2087, table_193)
##############################
From agent.py
walk_executor(cpuscreen_383)
Robot find: chair_374, mouse_380, keyboard_382, glue_2013, Robot is close to the desk_375. Robot is close to the cpuscreen_383. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2087 ?
Answer: Find cup_2087 in dining_room_1. It is placed on table_123.
Re-decompose: None

##############################
From agent.py
Human Instruction: Find cup_2087 in dining_room_1. It is placed on table_123.

The actions you have taken:
Action 1: Walk to bookshelf_188.
Action 2: Open bookshelf_188.
Action 3: look for book_2091 around bookshelf_188.
Action 4: Walk to bookshelf_136.
Action 5: look for book_2091 around bookshelf_136.
Action 6: Walk to book_2091.
Action 7: Grab book_2091.
Action 8: Walk to table_193.
Action 9: Put book_2091 on table_193.
Action 10: Walk to fridge_140.
Action 11: Switch off fridge_140.
Action 12: Open fridge_140.
Action 13: look for cup_2087 around fridge_140.
Action 14: Walk to sink_133.
Action 15: look for cup_2087 around sink_133.
Action 16: Walk to kitchen_counter_128.
Action 17: look for cup_2087 around kitchen_counter_128.
Action 18: Walk to orchid_200.
Action 19: look for cup_2087 around orchid_200.
Action 20: Walk to cpuscreen_383.

##############################
From agent.py
exp(cup_2087, cpuscreen_383)
Fail to find cup_2087 around cpuscreen_383. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(cup_2087, table_123)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)switchon_executor(stove_2090)put_executor(cup_2087, stove_2090)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(table_193)put_executor(cup_2087, table_193)
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, laptop_2015, fork_2103, cup_2087, bowl_2095, drawing_118, Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
exp(cup_2087, table_123)
Find cup_2087. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)switchon_executor(stove_2090)put_executor(cup_2087, stove_2090)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(table_193)put_executor(cup_2087, table_193)
##############################
From agent.py
walk_executor(cup_2087)
Robot find: Robot is close to the table_123. Robot is close to the cup_2087. 
##############################
From agent.py
grab_executor(cup_2087)
Robot find: Robot is close to the table_123. Robot is close to the cup_2087. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the cup_2087. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the cup_2087. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the cup_2087. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the cup_2087. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py
put_executor(cup_2087, stove_2090)
Robot find: Robot is close to the cup_2087. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. cup_2087 is close stove_2090. cup_2087 is on stove_2090. stove_2090 is close cup_2087. cup_2087 released by right hand. 
##############################
From agent.py
walk_executor(cup_2087)
Robot find: Robot is close to the cup_2087. Robot is close to the stove_2090. 
##############################
From agent.py
grab_executor(cup_2087)
Robot find: Robot is close to the cup_2087. Robot is close to the stove_2090. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(table_193)
Robot find: Robot is close to the cup_2087. Robot is close to the table_193. 
##############################
From agent.py
put_executor(cup_2087, table_193)
Robot find: Robot is close to the cup_2087. Robot is close to the table_193. table_193 is close cup_2087. cup_2087 is close table_193. cup_2087 is on table_193. cup_2087 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot still needs to pour milk into the cup and ensure that the milk is heated to complete the task of preparing a cup of hot milk before placing it on the table. The actions taken do not indicate that milk was added to the cup or that the contents were heated adequately to be considered hot milk.
##############################
From agent.py
Human Instruction: The robot still needs to pour milk into the cup and ensure that the milk is heated to complete the task of preparing a cup of hot milk before placing it on the table. The actions taken do not indicate that milk was added to the cup or that the contents were heated adequately to be considered hot milk.

The actions you have taken:
Action 1: Walk to bookshelf_188.
Action 2: Open bookshelf_188.
Action 3: look for book_2091 around bookshelf_188.
Action 4: Walk to bookshelf_136.
Action 5: look for book_2091 around bookshelf_136.
Action 6: Walk to book_2091.
Action 7: Grab book_2091.
Action 8: Walk to table_193.
Action 9: Put book_2091 on table_193.
Action 10: Walk to fridge_140.
Action 11: Switch off fridge_140.
Action 12: Open fridge_140.
Action 13: look for cup_2087 around fridge_140.
Action 14: Walk to sink_133.
Action 15: look for cup_2087 around sink_133.
Action 16: Walk to kitchen_counter_128.
Action 17: look for cup_2087 around kitchen_counter_128.
Action 18: Walk to orchid_200.
Action 19: look for cup_2087 around orchid_200.
Action 20: Walk to cpuscreen_383.
Action 21: look for cup_2087 around cpuscreen_383.
Action 22: Walk to table_123.
Action 23: look for cup_2087 around table_123.
Action 24: Walk to cup_2087.
Action 25: Grab cup_2087.
Action 26: Walk to faucet_134.
Action 27: Switch off faucet_134.
Action 28: Walk to stove_2090.
Action 29: Switch on stove_2090.
Action 30: Put cup_2087 on stove_2090.
Action 31: Walk to cup_2087.
Action 32: Grab cup_2087.
Action 33: Walk to table_193.
Action 34: Put cup_2087 on table_193.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2089_around_microwave_149(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind microwave_instance:item where:
            is_microwave(microwave_instance) and id[microwave_instance]==149
        achieve close_char(char,microwave_instance)
        if can_open(microwave_instance):
            achieve_once open(microwave_instance)
            exp(cup,microwave_instance)
        else:
            exp(cup,microwave_instance)
    eff:
        unknown[cup]=False
        close[cup,microwave_instance]=True
        close[microwave_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_cup_with_milk(cup: item, milk: item, fridge: item):
    body:
        achieve_once inside(milk, cup)
        # Pour milk into the cup from the fridge

behavior heat_milk(cup: item, stove: item):
    body:
        achieve_once closed(stove)
        # Ensure the stove is closed before turning it on
        achieve_once is_on(stove)
        # Turn on the stove to heat the milk
        achieve_once on(cup, stove)
        # Place the cup on the stove

behavior place_cup_on_table(cup: item, table: item):
    body:
        achieve_once on(cup, table)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup] == 2087
        # Select the cup_2087

        bind stove: item where:
            is_stove(stove) and id[stove] == 2090
        # Select the stove_2090 for heating the milk

        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind fridge: item where:
            is_fridge(fridge)
        # Select the fridge

        fill_cup_with_milk(cup, milk, fridge)
        heat_milk(cup, stove)

        bind table: item where:
            is_table(table) and id[table] == 193
        # Select the table_193

        place_cup_on_table(cup, table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_cup_with_milk(cup: item, milk: item, fridge: item):
    body:
        achieve_once inside(milk, cup)
        # Pour milk into the cup from the fridge

behavior heat_milk(cup: item, stove: item):
    body:
        achieve_once closed(stove)
        # Ensure the stove is closed before turning it on
        achieve_once is_on(stove)
        # Turn on the stove to heat the milk
        achieve_once on(cup, stove)
        # Place the cup on the stove

behavior place_cup_on_table(cup: item, table: item):
    body:
        achieve_once on(cup, table)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup] == 2087
        # Select the cup_2087

        bind stove: item where:
            is_stove(stove) and id[stove] == 2090
        # Select the stove_2090 for heating the milk

        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind fridge: item where:
            is_fridge(fridge)
        # Select the fridge

        fill_cup_with_milk(cup, milk, fridge)
        heat_milk(cup, stove)

        bind table: item where:
            is_table(table) and id[table] == 193
        # Select the table_193

        place_cup_on_table(cup, table)

##############################
From agent.py-> find a plan in act()
walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)grab_executor(cup_2087)walk_executor(stove_2090)put_executor(cup_2087, stove_2090)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(table_193)put_executor(cup_2087, table_193)
##############################
From agent.py
walk_executor(milk_2074)
Robot find: Robot is close to the milk_2074. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(milk_2074)
Robot find: Robot is close to the milk_2074. Robot is close to the fridge_140. Grabbing milk_2074 by right hand. 
##############################
From agent.py
walk_executor(cup_2087)
Robot find: Robot is close to the milk_2074. Robot is close to the table_193. Robot is close to the cup_2087. 
##############################
From agent.py
putin_executor(milk_2074, cup_2087)
Robot find: Robot is close to the milk_2074. Robot is close to the table_193. Robot is close to the cup_2087. milk_2074 is close cup_2087. milk_2074 is inside cup_2087. cup_2087 is close milk_2074. milk_2074 released by right hand. 
##############################
From agent.py
grab_executor(cup_2087)
Robot find: Robot is close to the milk_2074. Robot is close to the table_193. Robot is close to the cup_2087. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the cup_2087. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(cup_2087, stove_2090)
Robot find: Robot is close to the cup_2087. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. cup_2087 is close stove_2090. cup_2087 is on stove_2090. cup_2087 released by right hand. 
##############################
From agent.py
walk_executor(cup_2087)
Robot find: Robot is close to the cup_2087. Robot is close to the stove_2090. 
##############################
From agent.py
grab_executor(cup_2087)
Robot find: Robot is close to the cup_2087. Robot is close to the stove_2090. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(table_193)
Robot find: Robot is close to the cup_2087. Robot is close to the table_193. 
##############################
From agent.py
put_executor(cup_2087, table_193)
Robot find: Robot is close to the cup_2087. Robot is close to the table_193. cup_2087 is close table_193. cup_2087 is on table_193. cup_2087 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Find the book and put it on the coffe table in home office. Then prepare a cup of hot milk, put it on the table.
Action History:
['walk_executor(bookshelf_188)', 'open_executor(bookshelf_188)', 'walk_executor(bookshelf_136)', 'walk_executor(book_2091)', 'grab_executor(book_2091)', 'walk_executor(table_193)', 'put_executor(book_2091, table_193)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'walk_executor(sink_133)', 'walk_executor(kitchen_counter_128)', 'walk_executor(orchid_200)', 'walk_executor(cpuscreen_383)', 'walk_executor(table_123)', 'walk_executor(cup_2087)', 'grab_executor(cup_2087)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(stove_2090)', 'switchon_executor(stove_2090)', 'put_executor(cup_2087, stove_2090)', 'walk_executor(cup_2087)', 'grab_executor(cup_2087)', 'walk_executor(table_193)', 'put_executor(cup_2087, table_193)', 'walk_executor(milk_2074)', 'grab_executor(milk_2074)', 'walk_executor(cup_2087)', 'putin_executor(milk_2074, cup_2087)', 'grab_executor(cup_2087)', 'walk_executor(stove_2090)', 'put_executor(cup_2087, stove_2090)', 'walk_executor(cup_2087)', 'grab_executor(cup_2087)', 'walk_executor(table_193)', 'put_executor(cup_2087, table_193)']
Time info:
Time consume: 205 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 39
goal generate times: 3
goal correct times: 0
action_num: 37

Task complete rate:
Keystate: k1 - Requires: 0 steps
Keystate: k2 - Requires: 8 steps
Keystate: k3 - Requires: 0 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
