From agent.py
Reset goals: The sub-goals are: 
['1. Identify the bowls and plates that need washing.', '2. Load the identified bowls and plates into the dishwasher.', '3. Start the dishwasher to wash the bowls and plates.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_sink_307(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(plate,sink_instance)
        else:
            exp(plate,sink_instance)
    eff:
        unknown[plate]=False
        close[plate,sink_instance]=True
        close[sink_instance,plate]=True
    

behavior find_bowl_2096_around_sink_307(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(bowl,sink_instance)
        else:
            exp(bowl,sink_instance)
    eff:
        unknown[bowl]=False
        close[bowl,sink_instance]=True
        close[sink_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
def needs_washing(item: item):
    # Function to check if the item is a bowl or plate that needs washing
    symbol needs_washing = (is_bowl(item) or is_plate(item)) and dirty(item)
    return needs_washing

behavior __goal__():
    body:
        foreach item: item:
            if needs_washing(item) and not visited(item):
                observe(item, "Check if this item is a bowl or plate that needs washing")

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_dishwasher_143(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==143
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(plate,dishwasher_instance)
        else:
            exp(plate,dishwasher_instance)
    eff:
        unknown[plate]=False
        close[plate,dishwasher_instance]=True
        close[dishwasher_instance,plate]=True
    

behavior find_bowl_2096_around_sink_307(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(bowl,sink_instance)
        else:
            exp(bowl,sink_instance)
    eff:
        unknown[bowl]=False
        close[bowl,sink_instance]=True
        close[sink_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
def is_target_bowl_or_plate(item: item):
    # Determine if the item is a bowl or plate that needs washing
    symbol is_bowl_or_plate_instance = (is_bowl(item) or is_plate(item)) and dirty(item)
    return is_bowl_or_plate_instance

behavior __goal__():
    body:
        foreach item: item:
            if is_target_bowl_or_plate(item) and not visited(item):
                # Check all unvisited items to identify which are bowls or plates
                observe(item, "Identify if this item is a bowl or plate that needs washing")

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_kitchen_counter_132(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(plate,kitchen_counter_instance)
        else:
            exp(plate,kitchen_counter_instance)
    eff:
        unknown[plate]=False
        close[plate,kitchen_counter_instance]=True
        close[kitchen_counter_instance,plate]=True
    

behavior find_bowl_2096_around_sink_307(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(bowl,sink_instance)
        else:
            exp(bowl,sink_instance)
    eff:
        unknown[bowl]=False
        close[bowl,sink_instance]=True
        close[sink_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
def has_dirty_bowls_or_plates(item: item):
    # Function to check if the item is a bowl or a plate and is dirty
    symbol has_dirty_items= (is_bowl(item) or is_plate(item)) and dirty(item)
    return has_dirty_items

behavior __goal__():
    body:
        foreach item: item:
            if has_dirty_bowls_or_plates(item) and not visited(item):
                # Check all unvisited items to find dirty bowls or plates
                observe(item, "Identify if this is a dirty bowl or plate")

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "1. identify the bowls and plates that need washing." ?
Answer: Put all the bowls and the plates into the dishwasher.
Re-decompose: True

##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Put all the bowls and plates into the dishwasher.', '2. Start the dishwasher to wash them.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_kitchen_counter_132(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(plate,kitchen_counter_instance)
        else:
            exp(plate,kitchen_counter_instance)
    eff:
        unknown[plate]=False
        close[plate,kitchen_counter_instance]=True
        close[kitchen_counter_instance,plate]=True
    

behavior find_bowl_2096_around_kitchen_counter_132(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher
        
        foreach o: item:
        # Load all bowls and plates into the dishwasher
            if is_bowl(o) or is_plate(o):
                load_dishwasher(o, dishwasher)

#goal_representation_end

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(bowl_2095, kitchen_counter_132)walk_executor(dishwasher_143)open_executor(dishwasher_143)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(dishwasher_143)putin_executor(bowl_2095, dishwasher_143)walk_executor(kitchen_counter_132)exp(bowl_2096, kitchen_counter_132)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(kitchen_counter_132)exp(bowl_2097, kitchen_counter_132)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(kitchen_counter_132)exp(plate_2105, kitchen_counter_132)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: pot_54, Robot is close to the kitchen_counter_132. 
##############################
From agent.py
exp(bowl_2095, kitchen_counter_132)
Fail to find bowl_2095 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_129)exp(bowl_2095, kitchen_counter_129)walk_executor(dishwasher_143)open_executor(dishwasher_143)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(dishwasher_143)putin_executor(bowl_2095, dishwasher_143)walk_executor(kitchen_counter_129)exp(bowl_2096, kitchen_counter_129)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(kitchen_counter_129)exp(bowl_2097, kitchen_counter_129)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(bookshelf_189)open_executor(bookshelf_189)exp(plate_2105, bookshelf_189)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)
##############################
From agent.py
walk_executor(kitchen_counter_129)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the kitchen_counter_129. 
##############################
From agent.py
exp(bowl_2095, kitchen_counter_129)
Fail to find bowl_2095 around kitchen_counter_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(bowl_2095, dishwasher_143)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(dishwasher_143)putin_executor(bowl_2095, dishwasher_143)exp(bowl_2096, dishwasher_143)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)exp(bowl_2097, dishwasher_143)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)exp(plate_2105, dishwasher_143)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(bowl_2095, dishwasher_143)
Fail to find bowl_2095 around dishwasher_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(bowl_2095, kitchen_counter_128)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(dishwasher_143)putin_executor(bowl_2095, dishwasher_143)walk_executor(kitchen_counter_128)exp(bowl_2096, kitchen_counter_128)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(kitchen_counter_128)exp(bowl_2097, kitchen_counter_128)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(cupboard_131)open_executor(cupboard_131)exp(plate_2105, cupboard_131)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(bowl_2095, kitchen_counter_128)
Fail to find bowl_2095 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(bowl_2095, cupboard_131)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(dishwasher_143)putin_executor(bowl_2095, dishwasher_143)walk_executor(cupboard_131)exp(bowl_2096, cupboard_131)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(cupboard_131)exp(bowl_2097, cupboard_131)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(cupboard_131)exp(plate_2105, cupboard_131)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(bowl_2095, cupboard_131)
Fail to find bowl_2095 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_54)open_executor(pot_54)exp(bowl_2095, pot_54)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(dishwasher_143)putin_executor(bowl_2095, dishwasher_143)walk_executor(pot_54)exp(bowl_2096, pot_54)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(pot_54)exp(bowl_2097, pot_54)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(cupboard_130)exp(plate_2105, cupboard_130)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
open_executor(pot_54)
Robot find: Robot is close to the oven_141. Robot is close to the pot_54. pot_54 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2095 ?
Answer: The target item, bowl_2095, is located inside dining_room_1. You can find it on top of table_123, which is in close proximity to it. Look for bowl_2095 directly on table_123.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item, bowl_2095, is located inside dining_room_1. You can find it on top of table_123, which is in close proximity to it. Look for bowl_2095 directly on table_123.

Human Guidance: Put all the bowls and the plates into the dishwasher.
The actions you have taken:
Action 1: Walk to kitchen_counter_132.
Action 2: look for bowl_2095 around kitchen_counter_132.
Action 3: Walk to kitchen_counter_129.
Action 4: look for bowl_2095 around kitchen_counter_129.
Action 5: Walk to dishwasher_143.
Action 6: Open dishwasher_143.
Action 7: look for bowl_2095 around dishwasher_143.
Action 8: Walk to kitchen_counter_128.
Action 9: look for bowl_2095 around kitchen_counter_128.
Action 10: Walk to cupboard_131.
Action 11: Open cupboard_131.
Action 12: look for bowl_2095 around cupboard_131.
Action 13: Walk to pot_54.
Action 14: Open pot_54.

##############################
From agent.py
exp(bowl_2095, pot_54)
Fail to find bowl_2095 around pot_54. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(bowl_2095, table_123)walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(dishwasher_143)putin_executor(bowl_2095, dishwasher_143)walk_executor(table_123)exp(bowl_2096, table_123)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(table_123)exp(bowl_2097, table_123)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(table_123)exp(plate_2105, table_123)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, laptop_2015, fork_2103, cup_2087, bowl_2095, drawing_118, Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
exp(bowl_2095, table_123)
Find bowl_2095. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(dishwasher_143)putin_executor(bowl_2095, dishwasher_143)walk_executor(table_123)exp(bowl_2096, table_123)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(table_123)exp(bowl_2097, table_123)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(table_123)exp(plate_2105, table_123)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)
##############################
From agent.py
walk_executor(bowl_2095)
Robot find: Robot is close to the table_123. Robot is close to the bowl_2095. 
##############################
From agent.py
grab_executor(bowl_2095)
Robot find: Robot is close to the table_123. Robot is close to the bowl_2095. Grabbing bowl_2095 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the bowl_2095. Robot is close to the knife_2036. Robot is close to the dishwasher_143. 
##############################
From agent.py
putin_executor(bowl_2095, dishwasher_143)
Robot find: Robot is close to the bowl_2095. Robot is close to the knife_2036. Robot is close to the dishwasher_143. bowl_2095 is inside dishwasher_143. bowl_2095 is close dishwasher_143. dishwasher_143 is close bowl_2095. bowl_2095 released by right hand. 
##############################
From agent.py
walk_executor(table_123)
Robot find: Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
exp(bowl_2096, table_123)
Fail to find bowl_2096 around table_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_2093)open_executor(pot_2093)exp(bowl_2096, pot_2093)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(pot_2093)exp(bowl_2097, pot_2093)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(table_127)exp(plate_2105, table_127)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)
##############################
From agent.py
walk_executor(pot_2093)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the pot_2093. 
##############################
From agent.py
open_executor(pot_2093)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the pot_2093. pot_2093 is opened. 
##############################
From agent.py
exp(bowl_2096, pot_2093)
Fail to find bowl_2096 around pot_2093. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Identify all the bowls and plates that need washing.', '2. Load the identified bowls and plates into the dishwasher. ', '3. Run the dishwasher to wash the bowls and plates.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2097_around_sink_133(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(bowl,sink_instance)
        else:
            exp(bowl,sink_instance)
    eff:
        unknown[bowl]=False
        close[bowl,sink_instance]=True
        close[sink_instance,bowl]=True
    

behavior find_plate_2105_around_sink_133(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(plate,sink_instance)
        else:
            exp(plate,sink_instance)
    eff:
        unknown[plate]=False
        close[plate,sink_instance]=True
        close[sink_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
def is_bowl_or_plate(item: item):
    # Function to check if an item is a bowl or plate
    symbol is_target_item = is_bowl(item) or is_plate(item)
    return is_target_item

behavior __goal__():
    body:
        foreach item: item:
            if is_bowl_or_plate(item) and not visited(item):
                # Check all unvisited items to identify bowls and plates that need washing
                observe(item, "Check if this is a bowl or plate that needs washing")

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_bowl_or_plate(item: item):
    # Function to check if an item is a bowl or plate
    symbol is_target_item = is_bowl(item) or is_plate(item)
    return is_target_item

behavior __goal__():
    body:
        foreach item: item:
            if is_bowl_or_plate(item) and not visited(item):
                # Check all unvisited items to identify bowls and plates that need washing
                observe(item, "Check if this is a bowl or plate that needs washing")

##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)exp(bowl_2095, sink_133)walk_executor(bowl_2095)obs(bowl_2095, Check if this is a bowl or plate that needs washing)walk_executor(sink_133)exp(bowl_2096, sink_133)walk_executor(bowl_2096)obs(bowl_2096, Check if this is a bowl or plate that needs washing)walk_executor(sink_133)exp(bowl_2097, sink_133)walk_executor(bowl_2097)obs(bowl_2097, Check if this is a bowl or plate that needs washing)walk_executor(sink_133)exp(plate_2105, sink_133)walk_executor(plate_2105)obs(plate_2105, Check if this is a bowl or plate that needs washing)
##############################
From agent.py
walk_executor(sink_133)
Robot find: after_shave_2029, cleaning_solution_2098, juice_2034, pot_54, Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
exp(bowl_2095, sink_133)
Fail to find bowl_2095 around sink_133. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(bowl_2095, cupboard_131)walk_executor(bowl_2095)obs(bowl_2095, Check if this is a bowl or plate that needs washing)walk_executor(cupboard_131)exp(bowl_2096, cupboard_131)walk_executor(bowl_2096)obs(bowl_2096, Check if this is a bowl or plate that needs washing)walk_executor(cupboard_131)exp(bowl_2097, cupboard_131)walk_executor(bowl_2097)obs(bowl_2097, Check if this is a bowl or plate that needs washing)walk_executor(cupboard_131)exp(plate_2105, cupboard_131)walk_executor(plate_2105)obs(plate_2105, Check if this is a bowl or plate that needs washing)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(bowl_2095, cupboard_131)
Fail to find bowl_2095 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(bowl_2095, cupboard_130)walk_executor(bowl_2095)obs(bowl_2095, Check if this is a bowl or plate that needs washing)walk_executor(cupboard_130)exp(bowl_2096, cupboard_130)walk_executor(bowl_2096)obs(bowl_2096, Check if this is a bowl or plate that needs washing)walk_executor(cupboard_130)exp(bowl_2097, cupboard_130)walk_executor(bowl_2097)obs(bowl_2097, Check if this is a bowl or plate that needs washing)walk_executor(cupboard_130)exp(plate_2105, cupboard_130)walk_executor(plate_2105)obs(plate_2105, Check if this is a bowl or plate that needs washing)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(bowl_2095, cupboard_130)
Fail to find bowl_2095 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_129)exp(bowl_2095, kitchen_counter_129)walk_executor(bowl_2095)obs(bowl_2095, Check if this is a bowl or plate that needs washing)walk_executor(kitchen_counter_129)exp(bowl_2096, kitchen_counter_129)walk_executor(bowl_2096)obs(bowl_2096, Check if this is a bowl or plate that needs washing)walk_executor(kitchen_counter_129)exp(bowl_2097, kitchen_counter_129)walk_executor(bowl_2097)obs(bowl_2097, Check if this is a bowl or plate that needs washing)walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(plate_2105, dishwasher_143)walk_executor(plate_2105)obs(plate_2105, Check if this is a bowl or plate that needs washing)
##############################
From agent.py
walk_executor(kitchen_counter_129)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the kitchen_counter_129. 
##############################
From agent.py
exp(bowl_2095, kitchen_counter_129)
Fail to find bowl_2095 around kitchen_counter_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(bowl_2095, dishwasher_143)walk_executor(bowl_2095)obs(bowl_2095, Check if this is a bowl or plate that needs washing)walk_executor(dishwasher_143)exp(bowl_2096, dishwasher_143)walk_executor(bowl_2096)obs(bowl_2096, Check if this is a bowl or plate that needs washing)walk_executor(dishwasher_143)exp(bowl_2097, dishwasher_143)walk_executor(bowl_2097)obs(bowl_2097, Check if this is a bowl or plate that needs washing)walk_executor(dishwasher_143)exp(plate_2105, dishwasher_143)walk_executor(plate_2105)obs(plate_2105, Check if this is a bowl or plate that needs washing)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(bowl_2095, dishwasher_143)
Fail to find bowl_2095 around dishwasher_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_127)exp(bowl_2095, table_127)walk_executor(bowl_2095)obs(bowl_2095, Check if this is a bowl or plate that needs washing)walk_executor(table_127)exp(bowl_2096, table_127)walk_executor(bowl_2096)obs(bowl_2096, Check if this is a bowl or plate that needs washing)walk_executor(table_127)exp(bowl_2097, table_127)walk_executor(bowl_2097)obs(bowl_2097, Check if this is a bowl or plate that needs washing)walk_executor(kitchen_counter_128)exp(plate_2105, kitchen_counter_128)walk_executor(plate_2105)obs(plate_2105, Check if this is a bowl or plate that needs washing)
##############################
From agent.py
walk_executor(table_127)
Robot find: mat_115, fork_2104, console_2027, crayon_2030, bowl_2096, bowl_2097, napkin_2014, plate_2105, drawing_118, Robot is close to the mat_115. Robot is close to the table_127. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2095 ?
Answer: The target object, bowl_2095, can be found inside dining_room_1. It is located on table_123. As you approach the table, look for a bowl on its surface; this is the bowl_2095 you're searching for.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target object, bowl_2095, can be found inside dining_room_1. It is located on table_123. As you approach the table, look for a bowl on its surface; this is the bowl_2095 you're searching for.

The actions you have taken:
Action 1: Walk to sink_133.
Action 2: look for bowl_2095 around sink_133.
Action 3: Walk to cupboard_131.
Action 4: Open cupboard_131.
Action 5: look for bowl_2095 around cupboard_131.
Action 6: Walk to cupboard_130.
Action 7: look for bowl_2095 around cupboard_130.
Action 8: Walk to kitchen_counter_129.
Action 9: look for bowl_2095 around kitchen_counter_129.
Action 10: Walk to dishwasher_143.
Action 11: Open dishwasher_143.
Action 12: look for bowl_2095 around dishwasher_143.
Action 13: Walk to table_127.

##############################
From agent.py
exp(bowl_2095, table_127)
Fail to find bowl_2095 around table_127. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2096)exp(bowl_2095, bowl_2096)walk_executor(bowl_2095)obs(bowl_2095, Check if this is a bowl or plate that needs washing)walk_executor(bowl_2096)obs(bowl_2096, Check if this is a bowl or plate that needs washing)walk_executor(bowl_2097)obs(bowl_2097, Check if this is a bowl or plate that needs washing)walk_executor(plate_2105)obs(plate_2105, Check if this is a bowl or plate that needs washing)
##############################
From agent.py
walk_executor(bowl_2096)
Robot find: Robot is close to the table_127. Robot is close to the bowl_2096. 
##############################
From agent.py
exp(bowl_2095, bowl_2096)
Fail to find bowl_2095 around bowl_2096. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(bowl_2095, table_123)walk_executor(bowl_2095)obs(bowl_2095, Check if this is a bowl or plate that needs washing)walk_executor(bowl_2096)obs(bowl_2096, Check if this is a bowl or plate that needs washing)walk_executor(bowl_2097)obs(bowl_2097, Check if this is a bowl or plate that needs washing)walk_executor(plate_2105)obs(plate_2105, Check if this is a bowl or plate that needs washing)
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, laptop_2015, fork_2103, cup_2087, bowl_2095, Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
exp(bowl_2095, table_123)
Find bowl_2095. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2095)obs(bowl_2095, Check if this is a bowl or plate that needs washing)walk_executor(bowl_2096)obs(bowl_2096, Check if this is a bowl or plate that needs washing)walk_executor(bowl_2097)obs(bowl_2097, Check if this is a bowl or plate that needs washing)walk_executor(plate_2105)obs(plate_2105, Check if this is a bowl or plate that needs washing)
##############################
From agent.py
walk_executor(bowl_2095)
Robot find: Robot is close to the table_123. Robot is close to the bowl_2095. 
##############################
From agent.py
obs(bowl_2095, Check if this is a bowl or plate that needs washing)
Get this information:  bowl_2095 is inside dining_room_1. bowl_2095 is close to table_123. bowl_2095 is close to character_219. bowl_2095 is on table_123. bowl_2095 is DIRTY.
##############################
From agent.py
walk_executor(bowl_2096)
Robot find: Robot is close to the bowl_2096. Robot is close to the table_127. 
##############################
From agent.py
obs(bowl_2096, Check if this is a bowl or plate that needs washing)
Get this information:  bowl_2096 is on table_127. bowl_2096 is close to table_127. bowl_2096 is close to character_219. bowl_2096 is inside dining_room_1. bowl_2096 is DIRTY.
##############################
From agent.py
walk_executor(bowl_2097)
Robot find: Robot is close to the table_127. Robot is close to the bowl_2097. 
##############################
From agent.py
obs(bowl_2097, Check if this is a bowl or plate that needs washing)
Get this information:  bowl_2097 is inside dining_room_1. bowl_2097 is close to table_127. bowl_2097 is close to character_219. bowl_2097 is on table_127. bowl_2097 is DIRTY.
##############################
From agent.py
walk_executor(plate_2105)
Robot find: Robot is close to the table_127. Robot is close to the plate_2105. 
##############################
From agent.py
obs(plate_2105, Check if this is a bowl or plate that needs washing)
Get this information:  plate_2105 is inside dining_room_1. plate_2105 is on table_127. plate_2105 is close to table_127. plate_2105 is close to character_219. plate_2105 is DIRTY.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2087_around_cup_2087(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2087
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(cup,cup_instance)
        else:
            exp(cup,cup_instance)
    eff:
        unknown[cup]=False
        close[cup,cup_instance]=True
        close[cup_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher

        foreach o: item:
            if is_plate(o) or is_bowl(o):
                # Check for items that are plates or bowls
                observe(o, "Determine if the item is a bowl or plate that needs washing")
                # Verify if an item is a plate or bowl that needs washing
                if dirty(o) and inside_char(char, dining_room_1):
                    # Check if the item is dirty and in the dining room
                    if close_char(char, table_123):
                        # Verify proximity to table_123
                        achieve_once inhand(o)
                        # Temporarily pick up the item
                        load_dishwasher(o, dishwasher)
                        # Load the identified bowl or plate into the dishwasher

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: dining_room_1; available variables: [Variable<o: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind table: item where:
            is_table(table) and inside(table, dining_room) and id[table] == 123
        # Select table_123 in the dining_room

        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher

        foreach o: item:
            if is_plate(o) or is_bowl(o):
                # Check for items that are plates or bowls
                observe(o, "Determine if the item is a bowl or plate that needs washing")
                # Verify if an item is a plate or bowl that needs washing
                if dirty(o) and inside_char(char, dining_room):
                    # Check if the item is dirty and in the dining room
                    if close_char(char, table):
                        # Verify proximity to table_123
                        achieve_once inhand(o)
                        # Temporarily pick up the item
                        load_dishwasher(o, dishwasher)
                        # Load the identified bowl or plate into the dishwasher
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind table: item where:
            is_table(table) and inside(table, dining_room) and id[table] == 123
        # Select table_123 in the dining_room

        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher

        foreach o: item:
            if is_plate(o) or is_bowl(o):
                # Check for items that are plates or bowls
                observe(o, "Determine if the item is a bowl or plate that needs washing")
                # Verify if an item is a plate or bowl that needs washing
                if dirty(o) and inside_char(char, dining_room):
                    # Check if the item is dirty and in the dining room
                    if close_char(char, table):
                        # Verify proximity to table_123
                        achieve_once inhand(o)
                        # Temporarily pick up the item
                        load_dishwasher(o, dishwasher)
                        # Load the identified bowl or plate into the dishwasher
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2095)obs(bowl_2095, Determine if the item is a bowl or plate that needs washing)walk_executor(bowl_2096)obs(bowl_2096, Determine if the item is a bowl or plate that needs washing)walk_executor(bowl_2097)obs(bowl_2097, Determine if the item is a bowl or plate that needs washing)walk_executor(plate_2105)obs(plate_2105, Determine if the item is a bowl or plate that needs washing)
##############################
From agent.py
walk_executor(bowl_2095)
Robot find: Robot is close to the table_123. Robot is close to the bowl_2095. 
##############################
From agent.py
obs(bowl_2095, Determine if the item is a bowl or plate that needs washing)
Get this information:  bowl_2095 is inside dining_room_1. bowl_2095 is close to table_123. bowl_2095 is close to character_219. bowl_2095 is on table_123. bowl_2095 is DIRTY.
##############################
From agent.py
walk_executor(bowl_2096)
Robot find: Robot is close to the bowl_2096. Robot is close to the table_127. 
##############################
From agent.py
obs(bowl_2096, Determine if the item is a bowl or plate that needs washing)
Get this information:  bowl_2096 is on table_127. bowl_2096 is close to table_127. bowl_2096 is close to character_219. bowl_2096 is inside dining_room_1. bowl_2096 is DIRTY.
##############################
From agent.py
walk_executor(bowl_2097)
Robot find: Robot is close to the table_127. Robot is close to the bowl_2097. 
##############################
From agent.py
obs(bowl_2097, Determine if the item is a bowl or plate that needs washing)
Get this information:  bowl_2097 is inside dining_room_1. bowl_2097 is close to table_127. bowl_2097 is close to character_219. bowl_2097 is on table_127. bowl_2097 is DIRTY.
##############################
From agent.py
walk_executor(plate_2105)
Robot find: Robot is close to the table_127. Robot is close to the plate_2105. 
##############################
From agent.py
obs(plate_2105, Determine if the item is a bowl or plate that needs washing)
Get this information:  plate_2105 is inside dining_room_1. plate_2105 is on table_127. plate_2105 is close to table_127. plate_2105 is close to character_219. plate_2105 is DIRTY.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to pick up the identified dirty bowls and plates (bowl_2095, bowl_2096, bowl_2097, and plate_2105) and load them into the open dishwasher.
##############################
From agent.py
Human Instruction: The robot needs to pick up the identified dirty bowls and plates (bowl_2095, bowl_2096, bowl_2097, and plate_2105) and load them into the open dishwasher.

The actions you have taken:
Action 1: Walk to sink_133.
Action 2: look for bowl_2095 around sink_133.
Action 3: Walk to cupboard_131.
Action 4: Open cupboard_131.
Action 5: look for bowl_2095 around cupboard_131.
Action 6: Walk to cupboard_130.
Action 7: look for bowl_2095 around cupboard_130.
Action 8: Walk to kitchen_counter_129.
Action 9: look for bowl_2095 around kitchen_counter_129.
Action 10: Walk to dishwasher_143.
Action 11: Open dishwasher_143.
Action 12: look for bowl_2095 around dishwasher_143.
Action 13: Walk to table_127.
Action 14: look for bowl_2095 around table_127.
Action 15: Walk to bowl_2096.
Action 16: look for bowl_2095 around bowl_2096.
Action 17: Walk to table_123.
Action 18: look for bowl_2095 around table_123.
Action 19: Walk to bowl_2095.
Action 20: Observe around bowl_2095 with the question of Check if this is a bowl or plate that needs washing.
Action 21: Walk to bowl_2096.
Action 22: Observe around bowl_2096 with the question of Check if this is a bowl or plate that needs washing.
Action 23: Walk to bowl_2097.
Action 24: Observe around bowl_2097 with the question of Check if this is a bowl or plate that needs washing.
Action 25: Walk to plate_2105.
Action 26: Observe around plate_2105 with the question of Check if this is a bowl or plate that needs washing.
Action 27: Walk to bowl_2095.
Action 28: Observe around bowl_2095 with the question of Determine if the item is a bowl or plate that needs washing.
Action 29: Walk to bowl_2096.
Action 30: Observe around bowl_2096 with the question of Determine if the item is a bowl or plate that needs washing.
Action 31: Walk to bowl_2097.
Action 32: Observe around bowl_2097 with the question of Determine if the item is a bowl or plate that needs washing.
Action 33: Walk to plate_2105.
Action 34: Observe around plate_2105 with the question of Determine if the item is a bowl or plate that needs washing.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(obj:item, dishwasher:item):
    body:
        achieve_once inside(obj, dishwasher)
        # Place the bowl or plate into the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select the dishwasher
        
        bind bowl_1: item where:
            is_bowl(bowl_1) and id[bowl_1] == 2095
        # Select bowl_2095

        bind bowl_2: item where:
            is_bowl(bowl_2) and id[bowl_2] == 2096
        # Select bowl_2096

        bind bowl_3: item where:
            is_bowl(bowl_3) and id[bowl_3] == 2097
        # Select bowl_2097

        bind plate: item where:
            is_plate(plate) and id[plate] == 2105
        # Select plate_2105

        load_dishwasher(bowl_1, dishwasher)
        load_dishwasher(bowl_2, dishwasher)
        load_dishwasher(bowl_3, dishwasher)
        load_dishwasher(plate, dishwasher)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_dishwasher(obj:item, dishwasher:item):
    body:
        achieve_once inside(obj, dishwasher)
        # Place the bowl or plate into the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select the dishwasher
        
        bind bowl_1: item where:
            is_bowl(bowl_1) and id[bowl_1] == 2095
        # Select bowl_2095

        bind bowl_2: item where:
            is_bowl(bowl_2) and id[bowl_2] == 2096
        # Select bowl_2096

        bind bowl_3: item where:
            is_bowl(bowl_3) and id[bowl_3] == 2097
        # Select bowl_2097

        bind plate: item where:
            is_plate(plate) and id[plate] == 2105
        # Select plate_2105

        load_dishwasher(bowl_1, dishwasher)
        load_dishwasher(bowl_2, dishwasher)
        load_dishwasher(bowl_3, dishwasher)
        load_dishwasher(plate, dishwasher)

##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2095)grab_executor(bowl_2095)walk_executor(dishwasher_143)putin_executor(bowl_2095, dishwasher_143)walk_executor(bowl_2096)grab_executor(bowl_2096)walk_executor(dishwasher_143)putin_executor(bowl_2096, dishwasher_143)walk_executor(bowl_2097)grab_executor(bowl_2097)walk_executor(dishwasher_143)putin_executor(bowl_2097, dishwasher_143)walk_executor(plate_2105)grab_executor(plate_2105)walk_executor(dishwasher_143)putin_executor(plate_2105, dishwasher_143)
##############################
From agent.py
walk_executor(bowl_2095)
Robot find: Robot is close to the table_123. Robot is close to the bowl_2095. 
##############################
From agent.py
grab_executor(bowl_2095)
Robot find: Robot is close to the table_123. Robot is close to the bowl_2095. Grabbing bowl_2095 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the bowl_2095. Robot is close to the knife_2036. Robot is close to the dishwasher_143. 
##############################
From agent.py
putin_executor(bowl_2095, dishwasher_143)
Robot find: Robot is close to the bowl_2095. Robot is close to the knife_2036. Robot is close to the dishwasher_143. bowl_2095 is inside dishwasher_143. bowl_2095 is close dishwasher_143. dishwasher_143 is close bowl_2095. bowl_2095 released by right hand. 
##############################
From agent.py
walk_executor(bowl_2096)
Robot find: Robot is close to the bowl_2096. Robot is close to the table_127. 
##############################
From agent.py
grab_executor(bowl_2096)
Robot find: Robot is close to the bowl_2096. Robot is close to the table_127. Grabbing bowl_2096 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the bowl_2096. Robot is close to the knife_2036. Robot is close to the bowl_2095. Robot is close to the dishwasher_143. 
##############################
From agent.py
putin_executor(bowl_2096, dishwasher_143)
Robot find: Robot is close to the bowl_2096. Robot is close to the knife_2036. Robot is close to the bowl_2095. Robot is close to the dishwasher_143. bowl_2096 is close dishwasher_143. bowl_2096 is inside dishwasher_143. dishwasher_143 is close bowl_2096. bowl_2096 released by right hand. 
##############################
From agent.py
walk_executor(bowl_2097)
Robot find: Robot is close to the bowl_2097. Robot is close to the table_127. 
##############################
From agent.py
grab_executor(bowl_2097)
Robot find: Robot is close to the bowl_2097. Robot is close to the table_127. Grabbing bowl_2097 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the bowl_2097. Robot is close to the bowl_2095. Robot is close to the bowl_2096. Robot is close to the dishwasher_143. Robot is close to the knife_2036. 
##############################
From agent.py
putin_executor(bowl_2097, dishwasher_143)
Robot find: Robot is close to the bowl_2097. Robot is close to the bowl_2095. Robot is close to the bowl_2096. Robot is close to the dishwasher_143. Robot is close to the knife_2036. bowl_2097 is inside dishwasher_143. bowl_2097 is close dishwasher_143. dishwasher_143 is close bowl_2097. bowl_2097 released by right hand. 
##############################
From agent.py
walk_executor(plate_2105)
Robot find: Robot is close to the plate_2105. Robot is close to the table_127. 
##############################
From agent.py
grab_executor(plate_2105)
Robot find: Robot is close to the plate_2105. Robot is close to the table_127. Grabbing plate_2105 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the plate_2105. Robot is close to the bowl_2095. Robot is close to the bowl_2096. Robot is close to the bowl_2097. Robot is close to the dishwasher_143. Robot is close to the knife_2036. 
##############################
From agent.py
putin_executor(plate_2105, dishwasher_143)
Robot find: Robot is close to the plate_2105. Robot is close to the bowl_2095. Robot is close to the bowl_2096. Robot is close to the bowl_2097. Robot is close to the dishwasher_143. Robot is close to the knife_2036. plate_2105 is inside dishwasher_143. plate_2105 is close dishwasher_143. dishwasher_143 is close plate_2105. plate_2105 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior run_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher)
        achieve_once is_on(dishwasher)

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher) and id[dishwasher] == 143
        # Select the dishwasher with ID 143

        run_dishwasher(dishwasher)
        # Run the dishwasher to wash the bowls and plates

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior run_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher)
        achieve_once is_on(dishwasher)

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher) and id[dishwasher] == 143
        # Select the dishwasher with ID 143

        run_dishwasher(dishwasher)
        # Run the dishwasher to wash the bowls and plates

##############################
From agent.py-> find a plan in act()
close_executor(dishwasher_143)switchon_executor(dishwasher_143)
##############################
From agent.py
close_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. dishwasher_143 is closed. 
##############################
From agent.py
switchon_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. dishwasher_143 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
wash all the bowls and the plates with dishwasher
Action History:
['walk_executor(sink_133)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(cupboard_130)', 'walk_executor(kitchen_counter_129)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'walk_executor(table_127)', 'walk_executor(bowl_2096)', 'walk_executor(table_123)', 'walk_executor(bowl_2095)', 'walk_executor(bowl_2096)', 'walk_executor(bowl_2097)', 'walk_executor(plate_2105)', 'walk_executor(bowl_2095)', 'walk_executor(bowl_2096)', 'walk_executor(bowl_2097)', 'walk_executor(plate_2105)', 'walk_executor(bowl_2095)', 'grab_executor(bowl_2095)', 'walk_executor(dishwasher_143)', 'putin_executor(bowl_2095, dishwasher_143)', 'walk_executor(bowl_2096)', 'grab_executor(bowl_2096)', 'walk_executor(dishwasher_143)', 'putin_executor(bowl_2096, dishwasher_143)', 'walk_executor(bowl_2097)', 'grab_executor(bowl_2097)', 'walk_executor(dishwasher_143)', 'putin_executor(bowl_2097, dishwasher_143)', 'walk_executor(plate_2105)', 'grab_executor(plate_2105)', 'walk_executor(dishwasher_143)', 'putin_executor(plate_2105, dishwasher_143)', 'close_executor(dishwasher_143)', 'switchon_executor(dishwasher_143)']
Time info:
Time consume: 220 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 48
goal generate times: 4
goal correct times: 1
action_num: 36

Task complete rate:
1
Scene_id: 2
##############################
