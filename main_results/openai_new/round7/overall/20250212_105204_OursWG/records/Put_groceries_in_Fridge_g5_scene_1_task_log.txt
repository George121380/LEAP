From agent.py
Reset goals: The sub-goals are: 
['1. Find the dining room and put the milk and egg on one of the tables.', '2. Throw all items from the fridge into the trashcan.', '3. Put the milk and egg back into the fridge.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2115_around_fridge_126(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_food_egg_2092_around_fridge_126(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
 
def table_in_dining_room(table:item):
    # Function to determine if a table is inside the dining room
    symbol in_dining_room=exists room: item : (is_dining_room(room) and inside(table, room))
    return in_dining_room

behavior place_items_on_table(table:item, milk:item, egg:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind table: item where:
            is_table(table) and table_in_dining_room(table)
        # Select a table in the dining room

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind egg: item where:
            is_food_egg(egg)
        # Select egg

        place_items_on_table(table, milk, egg)
        # Place the milk and egg on the table
 
#goal_representation_end

##############################
From agent.py->reset_goal
 
def table_in_dining_room(table:item):
    # Function to determine if a table is inside the dining room
    symbol in_dining_room=exists room: item : (is_dining_room(room) and inside(table, room))
    return in_dining_room

behavior place_items_on_table(table:item, milk:item, egg:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind table: item where:
            is_table(table) and table_in_dining_room(table)
        # Select a table in the dining room

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind egg: item where:
            is_food_egg(egg)
        # Select egg

        place_items_on_table(table, milk, egg)
        # Place the milk and egg on the table
 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(table_114)put_executor(milk_2115, table_114)walk_executor(fridge_126)exp(food_egg_2092, fridge_126)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(food_egg_2092, table_114)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(milk_2115, fridge_126)
Fail to find milk_2115 around fridge_126. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(milk_2115, kitchen_counter_122)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(table_114)put_executor(milk_2115, table_114)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(food_egg_2092, table_114)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, pot_78, fryingpan_2154, Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(milk_2115, kitchen_counter_122)
Fail to find milk_2115 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(milk_2115, kitchen_counter_119)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(table_114)put_executor(milk_2115, table_114)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(food_egg_2092, table_114)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(milk_2115, kitchen_counter_119)
Fail to find milk_2115 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(milk_2115, cupboard_118)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(table_114)put_executor(milk_2115, table_114)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(food_egg_2092, table_114)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(milk_2115, cupboard_118)
Fail to find milk_2115 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(walllamp_141)exp(milk_2115, walllamp_141)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(table_114)put_executor(milk_2115, table_114)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(food_egg_2092, table_114)
##############################
From agent.py
walk_executor(walllamp_141)
Robot find: Robot is close to the walllamp_141. 
##############################
From agent.py
exp(milk_2115, walllamp_141)
Fail to find milk_2115 around walllamp_141. 
##############################
From agent.py-> find a plan in act()
walk_executor(trashcan_99)exp(milk_2115, trashcan_99)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(table_114)put_executor(milk_2115, table_114)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(food_egg_2092, table_114)
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: food_orange_2061, food_onion_2009, glue_2045, vacuum_cleaner_2139, Robot is close to the trashcan_99. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find milk_2115 ?
Answer: The target item, milk_2115, can be found on table_114, which is located inside dining_room_41. To help identify milk_2115, look for it on top of table_114, as they are in close proximity to each other.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item, milk_2115, can be found on table_114, which is located inside dining_room_41. To help identify milk_2115, look for it on top of table_114, as they are in close proximity to each other.

The actions you have taken:
Action 1: Walk to fridge_126.
Action 2: Switch off fridge_126.
Action 3: Open fridge_126.
Action 4: look for milk_2115 around fridge_126.
Action 5: Walk to kitchen_counter_122.
Action 6: look for milk_2115 around kitchen_counter_122.
Action 7: Walk to kitchen_counter_119.
Action 8: look for milk_2115 around kitchen_counter_119.
Action 9: Walk to cupboard_118.
Action 10: Open cupboard_118.
Action 11: look for milk_2115 around cupboard_118.
Action 12: Walk to walllamp_141.
Action 13: look for milk_2115 around walllamp_141.
Action 14: Walk to trashcan_99.

##############################
From agent.py
exp(milk_2115, trashcan_99)
Fail to find milk_2115 around trashcan_99. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(milk_2115, table_114)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(table_114)put_executor(milk_2115, table_114)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(food_egg_2092, table_114)
##############################
From agent.py
walk_executor(table_114)
Robot find: mat_102, cup_2049, pillow_103, pillow_104, pillow_105, pillow_106, lighter_2004, lighter_2039, box_2038, clothes_hat_2117, milk_2115, cup_2134, check_2058, drawing_110, drawing_111, clothes_gloves_2118, cup_2132, food_bread_2084, dry_pasta_2114, knife_2122, cup_2133, table_cloth_2005, food_food_2021, Robot is close to the table_114. Robot is close to the mat_102. 
##############################
From agent.py
exp(milk_2115, table_114)
Find milk_2115. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(food_egg_2092, table_114)
##############################
From agent.py
walk_executor(food_egg_2092)
Robot find: Robot is close to the food_egg_2092. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_egg_2092)
Robot find: Robot is close to the food_egg_2092. Robot is close to the fridge_126. Grabbing food_egg_2092 by right hand. 
##############################
From agent.py
walk_executor(table_114)
Robot find: Robot is close to the food_egg_2092. Robot is close to the table_114. Robot is close to the mat_102. 
##############################
From agent.py
put_executor(food_egg_2092, table_114)
Robot find: Robot is close to the food_egg_2092. Robot is close to the table_114. Robot is close to the mat_102. table_114 is close food_egg_2092. food_egg_2092 is close table_114. food_egg_2092 is on table_114. food_egg_2092 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to put the milk on the table in the dining room as well.
##############################
From agent.py
Human Instruction: You need to put the milk on the table in the dining room as well.

The actions you have taken:
Action 1: Walk to fridge_126.
Action 2: Switch off fridge_126.
Action 3: Open fridge_126.
Action 4: look for milk_2115 around fridge_126.
Action 5: Walk to kitchen_counter_122.
Action 6: look for milk_2115 around kitchen_counter_122.
Action 7: Walk to kitchen_counter_119.
Action 8: look for milk_2115 around kitchen_counter_119.
Action 9: Walk to cupboard_118.
Action 10: Open cupboard_118.
Action 11: look for milk_2115 around cupboard_118.
Action 12: Walk to walllamp_141.
Action 13: look for milk_2115 around walllamp_141.
Action 14: Walk to trashcan_99.
Action 15: look for milk_2115 around trashcan_99.
Action 16: Walk to table_114.
Action 17: look for milk_2115 around table_114.
Action 18: Walk to food_egg_2092.
Action 19: Grab food_egg_2092.
Action 20: Walk to table_114.
Action 21: Put food_egg_2092 on table_114.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_shoe_rack_2044_around_washing_machine_2079(shoe_rack:item):
    goal: not unknown(shoe_rack)
    body:
        assert is_shoe_rack(shoe_rack)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(shoe_rack,washing_machine_instance)
        else:
            exp(shoe_rack,washing_machine_instance)
    eff:
        unknown[shoe_rack]=False
        close[shoe_rack,washing_machine_instance]=True
        close[washing_machine_instance,shoe_rack]=True
    

behavior find_food_cheese_2088_around_cupboard_117(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cheese,cupboard_instance)
        else:
            exp(food_cheese,cupboard_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,cupboard_instance]=True
        close[cupboard_instance,food_cheese]=True
    

behavior find_food_orange_2027_around_cupboard_117(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_orange,cupboard_instance)
        else:
            exp(food_orange,cupboard_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,cupboard_instance]=True
        close[cupboard_instance,food_orange]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_dining_table(dining_table:item):
    body:
        achieve close_char(char, dining_table)

behavior place_items_on_table(milk:item, egg:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        
        # Find a table in the dining room
        if exists dining_table: item : (is_table(dining_table) and inside(dining_table, dining_room) and not visited(dining_table)):
            bind dining_table: item where:
                is_table(dining_table) and inside(dining_table, dining_room) and not visited(dining_table)
            find_dining_table(dining_table)
        else:
            foreach dining_table: item:
                if is_table(dining_table) and inside(dining_table, dining_room) and not visited(dining_table):
                    observe(dining_table, "Check available space on the table")
        
        # Assuming the milk and egg have been located
        bind milk: item where:
            is_milk(milk)
        
        bind egg: item where:
            is_food_egg(egg)
        
        place_items_on_table(milk, egg, dining_table)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: dining_table; available variables: [].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_cheese_2072_around_cupboard_117(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cheese,cupboard_instance)
        else:
            exp(food_cheese,cupboard_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,cupboard_instance]=True
        close[cupboard_instance,food_cheese]=True
    

behavior find_food_carrot_2015_around_cupboard_117(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_carrot,cupboard_instance)
        else:
            exp(food_carrot,cupboard_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,cupboard_instance]=True
        close[cupboard_instance,food_carrot]=True
    

behavior find_food_food_1000_around_food_food_1000(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==1000
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

#goal_representation

behavior find_dining_table(dining_table:item):
    body:
        achieve close_char(char, dining_table)

behavior place_items_on_table(milk:item, egg:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        
        # Find a table in the dining room
        if exists dining_table: item : (is_table(dining_table) and inside(dining_table, dining_room) and not visited(dining_table)):
            bind dining_table: item where:
                is_table(dining_table) and inside(dining_table, dining_room) and not visited(dining_table)
            find_dining_table(dining_table)
        else:
            foreach dining_table: item:
                if is_table(dining_table) and inside(dining_table, dining_room) and not visited(dining_table):
                    observe(dining_table, "Check available space on the table")
        
        # Assuming the milk and egg have been located
        bind milk: item where:
            is_milk(milk)
        
        bind egg: item where:
            is_food_egg(egg)
        
        place_items_on_table(milk, egg, dining_table)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: dining_table; available variables: [].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_cheese_2088_around_cupboard_117(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cheese,cupboard_instance)
        else:
            exp(food_cheese,cupboard_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,cupboard_instance]=True
        close[cupboard_instance,food_cheese]=True
    

behavior find_food_carrot_2086_around_cupboard_117(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_carrot,cupboard_instance)
        else:
            exp(food_carrot,cupboard_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,cupboard_instance]=True
        close[cupboard_instance,food_carrot]=True
    

behavior find_food_butter_2007_around_cupboard_117(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_butter,cupboard_instance)
        else:
            exp(food_butter,cupboard_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,cupboard_instance]=True
        close[cupboard_instance,food_butter]=True
    

#goal_representation
behavior find_dining_table(dining_table:item):
    body:
        achieve close_char(char, dining_table)

behavior place_items_on_table(milk:item, egg:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        
        if exists dining_table: item : (is_table(dining_table) and inside(dining_table, dining_room) and not visited(dining_table)):
            bind dining_table: item where:
                is_table(dining_table) and inside(dining_table, dining_room) and not visited(dining_table)
            find_dining_table(dining_table)
        else:
            foreach dining_table: item:
                if is_table(dining_table) and inside(dining_table, dining_room) and not visited(dining_table):
                    observe(dining_table, "Check available space on the table")
        
        bind milk: item where:
            is_milk(milk)
        
        bind egg: item where:
            is_food_egg(egg)
        
        place_items_on_table(milk, egg, dining_table)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_cheese_2072_around_cupboard_117(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cheese,cupboard_instance)
        else:
            exp(food_cheese,cupboard_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,cupboard_instance]=True
        close[cupboard_instance,food_cheese]=True
    

behavior find_food_butter_2007_around_cupboard_117(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_butter,cupboard_instance)
        else:
            exp(food_butter,cupboard_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,cupboard_instance]=True
        close[cupboard_instance,food_butter]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_on_table(item:item, table:item):
    body:
        achieve_once on(item, table)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind table: item where:
            is_table(table) and inside(table, dining_room)
        # Select a table inside the dining room

        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg

        place_on_table(milk, table)
        # Place the milk on the table in the dining room

        place_on_table(egg, table)
        # Place the egg on the table in the dining room

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_cheese_2072_around_cupboard_117(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cheese,cupboard_instance)
        else:
            exp(food_cheese,cupboard_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,cupboard_instance]=True
        close[cupboard_instance,food_cheese]=True
    

behavior find_food_orange_2103_around_cupboard_117(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_orange,cupboard_instance)
        else:
            exp(food_orange,cupboard_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,cupboard_instance]=True
        close[cupboard_instance,food_orange]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_milk_and_egg(milk:item, egg:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select a milk

        bind egg: item where:
            is_food_egg(egg)
        # Select an egg

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind table: item where:
            is_table(table) and inside(table, dining_room)
        # Select a table inside the dining room

        place_milk_and_egg(milk, egg, table)
        # Place the milk and egg on a table in the dining room

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "1. find the dining room and put the milk and egg on one of the tables." ?
Answer: Bring the milk and egg to the dining room and place them on one of the tables.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_cheese_2088_around_cupboard_117(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cheese,cupboard_instance)
        else:
            exp(food_cheese,cupboard_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,cupboard_instance]=True
        close[cupboard_instance,food_cheese]=True
    

behavior find_food_orange_2061_around_dishwasher_129(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==129
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(food_orange,dishwasher_instance)
        else:
            exp(food_orange,dishwasher_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,dishwasher_instance]=True
        close[dishwasher_instance,food_orange]=True
    

behavior find_food_carrot_2086_around_cupboard_117(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_carrot,cupboard_instance)
        else:
            exp(food_carrot,cupboard_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,cupboard_instance]=True
        close[cupboard_instance,food_carrot]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_milk_and_egg_on_table(milk:item, egg:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind table: item where:
            is_table(table) and inside(table, dining_room)
        # Select a table inside the dining room

        place_milk_and_egg_on_table(milk, egg, table)
        # Place the milk and egg on the table in the dining room

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_cheese_2072_around_cupboard_117(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cheese,cupboard_instance)
        else:
            exp(food_cheese,cupboard_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,cupboard_instance]=True
        close[cupboard_instance,food_cheese]=True
    

behavior find_food_orange_2027_around_cupboard_117(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_orange,cupboard_instance)
        else:
            exp(food_orange,cupboard_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,cupboard_instance]=True
        close[cupboard_instance,food_orange]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_milk_and_egg_on_table(milk:item, egg:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind table: item where:
            is_table(table) and inside(table, dining_room)
        # Select a table inside the dining room

        place_milk_and_egg_on_table(milk, egg, table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_cheese_2088_around_cupboard_117(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cheese,cupboard_instance)
        else:
            exp(food_cheese,cupboard_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,cupboard_instance]=True
        close[cupboard_instance,food_cheese]=True
    

behavior find_food_orange_2103_around_cupboard_117(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_orange,cupboard_instance)
        else:
            exp(food_orange,cupboard_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,cupboard_instance]=True
        close[cupboard_instance,food_orange]=True
    

behavior find_food_carrot_2015_around_cupboard_117(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_carrot,cupboard_instance)
        else:
            exp(food_carrot,cupboard_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,cupboard_instance]=True
        close[cupboard_instance,food_carrot]=True
    

behavior find_food_butter_2007_around_cupboard_117(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_butter,cupboard_instance)
        else:
            exp(food_butter,cupboard_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,cupboard_instance]=True
        close[cupboard_instance,food_butter]=True
    

#exp_behavior_end

#goal_representation
 
def is_in_dining_room(table: item):
    # Function to determine if a table is inside the dining room
    symbol in_dining_room = exists room: item : (is_dining_room(room) and inside(table, room))
    return in_dining_room

behavior place_items_on_table(table: item, milk: item, egg: item):
    body:
        achieve_once on(milk, table) # Place the milk on the table
        achieve_once on(egg, table) # Place the egg on the table

behavior __goal__():
    body:
        bind table: item where:
            is_table(table) and is_in_dining_room(table)
        # Select a table in the dining room

        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg

        place_items_on_table(table, milk, egg)
        # Place milk and egg on the selected table in the dining room

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Bring the milk and egg to the dining room and place them on one of the tables.', '2. Throw all the items in the fridge into the trashcan.', '3. Put the milk and eggs back in the fridge.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_cheese_2072_around_cupboard_117(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cheese,cupboard_instance)
        else:
            exp(food_cheese,cupboard_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,cupboard_instance]=True
        close[cupboard_instance,food_cheese]=True
    

#exp_behavior_end

#goal_representation
 
def has_milk_and_egg(fridge:item):
    # Function to check if milk and egg are present in the fridge
    symbol has_items=exists o: item : ((is_milk(o) or is_food_egg(o)) and inside(o, fridge))
    return has_items

behavior bring_items_to_table(milk:item, egg:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior __goal__():
    body:
        if exists fridge: item : (is_fridge(fridge) and has_milk_and_egg(fridge)):
            # If the fridge contains milk and egg, bring them to the table
            bind fridge: item where:
                is_fridge(fridge) and has_milk_and_egg(fridge)

            bind milk: item where:
                is_milk(milk) and inside(milk, fridge)

            bind egg: item where:
                is_food_egg(egg) and inside(egg, fridge)

            bind dining_room: item where:
                is_dining_room(dining_room)

            bind table: item where:
                is_table(table) and inside(table, dining_room)
            
            bring_items_to_table(milk, egg, table)
        else:
            # If milk and egg are not confirmed in the fridge, explore to find them
            foreach fridge: item:
                if is_fridge(fridge) and not visited(fridge):
                    observe(fridge, "Look for milk and egg inside the fridge")


#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_milk_and_egg(fridge:item):
    # Function to check if milk and egg are present in the fridge
    symbol has_items=exists o: item : ((is_milk(o) or is_food_egg(o)) and inside(o, fridge))
    return has_items

behavior bring_items_to_table(milk:item, egg:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior __goal__():
    body:
        if exists fridge: item : (is_fridge(fridge) and has_milk_and_egg(fridge)):
            # If the fridge contains milk and egg, bring them to the table
            bind fridge: item where:
                is_fridge(fridge) and has_milk_and_egg(fridge)

            bind milk: item where:
                is_milk(milk) and inside(milk, fridge)

            bind egg: item where:
                is_food_egg(egg) and inside(egg, fridge)

            bind dining_room: item where:
                is_dining_room(dining_room)

            bind table: item where:
                is_table(table) and inside(table, dining_room)
            
            bring_items_to_table(milk, egg, table)
        else:
            # If milk and egg are not confirmed in the fridge, explore to find them
            foreach fridge: item:
                if is_fridge(fridge) and not visited(fridge):
                    observe(fridge, "Look for milk and egg inside the fridge")


##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)obs(fridge_126, Look for milk and egg inside the fridge)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. 
##############################
From agent.py
obs(fridge_126, Look for milk and egg inside the fridge)
Get this information:  sauce_2148 is inside fridge_126. food_snack_2110 is inside fridge_126. fridge_126 is on floor_44. food_steak_2080 is inside fridge_126. food_donut_2091 is inside fridge_126. food_oatmeal_2102 is inside fridge_126. food_banana_2083 is inside fridge_126. food_food_2094 is inside fridge_126. food_vegetable_2113 is inside fridge_126. food_carrot_2086 is inside fridge_126. food_onion_2048 is inside fridge_126. food_peanut_butter_2105 is inside fridge_126. fridge_126 is inside dining_room_41. food_chicken_2089 is inside fridge_126. food_ice_cream_2097 is inside fridge_126. food_rice_2108 is inside fridge_126. food_apple_2081 is inside fridge_126. food_lemon_2100 is inside fridge_126. food_sugar_2111 is inside fridge_126. food_food_2073 is inside fridge_126. food_orange_2103 is inside fridge_126. food_food_2046 is inside fridge_126. food_fruit_2095 is inside fridge_126. food_pizza_2106 is inside fridge_126. food_cereal_2087 is inside fridge_126. food_jam_2098 is inside fridge_126. food_dessert_2090 is inside fridge_126. food_salt_2109 is inside fridge_126. food_bacon_2082 is inside fridge_126. food_fish_2093 is inside fridge_126. food_noodles_2101 is inside fridge_126. food_turkey_2112 is inside fridge_126. fridge_126 is close to food_onion_2048. fridge_126 is close to wall_179. fridge_126 is close to ceilinglamp_137. fridge_126 is close to ceiling_53. fridge_126 is close to ceiling_54. fridge_126 is close to food_food_2073. fridge_126 is close to basket_for_clothes_2078. fridge_126 is close to washing_machine_2079. fridge_126 is close to food_steak_2080. fridge_126 is close to food_apple_2081. fridge_126 is close to food_bacon_2082. fridge_126 is close to food_banana_2083. fridge_126 is close to floor_163. fridge_126 is close to food_cake_2085. fridge_126 is close to food_carrot_2086. fridge_126 is close to food_cereal_2087. fridge_126 is close to food_cheese_2088. fridge_126 is close to food_chicken_2089. fridge_126 is close to food_dessert_2090. fridge_126 is close to food_donut_2091. fridge_126 is close to food_egg_2092. fridge_126 is close to food_fish_2093. fridge_126 is close to food_food_2094. fridge_126 is close to food_fruit_2095. fridge_126 is close to food_hamburger_2096. fridge_126 is close to food_ice_cream_2097. fridge_126 is close to food_jam_2098. fridge_126 is close to food_lemon_2100. fridge_126 is close to food_noodles_2101. fridge_126 is close to food_oatmeal_2102. fridge_126 is close to food_orange_2103. fridge_126 is close to food_onion_2104. fridge_126 is close to food_peanut_butter_2105. fridge_126 is close to food_pizza_2106. fridge_126 is close to food_potato_2107. fridge_126 is close to food_rice_2108. fridge_126 is close to food_salt_2109. fridge_126 is close to food_snack_2110. fridge_126 is close to food_sugar_2111. fridge_126 is close to food_turkey_2112. fridge_126 is close to food_vegetable_2113. fridge_126 is close to floor_164. fridge_126 is close to door_61. fridge_126 is close to doorjamb_190. fridge_126 is close to desk_193. fridge_126 is close to wall_66. fridge_126 is close to wall_67. fridge_126 is close to powersocket_72. fridge_126 is close to light_73. fridge_126 is close to computer_209. fridge_126 is close to cpuscreen_210. fridge_126 is close to floor_169. fridge_126 is close to keyboard_211. fridge_126 is close to light_212. fridge_126 is close to mouse_213. fridge_126 is close to mousepad_214. fridge_126 is close to food_food_2001. fridge_126 is close to floor_44. fridge_126 is close to floor_45. fridge_126 is close to sauce_2148. fridge_126 is close to food_food_1000. fridge_126 is close to wall_175. fridge_126 is close to food_food_2046. fridge_126 is close to character_240. food_cake_2085 is inside fridge_126. food_onion_2104 is inside fridge_126. food_hamburger_2096 is inside fridge_126. food_potato_2107 is inside fridge_126. food_food_2001 is inside fridge_126. food_cheese_2088 is inside fridge_126. fridge_126 is PLUGGED_IN. fridge_126 is OFF. fridge_126 is CLEAN. fridge_126 is OPEN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to grab the milk from table_114 and place it on the table in the dining room. Currently, only the egg has been placed on table_114, and the milk has been located but not yet moved.
##############################
From agent.py
Human Instruction: You need to grab the milk from table_114 and place it on the table in the dining room. Currently, only the egg has been placed on table_114, and the milk has been located but not yet moved.

Human Guidance: Bring the milk and egg to the dining room and place them on one of the tables.
The actions you have taken:
Action 1: Walk to fridge_126.
Action 2: Switch off fridge_126.
Action 3: Open fridge_126.
Action 4: look for milk_2115 around fridge_126.
Action 5: Walk to kitchen_counter_122.
Action 6: look for milk_2115 around kitchen_counter_122.
Action 7: Walk to kitchen_counter_119.
Action 8: look for milk_2115 around kitchen_counter_119.
Action 9: Walk to cupboard_118.
Action 10: Open cupboard_118.
Action 11: look for milk_2115 around cupboard_118.
Action 12: Walk to walllamp_141.
Action 13: look for milk_2115 around walllamp_141.
Action 14: Walk to trashcan_99.
Action 15: look for milk_2115 around trashcan_99.
Action 16: Walk to table_114.
Action 17: look for milk_2115 around table_114.
Action 18: Walk to food_egg_2092.
Action 19: Grab food_egg_2092.
Action 20: Walk to table_114.
Action 21: Put food_egg_2092 on table_114.
Action 22: Walk to fridge_126.
Action 23: Observe around fridge_126 with the question of Look for milk and egg inside the fridge.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior move_milk_and_egg_to_dining_table(milk:item, egg:item, dining_table:item):
    body:
        achieve_once on(milk, dining_table)
        achieve_once on(egg, dining_table)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind dining_table: item where:
            is_table(dining_table) and inside(dining_table, dining_room)
        # Select a table inside the dining room

        if not inside(milk, dining_room):
            # If the milk is not inside the dining room, find the milk
            if not visited(milk):
                observe(milk, "Find the milk")

        if not inside(egg, dining_room):
            # If the egg is not inside the dining room, find the egg
            if not visited(egg):
                observe(egg, "Find the egg")

        # Move milk and egg to the dining table
        move_milk_and_egg_to_dining_table(milk, egg, dining_table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior move_milk_and_egg_to_dining_table(milk:item, egg:item, dining_table:item):
    body:
        achieve_once on(milk, dining_table)
        achieve_once on(egg, dining_table)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind dining_table: item where:
            is_table(dining_table) and inside(dining_table, dining_room)
        # Select a table inside the dining room

        if not inside(milk, dining_room):
            # If the milk is not inside the dining room, find the milk
            if not visited(milk):
                observe(milk, "Find the milk")

        if not inside(egg, dining_room):
            # If the egg is not inside the dining room, find the egg
            if not visited(egg):
                observe(egg, "Find the egg")

        # Move milk and egg to the dining table
        move_milk_and_egg_to_dining_table(milk, egg, dining_table)

##############################
From agent.py-> find a plan in act()
walk_executor(milk_2115)obs(milk_2115, Find the milk)walk_executor(food_egg_2092)obs(food_egg_2092, Find the egg)
##############################
From agent.py
walk_executor(milk_2115)
Robot find: Robot is close to the table_114. Robot is close to the milk_2115. 
##############################
From agent.py
obs(milk_2115, Find the milk)
Get this information:  milk_2115 is close to table_114. milk_2115 is close to character_240. milk_2115 is on table_114. milk_2115 is inside dining_room_41.
##############################
From agent.py
walk_executor(food_egg_2092)
Robot find: Robot is close to the table_114. Robot is close to the food_egg_2092. 
##############################
From agent.py
obs(food_egg_2092, Find the egg)
Get this information:  food_egg_2092 is inside dining_room_41. food_egg_2092 is close to table_114. food_egg_2092 is close to character_240. food_egg_2092 is on table_114. food_egg_2092 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to grab the milk from table_114 and place it on a table in the dining room. Only the egg has been placed on the table_114, but the milk has not yet been moved.
##############################
From agent.py
Human Instruction: You need to grab the milk from table_114 and place it on a table in the dining room. Only the egg has been placed on the table_114, but the milk has not yet been moved.

Human Guidance: Bring the milk and egg to the dining room and place them on one of the tables.
The actions you have taken:
Action 1: Walk to fridge_126.
Action 2: Switch off fridge_126.
Action 3: Open fridge_126.
Action 4: look for milk_2115 around fridge_126.
Action 5: Walk to kitchen_counter_122.
Action 6: look for milk_2115 around kitchen_counter_122.
Action 7: Walk to kitchen_counter_119.
Action 8: look for milk_2115 around kitchen_counter_119.
Action 9: Walk to cupboard_118.
Action 10: Open cupboard_118.
Action 11: look for milk_2115 around cupboard_118.
Action 12: Walk to walllamp_141.
Action 13: look for milk_2115 around walllamp_141.
Action 14: Walk to trashcan_99.
Action 15: look for milk_2115 around trashcan_99.
Action 16: Walk to table_114.
Action 17: look for milk_2115 around table_114.
Action 18: Walk to food_egg_2092.
Action 19: Grab food_egg_2092.
Action 20: Walk to table_114.
Action 21: Put food_egg_2092 on table_114.
Action 22: Walk to fridge_126.
Action 23: Observe around fridge_126 with the question of Look for milk and egg inside the fridge.
Action 24: Walk to milk_2115.
Action 25: Observe around milk_2115 with the question of Find the milk.
Action 26: Walk to food_egg_2092.
Action 27: Observe around food_egg_2092 with the question of Find the egg.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_cheese_2088_around_cupboard_117(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cheese,cupboard_instance)
        else:
            exp(food_cheese,cupboard_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,cupboard_instance]=True
        close[cupboard_instance,food_cheese]=True
    

behavior find_food_orange_2061_around_table_cloth_2005(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind table_cloth_instance:item where:
            is_table_cloth(table_cloth_instance) and id[table_cloth_instance]==2005
        achieve close_char(char,table_cloth_instance)
        if can_open(table_cloth_instance):
            achieve_once open(table_cloth_instance)
            exp(food_orange,table_cloth_instance)
        else:
            exp(food_orange,table_cloth_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,table_cloth_instance]=True
        close[table_cloth_instance,food_orange]=True
    

behavior find_clothes_underwear_2121_around_basket_for_clothes_2078(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_underwear,basket_for_clothes_instance)
        else:
            exp(clothes_underwear,basket_for_clothes_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_underwear]=True
    

behavior find_food_kiwi_2054_around_table_cloth_2005(food_kiwi:item):
    goal: not unknown(food_kiwi)
    body:
        assert is_food_kiwi(food_kiwi)
        bind table_cloth_instance:item where:
            is_table_cloth(table_cloth_instance) and id[table_cloth_instance]==2005
        achieve close_char(char,table_cloth_instance)
        if can_open(table_cloth_instance):
            achieve_once open(table_cloth_instance)
            exp(food_kiwi,table_cloth_instance)
        else:
            exp(food_kiwi,table_cloth_instance)
    eff:
        unknown[food_kiwi]=False
        close[food_kiwi,table_cloth_instance]=True
        close[table_cloth_instance,food_kiwi]=True
    

behavior find_food_carrot_2015_around_cupboard_117(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_carrot,cupboard_instance)
        else:
            exp(food_carrot,cupboard_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,cupboard_instance]=True
        close[cupboard_instance,food_carrot]=True
    

behavior find_food_butter_2007_around_cupboard_117(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_butter,cupboard_instance)
        else:
            exp(food_butter,cupboard_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,cupboard_instance]=True
        close[cupboard_instance,food_butter]=True
    

#exp_behavior_end

#goal_representation
 
def placed_on_table(item:item, table:item):
    # Function to check if an item is placed on a table
    symbol on_table= on(item, table)
    return on_table

behavior put_items_on_dining_table(milk:item, egg:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg

        bind table: item where:
            is_table(table)
            # Select a table

        if not placed_on_table(milk, table) or not placed_on_table(egg, table):
            # Only execute if the milk or egg is not already on the table
            put_items_on_dining_table(milk, egg, table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation

behavior place_milk_and_egg_on_dining_table(milk:item, egg:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind table: item where:
            is_table(table) and inside(table, dining_room)
        # Select a table inside the dining room

        place_milk_and_egg_on_dining_table(milk, egg, table)
        # Place the milk and egg on the table in the dining room

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_carrot_2015_around_pot_2138(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==2138
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(food_carrot,pot_instance)
        else:
            exp(food_carrot,pot_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,pot_instance]=True
        close[pot_instance,food_carrot]=True
    

behavior find_knife_2035_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior bring_to_dining_table(milk:item, egg:item, dining_table:item):
    body:
        achieve_once on(milk, dining_table) # Place the milk on the dining table
        achieve_once on(egg, dining_table) # Place the egg on the dining table

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk) and id[milk] == 2115
        # Select milk with ID 2115

        bind egg: item where:
            is_food_egg(egg) and id[egg] == 2092
        # Select egg with ID 2092

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        foreach table: item:
            if is_table(table) and inside(table, dining_room):
                # Once we find a table in the dining room, we use it
                bring_to_dining_table(milk, egg, table)
                break

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: break; available variables: [Variable<table: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_cheese_2072_around_cupboard_117(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cheese,cupboard_instance)
        else:
            exp(food_cheese,cupboard_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,cupboard_instance]=True
        close[cupboard_instance,food_cheese]=True
    

behavior find_food_butter_2007_around_cupboard_117(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_butter,cupboard_instance)
        else:
            exp(food_butter,cupboard_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,cupboard_instance]=True
        close[cupboard_instance,food_butter]=True
    

#goal_representation
 
behavior bring_to_dining_table(milk:item, egg:item, dining_table:item):
    body:
        achieve_once on(milk, dining_table) # Place the milk on the dining table
        achieve_once on(egg, dining_table) # Place the egg on the dining table

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk) and id[milk] == 2115
        # Select milk with ID 2115

        bind egg: item where:
            is_food_egg(egg) and id[egg] == 2092
        # Select egg with ID 2092

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        foreach table: item:
            if is_table(table) and inside(table, dining_room):
                # Once we find a table in the dining room, we use it
                bring_to_dining_table(milk, egg, table)
                break

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: break; available variables: [Variable<table: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_cheese_2088_around_cupboard_117(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cheese,cupboard_instance)
        else:
            exp(food_cheese,cupboard_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,cupboard_instance]=True
        close[cupboard_instance,food_cheese]=True
    

behavior find_food_butter_2007_around_cupboard_117(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_butter,cupboard_instance)
        else:
            exp(food_butter,cupboard_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,cupboard_instance]=True
        close[cupboard_instance,food_butter]=True
    

#goal_representation
behavior bring_to_dining_table(milk:item, egg:item, dining_table:item):
    body:
        achieve_once on(milk, dining_table) # Place the milk on the dining table
        achieve_once on(egg, dining_table) # Place the egg on the dining table

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk) and id[milk] == 2115
        # Select milk with ID 2115

        bind egg: item where:
            is_food_egg(egg) and id[egg] == 2092
        # Select egg with ID 2092

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        foreach table: item:
            if is_table(table) and inside(table, dining_room):
                # Once we find a table in the dining room, we use it
                bring_to_dining_table(milk, egg, table)
                break
#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "1. bring the milk and egg to the dining room and place them on one of the tables." ?
Answer: Bring the milk and egg to the dining room and place them on a table.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_cheese_2088_around_cupboard_117(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cheese,cupboard_instance)
        else:
            exp(food_cheese,cupboard_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,cupboard_instance]=True
        close[cupboard_instance,food_cheese]=True
    

behavior find_food_orange_2027_around_cupboard_117(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_orange,cupboard_instance)
        else:
            exp(food_orange,cupboard_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,cupboard_instance]=True
        close[cupboard_instance,food_orange]=True
    

#exp_behavior_end

#goal_representation
 
behavior bring_items_to_dining_room(milk:item, egg:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind table: item where:
            is_table(table) and inside(table, dining_room)
        # Select a table in the dining room

        bring_items_to_dining_room(milk, egg, table)
        # Bring the milk and egg to the table in the dining room

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_butter_2007_around_cupboard_117(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_butter,cupboard_instance)
        else:
            exp(food_butter,cupboard_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,cupboard_instance]=True
        close[cupboard_instance,food_butter]=True
    

behavior find_food_carrot_2086_around_cupboard_117(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_carrot,cupboard_instance)
        else:
            exp(food_carrot,cupboard_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,cupboard_instance]=True
        close[cupboard_instance,food_carrot]=True
    

#exp_behavior_end

#goal_representation
 
def find_table_in_dining_room(table:item):
    # Function to check if a table is in the dining room
    symbol in_dining_room=exists room: item : (is_dining_room(room) and inside(table, room))
    return in_dining_room

behavior place_items_on_table(milk:item, egg:item, table:item):
    body:
        achieve_once on(milk, table) # Place the milk on the table
        achieve_once on(egg, table) # Place the egg on the table

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind egg: item where:
            is_food_egg(egg)
        # Select an egg

        bind table: item where:
            is_table(table) and find_table_in_dining_room(table)
        # Select a table in the dining room

        place_items_on_table(milk, egg, table)
        # Place milk and egg on the selected table in the dining room

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior bring_items_to_dining_room(milk:item, egg:item, dining_room:item, table:item):
    body:
        achieve_once close_char(char, milk)
        achieve_once inhand(milk)
        achieve_once close_char(char, egg)
        achieve_once inhand(egg)
        achieve_once close_char(char, dining_room)
        achieve_once inside_char(char, dining_room)
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior __goal__():
    body:
        bind table_114: item where:
            is_table(table_114) and id[table_114] == 114
        # Select the table_114

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind table: item where:
            is_table(table) and inside(table, dining_room)
        # Select a table in the dining room

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind egg: item where:
            is_food_egg(egg)
        # Select egg

        bring_items_to_dining_room(milk, egg, dining_room, table)
        # Bring milk and egg to the dining room and place them on the table

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Bring the milk and egg to the dining room and place them on a table.', '2. Throw all the items in the fridge into the trashcan.', '3. Put the milk and egg back in the fridge.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_cheese_2088_around_cupboard_117(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cheese,cupboard_instance)
        else:
            exp(food_cheese,cupboard_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,cupboard_instance]=True
        close[cupboard_instance,food_cheese]=True
    

behavior find_food_orange_2027_around_cupboard_117(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_orange,cupboard_instance)
        else:
            exp(food_orange,cupboard_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,cupboard_instance]=True
        close[cupboard_instance,food_orange]=True
    

behavior find_food_butter_2007_around_cupboard_117(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_butter,cupboard_instance)
        else:
            exp(food_butter,cupboard_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,cupboard_instance]=True
        close[cupboard_instance,food_butter]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_items_on_table(item1:item, item2:item, table:item):
    body:
        achieve_once on(item1, table) 
        achieve_once on(item2, table) 

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select milk
        
        bind egg: item where:
            is_food_egg(egg)
        # Select egg

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select dining room
        
        bind table: item where:
            is_table(table) and inside(table, dining_room)
        # Select one of the tables inside the dining room

        place_items_on_table(milk, egg, table)
        # Place the milk and egg on the table in the dining room

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_cheese_2072_around_cupboard_117(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cheese,cupboard_instance)
        else:
            exp(food_cheese,cupboard_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,cupboard_instance]=True
        close[cupboard_instance,food_cheese]=True
    

behavior find_clothes_underwear_2121_around_basket_for_clothes_2078(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_underwear,basket_for_clothes_instance)
        else:
            exp(clothes_underwear,basket_for_clothes_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_underwear]=True
    

behavior find_knife_2122_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
def is_item_on_table_114(item:item):
    # Function to determine if a given item is on table_114
    symbol is_on_table= on(item, table_114)
    return is_on_table

behavior place_item_on_dining_table(item:item, table:item):
    body:
        achieve_once on(item, table)
        # Place the item on the dining room table

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind dining_room_table: item where:
            is_table(dining_room_table) and inside(dining_room_table, dining_room)
        # Select a table in the dining room

        bind milk: item where:
            is_milk(milk) and is_item_on_table_114(milk)
        # Select milk from table_114

        bind egg: item where:
            is_food_egg(egg) and is_item_on_table_114(egg)
        # Select egg from table_114

        place_item_on_dining_table(milk, dining_room_table)
        place_item_on_dining_table(egg, dining_room_table)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Unknown variable: table_114; available variables: [Variable<item: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_cheese_2072_around_cupboard_117(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cheese,cupboard_instance)
        else:
            exp(food_cheese,cupboard_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,cupboard_instance]=True
        close[cupboard_instance,food_cheese]=True
    

behavior find_food_orange_2103_around_table_cloth_2005(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind table_cloth_instance:item where:
            is_table_cloth(table_cloth_instance) and id[table_cloth_instance]==2005
        achieve close_char(char,table_cloth_instance)
        if can_open(table_cloth_instance):
            achieve_once open(table_cloth_instance)
            exp(food_orange,table_cloth_instance)
        else:
            exp(food_orange,table_cloth_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,table_cloth_instance]=True
        close[table_cloth_instance,food_orange]=True
    

behavior find_food_carrot_2015_around_cupboard_117(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_carrot,cupboard_instance)
        else:
            exp(food_carrot,cupboard_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,cupboard_instance]=True
        close[cupboard_instance,food_carrot]=True
    

behavior find_oil_2013_around_fryingpan_2154(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind fryingpan_instance:item where:
            is_fryingpan(fryingpan_instance) and id[fryingpan_instance]==2154
        achieve close_char(char,fryingpan_instance)
        if can_open(fryingpan_instance):
            achieve_once open(fryingpan_instance)
            exp(oil,fryingpan_instance)
        else:
            exp(oil,fryingpan_instance)
    eff:
        unknown[oil]=False
        close[oil,fryingpan_instance]=True
        close[fryingpan_instance,oil]=True
    

behavior find_food_butter_2007_around_cupboard_117(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_butter,cupboard_instance)
        else:
            exp(food_butter,cupboard_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,cupboard_instance]=True
        close[cupboard_instance,food_butter]=True
    

#goal_representation
 
def is_item_on_table_114(item:item):
    # Function to determine if a given item is on table_114
    symbol is_on_table= on(item, table_114)
    return is_on_table

behavior place_item_on_dining_table(item:item, table:item):
    body:
        achieve_once on(item, table)
        # Place the item on the dining room table

behavior __goal__():
    body:
        bind table_114: item where:
            is_table(table_114)
        # Declare table_114

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind dining_room_table: item where:
            is_table(dining_room_table) and inside(dining_room_table, dining_room)
        # Select a table in the dining room

        bind milk: item where:
            is_milk(milk) and is_item_on_table_114(milk)
        # Select milk from table_114

        bind egg: item where:
            is_food_egg(egg) and is_item_on_table_114(egg)
        # Select egg from table_114

        place_item_on_dining_table(milk, dining_room_table)
        place_item_on_dining_table(egg, dining_room_table)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Unknown variable: table_114; available variables: [Variable<item: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation
 
def is_item_on_table_114(item:item):
    # Function to determine if a given item is on table_114
    symbol is_on_table= on(item, table_114)
    return is_on_table

behavior place_item_on_dining_table(item:item, table:item):
    body:
        achieve_once on(item, table)
        # Place the item on the dining room table

behavior __goal__():
    body:
        bind table_114: item where:
            is_table(table_114)
        # Declare table_114

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind dining_room_table: item where:
            is_table(dining_room_table) and inside(dining_room_table, dining_room)
        # Select a table in the dining room

        bind milk: item where:
            is_milk(milk) and is_item_on_table_114(milk)
        # Select milk from table_114

        bind egg: item where:
            is_food_egg(egg) and is_item_on_table_114(egg)
        # Select egg from table_114

        place_item_on_dining_table(milk, dining_room_table)
        place_item_on_dining_table(egg, dining_room_table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_cheese_2088_around_cupboard_117(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cheese,cupboard_instance)
        else:
            exp(food_cheese,cupboard_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,cupboard_instance]=True
        close[cupboard_instance,food_cheese]=True
    

behavior find_food_orange_2103_around_cupboard_117(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_orange,cupboard_instance)
        else:
            exp(food_orange,cupboard_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,cupboard_instance]=True
        close[cupboard_instance,food_orange]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_item_on_table(item: item, table: item):
    body:
        achieve_once on(item, table)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind table_in_dining_room: item where:
            is_table(table_in_dining_room) and inside(table_in_dining_room, dining_room)
        # Select a table inside the dining room

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind egg: item where:
            is_food_egg(egg)
        # Select egg

        place_item_on_table(milk, table_in_dining_room)
        place_item_on_table(egg, table_in_dining_room)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "1. bring the milk and egg to the dining room and place them on a table." ?
Answer: Take the milk and egg and place them on one of the tables in the dining room.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_food_2021_around_food_food_2021(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==2021
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

behavior find_measuring_cup_2012_around_cupboard_117(measuring_cup:item):
    goal: not unknown(measuring_cup)
    body:
        assert is_measuring_cup(measuring_cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(measuring_cup,cupboard_instance)
        else:
            exp(measuring_cup,cupboard_instance)
    eff:
        unknown[measuring_cup]=False
        close[measuring_cup,cupboard_instance]=True
        close[cupboard_instance,measuring_cup]=True
    

#exp_behavior_end

#goal_representation

behavior bring_items_to_dining_room(milk:item, egg:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior __goal__():
    body:
        bind table_114: item where:
            is_table(table_114) and id[table_114] == 114
        # Select table_114 where the egg is placed

        bind dining_room_table: item where:
            is_table(dining_room_table) and inside(dining_room_table, dining_room)
        # Select one of the tables in the dining room

        bind milk: item where:
            is_milk(milk) and close(milk, table_114)
        # Select milk close to table_114

        bind egg: item where:
            is_food_egg(egg) and on(egg, table_114)
        # Select the egg on table_114

        bring_items_to_dining_room(milk, egg, dining_room_table)
        # Bring the milk and egg to the dining room table

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: dining_room; available variables: [Variable<dining_room_table: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_cheese_2072_around_cupboard_117(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cheese,cupboard_instance)
        else:
            exp(food_cheese,cupboard_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,cupboard_instance]=True
        close[cupboard_instance,food_cheese]=True
    

behavior find_food_butter_2007_around_cupboard_117(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_butter,cupboard_instance)
        else:
            exp(food_butter,cupboard_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,cupboard_instance]=True
        close[cupboard_instance,food_butter]=True
    

#goal_representation
 
behavior bring_items_to_dining_room(milk:item, egg:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        # Determine the dining room

        bind table_114: item where:
            is_table(table_114) and id[table_114] == 114
        # Select table_114 where the egg is placed

        bind dining_room_table: item where:
            is_table(dining_room_table) and inside(dining_room_table, dining_room)
        # Select one of the tables in the dining room

        bind milk: item where:
            is_milk(milk) and close(milk, table_114)
        # Select milk close to table_114

        bind egg: item where:
            is_food_egg(egg) and on(egg, table_114)
        # Select the egg on table_114

        bring_items_to_dining_room(milk, egg, dining_room_table)
        # Bring the milk and egg to the dining room table

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def find_table_in_dining_room(table:item):
    # Function to check if a table is in the dining room
    symbol in_dining_room= exists room: item : (is_dining_room(room) and inside(table, room))
    return in_dining_room

behavior move_milk_and_egg_to_table(milk:item, egg:item, table:item):
    body:
        # Place milk and egg on a table in the dining room
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Find the milk

        bind egg: item where:
            is_food_egg(egg)
        # Find the egg

        bind table: item where:
            is_table(table) and find_table_in_dining_room(table)
        # Select a table in the dining room

        achieve_once inhand(milk)
        # Temporarily hold the milk

        achieve_once inhand(egg)
        # Temporarily hold the egg

        move_milk_and_egg_to_table(milk, egg, table)
        # Move milk and egg to a table in the dining room

#goal_representation_end

##############################
From agent.py-> find a plan in act()
walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(milk_2115, table_114)put_executor(food_egg_2092, table_114)
##############################
From agent.py
walk_executor(milk_2115)
Robot find: Robot is close to the table_114. Robot is close to the milk_2115. 
##############################
From agent.py
grab_executor(milk_2115)
Robot find: Robot is close to the table_114. Robot is close to the milk_2115. Grabbing milk_2115 by right hand. 
##############################
From agent.py
walk_executor(food_egg_2092)
Robot find: Robot is close to the table_114. Robot is close to the milk_2115. Robot is close to the food_egg_2092. 
##############################
From agent.py
grab_executor(food_egg_2092)
Robot find: Robot is close to the table_114. Robot is close to the milk_2115. Robot is close to the food_egg_2092. Grabbing food_egg_2092 by left hand. 
##############################
From agent.py
walk_executor(table_114)
Robot find: Robot is close to the table_114. Robot is close to the milk_2115. Robot is close to the food_egg_2092. Robot is close to the mat_102. 
##############################
From agent.py
put_executor(milk_2115, table_114)
Robot find: Robot is close to the table_114. Robot is close to the milk_2115. Robot is close to the food_egg_2092. Robot is close to the mat_102. milk_2115 is close table_114. milk_2115 is on table_114. milk_2115 released by right hand. 
##############################
From agent.py
put_executor(food_egg_2092, table_114)
Robot find: Robot is close to the table_114. Robot is close to the milk_2115. Robot is close to the food_egg_2092. Robot is close to the mat_102. food_egg_2092 is close table_114. food_egg_2092 is on table_114. food_egg_2092 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_cheese_2072_around_cupboard_117(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cheese,cupboard_instance)
        else:
            exp(food_cheese,cupboard_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,cupboard_instance]=True
        close[cupboard_instance,food_cheese]=True
    

behavior find_food_orange_2061_around_cupboard_117(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_orange,cupboard_instance)
        else:
            exp(food_orange,cupboard_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,cupboard_instance]=True
        close[cupboard_instance,food_orange]=True
    

behavior find_food_kiwi_2054_around_food_food_1000(food_kiwi:item):
    goal: not unknown(food_kiwi)
    body:
        assert is_food_kiwi(food_kiwi)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==1000
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_kiwi,food_food_instance)
        else:
            exp(food_kiwi,food_food_instance)
    eff:
        unknown[food_kiwi]=False
        close[food_kiwi,food_food_instance]=True
        close[food_food_instance,food_kiwi]=True
    

behavior find_food_carrot_2086_around_cupboard_117(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_carrot,cupboard_instance)
        else:
            exp(food_carrot,cupboard_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,cupboard_instance]=True
        close[cupboard_instance,food_carrot]=True
    

behavior find_food_butter_2007_around_cupboard_117(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_butter,cupboard_instance)
        else:
            exp(food_butter,cupboard_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,cupboard_instance]=True
        close[cupboard_instance,food_butter]=True
    

#exp_behavior_end

#goal_representation
 
behavior throw_items_in_trash(item:item, trashcan:item):
    body:
        achieve_once inside(item, trashcan)
        # Throw the item into the trashcan

behavior __goal__():
    body:
        bind fridge: item where:
            is_fridge(fridge)
        # Select the fridge

        bind trashcan: item where:
            is_trashcan(trashcan)
        # Select the trashcan

        foreach item: item:
            if inside(item, fridge):
                # Throw all items from the fridge into the trashcan
                throw_items_in_trash(item, trashcan)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior throw_items_in_trash(item:item, trashcan:item):
    body:
        achieve_once inside(item, trashcan)
        # Throw the item into the trashcan

behavior __goal__():
    body:
        bind fridge: item where:
            is_fridge(fridge)
        # Select the fridge

        bind trashcan: item where:
            is_trashcan(trashcan)
        # Select the trashcan

        foreach item: item:
            if inside(item, fridge):
                # Throw all items from the fridge into the trashcan
                throw_items_in_trash(item, trashcan)

##############################
From agent.py-> find a plan in act()
walk_executor(food_steak_2080)grab_executor(food_steak_2080)walk_executor(trashcan_99)putin_executor(food_steak_2080, trashcan_99)walk_executor(food_apple_2081)grab_executor(food_apple_2081)walk_executor(trashcan_99)putin_executor(food_apple_2081, trashcan_99)walk_executor(food_bacon_2082)grab_executor(food_bacon_2082)walk_executor(trashcan_99)putin_executor(food_bacon_2082, trashcan_99)walk_executor(food_banana_2083)grab_executor(food_banana_2083)walk_executor(trashcan_99)putin_executor(food_banana_2083, trashcan_99)walk_executor(food_cake_2085)grab_executor(food_cake_2085)walk_executor(trashcan_99)putin_executor(food_cake_2085, trashcan_99)walk_executor(food_carrot_2086)grab_executor(food_carrot_2086)walk_executor(trashcan_99)putin_executor(food_carrot_2086, trashcan_99)walk_executor(food_cereal_2087)grab_executor(food_cereal_2087)walk_executor(trashcan_99)putin_executor(food_cereal_2087, trashcan_99)walk_executor(food_cheese_2088)grab_executor(food_cheese_2088)walk_executor(trashcan_99)putin_executor(food_cheese_2088, trashcan_99)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(trashcan_99)putin_executor(food_chicken_2089, trashcan_99)walk_executor(food_dessert_2090)grab_executor(food_dessert_2090)walk_executor(trashcan_99)putin_executor(food_dessert_2090, trashcan_99)walk_executor(food_donut_2091)grab_executor(food_donut_2091)walk_executor(trashcan_99)putin_executor(food_donut_2091, trashcan_99)walk_executor(food_fish_2093)grab_executor(food_fish_2093)walk_executor(trashcan_99)putin_executor(food_fish_2093, trashcan_99)walk_executor(food_food_2094)grab_executor(food_food_2094)walk_executor(trashcan_99)putin_executor(food_food_2094, trashcan_99)walk_executor(food_fruit_2095)grab_executor(food_fruit_2095)walk_executor(trashcan_99)putin_executor(food_fruit_2095, trashcan_99)walk_executor(food_hamburger_2096)grab_executor(food_hamburger_2096)walk_executor(trashcan_99)putin_executor(food_hamburger_2096, trashcan_99)walk_executor(food_ice_cream_2097)grab_executor(food_ice_cream_2097)walk_executor(trashcan_99)putin_executor(food_ice_cream_2097, trashcan_99)walk_executor(food_jam_2098)grab_executor(food_jam_2098)walk_executor(trashcan_99)putin_executor(food_jam_2098, trashcan_99)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(trashcan_99)putin_executor(food_lemon_2100, trashcan_99)walk_executor(food_noodles_2101)grab_executor(food_noodles_2101)walk_executor(trashcan_99)putin_executor(food_noodles_2101, trashcan_99)walk_executor(food_oatmeal_2102)grab_executor(food_oatmeal_2102)walk_executor(trashcan_99)putin_executor(food_oatmeal_2102, trashcan_99)walk_executor(food_orange_2103)grab_executor(food_orange_2103)walk_executor(trashcan_99)putin_executor(food_orange_2103, trashcan_99)walk_executor(food_onion_2104)grab_executor(food_onion_2104)walk_executor(trashcan_99)putin_executor(food_onion_2104, trashcan_99)walk_executor(food_peanut_butter_2105)grab_executor(food_peanut_butter_2105)walk_executor(trashcan_99)putin_executor(food_peanut_butter_2105, trashcan_99)walk_executor(food_pizza_2106)grab_executor(food_pizza_2106)walk_executor(trashcan_99)putin_executor(food_pizza_2106, trashcan_99)walk_executor(food_potato_2107)grab_executor(food_potato_2107)walk_executor(trashcan_99)putin_executor(food_potato_2107, trashcan_99)walk_executor(food_rice_2108)grab_executor(food_rice_2108)walk_executor(trashcan_99)putin_executor(food_rice_2108, trashcan_99)walk_executor(food_salt_2109)grab_executor(food_salt_2109)walk_executor(trashcan_99)putin_executor(food_salt_2109, trashcan_99)walk_executor(food_snack_2110)grab_executor(food_snack_2110)walk_executor(trashcan_99)putin_executor(food_snack_2110, trashcan_99)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(trashcan_99)putin_executor(food_sugar_2111, trashcan_99)walk_executor(food_turkey_2112)grab_executor(food_turkey_2112)walk_executor(trashcan_99)putin_executor(food_turkey_2112, trashcan_99)walk_executor(food_vegetable_2113)grab_executor(food_vegetable_2113)walk_executor(trashcan_99)putin_executor(food_vegetable_2113, trashcan_99)walk_executor(sauce_2148)grab_executor(sauce_2148)walk_executor(trashcan_99)putin_executor(sauce_2148, trashcan_99)walk_executor(food_food_2001)grab_executor(food_food_2001)walk_executor(trashcan_99)putin_executor(food_food_2001, trashcan_99)walk_executor(food_food_2046)grab_executor(food_food_2046)walk_executor(trashcan_99)putin_executor(food_food_2046, trashcan_99)walk_executor(food_onion_2048)grab_executor(food_onion_2048)walk_executor(trashcan_99)putin_executor(food_onion_2048, trashcan_99)walk_executor(food_food_2073)grab_executor(food_food_2073)walk_executor(trashcan_99)putin_executor(food_food_2073, trashcan_99)
##############################
From agent.py
walk_executor(food_steak_2080)
Robot find: Robot is close to the food_steak_2080. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_steak_2080)
Robot find: Robot is close to the food_steak_2080. Robot is close to the fridge_126. Grabbing food_steak_2080 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_steak_2080. Robot is close to the trashcan_99. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_steak_2080, trashcan_99)
Robot find: Robot is close to the food_steak_2080. Robot is close to the trashcan_99. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. food_steak_2080 is inside trashcan_99. food_steak_2080 is close trashcan_99. trashcan_99 is close food_steak_2080. food_steak_2080 released by right hand. 
##############################
From agent.py
walk_executor(food_apple_2081)
Robot find: Robot is close to the food_apple_2081. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_apple_2081)
Robot find: Robot is close to the food_apple_2081. Robot is close to the fridge_126. Grabbing food_apple_2081 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_apple_2081. Robot is close to the food_steak_2080. Robot is close to the trashcan_99. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_apple_2081, trashcan_99)
Robot find: Robot is close to the food_apple_2081. Robot is close to the food_steak_2080. Robot is close to the trashcan_99. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. food_apple_2081 is inside trashcan_99. food_apple_2081 is close trashcan_99. trashcan_99 is close food_apple_2081. food_apple_2081 released by right hand. 
##############################
From agent.py
walk_executor(food_bacon_2082)
Robot find: Robot is close to the food_bacon_2082. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_bacon_2082)
Robot find: Robot is close to the food_bacon_2082. Robot is close to the fridge_126. Grabbing food_bacon_2082 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_bacon_2082. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the trashcan_99. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_bacon_2082, trashcan_99)
Robot find: Robot is close to the food_bacon_2082. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the trashcan_99. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. food_bacon_2082 is inside trashcan_99. trashcan_99 is close food_bacon_2082. food_bacon_2082 is close trashcan_99. food_bacon_2082 released by right hand. 
##############################
From agent.py
walk_executor(food_banana_2083)
Robot find: Robot is close to the food_banana_2083. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_banana_2083)
Robot find: Robot is close to the food_banana_2083. Robot is close to the fridge_126. Grabbing food_banana_2083 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_banana_2083. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_banana_2083, trashcan_99)
Robot find: Robot is close to the food_banana_2083. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. food_banana_2083 is inside trashcan_99. food_banana_2083 is close trashcan_99. trashcan_99 is close food_banana_2083. food_banana_2083 released by right hand. 
##############################
From agent.py
walk_executor(food_cake_2085)
Robot find: Robot is close to the food_cake_2085. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_cake_2085)
Robot find: Robot is close to the food_cake_2085. Robot is close to the fridge_126. Grabbing food_cake_2085 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_cake_2085. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_cake_2085, trashcan_99)
Robot find: Robot is close to the food_cake_2085. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. food_cake_2085 is close trashcan_99. food_cake_2085 is inside trashcan_99. trashcan_99 is close food_cake_2085. food_cake_2085 released by right hand. 
##############################
From agent.py
walk_executor(food_carrot_2086)
Robot find: Robot is close to the food_carrot_2086. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_carrot_2086)
Robot find: Robot is close to the food_carrot_2086. Robot is close to the fridge_126. Grabbing food_carrot_2086 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_carrot_2086. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_carrot_2086, trashcan_99)
Robot find: Robot is close to the food_carrot_2086. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. food_carrot_2086 is inside trashcan_99. food_carrot_2086 is close trashcan_99. trashcan_99 is close food_carrot_2086. food_carrot_2086 released by right hand. 
##############################
From agent.py
walk_executor(food_cereal_2087)
Robot find: Robot is close to the fridge_126. Robot is close to the food_cereal_2087. 
##############################
From agent.py
grab_executor(food_cereal_2087)
Robot find: Robot is close to the fridge_126. Robot is close to the food_cereal_2087. Grabbing food_cereal_2087 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_cereal_2087. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_cereal_2087, trashcan_99)
Robot find: Robot is close to the food_cereal_2087. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. food_cereal_2087 is inside trashcan_99. food_cereal_2087 is close trashcan_99. trashcan_99 is close food_cereal_2087. food_cereal_2087 released by right hand. 
##############################
From agent.py
walk_executor(food_cheese_2088)
Robot find: Robot is close to the food_cheese_2088. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_cheese_2088)
Robot find: Robot is close to the food_cheese_2088. Robot is close to the fridge_126. Grabbing food_cheese_2088 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_cheese_2088. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_cheese_2088, trashcan_99)
Robot find: Robot is close to the food_cheese_2088. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. food_cheese_2088 is close trashcan_99. trashcan_99 is close food_cheese_2088. food_cheese_2088 is inside trashcan_99. food_cheese_2088 released by right hand. 
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_chicken_2089)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the fridge_126. Grabbing food_chicken_2089 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_chicken_2089, trashcan_99)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. food_chicken_2089 is inside trashcan_99. food_chicken_2089 is close trashcan_99. trashcan_99 is close food_chicken_2089. food_chicken_2089 released by right hand. 
##############################
From agent.py
walk_executor(food_dessert_2090)
Robot find: Robot is close to the food_dessert_2090. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_dessert_2090)
Robot find: Robot is close to the food_dessert_2090. Robot is close to the fridge_126. Grabbing food_dessert_2090 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_dessert_2090. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_dessert_2090, trashcan_99)
Robot find: Robot is close to the food_dessert_2090. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. food_dessert_2090 is inside trashcan_99. trashcan_99 is close food_dessert_2090. food_dessert_2090 is close trashcan_99. food_dessert_2090 released by right hand. 
##############################
From agent.py
walk_executor(food_donut_2091)
Robot find: Robot is close to the food_donut_2091. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_donut_2091)
Robot find: Robot is close to the food_donut_2091. Robot is close to the fridge_126. Grabbing food_donut_2091 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_donut_2091. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_donut_2091, trashcan_99)
Robot find: Robot is close to the food_donut_2091. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. food_donut_2091 is inside trashcan_99. food_donut_2091 is close trashcan_99. trashcan_99 is close food_donut_2091. food_donut_2091 released by right hand. 
##############################
From agent.py
walk_executor(food_fish_2093)
Robot find: Robot is close to the food_fish_2093. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_fish_2093)
Robot find: Robot is close to the food_fish_2093. Robot is close to the fridge_126. Grabbing food_fish_2093 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_fish_2093. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_fish_2093, trashcan_99)
Robot find: Robot is close to the food_fish_2093. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. food_fish_2093 is inside trashcan_99. trashcan_99 is close food_fish_2093. food_fish_2093 is close trashcan_99. food_fish_2093 released by right hand. 
##############################
From agent.py
walk_executor(food_food_2094)
Robot find: Robot is close to the food_food_2094. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_food_2094)
Robot find: Robot is close to the food_food_2094. Robot is close to the fridge_126. Grabbing food_food_2094 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_food_2094. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_food_2094, trashcan_99)
Robot find: Robot is close to the food_food_2094. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. food_food_2094 is inside trashcan_99. food_food_2094 is close trashcan_99. trashcan_99 is close food_food_2094. food_food_2094 released by right hand. 
##############################
From agent.py
walk_executor(food_fruit_2095)
Robot find: Robot is close to the fridge_126. Robot is close to the food_fruit_2095. 
##############################
From agent.py
grab_executor(food_fruit_2095)
Robot find: Robot is close to the fridge_126. Robot is close to the food_fruit_2095. Grabbing food_fruit_2095 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_fruit_2095. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_fruit_2095, trashcan_99)
Robot find: Robot is close to the food_fruit_2095. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the trashcan_99. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. food_fruit_2095 is inside trashcan_99. food_fruit_2095 is close trashcan_99. trashcan_99 is close food_fruit_2095. food_fruit_2095 released by right hand. 
##############################
From agent.py
walk_executor(food_hamburger_2096)
Robot find: Robot is close to the food_hamburger_2096. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_hamburger_2096)
Robot find: Robot is close to the food_hamburger_2096. Robot is close to the fridge_126. Grabbing food_hamburger_2096 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_hamburger_2096. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_hamburger_2096, trashcan_99)
Robot find: Robot is close to the food_hamburger_2096. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. food_hamburger_2096 is close trashcan_99. food_hamburger_2096 is inside trashcan_99. trashcan_99 is close food_hamburger_2096. food_hamburger_2096 released by right hand. 
##############################
From agent.py
walk_executor(food_ice_cream_2097)
Robot find: Robot is close to the food_ice_cream_2097. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_ice_cream_2097)
Robot find: Robot is close to the food_ice_cream_2097. Robot is close to the fridge_126. Grabbing food_ice_cream_2097 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_ice_cream_2097. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_ice_cream_2097, trashcan_99)
Robot find: Robot is close to the food_ice_cream_2097. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. food_ice_cream_2097 is inside trashcan_99. food_ice_cream_2097 is close trashcan_99. trashcan_99 is close food_ice_cream_2097. food_ice_cream_2097 released by right hand. 
##############################
From agent.py
walk_executor(food_jam_2098)
Robot find: Robot is close to the food_jam_2098. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_jam_2098)
Robot find: Robot is close to the food_jam_2098. Robot is close to the fridge_126. Grabbing food_jam_2098 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_jam_2098. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_jam_2098, trashcan_99)
Robot find: Robot is close to the food_jam_2098. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. food_jam_2098 is inside trashcan_99. food_jam_2098 is close trashcan_99. trashcan_99 is close food_jam_2098. food_jam_2098 released by right hand. 
##############################
From agent.py
walk_executor(food_lemon_2100)
Robot find: Robot is close to the food_lemon_2100. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_lemon_2100)
Robot find: Robot is close to the food_lemon_2100. Robot is close to the fridge_126. Grabbing food_lemon_2100 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_lemon_2100. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_lemon_2100, trashcan_99)
Robot find: Robot is close to the food_lemon_2100. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. food_lemon_2100 is inside trashcan_99. food_lemon_2100 is close trashcan_99. trashcan_99 is close food_lemon_2100. food_lemon_2100 released by right hand. 
##############################
From agent.py
walk_executor(food_noodles_2101)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_noodles_2101)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the fridge_126. Grabbing food_noodles_2101 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_noodles_2101, trashcan_99)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. food_noodles_2101 is close trashcan_99. food_noodles_2101 is inside trashcan_99. trashcan_99 is close food_noodles_2101. food_noodles_2101 released by right hand. 
##############################
From agent.py
walk_executor(food_oatmeal_2102)
Robot find: Robot is close to the food_oatmeal_2102. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_oatmeal_2102)
Robot find: Robot is close to the food_oatmeal_2102. Robot is close to the fridge_126. Grabbing food_oatmeal_2102 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_oatmeal_2102, trashcan_99)
Robot find: Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. food_oatmeal_2102 is inside trashcan_99. food_oatmeal_2102 is close trashcan_99. trashcan_99 is close food_oatmeal_2102. food_oatmeal_2102 released by right hand. 
##############################
From agent.py
walk_executor(food_orange_2103)
Robot find: Robot is close to the fridge_126. Robot is close to the food_orange_2103. 
##############################
From agent.py
grab_executor(food_orange_2103)
Robot find: Robot is close to the fridge_126. Robot is close to the food_orange_2103. Grabbing food_orange_2103 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_orange_2103. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_orange_2103, trashcan_99)
Robot find: Robot is close to the food_orange_2103. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. food_orange_2103 is inside trashcan_99. food_orange_2103 is close trashcan_99. trashcan_99 is close food_orange_2103. food_orange_2103 released by right hand. 
##############################
From agent.py
walk_executor(food_onion_2104)
Robot find: Robot is close to the food_onion_2104. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_onion_2104)
Robot find: Robot is close to the food_onion_2104. Robot is close to the fridge_126. Grabbing food_onion_2104 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_onion_2104. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_onion_2104, trashcan_99)
Robot find: Robot is close to the food_onion_2104. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. food_onion_2104 is close trashcan_99. food_onion_2104 is inside trashcan_99. trashcan_99 is close food_onion_2104. food_onion_2104 released by right hand. 
##############################
From agent.py
walk_executor(food_peanut_butter_2105)
Robot find: Robot is close to the food_peanut_butter_2105. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_peanut_butter_2105)
Robot find: Robot is close to the food_peanut_butter_2105. Robot is close to the fridge_126. Grabbing food_peanut_butter_2105 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_peanut_butter_2105. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_peanut_butter_2105, trashcan_99)
Robot find: Robot is close to the food_peanut_butter_2105. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. food_peanut_butter_2105 is inside trashcan_99. food_peanut_butter_2105 is close trashcan_99. trashcan_99 is close food_peanut_butter_2105. food_peanut_butter_2105 released by right hand. 
##############################
From agent.py
walk_executor(food_pizza_2106)
Robot find: Robot is close to the food_pizza_2106. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_pizza_2106)
Robot find: Robot is close to the food_pizza_2106. Robot is close to the fridge_126. Grabbing food_pizza_2106 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_pizza_2106. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_pizza_2106, trashcan_99)
Robot find: Robot is close to the food_pizza_2106. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. food_pizza_2106 is inside trashcan_99. food_pizza_2106 is close trashcan_99. trashcan_99 is close food_pizza_2106. food_pizza_2106 released by right hand. 
##############################
From agent.py
walk_executor(food_potato_2107)
Robot find: Robot is close to the food_potato_2107. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_potato_2107)
Robot find: Robot is close to the food_potato_2107. Robot is close to the fridge_126. Grabbing food_potato_2107 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_potato_2107. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_potato_2107, trashcan_99)
Robot find: Robot is close to the food_potato_2107. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. food_potato_2107 is close trashcan_99. food_potato_2107 is inside trashcan_99. trashcan_99 is close food_potato_2107. food_potato_2107 released by right hand. 
##############################
From agent.py
walk_executor(food_rice_2108)
Robot find: Robot is close to the food_rice_2108. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_rice_2108)
Robot find: Robot is close to the food_rice_2108. Robot is close to the fridge_126. Grabbing food_rice_2108 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_rice_2108. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_rice_2108, trashcan_99)
Robot find: Robot is close to the food_rice_2108. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. food_rice_2108 is inside trashcan_99. food_rice_2108 is close trashcan_99. trashcan_99 is close food_rice_2108. food_rice_2108 released by right hand. 
##############################
From agent.py
walk_executor(food_salt_2109)
Robot find: Robot is close to the food_salt_2109. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_salt_2109)
Robot find: Robot is close to the food_salt_2109. Robot is close to the fridge_126. Grabbing food_salt_2109 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_salt_2109. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_salt_2109, trashcan_99)
Robot find: Robot is close to the food_salt_2109. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. food_salt_2109 is inside trashcan_99. trashcan_99 is close food_salt_2109. food_salt_2109 is close trashcan_99. food_salt_2109 released by right hand. 
##############################
From agent.py
walk_executor(food_snack_2110)
Robot find: Robot is close to the food_snack_2110. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_snack_2110)
Robot find: Robot is close to the food_snack_2110. Robot is close to the fridge_126. Grabbing food_snack_2110 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_snack_2110. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_snack_2110, trashcan_99)
Robot find: Robot is close to the food_snack_2110. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. food_snack_2110 is inside trashcan_99. food_snack_2110 is close trashcan_99. trashcan_99 is close food_snack_2110. food_snack_2110 released by right hand. 
##############################
From agent.py
walk_executor(food_sugar_2111)
Robot find: Robot is close to the fridge_126. Robot is close to the food_sugar_2111. 
##############################
From agent.py
grab_executor(food_sugar_2111)
Robot find: Robot is close to the fridge_126. Robot is close to the food_sugar_2111. Grabbing food_sugar_2111 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_sugar_2111. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_sugar_2111, trashcan_99)
Robot find: Robot is close to the food_sugar_2111. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. food_sugar_2111 is inside trashcan_99. food_sugar_2111 is close trashcan_99. trashcan_99 is close food_sugar_2111. food_sugar_2111 released by right hand. 
##############################
From agent.py
walk_executor(food_turkey_2112)
Robot find: Robot is close to the food_turkey_2112. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_turkey_2112)
Robot find: Robot is close to the food_turkey_2112. Robot is close to the fridge_126. Grabbing food_turkey_2112 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_turkey_2112. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_turkey_2112, trashcan_99)
Robot find: Robot is close to the food_turkey_2112. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. food_turkey_2112 is close trashcan_99. food_turkey_2112 is inside trashcan_99. trashcan_99 is close food_turkey_2112. food_turkey_2112 released by right hand. 
##############################
From agent.py
walk_executor(food_vegetable_2113)
Robot find: Robot is close to the food_vegetable_2113. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_vegetable_2113)
Robot find: Robot is close to the food_vegetable_2113. Robot is close to the fridge_126. Grabbing food_vegetable_2113 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_vegetable_2113. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_vegetable_2113, trashcan_99)
Robot find: Robot is close to the food_vegetable_2113. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. food_vegetable_2113 is inside trashcan_99. food_vegetable_2113 is close trashcan_99. trashcan_99 is close food_vegetable_2113. food_vegetable_2113 released by right hand. 
##############################
From agent.py
walk_executor(sauce_2148)
Robot find: Robot is close to the sauce_2148. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(sauce_2148)
Robot find: Robot is close to the sauce_2148. Robot is close to the fridge_126. Grabbing sauce_2148 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the sauce_2148. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(sauce_2148, trashcan_99)
Robot find: Robot is close to the sauce_2148. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the glue_2045. sauce_2148 is inside trashcan_99. sauce_2148 is close trashcan_99. trashcan_99 is close sauce_2148. sauce_2148 released by right hand. 
##############################
From agent.py
walk_executor(food_food_2001)
Robot find: Robot is close to the food_food_2001. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_food_2001)
Robot find: Robot is close to the food_food_2001. Robot is close to the fridge_126. Grabbing food_food_2001 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_food_2001. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the sauce_2148. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_food_2001, trashcan_99)
Robot find: Robot is close to the food_food_2001. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the sauce_2148. Robot is close to the glue_2045. food_food_2001 is close trashcan_99. food_food_2001 is inside trashcan_99. trashcan_99 is close food_food_2001. food_food_2001 released by right hand. 
##############################
From agent.py
walk_executor(food_food_2046)
Robot find: Robot is close to the food_food_2046. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_food_2046)
Robot find: Robot is close to the food_food_2046. Robot is close to the fridge_126. Grabbing food_food_2046 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_food_2046. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the sauce_2148. Robot is close to the glue_2045. 
##############################
From agent.py
putin_executor(food_food_2046, trashcan_99)
Robot find: Robot is close to the food_food_2046. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the sauce_2148. Robot is close to the glue_2045. food_food_2046 is inside trashcan_99. food_food_2046 is close trashcan_99. trashcan_99 is close food_food_2046. food_food_2046 released by right hand. 
##############################
From agent.py
walk_executor(food_onion_2048)
Robot find: Robot is close to the food_onion_2048. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_onion_2048)
Robot find: Robot is close to the food_onion_2048. Robot is close to the fridge_126. Grabbing food_onion_2048 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_onion_2048. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the sauce_2148. Robot is close to the glue_2045. Robot is close to the food_food_2046. 
##############################
From agent.py
putin_executor(food_onion_2048, trashcan_99)
Robot find: Robot is close to the food_onion_2048. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the sauce_2148. Robot is close to the glue_2045. Robot is close to the food_food_2046. food_onion_2048 is inside trashcan_99. food_onion_2048 is close trashcan_99. trashcan_99 is close food_onion_2048. food_onion_2048 released by right hand. 
##############################
From agent.py
walk_executor(food_food_2073)
Robot find: Robot is close to the food_food_2073. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_food_2073)
Robot find: Robot is close to the food_food_2073. Robot is close to the fridge_126. Grabbing food_food_2073 by right hand. 
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: Robot is close to the food_food_2073. Robot is close to the food_onion_2048. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the sauce_2148. Robot is close to the glue_2045. Robot is close to the food_food_2046. 
##############################
From agent.py
putin_executor(food_food_2073, trashcan_99)
Robot find: Robot is close to the food_food_2073. Robot is close to the food_onion_2048. Robot is close to the food_orange_2061. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the food_onion_2009. Robot is close to the trashcan_99. Robot is close to the sauce_2148. Robot is close to the glue_2045. Robot is close to the food_food_2046. food_food_2073 is inside trashcan_99. food_food_2073 is close trashcan_99. trashcan_99 is close food_food_2073. food_food_2073 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_cheese_2072_around_dishwasher_129(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==129
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(food_cheese,dishwasher_instance)
        else:
            exp(food_cheese,dishwasher_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,dishwasher_instance]=True
        close[dishwasher_instance,food_cheese]=True
    

behavior find_food_orange_2027_around_cupboard_117(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_orange,cupboard_instance)
        else:
            exp(food_orange,cupboard_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,cupboard_instance]=True
        close[cupboard_instance,food_orange]=True
    

behavior find_food_carrot_2086_around_food_food_2021(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==2021
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_carrot,food_food_instance)
        else:
            exp(food_carrot,food_food_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,food_food_instance]=True
        close[food_food_instance,food_carrot]=True
    

#exp_behavior_end

#goal_representation

behavior place_items_in_fridge(milk:item, egg:item, fridge:item):
    body:
        achieve_once inside(milk, fridge)
        achieve_once inside(egg, fridge)

behavior close_fridge(fridge:item):
    body:
        achieve_once closed(fridge)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind egg: item where:
            is_food_egg(egg)
        # Select egg

        bind fridge: item where:
            is_fridge(fridge)
        # Select the fridge

        place_items_in_fridge(milk, egg, fridge)
        close_fridge(fridge)

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior place_items_in_fridge(milk:item, egg:item, fridge:item):
    body:
        achieve_once inside(milk, fridge)
        achieve_once inside(egg, fridge)

behavior close_fridge(fridge:item):
    body:
        achieve_once closed(fridge)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind egg: item where:
            is_food_egg(egg)
        # Select egg

        bind fridge: item where:
            is_fridge(fridge)
        # Select the fridge

        place_items_in_fridge(milk, egg, fridge)
        close_fridge(fridge)

##############################
From agent.py-> find a plan in act()
walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(fridge_126)putin_executor(milk_2115, fridge_126)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(fridge_126)putin_executor(food_egg_2092, fridge_126)close_executor(fridge_126)
##############################
From agent.py
walk_executor(milk_2115)
Robot find: Robot is close to the table_114. Robot is close to the milk_2115. 
##############################
From agent.py
grab_executor(milk_2115)
Robot find: Robot is close to the table_114. Robot is close to the milk_2115. Grabbing milk_2115 by right hand. 
##############################
From agent.py
walk_executor(fridge_126)
Robot find: Robot is close to the milk_2115. Robot is close to the fridge_126. 
##############################
From agent.py
putin_executor(milk_2115, fridge_126)
Robot find: Robot is close to the milk_2115. Robot is close to the fridge_126. milk_2115 is close fridge_126. fridge_126 is close milk_2115. milk_2115 is inside fridge_126. milk_2115 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2092)
Robot find: Robot is close to the table_114. Robot is close to the food_egg_2092. 
##############################
From agent.py
grab_executor(food_egg_2092)
Robot find: Robot is close to the table_114. Robot is close to the food_egg_2092. Grabbing food_egg_2092 by right hand. 
##############################
From agent.py
walk_executor(fridge_126)
Robot find: Robot is close to the food_egg_2092. Robot is close to the milk_2115. Robot is close to the fridge_126. 
##############################
From agent.py
putin_executor(food_egg_2092, fridge_126)
Robot find: Robot is close to the food_egg_2092. Robot is close to the milk_2115. Robot is close to the fridge_126. food_egg_2092 is inside fridge_126. food_egg_2092 is close fridge_126. food_egg_2092 released by right hand. 
##############################
From agent.py
close_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is closed. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Put milk and egg on one of the table in dining room. Throw all the items in the fridge to the trashcan. Then put milk and eggs back in the fridge.
Action History:
['walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'walk_executor(kitchen_counter_122)', 'walk_executor(kitchen_counter_119)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'walk_executor(walllamp_141)', 'walk_executor(trashcan_99)', 'walk_executor(table_114)', 'walk_executor(food_egg_2092)', 'grab_executor(food_egg_2092)', 'walk_executor(table_114)', 'put_executor(food_egg_2092, table_114)', 'walk_executor(fridge_126)', 'walk_executor(milk_2115)', 'walk_executor(food_egg_2092)', 'walk_executor(milk_2115)', 'grab_executor(milk_2115)', 'walk_executor(food_egg_2092)', 'grab_executor(food_egg_2092)', 'walk_executor(table_114)', 'put_executor(milk_2115, table_114)', 'put_executor(food_egg_2092, table_114)', 'walk_executor(food_steak_2080)', 'grab_executor(food_steak_2080)', 'walk_executor(trashcan_99)', 'putin_executor(food_steak_2080, trashcan_99)', 'walk_executor(food_apple_2081)', 'grab_executor(food_apple_2081)', 'walk_executor(trashcan_99)', 'putin_executor(food_apple_2081, trashcan_99)', 'walk_executor(food_bacon_2082)', 'grab_executor(food_bacon_2082)', 'walk_executor(trashcan_99)', 'putin_executor(food_bacon_2082, trashcan_99)', 'walk_executor(food_banana_2083)', 'grab_executor(food_banana_2083)', 'walk_executor(trashcan_99)', 'putin_executor(food_banana_2083, trashcan_99)', 'walk_executor(food_cake_2085)', 'grab_executor(food_cake_2085)', 'walk_executor(trashcan_99)', 'putin_executor(food_cake_2085, trashcan_99)', 'walk_executor(food_carrot_2086)', 'grab_executor(food_carrot_2086)', 'walk_executor(trashcan_99)', 'putin_executor(food_carrot_2086, trashcan_99)', 'walk_executor(food_cereal_2087)', 'grab_executor(food_cereal_2087)', 'walk_executor(trashcan_99)', 'putin_executor(food_cereal_2087, trashcan_99)', 'walk_executor(food_cheese_2088)', 'grab_executor(food_cheese_2088)', 'walk_executor(trashcan_99)', 'putin_executor(food_cheese_2088, trashcan_99)', 'walk_executor(food_chicken_2089)', 'grab_executor(food_chicken_2089)', 'walk_executor(trashcan_99)', 'putin_executor(food_chicken_2089, trashcan_99)', 'walk_executor(food_dessert_2090)', 'grab_executor(food_dessert_2090)', 'walk_executor(trashcan_99)', 'putin_executor(food_dessert_2090, trashcan_99)', 'walk_executor(food_donut_2091)', 'grab_executor(food_donut_2091)', 'walk_executor(trashcan_99)', 'putin_executor(food_donut_2091, trashcan_99)', 'walk_executor(food_fish_2093)', 'grab_executor(food_fish_2093)', 'walk_executor(trashcan_99)', 'putin_executor(food_fish_2093, trashcan_99)', 'walk_executor(food_food_2094)', 'grab_executor(food_food_2094)', 'walk_executor(trashcan_99)', 'putin_executor(food_food_2094, trashcan_99)', 'walk_executor(food_fruit_2095)', 'grab_executor(food_fruit_2095)', 'walk_executor(trashcan_99)', 'putin_executor(food_fruit_2095, trashcan_99)', 'walk_executor(food_hamburger_2096)', 'grab_executor(food_hamburger_2096)', 'walk_executor(trashcan_99)', 'putin_executor(food_hamburger_2096, trashcan_99)', 'walk_executor(food_ice_cream_2097)', 'grab_executor(food_ice_cream_2097)', 'walk_executor(trashcan_99)', 'putin_executor(food_ice_cream_2097, trashcan_99)', 'walk_executor(food_jam_2098)', 'grab_executor(food_jam_2098)', 'walk_executor(trashcan_99)', 'putin_executor(food_jam_2098, trashcan_99)', 'walk_executor(food_lemon_2100)', 'grab_executor(food_lemon_2100)', 'walk_executor(trashcan_99)', 'putin_executor(food_lemon_2100, trashcan_99)', 'walk_executor(food_noodles_2101)', 'grab_executor(food_noodles_2101)', 'walk_executor(trashcan_99)', 'putin_executor(food_noodles_2101, trashcan_99)', 'walk_executor(food_oatmeal_2102)', 'grab_executor(food_oatmeal_2102)', 'walk_executor(trashcan_99)', 'putin_executor(food_oatmeal_2102, trashcan_99)', 'walk_executor(food_orange_2103)', 'grab_executor(food_orange_2103)', 'walk_executor(trashcan_99)', 'putin_executor(food_orange_2103, trashcan_99)', 'walk_executor(food_onion_2104)', 'grab_executor(food_onion_2104)', 'walk_executor(trashcan_99)', 'putin_executor(food_onion_2104, trashcan_99)', 'walk_executor(food_peanut_butter_2105)', 'grab_executor(food_peanut_butter_2105)', 'walk_executor(trashcan_99)', 'putin_executor(food_peanut_butter_2105, trashcan_99)', 'walk_executor(food_pizza_2106)', 'grab_executor(food_pizza_2106)', 'walk_executor(trashcan_99)', 'putin_executor(food_pizza_2106, trashcan_99)', 'walk_executor(food_potato_2107)', 'grab_executor(food_potato_2107)', 'walk_executor(trashcan_99)', 'putin_executor(food_potato_2107, trashcan_99)', 'walk_executor(food_rice_2108)', 'grab_executor(food_rice_2108)', 'walk_executor(trashcan_99)', 'putin_executor(food_rice_2108, trashcan_99)', 'walk_executor(food_salt_2109)', 'grab_executor(food_salt_2109)', 'walk_executor(trashcan_99)', 'putin_executor(food_salt_2109, trashcan_99)', 'walk_executor(food_snack_2110)', 'grab_executor(food_snack_2110)', 'walk_executor(trashcan_99)', 'putin_executor(food_snack_2110, trashcan_99)', 'walk_executor(food_sugar_2111)', 'grab_executor(food_sugar_2111)', 'walk_executor(trashcan_99)', 'putin_executor(food_sugar_2111, trashcan_99)', 'walk_executor(food_turkey_2112)', 'grab_executor(food_turkey_2112)', 'walk_executor(trashcan_99)', 'putin_executor(food_turkey_2112, trashcan_99)', 'walk_executor(food_vegetable_2113)', 'grab_executor(food_vegetable_2113)', 'walk_executor(trashcan_99)', 'putin_executor(food_vegetable_2113, trashcan_99)', 'walk_executor(sauce_2148)', 'grab_executor(sauce_2148)', 'walk_executor(trashcan_99)', 'putin_executor(sauce_2148, trashcan_99)', 'walk_executor(food_food_2001)', 'grab_executor(food_food_2001)', 'walk_executor(trashcan_99)', 'putin_executor(food_food_2001, trashcan_99)', 'walk_executor(food_food_2046)', 'grab_executor(food_food_2046)', 'walk_executor(trashcan_99)', 'putin_executor(food_food_2046, trashcan_99)', 'walk_executor(food_onion_2048)', 'grab_executor(food_onion_2048)', 'walk_executor(trashcan_99)', 'putin_executor(food_onion_2048, trashcan_99)', 'walk_executor(food_food_2073)', 'grab_executor(food_food_2073)', 'walk_executor(trashcan_99)', 'putin_executor(food_food_2073, trashcan_99)', 'walk_executor(milk_2115)', 'grab_executor(milk_2115)', 'walk_executor(fridge_126)', 'putin_executor(milk_2115, fridge_126)', 'walk_executor(food_egg_2092)', 'grab_executor(food_egg_2092)', 'walk_executor(fridge_126)', 'putin_executor(food_egg_2092, fridge_126)', 'close_executor(fridge_126)']
Time info:
Time consume: 1138 seconds
Exp_helper query times: 1
Guidance query times: 3
library scale: 16
goal generate times: 22
goal correct times: 2
action_num: 177

Task complete rate:
1
Scene_id: 1
##############################
