From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the jacket.', '2. Wash it using the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_clothes_jacket_2119_around_basket_for_clothes_2078(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_jacket,basket_for_clothes_instance)
        else:
            exp(clothes_jacket,basket_for_clothes_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_jacket]=True
    

behavior find_soap_2126_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
behavior find_and_grab_jacket(jacket:item):
    body:
        if not inhand(jacket):
            grab(jacket)

behavior hand_wash_jacket(jacket:item):
    body:
        if dirty(jacket):
            wash(jacket)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket

        find_and_grab_jacket(jacket)
        # Make sure the jacket is in hand

        hand_wash_jacket(jacket)
        # Hand wash the jacket
#goal_representation_end

##############################
From agent.py->reset_goal
behavior find_and_grab_jacket(jacket:item):
    body:
        if not inhand(jacket):
            grab(jacket)

behavior hand_wash_jacket(jacket:item):
    body:
        if dirty(jacket):
            wash(jacket)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket

        find_and_grab_jacket(jacket)
        # Make sure the jacket is in hand

        hand_wash_jacket(jacket)
        # Hand wash the jacket
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2078)exp(clothes_jacket_2119, basket_for_clothes_2078)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)
##############################
From agent.py
walk_executor(basket_for_clothes_2078)
Robot find: clothes_pants_2157, clothes_shirt_2158, clothes_socks_2159, clothes_skirt_2160, Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the clothes_socks_2159. Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. 
##############################
From agent.py
exp(clothes_jacket_2119, basket_for_clothes_2078)
Fail to find clothes_jacket_2119 around basket_for_clothes_2078. 
##############################
From agent.py-> find a plan in act()
walk_executor(dresser_274)open_executor(dresser_274)exp(clothes_jacket_2119, dresser_274)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)
##############################
From agent.py
walk_executor(dresser_274)
Robot find: Robot is close to the dresser_274. 
##############################
From agent.py
open_executor(dresser_274)
Robot find: hanger_292, hanger_293, hanger_294, blow_dryer_2057, cat_2069, check_2075, clothes_pants_2036, Robot is close to the hanger_292. Robot is close to the hanger_293. Robot is close to the hanger_294. Robot is close to the blow_dryer_2057. Robot is close to the dresser_274. Robot is close to the cat_2069. Robot is close to the check_2075. dresser_274 is opened. 
##############################
From agent.py
exp(clothes_jacket_2119, dresser_274)
Fail to find clothes_jacket_2119 around dresser_274. 
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2079)open_executor(washing_machine_2079)exp(clothes_jacket_2119, washing_machine_2079)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. 
##############################
From agent.py
open_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is opened. 
##############################
From agent.py
exp(clothes_jacket_2119, washing_machine_2079)
Fail to find clothes_jacket_2119 around washing_machine_2079. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the jacket.', '2. Wash the jacket using the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_soap_2126_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
def locate_clothes_jacket_2119():
    # Check whether clothes_jacket_2119 is close
    symbol is_found = exists jacket: item : (is_clothes_jacket(jacket) and id[jacket] == 2119)
    return is_found

behavior find_and_grab_jacket(jacket: item):
    body:
        if not inhand(jacket):
            grab(jacket)

behavior hand_wash_jacket(jacket: item):
    body:
        if dirty(jacket):
            wash(jacket)

behavior __goal__():
    body:
        if not locate_clothes_jacket_2119():
            foreach location: item:
                if (is_dresser(location) or is_basket_for_clothes(location) or is_washing_machine(location)) and not visited(location):
                    observe(location, "Look for clothes_jacket_2119")
        
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2119
        # Select clothes_jacket_2119

        find_and_grab_jacket(jacket)
        hand_wash_jacket(jacket)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2119_around_bed_197(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==197
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(clothes_jacket,bed_instance)
        else:
            exp(clothes_jacket,bed_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,bed_instance]=True
        close[bed_instance,clothes_jacket]=True
    

behavior find_soap_2126_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_ice_2024_around_fridge_126(ice:item):
    goal: not unknown(ice)
    body:
        assert is_ice(ice)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(ice,fridge_instance)
        else:
            exp(ice,fridge_instance)
    eff:
        unknown[ice]=False
        close[ice,fridge_instance]=True
        close[fridge_instance,ice]=True
    

behavior find_cleaning_solution_2143_around_bathroom_cabinet_17(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothes_jacket_around(item:item):
    # Check if clothes_jacket is around the given item
    symbol is_around = exists jacket: item : (is_clothes_jacket(jacket) and close(jacket, item))
    return is_around

def locate_clothes_jacket():
    # Attempt to locate the clothes_jacket around known items
    foreach container: item:
        if is_basket_for_clothes(container) or is_dresser(container) or is_washing_machine(container):
            if not visited(container):
                observe(container, "Check if clothes_jacket is around this item")

behavior find_and_grab_jacket(jacket:item, location:item):
    body:
        if not inhand(jacket):
            if not close_char(char, jacket):
                walk_to(location)
                observe(jacket, "Observe jacket to grab")
            grab(jacket)

behavior hand_wash_jacket(jacket:item):
    body:
        if dirty(jacket):
            wash(jacket)

behavior __goal__():
    body:
        bind clothes_jacket: item where:
            is_clothes_jacket(clothes_jacket)
        
        if not is_clothes_jacket_around(clothes_jacket):
            locate_clothes_jacket()
        
        bind location: item where:
            is_basket_for_clothes(location) or is_dresser(location) or is_washing_machine(location)

        find_and_grab_jacket(clothes_jacket, location)
        hand_wash_jacket(clothes_jacket)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_soap_2125_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_cleaning_solution_2143_around_bathroom_cabinet_17(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_grab_jacket(jacket:item):
    body:
        if not inhand(jacket):
            grab(jacket)

behavior hand_wash_jacket(jacket:item):
    body:
        if dirty(jacket):
            wash(jacket) # Hand wash the jacket if it is dirty

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select clothes_jacket

        walk_to(jacket)
        # Move to the jackets location

        find_and_grab_jacket(jacket)
        # Make sure the jacket is in hand

        hand_wash_jacket(jacket)
        # Hand wash the jacket

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_clothes_jacket_2119_around_bed_197(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==197
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(clothes_jacket,bed_instance)
        else:
            exp(clothes_jacket,bed_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,bed_instance]=True
        close[bed_instance,clothes_jacket]=True
    

behavior find_soap_2125_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_grab_jacket(jacket:item):
    body:
        if not inhand(jacket):
            grab(jacket)

behavior hand_wash_jacket(jacket:item):
    body:
        if dirty(jacket):
            wash(jacket) # Hand wash the jacket if its dirty

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2119
        # Select clothes_jacket_2119

        find_and_grab_jacket(jacket)
        # Make sure the jacket is in hand

        hand_wash_jacket(jacket)
        # Hand wash the jacket

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_and_grab_jacket(jacket:item):
    body:
        if not inhand(jacket):
            grab(jacket)

behavior hand_wash_jacket(jacket:item):
    body:
        if dirty(jacket):
            wash(jacket) # Hand wash the jacket if its dirty

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2119
        # Select clothes_jacket_2119

        find_and_grab_jacket(jacket)
        # Make sure the jacket is in hand

        hand_wash_jacket(jacket)
        # Hand wash the jacket

##############################
From agent.py-> find a plan in act()
walk_executor(bed_197)exp(clothes_jacket_2119, bed_197)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)
##############################
From agent.py
walk_executor(bed_197)
Robot find: pillow_208, clothes_scarf_2120, clothes_underwear_2121, drawing_201, clothes_dress_2116, pillow_207, Robot is close to the bed_197. 
##############################
From agent.py
exp(clothes_jacket_2119, bed_197)
Fail to find clothes_jacket_2119 around bed_197. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the jacket.', '2. Wash the jacket using the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_grab_jacket(jacket:item):
    body:
        if not inhand(jacket):
            grab(jacket)

behavior hand_wash_jacket(jacket:item):
    body:
        if dirty(jacket):
            wash(jacket) # Hand wash the jacket if its dirty

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket

        find_and_grab_jacket(jacket)
        # Make sure the jacket is in hand

        hand_wash_jacket(jacket)
        # Hand wash the jacket

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_food_fruit_2095_around_fridge_126(food_fruit:item):
    goal: not unknown(food_fruit)
    body:
        assert is_food_fruit(food_fruit)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_fruit,fridge_instance)
        else:
            exp(food_fruit,fridge_instance)
    eff:
        unknown[food_fruit]=False
        close[food_fruit,fridge_instance]=True
        close[fridge_instance,food_fruit]=True
    

behavior find_clothes_jacket_2119_around_home_office_241(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(clothes_jacket,home_office_instance)
        else:
            exp(clothes_jacket,home_office_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,home_office_instance]=True
        close[home_office_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_grab_jacket(jacket:item):
    body:
        if not inhand(jacket):
            grab(jacket)

behavior hand_wash_jacket(jacket:item):
    body:
        if dirty(jacket):
            wash(jacket) # Hand wash the jacket if its dirty

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket

        find_and_grab_jacket(jacket)
        # Make sure the jacket is in hand

        hand_wash_jacket(jacket)
        # Hand wash the jacket

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_and_grab_jacket(jacket:item):
    body:
        if not inhand(jacket):
            grab(jacket)

behavior hand_wash_jacket(jacket:item):
    body:
        if dirty(jacket):
            wash(jacket) # Hand wash the jacket if its dirty

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket

        find_and_grab_jacket(jacket)
        # Make sure the jacket is in hand

        hand_wash_jacket(jacket)
        # Hand wash the jacket

##############################
From agent.py-> find a plan in act()
walk_executor(home_office_241)exp(clothes_jacket_2119, home_office_241)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)
##############################
From agent.py
walk_executor(home_office_241)

##############################
From agent.py
exp(clothes_jacket_2119, home_office_241)
Fail to find clothes_jacket_2119 around home_office_241. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "1. hand wash the jacket." ?
Answer: Put the jacket in a sink and wash it.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2119_around_sink_19(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==19
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(clothes_jacket,sink_instance)
        else:
            exp(clothes_jacket,sink_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,sink_instance]=True
        close[sink_instance,clothes_jacket]=True
    

behavior find_detergent_2155_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_ice_2024_around_fridge_126(ice:item):
    goal: not unknown(ice)
    body:
        assert is_ice(ice)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(ice,fridge_instance)
        else:
            exp(ice,fridge_instance)
    eff:
        unknown[ice]=False
        close[ice,fridge_instance]=True
        close[fridge_instance,ice]=True
    

behavior find_soap_2125_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
def is_jacket_clothes(jacket:item):
    # Function to check if an item is clothes_jacket
    return is_clothes_jacket(jacket)

behavior find_and_grab_jacket(jacket:item):
    body:
        if not inhand(jacket):
            grab(jacket)

behavior hand_wash_jacket(jacket:item):
    body:
        if dirty(jacket):
            if not has_water(jacket):
                get_water(jacket)
            wash(jacket) # Hand wash the jacket if its dirty

behavior __goal__():
    body:
        bind jacket: item where:
            is_jacket_clothes(jacket)
        # Select the jacket

        if not inhand(jacket):
            find_and_grab_jacket(jacket)
        # Make sure the jacket is in hand

        hand_wash_jacket(jacket)
        # Hand wash the jacket

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_jacket_clothes(jacket:item):
    # Function to check if an item is clothes_jacket
    return is_clothes_jacket(jacket)

behavior find_and_grab_jacket(jacket:item):
    body:
        if not inhand(jacket):
            grab(jacket)

behavior hand_wash_jacket(jacket:item):
    body:
        if dirty(jacket):
            if not has_water(jacket):
                get_water(jacket)
            wash(jacket) # Hand wash the jacket if its dirty

behavior __goal__():
    body:
        bind jacket: item where:
            is_jacket_clothes(jacket)
        # Select the jacket

        if not inhand(jacket):
            find_and_grab_jacket(jacket)
        # Make sure the jacket is in hand

        hand_wash_jacket(jacket)
        # Hand wash the jacket

##############################
From agent.py-> find a plan in act()
walk_executor(sink_19)exp(clothes_jacket_2119, sink_19)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)
##############################
From agent.py
walk_executor(sink_19)
Robot find: after_shave_2063, soap_2125, detergent_2155, mat_32, phone_2029, cleaning_solution_2143, drawing_33, Robot is close to the bathroom_counter_18. Robot is close to the sink_19. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_jacket_2119 ?
Answer: The target item, clothes_jacket_2119, is located inside bedroom_162. You can find it on couch_198, which is nearby. Please identify the couch in bedroom_162 to locate and retrieve the jacket placed on it.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item, clothes_jacket_2119, is located inside bedroom_162. You can find it on couch_198, which is nearby. Please identify the couch in bedroom_162 to locate and retrieve the jacket placed on it.

Human Guidance: Put the jacket in a sink and wash it.
The actions you have taken:
Action 1: Walk to basket_for_clothes_2078.
Action 2: look for clothes_jacket_2119 around basket_for_clothes_2078.
Action 3: Walk to dresser_274.
Action 4: Open dresser_274.
Action 5: look for clothes_jacket_2119 around dresser_274.
Action 6: Walk to washing_machine_2079.
Action 7: Open washing_machine_2079.
Action 8: look for clothes_jacket_2119 around washing_machine_2079.
Action 9: Walk to bed_197.
Action 10: look for clothes_jacket_2119 around bed_197.
Action 11: Walk to home_office_241.
Action 12: look for clothes_jacket_2119 around home_office_241.
Action 13: Walk to sink_19.

##############################
From agent.py
exp(clothes_jacket_2119, sink_19)
Fail to find clothes_jacket_2119 around sink_19. 
##############################
From agent.py-> find a plan in act()
walk_executor(couch_198)exp(clothes_jacket_2119, couch_198)walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)
##############################
From agent.py
walk_executor(couch_198)
Robot find: chair_2003, instrument_guitar_2028, rag_2052, mat_203, phone_2016, clothes_jacket_2119, Robot is close to the couch_198. 
##############################
From agent.py
exp(clothes_jacket_2119, couch_198)
Find clothes_jacket_2119. 
##############################
From agent.py-> find a plan in act()
walk_executor(clothes_jacket_2119)grab_executor(clothes_jacket_2119)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_jacket_2119)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(clothes_jacket_2119)
Robot find: Robot is close to the couch_198. Robot is close to the clothes_jacket_2119. 
##############################
From agent.py
grab_executor(clothes_jacket_2119)
Robot find: Robot is close to the couch_198. Robot is close to the clothes_jacket_2119. Grabbing clothes_jacket_2119 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchon_executor(faucet_20)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned off. 
##############################
From agent.py
switchon_executor(faucet_20)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned on. 
##############################
From agent.py
wash_executor(clothes_jacket_2119)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. clothes_jacket_2119 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2011_around_bathroom_cabinet_17(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior use_washing_machine_to_wash_jacket(jacket:item, washing_machine:item):
    body:
        if not inside(jacket, washing_machine):
            put_inside(jacket, washing_machine)

behavior start_washing_machine(washing_machine:item):
    body:
        if open(washing_machine):
            closes(washing_machine) # Close the washing machine door
        if is_off(washing_machine):
            switch_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2119
        # Select clothes_jacket_2119

        bind bedroom: item where:
            is_bedroom(bedroom) and id[bedroom] == 162
        # Select bedroom with ID 162

        bind couch: item where:
            is_couch(couch) and inside(couch, bedroom) and id[couch]==198
        # Select the couch with ID 198 inside the bedroom

        if not inhand(jacket) and on(jacket, couch):
            grab(jacket)
        # Grab the jacket if its on the couch

        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2079
        # Select washing_machine_2079

        use_washing_machine_to_wash_jacket(jacket, washing_machine)
        start_washing_machine(washing_machine)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior use_washing_machine_to_wash_jacket(jacket:item, washing_machine:item):
    body:
        if not inside(jacket, washing_machine):
            put_inside(jacket, washing_machine)

behavior start_washing_machine(washing_machine:item):
    body:
        if open(washing_machine):
            closes(washing_machine) # Close the washing machine door
        if is_off(washing_machine):
            switch_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2119
        # Select clothes_jacket_2119

        bind bedroom: item where:
            is_bedroom(bedroom) and id[bedroom] == 162
        # Select bedroom with ID 162

        bind couch: item where:
            is_couch(couch) and inside(couch, bedroom) and id[couch]==198
        # Select the couch with ID 198 inside the bedroom

        if not inhand(jacket) and on(jacket, couch):
            grab(jacket)
        # Grab the jacket if its on the couch

        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2079
        # Select washing_machine_2079

        use_washing_machine_to_wash_jacket(jacket, washing_machine)
        start_washing_machine(washing_machine)

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2079)putin_executor(clothes_jacket_2119, washing_machine_2079)close_executor(washing_machine_2079)plugin_executor(washing_machine_2079)switchon_executor(washing_machine_2079)
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the washing_machine_2079. 
##############################
From agent.py
putin_executor(clothes_jacket_2119, washing_machine_2079)
Robot find: Robot is close to the clothes_jacket_2119. Robot is close to the washing_machine_2079. clothes_jacket_2119 is inside washing_machine_2079. clothes_jacket_2119 is close washing_machine_2079. washing_machine_2079 is close clothes_jacket_2119. clothes_jacket_2119 released by right hand. 
##############################
From agent.py
close_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is closed. 
##############################
From agent.py
plugin_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is plugged in. 
##############################
From agent.py
switchon_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Hand wash the jacket, then wash it by washing machine.
Action History:
['walk_executor(basket_for_clothes_2078)', 'walk_executor(dresser_274)', 'open_executor(dresser_274)', 'walk_executor(washing_machine_2079)', 'open_executor(washing_machine_2079)', 'walk_executor(bed_197)', 'walk_executor(home_office_241)', 'walk_executor(sink_19)', 'walk_executor(couch_198)', 'walk_executor(clothes_jacket_2119)', 'grab_executor(clothes_jacket_2119)', 'walk_executor(faucet_20)', 'switchon_executor(faucet_20)', 'switchoff_executor(faucet_20)', 'switchon_executor(faucet_20)', 'wash_executor(clothes_jacket_2119)', 'switchoff_executor(faucet_20)', 'walk_executor(washing_machine_2079)', 'putin_executor(clothes_jacket_2119, washing_machine_2079)', 'close_executor(washing_machine_2079)', 'plugin_executor(washing_machine_2079)', 'switchon_executor(washing_machine_2079)']
Time info:
Time consume: 165 seconds
Exp_helper query times: 1
Guidance query times: 1
library scale: 72
goal generate times: 9
goal correct times: 0
action_num: 22

Task complete rate:
1
Scene_id: 1
##############################
