From agent.py
Reset goals: The sub-goals are: 
['1. Identify all rooms in the house.', '2. Ensure at least one light is on in each identified room.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_194_around_desk_193(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==193
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
def is_room_identified(room: item):
    # Function to check if a room has been identified
    return visited(room)

behavior identify_room(room: item):
    body:
        if not is_room_identified(room):
            observe(room, "Identify the room")
            
behavior __goal__():
    body:
        foreach room: item:
            # Iterate through all items to identify rooms
            if not visited(room):
                identify_room(room)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def identify_room(room: item):
    # Function to identify a room by ensuring it is visited
    if not visited(room):
        observe(room, "Identify the room and its contents")

behavior __goal__():
    body:
        foreach room: item:
            identify_room(room)
        # Loop through and identify all rooms

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_mat_102_around_basket_for_clothes_2078(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(mat,basket_for_clothes_instance)
        else:
            exp(mat,basket_for_clothes_instance)
    eff:
        unknown[mat]=False
        close[mat,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,mat]=True
    

behavior find_box_2038_around_cupboard_117(box:item):
    goal: not unknown(box)
    body:
        assert is_box(box)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(box,cupboard_instance)
        else:
            exp(box,cupboard_instance)
    eff:
        unknown[box]=False
        close[box,cupboard_instance]=True
        close[cupboard_instance,box]=True
    

behavior find_shoe_rack_2044_around_bench_113(shoe_rack:item):
    goal: not unknown(shoe_rack)
    body:
        assert is_shoe_rack(shoe_rack)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==113
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(shoe_rack,bench_instance)
        else:
            exp(shoe_rack,bench_instance)
    eff:
        unknown[shoe_rack]=False
        close[shoe_rack,bench_instance]=True
        close[bench_instance,shoe_rack]=True
    

#exp_behavior_end

#goal_representation
 
def room_identified(room:item):
    # Function to check if a room is identified
    return visited(room)

behavior observe_room(room:item):
    body:
        if not room_identified(room):
            observe(room, "Identify the room")

behavior __goal__():
    body:
        foreach room: item:
            # Observe each unvisited room to identify them
            if not visited(room):
                observe_room(room)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_dessert_2090_around_fridge_126(food_dessert:item):
    goal: not unknown(food_dessert)
    body:
        assert is_food_dessert(food_dessert)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_dessert,fridge_instance)
        else:
            exp(food_dessert,fridge_instance)
    eff:
        unknown[food_dessert]=False
        close[food_dessert,fridge_instance]=True
        close[fridge_instance,food_dessert]=True
    

behavior find_chessboard_2070_around_table_199(chessboard:item):
    goal: not unknown(chessboard)
    body:
        assert is_chessboard(chessboard)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==199
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(chessboard,table_instance)
        else:
            exp(chessboard,table_instance)
    eff:
        unknown[chessboard]=False
        close[chessboard,table_instance]=True
        close[table_instance,chessboard]=True
    

behavior find_book_2136_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_hanger_292_around_basket_for_clothes_2078(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(hanger,basket_for_clothes_instance)
        else:
            exp(hanger,basket_for_clothes_instance)
    eff:
        unknown[hanger]=False
        close[hanger,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,hanger]=True
    

behavior find_table_cloth_2005_around_table_199(table_cloth:item):
    goal: not unknown(table_cloth)
    body:
        assert is_table_cloth(table_cloth)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==199
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(table_cloth,table_instance)
        else:
            exp(table_cloth,table_instance)
    eff:
        unknown[table_cloth]=False
        close[table_cloth,table_instance]=True
        close[table_instance,table_cloth]=True
    

behavior find_chair_271_around_desk_193(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==193
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior observe_room(room:item):
    body:
        if not visited(room):
            observe(room, "Check for room identification")
            # Identify the room if it hasnt been visited yet

behavior __goal__():
    body:
        foreach room: item:
            observe_room(room)

#goal_representation_end

##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Identify all rooms in the household.', '2. Ensure at least one light is turned on in each identified room.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_room(x:item):
    # Function to determine if an item is a room
    symbol is_room_type=exists room: item : (is_bedroom(room) or is_bathroom(room) or is_dining_room(room))
    return is_room_type

behavior identify_rooms():
    body:
        foreach room: item:
            if not visited(room) and is_room(room):
                observe(room, "Identify the room")

behavior __goal__():
    body:
        identify_rooms()

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_room(x:item):
    # Function to determine if an item is a room
    symbol is_room_type=exists room: item : (is_bedroom(room) or is_bathroom(room) or is_dining_room(room))
    return is_room_type

behavior identify_rooms():
    body:
        foreach room: item:
            if not visited(room) and is_room(room):
                observe(room, "Identify the room")

behavior __goal__():
    body:
        identify_rooms()

##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_1)obs(bathroom_1, Identify the room)walk_executor(dining_room_41)obs(dining_room_41, Identify the room)walk_executor(bedroom_162)obs(bedroom_162, Identify the room)walk_executor(home_office_241)obs(home_office_241, Identify the room)
##############################
From agent.py
walk_executor(bathroom_1)

##############################
From agent.py
obs(bathroom_1, Identify the room)
Get this information:  wall_2 is inside bathroom_1. shower_21 is inside bathroom_1. mat_32 is inside bathroom_1. wall_5 is inside bathroom_1. ceilinglamp_35 is inside bathroom_1. floor_13 is inside bathroom_1. cleaning_solution_2143 is inside bathroom_1. shower_16 is inside bathroom_1. toy_2056 is inside bathroom_1. character_240 is inside bathroom_1. piano_bench_2067 is inside bathroom_1. phone_2029 is inside bathroom_1. ceiling_8 is inside bathroom_1. sink_19 is inside bathroom_1. door_38 is inside bathroom_1. floor_11 is inside bathroom_1. tooth_paste_2059 is inside bathroom_1. curtain_22 is inside bathroom_1. wall_3 is inside bathroom_1. floor_14 is inside bathroom_1. drawing_33 is inside bathroom_1. ceiling_6 is inside bathroom_1. door_38 is between bathroom_1. walllamp_36 is inside bathroom_1. bathroom_cabinet_17 is inside bathroom_1. soap_2125 is inside bathroom_1. toilet_paper_2076 is inside bathroom_1. detergent_2155 is inside bathroom_1. ceiling_9 is inside bathroom_1. light_39 is inside bathroom_1. window_2156 is inside bathroom_1. faucet_20 is inside bathroom_1. towel_2128 is inside bathroom_1. floor_12 is inside bathroom_1. wall_4 is inside bathroom_1. after_shave_2063 is inside bathroom_1. toilet_15 is inside bathroom_1. walllamp_34 is inside bathroom_1. ceiling_7 is inside bathroom_1. bathroom_counter_18 is inside bathroom_1. bathroom_1 is close to window_2156. doorjamb_37 is inside bathroom_1. floor_10 is inside bathroom_1. bathroom_1 is CLEAN.
##############################
From agent.py
walk_executor(dining_room_41)

##############################
From agent.py
obs(dining_room_41, Identify the room)
Get this information:  book_2137 is inside dining_room_41. sauce_2148 is inside dining_room_41. wall_70 is inside dining_room_41. ceiling_59 is inside dining_room_41. food_snack_2110 is inside dining_room_41. food_cheese_2072 is inside dining_room_41. food_orange_2061 is inside dining_room_41. floor_51 is inside dining_room_41. measuring_cup_2012 is inside dining_room_41. kitchen_counter_119 is inside dining_room_41. food_steak_2080 is inside dining_room_41. food_donut_2091 is inside dining_room_41. coffee_filter_2053 is inside dining_room_41. ceilinglamp_138 is inside dining_room_41. floor_43 is inside dining_room_41. food_carrot_2015 is inside dining_room_41. lighter_2004 is inside dining_room_41. clothes_skirt_2160 is inside dining_room_41. oil_2149 is inside dining_room_41. drawing_111 is inside dining_room_41. food_food_1000 is inside dining_room_41. light_73 is inside dining_room_41. door_62 is inside dining_room_41. food_oatmeal_2102 is inside dining_room_41. coffe_maker_130 is inside dining_room_41. food_food_2064 is inside dining_room_41. cup_2132 is inside dining_room_41. ceiling_54 is inside dining_room_41. food_banana_2083 is inside dining_room_41. food_food_2094 is inside dining_room_41. fork_2151 is inside dining_room_41. glue_2045 is inside dining_room_41. walllamp_141 is inside dining_room_41. food_vegetable_2113 is inside dining_room_41. food_butter_2007 is inside dining_room_41. pillow_103 is inside dining_room_41. table_114 is inside dining_room_41. food_carrot_2086 is inside dining_room_41. pillow_108 is inside dining_room_41. dry_pasta_2114 is inside dining_room_41. knifeblock_76 is inside dining_room_41. wall_65 is inside dining_room_41. food_onion_2048 is inside dining_room_41. knife_2037 is inside dining_room_41. food_peanut_butter_2105 is inside dining_room_41. soap_2010 is inside dining_room_41. ironing_board_2144 is inside dining_room_41. pillow_106 is inside dining_room_41. character_240 is inside dining_room_41. ceiling_57 is inside dining_room_41. floor_46 is inside dining_room_41. wall_68 is inside dining_room_41. stovefan_125 is inside dining_room_41. fridge_126 is inside dining_room_41. floor_49 is inside dining_room_41. food_chicken_2089 is inside dining_room_41. basket_for_clothes_2078 is inside dining_room_41. clothes_pants_2157 is inside dining_room_41. pot_2040 is inside dining_room_41. door_62 is between dining_room_41. food_ice_cream_2097 is inside dining_room_41. food_rice_2108 is inside dining_room_41. food_apple_2081 is inside dining_room_41. ceiling_60 is inside dining_room_41. pot_2138 is inside dining_room_41. food_food_2021 is inside dining_room_41. tray_128 is inside dining_room_41. cupboard_117 is inside dining_room_41. walllamp_139 is inside dining_room_41. food_lemon_2100 is inside dining_room_41. vacuum_cleaner_2139 is inside dining_room_41. piano_bench_2062 is inside dining_room_41. ceiling_52 is inside dining_room_41. oil_2013 is inside dining_room_41. sink_120 is inside dining_room_41. phone_71 is inside dining_room_41. food_sugar_2111 is inside dining_room_41. food_food_2073 is inside dining_room_41. floor_44 is inside dining_room_41. bowl_2141 is inside dining_room_41. plate_2152 is inside dining_room_41. ice_2024 is inside dining_room_41. knife_2035 is inside dining_room_41. wall_63 is inside dining_room_41. food_egg_2092 is inside dining_room_41. food_orange_2103 is inside dining_room_41. food_kiwi_2054 is inside dining_room_41. coffee_filter_2065 is inside dining_room_41. ceiling_55 is inside dining_room_41. knife_2122 is inside dining_room_41. cup_2133 is inside dining_room_41. table_cloth_2005 is inside dining_room_41. food_orange_2027 is inside dining_room_41. iron_2161 is inside dining_room_41. kitchen_counter_123 is inside dining_room_41. door_38 is between dining_room_41. food_bread_2084 is inside dining_room_41. food_food_2046 is inside dining_room_41. floor_47 is inside dining_room_41. bench_115 is inside dining_room_41. pillow_104 is inside dining_room_41. wall_66 is inside dining_room_41. food_fruit_2095 is inside dining_room_41. food_pizza_2106 is inside dining_room_41. tray_2068 is inside dining_room_41. book_2136 is inside dining_room_41. food_cereal_2087 is inside dining_room_41. food_jam_2098 is inside dining_room_41. box_2038 is inside dining_room_41. cup_2049 is inside dining_room_41. dining_room_41 is close to ironing_board_2144. clothes_hat_2117 is inside dining_room_41. detergent_2011 is inside dining_room_41. cupboard_118 is inside dining_room_41. pillow_107 is inside dining_room_41. washing_machine_2079 is inside dining_room_41. ceiling_58 is inside dining_room_41. wall_69 is inside dining_room_41. food_salt_2041 is inside dining_room_41. ceilinglamp_137 is inside dining_room_41. trashcan_99 is inside dining_room_41. food_dessert_2090 is inside dining_room_41. floor_50 is inside dining_room_41. door_61 is inside dining_room_41. clothes_shirt_2158 is inside dining_room_41. food_salt_2109 is inside dining_room_41. drawing_110 is inside dining_room_41. floor_42 is inside dining_room_41. food_bacon_2082 is inside dining_room_41. food_fish_2093 is inside dining_room_41. powersocket_72 is inside dining_room_41. fork_2150 is inside dining_room_41. walllamp_140 is inside dining_room_41. dishwasher_129 is inside dining_room_41. food_noodles_2101 is inside dining_room_41. food_turkey_2112 is inside dining_room_41. piano_bench_2006 is inside dining_room_41. bowl_2140 is inside dining_room_41. mat_102 is inside dining_room_41. wall_64 is inside dining_room_41. ceiling_53 is inside dining_room_41. clothes_socks_2159 is inside dining_room_41. faucet_121 is inside dining_room_41. toaster_132 is inside dining_room_41. cutting_board_2123 is inside dining_room_41. kitchen_counter_122 is inside dining_room_41. envelope_2055 is inside dining_room_41. ceiling_56 is inside dining_room_41. food_cake_2085 is inside dining_room_41. floor_45 is inside dining_room_41. bench_113 is inside dining_room_41. bowl_2142 is inside dining_room_41. spectacles_2153 is inside dining_room_41. food_onion_2104 is inside dining_room_41. milk_2115 is inside dining_room_41. food_peanut_butter_2077 is inside dining_room_41. tea_2066 is inside dining_room_41. cup_2134 is inside dining_room_41. lighter_2039 is inside dining_room_41. microwave_135 is inside dining_room_41. bookshelf_124 is inside dining_room_41. door_61 is between dining_room_41. food_hamburger_2096 is inside dining_room_41. food_potato_2107 is inside dining_room_41. food_food_2001 is inside dining_room_41. stove_2135 is inside dining_room_41. check_2058 is inside dining_room_41. floor_48 is inside dining_room_41. soap_2126 is inside dining_room_41. food_onion_2009 is inside dining_room_41. fryingpan_2154 is inside dining_room_41. tvstand_116 is inside dining_room_41. oven_127 is inside dining_room_41. pillow_105 is inside dining_room_41. food_cheese_2088 is inside dining_room_41. wall_67 is inside dining_room_41. pot_78 is inside dining_room_41. clothes_gloves_2118 is inside dining_room_41. dining_room_41 is CLEAN.
##############################
From agent.py
walk_executor(bedroom_162)

##############################
From agent.py
obs(bedroom_162, Identify the room)
Get this information:  ceiling_185 is inside bedroom_162. wall_174 is inside bedroom_162. scrabble_2031 is inside bedroom_162. curtain_204 is inside bedroom_162. stereo_2050 is inside bedroom_162. wall_177 is inside bedroom_162. tea_bag_2023 is inside bedroom_162. wall_176 is inside bedroom_162. after_shave_2042 is inside bedroom_162. wall_179 is inside bedroom_162. pillow_207 is inside bedroom_162. laser_pointer_2034 is inside bedroom_162. floor_169 is inside bedroom_162. clothes_underwear_2121 is inside bedroom_162. ceilinglamp_237 is inside bedroom_162. table_199 is inside bedroom_162. cpuscreen_210 is inside bedroom_162. ceiling_188 is inside bedroom_162. floor_172 is inside bedroom_162. envelope_2018 is inside bedroom_162. floor_171 is inside bedroom_162. check_2026 is inside bedroom_162. drawing_201 is inside bedroom_162. character_240 is inside bedroom_162. floor_163 is inside bedroom_162. drawing_202 is inside bedroom_162. floor_164 is inside bedroom_162. clothes_dress_2116 is inside bedroom_162. chair_194 is inside bedroom_162. ceiling_183 is inside bedroom_162. clothes_jacket_2119 is inside bedroom_162. mouse_213 is inside bedroom_162. chessboard_2070 is inside bedroom_162. floor_166 is inside bedroom_162. bookshelf_196 is inside bedroom_162. after_shave_2051 is inside bedroom_162. ceiling_186 is inside bedroom_162. bed_197 is inside bedroom_162. floor_167 is inside bedroom_162. ceiling_189 is inside bedroom_162. wall_178 is inside bedroom_162. pillow_208 is inside bedroom_162. phone_2016 is inside bedroom_162. wall_180 is inside bedroom_162. window_191 is inside bedroom_162. photoframe_219 is inside bedroom_162. ceiling_181 is inside bedroom_162. diary_2008 is inside bedroom_162. tablelamp_238 is inside bedroom_162. filing_cabinet_200 is inside bedroom_162. keyboard_211 is inside bedroom_162. wall_173 is inside bedroom_162. nightstand_192 is inside bedroom_162. mat_203 is inside bedroom_162. novel_2060 is inside bedroom_162. wooden_spoon_2000 is inside bedroom_162. wall_175 is inside bedroom_162. mousepad_214 is inside bedroom_162. cd_2030 is inside bedroom_162. chair_2003 is inside bedroom_162. curtain_205 is inside bedroom_162. curtain_206 is inside bedroom_162. nightstand_195 is inside bedroom_162. rag_2052 is inside bedroom_162. floor_168 is inside bedroom_162. clothes_scarf_2120 is inside bedroom_162. check_2071 is inside bedroom_162. ceiling_187 is inside bedroom_162. couch_198 is inside bedroom_162. shoe_rack_2044 is inside bedroom_162. food_food_2074 is inside bedroom_162. floor_170 is inside bedroom_162. rag_2025 is inside bedroom_162. tablelamp_239 is inside bedroom_162. doorjamb_190 is inside bedroom_162. homework_2047 is inside bedroom_162. computer_209 is inside bedroom_162. ceiling_182 is inside bedroom_162. instrument_guitar_2028 is inside bedroom_162. door_61 is between bedroom_162. floor_165 is inside bedroom_162. desk_193 is inside bedroom_162. ceiling_184 is inside bedroom_162. light_212 is inside bedroom_162. bedroom_162 is CLEAN.
##############################
From agent.py
walk_executor(home_office_241)

##############################
From agent.py
obs(home_office_241, Identify the room)
Get this information:  cat_2069 is inside home_office_241. ceiling_253 is inside home_office_241. wall_242 is inside home_office_241. desk_272 is inside home_office_241. cd_player_2129 is inside home_office_241. floor_264 is inside home_office_241. hanger_294 is inside home_office_241. light_283 is inside home_office_241. ceiling_256 is inside home_office_241. wall_245 is inside home_office_241. bookshelf_275 is inside home_office_241. pillow_286 is inside home_office_241. wall_248 is inside home_office_241. walllamp_305 is inside home_office_241. floor_267 is inside home_office_241. remote_control_2124 is inside home_office_241. check_2075 is inside home_office_241. keyboard_278 is inside home_office_241. curtain_289 is inside home_office_241. character_240 is inside home_office_241. doorjamb_308 is inside home_office_241. floor_259 is inside home_office_241. table_270 is inside home_office_241. television_281 is inside home_office_241. wall_243 is inside home_office_241. headset_2146 is inside home_office_241. ceiling_251 is inside home_office_241. floor_262 is inside home_office_241. door_62 is between home_office_241. brush_2002 is inside home_office_241. mouse_280 is inside home_office_241. stamp_2043 is inside home_office_241. tvstand_273 is inside home_office_241. hanger_292 is inside home_office_241. ceilinglamp_303 is inside home_office_241. floor_265 is inside home_office_241. ceiling_254 is inside home_office_241. mat_284 is inside home_office_241. dvd_player_2130 is inside home_office_241. wall_246 is inside home_office_241. walllamp_306 is inside home_office_241. ceiling_257 is inside home_office_241. floor_268 is inside home_office_241. pillow_287 is inside home_office_241. computer_276 is inside home_office_241. wall_249 is inside home_office_241. floor_260 is inside home_office_241. mousepad_279 is inside home_office_241. blow_dryer_2057 is inside home_office_241. shampoo_2019 is inside home_office_241. curtain_290 is inside home_office_241. stamp_2022 is inside home_office_241. ceiling_252 is inside home_office_241. doorjamb_309 is inside home_office_241. powersocket_282 is inside home_office_241. hanger_293 is inside home_office_241. chair_271 is inside home_office_241. wall_244 is inside home_office_241. phone_2147 is inside home_office_241. floor_263 is inside home_office_241. dresser_274 is inside home_office_241. headset_2131 is inside home_office_241. pencil_2014 is inside home_office_241. ceiling_255 is inside home_office_241. shoes_2033 is inside home_office_241. orchid_285 is inside home_office_241. walllamp_304 is inside home_office_241. clothes_pants_2036 is inside home_office_241. floor_266 is inside home_office_241. cpuscreen_277 is inside home_office_241. walllamp_307 is inside home_office_241. phone_2017 is inside home_office_241. couch_269 is inside home_office_241. ceiling_258 is inside home_office_241. wall_247 is inside home_office_241. drawing_288 is inside home_office_241. cd_2145 is inside home_office_241. ceiling_250 is inside home_office_241. window_310 is inside home_office_241. pencil_2020 is inside home_office_241. floor_261 is inside home_office_241. curtain_291 is inside home_office_241. home_office_241 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_light_in_room(room: item):
    # Check whether there is a light inside the room
    symbol has_light=exists light: item : (is_light(light) and inside(light, room))
    return has_light

behavior walk_to_room_and_ensure_light_on(room: item):
    body:
        if not is_light_in_room(room):
            walk_to(room)
            # Approach the room

        foreach light: item:
            # Ensure at least one light inside the room is on
            if is_light(light) and inside(light, room) and is_off(light):
                switch_on(light)
                break # Break after turning on one light

behavior ensure_light_in_all_rooms():
    body:
        # Check all identified rooms and ensure lights are on
        foreach room: item:
            if is_bathroom(room) or is_dining_room(room) or is_bedroom(room) or is_home_office(room):
                walk_to_room_and_ensure_light_on(room)

behavior __goal__():
    body:
        ensure_light_in_all_rooms()
        # Ensure there is at least one light on in every identified room

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_light_in_room(light:item, room:item):
    # Function to check if a light is inside a specified room
    return inside(light, room)

behavior turn_on_light(light:item):
    body:
        if not is_on(light) and has_switch(light):
            switch_on(light)
            # Turn on the light if it is off and has a switch

behavior ensure_light_in_room(room:item):
    body:
        bind light: item where:
            is_light(light) and is_light_in_room(light, room)
        # Select a light present in the room

        turn_on_light(light)
        # Turn on a light in the room if it is off

behavior __goal__():
    body:
        bind bathroom_1: item where:
            id[bathroom_1] == 1 and is_bathroom(bathroom_1)
        # Select bathroom_1 as a bathroom

        bind dining_room_41: item where:
            id[dining_room_41] == 41 and is_dining_room(dining_room_41)
        # Select dining_room_41 as a dining room

        bind bedroom_162: item where:
            id[bedroom_162] == 162 and is_bedroom(bedroom_162)
        # Select bedroom_162 as a bedroom

        bind home_office_241: item where:
            id[home_office_241] == 241 and is_home_office(home_office_241)
        # Select home_office_241 as a home office

        ensure_light_in_room(bathroom_1)
        ensure_light_in_room(dining_room_41)
        ensure_light_in_room(bedroom_162)
        ensure_light_in_room(home_office_241)
        # Ensure there is at least one light on in each room

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_blow_dryer_2057_around_bathroom_counter_18(blow_dryer:item):
    goal: not unknown(blow_dryer)
    body:
        assert is_blow_dryer(blow_dryer)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(blow_dryer,bathroom_counter_instance)
        else:
            exp(blow_dryer,bathroom_counter_instance)
    eff:
        unknown[blow_dryer]=False
        close[blow_dryer,bathroom_counter_instance]=True
        close[bathroom_counter_instance,blow_dryer]=True
    

#exp_behavior_end

#goal_representation
 
def is_light_in_room_on(room: item):
    # Function to check if there is at least one light on in a room
    symbol light_on=exists light: item : (is_light(light) and is_on(light) and inside(light, room))
    return light_on

def has_light(room: item):
    # Function to check if there is a light in a specific room
    symbol has_light=exists light: item : (is_light(light) and inside(light, room))
    return has_light

behavior ensure_light_on_in_room(room:item):
    body:
        if has_light(room) and not is_light_in_room_on(room):
            # Check all the lights in the room
            foreach light: item:
                if is_light(light) and inside(light, room) and not is_on(light):
                    switch_on(light) # Switch on light to ensure its on

behavior __goal__():
    body:
        foreach room: item:
            if is_bathroom(room) or is_dining_room(room) or is_bedroom(room) or is_home_office(room):
                ensure_light_on_in_room(room)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_light_in_room_on(room: item):
    # Function to check if there is at least one light on in a room
    symbol light_on=exists light: item : (is_light(light) and is_on(light) and inside(light, room))
    return light_on

def has_light(room: item):
    # Function to check if there is a light in a specific room
    symbol has_light=exists light: item : (is_light(light) and inside(light, room))
    return has_light

behavior ensure_light_on_in_room(room:item):
    body:
        if has_light(room) and not is_light_in_room_on(room):
            # Check all the lights in the room
            foreach light: item:
                if is_light(light) and inside(light, room) and not is_on(light):
                    switch_on(light) # Switch on light to ensure its on

behavior __goal__():
    body:
        foreach room: item:
            if is_bathroom(room) or is_dining_room(room) or is_bedroom(room) or is_home_office(room):
                ensure_light_on_in_room(room)

##############################
From agent.py-> find a plan in act()
walk_executor(light_39)switchon_executor(light_39)walk_executor(light_73)switchon_executor(light_73)walk_executor(light_212)switchon_executor(light_212)walk_executor(light_283)switchon_executor(light_283)
##############################
From agent.py
walk_executor(light_39)
Robot find: Robot is close to the light_39. 
##############################
From agent.py
switchon_executor(light_39)
Robot find: Robot is close to the light_39. light_39 is turned on. 
##############################
From agent.py
walk_executor(light_73)
Robot find: Robot is close to the light_73. 
##############################
From agent.py
switchon_executor(light_73)
Robot find: Robot is close to the light_73. light_73 is turned on. 
##############################
From agent.py
walk_executor(light_212)
Robot find: drawing_202, Robot is close to the light_212. 
##############################
From agent.py
switchon_executor(light_212)
Robot find: Robot is close to the light_212. light_212 is turned on. 
##############################
From agent.py
walk_executor(light_283)
Robot find: mat_284, Robot is close to the light_283. 
##############################
From agent.py
switchon_executor(light_283)
Robot find: Robot is close to the light_283. light_283 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make sure there is at least one light on in every room.
Action History:
['walk_executor(bathroom_1)', 'walk_executor(dining_room_41)', 'walk_executor(bedroom_162)', 'walk_executor(home_office_241)', 'walk_executor(light_39)', 'switchon_executor(light_39)', 'walk_executor(light_73)', 'switchon_executor(light_73)', 'walk_executor(light_212)', 'switchon_executor(light_212)', 'walk_executor(light_283)', 'switchon_executor(light_283)']
Time info:
Time consume: 103 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 20
goal generate times: 4
goal correct times: 0
action_num: 12

Task complete rate:
1
Scene_id: 1
##############################
