From agent.py
Reset goals: The sub-goals are: 
['1. Get a cup of water.', '2. Slice the kiwi and add it into the cup.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2132_around_table_270(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==270
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(cup,table_instance)
        else:
            exp(cup,table_instance)
    eff:
        unknown[cup]=False
        close[cup,table_instance]=True
        close[table_instance,cup]=True
    

behavior find_headset_2131_around_computer_276(headset:item):
    goal: not unknown(headset)
    body:
        assert is_headset(headset)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==276
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(headset,computer_instance)
        else:
            exp(headset,computer_instance)
    eff:
        unknown[headset]=False
        close[headset,computer_instance]=True
        close[computer_instance,headset]=True
    

#exp_behavior_end

#goal_representation
 
behavior get_a_cup_with_water(cup: item):
    body:
        if not has_water(cup):
            get_water(cup)  # Fill the cup with water if it doesnt have any

behavior find_and_grab_cup():
    body:
        bind cup: item where:
            is_cup(cup)
        walk_to(cup)  # Move to the location of the cup
        if not inhand(cup):
            grab(cup)  # Grab the cup

behavior __goal__():
    body:
        find_and_grab_cup()
        # Ensure the cup is grabbed
        bind cup: item where:
            is_cup(cup) and inhand(cup)
        get_a_cup_with_water(cup)
        # Fill the grabbed cup with water

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior get_a_cup_with_water(cup: item):
    body:
        if not has_water(cup):
            get_water(cup)  # Fill the cup with water if it doesnt have any

behavior find_and_grab_cup():
    body:
        bind cup: item where:
            is_cup(cup)
        walk_to(cup)  # Move to the location of the cup
        if not inhand(cup):
            grab(cup)  # Grab the cup

behavior __goal__():
    body:
        find_and_grab_cup()
        # Ensure the cup is grabbed
        bind cup: item where:
            is_cup(cup) and inhand(cup)
        get_a_cup_with_water(cup)
        # Fill the grabbed cup with water

##############################
From agent.py-> find a plan in act()
walk_executor(table_270)exp(cup_2132, table_270)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(table_270)
Robot find: shoes_2033, shampoo_2019, pillow_286, pencil_2014, phone_2017, pillow_287, drawing_288, brush_2002, Robot is close to the couch_269. Robot is close to the table_270. 
##############################
From agent.py
exp(cup_2132, table_270)
Fail to find cup_2132 around table_270. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(cup_2132, kitchen_counter_119)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_78, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(cup_2132, kitchen_counter_119)
Fail to find cup_2132 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(cup_2132, kitchen_counter_122)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, fryingpan_2154, Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(cup_2132, kitchen_counter_122)
Fail to find cup_2132 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(cup_2132, cupboard_118)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(cup_2132, cupboard_118)
Fail to find cup_2132 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(cup_2132, cupboard_117)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(cup_2132, cupboard_117)
Fail to find cup_2132 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(cup_2132, fridge_126)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2132 ?
Answer: Go to dining_room_41. Look for table_114. cup_2132 is on top of table_114.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_41. Look for table_114. cup_2132 is on top of table_114.

The actions you have taken:
Action 1: Walk to table_270.
Action 2: look for cup_2132 around table_270.
Action 3: Walk to kitchen_counter_119.
Action 4: look for cup_2132 around kitchen_counter_119.
Action 5: Walk to kitchen_counter_122.
Action 6: look for cup_2132 around kitchen_counter_122.
Action 7: Walk to cupboard_118.
Action 8: Open cupboard_118.
Action 9: look for cup_2132 around cupboard_118.
Action 10: Walk to cupboard_117.
Action 11: look for cup_2132 around cupboard_117.
Action 12: Walk to fridge_126.
Action 13: Switch off fridge_126.
Action 14: Open fridge_126.

##############################
From agent.py
exp(cup_2132, fridge_126)
Fail to find cup_2132 around fridge_126. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(cup_2132, table_114)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(table_114)
Robot find: mat_102, cup_2049, pillow_103, pillow_104, pillow_105, pillow_106, lighter_2004, lighter_2039, box_2038, clothes_hat_2117, milk_2115, cup_2134, check_2058, drawing_110, drawing_111, clothes_gloves_2118, cup_2132, food_bread_2084, dry_pasta_2114, knife_2122, cup_2133, table_cloth_2005, food_food_2021, Robot is close to the table_114. Robot is close to the mat_102. 
##############################
From agent.py
exp(cup_2132, table_114)
Find cup_2132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(cup_2132)
Robot find: Robot is close to the table_114. Robot is close to the cup_2132. 
##############################
From agent.py
grab_executor(cup_2132)
Robot find: Robot is close to the table_114. Robot is close to the cup_2132. Grabbing cup_2132 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot find: mat_32, phone_2029, drawing_33, Robot is close to the cup_2132. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchon_executor(faucet_20)
Robot find: Robot is close to the cup_2132. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot find: Robot is close to the cup_2132. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_kiwi_2054_around_food_food_1000(food_kiwi:item):
    goal: not unknown(food_kiwi)
    body:
        assert is_food_kiwi(food_kiwi)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==1000
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_kiwi,food_food_instance)
        else:
            exp(food_kiwi,food_food_instance)
    eff:
        unknown[food_kiwi]=False
        close[food_kiwi,food_food_instance]=True
        close[food_food_instance,food_kiwi]=True
    

behavior find_knife_2122_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
def locate_kiwi_on_kitchen_counter(kitchen_counter:item):
    symbol has_kiwi=exists o: item : (is_food_kiwi(o) and on(o, kitchen_counter))
    return has_kiwi

behavior grab_kiwi(kiwi:item):
    body:
        if not inhand(kiwi):
            grab(kiwi)

behavior slice_kiwi(kiwi:item):
    body:
        if not cut(kiwi):
            cuts(kiwi)

behavior add_sliced_kiwi_to_cup(kiwi:item, cup:item):
    body:
        if cut(kiwi) and close_char(char, cup):
            if not inhand(kiwi):
                grab(kiwi)
            put_inside(kiwi, cup)

behavior __goal__():
    body:
        bind kitchen_counter: item where:
            is_kitchen_counter(kitchen_counter)

        if not locate_kiwi_on_kitchen_counter(kitchen_counter):
            observe(kitchen_counter,"Check if there is a kiwi on the kitchen counter")
        
        bind kiwi: item where:
            is_food_kiwi(kiwi) and on(kiwi, kitchen_counter)

        walk_to(kiwi)
        
        grab_kiwi(kiwi)
        
        slice_kiwi(kiwi)
        
        bind cup: item where:
            is_cup(cup) and id[cup] == 2132
        
        walk_to(cup)
        
        add_sliced_kiwi_to_cup(kiwi, cup)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_kiwi_2054_around_food_food_1000(food_kiwi:item):
    goal: not unknown(food_kiwi)
    body:
        assert is_food_kiwi(food_kiwi)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==1000
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_kiwi,food_food_instance)
        else:
            exp(food_kiwi,food_food_instance)
    eff:
        unknown[food_kiwi]=False
        close[food_kiwi,food_food_instance]=True
        close[food_food_instance,food_kiwi]=True
    

#exp_behavior_end

#goal_representation
 
behavior cut_kiwi_and_add_to_cup(kiwi: item, cup: item):
    body:
        if not cut(kiwi):
            cuts(kiwi)
        if not inside(kiwi, cup):
            put_inside(kiwi, cup)

behavior __goal__():
    body:
        bind kiwi: item where:
            is_food_kiwi(kiwi)
        # Select a kiwi item

        bind cup: item where:
            is_cup(cup) and has_water(cup)
        # Select a cup that has water

        cut_kiwi_and_add_to_cup(kiwi, cup)
        # Cut the kiwi and then add it into the cup that has water

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior cut_kiwi_and_add_to_cup(kiwi: item, cup: item):
    body:
        if not cut(kiwi):
            cuts(kiwi)
        if not inside(kiwi, cup):
            put_inside(kiwi, cup)

behavior __goal__():
    body:
        bind kiwi: item where:
            is_food_kiwi(kiwi)
        # Select a kiwi item

        bind cup: item where:
            is_cup(cup) and has_water(cup)
        # Select a cup that has water

        cut_kiwi_and_add_to_cup(kiwi, cup)
        # Cut the kiwi and then add it into the cup that has water

##############################
From agent.py-> find a plan in act()
walk_executor(food_food_1000)exp(food_kiwi_2054, food_food_1000)walk_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cutting_board_2123)put_executor(food_kiwi_2054, cutting_board_2123)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_kiwi_2054)cut_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cup_2132)putin_executor(food_kiwi_2054, cup_2132)
##############################
From agent.py
walk_executor(food_food_1000)
Robot find: Robot is close to the cup_2132. Robot is close to the food_food_1000. 
##############################
From agent.py
exp(food_kiwi_2054, food_food_1000)
Fail to find food_kiwi_2054 around food_food_1000. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_food_2021)exp(food_kiwi_2054, food_food_2021)walk_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cutting_board_2123)put_executor(food_kiwi_2054, cutting_board_2123)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_kiwi_2054)cut_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cup_2132)putin_executor(food_kiwi_2054, cup_2132)
##############################
From agent.py
walk_executor(food_food_2021)
Robot find: Robot is close to the cup_2132. Robot is close to the table_114. Robot is close to the food_food_2021. 
##############################
From agent.py
exp(food_kiwi_2054, food_food_2021)
Fail to find food_kiwi_2054 around food_food_2021. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(food_kiwi_2054, kitchen_counter_123)walk_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cutting_board_2123)put_executor(food_kiwi_2054, cutting_board_2123)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_kiwi_2054)cut_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cup_2132)putin_executor(food_kiwi_2054, cup_2132)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Robot find: tray_2068, oil_2149, knife_2035, food_kiwi_2054, food_orange_2027, Robot is close to the cup_2132. Robot is close to the kitchen_counter_123. 
##############################
From agent.py
exp(food_kiwi_2054, kitchen_counter_123)
Find food_kiwi_2054. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cutting_board_2123)put_executor(food_kiwi_2054, cutting_board_2123)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_kiwi_2054)cut_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cup_2132)putin_executor(food_kiwi_2054, cup_2132)
##############################
From agent.py
walk_executor(food_kiwi_2054)
Robot find: Robot is close to the cup_2132. Robot is close to the kitchen_counter_123. Robot is close to the food_kiwi_2054. 
##############################
From agent.py
grab_executor(food_kiwi_2054)
Robot find: Robot is close to the cup_2132. Robot is close to the kitchen_counter_123. Robot is close to the food_kiwi_2054. Grabbing food_kiwi_2054 by left hand. 
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot find: Robot is close to the cup_2132. Robot is close to the food_kiwi_2054. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_kiwi_2054, cutting_board_2123)
Robot find: Robot is close to the cup_2132. Robot is close to the food_kiwi_2054. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. cutting_board_2123 is close food_kiwi_2054. food_kiwi_2054 is close cutting_board_2123. food_kiwi_2054 is on cutting_board_2123. food_kiwi_2054 released by left hand. 
##############################
From agent.py
walk_executor(knife_2122)
Robot find: Robot is close to the cup_2132. Robot is close to the knife_2122. Robot is close to the table_114. 
##############################
From agent.py
grab_executor(knife_2122)
Robot find: Robot is close to the cup_2132. Robot is close to the knife_2122. Robot is close to the table_114. Grabbing knife_2122 by left hand. 
##############################
From agent.py
walk_executor(food_kiwi_2054)
Robot find: Robot is close to the cup_2132. Robot is close to the knife_2122. Robot is close to the cutting_board_2123. Robot is close to the food_kiwi_2054. 
##############################
From agent.py
cut_executor(food_kiwi_2054)
Robot find: Robot is close to the cup_2132. Robot is close to the knife_2122. Robot is close to the cutting_board_2123. Robot is close to the food_kiwi_2054. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_mouse_280_around_mousepad_279(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind mousepad_instance:item where:
            is_mousepad(mousepad_instance) and id[mousepad_instance]==279
        achieve close_char(char,mousepad_instance)
        if can_open(mousepad_instance):
            achieve_once open(mousepad_instance)
            exp(mouse,mousepad_instance)
        else:
            exp(mouse,mousepad_instance)
    eff:
        unknown[mouse]=False
        close[mouse,mousepad_instance]=True
        close[mousepad_instance,mouse]=True
    

behavior find_food_cheese_2072_around_oven_127(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==127
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_cheese,oven_instance)
        else:
            exp(food_cheese,oven_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,oven_instance]=True
        close[oven_instance,food_cheese]=True
    

#exp_behavior_end

#goal_representation
 
behavior slice_kiwi_and_add_to_cup(kiwi:item, cup:item):
    body:
        if not cut(kiwi):
            cuts(kiwi)
            # Slice the kiwi

        if not on(kiwi, cup):
            put_on(kiwi, cup)
            # Add the sliced kiwi into the cup with water

behavior __goal__():
    body:
        bind kiwi: item where:
            is_food_kiwi(kiwi)
        # Select the kiwi to be sliced and added

        bind cup: item where:
            is_cup(cup) and id[cup] == 2132
        # Select the specific cup with ID 2132

        walk_to(kiwi)
        # Approach the kiwi to slice it
        
        slice_kiwi_and_add_to_cup(kiwi, cup)
        # Slice the kiwi and add it into the cup

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior slice_kiwi_and_add_to_cup(kiwi:item, cup:item):
    body:
        if not cut(kiwi):
            cuts(kiwi)
            # Slice the kiwi

        if not on(kiwi, cup):
            put_on(kiwi, cup)
            # Add the sliced kiwi into the cup with water

behavior __goal__():
    body:
        bind kiwi: item where:
            is_food_kiwi(kiwi)
        # Select the kiwi to be sliced and added

        bind cup: item where:
            is_cup(cup) and id[cup] == 2132
        # Select the specific cup with ID 2132

        walk_to(kiwi)
        # Approach the kiwi to slice it
        
        slice_kiwi_and_add_to_cup(kiwi, cup)
        # Slice the kiwi and add it into the cup

##############################
From agent.py-> find a plan in act()
walk_executor(food_kiwi_2054)walk_executor(kitchen_counter_119)put_executor(knife_2122, kitchen_counter_119)walk_executor(food_kiwi_2054)grab_executor(food_kiwi_2054)walk_executor(cup_2132)put_executor(food_kiwi_2054, cup_2132)
##############################
From agent.py
walk_executor(food_kiwi_2054)
Robot find: Robot is close to the cup_2132. Robot is close to the knife_2122. Robot is close to the cutting_board_2123. Robot is close to the food_kiwi_2054. 
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: Robot is close to the cup_2132. Robot is close to the knife_2122. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(knife_2122, kitchen_counter_119)
Robot find: Robot is close to the cup_2132. Robot is close to the knife_2122. Robot is close to the kitchen_counter_119. kitchen_counter_119 is close knife_2122. knife_2122 is close kitchen_counter_119. knife_2122 is on kitchen_counter_119. knife_2122 released by left hand. 
##############################
From agent.py
walk_executor(food_kiwi_2054)
Robot find: Robot is close to the cup_2132. Robot is close to the cutting_board_2123. Robot is close to the food_kiwi_2054. 
##############################
From agent.py
grab_executor(food_kiwi_2054)
Robot find: Robot is close to the cup_2132. Robot is close to the cutting_board_2123. Robot is close to the food_kiwi_2054. Grabbing food_kiwi_2054 by left hand. 
##############################
From agent.py
walk_executor(cup_2132)
Robot find: Robot is close to the cup_2132. Robot is close to the food_kiwi_2054. 
##############################
From agent.py
put_executor(food_kiwi_2054, cup_2132)
Robot find: Robot is close to the cup_2132. Robot is close to the food_kiwi_2054. cup_2132 is close food_kiwi_2054. food_kiwi_2054 is close cup_2132. food_kiwi_2054 is on cup_2132. food_kiwi_2054 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Get a cup of water and add some sliced kiwi inside.
Action History:
['walk_executor(table_270)', 'walk_executor(kitchen_counter_119)', 'walk_executor(kitchen_counter_122)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'walk_executor(cupboard_117)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'walk_executor(table_114)', 'walk_executor(cup_2132)', 'grab_executor(cup_2132)', 'walk_executor(faucet_20)', 'switchon_executor(faucet_20)', 'switchoff_executor(faucet_20)', 'walk_executor(food_food_1000)', 'walk_executor(food_food_2021)', 'walk_executor(kitchen_counter_123)', 'walk_executor(food_kiwi_2054)', 'grab_executor(food_kiwi_2054)', 'walk_executor(cutting_board_2123)', 'put_executor(food_kiwi_2054, cutting_board_2123)', 'walk_executor(knife_2122)', 'grab_executor(knife_2122)', 'walk_executor(food_kiwi_2054)', 'cut_executor(food_kiwi_2054)', 'grab_executor(food_kiwi_2054) (Failed)', 'walk_executor(food_kiwi_2054)', 'walk_executor(kitchen_counter_119)', 'put_executor(knife_2122, kitchen_counter_119)', 'walk_executor(food_kiwi_2054)', 'grab_executor(food_kiwi_2054)', 'walk_executor(cup_2132)', 'put_executor(food_kiwi_2054, cup_2132)']
Time info:
Time consume: 204 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 26
goal generate times: 4
goal correct times: 0
action_num: 34

Task complete rate:
Keystate: k1 - Requires: 2 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
