From agent.py
Reset goals: The sub-goals are: 
['Turn on the lights in the bedroom.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_remote_control_2081_around_nightstand_373(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==373
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(remote_control,nightstand_instance)
        else:
            exp(remote_control,nightstand_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,nightstand_instance]=True
        close[nightstand_instance,remote_control]=True
    

#exp_behavior_end

#goal_representation
 
def is_light_in_bedroom(light: item):
    # Check if the light is in the bedroom
    symbol in_bedroom = exists room: item : (is_bedroom(room) and inside(light, room))
    return in_bedroom

behavior turn_on_light(light: item):
    body:
        if not is_on(light):
            switch_on(light)
            # Turn on the light if it is off

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and is_light_in_bedroom(bedroom_light)
        # Select the light in the bedroom

        turn_on_light(bedroom_light)
        # Turn on the bedroom light

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_light_in_bedroom(light: item):
    # Check if the light is in the bedroom
    symbol in_bedroom = exists room: item : (is_bedroom(room) and inside(light, room))
    return in_bedroom

behavior turn_on_light(light: item):
    body:
        if not is_on(light):
            switch_on(light)
            # Turn on the light if it is off

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and is_light_in_bedroom(bedroom_light)
        # Select the light in the bedroom

        turn_on_light(bedroom_light)
        # Turn on the bedroom light

##############################
From agent.py-> find a plan in act()
walk_executor(light_258)switchon_executor(light_258)
##############################
From agent.py
walk_executor(light_258)
Robot find: drawing_238, Robot is close to the light_258. 
##############################
From agent.py
switchon_executor(light_258)
Robot find: Robot is close to the light_258. light_258 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Turn on the lights in the bedroom. Then turn on the lights in the bathroom.
Action History:
['walk_executor(light_258)', 'switchon_executor(light_258)']
Time info:
Time consume: 20 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 88
goal generate times: 1
goal correct times: 0
action_num: 2

Task complete rate:
Keystate: k1 - Requires: 2 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
