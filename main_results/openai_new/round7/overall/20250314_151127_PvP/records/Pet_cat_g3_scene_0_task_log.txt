From agent.py
Reset goals: The sub-goals are: 
['1. Prepare a bowl of water and place it on the table in the home office.', '2. Find the cat and put it on the table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2072_around_kitchen_counter_230(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

behavior find_chair_356_around_desk_357(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==357
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
def is_table_in_home_office(table: item):
    # Check if the table is inside the home office
    symbol inside_home_office = exists office: item : (is_home_office(office) and inside(table, office))
    return inside_home_office

behavior prepare_bowl_of_water(bowl: item):
    body:
        if not has_water(bowl):
            get_water(bowl)

behavior place_bowl_on_table(bowl: item, table: item):
    body:
        if not on(bowl, table):
            put_on(bowl, table)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl

        prepare_bowl_of_water(bowl)
        # Fill the bowl with water

        bind table: item where:
            is_table(table) and is_table_in_home_office(table)
        # Select a table in the home office

        place_bowl_on_table(bowl, table)
        # Place the bowl of water on the table in the home office

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_table_in_home_office(table: item):
    # Check if the table is inside the home office
    symbol inside_home_office = exists office: item : (is_home_office(office) and inside(table, office))
    return inside_home_office

behavior prepare_bowl_of_water(bowl: item):
    body:
        if not has_water(bowl):
            get_water(bowl)

behavior place_bowl_on_table(bowl: item, table: item):
    body:
        if not on(bowl, table):
            put_on(bowl, table)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl

        prepare_bowl_of_water(bowl)
        # Fill the bowl with water

        bind table: item where:
            is_table(table) and is_table_in_home_office(table)
        # Select a table in the home office

        place_bowl_on_table(bowl, table)
        # Place the bowl of water on the table in the home office

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)exp(bowl_2071, kitchen_counter_230)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(table_355)put_executor(bowl_2071, table_355)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the kitchen_counter_230. 
##############################
From agent.py
exp(bowl_2071, kitchen_counter_230)
Fail to find bowl_2071 around kitchen_counter_230. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_226)exp(bowl_2071, table_226)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(table_355)put_executor(bowl_2071, table_355)
##############################
From agent.py
walk_executor(table_226)
Robot find: bowl_2071, coffee_filter_2000, drawing_2003, bowl_2072, mat_236, fork_2080, fork_2081, mat_237, Robot is close to the table_226. 
##############################
From agent.py
exp(bowl_2071, table_226)
Find bowl_2071. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(table_355)put_executor(bowl_2071, table_355)
##############################
From agent.py
walk_executor(bowl_2071)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2071. 
##############################
From agent.py
grab_executor(bowl_2071)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2071. Grabbing bowl_2071 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: towel_rack_31, towel_rack_32, towel_rack_34, Robot is close to the bowl_2071. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the bowl_2071. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the bowl_2071. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py
walk_executor(table_355)
Robot find: mat_401, headset_2062, spectacles_2082, pillow_406, remote_control_2052, clothes_jacket_2047, pillow_405, cat_2055, drawing_400, drawing_404, hairbrush_2002, vacuum_cleaner_2070, Robot is close to the bowl_2071. Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. 
##############################
From agent.py
put_executor(bowl_2071, table_355)
Robot find: Robot is close to the bowl_2071. Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. table_355 is close bowl_2071. bowl_2071 is close table_355. bowl_2071 is on table_355. bowl_2071 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to place the bowl of water on the table in the home office. The current location of the bowl is on table_355. You must verify that this table is inside the home office or move the bowl to a table that is in the home office.
##############################
From agent.py
Human Instruction: You need to place the bowl of water on the table in the home office. The current location of the bowl is on table_355. You must verify that this table is inside the home office or move the bowl to a table that is in the home office.

The actions you have taken:
Action 1: Walk to kitchen_counter_230.
Action 2: look for bowl_2071 around kitchen_counter_230.
Action 3: Walk to table_226.
Action 4: look for bowl_2071 around table_226.
Action 5: Walk to bowl_2071.
Action 6: Grab bowl_2071.
Action 7: Walk to faucet_43.
Action 8: Switch on faucet_43.
Action 9: Switch off faucet_43.
Action 10: Walk to table_355.
Action 11: Put bowl_2071 on table_355.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_oatmeal_2030_around_fridge_289(food_oatmeal:item):
    goal: not unknown(food_oatmeal)
    body:
        assert is_food_oatmeal(food_oatmeal)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_oatmeal,fridge_instance)
        else:
            exp(food_oatmeal,fridge_instance)
    eff:
        unknown[food_oatmeal]=False
        close[food_oatmeal,fridge_instance]=True
        close[fridge_instance,food_oatmeal]=True
    

#exp_behavior_end

#goal_representation
 
def is_table_in_home_office(table: item):
    # Check if the table is inside the home office
    symbol in_home_office = exists room: item : (is_home_office(room) and inside(table, room))
    return in_home_office

behavior prepare_bowl_with_water_and_place_on_table(bowl:item, table:item):
    body:
        if not inhand(bowl):
            grab(bowl)
        if not has_water(bowl):
            walk_to(bowl)
            get_water(bowl)
        if not on(bowl, table):
            walk_to(table)
            put_on(bowl, table)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2071
        # Select the bowl with id 2071
        
        bind table: item where:
            is_table(table) and id[table] == 355
        # Select the table with id 355

        observe(table, "Check if the table is the home office table")
        if not is_table_in_home_office(table):
            walk_to(table)
            observe(table, "Confirm the table is in the home office")

        prepare_bowl_with_water_and_place_on_table(bowl, table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_table_in_home_office(table: item):
    # Check if the table is inside the home office
    symbol in_home_office = exists room: item : (is_home_office(room) and inside(table, room))
    return in_home_office

behavior prepare_bowl_with_water_and_place_on_table(bowl:item, table:item):
    body:
        if not inhand(bowl):
            grab(bowl)
        if not has_water(bowl):
            walk_to(bowl)
            get_water(bowl)
        if not on(bowl, table):
            walk_to(table)
            put_on(bowl, table)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2071
        # Select the bowl with id 2071
        
        bind table: item where:
            is_table(table) and id[table] == 355
        # Select the table with id 355

        observe(table, "Check if the table is the home office table")
        if not is_table_in_home_office(table):
            walk_to(table)
            observe(table, "Confirm the table is in the home office")

        prepare_bowl_with_water_and_place_on_table(bowl, table)

##############################
From agent.py-> find a plan in act()
obs(table_355, Check if the table is the home office table)grab_executor(bowl_2071)walk_executor(table_355)put_executor(bowl_2071, table_355)
##############################
From agent.py
obs(table_355, Check if the table is the home office table)
Get this information:  headset_2062 is on table_355. table_355 is close to couch_352. table_355 is close to tvstand_353. table_355 is close to spectacles_2082. table_355 is close to floor_321. table_355 is close to floor_323. table_355 is close to floor_324. table_355 is close to floor_322. table_355 is close to wall_333. table_355 is close to headset_2062. table_355 is close to mat_401. table_355 is close to pillow_406. table_355 is close to television_410. table_355 is close to character_65. table_355 is close to bowl_2071. table_355 is on mat_401. table_355 is inside couch_352. table_355 is inside home_office_319. bowl_2071 is on table_355. spectacles_2082 is on table_355. table_355 is facing drawing_400. table_355 is facing computer_417. table_355 is facing television_410. table_355 is facing drawing_404. table_355 is CLEAN.
##############################
From agent.py
grab_executor(bowl_2071)
Robot find: Robot is close to the bowl_2071. Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. Grabbing bowl_2071 by right hand. 
##############################
From agent.py
walk_executor(table_355)
Robot find: Robot is close to the bowl_2071. Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. 
##############################
From agent.py
put_executor(bowl_2071, table_355)
Robot find: Robot is close to the bowl_2071. Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. bowl_2071 is close table_355. bowl_2071 is on table_355. bowl_2071 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_356_around_desk_104(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==104
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
def is_table_in_home_office(table: item):
    # Check if the table is inside the home office
    symbol is_in_home_office = exists room: item : (is_home_office(room) and inside(table, room))
    return is_in_home_office

behavior find_cat_and_put_on_table(cat: item, table: item):
    body:
        walk_to(cat)
        if not inhand(cat):
            grab(cat)
        walk_to(table)
        if not on(cat, table):
            put_on(cat, table)

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat)
        # Select the cat

        bind home_office_table: item where:
            is_table(home_office_table) and is_table_in_home_office(home_office_table) and id[home_office_table] == 355
        # Select the table inside the home office with ID 355

        find_cat_and_put_on_table(cat, home_office_table)
        # Find the cat and place it on the table in the home office

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_table_in_home_office(table: item):
    # Check if the table is inside the home office
    symbol is_in_home_office = exists room: item : (is_home_office(room) and inside(table, room))
    return is_in_home_office

behavior find_cat_and_put_on_table(cat: item, table: item):
    body:
        walk_to(cat)
        if not inhand(cat):
            grab(cat)
        walk_to(table)
        if not on(cat, table):
            put_on(cat, table)

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat)
        # Select the cat

        bind home_office_table: item where:
            is_table(home_office_table) and is_table_in_home_office(home_office_table) and id[home_office_table] == 355
        # Select the table inside the home office with ID 355

        find_cat_and_put_on_table(cat, home_office_table)
        # Find the cat and place it on the table in the home office

##############################
From agent.py-> find a plan in act()
walk_executor(cat_2055)grab_executor(cat_2055)walk_executor(table_355)put_executor(cat_2055, table_355)
##############################
From agent.py
walk_executor(cat_2055)
Robot find: Robot is close to the couch_352. Robot is close to the cat_2055. 
##############################
From agent.py
grab_executor(cat_2055)
Robot find: Robot is close to the couch_352. Robot is close to the cat_2055. Grabbing cat_2055 by right hand. 
##############################
From agent.py
walk_executor(table_355)
Robot find: Robot is close to the couch_352. Robot is close to the cat_2055. Robot is close to the mat_401. Robot is close to the table_355. 
##############################
From agent.py
put_executor(cat_2055, table_355)
Robot find: Robot is close to the couch_352. Robot is close to the cat_2055. Robot is close to the mat_401. Robot is close to the table_355. table_355 is close cat_2055. cat_2055 is on table_355. cat_2055 is close table_355. cat_2055 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Prepare a bowl of water and put the bowl on the table in home office. Then find my cat put it on the table.
Action History:
['walk_executor(kitchen_counter_230)', 'walk_executor(table_226)', 'walk_executor(bowl_2071)', 'grab_executor(bowl_2071)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'switchoff_executor(faucet_43)', 'walk_executor(table_355)', 'put_executor(bowl_2071, table_355)', 'grab_executor(bowl_2071)', 'walk_executor(table_355)', 'put_executor(bowl_2071, table_355)', 'walk_executor(cat_2055)', 'grab_executor(cat_2055)', 'walk_executor(table_355)', 'put_executor(cat_2055, table_355)']
Time info:
Time consume: 101 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 161
goal generate times: 3
goal correct times: 0
action_num: 16

Task complete rate:
1
Scene_id: 0
##############################
