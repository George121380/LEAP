From agent.py
Reset goals: The sub-goals are: 
['1. Find and gather all ingredients needed for fried rice with egg, including rice and eggs.', '2. Cook the rice and eggs together in a pan.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_rice_2108_around_kitchen_counter_119(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_rice,kitchen_counter_instance)
        else:
            exp(food_rice,kitchen_counter_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_rice]=True
    

behavior find_food_egg_2092_around_fridge_126(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
 
def has_ingredient(ingredient: item):
    # Function to check if an ingredient is found
    return visited(ingredient)

behavior find_ingredient(ingredient: item):
    body:
        if not has_ingredient(ingredient):
            observe(ingredient, "Locate the ingredient")

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select rice from items

        bind egg: item where:
            is_food_egg(egg)
        # Select egg from items

        find_ingredient(rice)
        find_ingredient(egg)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_ingredient(ingredient: item):
    # Function to check if an ingredient is found
    return visited(ingredient)

behavior find_ingredient(ingredient: item):
    body:
        if not has_ingredient(ingredient):
            observe(ingredient, "Locate the ingredient")

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select rice from items

        bind egg: item where:
            is_food_egg(egg)
        # Select egg from items

        find_ingredient(rice)
        find_ingredient(egg)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(food_rice_2108, kitchen_counter_119)walk_executor(food_rice_2108)obs(food_rice_2108, Locate the ingredient)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_egg_2092, fridge_126)walk_executor(food_egg_2092)obs(food_egg_2092, Locate the ingredient)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_78, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(food_rice_2108, kitchen_counter_119)
Fail to find food_rice_2108 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2141)exp(food_rice_2108, bowl_2141)walk_executor(food_rice_2108)obs(food_rice_2108, Locate the ingredient)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_egg_2092, fridge_126)walk_executor(food_egg_2092)obs(food_egg_2092, Locate the ingredient)
##############################
From agent.py
walk_executor(bowl_2141)
Robot find: Robot is close to the kitchen_counter_119. Robot is close to the bowl_2141. 
##############################
From agent.py
exp(food_rice_2108, bowl_2141)
Fail to find food_rice_2108 around bowl_2141. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(food_rice_2108, cupboard_118)walk_executor(food_rice_2108)obs(food_rice_2108, Locate the ingredient)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_egg_2092, fridge_126)walk_executor(food_egg_2092)obs(food_egg_2092, Locate the ingredient)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(food_rice_2108, cupboard_118)
Fail to find food_rice_2108 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_rice_2108, fridge_126)walk_executor(food_rice_2108)obs(food_rice_2108, Locate the ingredient)walk_executor(fridge_126)exp(food_egg_2092, fridge_126)walk_executor(food_egg_2092)obs(food_egg_2092, Locate the ingredient)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_rice_2108, fridge_126)
Find food_rice_2108. 
##############################
From agent.py-> find a plan in act()
obs(food_rice_2108, Locate the ingredient)obs(food_egg_2092, Locate the ingredient)
##############################
From agent.py
obs(food_rice_2108, Locate the ingredient)
Get this information:  food_rice_2108 is inside dining_room_41. food_rice_2108 is inside fridge_126. food_rice_2108 is close to fridge_126. food_rice_2108 is close to character_240. food_rice_2108 is CLEAN.
##############################
From agent.py
obs(food_egg_2092, Locate the ingredient)
Get this information:  food_egg_2092 is inside dining_room_41. food_egg_2092 is inside fridge_126. food_egg_2092 is close to fridge_126. food_egg_2092 is close to character_240. food_egg_2092 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_dry_pasta_2114_around_cupboard_117(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(dry_pasta,cupboard_instance)
        else:
            exp(dry_pasta,cupboard_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,cupboard_instance]=True
        close[cupboard_instance,dry_pasta]=True
    

behavior find_pot_2138_around_pot_2138(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==2138
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(pot,pot_instance)
        else:
            exp(pot,pot_instance)
    eff:
        unknown[pot]=False
        close[pot,pot_instance]=True
        close[pot_instance,pot]=True
    

#exp_behavior_end

#goal_representation
 
def is_pot_with_food_on_stove(pot: item, stove: item):
    # Check if the pot with rice and eggs is on the stove
    symbol pot_on_stove = exists pot: item : (is_pot(pot) and on(pot, stove))
    return pot_on_stove

behavior place_pot_on_stove(pot: item, stove: item):
    body:
        if not on(pot, stove):
            put_on(pot, stove)

behavior cook_rice_and_eggs(stove: item, pot: item):
    body:
        place_pot_on_stove(pot, stove) # Ensure the pot is on the stove
        if is_off(stove) and has_switch(stove):
            switch_on(stove) # Turn on the stove

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot for cooking

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        if not is_pot_with_food_on_stove(pot, stove):
            cook_rice_and_eggs(stove, pot)
        # Cook rice and eggs

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2154_around_stove_2135(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2135
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_dry_pasta_2114_around_cupboard_117(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(dry_pasta,cupboard_instance)
        else:
            exp(dry_pasta,cupboard_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,cupboard_instance]=True
        close[cupboard_instance,dry_pasta]=True
    

#exp_behavior_end

#goal_representation
 
def is_rice_and_eggs_in_pan(pan: item, rice: item, eggs: item):
    # Check if rice and eggs are in the pan
    return inside(rice, pan) and inside(eggs, pan)

behavior cook_rice_and_eggs(pan: item, rice: item, eggs: item, stove: item):
    body:
        if not is_rice_and_eggs_in_pan(pan, rice, eggs):
            if not inhand(rice):
                grab(rice)
            put_inside(rice, pan)

            if not inhand(eggs):
                grab(eggs)
            put_inside(eggs, pan)
        
        if on(pan, stove) and is_off(stove):
            switch_on(stove)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select rice based on its category

        bind eggs: item where:
            is_food_egg(eggs)
        # Select eggs based on their category

        bind pan: item where:
            is_fryingpan(pan)
        # Select a frying pan to cook with

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        cook_rice_and_eggs(pan, rice, eggs, stove)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_rice_and_eggs_in_pan(pan: item, rice: item, eggs: item):
    # Check if rice and eggs are in the pan
    return inside(rice, pan) and inside(eggs, pan)

behavior cook_rice_and_eggs(pan: item, rice: item, eggs: item, stove: item):
    body:
        if not is_rice_and_eggs_in_pan(pan, rice, eggs):
            if not inhand(rice):
                grab(rice)
            put_inside(rice, pan)

            if not inhand(eggs):
                grab(eggs)
            put_inside(eggs, pan)
        
        if on(pan, stove) and is_off(stove):
            switch_on(stove)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select rice based on its category

        bind eggs: item where:
            is_food_egg(eggs)
        # Select eggs based on their category

        bind pan: item where:
            is_fryingpan(pan)
        # Select a frying pan to cook with

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        cook_rice_and_eggs(pan, rice, eggs, stove)

##############################
From agent.py-> find a plan in act()
grab_executor(food_rice_2108)walk_executor(stove_2135)open_executor(stove_2135)exp(fryingpan_2154, stove_2135)walk_executor(fryingpan_2154)putin_executor(food_rice_2108, fryingpan_2154)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(fryingpan_2154)putin_executor(food_egg_2092, fryingpan_2154)
##############################
From agent.py
grab_executor(food_rice_2108)
Robot find: Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. Grabbing food_rice_2108 by right hand. 
##############################
From agent.py
walk_executor(stove_2135)
Robot find: Robot is close to the food_rice_2108. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. 
##############################
From agent.py
open_executor(stove_2135)
Robot find: Robot is close to the food_rice_2108. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. stove_2135 is opened. 
##############################
From agent.py
exp(fryingpan_2154, stove_2135)
Fail to find fryingpan_2154 around stove_2135. 
##############################
From agent.py-> find a plan in act()
walk_executor(oven_127)open_executor(oven_127)exp(fryingpan_2154, oven_127)walk_executor(fryingpan_2154)putin_executor(food_rice_2108, fryingpan_2154)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(fryingpan_2154)putin_executor(food_egg_2092, fryingpan_2154)
##############################
From agent.py
walk_executor(oven_127)
Robot find: food_food_2064, Robot is close to the food_rice_2108. Robot is close to the oven_127. 
##############################
From agent.py
open_executor(oven_127)
Robot find: tray_128, food_cheese_2072, oil_2013, food_carrot_2015, Robot is close to the food_rice_2108. Robot is close to the tray_128. Robot is close to the food_cheese_2072. Robot is close to the oven_127. Robot is close to the oil_2013. Robot is close to the food_carrot_2015. oven_127 is opened. 
##############################
From agent.py
exp(fryingpan_2154, oven_127)
Fail to find fryingpan_2154 around oven_127. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_129)open_executor(dishwasher_129)exp(fryingpan_2154, dishwasher_129)walk_executor(fryingpan_2154)putin_executor(food_rice_2108, fryingpan_2154)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(fryingpan_2154)putin_executor(food_egg_2092, fryingpan_2154)
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the food_rice_2108. Robot is close to the dishwasher_129. 
##############################
From agent.py
open_executor(dishwasher_129)
Robot find: detergent_2011, measuring_cup_2012, Robot is close to the food_rice_2108. Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the measuring_cup_2012. dishwasher_129 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find fryingpan_2154 ?
Answer: The target item, fryingpan_2154, is located on kitchen_counter_122. You can find this kitchen counter inside dining_room_41.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item, fryingpan_2154, is located on kitchen_counter_122. You can find this kitchen counter inside dining_room_41.

The actions you have taken:
Action 1: Walk to kitchen_counter_119.
Action 2: look for food_rice_2108 around kitchen_counter_119.
Action 3: Walk to bowl_2141.
Action 4: look for food_rice_2108 around bowl_2141.
Action 5: Walk to cupboard_118.
Action 6: Open cupboard_118.
Action 7: look for food_rice_2108 around cupboard_118.
Action 8: Walk to fridge_126.
Action 9: Switch off fridge_126.
Action 10: Open fridge_126.
Action 11: look for food_rice_2108 around fridge_126.
Action 12: Observe around food_rice_2108 with the question of Locate the ingredient.
Action 13: Observe around food_egg_2092 with the question of Locate the ingredient.
Action 14: Grab food_rice_2108.
Action 15: Walk to stove_2135.
Action 16: Open stove_2135.
Action 17: look for fryingpan_2154 around stove_2135.
Action 18: Walk to oven_127.
Action 19: Open oven_127.
Action 20: look for fryingpan_2154 around oven_127.
Action 21: Walk to dishwasher_129.
Action 22: Open dishwasher_129.

##############################
From agent.py
exp(fryingpan_2154, dishwasher_129)
Fail to find fryingpan_2154 around dishwasher_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(fryingpan_2154, kitchen_counter_122)walk_executor(fryingpan_2154)putin_executor(food_rice_2108, fryingpan_2154)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(fryingpan_2154)putin_executor(food_egg_2092, fryingpan_2154)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, fryingpan_2154, Robot is close to the food_rice_2108. Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(fryingpan_2154, kitchen_counter_122)
Find fryingpan_2154. 
##############################
From agent.py-> find a plan in act()
walk_executor(fryingpan_2154)putin_executor(food_rice_2108, fryingpan_2154)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(fryingpan_2154)putin_executor(food_egg_2092, fryingpan_2154)
##############################
From agent.py
walk_executor(fryingpan_2154)
Robot find: Robot is close to the food_rice_2108. Robot is close to the kitchen_counter_122. Robot is close to the fryingpan_2154. 
##############################
From agent.py
putin_executor(food_rice_2108, fryingpan_2154)
Robot find: Robot is close to the food_rice_2108. Robot is close to the kitchen_counter_122. Robot is close to the fryingpan_2154. food_rice_2108 is inside fryingpan_2154. fryingpan_2154 is close food_rice_2108. food_rice_2108 is close fryingpan_2154. food_rice_2108 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2092)
Robot find: Robot is close to the food_egg_2092. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_egg_2092)
Robot find: Robot is close to the food_egg_2092. Robot is close to the fridge_126. Grabbing food_egg_2092 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2154)
Robot find: Robot is close to the food_egg_2092. Robot is close to the fryingpan_2154. Robot is close to the kitchen_counter_122. 
##############################
From agent.py
putin_executor(food_egg_2092, fryingpan_2154)
Robot find: Robot is close to the food_egg_2092. Robot is close to the fryingpan_2154. Robot is close to the kitchen_counter_122. food_egg_2092 is inside fryingpan_2154. fryingpan_2154 is close food_egg_2092. food_egg_2092 is close fryingpan_2154. food_egg_2092 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to place the frying pan containing rice and eggs on the stove and ensure the stove is switched on to cook the rice and eggs together.
##############################
From agent.py
Human Instruction: You need to place the frying pan containing rice and eggs on the stove and ensure the stove is switched on to cook the rice and eggs together.

The actions you have taken:
Action 1: Walk to kitchen_counter_119.
Action 2: look for food_rice_2108 around kitchen_counter_119.
Action 3: Walk to bowl_2141.
Action 4: look for food_rice_2108 around bowl_2141.
Action 5: Walk to cupboard_118.
Action 6: Open cupboard_118.
Action 7: look for food_rice_2108 around cupboard_118.
Action 8: Walk to fridge_126.
Action 9: Switch off fridge_126.
Action 10: Open fridge_126.
Action 11: look for food_rice_2108 around fridge_126.
Action 12: Observe around food_rice_2108 with the question of Locate the ingredient.
Action 13: Observe around food_egg_2092 with the question of Locate the ingredient.
Action 14: Grab food_rice_2108.
Action 15: Walk to stove_2135.
Action 16: Open stove_2135.
Action 17: look for fryingpan_2154 around stove_2135.
Action 18: Walk to oven_127.
Action 19: Open oven_127.
Action 20: look for fryingpan_2154 around oven_127.
Action 21: Walk to dishwasher_129.
Action 22: Open dishwasher_129.
Action 23: look for fryingpan_2154 around dishwasher_129.
Action 24: Walk to kitchen_counter_122.
Action 25: look for fryingpan_2154 around kitchen_counter_122.
Action 26: Walk to fryingpan_2154.
Action 27: Put food_rice_2108 into fryingpan_2154.
Action 28: Walk to food_egg_2092.
Action 29: Grab food_egg_2092.
Action 30: Walk to fryingpan_2154.
Action 31: Put food_egg_2092 into fryingpan_2154.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_2138_around_pot_2138(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==2138
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(pot,pot_instance)
        else:
            exp(pot,pot_instance)
    eff:
        unknown[pot]=False
        close[pot,pot_instance]=True
        close[pot_instance,pot]=True
    

behavior find_oil_2149_around_cupboard_117(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(oil,cupboard_instance)
        else:
            exp(oil,cupboard_instance)
    eff:
        unknown[oil]=False
        close[oil,cupboard_instance]=True
        close[cupboard_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior switch_on_stove(stove: item):
    body:
        if is_off(stove) and has_switch(stove):
            switch_on(stove)

behavior cook_rice_and_eggs(rice: item, egg: item, pan: item, stove: item):
    body:
        if not inside(rice, pan):
            put_inside(rice, pan)
        if not inside(egg, pan):
            put_inside(egg, pan)
        if not on(pan, stove):
            put_on(pan, stove)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select the rice

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg

        bind pan: item where:
            is_fryingpan(pan)
        # Select the frying pan

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        cook_rice_and_eggs(rice, egg, pan, stove)
        # Cook the rice and eggs together in the frying pan
        
        switch_on_stove(stove)
        # Switch on the stove to cook the contents of the pan

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior switch_on_stove(stove: item):
    body:
        if is_off(stove) and has_switch(stove):
            switch_on(stove)

behavior cook_rice_and_eggs(rice: item, egg: item, pan: item, stove: item):
    body:
        if not inside(rice, pan):
            put_inside(rice, pan)
        if not inside(egg, pan):
            put_inside(egg, pan)
        if not on(pan, stove):
            put_on(pan, stove)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select the rice

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg

        bind pan: item where:
            is_fryingpan(pan)
        # Select the frying pan

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        cook_rice_and_eggs(rice, egg, pan, stove)
        # Cook the rice and eggs together in the frying pan
        
        switch_on_stove(stove)
        # Switch on the stove to cook the contents of the pan

##############################
From agent.py-> find a plan in act()
grab_executor(fryingpan_2154)walk_executor(stove_2135)put_executor(fryingpan_2154, stove_2135)switchon_executor(stove_2135)
##############################
From agent.py
grab_executor(fryingpan_2154)
Robot find: Robot is close to the food_egg_2092. Robot is close to the fryingpan_2154. Robot is close to the kitchen_counter_122. Grabbing fryingpan_2154 by right hand. 
##############################
From agent.py
walk_executor(stove_2135)
Robot find: Robot is close to the fryingpan_2154. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. 
##############################
From agent.py
put_executor(fryingpan_2154, stove_2135)
Robot find: Robot is close to the fryingpan_2154. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. stove_2135 is close fryingpan_2154. fryingpan_2154 is close stove_2135. fryingpan_2154 is on stove_2135. fryingpan_2154 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2135)
Robot find: Robot is close to the fryingpan_2154. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. stove_2135 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Fried rice with egg.
Action History:
['walk_executor(kitchen_counter_119)', 'walk_executor(bowl_2141)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'grab_executor(food_rice_2108)', 'walk_executor(stove_2135)', 'open_executor(stove_2135)', 'walk_executor(oven_127)', 'open_executor(oven_127)', 'walk_executor(dishwasher_129)', 'open_executor(dishwasher_129)', 'walk_executor(kitchen_counter_122)', 'walk_executor(fryingpan_2154)', 'putin_executor(food_rice_2108, fryingpan_2154)', 'walk_executor(food_egg_2092)', 'grab_executor(food_egg_2092)', 'walk_executor(fryingpan_2154)', 'putin_executor(food_egg_2092, fryingpan_2154)', 'grab_executor(fryingpan_2154)', 'walk_executor(stove_2135)', 'put_executor(fryingpan_2154, stove_2135)', 'switchon_executor(stove_2135)']
Time info:
Time consume: 165 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 80
goal generate times: 4
goal correct times: 0
action_num: 25

Task complete rate:
Keystate: k1 - Requires: 11 steps
Keystate: k2 - Requires: 4 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
