From agent.py
Reset goals: The sub-goals are: 
['1. Find the spectacles and put them on the coffee table in the home office.', '2. Find the book and put it on the coffee table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_spectacles_2153_around_desk_193(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==193
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(spectacles,desk_instance)
        else:
            exp(spectacles,desk_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,desk_instance]=True
        close[desk_instance,spectacles]=True
    

#exp_behavior_end

#goal_representation
behavior find_spectacles_and_place_on_table(spectacles: item, table: item):
    body:
        if not inhand(spectacles):
            grab(spectacles)
        if not on(spectacles, table):
            put_on(spectacles, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Bind to the home office

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Bind to the coffee table inside the home office

        bind spectacles: item where:
            is_spectacles(spectacles)
        # Bind to the spectacles

        find_spectacles_and_place_on_table(spectacles, coffee_table)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior find_spectacles_and_place_on_table(spectacles: item, table: item):
    body:
        if not inhand(spectacles):
            grab(spectacles)
        if not on(spectacles, table):
            put_on(spectacles, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Bind to the home office

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Bind to the coffee table inside the home office

        bind spectacles: item where:
            is_spectacles(spectacles)
        # Bind to the spectacles

        find_spectacles_and_place_on_table(spectacles, coffee_table)
##############################
From agent.py-> find a plan in act()
walk_executor(desk_193)exp(spectacles_2153, desk_193)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(table_270)put_executor(spectacles_2153, table_270)
##############################
From agent.py
walk_executor(desk_193)
Robot find: mouse_213, keyboard_211, check_2026, chair_194, laser_pointer_2034, Robot is close to the desk_193. 
##############################
From agent.py
exp(spectacles_2153, desk_193)
Fail to find spectacles_2153 around desk_193. 
##############################
From agent.py-> find a plan in act()
walk_executor(desk_272)exp(spectacles_2153, desk_272)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(table_270)put_executor(spectacles_2153, table_270)
##############################
From agent.py
walk_executor(desk_272)
Robot find: stamp_2022, phone_2147, mouse_280, keyboard_278, headset_2146, chair_271, stamp_2043, Robot is close to the desk_272. 
##############################
From agent.py
exp(spectacles_2153, desk_272)
Fail to find spectacles_2153 around desk_272. 
##############################
From agent.py-> find a plan in act()
walk_executor(nightstand_192)exp(spectacles_2153, nightstand_192)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(table_270)put_executor(spectacles_2153, table_270)
##############################
From agent.py
walk_executor(nightstand_192)
Robot find: pillow_208, drawing_201, Robot is close to the nightstand_192. 
##############################
From agent.py
exp(spectacles_2153, nightstand_192)
Fail to find spectacles_2153 around nightstand_192. 
##############################
From agent.py-> find a plan in act()
walk_executor(nightstand_195)open_executor(nightstand_195)exp(spectacles_2153, nightstand_195)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(table_270)put_executor(spectacles_2153, table_270)
##############################
From agent.py
walk_executor(nightstand_195)
Robot find: pillow_207, Robot is close to the nightstand_195. 
##############################
From agent.py
open_executor(nightstand_195)
Robot find: Robot is close to the nightstand_195. nightstand_195 is opened. 
##############################
From agent.py
exp(spectacles_2153, nightstand_195)
Fail to find spectacles_2153 around nightstand_195. 
##############################
From agent.py-> find a plan in act()
walk_executor(bed_197)exp(spectacles_2153, bed_197)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(table_270)put_executor(spectacles_2153, table_270)
##############################
From agent.py
walk_executor(bed_197)
Robot find: clothes_scarf_2120, clothes_underwear_2121, clothes_dress_2116, Robot is close to the bed_197. 
##############################
From agent.py
exp(spectacles_2153, bed_197)
Fail to find spectacles_2153 around bed_197. 
##############################
From agent.py-> find a plan in act()
walk_executor(pillow_207)exp(spectacles_2153, pillow_207)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(table_270)put_executor(spectacles_2153, table_270)
##############################
From agent.py
walk_executor(pillow_207)
Robot find: Robot is close to the bed_197. Robot is close to the pillow_207. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find spectacles_2153 ?
Answer: The spectacles_2153 can be found on the kitchen_counter_122 within dining_room_41. 
Re-decompose: None

##############################
From agent.py
Human Instruction: The spectacles_2153 can be found on the kitchen_counter_122 within dining_room_41. 

The actions you have taken:
Action 1: Walk to desk_193.
Action 2: look for spectacles_2153 around desk_193.
Action 3: Walk to desk_272.
Action 4: look for spectacles_2153 around desk_272.
Action 5: Walk to nightstand_192.
Action 6: look for spectacles_2153 around nightstand_192.
Action 7: Walk to nightstand_195.
Action 8: Open nightstand_195.
Action 9: look for spectacles_2153 around nightstand_195.
Action 10: Walk to bed_197.
Action 11: look for spectacles_2153 around bed_197.
Action 12: Walk to pillow_207.

##############################
From agent.py
exp(spectacles_2153, pillow_207)
Fail to find spectacles_2153 around pillow_207. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(spectacles_2153, kitchen_counter_122)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(table_270)put_executor(spectacles_2153, table_270)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, pot_78, fryingpan_2154, Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(spectacles_2153, kitchen_counter_122)
Find spectacles_2153. 
##############################
From agent.py-> find a plan in act()
walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(table_270)put_executor(spectacles_2153, table_270)
##############################
From agent.py
walk_executor(spectacles_2153)
Robot find: Robot is close to the kitchen_counter_122. Robot is close to the spectacles_2153. 
##############################
From agent.py
grab_executor(spectacles_2153)
Robot find: Robot is close to the kitchen_counter_122. Robot is close to the spectacles_2153. Grabbing spectacles_2153 by right hand. 
##############################
From agent.py
walk_executor(table_270)
Robot find: shoes_2033, shampoo_2019, pillow_286, pencil_2014, phone_2017, pillow_287, drawing_288, brush_2002, Robot is close to the spectacles_2153. Robot is close to the couch_269. Robot is close to the table_270. 
##############################
From agent.py
put_executor(spectacles_2153, table_270)
Robot find: Robot is close to the spectacles_2153. Robot is close to the couch_269. Robot is close to the table_270. spectacles_2153 is close table_270. spectacles_2153 is on table_270. table_270 is close spectacles_2153. spectacles_2153 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2136_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_chair_2003_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

#exp_behavior_end

#goal_representation
behavior locate_book_and_place_on_table(book: item, table: item):
    body:
        walk_to(book)
        grab(book)
        walk_to(table)
        if not on(book, table):
            put_on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2091
        # Select the target book with its ID

        bind table: item where:
            is_table(table) and inside_char(char, table)
        # Select the table close to the character

        locate_book_and_place_on_table(book, table)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2137_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
def is_coffee_table_in_home_office(table: item):
    # Check if the table is the correct coffee table in the home office
    return is_table(table) and id[table] == 193

behavior locate_book_and_place_on_table(book: item, table: item):
    body:
        walk_to(book)
        grab(book)
        walk_to(table)
        if not on(book, table):
            put_on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2091
        # Select the target book with its ID

        bind table: item where:
            is_table(table) and is_coffee_table_in_home_office(table)
        # Select the coffee table in the home office using its ID

        locate_book_and_place_on_table(book, table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2136_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
def is_coffee_table_in_home_office(table: item):
    # Check if the table is the correct coffee table in the home office
    return is_table(table) and id[table] == 193

behavior locate_book_and_place_on_table(book: item, table: item):
    body:
        walk_to(book)
        grab(book)
        walk_to(table)
        if not on(book, table):
            put_on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2091
        # Select the target book with its ID

        bind table: item where:
            is_table(table) and is_coffee_table_in_home_office(table)
        # Select the coffee table in the home office using its ID

        locate_book_and_place_on_table(book, table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2137_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_chair_271_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
def is_coffee_table_in_home_office(table: item):
    # Check if the table is the correct coffee table in the home office
    return is_table(table) and id[table] == 193

behavior locate_book_and_place_on_table(book: item, table: item):
    body:
        walk_to(book)
        grab(book)
        walk_to(table)
        if not on(book, table):
            put_on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2091
        # Select the target book with its ID

        bind table: item where:
            is_table(table) and is_coffee_table_in_home_office(table)
        # Select the coffee table in the home office using its ID

        locate_book_and_place_on_table(book, table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2136_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_piano_bench_2067_around_bench_115(piano_bench:item):
    goal: not unknown(piano_bench)
    body:
        assert is_piano_bench(piano_bench)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==115
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(piano_bench,bench_instance)
        else:
            exp(piano_bench,bench_instance)
    eff:
        unknown[piano_bench]=False
        close[piano_bench,bench_instance]=True
        close[bench_instance,piano_bench]=True
    

#exp_behavior_end

#goal_representation
 
def is_coffee_table_in_home_office(table: item):
    # Check if the table is the correct coffee table in the home office
    return is_table(table) and id[table] == 193

behavior locate_book_and_place_on_table(book: item, table: item):
    body:
        walk_to(book)
        grab(book)
        walk_to(table)
        if not on(book, table):
            put_on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2091
        # Select the target book with its ID

        bind table: item where:
            is_table(table) and is_coffee_table_in_home_office(table)
        # Select the coffee table in the home office using its ID

        locate_book_and_place_on_table(book, table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2137_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
def is_coffee_table_in_home_office(table: item):
    # Check if the table is the correct coffee table in the home office
    return is_table(table) and id[table] == 193

behavior locate_book_and_place_on_table(book: item, table: item):
    body:
        walk_to(book)
        grab(book)
        walk_to(table)
        if not on(book, table):
            put_on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2091
        # Select the target book with its ID

        bind table: item where:
            is_table(table) and is_coffee_table_in_home_office(table)
        # Select the coffee table in the home office using its ID

        locate_book_and_place_on_table(book, table)
#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "2. find the book and put it on the coffee table in the home office." ?
Answer: Find the book on the bookshelf and put it on the coffee table in the home office.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2136_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
def is_coffee_table_in_home_office(table: item):
    # Check if the table is the correct coffee table in the home office
    return is_table(table) and id[table] == 193

behavior locate_book_and_place_on_table(book: item, table: item):
    body:
        walk_to(book)
        grab(book)
        walk_to(table)
        if not on(book, table):
            put_on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2091
        # Select the target book with its ID

        bind table: item where:
            is_table(table) and is_coffee_table_in_home_office(table)
        # Select the coffee table in the home office using its ID

        locate_book_and_place_on_table(book, table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2137_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
def is_coffee_table_in_home_office(table: item):
    # Check if the table is the correct coffee table in the home office
    return is_table(table) and id[table] == 193

behavior locate_book_and_place_on_table(book: item, table: item):
    body:
        walk_to(book)
        grab(book)
        walk_to(table)
        if not on(book, table):
            put_on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2091
        # Select the target book with its ID

        bind table: item where:
            is_table(table) and is_coffee_table_in_home_office(table)
        # Select the coffee table in the home office using its ID

        locate_book_and_place_on_table(book, table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2136_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_chair_2003_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

#exp_behavior_end

#goal_representation
behavior locate_book_and_place_on_table(book: item, table: item):
    body:
        walk_to(book)
        grab(book)
        walk_to(table)
        if not on(book, table):
            put_on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2091
        # Select the target book with its ID

        bind table: item where:
            is_table(table) and id[table] == 270
        # Select the coffee table in the home office using its ID

        locate_book_and_place_on_table(book, table)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2136_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_chair_194_around_chair_194(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==194
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

#exp_behavior_end

#goal_representation
def is_coffee_table_in_home_office(table: item):
    # Check if the table is the correct coffee table in the home office
    return is_table(table) and id[table] == 193

behavior locate_book_and_place_on_table(book: item, table: item):
    body:
        walk_to(book)
        grab(book)
        walk_to(table)
        if not on(book, table):
            put_on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2091
        # Select the target book with its ID

        bind table: item where:
            is_table(table) and is_coffee_table_in_home_office(table)
        # Select the coffee table in the home office using its ID

        locate_book_and_place_on_table(book, table)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2136_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
def is_coffee_table_in_home_office(table: item):
    # Check if the table is the correct coffee table in the home office
    return is_table(table) and id[table] == 193

behavior locate_book_and_place_on_table(book: item, table: item):
    body:
        walk_to(book)
        grab(book)
        walk_to(table)
        if not on(book, table):
            put_on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2091
        # Select the target book with its ID

        bind table: item where:
            is_table(table) and is_coffee_table_in_home_office(table)
        # Select the coffee table in the home office using its ID

        locate_book_and_place_on_table(book, table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2136_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
def is_coffee_table_in_home_office(table: item):
    # Determine if the table is the correct coffee table in the home office
    symbol in_home_office=exists room: item : (is_home_office(room) and inside(table, room))
    return in_home_office

behavior locate_book_and_place_on_table(book: item, table: item):
    body:
        if not inhand(book):
            grab(book)
        if not on(book, table):
            put_on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Ensure the required book is selected

        bind table: item where:
            is_table(table) and is_coffee_table_in_home_office(table)
        # Select the coffee table in the home office

        walk_to(book)
        locate_book_and_place_on_table(book, table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_coffee_table_in_home_office(table: item):
    # Determine if the table is the correct coffee table in the home office
    symbol in_home_office=exists room: item : (is_home_office(room) and inside(table, room))
    return in_home_office

behavior locate_book_and_place_on_table(book: item, table: item):
    body:
        if not inhand(book):
            grab(book)
        if not on(book, table):
            put_on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Ensure the required book is selected

        bind table: item where:
            is_table(table) and is_coffee_table_in_home_office(table)
        # Select the coffee table in the home office

        walk_to(book)
        locate_book_and_place_on_table(book, table)

##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_124)open_executor(bookshelf_124)exp(book_2136, bookshelf_124)walk_executor(book_2136)grab_executor(book_2136)walk_executor(table_270)put_executor(book_2136, table_270)
##############################
From agent.py
walk_executor(bookshelf_124)
Robot find: book_2136, envelope_2055, book_2137, drawing_110, drawing_111, Robot is close to the bookshelf_124. 
##############################
From agent.py
open_executor(bookshelf_124)
Robot find: Robot is close to the bookshelf_124. bookshelf_124 is opened. 
##############################
From agent.py
exp(book_2136, bookshelf_124)
Find book_2136. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2136)grab_executor(book_2136)walk_executor(table_270)put_executor(book_2136, table_270)
##############################
From agent.py
walk_executor(book_2136)
Robot find: Robot is close to the bookshelf_124. Robot is close to the book_2136. 
##############################
From agent.py
grab_executor(book_2136)
Robot find: Robot is close to the bookshelf_124. Robot is close to the book_2136. Grabbing book_2136 by right hand. 
##############################
From agent.py
walk_executor(table_270)
Robot find: Robot is close to the book_2136. Robot is close to the couch_269. Robot is close to the table_270. 
##############################
From agent.py
put_executor(book_2136, table_270)
Robot find: Robot is close to the book_2136. Robot is close to the couch_269. Robot is close to the table_270. book_2136 is on table_270. table_270 is close book_2136. book_2136 is close table_270. book_2136 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Find my spectacles and put it on the coffe table in home office. Then find the book and put it on the coffe table in home office.
Action History:
['walk_executor(desk_193)', 'walk_executor(desk_272)', 'walk_executor(nightstand_192)', 'walk_executor(nightstand_195)', 'open_executor(nightstand_195)', 'walk_executor(bed_197)', 'walk_executor(pillow_207)', 'walk_executor(kitchen_counter_122)', 'walk_executor(spectacles_2153)', 'grab_executor(spectacles_2153)', 'walk_executor(table_270)', 'put_executor(spectacles_2153, table_270)', 'walk_executor(bookshelf_124)', 'open_executor(bookshelf_124)', 'walk_executor(book_2136)', 'grab_executor(book_2136)', 'walk_executor(table_270)', 'put_executor(book_2136, table_270)']
Time info:
Time consume: 180 seconds
Exp_helper query times: 1
Guidance query times: 1
library scale: 86
goal generate times: 13
goal correct times: 0
action_num: 18

Task complete rate:
1
Scene_id: 1
##############################
