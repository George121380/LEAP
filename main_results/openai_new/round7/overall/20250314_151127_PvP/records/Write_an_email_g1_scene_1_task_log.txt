From agent.py
Reset goals: The sub-goals are: 
['Turn on the computer in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_keyboard_278_around_desk_193(keyboard:item):
    goal: not unknown(keyboard)
    body:
        assert is_keyboard(keyboard)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==193
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(keyboard,desk_instance)
        else:
            exp(keyboard,desk_instance)
    eff:
        unknown[keyboard]=False
        close[keyboard,desk_instance]=True
        close[desk_instance,keyboard]=True
    

#exp_behavior_end

#goal_representation
 
def is_computer_plugged_in_and_off(computer: item):
    # Check if the computer is plugged in and currently off
    return plugged(computer) and is_off(computer)

behavior plug_in_computer(computer: item):
    body:
        if not plugged(computer) and has_plug(computer):
            plugin(computer)

behavior turn_on_computer(computer: item):
    body:
        if is_off(computer) and has_switch(computer):
            switch_on(computer)

behavior __goal__():
    body:
        bind computer: item where:
            is_computer(computer)
        # Select the computer in the home office

        if not is_computer_plugged_in_and_off(computer):
            plug_in_computer(computer)
        
        turn_on_computer(computer)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_computer_plugged_in_and_off(computer: item):
    # Check if the computer is plugged in and currently off
    return plugged(computer) and is_off(computer)

behavior plug_in_computer(computer: item):
    body:
        if not plugged(computer) and has_plug(computer):
            plugin(computer)

behavior turn_on_computer(computer: item):
    body:
        if is_off(computer) and has_switch(computer):
            switch_on(computer)

behavior __goal__():
    body:
        bind computer: item where:
            is_computer(computer)
        # Select the computer in the home office

        if not is_computer_plugged_in_and_off(computer):
            plug_in_computer(computer)
        
        turn_on_computer(computer)

##############################
From agent.py-> find a plan in act()
walk_executor(computer_209)switchon_executor(computer_209)
##############################
From agent.py
walk_executor(computer_209)
Robot find: chair_194, keyboard_211, mouse_213, Robot is close to the computer_209. 
##############################
From agent.py
switchon_executor(computer_209)
Robot find: Robot is close to the computer_209. computer_209 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Turn on the computer in home office.
Action History:
['walk_executor(computer_209)', 'switchon_executor(computer_209)']
Time info:
Time consume: 16 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 46
goal generate times: 1
goal correct times: 0
action_num: 2

Task complete rate:
Keystate: k1 - Requires: 2 steps
Action Completion Rate: 0.0
Scene_id: 1
##############################
