From agent.py
Reset goals: The sub-goals are: 
['1. Wash the shirt by hand.', '2. Iron the shirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2114_around_bed_264(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==264
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(clothes_shirt,bed_instance)
        else:
            exp(clothes_shirt,bed_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,bed_instance]=True
        close[bed_instance,clothes_shirt]=True
    

behavior find_detergent_2108_around_kitchen_counter_129(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(detergent,kitchen_counter_instance)
        else:
            exp(detergent,kitchen_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,kitchen_counter_instance]=True
        close[kitchen_counter_instance,detergent]=True
    

behavior find_soap_2038_around_sink_307(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
def is_shirt_clothes(shirt:item):
    # Function to check if an item is clothes_shirt
    return is_clothes_shirt(shirt)

behavior find_and_grab_shirt(shirt:item):
    body:
        if not inhand(shirt):
            grab(shirt)

behavior hand_wash_shirt(shirt:item):
    body:
        if dirty(shirt):
            if not has_water(shirt):
                get_water(shirt)
            wash(shirt) # Hand wash the shirt if its dirty

behavior __goal__():
    body:
        bind shirt: item where:
            is_shirt_clothes(shirt)
        # Select the shirt

        find_and_grab_shirt(shirt)
        # Make sure the shirt is in hand

        hand_wash_shirt(shirt)
        # Hand wash the shirt

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_shirt_clothes(shirt:item):
    # Function to check if an item is clothes_shirt
    return is_clothes_shirt(shirt)

behavior find_and_grab_shirt(shirt:item):
    body:
        if not inhand(shirt):
            grab(shirt)

behavior hand_wash_shirt(shirt:item):
    body:
        if dirty(shirt):
            if not has_water(shirt):
                get_water(shirt)
            wash(shirt) # Hand wash the shirt if its dirty

behavior __goal__():
    body:
        bind shirt: item where:
            is_shirt_clothes(shirt)
        # Select the shirt

        find_and_grab_shirt(shirt)
        # Make sure the shirt is in hand

        hand_wash_shirt(shirt)
        # Hand wash the shirt

##############################
From agent.py-> find a plan in act()
walk_executor(bed_264)exp(clothes_shirt_2114, bed_264)walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(bed_264)
Robot find: clothes_scarf_2079, pillow_239, clothes_dress_2075, pillow_240, clothes_jacket_2078, mat_237, drawing_238, Robot is close to the bed_264. 
##############################
From agent.py
exp(clothes_shirt_2114, bed_264)
Fail to find clothes_shirt_2114 around bed_264. 
##############################
From agent.py-> find a plan in act()
walk_executor(bed_376)exp(clothes_shirt_2114, bed_376)walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(bed_376)
Robot find: mat_386, clothes_underwear_2022, pillow_370, drawing_389, pillow_368, drawing_388, Robot is close to the bed_376. Robot is close to the mat_386. 
##############################
From agent.py
exp(clothes_shirt_2114, bed_376)
Fail to find clothes_shirt_2114 around bed_376. 
##############################
From agent.py-> find a plan in act()
walk_executor(dresser_377)exp(clothes_shirt_2114, dresser_377)walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(dresser_377)
Robot find: novel_2010, pajamas_2039, drawing_387, Robot is close to the dresser_377. Robot is close to the novel_2010. Robot is close to the pajamas_2039. 
##############################
From agent.py
exp(clothes_shirt_2114, dresser_377)
Fail to find clothes_shirt_2114 around dresser_377. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)exp(clothes_shirt_2114, basket_for_clothes_2040)walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Robot find: clothes_pants_2113, clothes_shirt_2114, clothes_socks_2115, clothes_skirt_2116, Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. 
##############################
From agent.py
exp(clothes_shirt_2114, basket_for_clothes_2040)
Find clothes_shirt_2114. 
##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2114)walk_executor(faucet_134)switchoff_executor(faucet_134)switchon_executor(faucet_134)wash_executor(clothes_shirt_2114)switchoff_executor(faucet_134)
##############################
From agent.py
grab_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. Grabbing clothes_shirt_2114 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: pot_54, Robot is close to the clothes_shirt_2114. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned on. 
##############################
From agent.py
wash_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. clothes_shirt_2114 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
def is_ironing_board_available(ironing_board:item):
    # Function to check if there is an available ironing board
    symbol available_board=exists o: item : (is_ironing_board(o) and not visited(o))
    return available_board

def is_iron_plugged_in(iron: item):
    # Check if the iron is plugged in before turning it on
    return plugged(iron)

behavior start_ironing_shirt(ironing_board: item, iron: item, shirt: item):
    body:
        walk_to(ironing_board)
        # Move close to the ironing board

        if not plugged(iron):
            plugin(iron)

        if is_off(iron):
            switch_on(iron)

        if inhand(shirt):
            put_on(shirt, ironing_board)
            # Put the shirt on the ironing board to start ironing

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and inhand(clothes_shirt)
        # Select clothes_shirt_2114

        if exists ironing_board: item : is_ironing_board_available(ironing_board):
            # If the ironing board is available, select it
            bind ironing_board: item where:
                is_ironing_board(ironing_board)
            # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        start_ironing_shirt(ironing_board, iron, clothes_shirt)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_dvd_player_2085_around_tvstand_186(dvd_player:item):
    goal: not unknown(dvd_player)
    body:
        assert is_dvd_player(dvd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==186
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(dvd_player,tvstand_instance)
        else:
            exp(dvd_player,tvstand_instance)
    eff:
        unknown[dvd_player]=False
        close[dvd_player,tvstand_instance]=True
        close[tvstand_instance,dvd_player]=True
    

#exp_behavior_end

#goal_representation
 
def is_iron_plugged_and_ready(iron: item):
    # Check if the iron is plugged in and ready to be used
    return plugged(iron) and is_off(iron)

behavior plug_in_iron(iron: item):
    body:
        if not plugged(iron) and has_plug(iron):
            plugin(iron)

behavior turn_on_iron(iron: item):
    body:
        if is_off(iron) and has_switch(iron):
            switch_on(iron)

behavior iron_shirt(shirt: item, ironing_board: item, iron: item):
    body:
        if not on(shirt, ironing_board):
            put_on(shirt, ironing_board)
        if is_on(iron):
            touch(iron)
            # Assume iron action is initiated by touching or using the iron

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select clothes_shirt_2114

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        if not is_iron_plugged_and_ready(iron):
            plug_in_iron(iron)
        
        turn_on_iron(iron)
        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_iron_plugged_and_ready(iron: item):
    # Check if the iron is plugged in and ready to be used
    return plugged(iron) and is_off(iron)

behavior plug_in_iron(iron: item):
    body:
        if not plugged(iron) and has_plug(iron):
            plugin(iron)

behavior turn_on_iron(iron: item):
    body:
        if is_off(iron) and has_switch(iron):
            switch_on(iron)

behavior iron_shirt(shirt: item, ironing_board: item, iron: item):
    body:
        if not on(shirt, ironing_board):
            put_on(shirt, ironing_board)
        if is_on(iron):
            touch(iron)
            # Assume iron action is initiated by touching or using the iron

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select clothes_shirt_2114

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        if not is_iron_plugged_and_ready(iron):
            plug_in_iron(iron)
        
        turn_on_iron(iron)
        iron_shirt(shirt, ironing_board, iron)

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)exp(iron_2117, ironing_board_2099)walk_executor(iron_2117)plugin_executor(iron_2117)walk_executor(ironing_board_2099)put_executor(clothes_shirt_2114, ironing_board_2099)
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: iron_2117, Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. 
##############################
From agent.py
exp(iron_2117, ironing_board_2099)
Find iron_2117. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2117)plugin_executor(iron_2117)switchon_executor(iron_2117)walk_executor(ironing_board_2099)put_executor(clothes_shirt_2114, ironing_board_2099)touch_executor(iron_2117)
##############################
From agent.py
walk_executor(iron_2117)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. 
##############################
From agent.py
plugin_executor(iron_2117)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. iron_2117 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2117)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. iron_2117 is turned on. 
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. 
##############################
From agent.py
put_executor(clothes_shirt_2114, ironing_board_2099)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. ironing_board_2099 is close clothes_shirt_2114. clothes_shirt_2114 is close ironing_board_2099. clothes_shirt_2114 is on ironing_board_2099. clothes_shirt_2114 released by right hand. 
##############################
From agent.py
touch_executor(iron_2117)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Hand wash a shirt and iron this shirt.
Action History:
['walk_executor(bed_264)', 'walk_executor(bed_376)', 'walk_executor(dresser_377)', 'walk_executor(basket_for_clothes_2040)', 'grab_executor(clothes_shirt_2114)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'switchon_executor(faucet_134)', 'wash_executor(clothes_shirt_2114)', 'switchoff_executor(faucet_134)', 'walk_executor(ironing_board_2099)', 'walk_executor(iron_2117)', 'plugin_executor(iron_2117)', 'switchon_executor(iron_2117)', 'walk_executor(ironing_board_2099)', 'put_executor(clothes_shirt_2114, ironing_board_2099)', 'touch_executor(iron_2117)']
Time info:
Time consume: 103 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 112
goal generate times: 3
goal correct times: 0
action_num: 17

Task complete rate:
Keystate: k1 - Requires: 0 steps
Keystate: k2 - Requires: 4 steps
Action Completion Rate: 0.0
Scene_id: 2
##############################
