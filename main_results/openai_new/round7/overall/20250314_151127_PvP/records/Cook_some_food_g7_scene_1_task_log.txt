From agent.py
Reset goals: The sub-goals are: 
['1. Find some ice cream and put it in a bowl.', '2. Add jam on top of the ice cream in the bowl.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2141_around_table_270(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==270
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(bowl,table_instance)
        else:
            exp(bowl,table_instance)
    eff:
        unknown[bowl]=False
        close[bowl,table_instance]=True
        close[table_instance,bowl]=True
    

behavior find_food_ice_cream_2097_around_fridge_126(food_ice_cream:item):
    goal: not unknown(food_ice_cream)
    body:
        assert is_food_ice_cream(food_ice_cream)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_ice_cream,fridge_instance)
        else:
            exp(food_ice_cream,fridge_instance)
    eff:
        unknown[food_ice_cream]=False
        close[food_ice_cream,fridge_instance]=True
        close[fridge_instance,food_ice_cream]=True
    

#exp_behavior_end

#goal_representation
 
def is_bowl_with_ice_cream(bowl: item):
    # Function to check if there is ice cream in a bowl
    symbol has_ice_cream=exists o: item : (is_food_ice_cream(o) and inside(o, bowl))
    return has_ice_cream

behavior find_ice_cream(bowl:item, ice_cream:item):
    body:
        if not inside(ice_cream, bowl):
            put_inside(ice_cream, bowl)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl

        bind ice_cream: item where:
            is_food_ice_cream(ice_cream)
        # Select ice cream

        if not is_bowl_with_ice_cream(bowl):
            find_ice_cream(bowl, ice_cream)
            # Place ice cream in a bowl

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_bowl_with_ice_cream(bowl: item):
    # Function to check if there is ice cream in a bowl
    symbol has_ice_cream=exists o: item : (is_food_ice_cream(o) and inside(o, bowl))
    return has_ice_cream

behavior find_ice_cream(bowl:item, ice_cream:item):
    body:
        if not inside(ice_cream, bowl):
            put_inside(ice_cream, bowl)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl

        bind ice_cream: item where:
            is_food_ice_cream(ice_cream)
        # Select ice cream

        if not is_bowl_with_ice_cream(bowl):
            find_ice_cream(bowl, ice_cream)
            # Place ice cream in a bowl

##############################
From agent.py-> find a plan in act()
walk_executor(table_270)exp(bowl_2140, table_270)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_ice_cream_2097, fridge_126)walk_executor(food_ice_cream_2097)grab_executor(food_ice_cream_2097)walk_executor(bowl_2140)putin_executor(food_ice_cream_2097, bowl_2140)
##############################
From agent.py
walk_executor(table_270)
Robot find: shoes_2033, shampoo_2019, pillow_286, pencil_2014, phone_2017, pillow_287, drawing_288, brush_2002, Robot is close to the couch_269. Robot is close to the table_270. 
##############################
From agent.py
exp(bowl_2140, table_270)
Fail to find bowl_2140 around table_270. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(bowl_2140, table_114)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_ice_cream_2097, fridge_126)walk_executor(food_ice_cream_2097)grab_executor(food_ice_cream_2097)walk_executor(bowl_2140)putin_executor(food_ice_cream_2097, bowl_2140)
##############################
From agent.py
walk_executor(table_114)
Robot find: mat_102, cup_2049, pillow_103, pillow_104, pillow_105, pillow_106, lighter_2004, lighter_2039, box_2038, clothes_hat_2117, milk_2115, cup_2134, check_2058, drawing_110, drawing_111, clothes_gloves_2118, cup_2132, food_bread_2084, dry_pasta_2114, knife_2122, cup_2133, table_cloth_2005, food_food_2021, Robot is close to the table_114. Robot is close to the mat_102. 
##############################
From agent.py
exp(bowl_2140, table_114)
Fail to find bowl_2140 around table_114. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(bowl_2140, kitchen_counter_119)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_ice_cream_2097, fridge_126)walk_executor(food_ice_cream_2097)grab_executor(food_ice_cream_2097)walk_executor(bowl_2140)putin_executor(food_ice_cream_2097, bowl_2140)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_78, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(bowl_2140, kitchen_counter_119)
Find bowl_2140. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_ice_cream_2097, fridge_126)walk_executor(food_ice_cream_2097)grab_executor(food_ice_cream_2097)walk_executor(bowl_2140)putin_executor(food_ice_cream_2097, bowl_2140)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_ice_cream_2097, fridge_126)
Find food_ice_cream_2097. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_ice_cream_2097)walk_executor(bowl_2140)putin_executor(food_ice_cream_2097, bowl_2140)
##############################
From agent.py
grab_executor(food_ice_cream_2097)
Robot find: Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. Grabbing food_ice_cream_2097 by right hand. 
##############################
From agent.py
walk_executor(bowl_2140)
Robot find: Robot is close to the food_ice_cream_2097. Robot is close to the bowl_2140. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
putin_executor(food_ice_cream_2097, bowl_2140)
Robot find: Robot is close to the food_ice_cream_2097. Robot is close to the bowl_2140. Robot is close to the kitchen_counter_119. food_ice_cream_2097 is inside bowl_2140. bowl_2140 is close food_ice_cream_2097. food_ice_cream_2097 is close bowl_2140. food_ice_cream_2097 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2048_around_trashcan_99(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind trashcan_instance:item where:
            is_trashcan(trashcan_instance) and id[trashcan_instance]==99
        achieve close_char(char,trashcan_instance)
        if can_open(trashcan_instance):
            achieve_once open(trashcan_instance)
            exp(food_onion,trashcan_instance)
        else:
            exp(food_onion,trashcan_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,trashcan_instance]=True
        close[trashcan_instance,food_onion]=True
    

#exp_behavior_end

#goal_representation
 
def is_food_ice_cream_bowl(bowl: item):
    # Function to check if the bowl has ice cream in it
    symbol has_ice_cream = exists ice_cream: item : (is_food_ice_cream(ice_cream) and inside(ice_cream, bowl))
    return has_ice_cream

behavior add_jam_on_ice_cream(jam: item, bowl: item):
    body:
        if is_food_ice_cream_bowl(bowl) and not on(jam, bowl):
            put_on(jam, bowl)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and is_food_ice_cream_bowl(bowl)
        # Select the bowl with ice cream

        bind jam: item where:
            is_food_jam(jam)
        # Select the jam

        add_jam_on_ice_cream(jam, bowl)
        # Add jam on top of the ice cream in the bowl

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_food_ice_cream_bowl(bowl: item):
    # Function to check if the bowl has ice cream in it
    symbol has_ice_cream = exists ice_cream: item : (is_food_ice_cream(ice_cream) and inside(ice_cream, bowl))
    return has_ice_cream

behavior add_jam_on_ice_cream(jam: item, bowl: item):
    body:
        if is_food_ice_cream_bowl(bowl) and not on(jam, bowl):
            put_on(jam, bowl)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and is_food_ice_cream_bowl(bowl)
        # Select the bowl with ice cream

        bind jam: item where:
            is_food_jam(jam)
        # Select the jam

        add_jam_on_ice_cream(jam, bowl)
        # Add jam on top of the ice cream in the bowl

##############################
From agent.py-> find a plan in act()
walk_executor(food_jam_2098)grab_executor(food_jam_2098)walk_executor(bowl_2140)put_executor(food_jam_2098, bowl_2140)
##############################
From agent.py
walk_executor(food_jam_2098)
Robot find: Robot is close to the food_jam_2098. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_jam_2098)
Robot find: Robot is close to the food_jam_2098. Robot is close to the fridge_126. Grabbing food_jam_2098 by right hand. 
##############################
From agent.py
walk_executor(bowl_2140)
Robot find: Robot is close to the food_jam_2098. Robot is close to the bowl_2140. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_jam_2098, bowl_2140)
Robot find: Robot is close to the food_jam_2098. Robot is close to the bowl_2140. Robot is close to the kitchen_counter_119. bowl_2140 is close food_jam_2098. food_jam_2098 is close bowl_2140. food_jam_2098 is on bowl_2140. food_jam_2098 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Get a bowl of ice cream and add some jam on the top.
Action History:
['walk_executor(table_270)', 'walk_executor(table_114)', 'walk_executor(kitchen_counter_119)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'grab_executor(food_ice_cream_2097)', 'walk_executor(bowl_2140)', 'putin_executor(food_ice_cream_2097, bowl_2140)', 'walk_executor(food_jam_2098)', 'grab_executor(food_jam_2098)', 'walk_executor(bowl_2140)', 'put_executor(food_jam_2098, bowl_2140)']
Time info:
Time consume: 62 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 142
goal generate times: 2
goal correct times: 0
action_num: 13

Task complete rate:
Keystate: k1 - Requires: 3 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
