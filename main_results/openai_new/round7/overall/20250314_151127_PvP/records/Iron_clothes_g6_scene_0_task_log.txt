From agent.py
Reset goals: The sub-goals are: 
['1. Find the shirt and the skirt.', '2. Iron the shirt and the skirt.', '3. Place the shirt and the skirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2086_around_closetdrawer_148(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==148
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

behavior find_clothes_skirt_2088_around_closetdrawer_148(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==148
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_skirt,closetdrawer_instance)
        else:
            exp(clothes_skirt,closetdrawer_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
def is_shirt_or_skirt_found():
    # Function to check if a shirt or skirt has been located
    symbol found = exists o: item : (is_clothes_shirt(o) or is_clothes_skirt(o))
    return found

behavior locate_item(item: item):
    body:
        if not visited(item):
            observe(item, "Locate the clothing item")

behavior __goal__():
    body:
        if not is_shirt_or_skirt_found():
            foreach item: item:
                if is_clothes_shirt(item) or is_clothes_skirt(item) and not visited(item):
                    locate_item(item)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2086_around_closetdrawer_148(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==148
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

behavior find_clothes_skirt_2088_around_closetdrawer_118(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==118
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_skirt,closetdrawer_instance)
        else:
            exp(clothes_skirt,closetdrawer_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
def identify_clothes(item: item):
    # Check if the item is a clothes item (shirt or skirt)
    return is_clothes_shirt(item) or is_clothes_skirt(item)

behavior find_clothes(shirt:item, skirt:item):
    body:
        if not visited(shirt):
            observe(shirt, "Locate the shirt")
        if not visited(skirt):
            observe(skirt, "Locate the skirt")

behavior __goal__():
    body:
        if exists shirt: item : is_clothes_shirt(shirt) and exists skirt: item : is_clothes_skirt(skirt):
            # If both the shirt and skirt are known, proceed to find them
            bind shirt: item where:
                is_clothes_shirt(shirt)
            bind skirt: item where:
                is_clothes_skirt(skirt)
            find_clothes(shirt, skirt)

        else:
            # Explore to identify any clothes items
            foreach item: item:
                if not visited(item) and identify_clothes(item):
                    observe(item, "Check if this is a shirt or skirt")

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2086_around_closetdrawer_148(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==148
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

behavior find_clothes_skirt_2088_around_closetdrawer_380(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==380
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_skirt,closetdrawer_instance)
        else:
            exp(clothes_skirt,closetdrawer_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothes_found():
    # Function to check if the shirt and the skirt are found
    symbol has_clothes=exists item: item : (is_clothes_shirt(item) or is_clothes_skirt(item)) and visited(item)
    return has_clothes

behavior find_clothes(item: item):
    body:
        observe(item, "Find the shirt and the skirt")

behavior __goal__():
    body:
        if not is_clothes_found():
            foreach item: item:
                if (is_clothes_shirt(item) or is_clothes_skirt(item)) and not visited(item):
                    find_clothes(item)
 
#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_clothes_found():
    # Function to check if the shirt and the skirt are found
    symbol has_clothes=exists item: item : (is_clothes_shirt(item) or is_clothes_skirt(item)) and visited(item)
    return has_clothes

behavior find_clothes(item: item):
    body:
        observe(item, "Find the shirt and the skirt")

behavior __goal__():
    body:
        if not is_clothes_found():
            foreach item: item:
                if (is_clothes_shirt(item) or is_clothes_skirt(item)) and not visited(item):
                    find_clothes(item)
 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_148)exp(clothes_shirt_2086, closetdrawer_148)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Find the shirt and the skirt)walk_executor(closetdrawer_380)exp(clothes_skirt_2088, closetdrawer_380)walk_executor(clothes_skirt_2088)obs(clothes_skirt_2088, Find the shirt and the skirt)
##############################
From agent.py
walk_executor(closetdrawer_148)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_148)
Fail to find clothes_shirt_2086 around closetdrawer_148. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_148)exp(clothes_shirt_2086, closetdrawer_148)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Find the shirt and the skirt)walk_executor(closetdrawer_148)exp(clothes_skirt_2088, closetdrawer_148)walk_executor(clothes_skirt_2088)obs(clothes_skirt_2088, Find the shirt and the skirt)
##############################
From agent.py
walk_executor(closetdrawer_148)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_148)
Fail to find clothes_shirt_2086 around closetdrawer_148. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_148)exp(clothes_shirt_2086, closetdrawer_148)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Find the shirt and the skirt)walk_executor(closetdrawer_380)exp(clothes_skirt_2088, closetdrawer_380)walk_executor(clothes_skirt_2088)obs(clothes_skirt_2088, Find the shirt and the skirt)
##############################
From agent.py
walk_executor(closetdrawer_148)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_148)
Fail to find clothes_shirt_2086 around closetdrawer_148. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_148)exp(clothes_shirt_2086, closetdrawer_148)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Find the shirt and the skirt)walk_executor(closetdrawer_380)exp(clothes_skirt_2088, closetdrawer_380)walk_executor(clothes_skirt_2088)obs(clothes_skirt_2088, Find the shirt and the skirt)
##############################
From agent.py
walk_executor(closetdrawer_148)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_148)
Fail to find clothes_shirt_2086 around closetdrawer_148. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_148)exp(clothes_shirt_2086, closetdrawer_148)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Find the shirt and the skirt)walk_executor(closetdrawer_148)exp(clothes_skirt_2088, closetdrawer_148)walk_executor(clothes_skirt_2088)obs(clothes_skirt_2088, Find the shirt and the skirt)
##############################
From agent.py
walk_executor(closetdrawer_148)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_148)
Fail to find clothes_shirt_2086 around closetdrawer_148. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_148)exp(clothes_shirt_2086, closetdrawer_148)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Find the shirt and the skirt)walk_executor(closetdrawer_380)exp(clothes_skirt_2088, closetdrawer_380)walk_executor(clothes_skirt_2088)obs(clothes_skirt_2088, Find the shirt and the skirt)
##############################
From agent.py
walk_executor(closetdrawer_148)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2086 ?
Answer: The target item, clothes_shirt_2086, can be found inside basket_for_clothes_2006, which is located in bathroom_1.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item, clothes_shirt_2086, can be found inside basket_for_clothes_2006, which is located in bathroom_1.

The actions you have taken:
Action 1: Walk to closetdrawer_148.
Action 2: look for clothes_shirt_2086 around closetdrawer_148.
Action 3: Walk to closetdrawer_148.
Action 4: look for clothes_shirt_2086 around closetdrawer_148.
Action 5: Walk to closetdrawer_148.
Action 6: look for clothes_shirt_2086 around closetdrawer_148.
Action 7: Walk to closetdrawer_148.
Action 8: look for clothes_shirt_2086 around closetdrawer_148.
Action 9: Walk to closetdrawer_148.
Action 10: look for clothes_shirt_2086 around closetdrawer_148.
Action 11: Walk to closetdrawer_148.

##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_148)
Fail to find clothes_shirt_2086 around closetdrawer_148. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)exp(clothes_shirt_2086, basket_for_clothes_2006)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Find the shirt and the skirt)walk_executor(basket_for_clothes_2006)exp(clothes_skirt_2088, basket_for_clothes_2006)walk_executor(clothes_skirt_2088)obs(clothes_skirt_2088, Find the shirt and the skirt)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Robot find: clothes_pants_2085, clothes_shirt_2086, clothes_socks_2087, clothes_skirt_2088, towel_rack_31, towel_rack_33, towel_rack_32, towel_rack_34, mat_22, Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
exp(clothes_shirt_2086, basket_for_clothes_2006)
Find clothes_shirt_2086. 
##############################
From agent.py-> find a plan in act()
obs(clothes_shirt_2086, Find the shirt and the skirt)obs(clothes_skirt_2088, Find the shirt and the skirt)
##############################
From agent.py
obs(clothes_shirt_2086, Find the shirt and the skirt)
Get this information:  clothes_shirt_2086 is close to basket_for_clothes_2006. clothes_shirt_2086 is close to character_65. clothes_shirt_2086 is inside bathroom_1. clothes_shirt_2086 is inside basket_for_clothes_2006. clothes_shirt_2086 is DIRTY.
##############################
From agent.py
obs(clothes_skirt_2088, Find the shirt and the skirt)
Get this information:  clothes_skirt_2088 is close to basket_for_clothes_2006. clothes_skirt_2088 is close to character_65. clothes_skirt_2088 is inside bathroom_1. clothes_skirt_2088 is inside basket_for_clothes_2006. clothes_skirt_2088 is DIRTY.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_chair_356_around_table_355(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==355
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(chair,table_instance)
        else:
            exp(chair,table_instance)
    eff:
        unknown[chair]=False
        close[chair,table_instance]=True
        close[table_instance,chair]=True
    

#exp_behavior_end

#goal_representation
behavior prepare_for_ironing(item:item):
    body:
        if not inhand(item):
            grab(item)

behavior iron_item(item: item, ironing_board: item, iron: item):
    body:
        if not on(item, ironing_board):
            put_on(item, ironing_board)
        
        if not plugged(iron):
            plugin(iron)
        
        if is_off(iron):
            switch_on(iron)
        
        # Assume that the ironing will be completed successfully within a certain time frame
        # Once ironed, we assume that the item can be handled without further transition

        if is_on(iron):
            switch_off(iron)
        
        if plugged(iron):
            plugout(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2088
        # Select the skirt
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        prepare_for_ironing(shirt)
        iron_item(shirt, ironing_board, iron)
        
        prepare_for_ironing(skirt)
        iron_item(skirt, ironing_board, iron)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior prepare_for_ironing(item:item):
    body:
        if not inhand(item):
            grab(item)

behavior iron_item(item: item, ironing_board: item, iron: item):
    body:
        if not on(item, ironing_board):
            put_on(item, ironing_board)
        
        if not plugged(iron):
            plugin(iron)
        
        if is_off(iron):
            switch_on(iron)
        
        # Assume that the ironing will be completed successfully within a certain time frame
        # Once ironed, we assume that the item can be handled without further transition

        if is_on(iron):
            switch_off(iron)
        
        if plugged(iron):
            plugout(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2088
        # Select the skirt
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        prepare_for_ironing(shirt)
        iron_item(shirt, ironing_board, iron)
        
        prepare_for_ironing(skirt)
        iron_item(skirt, ironing_board, iron)
##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2086)walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)plugin_executor(iron_2089)switchoff_executor(iron_2089)plugout_executor(iron_2089)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(ironing_board_2074)put_executor(clothes_skirt_2088, ironing_board_2074)walk_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)switchoff_executor(iron_2089)plugout_executor(iron_2089)
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: iron_2089, Robot is close to the clothes_shirt_2086. Robot is close to the ironing_board_2074. 
##############################
From agent.py
put_executor(clothes_shirt_2086, ironing_board_2074)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the ironing_board_2074. ironing_board_2074 is close clothes_shirt_2086. clothes_shirt_2086 is close ironing_board_2074. clothes_shirt_2086 is on ironing_board_2074. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
exp(iron_2089, ironing_board_2074)
Find iron_2089. 
##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2086)put_executor(clothes_shirt_2086, ironing_board_2074)walk_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)switchoff_executor(iron_2089)plugout_executor(iron_2089)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(ironing_board_2074)put_executor(clothes_skirt_2088, ironing_board_2074)plugin_executor(iron_2089)switchon_executor(iron_2089)switchoff_executor(iron_2089)plugout_executor(iron_2089)
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the ironing_board_2074. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
put_executor(clothes_shirt_2086, ironing_board_2074)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the ironing_board_2074. clothes_shirt_2086 is close ironing_board_2074. clothes_shirt_2086 is on ironing_board_2074. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
walk_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. 
##############################
From agent.py
plugin_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. iron_2089 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. iron_2089 is turned on. 
##############################
From agent.py
switchoff_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. iron_2089 is turned off. 
##############################
From agent.py
plugout_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. iron_2089 is unplugged. 
##############################
From agent.py
walk_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
grab_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. Grabbing clothes_skirt_2088 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. 
##############################
From agent.py
put_executor(clothes_skirt_2088, ironing_board_2074)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. ironing_board_2074 is close clothes_skirt_2088. clothes_skirt_2088 is close ironing_board_2074. clothes_skirt_2088 is on ironing_board_2074. clothes_skirt_2088 released by right hand. 
##############################
From agent.py
plugin_executor(iron_2089)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. iron_2089 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2089)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. iron_2089 is turned on. 
##############################
From agent.py
switchoff_executor(iron_2089)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. iron_2089 is turned off. 
##############################
From agent.py
plugout_executor(iron_2089)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. iron_2089 is unplugged. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_405_around_bed_105(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==105
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_clothes_on_bed(shirt: item, skirt: item, bed: item):
    body:
        if not inhand(shirt):
            grab(shirt)
        if not on(shirt, bed):
            put_on(shirt, bed)

        if not inhand(skirt):
            grab(skirt)
        if not on(skirt, bed):
            put_on(skirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select clothes_shirt_2086

        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2088
        # Select clothes_skirt_2088

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        put_clothes_on_bed(shirt, skirt, bed)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior put_clothes_on_bed(shirt: item, skirt: item, bed: item):
    body:
        if not inhand(shirt):
            grab(shirt)
        if not on(shirt, bed):
            put_on(shirt, bed)

        if not inhand(skirt):
            grab(skirt)
        if not on(skirt, bed):
            put_on(skirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select clothes_shirt_2086

        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2088
        # Select clothes_skirt_2088

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        put_clothes_on_bed(shirt, skirt, bed)

##############################
From agent.py-> find a plan in act()
walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(bed_105)put_executor(clothes_shirt_2086, bed_105)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(bed_105)put_executor(clothes_skirt_2088, bed_105)
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the clothes_shirt_2086. 
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the clothes_shirt_2086. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(bed_105)
Robot find: mat_173, drawing_176, pillow_183, clothes_underwear_2049, clothes_dress_2044, pillow_182, chair_106, clothes_scarf_2048, Robot is close to the clothes_shirt_2086. Robot is close to the bed_105. Robot is close to the mat_173. 
##############################
From agent.py
put_executor(clothes_shirt_2086, bed_105)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the bed_105. Robot is close to the mat_173. bed_105 is close clothes_shirt_2086. clothes_shirt_2086 is close bed_105. clothes_shirt_2086 is on bed_105. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. 
##############################
From agent.py
grab_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. Grabbing clothes_skirt_2088 by right hand. 
##############################
From agent.py
walk_executor(bed_105)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the bed_105. Robot is close to the mat_173. 
##############################
From agent.py
put_executor(clothes_skirt_2088, bed_105)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the bed_105. Robot is close to the mat_173. bed_105 is close clothes_skirt_2088. clothes_skirt_2088 is close bed_105. clothes_skirt_2088 is on bed_105. clothes_skirt_2088 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Iron the shirt and the skirt, and place them on the bed.
Action History:
['walk_executor(closetdrawer_148)', 'walk_executor(closetdrawer_148)', 'walk_executor(closetdrawer_148)', 'walk_executor(closetdrawer_148)', 'walk_executor(closetdrawer_148)', 'walk_executor(closetdrawer_148)', 'walk_executor(basket_for_clothes_2006)', 'grab_executor(clothes_shirt_2086)', 'walk_executor(ironing_board_2074)', 'put_executor(clothes_shirt_2086, ironing_board_2074)', 'grab_executor(clothes_shirt_2086)', 'put_executor(clothes_shirt_2086, ironing_board_2074)', 'walk_executor(iron_2089)', 'plugin_executor(iron_2089)', 'switchon_executor(iron_2089)', 'switchoff_executor(iron_2089)', 'plugout_executor(iron_2089)', 'walk_executor(clothes_skirt_2088)', 'grab_executor(clothes_skirt_2088)', 'walk_executor(ironing_board_2074)', 'put_executor(clothes_skirt_2088, ironing_board_2074)', 'plugin_executor(iron_2089)', 'switchon_executor(iron_2089)', 'switchoff_executor(iron_2089)', 'plugout_executor(iron_2089)', 'walk_executor(clothes_shirt_2086)', 'grab_executor(clothes_shirt_2086)', 'walk_executor(bed_105)', 'put_executor(clothes_shirt_2086, bed_105)', 'walk_executor(clothes_skirt_2088)', 'grab_executor(clothes_skirt_2088)', 'walk_executor(bed_105)', 'put_executor(clothes_skirt_2088, bed_105)']
Time info:
Time consume: 244 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 89
goal generate times: 5
goal correct times: 0
action_num: 33

Task complete rate:
Keystate: k1 - Requires: 10 steps
Keystate: k2 - Requires: 9 steps
Keystate: k3 - Requires: 0 steps
Keystate: k4 - Requires: 0 steps
Action Completion Rate: 0.0
Scene_id: 0
##############################
