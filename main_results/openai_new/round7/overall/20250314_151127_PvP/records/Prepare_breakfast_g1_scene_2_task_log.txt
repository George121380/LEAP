From agent.py
Reset goals: The sub-goals are: 
['Slice the bread and toast it.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_kitchen_counter_128(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(knife,kitchen_counter_instance)
        else:
            exp(knife,kitchen_counter_instance)
    eff:
        unknown[knife]=False
        close[knife,kitchen_counter_instance]=True
        close[kitchen_counter_instance,knife]=True
    

behavior find_food_bread_2016_around_kitchen_counter_128(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_bread,kitchen_counter_instance)
        else:
            exp(food_bread,kitchen_counter_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_bread]=True
    

#exp_behavior_end

#goal_representation

def is_toaster_plugged(toaster: item):
    # Function to check if the toaster is plugged in
    return plugged(toaster)

behavior ensure_toaster_is_on(toaster:item):
    body:
        if not is_on(toaster) and has_switch(toaster):
            switch_on(toaster)

behavior toast_sliced_bread(sliced_bread:item, toaster:item):
    body:
        if not inside(sliced_bread, toaster):
            put_inside(sliced_bread, toaster)
        ensure_toaster_is_on(toaster)

behavior grab_and_cut_bread(bread:item, knife:item):
    body:
        if not inhand(knife):
            grab(knife)
        if not cut(bread):
            cuts(bread)

behavior find_and_slice_bread(knife:item):
    body:
        bind bread: item where:
            is_food_bread(bread) and cuttable(bread)
        # Select a sliceable bread item
        
        walk_to(bread)
        
        grab_and_cut_bread(bread, knife)

behavior __goal__():
    body:
        bind knife: item where:
            is_knife(knife)
        # Select a knife

        find_and_slice_bread(knife)
        # Use the knife to slice the bread

        bind sliced_bread: item where:
            is_food_bread(sliced_bread) and cut(sliced_bread)
        # Select the sliced bread

        bind toaster: item where:
            is_toaster(toaster)
        # Select the toaster

        if not is_toaster_plugged(toaster):
            plugin(toaster)

        walk_to(toaster)
        toast_sliced_bread(sliced_bread, toaster)
#goal_representation_end

##############################
From agent.py->reset_goal

def is_toaster_plugged(toaster: item):
    # Function to check if the toaster is plugged in
    return plugged(toaster)

behavior ensure_toaster_is_on(toaster:item):
    body:
        if not is_on(toaster) and has_switch(toaster):
            switch_on(toaster)

behavior toast_sliced_bread(sliced_bread:item, toaster:item):
    body:
        if not inside(sliced_bread, toaster):
            put_inside(sliced_bread, toaster)
        ensure_toaster_is_on(toaster)

behavior grab_and_cut_bread(bread:item, knife:item):
    body:
        if not inhand(knife):
            grab(knife)
        if not cut(bread):
            cuts(bread)

behavior find_and_slice_bread(knife:item):
    body:
        bind bread: item where:
            is_food_bread(bread) and cuttable(bread)
        # Select a sliceable bread item
        
        walk_to(bread)
        
        grab_and_cut_bread(bread, knife)

behavior __goal__():
    body:
        bind knife: item where:
            is_knife(knife)
        # Select a knife

        find_and_slice_bread(knife)
        # Use the knife to slice the bread

        bind sliced_bread: item where:
            is_food_bread(sliced_bread) and cut(sliced_bread)
        # Select the sliced bread

        bind toaster: item where:
            is_toaster(toaster)
        # Select the toaster

        if not is_toaster_plugged(toaster):
            plugin(toaster)

        walk_to(toaster)
        toast_sliced_bread(sliced_bread, toaster)
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(food_bread_2016, kitchen_counter_128)walk_executor(food_bread_2016)walk_executor(kitchen_counter_128)exp(knife_2036, kitchen_counter_128)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)open_executor(toaster_144)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(toaster_144)putin_executor(food_bread_2016, toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(food_bread_2016, kitchen_counter_128)
Fail to find food_bread_2016 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_bread_2016, fridge_140)walk_executor(food_bread_2016)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)open_executor(toaster_144)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(toaster_144)putin_executor(food_bread_2016, toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_bread_2016, fridge_140)
Fail to find food_bread_2016 around fridge_140. 
##############################
From agent.py-> find a plan in act()
walk_executor(mousepad_381)exp(food_bread_2016, mousepad_381)walk_executor(food_bread_2016)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)open_executor(toaster_144)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(toaster_144)putin_executor(food_bread_2016, toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(mousepad_381)
Robot find: chair_374, mouse_380, keyboard_382, glue_2013, Robot is close to the mousepad_381. Robot is close to the desk_375. 
##############################
From agent.py
exp(food_bread_2016, mousepad_381)
Fail to find food_bread_2016 around mousepad_381. 
##############################
From agent.py-> find a plan in act()
walk_executor(photoframe_210)exp(food_bread_2016, photoframe_210)walk_executor(food_bread_2016)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)open_executor(toaster_144)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(toaster_144)putin_executor(food_bread_2016, toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(photoframe_210)
Robot find: Robot is close to the photoframe_210. Robot is close to the wallshelf_187. 
##############################
From agent.py
exp(food_bread_2016, photoframe_210)
Fail to find food_bread_2016 around photoframe_210. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_129)exp(food_bread_2016, kitchen_counter_129)walk_executor(food_bread_2016)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)open_executor(toaster_144)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(toaster_144)putin_executor(food_bread_2016, toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(kitchen_counter_129)
Robot find: fryingpan_2107, oil_2102, pot_54, pot_2093, Robot is close to the kitchen_counter_129. 
##############################
From agent.py
exp(food_bread_2016, kitchen_counter_129)
Fail to find food_bread_2016 around kitchen_counter_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(food_bread_2016, kitchen_counter_132)walk_executor(food_bread_2016)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)open_executor(toaster_144)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(toaster_144)putin_executor(food_bread_2016, toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the kitchen_counter_132. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find food_bread_2016 ?
Answer: Go to bedroom_327 and locate filing_cabinet_378. Inside filing_cabinet_378, you will find the target object food_bread_2016.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to bedroom_327 and locate filing_cabinet_378. Inside filing_cabinet_378, you will find the target object food_bread_2016.

The actions you have taken:
Action 1: Walk to kitchen_counter_128.
Action 2: look for food_bread_2016 around kitchen_counter_128.
Action 3: Walk to fridge_140.
Action 4: Switch off fridge_140.
Action 5: Open fridge_140.
Action 6: look for food_bread_2016 around fridge_140.
Action 7: Walk to mousepad_381.
Action 8: look for food_bread_2016 around mousepad_381.
Action 9: Walk to photoframe_210.
Action 10: look for food_bread_2016 around photoframe_210.
Action 11: Walk to kitchen_counter_129.
Action 12: look for food_bread_2016 around kitchen_counter_129.
Action 13: Walk to kitchen_counter_132.

##############################
From agent.py
exp(food_bread_2016, kitchen_counter_132)
Fail to find food_bread_2016 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(filing_cabinet_378)exp(food_bread_2016, filing_cabinet_378)walk_executor(food_bread_2016)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)open_executor(toaster_144)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(toaster_144)putin_executor(food_bread_2016, toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(filing_cabinet_378)
Robot find: food_bread_2016, crayon_2020, needle_2024, check_2033, alcohol_2002, coffee_filter_2035, soap_2037, bills_2009, drawing_387, Robot is close to the food_bread_2016. Robot is close to the crayon_2020. Robot is close to the needle_2024. Robot is close to the check_2033. Robot is close to the alcohol_2002. Robot is close to the coffee_filter_2035. Robot is close to the soap_2037. Robot is close to the bills_2009. Robot is close to the filing_cabinet_378. 
##############################
From agent.py
exp(food_bread_2016, filing_cabinet_378)
Find food_bread_2016. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_bread_2016)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)open_executor(toaster_144)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(toaster_144)putin_executor(food_bread_2016, toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(food_bread_2016)
Robot find: Robot is close to the food_bread_2016. Robot is close to the filing_cabinet_378. 
##############################
From agent.py
walk_executor(knifeblock_52)
Robot find: Robot is close to the knifeblock_52. 
##############################
From agent.py
exp(knife_2036, knifeblock_52)
Fail to find knife_2036 around knifeblock_52. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_bread_2016)walk_executor(bench_126)exp(knife_2036, bench_126)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)open_executor(toaster_144)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(toaster_144)putin_executor(food_bread_2016, toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(food_bread_2016)
Robot find: Robot is close to the food_bread_2016. Robot is close to the filing_cabinet_378. 
##############################
From agent.py
walk_executor(bench_126)
Robot find: mat_115, Robot is close to the bench_126. 
##############################
From agent.py
exp(knife_2036, bench_126)
Fail to find knife_2036 around bench_126. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_bread_2016)walk_executor(door_38)exp(knife_2036, door_38)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)open_executor(toaster_144)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(toaster_144)putin_executor(food_bread_2016, toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(food_bread_2016)
Robot find: Robot is close to the food_bread_2016. Robot is close to the filing_cabinet_378. 
##############################
From agent.py
walk_executor(door_38)
Robot find: Robot is close to the door_38. 
##############################
From agent.py
exp(knife_2036, door_38)
Fail to find knife_2036 around door_38. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_bread_2016)walk_executor(home_office_161)exp(knife_2036, home_office_161)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)open_executor(toaster_144)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(toaster_144)putin_executor(food_bread_2016, toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(food_bread_2016)
Robot find: Robot is close to the food_bread_2016. Robot is close to the filing_cabinet_378. 
##############################
From agent.py
walk_executor(home_office_161)

##############################
From agent.py
exp(knife_2036, home_office_161)
Fail to find knife_2036 around home_office_161. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_bread_2016)walk_executor(home_office_161)exp(knife_2036, home_office_161)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)open_executor(toaster_144)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(toaster_144)putin_executor(food_bread_2016, toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(food_bread_2016)
Robot find: Robot is close to the food_bread_2016. Robot is close to the filing_cabinet_378. 
##############################
From agent.py
walk_executor(home_office_161)

##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find knife_2036 ?
Answer: Go to the dining room. Locate the dishwasher, labeled dishwasher_143. Open dishwasher_143, where you will find knife_2036 inside.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to bedroom_327 and locate filing_cabinet_378. Inside filing_cabinet_378, you will find the target object food_bread_2016.
Go to the dining room. Locate the dishwasher, labeled dishwasher_143. Open dishwasher_143, where you will find knife_2036 inside.

The actions you have taken:
Action 1: Walk to kitchen_counter_128.
Action 2: look for food_bread_2016 around kitchen_counter_128.
Action 3: Walk to fridge_140.
Action 4: Switch off fridge_140.
Action 5: Open fridge_140.
Action 6: look for food_bread_2016 around fridge_140.
Action 7: Walk to mousepad_381.
Action 8: look for food_bread_2016 around mousepad_381.
Action 9: Walk to photoframe_210.
Action 10: look for food_bread_2016 around photoframe_210.
Action 11: Walk to kitchen_counter_129.
Action 12: look for food_bread_2016 around kitchen_counter_129.
Action 13: Walk to kitchen_counter_132.
Action 14: look for food_bread_2016 around kitchen_counter_132.
Action 15: Walk to filing_cabinet_378.
Action 16: look for food_bread_2016 around filing_cabinet_378.
Action 17: Walk to food_bread_2016.
Action 18: Walk to knifeblock_52.
Action 19: look for knife_2036 around knifeblock_52.
Action 20: Walk to food_bread_2016.
Action 21: Walk to bench_126.
Action 22: look for knife_2036 around bench_126.
Action 23: Walk to food_bread_2016.
Action 24: Walk to door_38.
Action 25: look for knife_2036 around door_38.
Action 26: Walk to food_bread_2016.
Action 27: Walk to home_office_161.
Action 28: look for knife_2036 around home_office_161.
Action 29: Walk to food_bread_2016.
Action 30: Walk to home_office_161.

##############################
From agent.py
exp(knife_2036, home_office_161)
Fail to find knife_2036 around home_office_161. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['Slice the bread and toast it.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_dishwasher_143(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==143
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(knife,dishwasher_instance)
        else:
            exp(knife,dishwasher_instance)
    eff:
        unknown[knife]=False
        close[knife,dishwasher_instance]=True
        close[dishwasher_instance,knife]=True
    

behavior find_bowl_2095_around_sink_133(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(bowl,sink_instance)
        else:
            exp(bowl,sink_instance)
    eff:
        unknown[bowl]=False
        close[bowl,sink_instance]=True
        close[sink_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior grab_and_cut_bread(bread:item, knife:item):
    body:
        if not inhand(knife):
            grab(knife)
        if not cut(bread):
            cuts(bread)
        
behavior find_and_slice_bread(knife:item):
    body:
        bind bread: item where:
            is_food_bread(bread) and cuttable(bread)
        # Select a sliceable bread item
        
        walk_to(bread)
        
        grab_and_cut_bread(bread, knife)

def is_toaster_plugged(toaster: item):
    # Function to check if the toaster is plugged in
    return plugged(toaster)

behavior ensure_toaster_is_on(toaster:item):
    body:
        if not is_on(toaster) and has_switch(toaster):
            switch_on(toaster)

behavior toast_sliced_bread(sliced_bread:item, toaster:item):
    body:
        if not inside(sliced_bread, toaster):
            put_inside(sliced_bread, toaster)
        ensure_toaster_is_on(toaster)

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread) and cuttable(bread)
        # Select a sliceable bread item
        
        bind knife: item where:
            is_knife(knife) and close_char(char, knife)
        # Select a knife

        find_and_slice_bread(knife)
        # Use the knife to slice the bread
        
        bind sliced_bread: item where:
            is_food_bread(sliced_bread) and cut(sliced_bread)
        # Select the sliced bread

        bind toaster: item where:
            is_toaster(toaster)
        # Select the toaster

        if not is_toaster_plugged(toaster):
            plugin(toaster)
        
        toast_sliced_bread(sliced_bread, toaster)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_dishwasher_143(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==143
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(knife,dishwasher_instance)
        else:
            exp(knife,dishwasher_instance)
    eff:
        unknown[knife]=False
        close[knife,dishwasher_instance]=True
        close[dishwasher_instance,knife]=True
    

behavior find_mat_201_around_cutting_board_2080(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind cutting_board_instance:item where:
            is_cutting_board(cutting_board_instance) and id[cutting_board_instance]==2080
        achieve close_char(char,cutting_board_instance)
        if can_open(cutting_board_instance):
            achieve_once open(cutting_board_instance)
            exp(mat,cutting_board_instance)
        else:
            exp(mat,cutting_board_instance)
    eff:
        unknown[mat]=False
        close[mat,cutting_board_instance]=True
        close[cutting_board_instance,mat]=True
    

#exp_behavior_end

#goal_representation
behavior grab_and_cut_bread(bread:item, knife:item):
    body:
        if not inhand(knife):
            grab(knife)
        if not cut(bread):
            cuts(bread)
        
behavior find_and_slice_bread(knife:item):
    body:
        bind bread: item where:
            is_food_bread(bread) and cuttable(bread)
        # Select a sliceable bread item
        
        walk_to(bread)
        
        grab_and_cut_bread(bread, knife)

def is_toaster_plugged(toaster: item):
    # Function to check if the toaster is plugged in
    return plugged(toaster)

behavior ensure_toaster_is_on(toaster:item):
    body:
        if not is_on(toaster) and has_switch(toaster):
            switch_on(toaster)

behavior toast_sliced_bread(sliced_bread:item, toaster:item):
    body:
        if not inside(sliced_bread, toaster):
            put_inside(sliced_bread, toaster)
        ensure_toaster_is_on(toaster)

behavior __goal__():
    body:
        bind knife: item where:
            is_knife(knife)
        # Select a knife

        find_and_slice_bread(knife)
        # Use the knife to slice the bread

        bind sliced_bread: item where:
            is_food_bread(sliced_bread) and cut(sliced_bread)
        # Select the sliced bread

        bind toaster: item where:
            is_toaster(toaster)
        # Select the toaster

        if not is_toaster_plugged(toaster):
            plugin(toaster)

        walk_to(toaster)
        toast_sliced_bread(sliced_bread, toaster)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior grab_and_cut_bread(bread:item, knife:item):
    body:
        if not inhand(knife):
            grab(knife)
        if not cut(bread):
            cuts(bread)
        
behavior find_and_slice_bread(knife:item):
    body:
        bind bread: item where:
            is_food_bread(bread) and cuttable(bread)
        # Select a sliceable bread item
        
        walk_to(bread)
        
        grab_and_cut_bread(bread, knife)

def is_toaster_plugged(toaster: item):
    # Function to check if the toaster is plugged in
    return plugged(toaster)

behavior ensure_toaster_is_on(toaster:item):
    body:
        if not is_on(toaster) and has_switch(toaster):
            switch_on(toaster)

behavior toast_sliced_bread(sliced_bread:item, toaster:item):
    body:
        if not inside(sliced_bread, toaster):
            put_inside(sliced_bread, toaster)
        ensure_toaster_is_on(toaster)

behavior __goal__():
    body:
        bind knife: item where:
            is_knife(knife)
        # Select a knife

        find_and_slice_bread(knife)
        # Use the knife to slice the bread

        bind sliced_bread: item where:
            is_food_bread(sliced_bread) and cut(sliced_bread)
        # Select the sliced bread

        bind toaster: item where:
            is_toaster(toaster)
        # Select the toaster

        if not is_toaster_plugged(toaster):
            plugin(toaster)

        walk_to(toaster)
        toast_sliced_bread(sliced_bread, toaster)
##############################
From agent.py-> find a plan in act()
walk_executor(food_bread_2016)walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(knife_2036, dishwasher_143)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)open_executor(toaster_144)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(toaster_144)putin_executor(food_bread_2016, toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(food_bread_2016)
Robot find: Robot is close to the food_bread_2016. Robot is close to the filing_cabinet_378. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(knife_2036, dishwasher_143)
Find knife_2036. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_bread_2016)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)open_executor(toaster_144)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(toaster_144)putin_executor(food_bread_2016, toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(food_bread_2016)
Robot find: Robot is close to the food_bread_2016. Robot is close to the filing_cabinet_378. 
##############################
From agent.py
walk_executor(knife_2036)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. 
##############################
From agent.py
grab_executor(knife_2036)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. Grabbing knife_2036 by right hand. 
##############################
From agent.py
walk_executor(food_bread_2016)
Robot find: Robot is close to the knife_2036. Robot is close to the food_bread_2016. Robot is close to the filing_cabinet_378. 
##############################
From agent.py
grab_executor(food_bread_2016)
Robot find: Robot is close to the knife_2036. Robot is close to the food_bread_2016. Robot is close to the filing_cabinet_378. Grabbing food_bread_2016 by left hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_bread_2016. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_bread_2016, cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_bread_2016. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. cutting_board_2080 is close food_bread_2016. food_bread_2016 is close cutting_board_2080. food_bread_2016 is on cutting_board_2080. food_bread_2016 released by left hand. 
##############################
From agent.py
walk_executor(food_bread_2016)
Robot find: Robot is close to the knife_2036. Robot is close to the food_bread_2016. Robot is close to the cutting_board_2080. 
##############################
From agent.py
cut_executor(food_bread_2016)
Robot find: Robot is close to the knife_2036. Robot is close to the food_bread_2016. Robot is close to the cutting_board_2080. 
##############################
From agent.py
walk_executor(toaster_144)
Robot find: Robot is close to the knife_2036. Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. 
##############################
From agent.py
open_executor(toaster_144)
Robot find: Robot is close to the knife_2036. Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. toaster_144 is opened. 
##############################
From agent.py
walk_executor(food_bread_2016)
Robot find: Robot is close to the knife_2036. Robot is close to the food_bread_2016. Robot is close to the cutting_board_2080. 
##############################
From agent.py
grab_executor(food_bread_2016)
Robot find: Robot is close to the knife_2036. Robot is close to the food_bread_2016. Robot is close to the cutting_board_2080. Grabbing food_bread_2016 by left hand. 
##############################
From agent.py
walk_executor(toaster_144)
Robot find: Robot is close to the knife_2036. Robot is close to the food_bread_2016. Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. 
##############################
From agent.py
putin_executor(food_bread_2016, toaster_144)
Robot find: Robot is close to the knife_2036. Robot is close to the food_bread_2016. Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. food_bread_2016 is inside toaster_144. toaster_144 is close food_bread_2016. food_bread_2016 is close toaster_144. food_bread_2016 released by left hand. 
##############################
From agent.py
close_executor(toaster_144)
Robot find: Robot is close to the knife_2036. Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. toaster_144 is closed. 
##############################
From agent.py
switchon_executor(toaster_144)
Robot find: Robot is close to the knife_2036. Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. toaster_144 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Slice and toast bread.
Action History:
['walk_executor(kitchen_counter_128)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'walk_executor(mousepad_381)', 'walk_executor(photoframe_210)', 'walk_executor(kitchen_counter_129)', 'walk_executor(kitchen_counter_132)', 'walk_executor(filing_cabinet_378)', 'walk_executor(food_bread_2016)', 'walk_executor(knifeblock_52)', 'walk_executor(food_bread_2016)', 'walk_executor(bench_126)', 'walk_executor(food_bread_2016)', 'walk_executor(door_38)', 'walk_executor(food_bread_2016)', 'walk_executor(home_office_161)', 'walk_executor(food_bread_2016)', 'walk_executor(home_office_161)', 'walk_executor(food_bread_2016)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'walk_executor(food_bread_2016)', 'walk_executor(knife_2036)', 'grab_executor(knife_2036)', 'walk_executor(food_bread_2016)', 'grab_executor(food_bread_2016)', 'walk_executor(cutting_board_2080)', 'put_executor(food_bread_2016, cutting_board_2080)', 'walk_executor(food_bread_2016)', 'cut_executor(food_bread_2016)', 'walk_executor(toaster_144)', 'open_executor(toaster_144)', 'walk_executor(food_bread_2016)', 'grab_executor(food_bread_2016)', 'walk_executor(toaster_144)', 'putin_executor(food_bread_2016, toaster_144)', 'close_executor(toaster_144)', 'switchon_executor(toaster_144)']
Time info:
Time consume: 167 seconds
Exp_helper query times: 2
Guidance query times: 0
library scale: 153
goal generate times: 3
goal correct times: 0
action_num: 39

Task complete rate:
1
Scene_id: 2
##############################
