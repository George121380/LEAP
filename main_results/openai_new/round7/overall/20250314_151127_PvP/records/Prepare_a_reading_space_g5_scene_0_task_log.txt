From agent.py
Reset goals: The sub-goals are: 
['1. Find your spectacles and put them on the coffee table in the home office.', '2. Find the book and put it on the coffee table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_spectacles_2082_around_desk_104(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==104
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(spectacles,desk_instance)
        else:
            exp(spectacles,desk_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,desk_instance]=True
        close[desk_instance,spectacles]=True
    

#exp_behavior_end

#goal_representation
behavior find_spectacles_and_place_on_table(spectacles: item, table: item):
    body:
        if not inhand(spectacles):
            grab(spectacles)
        if not on(spectacles, table):
            put_on(spectacles, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Bind to the home office

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Bind to the coffee table inside the home office

        bind spectacles: item where:
            is_spectacles(spectacles)
        # Bind to the spectacles

        find_spectacles_and_place_on_table(spectacles, coffee_table)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior find_spectacles_and_place_on_table(spectacles: item, table: item):
    body:
        if not inhand(spectacles):
            grab(spectacles)
        if not on(spectacles, table):
            put_on(spectacles, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Bind to the home office

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Bind to the coffee table inside the home office

        bind spectacles: item where:
            is_spectacles(spectacles)
        # Bind to the spectacles

        find_spectacles_and_place_on_table(spectacles, coffee_table)
##############################
From agent.py-> find a plan in act()
walk_executor(desk_104)exp(spectacles_2082, desk_104)walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(table_355)put_executor(spectacles_2082, table_355)
##############################
From agent.py
walk_executor(desk_104)
Robot find: mouse_166, keyboard_168, drawing_175, chair_103, Robot is close to the desk_104. 
##############################
From agent.py
exp(spectacles_2082, desk_104)
Fail to find spectacles_2082 around desk_104. 
##############################
From agent.py-> find a plan in act()
walk_executor(desk_357)exp(spectacles_2082, desk_357)walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(table_355)put_executor(spectacles_2082, table_355)
##############################
From agent.py
walk_executor(desk_357)
Robot find: keyboard_415, headset_2076, chair_356, phone_2077, mouse_413, pencil_2001, Robot is close to the desk_357. 
##############################
From agent.py
exp(spectacles_2082, desk_357)
Fail to find spectacles_2082 around desk_357. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_107)exp(spectacles_2082, table_107)walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(table_355)put_executor(spectacles_2082, table_355)
##############################
From agent.py
walk_executor(table_107)
Robot find: mat_173, clothes_hat_2045, clothes_gloves_2046, drawing_176, drawing_174, Robot is close to the table_107. 
##############################
From agent.py
exp(spectacles_2082, table_107)
Fail to find spectacles_2082 around table_107. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_226)exp(spectacles_2082, table_226)walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(table_355)put_executor(spectacles_2082, table_355)
##############################
From agent.py
walk_executor(table_226)
Robot find: drawing_243, bowl_2071, coffee_filter_2000, drawing_2003, drawing_241, bowl_2072, mat_236, fork_2080, drawing_238, drawing_239, drawing_240, drawing_242, fork_2081, mat_237, Robot is close to the table_226. 
##############################
From agent.py
exp(spectacles_2082, table_226)
Fail to find spectacles_2082 around table_226. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_355)exp(spectacles_2082, table_355)walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(table_355)put_executor(spectacles_2082, table_355)
##############################
From agent.py
walk_executor(table_355)
Robot find: mat_401, headset_2062, spectacles_2082, pillow_406, remote_control_2052, clothes_jacket_2047, pillow_405, cat_2055, drawing_400, drawing_404, hairbrush_2002, vacuum_cleaner_2070, Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. 
##############################
From agent.py
exp(spectacles_2082, table_355)
Find spectacles_2082. 
##############################
From agent.py-> find a plan in act()
walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(table_355)put_executor(spectacles_2082, table_355)
##############################
From agent.py
walk_executor(spectacles_2082)
Robot find: Robot is close to the table_355. Robot is close to the spectacles_2082. 
##############################
From agent.py
grab_executor(spectacles_2082)
Robot find: Robot is close to the table_355. Robot is close to the spectacles_2082. Grabbing spectacles_2082 by right hand. 
##############################
From agent.py
walk_executor(table_355)
Robot find: Robot is close to the table_355. Robot is close to the spectacles_2082. Robot is close to the couch_352. Robot is close to the mat_401. 
##############################
From agent.py
put_executor(spectacles_2082, table_355)
Robot find: Robot is close to the table_355. Robot is close to the spectacles_2082. Robot is close to the couch_352. Robot is close to the mat_401. spectacles_2082 is close table_355. spectacles_2082 is on table_355. spectacles_2082 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to find your spectacles and ensure they are put on the coffee table in the home office. Currently, the spectacles have been placed on table_355, which is not confirmed to be the coffee table in the home office according to the given conditions.
##############################
From agent.py
Human Instruction: You need to find your spectacles and ensure they are put on the coffee table in the home office. Currently, the spectacles have been placed on table_355, which is not confirmed to be the coffee table in the home office according to the given conditions.

The actions you have taken:
Action 1: Walk to desk_104.
Action 2: look for spectacles_2082 around desk_104.
Action 3: Walk to desk_357.
Action 4: look for spectacles_2082 around desk_357.
Action 5: Walk to table_107.
Action 6: look for spectacles_2082 around table_107.
Action 7: Walk to table_226.
Action 8: look for spectacles_2082 around table_226.
Action 9: Walk to table_355.
Action 10: look for spectacles_2082 around table_355.
Action 11: Walk to spectacles_2082.
Action 12: Grab spectacles_2082.
Action 13: Walk to table_355.
Action 14: Put spectacles_2082 on table_355.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior find_and_place_spectacles_on_table(spectacles:item, table:item):
    body:
        if not inhand(spectacles):
            grab(spectacles)
        if not on(spectacles, table):
            put_on(spectacles, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table in the home office

        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select the spectacles

        find_and_place_spectacles_on_table(spectacles, coffee_table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior find_and_place_spectacles_on_table(spectacles:item, table:item):
    body:
        if not inhand(spectacles):
            grab(spectacles)
        if not on(spectacles, table):
            put_on(spectacles, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table in the home office

        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select the spectacles

        find_and_place_spectacles_on_table(spectacles, coffee_table)

##############################
From agent.py-> find a plan in act()
grab_executor(spectacles_2082)put_executor(spectacles_2082, table_355)
##############################
From agent.py
grab_executor(spectacles_2082)
Robot find: Robot is close to the table_355. Robot is close to the spectacles_2082. Robot is close to the couch_352. Robot is close to the mat_401. Grabbing spectacles_2082 by right hand. 
##############################
From agent.py
put_executor(spectacles_2082, table_355)
Robot find: Robot is close to the table_355. Robot is close to the spectacles_2082. Robot is close to the couch_352. Robot is close to the mat_401. spectacles_2082 is close table_355. spectacles_2082 is on table_355. spectacles_2082 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to verify and ensure that table_355 is the coffee table in the home office. If it is not, then identify the correct coffee table in the home office and place the spectacles there.
##############################
From agent.py
Human Instruction: You need to verify and ensure that table_355 is the coffee table in the home office. If it is not, then identify the correct coffee table in the home office and place the spectacles there.

The actions you have taken:
Action 1: Walk to desk_104.
Action 2: look for spectacles_2082 around desk_104.
Action 3: Walk to desk_357.
Action 4: look for spectacles_2082 around desk_357.
Action 5: Walk to table_107.
Action 6: look for spectacles_2082 around table_107.
Action 7: Walk to table_226.
Action 8: look for spectacles_2082 around table_226.
Action 9: Walk to table_355.
Action 10: look for spectacles_2082 around table_355.
Action 11: Walk to spectacles_2082.
Action 12: Grab spectacles_2082.
Action 13: Walk to table_355.
Action 14: Put spectacles_2082 on table_355.
Action 15: Grab spectacles_2082.
Action 16: Put spectacles_2082 on table_355.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_phone_247_around_tvstand_353(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==353
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(phone,tvstand_instance)
        else:
            exp(phone,tvstand_instance)
    eff:
        unknown[phone]=False
        close[phone,tvstand_instance]=True
        close[tvstand_instance,phone]=True
    

#exp_behavior_end

#goal_representation
behavior find_spectacles_and_place_on_table(spectacles: item, table: item):
    body:
        if not inhand(spectacles):
            grab(spectacles)
        if not on(spectacles, table):
            put_on(spectacles, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Bind to the home office

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Bind to the coffee table inside the home office

        bind spectacles: item where:
            is_spectacles(spectacles)
        # Bind to the spectacles

        find_spectacles_and_place_on_table(spectacles, coffee_table)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior find_spectacles_and_place_on_table(spectacles: item, table: item):
    body:
        if not inhand(spectacles):
            grab(spectacles)
        if not on(spectacles, table):
            put_on(spectacles, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Bind to the home office

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Bind to the coffee table inside the home office

        bind spectacles: item where:
            is_spectacles(spectacles)
        # Bind to the spectacles

        find_spectacles_and_place_on_table(spectacles, coffee_table)
##############################
From agent.py-> find a plan in act()
grab_executor(spectacles_2082)put_executor(spectacles_2082, table_355)
##############################
From agent.py
grab_executor(spectacles_2082)
Robot find: Robot is close to the table_355. Robot is close to the spectacles_2082. Robot is close to the couch_352. Robot is close to the mat_401. Grabbing spectacles_2082 by right hand. 
##############################
From agent.py
put_executor(spectacles_2082, table_355)
Robot find: Robot is close to the table_355. Robot is close to the spectacles_2082. Robot is close to the couch_352. Robot is close to the mat_401. spectacles_2082 is close table_355. spectacles_2082 is on table_355. spectacles_2082 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to verify and ensure that table_355 is the coffee table in the home office. If it is not, then identify the correct coffee table in the home office and place the spectacles there.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2063_around_trashcan_99(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind trashcan_instance:item where:
            is_trashcan(trashcan_instance) and id[trashcan_instance]==99
        achieve close_char(char,trashcan_instance)
        if can_open(trashcan_instance):
            achieve_once open(trashcan_instance)
            exp(cup,trashcan_instance)
        else:
            exp(cup,trashcan_instance)
    eff:
        unknown[cup]=False
        close[cup,trashcan_instance]=True
        close[trashcan_instance,cup]=True
    

behavior find_book_2067_around_bookshelf_101(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==101
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
def is_coffee_table_in_home_office(table: item):
    # Check if the table is the correct coffee table in the home office
    return is_table(table) and id[table] == 355

behavior locate_book_and_place_on_table(book: item, table: item):
    body:
        walk_to(book)
        grab(book)
        walk_to(table)
        if not on(book, table):
            put_on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select the target book

        bind table: item where:
            is_table(table) and is_coffee_table_in_home_office(table)
        # Select the coffee table

        locate_book_and_place_on_table(book, table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_coffee_table_in_home_office(table: item):
    # Check if the table is the correct coffee table in the home office
    return is_table(table) and id[table] == 355

behavior locate_book_and_place_on_table(book: item, table: item):
    body:
        walk_to(book)
        grab(book)
        walk_to(table)
        if not on(book, table):
            put_on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select the target book

        bind table: item where:
            is_table(table) and is_coffee_table_in_home_office(table)
        # Select the coffee table

        locate_book_and_place_on_table(book, table)

##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_101)open_executor(bookshelf_101)exp(book_2066, bookshelf_101)walk_executor(book_2066)grab_executor(book_2066)walk_executor(table_355)put_executor(book_2066, table_355)
##############################
From agent.py
walk_executor(bookshelf_101)
Robot find: Robot is close to the bookshelf_101. 
##############################
From agent.py
open_executor(bookshelf_101)
Robot find: Robot is close to the photoframe_185. Robot is close to the bookshelf_101. bookshelf_101 is opened. 
##############################
From agent.py
exp(book_2066, bookshelf_101)
Fail to find book_2066 around bookshelf_101. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_233)open_executor(bookshelf_233)exp(book_2066, bookshelf_233)walk_executor(book_2066)grab_executor(book_2066)walk_executor(table_355)put_executor(book_2066, table_355)
##############################
From agent.py
walk_executor(bookshelf_233)
Robot find: Robot is close to the bookshelf_233. 
##############################
From agent.py
open_executor(bookshelf_233)
Robot find: Robot is close to the bookshelf_233. bookshelf_233 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find book_2066 ?
Answer: The target item, book_2066, is located inside home_office_319, on bookshelf_354. To aid in identification, note that book_2066 is placed directly on bookshelf_354 and is surrounded by other books.
Re-decompose: None

##############################
From agent.py
Human Instruction: You need to verify and ensure that table_355 is the coffee table in the home office. If it is not, then identify the correct coffee table in the home office and place the spectacles there.
The target item, book_2066, is located inside home_office_319, on bookshelf_354. To aid in identification, note that book_2066 is placed directly on bookshelf_354 and is surrounded by other books.

The actions you have taken:
Action 1: Walk to desk_104.
Action 2: look for spectacles_2082 around desk_104.
Action 3: Walk to desk_357.
Action 4: look for spectacles_2082 around desk_357.
Action 5: Walk to table_107.
Action 6: look for spectacles_2082 around table_107.
Action 7: Walk to table_226.
Action 8: look for spectacles_2082 around table_226.
Action 9: Walk to table_355.
Action 10: look for spectacles_2082 around table_355.
Action 11: Walk to spectacles_2082.
Action 12: Grab spectacles_2082.
Action 13: Walk to table_355.
Action 14: Put spectacles_2082 on table_355.
Action 15: Grab spectacles_2082.
Action 16: Put spectacles_2082 on table_355.
Action 17: Grab spectacles_2082.
Action 18: Put spectacles_2082 on table_355.
Action 19: Walk to bookshelf_101.
Action 20: Open bookshelf_101.
Action 21: look for book_2066 around bookshelf_101.
Action 22: Walk to bookshelf_233.
Action 23: Open bookshelf_233.

##############################
From agent.py
exp(book_2066, bookshelf_233)
Fail to find book_2066 around bookshelf_233. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2067_around_bookshelf_354(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==354
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
def is_coffee_table_in_home_office(table: item):
    # Determine if the table is the correct coffee table in the home office
    symbol in_home_office=exists room: item : (is_home_office(room) and inside(table, room))
    return in_home_office

behavior locate_book_and_place_on_table(book: item, table: item):
    body:
        if not inhand(book):
            grab(book)
        if not on(book, table):
            put_on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2066
        # Select the target book with its ID

        bind table: item where:
            is_table(table) and is_coffee_table_in_home_office(table)
        # Select the coffee table in the home office

        walk_to(book)
        locate_book_and_place_on_table(book, table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_coffee_table_in_home_office(table: item):
    # Determine if the table is the correct coffee table in the home office
    symbol in_home_office=exists room: item : (is_home_office(room) and inside(table, room))
    return in_home_office

behavior locate_book_and_place_on_table(book: item, table: item):
    body:
        if not inhand(book):
            grab(book)
        if not on(book, table):
            put_on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2066
        # Select the target book with its ID

        bind table: item where:
            is_table(table) and is_coffee_table_in_home_office(table)
        # Select the coffee table in the home office

        walk_to(book)
        locate_book_and_place_on_table(book, table)

##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_354)open_executor(bookshelf_354)exp(book_2066, bookshelf_354)walk_executor(book_2066)grab_executor(book_2066)walk_executor(table_355)put_executor(book_2066, table_355)
##############################
From agent.py
walk_executor(bookshelf_354)
Robot find: drawing_402, drawing_403, book_2066, book_2067, Robot is close to the bookshelf_354. 
##############################
From agent.py
open_executor(bookshelf_354)
Robot find: Robot is close to the bookshelf_354. Robot is close to the photoframe_430. bookshelf_354 is opened. 
##############################
From agent.py
exp(book_2066, bookshelf_354)
Find book_2066. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2066)grab_executor(book_2066)walk_executor(table_355)put_executor(book_2066, table_355)
##############################
From agent.py
walk_executor(book_2066)
Robot find: Robot is close to the bookshelf_354. Robot is close to the book_2066. 
##############################
From agent.py
grab_executor(book_2066)
Robot find: Robot is close to the bookshelf_354. Robot is close to the book_2066. Grabbing book_2066 by right hand. 
##############################
From agent.py
walk_executor(table_355)
Robot find: Robot is close to the book_2066. Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. 
##############################
From agent.py
put_executor(book_2066, table_355)
Robot find: Robot is close to the book_2066. Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. table_355 is close book_2066. book_2066 is close table_355. book_2066 is on table_355. book_2066 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: Ensure that table_355 is verified as the coffee table in the home office. If it is confirmed, then the sub-task is complete. If it is not, locate the correct coffee table in the home office and place the book_2066 on it.
##############################
From agent.py
Human Instruction: Ensure that table_355 is verified as the coffee table in the home office. If it is confirmed, then the sub-task is complete. If it is not, locate the correct coffee table in the home office and place the book_2066 on it.

The actions you have taken:
Action 1: Walk to desk_104.
Action 2: look for spectacles_2082 around desk_104.
Action 3: Walk to desk_357.
Action 4: look for spectacles_2082 around desk_357.
Action 5: Walk to table_107.
Action 6: look for spectacles_2082 around table_107.
Action 7: Walk to table_226.
Action 8: look for spectacles_2082 around table_226.
Action 9: Walk to table_355.
Action 10: look for spectacles_2082 around table_355.
Action 11: Walk to spectacles_2082.
Action 12: Grab spectacles_2082.
Action 13: Walk to table_355.
Action 14: Put spectacles_2082 on table_355.
Action 15: Grab spectacles_2082.
Action 16: Put spectacles_2082 on table_355.
Action 17: Grab spectacles_2082.
Action 18: Put spectacles_2082 on table_355.
Action 19: Walk to bookshelf_101.
Action 20: Open bookshelf_101.
Action 21: look for book_2066 around bookshelf_101.
Action 22: Walk to bookshelf_233.
Action 23: Open bookshelf_233.
Action 24: look for book_2066 around bookshelf_233.
Action 25: Walk to bookshelf_354.
Action 26: Open bookshelf_354.
Action 27: look for book_2066 around bookshelf_354.
Action 28: Walk to book_2066.
Action 29: Grab book_2066.
Action 30: Walk to table_355.
Action 31: Put book_2066 on table_355.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_406_around_pillow_406(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==406
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
def is_coffee_table_in_home_office(table: item):
    # Determine if the table is the coffee table in the home office with ID 355
    symbol in_home_office=exists room: item : (is_home_office(room) and inside(table, room))
    return in_home_office and id[table] == 355

behavior locate_book_and_place_on_table(book: item, table: item):
    body:
        if not inhand(book):
            grab(book)
        if not on(book, table):
            put_on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2066
        # Select the target book with its ID

        bind table: item where:
            is_table(table) and is_coffee_table_in_home_office(table)
        # Select the coffee table in the home office

        walk_to(book)
        locate_book_and_place_on_table(book, table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_coffee_table_in_home_office(table: item):
    # Determine if the table is the coffee table in the home office with ID 355
    symbol in_home_office=exists room: item : (is_home_office(room) and inside(table, room))
    return in_home_office and id[table] == 355

behavior locate_book_and_place_on_table(book: item, table: item):
    body:
        if not inhand(book):
            grab(book)
        if not on(book, table):
            put_on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2066
        # Select the target book with its ID

        bind table: item where:
            is_table(table) and is_coffee_table_in_home_office(table)
        # Select the coffee table in the home office

        walk_to(book)
        locate_book_and_place_on_table(book, table)

##############################
From agent.py-> find a plan in act()
walk_executor(book_2066)grab_executor(book_2066)walk_executor(table_355)put_executor(book_2066, table_355)
##############################
From agent.py
walk_executor(book_2066)
Robot find: Robot is close to the book_2066. Robot is close to the table_355. 
##############################
From agent.py
grab_executor(book_2066)
Robot find: Robot is close to the book_2066. Robot is close to the table_355. Grabbing book_2066 by right hand. 
##############################
From agent.py
walk_executor(table_355)
Robot find: Robot is close to the book_2066. Robot is close to the table_355. Robot is close to the couch_352. Robot is close to the mat_401. 
##############################
From agent.py
put_executor(book_2066, table_355)
Robot find: Robot is close to the book_2066. Robot is close to the table_355. Robot is close to the couch_352. Robot is close to the mat_401. book_2066 is close table_355. book_2066 is on table_355. book_2066 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Find my spectacles and put it on the coffe table in home office. Then find the book and put it on the coffe table in home office.
Action History:
['walk_executor(desk_104)', 'walk_executor(desk_357)', 'walk_executor(table_107)', 'walk_executor(table_226)', 'walk_executor(table_355)', 'walk_executor(spectacles_2082)', 'grab_executor(spectacles_2082)', 'walk_executor(table_355)', 'put_executor(spectacles_2082, table_355)', 'grab_executor(spectacles_2082)', 'put_executor(spectacles_2082, table_355)', 'grab_executor(spectacles_2082)', 'put_executor(spectacles_2082, table_355)', 'walk_executor(bookshelf_101)', 'open_executor(bookshelf_101)', 'walk_executor(bookshelf_233)', 'open_executor(bookshelf_233)', 'walk_executor(bookshelf_354)', 'open_executor(bookshelf_354)', 'walk_executor(book_2066)', 'grab_executor(book_2066)', 'walk_executor(table_355)', 'put_executor(book_2066, table_355)', 'walk_executor(book_2066)', 'grab_executor(book_2066)', 'walk_executor(table_355)', 'put_executor(book_2066, table_355)']
Time info:
Time consume: 151 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 136
goal generate times: 6
goal correct times: 0
action_num: 27

Task complete rate:
1
Scene_id: 0
##############################
