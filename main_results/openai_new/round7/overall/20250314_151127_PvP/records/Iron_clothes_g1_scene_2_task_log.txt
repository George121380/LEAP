From agent.py
Reset goals: The sub-goals are: 
['Directly iron the pair of skirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_skirt_2116_around_ironing_board_2099(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_skirt,ironing_board_instance)
        else:
            exp(clothes_skirt,ironing_board_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,ironing_board_instance]=True
        close[ironing_board_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt: item, iron: item, ironing_board: item):
    body:
        if not on(skirt, ironing_board):
            if not inhand(skirt):
                grab(skirt)
            put_on(skirt, ironing_board)
            
        if not is_on(iron):
            if is_off(iron):
                if not plugged(iron):
                    plugin(iron)
                switch_on(iron)

behavior ensure_board_is_ready(ironing_board: item):
    body:
        if not surfaces(ironing_board):
            observe(ironing_board, "Check if its ready for ironing")
        
behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt to be ironed

        bind iron: item where:
            is_iron(iron)
        # Select the iron to use

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        ensure_board_is_ready(ironing_board)
        # Ensure the ironing board is ready
        
        iron_skirt(skirt, iron, ironing_board)
        # Iron the skirt on the ironing board

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior iron_skirt(skirt: item, iron: item, ironing_board: item):
    body:
        if not on(skirt, ironing_board):
            if not inhand(skirt):
                grab(skirt)
            put_on(skirt, ironing_board)
            
        if not is_on(iron):
            if is_off(iron):
                if not plugged(iron):
                    plugin(iron)
                switch_on(iron)

behavior ensure_board_is_ready(ironing_board: item):
    body:
        if not surfaces(ironing_board):
            observe(ironing_board, "Check if its ready for ironing")
        
behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt to be ironed

        bind iron: item where:
            is_iron(iron)
        # Select the iron to use

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        ensure_board_is_ready(ironing_board)
        # Ensure the ironing board is ready
        
        iron_skirt(skirt, iron, ironing_board)
        # Iron the skirt on the ironing board

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)exp(clothes_skirt_2116, ironing_board_2099)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: iron_2117, Robot is close to the ironing_board_2099. 
##############################
From agent.py
exp(clothes_skirt_2116, ironing_board_2099)
Fail to find clothes_skirt_2116 around ironing_board_2099. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)exp(clothes_skirt_2116, basket_for_clothes_2040)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Robot find: clothes_pants_2113, clothes_shirt_2114, clothes_socks_2115, clothes_skirt_2116, Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. 
##############################
From agent.py
exp(clothes_skirt_2116, basket_for_clothes_2040)
Find clothes_skirt_2116. 
##############################
From agent.py-> find a plan in act()
grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
grab_executor(clothes_skirt_2116)
Robot find: Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. Grabbing clothes_skirt_2116 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. 
##############################
From agent.py
put_executor(clothes_skirt_2116, ironing_board_2099)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. ironing_board_2099 is close clothes_skirt_2116. clothes_skirt_2116 is close ironing_board_2099. clothes_skirt_2116 is on ironing_board_2099. clothes_skirt_2116 released by right hand. 
##############################
From agent.py
plugin_executor(iron_2117)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. iron_2117 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2117)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. iron_2117 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to directly iron the skirt. The actions taken so far have involved turning on the iron and placing the skirt on the ironing board, but there is no indication that the actual ironing process has started (physically applying the iron to the skirt).
##############################
From agent.py
Human Instruction: You need to directly iron the skirt. The actions taken so far have involved turning on the iron and placing the skirt on the ironing board, but there is no indication that the actual ironing process has started (physically applying the iron to the skirt).

The actions you have taken:
Action 1: Walk to ironing_board_2099.
Action 2: look for clothes_skirt_2116 around ironing_board_2099.
Action 3: Walk to basket_for_clothes_2040.
Action 4: look for clothes_skirt_2116 around basket_for_clothes_2040.
Action 5: Grab clothes_skirt_2116.
Action 6: Walk to ironing_board_2099.
Action 7: Put clothes_skirt_2116 on ironing_board_2099.
Action 8: Plug in iron_2117.
Action 9: Switch on iron_2117.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_needle_2012_around_washing_machine_2041(needle:item):
    goal: not unknown(needle)
    body:
        assert is_needle(needle)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(needle,washing_machine_instance)
        else:
            exp(needle,washing_machine_instance)
    eff:
        unknown[needle]=False
        close[needle,washing_machine_instance]=True
        close[washing_machine_instance,needle]=True
    

#exp_behavior_end

#goal_representation
 
def is_ready_to_iron(skirt: item, iron: item):
    # Check if the skirt is ready to be ironed (skirt on the ironing board and iron is on and in hand)
    return on(skirt, ironing_board_2099) and inhand(iron) and is_on(iron)

behavior grab_iron(iron: item):
    body:
        if not inhand(iron):
            grab(iron)

behavior ensure_iron_is_on(iron: item):
    body:
        if is_off(iron):
            switch_on(iron)

behavior place_skirt_on_ironing_board(skirt: item, board: item):
    body:
        if not on(skirt, board):
            put_on(skirt, board)

behavior start_ironing(skirt: item, iron: item, board: item):
    body:
        place_skirt_on_ironing_board(skirt, board)
        grab_iron(iron)
        ensure_iron_is_on(iron)

        if is_ready_to_iron(skirt, iron):
            # Assuming direct physical actions of ironing as no specific iron behavior exists
            walk_to(board)
            put_on(skirt, iron)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2116
        # Select the skirt

        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        # Select the iron

        bind board: item where:
            is_ironing_board(board) and id[board] == 2099
        # Select the ironing board

        start_ironing(skirt, iron, board)
        # Begin the process of ironing the skirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2078_around_washing_machine_2041(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        if not close_char(char, iron):
            walk_to(iron)

        if not close_char(char, skirt):
            walk_to(ironing_board)

        if is_off(iron) and has_switch(iron):
            switch_on(iron)

        if not plugged(iron) and has_plug(iron):
            plugin(iron)
        
        if close_char(char, skirt) and on(skirt, ironing_board):
            touch(skirt)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt to be ironed

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        if not close_char(char, iron):
            walk_to(iron)

        if not close_char(char, skirt):
            walk_to(ironing_board)

        if is_off(iron) and has_switch(iron):
            switch_on(iron)

        if not plugged(iron) and has_plug(iron):
            plugin(iron)
        
        if close_char(char, skirt) and on(skirt, ironing_board):
            touch(skirt)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt to be ironed

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_skirt(skirt, iron, ironing_board)

##############################
From agent.py-> find a plan in act()
walk_executor(iron_2117)walk_executor(ironing_board_2099)touch_executor(clothes_skirt_2116)
##############################
From agent.py
walk_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. 
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the ironing_board_2099. 
##############################
From agent.py
touch_executor(clothes_skirt_2116)
Robot find: Robot is close to the ironing_board_2099. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to physically apply the turned-on iron to the skirt to complete the ironing process.
##############################
From agent.py
Human Instruction: You need to physically apply the turned-on iron to the skirt to complete the ironing process.

The actions you have taken:
Action 1: Walk to ironing_board_2099.
Action 2: look for clothes_skirt_2116 around ironing_board_2099.
Action 3: Walk to basket_for_clothes_2040.
Action 4: look for clothes_skirt_2116 around basket_for_clothes_2040.
Action 5: Grab clothes_skirt_2116.
Action 6: Walk to ironing_board_2099.
Action 7: Put clothes_skirt_2116 on ironing_board_2099.
Action 8: Plug in iron_2117.
Action 9: Switch on iron_2117.
Action 10: Walk to iron_2117.
Action 11: Walk to ironing_board_2099.
Action 12: Touch clothes_skirt_2116.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2107_around_kitchen_counter_128(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(clothes_skirt:item, iron:item, ironing_board:item):
    body:
        if not inhand(iron):
            grab(iron)
            # Ensure iron is in hand to be able to iron

        if is_off(iron):
            switch_on(iron)
            # Turn on the iron if it is off

        touch(clothes_skirt)
        # Apply the iron to the skirt to complete the ironing process

behavior __goal__():
    body:
        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt)
        # Select clothes skirt

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        walk_to(ironing_board)
        # Move to the ironing board with the clothes skirt on it

        iron_skirt(clothes_skirt, iron, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_skirt(clothes_skirt:item, iron:item, ironing_board:item):
    body:
        if not inhand(iron):
            grab(iron)
            # Ensure iron is in hand to be able to iron

        if is_off(iron):
            switch_on(iron)
            # Turn on the iron if it is off

        touch(clothes_skirt)
        # Apply the iron to the skirt to complete the ironing process

behavior __goal__():
    body:
        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt)
        # Select clothes skirt

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        walk_to(ironing_board)
        # Move to the ironing board with the clothes skirt on it

        iron_skirt(clothes_skirt, iron, ironing_board)

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)grab_executor(iron_2117)touch_executor(clothes_skirt_2116)
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the ironing_board_2099. 
##############################
From agent.py
grab_executor(iron_2117)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. Grabbing iron_2117 by right hand. 
##############################
From agent.py
touch_executor(clothes_skirt_2116)
Robot find: Robot is close to the ironing_board_2099. Robot is close to the iron_2117. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Directly iron a pair of skirt.
Action History:
['walk_executor(ironing_board_2099)', 'walk_executor(basket_for_clothes_2040)', 'grab_executor(clothes_skirt_2116)', 'walk_executor(ironing_board_2099)', 'put_executor(clothes_skirt_2116, ironing_board_2099)', 'plugin_executor(iron_2117)', 'switchon_executor(iron_2117)', 'walk_executor(iron_2117)', 'walk_executor(ironing_board_2099)', 'touch_executor(clothes_skirt_2116)', 'walk_executor(ironing_board_2099)', 'grab_executor(iron_2117)', 'touch_executor(clothes_skirt_2116)']
Time info:
Time consume: 76 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 168
goal generate times: 4
goal correct times: 0
action_num: 13

Task complete rate:
Keystate: k1 - Requires: 2 steps
Action Completion Rate: 0.0
Scene_id: 2
##############################
