From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the jacket.', '2. Wash the jacket using the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2078_around_bed_264(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==264
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(clothes_jacket,bed_instance)
        else:
            exp(clothes_jacket,bed_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,bed_instance]=True
        close[bed_instance,clothes_jacket]=True
    

behavior find_soap_2037_around_sink_307(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#exp_behavior_end

#goal_representation
behavior find_and_grab_jacket(jacket:item):
    body:
        if not inhand(jacket):
            grab(jacket)

behavior hand_wash_jacket(jacket:item):
    body:
        if dirty(jacket):
            wash(jacket)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket

        find_and_grab_jacket(jacket)
        # Ensure the jacket is in hand

        hand_wash_jacket(jacket)
        # Hand wash the jacket if it is dirty
#goal_representation_end

##############################
From agent.py->reset_goal
behavior find_and_grab_jacket(jacket:item):
    body:
        if not inhand(jacket):
            grab(jacket)

behavior hand_wash_jacket(jacket:item):
    body:
        if dirty(jacket):
            wash(jacket)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket

        find_and_grab_jacket(jacket)
        # Ensure the jacket is in hand

        hand_wash_jacket(jacket)
        # Hand wash the jacket if it is dirty
##############################
From agent.py-> find a plan in act()
walk_executor(bed_264)exp(clothes_jacket_2078, bed_264)walk_executor(clothes_jacket_2078)grab_executor(clothes_jacket_2078)
##############################
From agent.py
walk_executor(bed_264)
Robot find: clothes_scarf_2079, pillow_239, clothes_dress_2075, pillow_240, clothes_jacket_2078, mat_237, drawing_238, Robot is close to the bed_264. 
##############################
From agent.py
exp(clothes_jacket_2078, bed_264)
Find clothes_jacket_2078. 
##############################
From agent.py-> find a plan in act()
walk_executor(clothes_jacket_2078)grab_executor(clothes_jacket_2078)wash_executor(clothes_jacket_2078)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(clothes_jacket_2078)
Robot find: Robot is close to the bed_264. Robot is close to the clothes_jacket_2078. 
##############################
From agent.py
grab_executor(clothes_jacket_2078)
Robot find: Robot is close to the bed_264. Robot is close to the clothes_jacket_2078. Grabbing clothes_jacket_2078 by right hand. 
##############################
From agent.py
wash_executor(clothes_jacket_2078)
Robot find: Robot is close to the bed_264. Robot is close to the clothes_jacket_2078. clothes_jacket_2078 is cleaned. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: pot_54, Robot is close to the clothes_jacket_2078. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the clothes_jacket_2078. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_washing_machine_2041(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior use_washing_machine_to_wash_jacket(jacket:item, washing_machine:item):
    body:
        if not inside(jacket, washing_machine):
            put_inside(jacket, washing_machine)

behavior start_washing_machine(washing_machine:item):
    body:
        if open(washing_machine):
            closes(washing_machine) # Close the washing machine door
        if is_off(washing_machine):
            switch_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2078
        # Select clothes_jacket_2078

        bind bed: item where:
            is_bed(bed) and id[bed] == 264
        # Select bed with ID 264

        if not inhand(jacket) and close(jacket, bed):
            grab(jacket)
        # Grab the jacket if its near the bed

        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 134
        # Select washing_machine_134

        use_washing_machine_to_wash_jacket(jacket, washing_machine)
        start_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_washing_machine_2041(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_soap_2038_around_bathroom_counter_306(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior use_washing_machine_to_wash_jacket(jacket:item, washing_machine:item):
    body:
        if not inside(jacket, washing_machine):
            put_inside(jacket, washing_machine)

behavior start_washing_machine(washing_machine:item):
    body:
        if open(washing_machine):
            closes(washing_machine) # Close the washing machine door
        if is_off(washing_machine):
            switch_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine

        use_washing_machine_to_wash_jacket(jacket, washing_machine)
        start_washing_machine(washing_machine)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior use_washing_machine_to_wash_jacket(jacket:item, washing_machine:item):
    body:
        if not inside(jacket, washing_machine):
            put_inside(jacket, washing_machine)

behavior start_washing_machine(washing_machine:item):
    body:
        if open(washing_machine):
            closes(washing_machine) # Close the washing machine door
        if is_off(washing_machine):
            switch_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine

        use_washing_machine_to_wash_jacket(jacket, washing_machine)
        start_washing_machine(washing_machine)

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2041)open_executor(washing_machine_2041)putin_executor(clothes_jacket_2078, washing_machine_2041)close_executor(washing_machine_2041)plugin_executor(washing_machine_2041)switchon_executor(washing_machine_2041)
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot find: Robot is close to the clothes_jacket_2078. Robot is close to the washing_machine_2041. 
##############################
From agent.py
open_executor(washing_machine_2041)
Robot find: Robot is close to the clothes_jacket_2078. Robot is close to the washing_machine_2041. washing_machine_2041 is opened. 
##############################
From agent.py
putin_executor(clothes_jacket_2078, washing_machine_2041)
Robot find: Robot is close to the clothes_jacket_2078. Robot is close to the washing_machine_2041. washing_machine_2041 is close clothes_jacket_2078. clothes_jacket_2078 is inside washing_machine_2041. clothes_jacket_2078 is close washing_machine_2041. clothes_jacket_2078 released by right hand. 
##############################
From agent.py
close_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. washing_machine_2041 is closed. 
##############################
From agent.py
plugin_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. washing_machine_2041 is plugged in. 
##############################
From agent.py
switchon_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. washing_machine_2041 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Hand wash the jacket, then wash it by washing machine.
Action History:
['walk_executor(bed_264)', 'walk_executor(clothes_jacket_2078)', 'grab_executor(clothes_jacket_2078)', 'wash_executor(clothes_jacket_2078)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(washing_machine_2041)', 'open_executor(washing_machine_2041)', 'putin_executor(clothes_jacket_2078, washing_machine_2041)', 'close_executor(washing_machine_2041)', 'plugin_executor(washing_machine_2041)', 'switchon_executor(washing_machine_2041)']
Time info:
Time consume: 49 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 117
goal generate times: 3
goal correct times: 0
action_num: 12

Task complete rate:
1
Scene_id: 2
##############################
