From agent.py
Reset goals: The sub-goals are: 
['1. Find the shirt and the skirt that need to be ironed.', '2. Iron the shirt and the skirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_ironing_board_2144(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2144
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_shirt_2158_around_ironing_board_2144(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2144
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_shirt,ironing_board_instance)
        else:
            exp(clothes_shirt,ironing_board_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,ironing_board_instance]=True
        close[ironing_board_instance,clothes_shirt]=True
    

behavior find_clothes_skirt_2160_around_ironing_board_2144(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2144
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_skirt,ironing_board_instance)
        else:
            exp(clothes_skirt,ironing_board_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,ironing_board_instance]=True
        close[ironing_board_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothes_shirt_or_skirt(item: item):
    # Function to check if the item is either a shirt or skirt
    symbol is_target_clothes = is_clothes_shirt(item) or is_clothes_skirt(item)
    return is_target_clothes

behavior __goal__():
    body:
        foreach item: item:
            if is_clothes_shirt_or_skirt(item) and not visited(item):
                # Check all unvisited items to find the shirt and skirt
                observe(item, "Check if this item is the shirt or skirt that need to be ironed")

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_clothes_shirt_or_skirt(item: item):
    # Function to check if the item is either a shirt or skirt
    symbol is_target_clothes = is_clothes_shirt(item) or is_clothes_skirt(item)
    return is_target_clothes

behavior __goal__():
    body:
        foreach item: item:
            if is_clothes_shirt_or_skirt(item) and not visited(item):
                # Check all unvisited items to find the shirt and skirt
                observe(item, "Check if this item is the shirt or skirt that need to be ironed")

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2144)exp(clothes_shirt_2158, ironing_board_2144)walk_executor(clothes_shirt_2158)obs(clothes_shirt_2158, Check if this item is the shirt or skirt that need to be ironed)walk_executor(ironing_board_2144)exp(clothes_skirt_2160, ironing_board_2144)walk_executor(clothes_skirt_2160)obs(clothes_skirt_2160, Check if this item is the shirt or skirt that need to be ironed)
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot find: Robot is close to the ironing_board_2144. 
##############################
From agent.py
exp(clothes_shirt_2158, ironing_board_2144)
Fail to find clothes_shirt_2158 around ironing_board_2144. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2078)exp(clothes_shirt_2158, basket_for_clothes_2078)walk_executor(clothes_shirt_2158)obs(clothes_shirt_2158, Check if this item is the shirt or skirt that need to be ironed)walk_executor(basket_for_clothes_2078)exp(clothes_skirt_2160, basket_for_clothes_2078)walk_executor(clothes_skirt_2160)obs(clothes_skirt_2160, Check if this item is the shirt or skirt that need to be ironed)
##############################
From agent.py
walk_executor(basket_for_clothes_2078)
Robot find: clothes_pants_2157, clothes_shirt_2158, clothes_socks_2159, clothes_skirt_2160, Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the clothes_socks_2159. Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. 
##############################
From agent.py
exp(clothes_shirt_2158, basket_for_clothes_2078)
Find clothes_shirt_2158. 
##############################
From agent.py-> find a plan in act()
obs(clothes_shirt_2158, Check if this item is the shirt or skirt that need to be ironed)obs(clothes_skirt_2160, Check if this item is the shirt or skirt that need to be ironed)
##############################
From agent.py
obs(clothes_shirt_2158, Check if this item is the shirt or skirt that need to be ironed)
Get this information:  clothes_shirt_2158 is inside dining_room_41. clothes_shirt_2158 is inside basket_for_clothes_2078. clothes_shirt_2158 is close to basket_for_clothes_2078. clothes_shirt_2158 is close to character_240. clothes_shirt_2158 is DIRTY.
##############################
From agent.py
obs(clothes_skirt_2160, Check if this item is the shirt or skirt that need to be ironed)
Get this information:  clothes_skirt_2160 is inside dining_room_41. clothes_skirt_2160 is inside basket_for_clothes_2078. clothes_skirt_2160 is close to basket_for_clothes_2078. clothes_skirt_2160 is close to character_240. clothes_skirt_2160 is DIRTY.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_powersocket_282(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind powersocket_instance:item where:
            is_powersocket(powersocket_instance) and id[powersocket_instance]==282
        achieve close_char(char,powersocket_instance)
        if can_open(powersocket_instance):
            achieve_once open(powersocket_instance)
            exp(iron,powersocket_instance)
        else:
            exp(iron,powersocket_instance)
    eff:
        unknown[iron]=False
        close[iron,powersocket_instance]=True
        close[powersocket_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(shirt: item, skirt: item, ironing_board: item, iron: item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve_once on(skirt, ironing_board)
        achieve plugged(iron)
        achieve is_on(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_clothes(shirt, skirt, ironing_board, iron)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_clothes(shirt: item, skirt: item, ironing_board: item, iron: item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve_once on(skirt, ironing_board)
        achieve plugged(iron)
        achieve is_on(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_clothes(shirt, skirt, ironing_board, iron)

##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2158)walk_executor(ironing_board_2144)put_executor(clothes_shirt_2158, ironing_board_2144)walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)walk_executor(ironing_board_2144)put_executor(clothes_skirt_2160, ironing_board_2144)walk_executor(powersocket_282)exp(iron_2161, powersocket_282)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
grab_executor(clothes_shirt_2158)
Robot find: Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the clothes_socks_2159. Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. Grabbing clothes_shirt_2158 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the ironing_board_2144. 
##############################
From agent.py
put_executor(clothes_shirt_2158, ironing_board_2144)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the ironing_board_2144. ironing_board_2144 is close clothes_shirt_2158. clothes_shirt_2158 is close ironing_board_2144. clothes_shirt_2158 is on ironing_board_2144. clothes_shirt_2158 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2160)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. 
##############################
From agent.py
grab_executor(clothes_skirt_2160)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. Grabbing clothes_skirt_2160 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the ironing_board_2144. 
##############################
From agent.py
put_executor(clothes_skirt_2160, ironing_board_2144)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the ironing_board_2144. clothes_skirt_2160 is close ironing_board_2144. ironing_board_2144 is close clothes_skirt_2160. clothes_skirt_2160 is on ironing_board_2144. clothes_skirt_2160 released by right hand. 
##############################
From agent.py
walk_executor(powersocket_282)
Robot find: mat_284, Robot is close to the powersocket_282. 
##############################
From agent.py
exp(iron_2161, powersocket_282)
Fail to find iron_2161 around powersocket_282. 
##############################
From agent.py-> find a plan in act()
walk_executor(powersocket_72)exp(iron_2161, powersocket_72)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(powersocket_72)
Robot find: Robot is close to the powersocket_72. 
##############################
From agent.py
exp(iron_2161, powersocket_72)
Fail to find iron_2161 around powersocket_72. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(iron_2161, fridge_126)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(iron_2161, fridge_126)
Fail to find iron_2161 around fridge_126. 
##############################
From agent.py-> find a plan in act()
walk_executor(bench_113)exp(iron_2161, bench_113)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(bench_113)
Robot find: mat_102, pillow_103, pillow_104, pillow_105, pillow_106, drawing_110, Robot is close to the bench_113. 
##############################
From agent.py
exp(iron_2161, bench_113)
Fail to find iron_2161 around bench_113. 
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2079)open_executor(washing_machine_2079)exp(iron_2161, washing_machine_2079)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. 
##############################
From agent.py
open_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find iron_2161 ?
Answer: Go to the dining room. Look for bowl_2142. The target object, iron_2161, is on top of bowl_2142.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to the dining room. Look for bowl_2142. The target object, iron_2161, is on top of bowl_2142.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to basket_for_clothes_2078.
Action 4: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 5: Observe around clothes_shirt_2158 with the question of Check if this item is the shirt or skirt that need to be ironed.
Action 6: Observe around clothes_skirt_2160 with the question of Check if this item is the shirt or skirt that need to be ironed.
Action 7: Grab clothes_shirt_2158.
Action 8: Walk to ironing_board_2144.
Action 9: Put clothes_shirt_2158 on ironing_board_2144.
Action 10: Walk to clothes_skirt_2160.
Action 11: Grab clothes_skirt_2160.
Action 12: Walk to ironing_board_2144.
Action 13: Put clothes_skirt_2160 on ironing_board_2144.
Action 14: Walk to powersocket_282.
Action 15: look for iron_2161 around powersocket_282.
Action 16: Walk to powersocket_72.
Action 17: look for iron_2161 around powersocket_72.
Action 18: Walk to fridge_126.
Action 19: Switch off fridge_126.
Action 20: Open fridge_126.
Action 21: look for iron_2161 around fridge_126.
Action 22: Walk to bench_113.
Action 23: look for iron_2161 around bench_113.
Action 24: Walk to washing_machine_2079.
Action 25: Open washing_machine_2079.

##############################
From agent.py
exp(iron_2161, washing_machine_2079)
Fail to find iron_2161 around washing_machine_2079. 
##############################
From agent.py-> find a plan in act()
walk_executor(shower_21)exp(iron_2161, shower_21)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(shower_21)
Robot find: drawing_33, Robot is close to the shower_21. 
##############################
From agent.py
exp(iron_2161, shower_21)
Fail to find iron_2161 around shower_21. 
##############################
From agent.py-> find a plan in act()
walk_executor(window_310)open_executor(window_310)exp(iron_2161, window_310)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(window_310)
Robot find: pillow_286, pillow_287, Robot is close to the window_310. 
##############################
From agent.py
open_executor(window_310)
Robot find: Robot is close to the window_310. window_310 is opened. 
##############################
From agent.py
exp(iron_2161, window_310)
Fail to find iron_2161 around window_310. 
##############################
From agent.py-> find a plan in act()
walk_executor(cutting_board_2123)exp(iron_2161, cutting_board_2123)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_78, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(iron_2161, cutting_board_2123)
Fail to find iron_2161 around cutting_board_2123. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2142)exp(iron_2161, bowl_2142)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(bowl_2142)
Robot find: iron_2161, Robot is close to the kitchen_counter_119. Robot is close to the bowl_2142. 
##############################
From agent.py
exp(iron_2161, bowl_2142)
Find iron_2161. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(iron_2161)
Robot find: Robot is close to the bowl_2142. Robot is close to the iron_2161. 
##############################
From agent.py
plugin_executor(iron_2161)
Robot find: Robot is close to the bowl_2142. Robot is close to the iron_2161. iron_2161 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2161)
Robot find: Robot is close to the bowl_2142. Robot is close to the iron_2161. iron_2161 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The ironed state of the shirt and skirt needs to be achieved. You need to use the iron to iron the shirt and skirt that are on the ironing board after ensuring the iron is plugged in and switched on.
##############################
From agent.py
Human Instruction: The ironed state of the shirt and skirt needs to be achieved. You need to use the iron to iron the shirt and skirt that are on the ironing board after ensuring the iron is plugged in and switched on.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for clothes_shirt_2158 around ironing_board_2144.
Action 3: Walk to basket_for_clothes_2078.
Action 4: look for clothes_shirt_2158 around basket_for_clothes_2078.
Action 5: Observe around clothes_shirt_2158 with the question of Check if this item is the shirt or skirt that need to be ironed.
Action 6: Observe around clothes_skirt_2160 with the question of Check if this item is the shirt or skirt that need to be ironed.
Action 7: Grab clothes_shirt_2158.
Action 8: Walk to ironing_board_2144.
Action 9: Put clothes_shirt_2158 on ironing_board_2144.
Action 10: Walk to clothes_skirt_2160.
Action 11: Grab clothes_skirt_2160.
Action 12: Walk to ironing_board_2144.
Action 13: Put clothes_skirt_2160 on ironing_board_2144.
Action 14: Walk to powersocket_282.
Action 15: look for iron_2161 around powersocket_282.
Action 16: Walk to powersocket_72.
Action 17: look for iron_2161 around powersocket_72.
Action 18: Walk to fridge_126.
Action 19: Switch off fridge_126.
Action 20: Open fridge_126.
Action 21: look for iron_2161 around fridge_126.
Action 22: Walk to bench_113.
Action 23: look for iron_2161 around bench_113.
Action 24: Walk to washing_machine_2079.
Action 25: Open washing_machine_2079.
Action 26: look for iron_2161 around washing_machine_2079.
Action 27: Walk to shower_21.
Action 28: look for iron_2161 around shower_21.
Action 29: Walk to window_310.
Action 30: Open window_310.
Action 31: look for iron_2161 around window_310.
Action 32: Walk to cutting_board_2123.
Action 33: look for iron_2161 around cutting_board_2123.
Action 34: Walk to bowl_2142.
Action 35: look for iron_2161 around bowl_2142.
Action 36: Walk to iron_2161.
Action 37: Plug in iron_2161.
Action 38: Switch on iron_2161.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_clothes_item(item:item):
    # Function to check if the item is either a shirt or a skirt
    symbol is_target_clothes = is_clothes_shirt(item) or is_clothes_skirt(item)
    return is_target_clothes

behavior iron_clothes(item:item, ironing_board:item, iron:item):
    body:
        achieve_once on(item, ironing_board) # Place the item on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Switch on the iron

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board]==2144
        # Select the ironing board with ID 2144

        bind iron: item where:
            is_iron(iron) and id[iron]==2161
        # Select the specific iron with ID 2161

        foreach item: item: 
            if is_clothes_item(item) and on(item, ironing_board):
                iron_clothes(item, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_blow_dryer_2057_around_shower_16(blow_dryer:item):
    goal: not unknown(blow_dryer)
    body:
        assert is_blow_dryer(blow_dryer)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==16
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(blow_dryer,shower_instance)
        else:
            exp(blow_dryer,shower_instance)
    eff:
        unknown[blow_dryer]=False
        close[blow_dryer,shower_instance]=True
        close[shower_instance,blow_dryer]=True
    

#exp_behavior_end

#goal_representation
 
def ensure_ironed_state(clothes:item):
    # Function to check if the clothes are in an ironed state
    symbol is_ironed= is_clothes(clothes) and not dirty(clothes)
    return is_ironed

behavior iron_clothes(clothes:item, iron:item, ironing_board:item):
    body:
        achieve_once on(clothes, ironing_board)
        achieve is_on(iron)
        # Ensure clothes are ironed

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt)
        # Select the shirt

        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt)
        # Select the skirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and on(clothes_shirt, ironing_board) and on(clothes_skirt, ironing_board)
        # Confirm ironing board has clothes

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the plugged and powered on iron

        if not ensure_ironed_state(clothes_shirt):
            iron_clothes(clothes_shirt, iron, ironing_board)
        
        if not ensure_ironed_state(clothes_skirt):
            iron_clothes(clothes_skirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_hanger_292_around_bench_115(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==115
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(hanger,bench_instance)
        else:
            exp(hanger,bench_instance)
    eff:
        unknown[hanger]=False
        close[hanger,bench_instance]=True
        close[bench_instance,hanger]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(clothes:item, iron:item):
    body:
        achieve on(clothes, ironing_board_2144)
        achieve is_on(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt]==2158
        # Select the shirt with ID 2158

        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt]==2160
        # Select the skirt with ID 2160

        bind iron: item where:
            is_iron(iron) and id[iron]==2161
        # Select the iron with ID 2161

        iron_clothes(shirt, iron)
        iron_clothes(skirt, iron)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board_2144; available variables: [Variable<clothes: item>, Variable<iron: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_phone_2016_around_nightstand_192(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==192
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(phone,nightstand_instance)
        else:
            exp(phone,nightstand_instance)
    eff:
        unknown[phone]=False
        close[phone,nightstand_instance]=True
        close[nightstand_instance,phone]=True
    

behavior find_clothes_hat_2117_around_couch_198(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==198
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(clothes_hat,couch_instance)
        else:
            exp(clothes_hat,couch_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,couch_instance]=True
        close[couch_instance,clothes_hat]=True
    

#goal_representation
 
behavior iron_clothes(clothes:item, iron:item, ironing_board:item):
    body:
        achieve on(clothes, ironing_board)
        achieve is_on(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt]==2158
        # Select the shirt with ID 2158

        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt]==2160
        # Select the skirt with ID 2160

        bind iron: item where:
            is_iron(iron) and id[iron]==2161
        # Select the iron with ID 2161
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Select the ironing board with ID 2144

        iron_clothes(shirt, iron, ironing_board)
        iron_clothes(skirt, iron, ironing_board)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "2. iron the shirt and the skirt." ?
Answer: For each piece of clothing, place it on the ironing board. Turn on the iron, then put the iron on the clothing, push and pull the iron.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_wooden_spoon_2000_around_kitchen_counter_123(wooden_spoon:item):
    goal: not unknown(wooden_spoon)
    body:
        assert is_wooden_spoon(wooden_spoon)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(wooden_spoon,kitchen_counter_instance)
        else:
            exp(wooden_spoon,kitchen_counter_instance)
    eff:
        unknown[wooden_spoon]=False
        close[wooden_spoon,kitchen_counter_instance]=True
        close[kitchen_counter_instance,wooden_spoon]=True
    

behavior find_stamp_2022_around_filing_cabinet_200(stamp:item):
    goal: not unknown(stamp)
    body:
        assert is_stamp(stamp)
        bind filing_cabinet_instance:item where:
            is_filing_cabinet(filing_cabinet_instance) and id[filing_cabinet_instance]==200
        achieve close_char(char,filing_cabinet_instance)
        if can_open(filing_cabinet_instance):
            achieve_once open(filing_cabinet_instance)
            exp(stamp,filing_cabinet_instance)
        else:
            exp(stamp,filing_cabinet_instance)
    eff:
        unknown[stamp]=False
        close[stamp,filing_cabinet_instance]=True
        close[filing_cabinet_instance,stamp]=True
    

behavior find_clothes_jacket_2119_around_couch_198(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==198
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(clothes_jacket,couch_instance)
        else:
            exp(clothes_jacket,couch_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,couch_instance]=True
        close[couch_instance,clothes_jacket]=True
    

behavior find_chair_194_around_knifeblock_76(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(chair,knifeblock_instance)
        else:
            exp(chair,knifeblock_instance)
    eff:
        unknown[chair]=False
        close[chair,knifeblock_instance]=True
        close[knifeblock_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothing(item: item, ironing_board: item, iron: item):
    body:
        achieve_once on(item, ironing_board)
        # Place the item on the ironing board
        achieve plugged(iron)
        # Ensure the iron is plugged in
        achieve is_on(iron)
        # Ensure the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron that is plugged in and turned on

        iron_clothing(shirt, ironing_board, iron)
        iron_clothing(skirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_hanger_292_around_bathroom_cabinet_17(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(hanger,bathroom_cabinet_instance)
        else:
            exp(hanger,bathroom_cabinet_instance)
    eff:
        unknown[hanger]=False
        close[hanger,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,hanger]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(clothes:item, iron:item, board:item):
    body:
        achieve_once on(clothes, board)
        achieve is_on(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2158
        # Select the specific shirt with ID 2158

        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2160
        # Select the specific skirt with ID 2160

        bind board: item where:
            is_ironing_board(board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_clothes(shirt, iron, board)
        iron_clothes(skirt, iron, board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_blow_dryer_2057_around_shower_16(blow_dryer:item):
    goal: not unknown(blow_dryer)
    body:
        assert is_blow_dryer(blow_dryer)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==16
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(blow_dryer,shower_instance)
        else:
            exp(blow_dryer,shower_instance)
    eff:
        unknown[blow_dryer]=False
        close[blow_dryer,shower_instance]=True
        close[shower_instance,blow_dryer]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothing(item:item, ironing_board:item, iron:item):
    body:
        achieve_once on(item, ironing_board) # Place the clothing on the ironing board
        achieve is_on(iron)
        # Iron the clothing using the iron

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2158
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2160
        # Select the skirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and id[iron] == 2161 and is_on(iron)
        # Select the iron

        iron_clothing(shirt, ironing_board, iron)
        iron_clothing(skirt, ironing_board, iron)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
Goal representation from planning.py

#exp_behavior

behavior find_brush_2002_around_shower_16(brush:item):
    goal: not unknown(brush)
    body:
        assert is_brush(brush)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==16
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(brush,shower_instance)
        else:
            exp(brush,shower_instance)
    eff:
        unknown[brush]=False
        close[brush,shower_instance]=True
        close[shower_instance,brush]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(clothes: item, iron: item, ironing_board: item):
    body:
        achieve_once on(clothes, ironing_board)
        # Place the clothes on the ironing board
        achieve_once is_on(iron)
        # Ensure the iron is turned on
        achieve has_a_free_hand(char)
        # Ensure the user has a free hand for ironing
        achieve clean(clothes)
        # Ensure the clothes are ironed

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and is_on(iron) and close_char(char, iron)
        # Select the iron that is on and close to the character

        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to iron

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt to iron

        iron_clothes(shirt, iron, ironing_board)
        # Iron the shirt on the ironing board

        iron_clothes(skirt, iron, ironing_board)
        # Iron the skirt on the ironing board
 
#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_brush_2002_around_sink_120(brush:item):
    goal: not unknown(brush)
    body:
        assert is_brush(brush)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(brush,sink_instance)
        else:
            exp(brush,sink_instance)
    eff:
        unknown[brush]=False
        close[brush,sink_instance]=True
        close[sink_instance,brush]=True
    

behavior find_blow_dryer_2057_around_shower_16(blow_dryer:item):
    goal: not unknown(blow_dryer)
    body:
        assert is_blow_dryer(blow_dryer)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==16
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(blow_dryer,shower_instance)
        else:
            exp(blow_dryer,shower_instance)
    eff:
        unknown[blow_dryer]=False
        close[blow_dryer,shower_instance]=True
        close[shower_instance,blow_dryer]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(clothes:item, ironing_board:item, iron:item):
    body:
        achieve_once on(clothes, ironing_board)
        achieve is_on(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2158
        # Select the shirt with ID 2158

        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2160
        # Select the skirt with ID 2160

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Select the ironing board with ID 2144
        
        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron with ID 2161 that is plugged and turned on

        iron_clothes(shirt, ironing_board, iron)
        iron_clothes(skirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_shoes_2033_around_couch_198(shoes:item):
    goal: not unknown(shoes)
    body:
        assert is_shoes(shoes)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==198
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(shoes,couch_instance)
        else:
            exp(shoes,couch_instance)
    eff:
        unknown[shoes]=False
        close[shoes,couch_instance]=True
        close[couch_instance,shoes]=True
    

#exp_behavior_end

#goal_representation
behavior iron_clothes(clothes:item, ironing_board:item, iron:item):
    body:
        achieve_once on(clothes, ironing_board)
        # Ensure clothes are on the ironing board
        achieve plugged(iron)
        # Ensure iron is plugged in
        achieve is_on(iron)
        # Ensure iron is switched on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2158
        # Select the shirt with ID 2158

        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2160
        # Select the skirt with ID 2160

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        # Select the ironing board with ID 2144

        bind iron: item where:
            is_iron(iron) and id[iron] == 2161
        # Select the iron with ID 2161

        iron_clothes(shirt, ironing_board, iron)
        # Iron the shirt
        iron_clothes(skirt, ironing_board, iron)
        # Iron the skirt
#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "2. iron the shirt and the skirt." ?
Answer: For each piece of clothing, place it on the ironing board. Turn on the iron, then put the iron on the clothing, push and pull the iron.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_wooden_spoon_2000_around_pot_2138(wooden_spoon:item):
    goal: not unknown(wooden_spoon)
    body:
        assert is_wooden_spoon(wooden_spoon)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==2138
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(wooden_spoon,pot_instance)
        else:
            exp(wooden_spoon,pot_instance)
    eff:
        unknown[wooden_spoon]=False
        close[wooden_spoon,pot_instance]=True
        close[pot_instance,wooden_spoon]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(clothes:item, iron:item, ironing_board:item):
    body:
        achieve_once on(clothes, ironing_board)
        # Place the clothes on the ironing board
        achieve_once is_on(iron)
        # Ensure the iron is on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        achieve plugged(iron)
        achieve is_on(iron)
        # Ensure the iron is plugged in and on

        iron_clothes(shirt, iron, ironing_board)
        iron_clothes(skirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior iron_clothes_on_board(clothing:item, iron:item, board:item):
    body:
        achieve_once on(clothing, board) # Place the clothing on the ironing board
        achieve_once on(iron, clothing) # Ironing the clothing
        push(iron) # Push the iron across the clothing
        pull(iron) # Pull the iron across the clothing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and is_on(iron) and plugged(iron)
        # Select the iron, ensuring it is on and plugged

        iron_clothes_on_board(shirt, iron, ironing_board)
        iron_clothes_on_board(skirt, iron, ironing_board)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior iron_clothes_on_board(clothing:item, iron:item, board:item):
    body:
        achieve_once on(clothing, board) # Place the clothing on the ironing board
        achieve_once on(iron, clothing) # Ironing the clothing
        push(iron) # Push the iron across the clothing
        pull(iron) # Pull the iron across the clothing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and is_on(iron) and plugged(iron)
        # Select the iron, ensuring it is on and plugged

        iron_clothes_on_board(shirt, iron, ironing_board)
        iron_clothes_on_board(skirt, iron, ironing_board)
##############################
From agent.py-> find a plan in act()
grab_executor(iron_2161)walk_executor(clothes_shirt_2158)put_executor(iron_2161, clothes_shirt_2158)walk_executor(iron_2161)push_executor(iron_2161)pull_executor(iron_2161)grab_executor(iron_2161)walk_executor(clothes_skirt_2160)put_executor(iron_2161, clothes_skirt_2160)walk_executor(iron_2161)push_executor(iron_2161)pull_executor(iron_2161)
##############################
From agent.py
grab_executor(iron_2161)
Robot find: Robot is close to the bowl_2142. Robot is close to the iron_2161. Grabbing iron_2161 by right hand. 
##############################
From agent.py
walk_executor(clothes_shirt_2158)
Robot find: Robot is close to the iron_2161. Robot is close to the ironing_board_2144. Robot is close to the clothes_shirt_2158. 
##############################
From agent.py
put_executor(iron_2161, clothes_shirt_2158)
Robot find: Robot is close to the iron_2161. Robot is close to the ironing_board_2144. Robot is close to the clothes_shirt_2158. iron_2161 is close clothes_shirt_2158. iron_2161 is on clothes_shirt_2158. clothes_shirt_2158 is close iron_2161. iron_2161 released by right hand. 
##############################
From agent.py
walk_executor(iron_2161)
Robot find: Robot is close to the iron_2161. Robot is close to the clothes_shirt_2158. 
##############################
From agent.py
push_executor(iron_2161)
Robot find: Robot is close to the iron_2161. Robot is close to the clothes_shirt_2158. 
##############################
From agent.py
pull_executor(iron_2161)
Robot find: Robot is close to the iron_2161. Robot is close to the clothes_shirt_2158. 
##############################
From agent.py
grab_executor(iron_2161)
Robot find: Robot is close to the iron_2161. Robot is close to the clothes_shirt_2158. Grabbing iron_2161 by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2160)
Robot find: Robot is close to the iron_2161. Robot is close to the clothes_skirt_2160. Robot is close to the ironing_board_2144. 
##############################
From agent.py
put_executor(iron_2161, clothes_skirt_2160)
Robot find: Robot is close to the iron_2161. Robot is close to the clothes_skirt_2160. Robot is close to the ironing_board_2144. iron_2161 is close clothes_skirt_2160. iron_2161 is on clothes_skirt_2160. clothes_skirt_2160 is close iron_2161. iron_2161 released by right hand. 
##############################
From agent.py
walk_executor(iron_2161)
Robot find: Robot is close to the iron_2161. Robot is close to the clothes_skirt_2160. 
##############################
From agent.py
push_executor(iron_2161)
Robot find: Robot is close to the iron_2161. Robot is close to the clothes_skirt_2160. 
##############################
From agent.py
pull_executor(iron_2161)
Robot find: Robot is close to the iron_2161. Robot is close to the clothes_skirt_2160. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Iron the shirt and the skirt.
Action History:
['walk_executor(ironing_board_2144)', 'walk_executor(basket_for_clothes_2078)', 'grab_executor(clothes_shirt_2158)', 'walk_executor(ironing_board_2144)', 'put_executor(clothes_shirt_2158, ironing_board_2144)', 'walk_executor(clothes_skirt_2160)', 'grab_executor(clothes_skirt_2160)', 'walk_executor(ironing_board_2144)', 'put_executor(clothes_skirt_2160, ironing_board_2144)', 'walk_executor(powersocket_282)', 'walk_executor(powersocket_72)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'walk_executor(bench_113)', 'walk_executor(washing_machine_2079)', 'open_executor(washing_machine_2079)', 'walk_executor(shower_21)', 'walk_executor(window_310)', 'open_executor(window_310)', 'walk_executor(cutting_board_2123)', 'walk_executor(bowl_2142)', 'walk_executor(iron_2161)', 'plugin_executor(iron_2161)', 'switchon_executor(iron_2161)', 'grab_executor(iron_2161)', 'walk_executor(clothes_shirt_2158)', 'put_executor(iron_2161, clothes_shirt_2158)', 'walk_executor(iron_2161)', 'push_executor(iron_2161)', 'pull_executor(iron_2161)', 'grab_executor(iron_2161)', 'walk_executor(clothes_skirt_2160)', 'put_executor(iron_2161, clothes_skirt_2160)', 'walk_executor(iron_2161)', 'push_executor(iron_2161)', 'pull_executor(iron_2161)']
Time info:
Time consume: 336 seconds
Exp_helper query times: 1
Guidance query times: 2
library scale: 137
goal generate times: 13
goal correct times: 1
action_num: 37

Task complete rate:
Keystate: k1 - Requires: 0 steps
Keystate: k2 - Requires: 0 steps
Action Completion Rate: 0.0
Scene_id: 1
##############################
