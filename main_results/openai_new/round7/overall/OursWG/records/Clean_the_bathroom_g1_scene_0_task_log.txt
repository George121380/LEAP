From agent.py
Reset goals: The sub-goals are: 
['Clean the bathroom sink directly.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2053_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_cleaning_solution_2073_around_bathroom_cabinet_40(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
behavior clean_bathroom_sink(sink:item):
    body:
        achieve clean(sink)
        # Directly clean the bathroom sink

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink)
        # Select the bathroom sink

        clean_bathroom_sink(sink)
        # Clean the sink directly
#goal_representation_end

##############################
From agent.py->reset_goal
behavior clean_bathroom_sink(sink:item):
    body:
        achieve clean(sink)
        # Directly clean the bathroom sink

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink)
        # Select the bathroom sink

        clean_bathroom_sink(sink)
        # Clean the sink directly
##############################
From agent.py-> find a plan in act()
walk_executor(sink_42)wipe_executor(sink_42)
##############################
From agent.py
walk_executor(sink_42)
Robot find: detergent_2084, cleaning_solution_2073, towel_rack_31, soap_2053, towel_rack_32, towel_rack_34, Robot is close to the bathroom_counter_41. Robot is close to the sink_42. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2058_around_towel_rack_31(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==31
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_soap_2053_around_soap_2053(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind soap_instance:item where:
            is_soap(soap_instance) and id[soap_instance]==2053
        achieve close_char(char,soap_instance)
        if can_open(soap_instance):
            achieve_once open(soap_instance)
            exp(soap,soap_instance)
        else:
            exp(soap,soap_instance)
    eff:
        unknown[soap]=False
        close[soap,soap_instance]=True
        close[soap_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior clean_bathroom_sink(sink:item, cleaning_solution:item):
    body:
        achieve_once inhand(cleaning_solution) 
        # Temporarily hold the cleaning solution for cleaning
        clean(sink) 
        # Clean the bathroom sink

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and id[sink] == 42
        # Select sink with ID 42

        bind cleaning_solution: item where:
            is_cleaning_solution(cleaning_solution)
        # Select a cleaning solution

        clean_bathroom_sink(sink, cleaning_solution)
        # Clean the bathroom sink using the cleaning solution

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Expr statements are not allowed in the current mode: SymbolicExecutionMode.BEHAVIOR
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_soap_2053_around_soap_2053(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind soap_instance:item where:
            is_soap(soap_instance) and id[soap_instance]==2053
        achieve close_char(char,soap_instance)
        if can_open(soap_instance):
            achieve_once open(soap_instance)
            exp(soap,soap_instance)
        else:
            exp(soap,soap_instance)
    eff:
        unknown[soap]=False
        close[soap,soap_instance]=True
        close[soap_instance,soap]=True
    

#goal_representation
behavior clean_bathroom_sink(sink:item, cleaning_solution:item):
    body:
        achieve_once inhand(cleaning_solution)
        # Temporarily hold the cleaning solution for cleaning
        achieve clean(sink)
        # Clean the bathroom sink

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and id[sink] == 42
        # Select sink with ID 42

        bind cleaning_solution: item where:
            is_cleaning_solution(cleaning_solution)
        # Select a cleaning solution

        clean_bathroom_sink(sink, cleaning_solution)
        # Clean the bathroom sink using the cleaning solution
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior clean_bathroom_sink(sink:item, cleaning_solution:item):
    body:
        achieve_once inhand(cleaning_solution)
        # Temporarily hold the cleaning solution for cleaning
        achieve clean(sink)
        # Clean the bathroom sink

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and id[sink] == 42
        # Select sink with ID 42

        bind cleaning_solution: item where:
            is_cleaning_solution(cleaning_solution)
        # Select a cleaning solution

        clean_bathroom_sink(sink, cleaning_solution)
        # Clean the bathroom sink using the cleaning solution
##############################
From agent.py-> find a plan in act()
walk_executor(cleaning_solution_2073)grab_executor(cleaning_solution_2073)walk_executor(sink_42)wipe_executor(sink_42)
##############################
From agent.py
walk_executor(cleaning_solution_2073)
Robot find: Robot is close to the sink_42. Robot is close to the cleaning_solution_2073. 
##############################
From agent.py
grab_executor(cleaning_solution_2073)
Robot find: Robot is close to the sink_42. Robot is close to the cleaning_solution_2073. Grabbing cleaning_solution_2073 by right hand. 
##############################
From agent.py
walk_executor(sink_42)
Robot find: Robot is close to the sink_42. Robot is close to the cleaning_solution_2073. Robot is close to the bathroom_counter_41. 
##############################
From agent.py
wipe_executor(sink_42)
Robot find: Robot is close to the sink_42. Robot is close to the cleaning_solution_2073. Robot is close to the bathroom_counter_41. sink_42 is cleaned. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Clean the bathroom sink directly.
Action History:
['walk_executor(sink_42)', 'wipe_executor(sink_42) (Failed)', 'walk_executor(cleaning_solution_2073)', 'grab_executor(cleaning_solution_2073)', 'walk_executor(sink_42)', 'wipe_executor(sink_42)']
Time info:
Time consume: 47 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 129
goal generate times: 2
goal correct times: 1
action_num: 6

Task complete rate:
1
Scene_id: 0
##############################
