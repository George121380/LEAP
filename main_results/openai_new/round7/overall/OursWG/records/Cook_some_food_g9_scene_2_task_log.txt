From agent.py
Reset goals: The sub-goals are: 
['1. Find and wash the potatoes.  ', '2. Cut the potatoes into strips.  ', '3. Fry the potato strips until golden brown.  ', '4. Place the French fries in a serving dish.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_potato_2066_around_kitchen_counter_128(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_potato,kitchen_counter_instance)
        else:
            exp(food_potato,kitchen_counter_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_potato]=True
    

#exp_behavior_end

#goal_representation
 
def check_potato(item: item):
    # Function to check if an item is a potato
    symbol is_potato = is_food_potato(item)
    return is_potato

behavior find_and_wash_potatoes(potato: item, sink: item):
    body:
        achieve_once inhand(potato)
        # Temporarily hold the potato
        achieve_once inside(potato, sink)
        # Place the potato inside the sink
        wash(potato)
        # Wash the potato

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink)
        # Select a sink for washing

        foreach potato: item:
            if check_potato(potato) and not visited(potato):
                # Find all unvisited potatoes and wash them
                find_and_wash_potatoes(potato, sink)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def check_potato(item: item):
    # Function to check if an item is a potato
    symbol is_potato = is_food_potato(item)
    return is_potato

behavior find_and_wash_potatoes(potato: item, sink: item):
    body:
        achieve_once inhand(potato)
        # Temporarily hold the potato
        achieve_once inside(potato, sink)
        # Place the potato inside the sink
        wash(potato)
        # Wash the potato

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink)
        # Select a sink for washing

        foreach potato: item:
            if check_potato(potato) and not visited(potato):
                # Find all unvisited potatoes and wash them
                find_and_wash_potatoes(potato, sink)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(food_potato_2066, kitchen_counter_128)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(sink_133)putin_executor(food_potato_2066, sink_133)walk_executor(food_potato_2066)grab_executor(food_potato_2066)wash_executor(food_potato_2066)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(food_potato_2066, kitchen_counter_128)
Fail to find food_potato_2066 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(cutting_board_2080)exp(food_potato_2066, cutting_board_2080)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(sink_133)putin_executor(food_potato_2066, sink_133)walk_executor(food_potato_2066)grab_executor(food_potato_2066)wash_executor(food_potato_2066)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the kitchen_counter_128. Robot is close to the cutting_board_2080. 
##############################
From agent.py
exp(food_potato_2066, cutting_board_2080)
Fail to find food_potato_2066 around cutting_board_2080. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_127)exp(food_potato_2066, table_127)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(sink_133)putin_executor(food_potato_2066, sink_133)walk_executor(food_potato_2066)grab_executor(food_potato_2066)wash_executor(food_potato_2066)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(table_127)
Robot find: mat_115, fork_2104, console_2027, crayon_2030, bowl_2096, bowl_2097, napkin_2014, plate_2105, drawing_118, Robot is close to the mat_115. Robot is close to the table_127. 
##############################
From agent.py
exp(food_potato_2066, table_127)
Fail to find food_potato_2066 around table_127. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_potato_2066, fridge_140)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(sink_133)putin_executor(food_potato_2066, sink_133)walk_executor(food_potato_2066)grab_executor(food_potato_2066)wash_executor(food_potato_2066)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_potato_2066, fridge_140)
Find food_potato_2066. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_potato_2066)walk_executor(sink_133)putin_executor(food_potato_2066, sink_133)walk_executor(food_potato_2066)grab_executor(food_potato_2066)wash_executor(food_potato_2066)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
walk_executor(sink_133)
Robot find: after_shave_2029, cleaning_solution_2098, juice_2034, pot_54, Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
putin_executor(food_potato_2066, sink_133)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the sink_133. sink_133 is close food_potato_2066. food_potato_2066 is inside sink_133. food_potato_2066 is close sink_133. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
wash_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the sink_133. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_blender_2032_around_kitchen_counter_129(blender:item):
    goal: not unknown(blender)
    body:
        assert is_blender(blender)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(blender,kitchen_counter_instance)
        else:
            exp(blender,kitchen_counter_instance)
    eff:
        unknown[blender]=False
        close[blender,kitchen_counter_instance]=True
        close[kitchen_counter_instance,blender]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior cut_potatoes(potatoes:item, cutting_board:item, knife:item):
    body:
        achieve_once on(potatoes, cutting_board)
        # Place the potatoes on the cutting board
        achieve cut(potatoes)
        # Cut the potatoes into strips

behavior __goal__():
    body:
        bind potatoes: item where:
            is_food_potato(potatoes)
        # Select the washed potatoes
        
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        cut_potatoes(potatoes, cutting_board, knife)
        # Cut the potatoes into strips on the cutting board

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior cut_potatoes(potatoes:item, cutting_board:item, knife:item):
    body:
        achieve_once on(potatoes, cutting_board)
        # Place the potatoes on the cutting board
        achieve cut(potatoes)
        # Cut the potatoes into strips

behavior __goal__():
    body:
        bind potatoes: item where:
            is_food_potato(potatoes)
        # Select the washed potatoes
        
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        cut_potatoes(potatoes, cutting_board, knife)
        # Cut the potatoes into strips on the cutting board

##############################
From agent.py-> find a plan in act()
walk_executor(cutting_board_2080)put_executor(food_potato_2066, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_potato_2066, cutting_board_2080)
Robot find: Robot is close to the food_potato_2066. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. cutting_board_2080 is close food_potato_2066. food_potato_2066 is close cutting_board_2080. food_potato_2066 is on cutting_board_2080. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_52)
Robot find: Robot is close to the knifeblock_52. 
##############################
From agent.py
exp(knife_2036, knifeblock_52)
Fail to find knife_2036 around knifeblock_52. 
##############################
From agent.py-> find a plan in act()
walk_executor(ceilinglamp_41)exp(knife_2036, ceilinglamp_41)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)
##############################
From agent.py
walk_executor(ceilinglamp_41)
Robot find: Robot is close to the ceilinglamp_41. 
##############################
From agent.py
exp(knife_2036, ceilinglamp_41)
Fail to find knife_2036 around ceilinglamp_41. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(knife_2036, table_123)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, laptop_2015, fork_2103, cup_2087, bowl_2095, Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find knife_2036 ?
Answer: Go to dining_room_1 and locate dishwasher_143. Open the dishwasher_143 to find knife_2036 inside. Remember, knife_2036 is close to dishwasher_143 and situated inside it.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_1 and locate dishwasher_143. Open the dishwasher_143 to find knife_2036 inside. Remember, knife_2036 is close to dishwasher_143 and situated inside it.

The actions you have taken:
Action 1: Walk to kitchen_counter_128.
Action 2: look for food_potato_2066 around kitchen_counter_128.
Action 3: Walk to cutting_board_2080.
Action 4: look for food_potato_2066 around cutting_board_2080.
Action 5: Walk to table_127.
Action 6: look for food_potato_2066 around table_127.
Action 7: Walk to fridge_140.
Action 8: Switch off fridge_140.
Action 9: Open fridge_140.
Action 10: look for food_potato_2066 around fridge_140.
Action 11: Grab food_potato_2066.
Action 12: Walk to sink_133.
Action 13: Put food_potato_2066 into sink_133.
Action 14: Walk to food_potato_2066.
Action 15: Grab food_potato_2066.
Action 16: Wash food_potato_2066.
Action 17: Walk to faucet_134.
Action 18: Switch off faucet_134.
Action 19: Walk to cutting_board_2080.
Action 20: Put food_potato_2066 on cutting_board_2080.
Action 21: Walk to knifeblock_52.
Action 22: look for knife_2036 around knifeblock_52.
Action 23: Walk to ceilinglamp_41.
Action 24: look for knife_2036 around ceilinglamp_41.
Action 25: Walk to table_123.

##############################
From agent.py
exp(knife_2036, table_123)
Fail to find knife_2036 around table_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(knife_2036, dishwasher_143)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(knife_2036, dishwasher_143)
Find knife_2036. 
##############################
From agent.py-> find a plan in act()
grab_executor(knife_2036)walk_executor(food_potato_2066)cut_executor(food_potato_2066)
##############################
From agent.py
grab_executor(knife_2036)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. Grabbing knife_2036 by right hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. 
##############################
From agent.py
cut_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2102_around_stove_2090(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(oil,stove_instance)
        else:
            exp(oil,stove_instance)
    eff:
        unknown[oil]=False
        close[oil,stove_instance]=True
        close[stove_instance,oil]=True
    

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_food_onion_2026_around_kitchen_counter_129(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_onion,kitchen_counter_instance)
        else:
            exp(food_onion,kitchen_counter_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_onion]=True
    

#exp_behavior_end

#goal_representation
 
def fry_to_golden(potato:item, oil:item, frying_pan:item, stove:item):
    # Function to fry potato strips until they are golden brown
    achieve_once inside(oil, frying_pan)
    # Add oil into the frying pan
    achieve_once inside(potato, frying_pan)
    # Add potato strips into the frying pan
    achieve_once on(frying_pan, stove)
    # Place frying pan on the stove
    achieve is_on(stove)
    # Turn on the stove until potato is golden brown

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato) and cut(potato)
        # Select the cut potato

        bind oil: item where:
            is_oil(oil)
        # Select the oil

        bind frying_pan: item where:
            is_fryingpan(frying_pan)
        # Select the frying pan

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        fry_to_golden(potato, oil, frying_pan, stove)
        # Fry the potato strips until golden brown

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Achieve statements are not allowed in the current mode: SymbolicExecutionMode.DERIVED
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_oil_2102_around_stove_2090(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(oil,stove_instance)
        else:
            exp(oil,stove_instance)
    eff:
        unknown[oil]=False
        close[oil,stove_instance]=True
        close[stove_instance,oil]=True
    

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

#goal_representation
 
behavior add_oil_and_fry_potato(potato:item, oil:item, frying_pan:item, stove:item):
    body:
        achieve_once inside(oil, frying_pan) 
        # Add oil into the frying pan
        achieve_once inside(potato, frying_pan) 
        # Add potato strips into the frying pan
        achieve_once on(frying_pan, stove) 
        # Place frying pan on the stove
        achieve is_on(stove) 
        # Turn on the stove to fry the potato strips until golden brown

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato) and cut(potato)
        # Select the cut potato

        bind oil: item where:
            is_oil(oil)
        # Select the oil

        bind frying_pan: item where:
            is_fryingpan(frying_pan)
        # Select the frying pan

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        add_oil_and_fry_potato(potato, oil, frying_pan, stove)
        # Fry the potato strips until golden brown

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior add_oil_and_fry_potato(potato:item, oil:item, frying_pan:item, stove:item):
    body:
        achieve_once inside(oil, frying_pan) 
        # Add oil into the frying pan
        achieve_once inside(potato, frying_pan) 
        # Add potato strips into the frying pan
        achieve_once on(frying_pan, stove) 
        # Place frying pan on the stove
        achieve is_on(stove) 
        # Turn on the stove to fry the potato strips until golden brown

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato) and cut(potato)
        # Select the cut potato

        bind oil: item where:
            is_oil(oil)
        # Select the oil

        bind frying_pan: item where:
            is_fryingpan(frying_pan)
        # Select the frying pan

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        add_oil_and_fry_potato(potato, oil, frying_pan, stove)
        # Fry the potato strips until golden brown

##############################
From agent.py-> find a plan in act()
walk_executor(stove_2090)open_executor(stove_2090)exp(fryingpan_2107, stove_2090)exp(oil_2102, stove_2090)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
open_executor(stove_2090)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is opened. 
##############################
From agent.py
exp(fryingpan_2107, stove_2090)
Find fryingpan_2107. 
##############################
From agent.py-> find a plan in act()
walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(fryingpan_2107)putin_executor(food_potato_2066, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(oil_2102)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the oil_2102. 
##############################
From agent.py
grab_executor(oil_2102)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the oil_2102. Grabbing oil_2102 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the oil_2102. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(oil_2102, fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the oil_2102. Robot is close to the fryingpan_2107. oil_2102 is close fryingpan_2107. oil_2102 is inside fryingpan_2107. fryingpan_2107 is close oil_2102. oil_2102 released by left hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_potato_2066. Grabbing food_potato_2066 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_potato_2066, fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. food_potato_2066 is inside fryingpan_2107. food_potato_2066 is close fryingpan_2107. fryingpan_2107 is close food_potato_2066. food_potato_2066 released by left hand. 
##############################
From agent.py
grab_executor(fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Grabbing fryingpan_2107 by left hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(fryingpan_2107, stove_2090)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. fryingpan_2107 is on stove_2090. stove_2090 is close fryingpan_2107. fryingpan_2107 is close stove_2090. fryingpan_2107 released by left hand. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_tray_142_around_plate_2105(tray:item):
    goal: not unknown(tray)
    body:
        assert is_tray(tray)
        bind plate_instance:item where:
            is_plate(plate_instance) and id[plate_instance]==2105
        achieve close_char(char,plate_instance)
        if can_open(plate_instance):
            achieve_once open(plate_instance)
            exp(tray,plate_instance)
        else:
            exp(tray,plate_instance)
    eff:
        unknown[tray]=False
        close[tray,plate_instance]=True
        close[plate_instance,tray]=True
    

behavior find_cup_2089_around_cup_2088(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2088
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(cup,cup_instance)
        else:
            exp(cup,cup_instance)
    eff:
        unknown[cup]=False
        close[cup,cup_instance]=True
        close[cup_instance,cup]=True
    

#exp_behavior_end

#goal_representation
behavior place_french_fries_in_serving_dish(fries: item, dish: item):
    body:
        achieve_once inside(fries, dish) # Place the French fries inside the serving dish

behavior __goal__():
    body:
        bind fries: item where:
            is_food_potato(fries)
        # Select the French fries

        bind dish: item where:
            is_plate(dish)
        # Select a serving dish

        place_french_fries_in_serving_dish(fries, dish)
        # Place the French fries in the serving dish
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior place_french_fries_in_serving_dish(fries: item, dish: item):
    body:
        achieve_once inside(fries, dish) # Place the French fries inside the serving dish

behavior __goal__():
    body:
        bind fries: item where:
            is_food_potato(fries)
        # Select the French fries

        bind dish: item where:
            is_plate(dish)
        # Select a serving dish

        place_french_fries_in_serving_dish(fries, dish)
        # Place the French fries in the serving dish
##############################
From agent.py-> find a plan in act()
walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(plate_2105)putin_executor(food_potato_2066, plate_2105)
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the fryingpan_2107. Robot is close to the food_potato_2066. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the knife_2036. Robot is close to the fryingpan_2107. Robot is close to the food_potato_2066. Grabbing food_potato_2066 by left hand. 
##############################
From agent.py
walk_executor(plate_2105)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the plate_2105. Robot is close to the table_127. 
##############################
From agent.py
putin_executor(food_potato_2066, plate_2105)
Robot find: Robot is close to the knife_2036. Robot is close to the food_potato_2066. Robot is close to the plate_2105. Robot is close to the table_127. plate_2105 is close food_potato_2066. food_potato_2066 is inside plate_2105. food_potato_2066 is close plate_2105. food_potato_2066 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make some French fries.
Action History:
['walk_executor(kitchen_counter_128)', 'walk_executor(cutting_board_2080)', 'walk_executor(table_127)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'grab_executor(food_potato_2066)', 'walk_executor(sink_133)', 'putin_executor(food_potato_2066, sink_133)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'wash_executor(food_potato_2066)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(cutting_board_2080)', 'put_executor(food_potato_2066, cutting_board_2080)', 'walk_executor(knifeblock_52)', 'walk_executor(ceilinglamp_41)', 'walk_executor(table_123)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'grab_executor(knife_2036)', 'walk_executor(food_potato_2066)', 'cut_executor(food_potato_2066)', 'walk_executor(stove_2090)', 'open_executor(stove_2090)', 'walk_executor(oil_2102)', 'grab_executor(oil_2102)', 'walk_executor(fryingpan_2107)', 'putin_executor(oil_2102, fryingpan_2107)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_potato_2066, fryingpan_2107)', 'grab_executor(fryingpan_2107)', 'walk_executor(stove_2090)', 'put_executor(fryingpan_2107, stove_2090)', 'switchon_executor(stove_2090)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(plate_2105)', 'putin_executor(food_potato_2066, plate_2105)']
Time info:
Time consume: 222 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 73
goal generate times: 4
goal correct times: 1
action_num: 42

Task complete rate:
Keystate: k1 - Requires: 3 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
