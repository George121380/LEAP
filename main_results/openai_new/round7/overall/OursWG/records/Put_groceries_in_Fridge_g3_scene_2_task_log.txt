From agent.py
Reset goals: The sub-goals are: 
['1. Identify the fridge containing the items.', '2. Take all the items out of the fridge.', '3. Throw the items into the trashcan.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2050_around_fridge_140(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_food_snack_2069_around_fridge_140(food_snack:item):
    goal: not unknown(food_snack)
    body:
        assert is_food_snack(food_snack)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_snack,fridge_instance)
        else:
            exp(food_snack,fridge_instance)
    eff:
        unknown[food_snack]=False
        close[food_snack,fridge_instance]=True
        close[fridge_instance,food_snack]=True
    

behavior find_food_pizza_2065_around_fridge_140(food_pizza:item):
    goal: not unknown(food_pizza)
    body:
        assert is_food_pizza(food_pizza)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_pizza,fridge_instance)
        else:
            exp(food_pizza,fridge_instance)
    eff:
        unknown[food_pizza]=False
        close[food_pizza,fridge_instance]=True
        close[fridge_instance,food_pizza]=True
    

behavior find_food_apple_2043_around_fridge_140(food_apple:item):
    goal: not unknown(food_apple)
    body:
        assert is_food_apple(food_apple)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_apple,fridge_instance)
        else:
            exp(food_apple,fridge_instance)
    eff:
        unknown[food_apple]=False
        close[food_apple,fridge_instance]=True
        close[fridge_instance,food_apple]=True
    

behavior find_food_potato_2066_around_fridge_140(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_potato,fridge_instance)
        else:
            exp(food_potato,fridge_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,fridge_instance]=True
        close[fridge_instance,food_potato]=True
    

behavior find_food_vegetable_2072_around_fridge_140(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_vegetable,fridge_instance)
        else:
            exp(food_vegetable,fridge_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,fridge_instance]=True
        close[fridge_instance,food_vegetable]=True
    

behavior find_food_bread_2016_around_fridge_140(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_bread,fridge_instance)
        else:
            exp(food_bread,fridge_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,fridge_instance]=True
        close[fridge_instance,food_bread]=True
    

behavior find_food_lemon_2061_around_fridge_140(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_lemon,fridge_instance)
        else:
            exp(food_lemon,fridge_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,fridge_instance]=True
        close[fridge_instance,food_lemon]=True
    

behavior find_food_butter_2018_around_fridge_140(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_butter,fridge_instance)
        else:
            exp(food_butter,fridge_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,fridge_instance]=True
        close[fridge_instance,food_butter]=True
    

behavior find_food_onion_2026_around_fridge_140(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_onion,fridge_instance)
        else:
            exp(food_onion,fridge_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,fridge_instance]=True
        close[fridge_instance,food_onion]=True
    

behavior find_food_turkey_2071_around_fridge_140(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_turkey,fridge_instance)
        else:
            exp(food_turkey,fridge_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,fridge_instance]=True
        close[fridge_instance,food_turkey]=True
    

behavior find_food_noodles_2062_around_fridge_140(food_noodles:item):
    goal: not unknown(food_noodles)
    body:
        assert is_food_noodles(food_noodles)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_noodles,fridge_instance)
        else:
            exp(food_noodles,fridge_instance)
    eff:
        unknown[food_noodles]=False
        close[food_noodles,fridge_instance]=True
        close[fridge_instance,food_noodles]=True
    

behavior find_food_fruit_2056_around_fridge_140(food_fruit:item):
    goal: not unknown(food_fruit)
    body:
        assert is_food_fruit(food_fruit)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_fruit,fridge_instance)
        else:
            exp(food_fruit,fridge_instance)
    eff:
        unknown[food_fruit]=False
        close[food_fruit,fridge_instance]=True
        close[fridge_instance,food_fruit]=True
    

behavior find_food_food_2055_around_fridge_140(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_food,fridge_instance)
        else:
            exp(food_food,fridge_instance)
    eff:
        unknown[food_food]=False
        close[food_food,fridge_instance]=True
        close[fridge_instance,food_food]=True
    

behavior find_food_kiwi_2060_around_fridge_140(food_kiwi:item):
    goal: not unknown(food_kiwi)
    body:
        assert is_food_kiwi(food_kiwi)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_kiwi,fridge_instance)
        else:
            exp(food_kiwi,fridge_instance)
    eff:
        unknown[food_kiwi]=False
        close[food_kiwi,fridge_instance]=True
        close[fridge_instance,food_kiwi]=True
    

behavior find_food_peanut_butter_2064_around_fridge_140(food_peanut_butter:item):
    goal: not unknown(food_peanut_butter)
    body:
        assert is_food_peanut_butter(food_peanut_butter)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_peanut_butter,fridge_instance)
        else:
            exp(food_peanut_butter,fridge_instance)
    eff:
        unknown[food_peanut_butter]=False
        close[food_peanut_butter,fridge_instance]=True
        close[fridge_instance,food_peanut_butter]=True
    

behavior find_food_cereal_2048_around_fridge_140(food_cereal:item):
    goal: not unknown(food_cereal)
    body:
        assert is_food_cereal(food_cereal)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_cereal,fridge_instance)
        else:
            exp(food_cereal,fridge_instance)
    eff:
        unknown[food_cereal]=False
        close[food_cereal,fridge_instance]=True
        close[fridge_instance,food_cereal]=True
    

behavior find_food_carrot_2047_around_fridge_140(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_carrot,fridge_instance)
        else:
            exp(food_carrot,fridge_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,fridge_instance]=True
        close[fridge_instance,food_carrot]=True
    

behavior find_food_cheese_2049_around_fridge_140(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_cheese,fridge_instance)
        else:
            exp(food_cheese,fridge_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,fridge_instance]=True
        close[fridge_instance,food_cheese]=True
    

behavior find_food_bacon_2044_around_fridge_140(food_bacon:item):
    goal: not unknown(food_bacon)
    body:
        assert is_food_bacon(food_bacon)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_bacon,fridge_instance)
        else:
            exp(food_bacon,fridge_instance)
    eff:
        unknown[food_bacon]=False
        close[food_bacon,fridge_instance]=True
        close[fridge_instance,food_bacon]=True
    

behavior find_food_oatmeal_2063_around_fridge_140(food_oatmeal:item):
    goal: not unknown(food_oatmeal)
    body:
        assert is_food_oatmeal(food_oatmeal)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_oatmeal,fridge_instance)
        else:
            exp(food_oatmeal,fridge_instance)
    eff:
        unknown[food_oatmeal]=False
        close[food_oatmeal,fridge_instance]=True
        close[fridge_instance,food_oatmeal]=True
    

behavior find_food_cake_2046_around_fridge_140(food_cake:item):
    goal: not unknown(food_cake)
    body:
        assert is_food_cake(food_cake)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_cake,fridge_instance)
        else:
            exp(food_cake,fridge_instance)
    eff:
        unknown[food_cake]=False
        close[food_cake,fridge_instance]=True
        close[fridge_instance,food_cake]=True
    

behavior find_food_dessert_2051_around_fridge_140(food_dessert:item):
    goal: not unknown(food_dessert)
    body:
        assert is_food_dessert(food_dessert)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_dessert,fridge_instance)
        else:
            exp(food_dessert,fridge_instance)
    eff:
        unknown[food_dessert]=False
        close[food_dessert,fridge_instance]=True
        close[fridge_instance,food_dessert]=True
    

behavior find_food_salt_2068_around_fridge_140(food_salt:item):
    goal: not unknown(food_salt)
    body:
        assert is_food_salt(food_salt)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_salt,fridge_instance)
        else:
            exp(food_salt,fridge_instance)
    eff:
        unknown[food_salt]=False
        close[food_salt,fridge_instance]=True
        close[fridge_instance,food_salt]=True
    

behavior find_food_hamburger_2057_around_fridge_140(food_hamburger:item):
    goal: not unknown(food_hamburger)
    body:
        assert is_food_hamburger(food_hamburger)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_hamburger,fridge_instance)
        else:
            exp(food_hamburger,fridge_instance)
    eff:
        unknown[food_hamburger]=False
        close[food_hamburger,fridge_instance]=True
        close[fridge_instance,food_hamburger]=True
    

behavior find_food_ice_cream_2058_around_fridge_140(food_ice_cream:item):
    goal: not unknown(food_ice_cream)
    body:
        assert is_food_ice_cream(food_ice_cream)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_ice_cream,fridge_instance)
        else:
            exp(food_ice_cream,fridge_instance)
    eff:
        unknown[food_ice_cream]=False
        close[food_ice_cream,fridge_instance]=True
        close[fridge_instance,food_ice_cream]=True
    

behavior find_food_banana_2045_around_fridge_140(food_banana:item):
    goal: not unknown(food_banana)
    body:
        assert is_food_banana(food_banana)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_banana,fridge_instance)
        else:
            exp(food_banana,fridge_instance)
    eff:
        unknown[food_banana]=False
        close[food_banana,fridge_instance]=True
        close[fridge_instance,food_banana]=True
    

behavior find_food_rice_2067_around_fridge_140(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_rice,fridge_instance)
        else:
            exp(food_rice,fridge_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,fridge_instance]=True
        close[fridge_instance,food_rice]=True
    

behavior find_food_orange_2008_around_fridge_140(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_orange,fridge_instance)
        else:
            exp(food_orange,fridge_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,fridge_instance]=True
        close[fridge_instance,food_orange]=True
    

behavior find_food_steak_2042_around_fridge_140(food_steak:item):
    goal: not unknown(food_steak)
    body:
        assert is_food_steak(food_steak)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_steak,fridge_instance)
        else:
            exp(food_steak,fridge_instance)
    eff:
        unknown[food_steak]=False
        close[food_steak,fridge_instance]=True
        close[fridge_instance,food_steak]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_food_fish_2054_around_fridge_140(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_fish,fridge_instance)
        else:
            exp(food_fish,fridge_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,fridge_instance]=True
        close[fridge_instance,food_fish]=True
    

#exp_behavior_end

#goal_representation
behavior find_fridge_and_identify(fridge:item):
    body:
        achieve close_char(char, fridge)
        # Move close to the identified fridge

behavior __goal__():
    body:
        if exists fridge: item : (is_fridge(fridge) and not visited(fridge)):
            # If we have found an unvisited fridge, move closer to it
            bind fridge: item where:
                is_fridge(fridge) and not visited(fridge)
            find_fridge_and_identify(fridge)
        else:
            # Check all items to locate the fridge if not found initially
            foreach fridge: item:
                if is_fridge(fridge) and not visited(fridge):
                    observe(fridge, "Identify the fridge containing items")
#goal_representation_end

##############################
From agent.py->reset_goal
behavior find_fridge_and_identify(fridge:item):
    body:
        achieve close_char(char, fridge)
        # Move close to the identified fridge

behavior __goal__():
    body:
        if exists fridge: item : (is_fridge(fridge) and not visited(fridge)):
            # If we have found an unvisited fridge, move closer to it
            bind fridge: item where:
                is_fridge(fridge) and not visited(fridge)
            find_fridge_and_identify(fridge)
        else:
            # Check all items to locate the fridge if not found initially
            foreach fridge: item:
                if is_fridge(fridge) and not visited(fridge):
                    observe(fridge, "Identify the fridge containing items")
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2050_around_oven_141(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_chicken,oven_instance)
        else:
            exp(food_chicken,oven_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,oven_instance]=True
        close[oven_instance,food_chicken]=True
    

behavior find_food_snack_2069_around_kitchen_counter_128(food_snack:item):
    goal: not unknown(food_snack)
    body:
        assert is_food_snack(food_snack)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_snack,kitchen_counter_instance)
        else:
            exp(food_snack,kitchen_counter_instance)
    eff:
        unknown[food_snack]=False
        close[food_snack,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_snack]=True
    

behavior find_food_pizza_2065_around_table_127(food_pizza:item):
    goal: not unknown(food_pizza)
    body:
        assert is_food_pizza(food_pizza)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_pizza,table_instance)
        else:
            exp(food_pizza,table_instance)
    eff:
        unknown[food_pizza]=False
        close[food_pizza,table_instance]=True
        close[table_instance,food_pizza]=True
    

behavior find_food_apple_2043_around_table_127(food_apple:item):
    goal: not unknown(food_apple)
    body:
        assert is_food_apple(food_apple)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_apple,table_instance)
        else:
            exp(food_apple,table_instance)
    eff:
        unknown[food_apple]=False
        close[food_apple,table_instance]=True
        close[table_instance,food_apple]=True
    

behavior find_food_potato_2066_around_table_127(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_potato,table_instance)
        else:
            exp(food_potato,table_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,table_instance]=True
        close[table_instance,food_potato]=True
    

behavior find_juice_2034_around_kitchen_counter_128(juice:item):
    goal: not unknown(juice)
    body:
        assert is_juice(juice)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(juice,kitchen_counter_instance)
        else:
            exp(juice,kitchen_counter_instance)
    eff:
        unknown[juice]=False
        close[juice,kitchen_counter_instance]=True
        close[kitchen_counter_instance,juice]=True
    

behavior find_food_jam_2059_around_stove_2090(food_jam:item):
    goal: not unknown(food_jam)
    body:
        assert is_food_jam(food_jam)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(food_jam,stove_instance)
        else:
            exp(food_jam,stove_instance)
    eff:
        unknown[food_jam]=False
        close[food_jam,stove_instance]=True
        close[stove_instance,food_jam]=True
    

behavior find_food_vegetable_2072_around_table_127(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_vegetable,table_instance)
        else:
            exp(food_vegetable,table_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,table_instance]=True
        close[table_instance,food_vegetable]=True
    

behavior find_food_bread_2016_around_table_127(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_bread,table_instance)
        else:
            exp(food_bread,table_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,table_instance]=True
        close[table_instance,food_bread]=True
    

behavior find_food_lemon_2061_around_table_127(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_lemon,table_instance)
        else:
            exp(food_lemon,table_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,table_instance]=True
        close[table_instance,food_lemon]=True
    

behavior find_food_butter_2018_around_oven_141(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_butter,oven_instance)
        else:
            exp(food_butter,oven_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,oven_instance]=True
        close[oven_instance,food_butter]=True
    

behavior find_food_donut_2052_around_table_127(food_donut:item):
    goal: not unknown(food_donut)
    body:
        assert is_food_donut(food_donut)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_donut,table_instance)
        else:
            exp(food_donut,table_instance)
    eff:
        unknown[food_donut]=False
        close[food_donut,table_instance]=True
        close[table_instance,food_donut]=True
    

behavior find_food_onion_2026_around_kitchen_counter_128(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_onion,kitchen_counter_instance)
        else:
            exp(food_onion,kitchen_counter_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_onion]=True
    

behavior find_food_turkey_2071_around_oven_141(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_turkey,oven_instance)
        else:
            exp(food_turkey,oven_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,oven_instance]=True
        close[oven_instance,food_turkey]=True
    

behavior find_food_noodles_2062_around_kitchen_counter_128(food_noodles:item):
    goal: not unknown(food_noodles)
    body:
        assert is_food_noodles(food_noodles)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_noodles,kitchen_counter_instance)
        else:
            exp(food_noodles,kitchen_counter_instance)
    eff:
        unknown[food_noodles]=False
        close[food_noodles,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_noodles]=True
    

behavior find_food_fruit_2056_around_table_127(food_fruit:item):
    goal: not unknown(food_fruit)
    body:
        assert is_food_fruit(food_fruit)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_fruit,table_instance)
        else:
            exp(food_fruit,table_instance)
    eff:
        unknown[food_fruit]=False
        close[food_fruit,table_instance]=True
        close[table_instance,food_fruit]=True
    

behavior find_food_kiwi_2060_around_stove_2090(food_kiwi:item):
    goal: not unknown(food_kiwi)
    body:
        assert is_food_kiwi(food_kiwi)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(food_kiwi,stove_instance)
        else:
            exp(food_kiwi,stove_instance)
    eff:
        unknown[food_kiwi]=False
        close[food_kiwi,stove_instance]=True
        close[stove_instance,food_kiwi]=True
    

behavior find_food_peanut_butter_2064_around_table_127(food_peanut_butter:item):
    goal: not unknown(food_peanut_butter)
    body:
        assert is_food_peanut_butter(food_peanut_butter)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_peanut_butter,table_instance)
        else:
            exp(food_peanut_butter,table_instance)
    eff:
        unknown[food_peanut_butter]=False
        close[food_peanut_butter,table_instance]=True
        close[table_instance,food_peanut_butter]=True
    

behavior find_food_cereal_2048_around_table_127(food_cereal:item):
    goal: not unknown(food_cereal)
    body:
        assert is_food_cereal(food_cereal)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_cereal,table_instance)
        else:
            exp(food_cereal,table_instance)
    eff:
        unknown[food_cereal]=False
        close[food_cereal,table_instance]=True
        close[table_instance,food_cereal]=True
    

behavior find_food_carrot_2047_around_table_127(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_carrot,table_instance)
        else:
            exp(food_carrot,table_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,table_instance]=True
        close[table_instance,food_carrot]=True
    

behavior find_food_cheese_2049_around_table_127(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_cheese,table_instance)
        else:
            exp(food_cheese,table_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,table_instance]=True
        close[table_instance,food_cheese]=True
    

behavior find_food_bacon_2044_around_oven_141(food_bacon:item):
    goal: not unknown(food_bacon)
    body:
        assert is_food_bacon(food_bacon)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_bacon,oven_instance)
        else:
            exp(food_bacon,oven_instance)
    eff:
        unknown[food_bacon]=False
        close[food_bacon,oven_instance]=True
        close[oven_instance,food_bacon]=True
    

behavior find_food_oatmeal_2063_around_kitchen_counter_128(food_oatmeal:item):
    goal: not unknown(food_oatmeal)
    body:
        assert is_food_oatmeal(food_oatmeal)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_oatmeal,kitchen_counter_instance)
        else:
            exp(food_oatmeal,kitchen_counter_instance)
    eff:
        unknown[food_oatmeal]=False
        close[food_oatmeal,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_oatmeal]=True
    

behavior find_food_cake_2046_around_kitchen_counter_128(food_cake:item):
    goal: not unknown(food_cake)
    body:
        assert is_food_cake(food_cake)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_cake,kitchen_counter_instance)
        else:
            exp(food_cake,kitchen_counter_instance)
    eff:
        unknown[food_cake]=False
        close[food_cake,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_cake]=True
    

behavior find_food_dessert_2051_around_table_127(food_dessert:item):
    goal: not unknown(food_dessert)
    body:
        assert is_food_dessert(food_dessert)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_dessert,table_instance)
        else:
            exp(food_dessert,table_instance)
    eff:
        unknown[food_dessert]=False
        close[food_dessert,table_instance]=True
        close[table_instance,food_dessert]=True
    

behavior find_food_salt_2068_around_oven_141(food_salt:item):
    goal: not unknown(food_salt)
    body:
        assert is_food_salt(food_salt)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_salt,oven_instance)
        else:
            exp(food_salt,oven_instance)
    eff:
        unknown[food_salt]=False
        close[food_salt,oven_instance]=True
        close[oven_instance,food_salt]=True
    

behavior find_food_hamburger_2057_around_kitchen_counter_128(food_hamburger:item):
    goal: not unknown(food_hamburger)
    body:
        assert is_food_hamburger(food_hamburger)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_hamburger,kitchen_counter_instance)
        else:
            exp(food_hamburger,kitchen_counter_instance)
    eff:
        unknown[food_hamburger]=False
        close[food_hamburger,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_hamburger]=True
    

behavior find_food_ice_cream_2058_around_oven_141(food_ice_cream:item):
    goal: not unknown(food_ice_cream)
    body:
        assert is_food_ice_cream(food_ice_cream)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_ice_cream,oven_instance)
        else:
            exp(food_ice_cream,oven_instance)
    eff:
        unknown[food_ice_cream]=False
        close[food_ice_cream,oven_instance]=True
        close[oven_instance,food_ice_cream]=True
    

behavior find_food_banana_2045_around_table_127(food_banana:item):
    goal: not unknown(food_banana)
    body:
        assert is_food_banana(food_banana)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_banana,table_instance)
        else:
            exp(food_banana,table_instance)
    eff:
        unknown[food_banana]=False
        close[food_banana,table_instance]=True
        close[table_instance,food_banana]=True
    

behavior find_food_rice_2067_around_oven_141(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_rice,oven_instance)
        else:
            exp(food_rice,oven_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,oven_instance]=True
        close[oven_instance,food_rice]=True
    

behavior find_food_orange_2008_around_kitchen_counter_128(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_orange,kitchen_counter_instance)
        else:
            exp(food_orange,kitchen_counter_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_orange]=True
    

behavior find_food_steak_2042_around_oven_141(food_steak:item):
    goal: not unknown(food_steak)
    body:
        assert is_food_steak(food_steak)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_steak,oven_instance)
        else:
            exp(food_steak,oven_instance)
    eff:
        unknown[food_steak]=False
        close[food_steak,oven_instance]=True
        close[oven_instance,food_steak]=True
    

behavior find_food_sugar_2070_around_cupboard_131(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_sugar,cupboard_instance)
        else:
            exp(food_sugar,cupboard_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,cupboard_instance]=True
        close[cupboard_instance,food_sugar]=True
    

behavior find_food_egg_2053_around_table_123(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==123
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_egg,table_instance)
        else:
            exp(food_egg,table_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,table_instance]=True
        close[table_instance,food_egg]=True
    

behavior find_food_fish_2054_around_milk_2074(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind milk_instance:item where:
            is_milk(milk_instance) and id[milk_instance]==2074
        achieve close_char(char,milk_instance)
        if can_open(milk_instance):
            achieve_once open(milk_instance)
            exp(food_fish,milk_instance)
        else:
            exp(food_fish,milk_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,milk_instance]=True
        close[milk_instance,food_fish]=True
    

#exp_behavior_end

#goal_representation
behavior take_items_out_of_fridge(item: item, fridge: item):
    body:
        achieve_once inhand(item)
        achieve_once close_char(char, fridge)
        
behavior __goal__():
    body:
        bind fridge: item where:
            is_fridge(fridge) and id[fridge] == 140
        # Select the fridge with ID 140
        
        foreach item: item:
            if inside(item, fridge):
                # Take all items out of the fridge
                take_items_out_of_fridge(item, fridge)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2050_around_oven_141(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_chicken,oven_instance)
        else:
            exp(food_chicken,oven_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,oven_instance]=True
        close[oven_instance,food_chicken]=True
    

behavior find_food_snack_2069_around_oven_141(food_snack:item):
    goal: not unknown(food_snack)
    body:
        assert is_food_snack(food_snack)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_snack,oven_instance)
        else:
            exp(food_snack,oven_instance)
    eff:
        unknown[food_snack]=False
        close[food_snack,oven_instance]=True
        close[oven_instance,food_snack]=True
    

behavior find_food_pizza_2065_around_oven_141(food_pizza:item):
    goal: not unknown(food_pizza)
    body:
        assert is_food_pizza(food_pizza)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_pizza,oven_instance)
        else:
            exp(food_pizza,oven_instance)
    eff:
        unknown[food_pizza]=False
        close[food_pizza,oven_instance]=True
        close[oven_instance,food_pizza]=True
    

behavior find_food_apple_2043_around_table_127(food_apple:item):
    goal: not unknown(food_apple)
    body:
        assert is_food_apple(food_apple)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_apple,table_instance)
        else:
            exp(food_apple,table_instance)
    eff:
        unknown[food_apple]=False
        close[food_apple,table_instance]=True
        close[table_instance,food_apple]=True
    

behavior find_food_potato_2066_around_oven_141(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_potato,oven_instance)
        else:
            exp(food_potato,oven_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,oven_instance]=True
        close[oven_instance,food_potato]=True
    

behavior find_juice_2034_around_kitchen_counter_128(juice:item):
    goal: not unknown(juice)
    body:
        assert is_juice(juice)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(juice,kitchen_counter_instance)
        else:
            exp(juice,kitchen_counter_instance)
    eff:
        unknown[juice]=False
        close[juice,kitchen_counter_instance]=True
        close[kitchen_counter_instance,juice]=True
    

behavior find_food_jam_2059_around_tablelamp_236(food_jam:item):
    goal: not unknown(food_jam)
    body:
        assert is_food_jam(food_jam)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_jam,tablelamp_instance)
        else:
            exp(food_jam,tablelamp_instance)
    eff:
        unknown[food_jam]=False
        close[food_jam,tablelamp_instance]=True
        close[tablelamp_instance,food_jam]=True
    

behavior find_food_vegetable_2072_around_kitchen_counter_128(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_vegetable,kitchen_counter_instance)
        else:
            exp(food_vegetable,kitchen_counter_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_vegetable]=True
    

behavior find_food_bread_2016_around_table_127(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_bread,table_instance)
        else:
            exp(food_bread,table_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,table_instance]=True
        close[table_instance,food_bread]=True
    

behavior find_food_lemon_2061_around_table_127(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_lemon,table_instance)
        else:
            exp(food_lemon,table_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,table_instance]=True
        close[table_instance,food_lemon]=True
    

behavior find_food_butter_2018_around_milk_2074(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind milk_instance:item where:
            is_milk(milk_instance) and id[milk_instance]==2074
        achieve close_char(char,milk_instance)
        if can_open(milk_instance):
            achieve_once open(milk_instance)
            exp(food_butter,milk_instance)
        else:
            exp(food_butter,milk_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,milk_instance]=True
        close[milk_instance,food_butter]=True
    

behavior find_food_donut_2052_around_table_127(food_donut:item):
    goal: not unknown(food_donut)
    body:
        assert is_food_donut(food_donut)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_donut,table_instance)
        else:
            exp(food_donut,table_instance)
    eff:
        unknown[food_donut]=False
        close[food_donut,table_instance]=True
        close[table_instance,food_donut]=True
    

behavior find_food_onion_2026_around_table_127(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_onion,table_instance)
        else:
            exp(food_onion,table_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,table_instance]=True
        close[table_instance,food_onion]=True
    

behavior find_food_turkey_2071_around_table_127(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_turkey,table_instance)
        else:
            exp(food_turkey,table_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,table_instance]=True
        close[table_instance,food_turkey]=True
    

behavior find_food_noodles_2062_around_stove_2090(food_noodles:item):
    goal: not unknown(food_noodles)
    body:
        assert is_food_noodles(food_noodles)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(food_noodles,stove_instance)
        else:
            exp(food_noodles,stove_instance)
    eff:
        unknown[food_noodles]=False
        close[food_noodles,stove_instance]=True
        close[stove_instance,food_noodles]=True
    

behavior find_food_fruit_2056_around_tablelamp_358(food_fruit:item):
    goal: not unknown(food_fruit)
    body:
        assert is_food_fruit(food_fruit)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==358
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_fruit,tablelamp_instance)
        else:
            exp(food_fruit,tablelamp_instance)
    eff:
        unknown[food_fruit]=False
        close[food_fruit,tablelamp_instance]=True
        close[tablelamp_instance,food_fruit]=True
    

behavior find_food_kiwi_2060_around_kitchen_counter_128(food_kiwi:item):
    goal: not unknown(food_kiwi)
    body:
        assert is_food_kiwi(food_kiwi)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_kiwi,kitchen_counter_instance)
        else:
            exp(food_kiwi,kitchen_counter_instance)
    eff:
        unknown[food_kiwi]=False
        close[food_kiwi,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_kiwi]=True
    

behavior find_food_peanut_butter_2064_around_table_127(food_peanut_butter:item):
    goal: not unknown(food_peanut_butter)
    body:
        assert is_food_peanut_butter(food_peanut_butter)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_peanut_butter,table_instance)
        else:
            exp(food_peanut_butter,table_instance)
    eff:
        unknown[food_peanut_butter]=False
        close[food_peanut_butter,table_instance]=True
        close[table_instance,food_peanut_butter]=True
    

behavior find_food_cereal_2048_around_table_127(food_cereal:item):
    goal: not unknown(food_cereal)
    body:
        assert is_food_cereal(food_cereal)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_cereal,table_instance)
        else:
            exp(food_cereal,table_instance)
    eff:
        unknown[food_cereal]=False
        close[food_cereal,table_instance]=True
        close[table_instance,food_cereal]=True
    

behavior find_food_carrot_2047_around_kitchen_counter_128(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_carrot,kitchen_counter_instance)
        else:
            exp(food_carrot,kitchen_counter_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_carrot]=True
    

behavior find_food_cheese_2049_around_table_127(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_cheese,table_instance)
        else:
            exp(food_cheese,table_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,table_instance]=True
        close[table_instance,food_cheese]=True
    

behavior find_food_bacon_2044_around_table_127(food_bacon:item):
    goal: not unknown(food_bacon)
    body:
        assert is_food_bacon(food_bacon)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_bacon,table_instance)
        else:
            exp(food_bacon,table_instance)
    eff:
        unknown[food_bacon]=False
        close[food_bacon,table_instance]=True
        close[table_instance,food_bacon]=True
    

behavior find_food_oatmeal_2063_around_kitchen_counter_128(food_oatmeal:item):
    goal: not unknown(food_oatmeal)
    body:
        assert is_food_oatmeal(food_oatmeal)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_oatmeal,kitchen_counter_instance)
        else:
            exp(food_oatmeal,kitchen_counter_instance)
    eff:
        unknown[food_oatmeal]=False
        close[food_oatmeal,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_oatmeal]=True
    

behavior find_food_cake_2046_around_table_127(food_cake:item):
    goal: not unknown(food_cake)
    body:
        assert is_food_cake(food_cake)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_cake,table_instance)
        else:
            exp(food_cake,table_instance)
    eff:
        unknown[food_cake]=False
        close[food_cake,table_instance]=True
        close[table_instance,food_cake]=True
    

behavior find_food_dessert_2051_around_table_127(food_dessert:item):
    goal: not unknown(food_dessert)
    body:
        assert is_food_dessert(food_dessert)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_dessert,table_instance)
        else:
            exp(food_dessert,table_instance)
    eff:
        unknown[food_dessert]=False
        close[food_dessert,table_instance]=True
        close[table_instance,food_dessert]=True
    

behavior find_food_salt_2068_around_kitchen_counter_128(food_salt:item):
    goal: not unknown(food_salt)
    body:
        assert is_food_salt(food_salt)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_salt,kitchen_counter_instance)
        else:
            exp(food_salt,kitchen_counter_instance)
    eff:
        unknown[food_salt]=False
        close[food_salt,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_salt]=True
    

behavior find_food_hamburger_2057_around_table_127(food_hamburger:item):
    goal: not unknown(food_hamburger)
    body:
        assert is_food_hamburger(food_hamburger)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_hamburger,table_instance)
        else:
            exp(food_hamburger,table_instance)
    eff:
        unknown[food_hamburger]=False
        close[food_hamburger,table_instance]=True
        close[table_instance,food_hamburger]=True
    

behavior find_food_ice_cream_2058_around_oven_141(food_ice_cream:item):
    goal: not unknown(food_ice_cream)
    body:
        assert is_food_ice_cream(food_ice_cream)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_ice_cream,oven_instance)
        else:
            exp(food_ice_cream,oven_instance)
    eff:
        unknown[food_ice_cream]=False
        close[food_ice_cream,oven_instance]=True
        close[oven_instance,food_ice_cream]=True
    

behavior find_food_banana_2045_around_table_127(food_banana:item):
    goal: not unknown(food_banana)
    body:
        assert is_food_banana(food_banana)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_banana,table_instance)
        else:
            exp(food_banana,table_instance)
    eff:
        unknown[food_banana]=False
        close[food_banana,table_instance]=True
        close[table_instance,food_banana]=True
    

behavior find_food_rice_2067_around_stove_2090(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(food_rice,stove_instance)
        else:
            exp(food_rice,stove_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,stove_instance]=True
        close[stove_instance,food_rice]=True
    

behavior find_food_orange_2008_around_table_127(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_orange,table_instance)
        else:
            exp(food_orange,table_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,table_instance]=True
        close[table_instance,food_orange]=True
    

behavior find_food_steak_2042_around_oven_141(food_steak:item):
    goal: not unknown(food_steak)
    body:
        assert is_food_steak(food_steak)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_steak,oven_instance)
        else:
            exp(food_steak,oven_instance)
    eff:
        unknown[food_steak]=False
        close[food_steak,oven_instance]=True
        close[oven_instance,food_steak]=True
    

behavior find_food_egg_2053_around_oven_141(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_egg,oven_instance)
        else:
            exp(food_egg,oven_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,oven_instance]=True
        close[oven_instance,food_egg]=True
    

behavior find_food_fish_2054_around_cupboard_131(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_fish,cupboard_instance)
        else:
            exp(food_fish,cupboard_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,cupboard_instance]=True
        close[cupboard_instance,food_fish]=True
    

#exp_behavior_end

#goal_representation
behavior take_items_out_of_fridge(fridge:item, item:item, trashcan:item):
    body:
        achieve_once inhand(item)
        achieve_once inside(item, trashcan)

behavior __goal__():
    body:
        bind fridge: item where:
            is_fridge(fridge) and id[fridge] == 140
        # Select the fridge with ID 140

        bind trashcan: item where:
            is_trashcan(trashcan)
        # Select the trashcan

        foreach item: item:
            # Move all items from the fridge to the trashcan
            if inside(item, fridge):
                take_items_out_of_fridge(fridge, item, trashcan)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2050_around_oven_141(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_chicken,oven_instance)
        else:
            exp(food_chicken,oven_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,oven_instance]=True
        close[oven_instance,food_chicken]=True
    

behavior find_food_snack_2069_around_oven_141(food_snack:item):
    goal: not unknown(food_snack)
    body:
        assert is_food_snack(food_snack)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_snack,oven_instance)
        else:
            exp(food_snack,oven_instance)
    eff:
        unknown[food_snack]=False
        close[food_snack,oven_instance]=True
        close[oven_instance,food_snack]=True
    

behavior find_food_pizza_2065_around_oven_141(food_pizza:item):
    goal: not unknown(food_pizza)
    body:
        assert is_food_pizza(food_pizza)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_pizza,oven_instance)
        else:
            exp(food_pizza,oven_instance)
    eff:
        unknown[food_pizza]=False
        close[food_pizza,oven_instance]=True
        close[oven_instance,food_pizza]=True
    

behavior find_food_apple_2043_around_table_127(food_apple:item):
    goal: not unknown(food_apple)
    body:
        assert is_food_apple(food_apple)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_apple,table_instance)
        else:
            exp(food_apple,table_instance)
    eff:
        unknown[food_apple]=False
        close[food_apple,table_instance]=True
        close[table_instance,food_apple]=True
    

behavior find_food_potato_2066_around_kitchen_counter_128(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_potato,kitchen_counter_instance)
        else:
            exp(food_potato,kitchen_counter_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_potato]=True
    

behavior find_juice_2034_around_table_127(juice:item):
    goal: not unknown(juice)
    body:
        assert is_juice(juice)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(juice,table_instance)
        else:
            exp(juice,table_instance)
    eff:
        unknown[juice]=False
        close[juice,table_instance]=True
        close[table_instance,juice]=True
    

behavior find_food_jam_2059_around_stove_2090(food_jam:item):
    goal: not unknown(food_jam)
    body:
        assert is_food_jam(food_jam)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(food_jam,stove_instance)
        else:
            exp(food_jam,stove_instance)
    eff:
        unknown[food_jam]=False
        close[food_jam,stove_instance]=True
        close[stove_instance,food_jam]=True
    

behavior find_food_vegetable_2072_around_kitchen_counter_128(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_vegetable,kitchen_counter_instance)
        else:
            exp(food_vegetable,kitchen_counter_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_vegetable]=True
    

behavior find_food_bread_2016_around_table_127(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_bread,table_instance)
        else:
            exp(food_bread,table_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,table_instance]=True
        close[table_instance,food_bread]=True
    

behavior find_food_lemon_2061_around_stove_2090(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(food_lemon,stove_instance)
        else:
            exp(food_lemon,stove_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,stove_instance]=True
        close[stove_instance,food_lemon]=True
    

behavior find_food_butter_2018_around_oven_141(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_butter,oven_instance)
        else:
            exp(food_butter,oven_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,oven_instance]=True
        close[oven_instance,food_butter]=True
    

behavior find_novel_2010_around_bookshelf_260(novel:item):
    goal: not unknown(novel)
    body:
        assert is_novel(novel)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==260
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(novel,bookshelf_instance)
        else:
            exp(novel,bookshelf_instance)
    eff:
        unknown[novel]=False
        close[novel,bookshelf_instance]=True
        close[bookshelf_instance,novel]=True
    

behavior find_food_onion_2026_around_kitchen_counter_128(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_onion,kitchen_counter_instance)
        else:
            exp(food_onion,kitchen_counter_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_onion]=True
    

behavior find_food_turkey_2071_around_oven_141(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_turkey,oven_instance)
        else:
            exp(food_turkey,oven_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,oven_instance]=True
        close[oven_instance,food_turkey]=True
    

behavior find_food_noodles_2062_around_oven_141(food_noodles:item):
    goal: not unknown(food_noodles)
    body:
        assert is_food_noodles(food_noodles)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_noodles,oven_instance)
        else:
            exp(food_noodles,oven_instance)
    eff:
        unknown[food_noodles]=False
        close[food_noodles,oven_instance]=True
        close[oven_instance,food_noodles]=True
    

behavior find_food_fruit_2056_around_table_127(food_fruit:item):
    goal: not unknown(food_fruit)
    body:
        assert is_food_fruit(food_fruit)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_fruit,table_instance)
        else:
            exp(food_fruit,table_instance)
    eff:
        unknown[food_fruit]=False
        close[food_fruit,table_instance]=True
        close[table_instance,food_fruit]=True
    

behavior find_food_food_2055_around_table_127(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_food,table_instance)
        else:
            exp(food_food,table_instance)
    eff:
        unknown[food_food]=False
        close[food_food,table_instance]=True
        close[table_instance,food_food]=True
    

behavior find_food_kiwi_2060_around_table_127(food_kiwi:item):
    goal: not unknown(food_kiwi)
    body:
        assert is_food_kiwi(food_kiwi)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_kiwi,table_instance)
        else:
            exp(food_kiwi,table_instance)
    eff:
        unknown[food_kiwi]=False
        close[food_kiwi,table_instance]=True
        close[table_instance,food_kiwi]=True
    

behavior find_food_peanut_butter_2064_around_table_127(food_peanut_butter:item):
    goal: not unknown(food_peanut_butter)
    body:
        assert is_food_peanut_butter(food_peanut_butter)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_peanut_butter,table_instance)
        else:
            exp(food_peanut_butter,table_instance)
    eff:
        unknown[food_peanut_butter]=False
        close[food_peanut_butter,table_instance]=True
        close[table_instance,food_peanut_butter]=True
    

behavior find_food_cereal_2048_around_table_127(food_cereal:item):
    goal: not unknown(food_cereal)
    body:
        assert is_food_cereal(food_cereal)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_cereal,table_instance)
        else:
            exp(food_cereal,table_instance)
    eff:
        unknown[food_cereal]=False
        close[food_cereal,table_instance]=True
        close[table_instance,food_cereal]=True
    

behavior find_food_carrot_2047_around_kitchen_counter_128(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_carrot,kitchen_counter_instance)
        else:
            exp(food_carrot,kitchen_counter_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_carrot]=True
    

behavior find_food_cheese_2049_around_table_127(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_cheese,table_instance)
        else:
            exp(food_cheese,table_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,table_instance]=True
        close[table_instance,food_cheese]=True
    

behavior find_food_bacon_2044_around_oven_141(food_bacon:item):
    goal: not unknown(food_bacon)
    body:
        assert is_food_bacon(food_bacon)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_bacon,oven_instance)
        else:
            exp(food_bacon,oven_instance)
    eff:
        unknown[food_bacon]=False
        close[food_bacon,oven_instance]=True
        close[oven_instance,food_bacon]=True
    

behavior find_food_oatmeal_2063_around_table_127(food_oatmeal:item):
    goal: not unknown(food_oatmeal)
    body:
        assert is_food_oatmeal(food_oatmeal)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_oatmeal,table_instance)
        else:
            exp(food_oatmeal,table_instance)
    eff:
        unknown[food_oatmeal]=False
        close[food_oatmeal,table_instance]=True
        close[table_instance,food_oatmeal]=True
    

behavior find_food_cake_2046_around_oven_141(food_cake:item):
    goal: not unknown(food_cake)
    body:
        assert is_food_cake(food_cake)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_cake,oven_instance)
        else:
            exp(food_cake,oven_instance)
    eff:
        unknown[food_cake]=False
        close[food_cake,oven_instance]=True
        close[oven_instance,food_cake]=True
    

behavior find_food_dessert_2051_around_table_127(food_dessert:item):
    goal: not unknown(food_dessert)
    body:
        assert is_food_dessert(food_dessert)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_dessert,table_instance)
        else:
            exp(food_dessert,table_instance)
    eff:
        unknown[food_dessert]=False
        close[food_dessert,table_instance]=True
        close[table_instance,food_dessert]=True
    

behavior find_food_salt_2068_around_table_127(food_salt:item):
    goal: not unknown(food_salt)
    body:
        assert is_food_salt(food_salt)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_salt,table_instance)
        else:
            exp(food_salt,table_instance)
    eff:
        unknown[food_salt]=False
        close[food_salt,table_instance]=True
        close[table_instance,food_salt]=True
    

behavior find_food_hamburger_2057_around_table_127(food_hamburger:item):
    goal: not unknown(food_hamburger)
    body:
        assert is_food_hamburger(food_hamburger)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_hamburger,table_instance)
        else:
            exp(food_hamburger,table_instance)
    eff:
        unknown[food_hamburger]=False
        close[food_hamburger,table_instance]=True
        close[table_instance,food_hamburger]=True
    

behavior find_food_ice_cream_2058_around_oven_141(food_ice_cream:item):
    goal: not unknown(food_ice_cream)
    body:
        assert is_food_ice_cream(food_ice_cream)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_ice_cream,oven_instance)
        else:
            exp(food_ice_cream,oven_instance)
    eff:
        unknown[food_ice_cream]=False
        close[food_ice_cream,oven_instance]=True
        close[oven_instance,food_ice_cream]=True
    

behavior find_food_banana_2045_around_walllamp_44(food_banana:item):
    goal: not unknown(food_banana)
    body:
        assert is_food_banana(food_banana)
        bind walllamp_instance:item where:
            is_walllamp(walllamp_instance) and id[walllamp_instance]==44
        achieve close_char(char,walllamp_instance)
        if can_open(walllamp_instance):
            achieve_once open(walllamp_instance)
            exp(food_banana,walllamp_instance)
        else:
            exp(food_banana,walllamp_instance)
    eff:
        unknown[food_banana]=False
        close[food_banana,walllamp_instance]=True
        close[walllamp_instance,food_banana]=True
    

behavior find_food_rice_2067_around_stove_2090(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(food_rice,stove_instance)
        else:
            exp(food_rice,stove_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,stove_instance]=True
        close[stove_instance,food_rice]=True
    

behavior find_food_orange_2008_around_table_127(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_orange,table_instance)
        else:
            exp(food_orange,table_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,table_instance]=True
        close[table_instance,food_orange]=True
    

behavior find_food_steak_2042_around_oven_141(food_steak:item):
    goal: not unknown(food_steak)
    body:
        assert is_food_steak(food_steak)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_steak,oven_instance)
        else:
            exp(food_steak,oven_instance)
    eff:
        unknown[food_steak]=False
        close[food_steak,oven_instance]=True
        close[oven_instance,food_steak]=True
    

behavior find_food_egg_2053_around_cupboard_131(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_egg,cupboard_instance)
        else:
            exp(food_egg,cupboard_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,cupboard_instance]=True
        close[cupboard_instance,food_egg]=True
    

behavior find_food_fish_2054_around_stove_2090(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(food_fish,stove_instance)
        else:
            exp(food_fish,stove_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,stove_instance]=True
        close[stove_instance,food_fish]=True
    

#exp_behavior_end

#goal_representation
 
behavior take_items_out_of_fridge(item:item, fridge:item):
    body:
        achieve_once inside(item, trashcan)
        # Temporarily move items out of the fridge

behavior __goal__():
    body:
        bind fridge: item where:
            is_fridge(fridge) and id[fridge] == 140
        # Select the fridge with ID 140
    
        bind trashcan: item where:
            is_trashcan(trashcan)
        # Select the trashcan
    
        foreach item: item:
            if inside(item, fridge):
                # Move items out of the fridge
                take_items_out_of_fridge(item, fridge)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: trashcan; available variables: [Variable<item: item>, Variable<fridge: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_chicken_2050_around_oven_141(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_chicken,oven_instance)
        else:
            exp(food_chicken,oven_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,oven_instance]=True
        close[oven_instance,food_chicken]=True
    

behavior find_food_snack_2069_around_kitchen_counter_128(food_snack:item):
    goal: not unknown(food_snack)
    body:
        assert is_food_snack(food_snack)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_snack,kitchen_counter_instance)
        else:
            exp(food_snack,kitchen_counter_instance)
    eff:
        unknown[food_snack]=False
        close[food_snack,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_snack]=True
    

behavior find_food_pizza_2065_around_oven_141(food_pizza:item):
    goal: not unknown(food_pizza)
    body:
        assert is_food_pizza(food_pizza)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_pizza,oven_instance)
        else:
            exp(food_pizza,oven_instance)
    eff:
        unknown[food_pizza]=False
        close[food_pizza,oven_instance]=True
        close[oven_instance,food_pizza]=True
    

behavior find_food_apple_2043_around_kitchen_counter_128(food_apple:item):
    goal: not unknown(food_apple)
    body:
        assert is_food_apple(food_apple)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_apple,kitchen_counter_instance)
        else:
            exp(food_apple,kitchen_counter_instance)
    eff:
        unknown[food_apple]=False
        close[food_apple,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_apple]=True
    

behavior find_food_potato_2066_around_milk_2074(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind milk_instance:item where:
            is_milk(milk_instance) and id[milk_instance]==2074
        achieve close_char(char,milk_instance)
        if can_open(milk_instance):
            achieve_once open(milk_instance)
            exp(food_potato,milk_instance)
        else:
            exp(food_potato,milk_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,milk_instance]=True
        close[milk_instance,food_potato]=True
    

behavior find_juice_2034_around_kitchen_counter_128(juice:item):
    goal: not unknown(juice)
    body:
        assert is_juice(juice)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(juice,kitchen_counter_instance)
        else:
            exp(juice,kitchen_counter_instance)
    eff:
        unknown[juice]=False
        close[juice,kitchen_counter_instance]=True
        close[kitchen_counter_instance,juice]=True
    

behavior find_food_jam_2059_around_kitchen_counter_128(food_jam:item):
    goal: not unknown(food_jam)
    body:
        assert is_food_jam(food_jam)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_jam,kitchen_counter_instance)
        else:
            exp(food_jam,kitchen_counter_instance)
    eff:
        unknown[food_jam]=False
        close[food_jam,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_jam]=True
    

behavior find_food_vegetable_2072_around_kitchen_counter_128(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_vegetable,kitchen_counter_instance)
        else:
            exp(food_vegetable,kitchen_counter_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_vegetable]=True
    

behavior find_food_bread_2016_around_table_127(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_bread,table_instance)
        else:
            exp(food_bread,table_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,table_instance]=True
        close[table_instance,food_bread]=True
    

behavior find_food_lemon_2061_around_kitchen_counter_128(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_lemon,kitchen_counter_instance)
        else:
            exp(food_lemon,kitchen_counter_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_lemon]=True
    

behavior find_food_butter_2018_around_oven_141(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_butter,oven_instance)
        else:
            exp(food_butter,oven_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,oven_instance]=True
        close[oven_instance,food_butter]=True
    

behavior find_food_donut_2052_around_table_127(food_donut:item):
    goal: not unknown(food_donut)
    body:
        assert is_food_donut(food_donut)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_donut,table_instance)
        else:
            exp(food_donut,table_instance)
    eff:
        unknown[food_donut]=False
        close[food_donut,table_instance]=True
        close[table_instance,food_donut]=True
    

behavior find_food_onion_2026_around_table_127(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_onion,table_instance)
        else:
            exp(food_onion,table_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,table_instance]=True
        close[table_instance,food_onion]=True
    

behavior find_food_turkey_2071_around_oven_141(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_turkey,oven_instance)
        else:
            exp(food_turkey,oven_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,oven_instance]=True
        close[oven_instance,food_turkey]=True
    

behavior find_food_noodles_2062_around_stove_2090(food_noodles:item):
    goal: not unknown(food_noodles)
    body:
        assert is_food_noodles(food_noodles)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(food_noodles,stove_instance)
        else:
            exp(food_noodles,stove_instance)
    eff:
        unknown[food_noodles]=False
        close[food_noodles,stove_instance]=True
        close[stove_instance,food_noodles]=True
    

behavior find_food_fruit_2056_around_table_127(food_fruit:item):
    goal: not unknown(food_fruit)
    body:
        assert is_food_fruit(food_fruit)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_fruit,table_instance)
        else:
            exp(food_fruit,table_instance)
    eff:
        unknown[food_fruit]=False
        close[food_fruit,table_instance]=True
        close[table_instance,food_fruit]=True
    

behavior find_food_kiwi_2060_around_kitchen_counter_128(food_kiwi:item):
    goal: not unknown(food_kiwi)
    body:
        assert is_food_kiwi(food_kiwi)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_kiwi,kitchen_counter_instance)
        else:
            exp(food_kiwi,kitchen_counter_instance)
    eff:
        unknown[food_kiwi]=False
        close[food_kiwi,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_kiwi]=True
    

behavior find_food_peanut_butter_2064_around_table_127(food_peanut_butter:item):
    goal: not unknown(food_peanut_butter)
    body:
        assert is_food_peanut_butter(food_peanut_butter)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_peanut_butter,table_instance)
        else:
            exp(food_peanut_butter,table_instance)
    eff:
        unknown[food_peanut_butter]=False
        close[food_peanut_butter,table_instance]=True
        close[table_instance,food_peanut_butter]=True
    

behavior find_food_cereal_2048_around_table_127(food_cereal:item):
    goal: not unknown(food_cereal)
    body:
        assert is_food_cereal(food_cereal)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_cereal,table_instance)
        else:
            exp(food_cereal,table_instance)
    eff:
        unknown[food_cereal]=False
        close[food_cereal,table_instance]=True
        close[table_instance,food_cereal]=True
    

behavior find_food_carrot_2047_around_milk_2074(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind milk_instance:item where:
            is_milk(milk_instance) and id[milk_instance]==2074
        achieve close_char(char,milk_instance)
        if can_open(milk_instance):
            achieve_once open(milk_instance)
            exp(food_carrot,milk_instance)
        else:
            exp(food_carrot,milk_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,milk_instance]=True
        close[milk_instance,food_carrot]=True
    

behavior find_food_cheese_2049_around_table_127(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_cheese,table_instance)
        else:
            exp(food_cheese,table_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,table_instance]=True
        close[table_instance,food_cheese]=True
    

behavior find_food_bacon_2044_around_oven_141(food_bacon:item):
    goal: not unknown(food_bacon)
    body:
        assert is_food_bacon(food_bacon)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_bacon,oven_instance)
        else:
            exp(food_bacon,oven_instance)
    eff:
        unknown[food_bacon]=False
        close[food_bacon,oven_instance]=True
        close[oven_instance,food_bacon]=True
    

behavior find_food_oatmeal_2063_around_table_127(food_oatmeal:item):
    goal: not unknown(food_oatmeal)
    body:
        assert is_food_oatmeal(food_oatmeal)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_oatmeal,table_instance)
        else:
            exp(food_oatmeal,table_instance)
    eff:
        unknown[food_oatmeal]=False
        close[food_oatmeal,table_instance]=True
        close[table_instance,food_oatmeal]=True
    

behavior find_food_cake_2046_around_table_127(food_cake:item):
    goal: not unknown(food_cake)
    body:
        assert is_food_cake(food_cake)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_cake,table_instance)
        else:
            exp(food_cake,table_instance)
    eff:
        unknown[food_cake]=False
        close[food_cake,table_instance]=True
        close[table_instance,food_cake]=True
    

behavior find_food_dessert_2051_around_table_127(food_dessert:item):
    goal: not unknown(food_dessert)
    body:
        assert is_food_dessert(food_dessert)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_dessert,table_instance)
        else:
            exp(food_dessert,table_instance)
    eff:
        unknown[food_dessert]=False
        close[food_dessert,table_instance]=True
        close[table_instance,food_dessert]=True
    

behavior find_food_salt_2068_around_kitchen_counter_128(food_salt:item):
    goal: not unknown(food_salt)
    body:
        assert is_food_salt(food_salt)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_salt,kitchen_counter_instance)
        else:
            exp(food_salt,kitchen_counter_instance)
    eff:
        unknown[food_salt]=False
        close[food_salt,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_salt]=True
    

behavior find_food_hamburger_2057_around_table_127(food_hamburger:item):
    goal: not unknown(food_hamburger)
    body:
        assert is_food_hamburger(food_hamburger)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_hamburger,table_instance)
        else:
            exp(food_hamburger,table_instance)
    eff:
        unknown[food_hamburger]=False
        close[food_hamburger,table_instance]=True
        close[table_instance,food_hamburger]=True
    

behavior find_food_ice_cream_2058_around_oven_141(food_ice_cream:item):
    goal: not unknown(food_ice_cream)
    body:
        assert is_food_ice_cream(food_ice_cream)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_ice_cream,oven_instance)
        else:
            exp(food_ice_cream,oven_instance)
    eff:
        unknown[food_ice_cream]=False
        close[food_ice_cream,oven_instance]=True
        close[oven_instance,food_ice_cream]=True
    

behavior find_food_banana_2045_around_table_127(food_banana:item):
    goal: not unknown(food_banana)
    body:
        assert is_food_banana(food_banana)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_banana,table_instance)
        else:
            exp(food_banana,table_instance)
    eff:
        unknown[food_banana]=False
        close[food_banana,table_instance]=True
        close[table_instance,food_banana]=True
    

behavior find_food_rice_2067_around_stove_2090(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(food_rice,stove_instance)
        else:
            exp(food_rice,stove_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,stove_instance]=True
        close[stove_instance,food_rice]=True
    

behavior find_food_orange_2008_around_table_127(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_orange,table_instance)
        else:
            exp(food_orange,table_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,table_instance]=True
        close[table_instance,food_orange]=True
    

behavior find_food_steak_2042_around_oven_141(food_steak:item):
    goal: not unknown(food_steak)
    body:
        assert is_food_steak(food_steak)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_steak,oven_instance)
        else:
            exp(food_steak,oven_instance)
    eff:
        unknown[food_steak]=False
        close[food_steak,oven_instance]=True
        close[oven_instance,food_steak]=True
    

behavior find_food_egg_2053_around_oven_141(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_egg,oven_instance)
        else:
            exp(food_egg,oven_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,oven_instance]=True
        close[oven_instance,food_egg]=True
    

behavior find_food_fish_2054_around_kitchen_counter_128(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_fish,kitchen_counter_instance)
        else:
            exp(food_fish,kitchen_counter_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_fish]=True
    

#goal_representation
 
behavior take_items_out_of_fridge(item:item, fridge:item, trashcan:item):
    body:
        achieve_once inside(item, trashcan)
        # Temporarily move items out of the fridge

behavior __goal__():
    body:
        bind fridge: item where:
            is_fridge(fridge) and id[fridge] == 140
        # Select the fridge with ID 140
    
        bind trashcan: item where:
            is_trashcan(trashcan)
        # Select the trashcan
    
        foreach item: item:
            if inside(item, fridge):
                # Move items out of the fridge
                take_items_out_of_fridge(item, fridge, trashcan)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "2. take all the items out of the fridge." ?
Answer: Open the fridge and take all the items out.
Re-decompose: True

##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Open the fridge.', '2. Take all the items out and put them in the trashcan.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2050_around_tablelamp_236(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_chicken,tablelamp_instance)
        else:
            exp(food_chicken,tablelamp_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,tablelamp_instance]=True
        close[tablelamp_instance,food_chicken]=True
    

behavior find_food_snack_2069_around_tablelamp_236(food_snack:item):
    goal: not unknown(food_snack)
    body:
        assert is_food_snack(food_snack)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_snack,tablelamp_instance)
        else:
            exp(food_snack,tablelamp_instance)
    eff:
        unknown[food_snack]=False
        close[food_snack,tablelamp_instance]=True
        close[tablelamp_instance,food_snack]=True
    

behavior find_food_pizza_2065_around_oven_141(food_pizza:item):
    goal: not unknown(food_pizza)
    body:
        assert is_food_pizza(food_pizza)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_pizza,oven_instance)
        else:
            exp(food_pizza,oven_instance)
    eff:
        unknown[food_pizza]=False
        close[food_pizza,oven_instance]=True
        close[oven_instance,food_pizza]=True
    

behavior find_food_apple_2043_around_tablelamp_236(food_apple:item):
    goal: not unknown(food_apple)
    body:
        assert is_food_apple(food_apple)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_apple,tablelamp_instance)
        else:
            exp(food_apple,tablelamp_instance)
    eff:
        unknown[food_apple]=False
        close[food_apple,tablelamp_instance]=True
        close[tablelamp_instance,food_apple]=True
    

behavior find_food_potato_2066_around_table_127(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_potato,table_instance)
        else:
            exp(food_potato,table_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,table_instance]=True
        close[table_instance,food_potato]=True
    

behavior find_food_jam_2059_around_tablelamp_236(food_jam:item):
    goal: not unknown(food_jam)
    body:
        assert is_food_jam(food_jam)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_jam,tablelamp_instance)
        else:
            exp(food_jam,tablelamp_instance)
    eff:
        unknown[food_jam]=False
        close[food_jam,tablelamp_instance]=True
        close[tablelamp_instance,food_jam]=True
    

behavior find_food_vegetable_2072_around_table_127(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_vegetable,table_instance)
        else:
            exp(food_vegetable,table_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,table_instance]=True
        close[table_instance,food_vegetable]=True
    

behavior find_food_bread_2016_around_table_127(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_bread,table_instance)
        else:
            exp(food_bread,table_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,table_instance]=True
        close[table_instance,food_bread]=True
    

behavior find_food_lemon_2061_around_tablelamp_236(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_lemon,tablelamp_instance)
        else:
            exp(food_lemon,tablelamp_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,tablelamp_instance]=True
        close[tablelamp_instance,food_lemon]=True
    

behavior find_food_butter_2018_around_table_127(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_butter,table_instance)
        else:
            exp(food_butter,table_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,table_instance]=True
        close[table_instance,food_butter]=True
    

behavior find_food_donut_2052_around_table_127(food_donut:item):
    goal: not unknown(food_donut)
    body:
        assert is_food_donut(food_donut)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_donut,table_instance)
        else:
            exp(food_donut,table_instance)
    eff:
        unknown[food_donut]=False
        close[food_donut,table_instance]=True
        close[table_instance,food_donut]=True
    

behavior find_food_onion_2026_around_tablelamp_236(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_onion,tablelamp_instance)
        else:
            exp(food_onion,tablelamp_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,tablelamp_instance]=True
        close[tablelamp_instance,food_onion]=True
    

behavior find_food_turkey_2071_around_tablelamp_236(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_turkey,tablelamp_instance)
        else:
            exp(food_turkey,tablelamp_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,tablelamp_instance]=True
        close[tablelamp_instance,food_turkey]=True
    

behavior find_food_noodles_2062_around_tablelamp_236(food_noodles:item):
    goal: not unknown(food_noodles)
    body:
        assert is_food_noodles(food_noodles)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_noodles,tablelamp_instance)
        else:
            exp(food_noodles,tablelamp_instance)
    eff:
        unknown[food_noodles]=False
        close[food_noodles,tablelamp_instance]=True
        close[tablelamp_instance,food_noodles]=True
    

behavior find_food_food_2055_around_oven_141(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_food,oven_instance)
        else:
            exp(food_food,oven_instance)
    eff:
        unknown[food_food]=False
        close[food_food,oven_instance]=True
        close[oven_instance,food_food]=True
    

behavior find_food_kiwi_2060_around_table_127(food_kiwi:item):
    goal: not unknown(food_kiwi)
    body:
        assert is_food_kiwi(food_kiwi)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_kiwi,table_instance)
        else:
            exp(food_kiwi,table_instance)
    eff:
        unknown[food_kiwi]=False
        close[food_kiwi,table_instance]=True
        close[table_instance,food_kiwi]=True
    

behavior find_food_peanut_butter_2064_around_kitchen_counter_128(food_peanut_butter:item):
    goal: not unknown(food_peanut_butter)
    body:
        assert is_food_peanut_butter(food_peanut_butter)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_peanut_butter,kitchen_counter_instance)
        else:
            exp(food_peanut_butter,kitchen_counter_instance)
    eff:
        unknown[food_peanut_butter]=False
        close[food_peanut_butter,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_peanut_butter]=True
    

behavior find_food_cereal_2048_around_tablelamp_236(food_cereal:item):
    goal: not unknown(food_cereal)
    body:
        assert is_food_cereal(food_cereal)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_cereal,tablelamp_instance)
        else:
            exp(food_cereal,tablelamp_instance)
    eff:
        unknown[food_cereal]=False
        close[food_cereal,tablelamp_instance]=True
        close[tablelamp_instance,food_cereal]=True
    

behavior find_food_carrot_2047_around_tablelamp_236(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_carrot,tablelamp_instance)
        else:
            exp(food_carrot,tablelamp_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,tablelamp_instance]=True
        close[tablelamp_instance,food_carrot]=True
    

behavior find_food_cheese_2049_around_tablelamp_236(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_cheese,tablelamp_instance)
        else:
            exp(food_cheese,tablelamp_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,tablelamp_instance]=True
        close[tablelamp_instance,food_cheese]=True
    

behavior find_food_bacon_2044_around_tablelamp_236(food_bacon:item):
    goal: not unknown(food_bacon)
    body:
        assert is_food_bacon(food_bacon)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_bacon,tablelamp_instance)
        else:
            exp(food_bacon,tablelamp_instance)
    eff:
        unknown[food_bacon]=False
        close[food_bacon,tablelamp_instance]=True
        close[tablelamp_instance,food_bacon]=True
    

behavior find_food_oatmeal_2063_around_table_127(food_oatmeal:item):
    goal: not unknown(food_oatmeal)
    body:
        assert is_food_oatmeal(food_oatmeal)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_oatmeal,table_instance)
        else:
            exp(food_oatmeal,table_instance)
    eff:
        unknown[food_oatmeal]=False
        close[food_oatmeal,table_instance]=True
        close[table_instance,food_oatmeal]=True
    

behavior find_food_cake_2046_around_oven_141(food_cake:item):
    goal: not unknown(food_cake)
    body:
        assert is_food_cake(food_cake)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_cake,oven_instance)
        else:
            exp(food_cake,oven_instance)
    eff:
        unknown[food_cake]=False
        close[food_cake,oven_instance]=True
        close[oven_instance,food_cake]=True
    

behavior find_food_dessert_2051_around_table_127(food_dessert:item):
    goal: not unknown(food_dessert)
    body:
        assert is_food_dessert(food_dessert)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_dessert,table_instance)
        else:
            exp(food_dessert,table_instance)
    eff:
        unknown[food_dessert]=False
        close[food_dessert,table_instance]=True
        close[table_instance,food_dessert]=True
    

behavior find_food_hamburger_2057_around_oven_141(food_hamburger:item):
    goal: not unknown(food_hamburger)
    body:
        assert is_food_hamburger(food_hamburger)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_hamburger,oven_instance)
        else:
            exp(food_hamburger,oven_instance)
    eff:
        unknown[food_hamburger]=False
        close[food_hamburger,oven_instance]=True
        close[oven_instance,food_hamburger]=True
    

behavior find_food_ice_cream_2058_around_tablelamp_236(food_ice_cream:item):
    goal: not unknown(food_ice_cream)
    body:
        assert is_food_ice_cream(food_ice_cream)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_ice_cream,tablelamp_instance)
        else:
            exp(food_ice_cream,tablelamp_instance)
    eff:
        unknown[food_ice_cream]=False
        close[food_ice_cream,tablelamp_instance]=True
        close[tablelamp_instance,food_ice_cream]=True
    

behavior find_food_banana_2045_around_tablelamp_236(food_banana:item):
    goal: not unknown(food_banana)
    body:
        assert is_food_banana(food_banana)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_banana,tablelamp_instance)
        else:
            exp(food_banana,tablelamp_instance)
    eff:
        unknown[food_banana]=False
        close[food_banana,tablelamp_instance]=True
        close[tablelamp_instance,food_banana]=True
    

behavior find_food_rice_2067_around_stove_2090(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(food_rice,stove_instance)
        else:
            exp(food_rice,stove_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,stove_instance]=True
        close[stove_instance,food_rice]=True
    

behavior find_food_orange_2008_around_table_127(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_orange,table_instance)
        else:
            exp(food_orange,table_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,table_instance]=True
        close[table_instance,food_orange]=True
    

behavior find_food_steak_2042_around_table_127(food_steak:item):
    goal: not unknown(food_steak)
    body:
        assert is_food_steak(food_steak)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_steak,table_instance)
        else:
            exp(food_steak,table_instance)
    eff:
        unknown[food_steak]=False
        close[food_steak,table_instance]=True
        close[table_instance,food_steak]=True
    

behavior find_food_egg_2053_around_table_127(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_egg,table_instance)
        else:
            exp(food_egg,table_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,table_instance]=True
        close[table_instance,food_egg]=True
    

behavior find_food_fish_2054_around_tablelamp_236(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_fish,tablelamp_instance)
        else:
            exp(food_fish,tablelamp_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,tablelamp_instance]=True
        close[tablelamp_instance,food_fish]=True
    

#exp_behavior_end

#goal_representation
behavior open_fridge(fridge:item):
    body:
        achieve open(fridge)

behavior __goal__():
    body:
        bind fridge: item where:
            is_fridge(fridge) and id[fridge] == 140
        # Select the fridge with ID 140

        achieve_close_char(char, fridge)
        # Move closer to the fridge

        open_fridge(fridge)
        # Open the fridge
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

'Function achieve_close_char not found. Note that recursive function calls are not supported in the current version.'
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_chicken_2050_around_tablelamp_236(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_chicken,tablelamp_instance)
        else:
            exp(food_chicken,tablelamp_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,tablelamp_instance]=True
        close[tablelamp_instance,food_chicken]=True
    

behavior find_food_snack_2069_around_stove_2090(food_snack:item):
    goal: not unknown(food_snack)
    body:
        assert is_food_snack(food_snack)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(food_snack,stove_instance)
        else:
            exp(food_snack,stove_instance)
    eff:
        unknown[food_snack]=False
        close[food_snack,stove_instance]=True
        close[stove_instance,food_snack]=True
    

behavior find_food_pizza_2065_around_oven_141(food_pizza:item):
    goal: not unknown(food_pizza)
    body:
        assert is_food_pizza(food_pizza)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_pizza,oven_instance)
        else:
            exp(food_pizza,oven_instance)
    eff:
        unknown[food_pizza]=False
        close[food_pizza,oven_instance]=True
        close[oven_instance,food_pizza]=True
    

behavior find_food_apple_2043_around_tablelamp_236(food_apple:item):
    goal: not unknown(food_apple)
    body:
        assert is_food_apple(food_apple)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_apple,tablelamp_instance)
        else:
            exp(food_apple,tablelamp_instance)
    eff:
        unknown[food_apple]=False
        close[food_apple,tablelamp_instance]=True
        close[tablelamp_instance,food_apple]=True
    

behavior find_food_potato_2066_around_table_127(food_potato:item):
    goal: not unknown(food_potato)
    body:
        assert is_food_potato(food_potato)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_potato,table_instance)
        else:
            exp(food_potato,table_instance)
    eff:
        unknown[food_potato]=False
        close[food_potato,table_instance]=True
        close[table_instance,food_potato]=True
    

behavior find_juice_2034_around_tablelamp_236(juice:item):
    goal: not unknown(juice)
    body:
        assert is_juice(juice)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(juice,tablelamp_instance)
        else:
            exp(juice,tablelamp_instance)
    eff:
        unknown[juice]=False
        close[juice,tablelamp_instance]=True
        close[tablelamp_instance,juice]=True
    

behavior find_food_jam_2059_around_tablelamp_236(food_jam:item):
    goal: not unknown(food_jam)
    body:
        assert is_food_jam(food_jam)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_jam,tablelamp_instance)
        else:
            exp(food_jam,tablelamp_instance)
    eff:
        unknown[food_jam]=False
        close[food_jam,tablelamp_instance]=True
        close[tablelamp_instance,food_jam]=True
    

behavior find_food_vegetable_2072_around_table_127(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_vegetable,table_instance)
        else:
            exp(food_vegetable,table_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,table_instance]=True
        close[table_instance,food_vegetable]=True
    

behavior find_food_bread_2016_around_table_127(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_bread,table_instance)
        else:
            exp(food_bread,table_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,table_instance]=True
        close[table_instance,food_bread]=True
    

behavior find_food_lemon_2061_around_table_127(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_lemon,table_instance)
        else:
            exp(food_lemon,table_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,table_instance]=True
        close[table_instance,food_lemon]=True
    

behavior find_food_butter_2018_around_stove_2090(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(food_butter,stove_instance)
        else:
            exp(food_butter,stove_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,stove_instance]=True
        close[stove_instance,food_butter]=True
    

behavior find_food_donut_2052_around_table_127(food_donut:item):
    goal: not unknown(food_donut)
    body:
        assert is_food_donut(food_donut)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_donut,table_instance)
        else:
            exp(food_donut,table_instance)
    eff:
        unknown[food_donut]=False
        close[food_donut,table_instance]=True
        close[table_instance,food_donut]=True
    

behavior find_food_onion_2026_around_tablelamp_236(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_onion,tablelamp_instance)
        else:
            exp(food_onion,tablelamp_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,tablelamp_instance]=True
        close[tablelamp_instance,food_onion]=True
    

behavior find_food_turkey_2071_around_oven_141(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_turkey,oven_instance)
        else:
            exp(food_turkey,oven_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,oven_instance]=True
        close[oven_instance,food_turkey]=True
    

behavior find_food_noodles_2062_around_tablelamp_236(food_noodles:item):
    goal: not unknown(food_noodles)
    body:
        assert is_food_noodles(food_noodles)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_noodles,tablelamp_instance)
        else:
            exp(food_noodles,tablelamp_instance)
    eff:
        unknown[food_noodles]=False
        close[food_noodles,tablelamp_instance]=True
        close[tablelamp_instance,food_noodles]=True
    

behavior find_food_fruit_2056_around_table_127(food_fruit:item):
    goal: not unknown(food_fruit)
    body:
        assert is_food_fruit(food_fruit)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_fruit,table_instance)
        else:
            exp(food_fruit,table_instance)
    eff:
        unknown[food_fruit]=False
        close[food_fruit,table_instance]=True
        close[table_instance,food_fruit]=True
    

behavior find_food_kiwi_2060_around_table_127(food_kiwi:item):
    goal: not unknown(food_kiwi)
    body:
        assert is_food_kiwi(food_kiwi)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_kiwi,table_instance)
        else:
            exp(food_kiwi,table_instance)
    eff:
        unknown[food_kiwi]=False
        close[food_kiwi,table_instance]=True
        close[table_instance,food_kiwi]=True
    

behavior find_food_peanut_butter_2064_around_table_127(food_peanut_butter:item):
    goal: not unknown(food_peanut_butter)
    body:
        assert is_food_peanut_butter(food_peanut_butter)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_peanut_butter,table_instance)
        else:
            exp(food_peanut_butter,table_instance)
    eff:
        unknown[food_peanut_butter]=False
        close[food_peanut_butter,table_instance]=True
        close[table_instance,food_peanut_butter]=True
    

behavior find_food_cereal_2048_around_table_127(food_cereal:item):
    goal: not unknown(food_cereal)
    body:
        assert is_food_cereal(food_cereal)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_cereal,table_instance)
        else:
            exp(food_cereal,table_instance)
    eff:
        unknown[food_cereal]=False
        close[food_cereal,table_instance]=True
        close[table_instance,food_cereal]=True
    

behavior find_food_carrot_2047_around_oven_141(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_carrot,oven_instance)
        else:
            exp(food_carrot,oven_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,oven_instance]=True
        close[oven_instance,food_carrot]=True
    

behavior find_food_cheese_2049_around_tablelamp_236(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_cheese,tablelamp_instance)
        else:
            exp(food_cheese,tablelamp_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,tablelamp_instance]=True
        close[tablelamp_instance,food_cheese]=True
    

behavior find_food_bacon_2044_around_tablelamp_236(food_bacon:item):
    goal: not unknown(food_bacon)
    body:
        assert is_food_bacon(food_bacon)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_bacon,tablelamp_instance)
        else:
            exp(food_bacon,tablelamp_instance)
    eff:
        unknown[food_bacon]=False
        close[food_bacon,tablelamp_instance]=True
        close[tablelamp_instance,food_bacon]=True
    

behavior find_food_oatmeal_2063_around_cupboard_131(food_oatmeal:item):
    goal: not unknown(food_oatmeal)
    body:
        assert is_food_oatmeal(food_oatmeal)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_oatmeal,cupboard_instance)
        else:
            exp(food_oatmeal,cupboard_instance)
    eff:
        unknown[food_oatmeal]=False
        close[food_oatmeal,cupboard_instance]=True
        close[cupboard_instance,food_oatmeal]=True
    

behavior find_food_cake_2046_around_oven_141(food_cake:item):
    goal: not unknown(food_cake)
    body:
        assert is_food_cake(food_cake)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_cake,oven_instance)
        else:
            exp(food_cake,oven_instance)
    eff:
        unknown[food_cake]=False
        close[food_cake,oven_instance]=True
        close[oven_instance,food_cake]=True
    

behavior find_food_dessert_2051_around_table_127(food_dessert:item):
    goal: not unknown(food_dessert)
    body:
        assert is_food_dessert(food_dessert)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_dessert,table_instance)
        else:
            exp(food_dessert,table_instance)
    eff:
        unknown[food_dessert]=False
        close[food_dessert,table_instance]=True
        close[table_instance,food_dessert]=True
    

behavior find_food_salt_2068_around_stove_2090(food_salt:item):
    goal: not unknown(food_salt)
    body:
        assert is_food_salt(food_salt)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(food_salt,stove_instance)
        else:
            exp(food_salt,stove_instance)
    eff:
        unknown[food_salt]=False
        close[food_salt,stove_instance]=True
        close[stove_instance,food_salt]=True
    

behavior find_food_hamburger_2057_around_tablelamp_236(food_hamburger:item):
    goal: not unknown(food_hamburger)
    body:
        assert is_food_hamburger(food_hamburger)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_hamburger,tablelamp_instance)
        else:
            exp(food_hamburger,tablelamp_instance)
    eff:
        unknown[food_hamburger]=False
        close[food_hamburger,tablelamp_instance]=True
        close[tablelamp_instance,food_hamburger]=True
    

behavior find_food_ice_cream_2058_around_tablelamp_236(food_ice_cream:item):
    goal: not unknown(food_ice_cream)
    body:
        assert is_food_ice_cream(food_ice_cream)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_ice_cream,tablelamp_instance)
        else:
            exp(food_ice_cream,tablelamp_instance)
    eff:
        unknown[food_ice_cream]=False
        close[food_ice_cream,tablelamp_instance]=True
        close[tablelamp_instance,food_ice_cream]=True
    

behavior find_food_banana_2045_around_table_127(food_banana:item):
    goal: not unknown(food_banana)
    body:
        assert is_food_banana(food_banana)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_banana,table_instance)
        else:
            exp(food_banana,table_instance)
    eff:
        unknown[food_banana]=False
        close[food_banana,table_instance]=True
        close[table_instance,food_banana]=True
    

behavior find_food_rice_2067_around_stove_2090(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(food_rice,stove_instance)
        else:
            exp(food_rice,stove_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,stove_instance]=True
        close[stove_instance,food_rice]=True
    

behavior find_food_orange_2008_around_tablelamp_236(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==236
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(food_orange,tablelamp_instance)
        else:
            exp(food_orange,tablelamp_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,tablelamp_instance]=True
        close[tablelamp_instance,food_orange]=True
    

behavior find_food_steak_2042_around_oven_141(food_steak:item):
    goal: not unknown(food_steak)
    body:
        assert is_food_steak(food_steak)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_steak,oven_instance)
        else:
            exp(food_steak,oven_instance)
    eff:
        unknown[food_steak]=False
        close[food_steak,oven_instance]=True
        close[oven_instance,food_steak]=True
    

behavior find_food_egg_2053_around_stove_2090(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(food_egg,stove_instance)
        else:
            exp(food_egg,stove_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,stove_instance]=True
        close[stove_instance,food_egg]=True
    

behavior find_food_fish_2054_around_table_127(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_fish,table_instance)
        else:
            exp(food_fish,table_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,table_instance]=True
        close[table_instance,food_fish]=True
    

#goal_representation

behavior open_fridge(fridge:item):
    body:
        achieve open(fridge)

behavior __goal__():
    body:
        bind fridge: item where:
            is_fridge(fridge) and id[fridge] == 140
        # Select the fridge with ID 140

        achieve close_char(char, fridge)
        # Move closer to the fridge

        open_fridge(fridge)
        # Open the fridge

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior open_fridge(fridge:item):
    body:
        achieve open(fridge)

behavior __goal__():
    body:
        bind fridge: item where:
            is_fridge(fridge) and id[fridge] == 140
        # Select the fridge with ID 140

        achieve close_char(char, fridge)
        # Move closer to the fridge

        open_fridge(fridge)
        # Open the fridge

##############################
From agent.py-> find a plan in act()
switchoff_executor(fridge_140)open_executor(fridge_140)
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2026_around_table_127(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_onion,table_instance)
        else:
            exp(food_onion,table_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,table_instance]=True
        close[table_instance,food_onion]=True
    

behavior find_food_bread_2016_around_table_127(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_bread,table_instance)
        else:
            exp(food_bread,table_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,table_instance]=True
        close[table_instance,food_bread]=True
    

behavior find_food_orange_2008_around_table_127(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_orange,table_instance)
        else:
            exp(food_orange,table_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,table_instance]=True
        close[table_instance,food_orange]=True
    

behavior find_food_butter_2018_around_table_127(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_butter,table_instance)
        else:
            exp(food_butter,table_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,table_instance]=True
        close[table_instance,food_butter]=True
    

#exp_behavior_end

#goal_representation
 
behavior throw_items_into_trashcan(item:item, trashcan:item):
    body:
        achieve_once inside(item, trashcan)
        # Throw the item into the trashcan

behavior __goal__():
    body:
        bind fridge: item where:
            is_fridge(fridge)
        # Select the fridge

        bind trashcan: item where:
            is_trashcan(trashcan)
        # Select the trashcan

        foreach item: item:
            if inside(item, fridge):
                # Throw all items in the fridge into the trashcan
                throw_items_into_trashcan(item, trashcan)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior throw_items_into_trashcan(item:item, trashcan:item):
    body:
        achieve_once inside(item, trashcan)
        # Throw the item into the trashcan

behavior __goal__():
    body:
        bind fridge: item where:
            is_fridge(fridge)
        # Select the fridge

        bind trashcan: item where:
            is_trashcan(trashcan)
        # Select the trashcan

        foreach item: item:
            if inside(item, fridge):
                # Throw all items in the fridge into the trashcan
                throw_items_into_trashcan(item, trashcan)

##############################
From agent.py-> find a plan in act()
grab_executor(food_steak_2042)walk_executor(trashcan_360)putin_executor(food_steak_2042, trashcan_360)walk_executor(food_apple_2043)grab_executor(food_apple_2043)walk_executor(trashcan_360)putin_executor(food_apple_2043, trashcan_360)walk_executor(food_bacon_2044)grab_executor(food_bacon_2044)walk_executor(trashcan_360)putin_executor(food_bacon_2044, trashcan_360)walk_executor(food_banana_2045)grab_executor(food_banana_2045)walk_executor(trashcan_360)putin_executor(food_banana_2045, trashcan_360)walk_executor(food_cake_2046)grab_executor(food_cake_2046)walk_executor(trashcan_360)putin_executor(food_cake_2046, trashcan_360)walk_executor(food_carrot_2047)grab_executor(food_carrot_2047)walk_executor(trashcan_360)putin_executor(food_carrot_2047, trashcan_360)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(trashcan_360)putin_executor(food_cereal_2048, trashcan_360)walk_executor(food_cheese_2049)grab_executor(food_cheese_2049)walk_executor(trashcan_360)putin_executor(food_cheese_2049, trashcan_360)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(trashcan_360)putin_executor(food_chicken_2050, trashcan_360)walk_executor(food_dessert_2051)grab_executor(food_dessert_2051)walk_executor(trashcan_360)putin_executor(food_dessert_2051, trashcan_360)walk_executor(food_donut_2052)grab_executor(food_donut_2052)walk_executor(trashcan_360)putin_executor(food_donut_2052, trashcan_360)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(trashcan_360)putin_executor(food_egg_2053, trashcan_360)walk_executor(food_fish_2054)grab_executor(food_fish_2054)walk_executor(trashcan_360)putin_executor(food_fish_2054, trashcan_360)walk_executor(food_food_2055)grab_executor(food_food_2055)walk_executor(trashcan_360)putin_executor(food_food_2055, trashcan_360)walk_executor(food_fruit_2056)grab_executor(food_fruit_2056)walk_executor(trashcan_360)putin_executor(food_fruit_2056, trashcan_360)walk_executor(food_hamburger_2057)grab_executor(food_hamburger_2057)walk_executor(trashcan_360)putin_executor(food_hamburger_2057, trashcan_360)walk_executor(food_ice_cream_2058)grab_executor(food_ice_cream_2058)walk_executor(trashcan_360)putin_executor(food_ice_cream_2058, trashcan_360)walk_executor(food_jam_2059)grab_executor(food_jam_2059)walk_executor(trashcan_360)putin_executor(food_jam_2059, trashcan_360)walk_executor(food_kiwi_2060)grab_executor(food_kiwi_2060)walk_executor(trashcan_360)putin_executor(food_kiwi_2060, trashcan_360)walk_executor(food_lemon_2061)grab_executor(food_lemon_2061)walk_executor(trashcan_360)putin_executor(food_lemon_2061, trashcan_360)walk_executor(food_noodles_2062)grab_executor(food_noodles_2062)walk_executor(trashcan_360)putin_executor(food_noodles_2062, trashcan_360)walk_executor(food_oatmeal_2063)grab_executor(food_oatmeal_2063)walk_executor(trashcan_360)putin_executor(food_oatmeal_2063, trashcan_360)walk_executor(food_peanut_butter_2064)grab_executor(food_peanut_butter_2064)walk_executor(trashcan_360)putin_executor(food_peanut_butter_2064, trashcan_360)walk_executor(food_pizza_2065)grab_executor(food_pizza_2065)walk_executor(trashcan_360)putin_executor(food_pizza_2065, trashcan_360)walk_executor(food_potato_2066)grab_executor(food_potato_2066)walk_executor(trashcan_360)putin_executor(food_potato_2066, trashcan_360)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(trashcan_360)putin_executor(food_rice_2067, trashcan_360)walk_executor(food_salt_2068)grab_executor(food_salt_2068)walk_executor(trashcan_360)putin_executor(food_salt_2068, trashcan_360)walk_executor(food_snack_2069)grab_executor(food_snack_2069)walk_executor(trashcan_360)putin_executor(food_snack_2069, trashcan_360)walk_executor(food_sugar_2070)grab_executor(food_sugar_2070)walk_executor(trashcan_360)putin_executor(food_sugar_2070, trashcan_360)walk_executor(food_turkey_2071)grab_executor(food_turkey_2071)walk_executor(trashcan_360)putin_executor(food_turkey_2071, trashcan_360)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(trashcan_360)putin_executor(food_vegetable_2072, trashcan_360)walk_executor(sauce_2101)grab_executor(sauce_2101)walk_executor(trashcan_360)putin_executor(sauce_2101, trashcan_360)
##############################
From agent.py
grab_executor(food_steak_2042)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. Grabbing food_steak_2042 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: box_2023, needle_2012, drawing_388, Robot is close to the food_steak_2042. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. 
##############################
From agent.py
putin_executor(food_steak_2042, trashcan_360)
Robot find: Robot is close to the food_steak_2042. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. trashcan_360 is close food_steak_2042. food_steak_2042 is close trashcan_360. food_steak_2042 is inside trashcan_360. food_steak_2042 released by right hand. 
##############################
From agent.py
walk_executor(food_apple_2043)
Robot find: Robot is close to the food_apple_2043. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_apple_2043)
Robot find: Robot is close to the food_apple_2043. Robot is close to the fridge_140. Grabbing food_apple_2043 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_apple_2043. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the needle_2012. 
##############################
From agent.py
putin_executor(food_apple_2043, trashcan_360)
Robot find: Robot is close to the food_apple_2043. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the needle_2012. food_apple_2043 is inside trashcan_360. trashcan_360 is close food_apple_2043. food_apple_2043 is close trashcan_360. food_apple_2043 released by right hand. 
##############################
From agent.py
walk_executor(food_bacon_2044)
Robot find: Robot is close to the fridge_140. Robot is close to the food_bacon_2044. 
##############################
From agent.py
grab_executor(food_bacon_2044)
Robot find: Robot is close to the fridge_140. Robot is close to the food_bacon_2044. Grabbing food_bacon_2044 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_bacon_2044. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the needle_2012. 
##############################
From agent.py
putin_executor(food_bacon_2044, trashcan_360)
Robot find: Robot is close to the food_bacon_2044. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the needle_2012. food_bacon_2044 is close trashcan_360. trashcan_360 is close food_bacon_2044. food_bacon_2044 is inside trashcan_360. food_bacon_2044 released by right hand. 
##############################
From agent.py
walk_executor(food_banana_2045)
Robot find: Robot is close to the fridge_140. Robot is close to the food_banana_2045. 
##############################
From agent.py
grab_executor(food_banana_2045)
Robot find: Robot is close to the fridge_140. Robot is close to the food_banana_2045. Grabbing food_banana_2045 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_banana_2045. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_bacon_2044. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the needle_2012. 
##############################
From agent.py
putin_executor(food_banana_2045, trashcan_360)
Robot find: Robot is close to the food_banana_2045. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_bacon_2044. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the needle_2012. trashcan_360 is close food_banana_2045. food_banana_2045 is close trashcan_360. food_banana_2045 is inside trashcan_360. food_banana_2045 released by right hand. 
##############################
From agent.py
walk_executor(food_cake_2046)
Robot find: Robot is close to the fridge_140. Robot is close to the food_cake_2046. 
##############################
From agent.py
grab_executor(food_cake_2046)
Robot find: Robot is close to the fridge_140. Robot is close to the food_cake_2046. Grabbing food_cake_2046 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_cake_2046. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. 
##############################
From agent.py
putin_executor(food_cake_2046, trashcan_360)
Robot find: Robot is close to the food_cake_2046. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. food_cake_2046 is inside trashcan_360. trashcan_360 is close food_cake_2046. food_cake_2046 is close trashcan_360. food_cake_2046 released by right hand. 
##############################
From agent.py
walk_executor(food_carrot_2047)
Robot find: Robot is close to the fridge_140. Robot is close to the food_carrot_2047. 
##############################
From agent.py
grab_executor(food_carrot_2047)
Robot find: Robot is close to the fridge_140. Robot is close to the food_carrot_2047. Grabbing food_carrot_2047 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. 
##############################
From agent.py
putin_executor(food_carrot_2047, trashcan_360)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. trashcan_360 is close food_carrot_2047. food_carrot_2047 is inside trashcan_360. food_carrot_2047 is close trashcan_360. food_carrot_2047 released by right hand. 
##############################
From agent.py
walk_executor(food_cereal_2048)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_cereal_2048)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the fridge_140. Grabbing food_cereal_2048 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_cereal_2048, trashcan_360)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. trashcan_360 is close food_cereal_2048. food_cereal_2048 is close trashcan_360. food_cereal_2048 is inside trashcan_360. food_cereal_2048 released by right hand. 
##############################
From agent.py
walk_executor(food_cheese_2049)
Robot find: Robot is close to the food_cheese_2049. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_cheese_2049)
Robot find: Robot is close to the food_cheese_2049. Robot is close to the fridge_140. Grabbing food_cheese_2049 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_cheese_2049. Robot is close to the food_cereal_2048. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_cheese_2049, trashcan_360)
Robot find: Robot is close to the food_cheese_2049. Robot is close to the food_cereal_2048. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_cheese_2049 is close trashcan_360. food_cheese_2049 is inside trashcan_360. trashcan_360 is close food_cheese_2049. food_cheese_2049 released by right hand. 
##############################
From agent.py
walk_executor(food_chicken_2050)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_chicken_2050)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the fridge_140. Grabbing food_chicken_2050 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_chicken_2050, trashcan_360)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. trashcan_360 is close food_chicken_2050. food_chicken_2050 is close trashcan_360. food_chicken_2050 is inside trashcan_360. food_chicken_2050 released by right hand. 
##############################
From agent.py
walk_executor(food_dessert_2051)
Robot find: Robot is close to the food_dessert_2051. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_dessert_2051)
Robot find: Robot is close to the food_dessert_2051. Robot is close to the fridge_140. Grabbing food_dessert_2051 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_dessert_2051. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_dessert_2051, trashcan_360)
Robot find: Robot is close to the food_dessert_2051. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_dessert_2051 is inside trashcan_360. trashcan_360 is close food_dessert_2051. food_dessert_2051 is close trashcan_360. food_dessert_2051 released by right hand. 
##############################
From agent.py
walk_executor(food_donut_2052)
Robot find: Robot is close to the fridge_140. Robot is close to the food_donut_2052. 
##############################
From agent.py
grab_executor(food_donut_2052)
Robot find: Robot is close to the fridge_140. Robot is close to the food_donut_2052. Grabbing food_donut_2052 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_donut_2052. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_donut_2052, trashcan_360)
Robot find: Robot is close to the food_donut_2052. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. trashcan_360 is close food_donut_2052. food_donut_2052 is inside trashcan_360. food_donut_2052 is close trashcan_360. food_donut_2052 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the fridge_140. Robot is close to the food_egg_2053. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the fridge_140. Robot is close to the food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_egg_2053. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_egg_2053, trashcan_360)
Robot find: Robot is close to the food_egg_2053. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. trashcan_360 is close food_egg_2053. food_egg_2053 is close trashcan_360. food_egg_2053 is inside trashcan_360. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(food_fish_2054)
Robot find: Robot is close to the fridge_140. Robot is close to the food_fish_2054. 
##############################
From agent.py
grab_executor(food_fish_2054)
Robot find: Robot is close to the fridge_140. Robot is close to the food_fish_2054. Grabbing food_fish_2054 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_fish_2054. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_fish_2054, trashcan_360)
Robot find: Robot is close to the food_fish_2054. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_fish_2054 is inside trashcan_360. trashcan_360 is close food_fish_2054. food_fish_2054 is close trashcan_360. food_fish_2054 released by right hand. 
##############################
From agent.py
walk_executor(food_food_2055)
Robot find: Robot is close to the fridge_140. Robot is close to the food_food_2055. 
##############################
From agent.py
grab_executor(food_food_2055)
Robot find: Robot is close to the fridge_140. Robot is close to the food_food_2055. Grabbing food_food_2055 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_food_2055. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_food_2055, trashcan_360)
Robot find: Robot is close to the food_food_2055. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_food_2055 is close trashcan_360. trashcan_360 is close food_food_2055. food_food_2055 is inside trashcan_360. food_food_2055 released by right hand. 
##############################
From agent.py
walk_executor(food_fruit_2056)
Robot find: Robot is close to the food_fruit_2056. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_fruit_2056)
Robot find: Robot is close to the food_fruit_2056. Robot is close to the fridge_140. Grabbing food_fruit_2056 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_fruit_2056. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_fruit_2056, trashcan_360)
Robot find: Robot is close to the food_fruit_2056. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_fruit_2056 is close trashcan_360. trashcan_360 is close food_fruit_2056. food_fruit_2056 is inside trashcan_360. food_fruit_2056 released by right hand. 
##############################
From agent.py
walk_executor(food_hamburger_2057)
Robot find: Robot is close to the food_hamburger_2057. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_hamburger_2057)
Robot find: Robot is close to the food_hamburger_2057. Robot is close to the fridge_140. Grabbing food_hamburger_2057 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_hamburger_2057. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_hamburger_2057, trashcan_360)
Robot find: Robot is close to the food_hamburger_2057. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_hamburger_2057 is inside trashcan_360. trashcan_360 is close food_hamburger_2057. food_hamburger_2057 is close trashcan_360. food_hamburger_2057 released by right hand. 
##############################
From agent.py
walk_executor(food_ice_cream_2058)
Robot find: Robot is close to the food_ice_cream_2058. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_ice_cream_2058)
Robot find: Robot is close to the food_ice_cream_2058. Robot is close to the fridge_140. Grabbing food_ice_cream_2058 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_ice_cream_2058. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_ice_cream_2058, trashcan_360)
Robot find: Robot is close to the food_ice_cream_2058. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_ice_cream_2058 is close trashcan_360. trashcan_360 is close food_ice_cream_2058. food_ice_cream_2058 is inside trashcan_360. food_ice_cream_2058 released by right hand. 
##############################
From agent.py
walk_executor(food_jam_2059)
Robot find: Robot is close to the food_jam_2059. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_jam_2059)
Robot find: Robot is close to the food_jam_2059. Robot is close to the fridge_140. Grabbing food_jam_2059 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_jam_2059. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_jam_2059, trashcan_360)
Robot find: Robot is close to the food_jam_2059. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_jam_2059 is inside trashcan_360. trashcan_360 is close food_jam_2059. food_jam_2059 is close trashcan_360. food_jam_2059 released by right hand. 
##############################
From agent.py
walk_executor(food_kiwi_2060)
Robot find: Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. 
##############################
From agent.py
grab_executor(food_kiwi_2060)
Robot find: Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Grabbing food_kiwi_2060 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_kiwi_2060. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_kiwi_2060, trashcan_360)
Robot find: Robot is close to the food_kiwi_2060. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_kiwi_2060 is close trashcan_360. food_kiwi_2060 is inside trashcan_360. trashcan_360 is close food_kiwi_2060. food_kiwi_2060 released by right hand. 
##############################
From agent.py
walk_executor(food_lemon_2061)
Robot find: Robot is close to the fridge_140. Robot is close to the food_lemon_2061. 
##############################
From agent.py
grab_executor(food_lemon_2061)
Robot find: Robot is close to the fridge_140. Robot is close to the food_lemon_2061. Grabbing food_lemon_2061 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_lemon_2061. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_lemon_2061, trashcan_360)
Robot find: Robot is close to the food_lemon_2061. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_lemon_2061 is close trashcan_360. trashcan_360 is close food_lemon_2061. food_lemon_2061 is inside trashcan_360. food_lemon_2061 released by right hand. 
##############################
From agent.py
walk_executor(food_noodles_2062)
Robot find: Robot is close to the fridge_140. Robot is close to the food_noodles_2062. 
##############################
From agent.py
grab_executor(food_noodles_2062)
Robot find: Robot is close to the fridge_140. Robot is close to the food_noodles_2062. Grabbing food_noodles_2062 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_noodles_2062. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_noodles_2062, trashcan_360)
Robot find: Robot is close to the food_noodles_2062. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_noodles_2062 is inside trashcan_360. trashcan_360 is close food_noodles_2062. food_noodles_2062 is close trashcan_360. food_noodles_2062 released by right hand. 
##############################
From agent.py
walk_executor(food_oatmeal_2063)
Robot find: Robot is close to the fridge_140. Robot is close to the food_oatmeal_2063. 
##############################
From agent.py
grab_executor(food_oatmeal_2063)
Robot find: Robot is close to the fridge_140. Robot is close to the food_oatmeal_2063. Grabbing food_oatmeal_2063 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_oatmeal_2063. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_oatmeal_2063, trashcan_360)
Robot find: Robot is close to the food_oatmeal_2063. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_oatmeal_2063 is close trashcan_360. trashcan_360 is close food_oatmeal_2063. food_oatmeal_2063 is inside trashcan_360. food_oatmeal_2063 released by right hand. 
##############################
From agent.py
walk_executor(food_peanut_butter_2064)
Robot find: Robot is close to the food_peanut_butter_2064. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_peanut_butter_2064)
Robot find: Robot is close to the food_peanut_butter_2064. Robot is close to the fridge_140. Grabbing food_peanut_butter_2064 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_peanut_butter_2064. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_peanut_butter_2064, trashcan_360)
Robot find: Robot is close to the food_peanut_butter_2064. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_peanut_butter_2064 is close trashcan_360. trashcan_360 is close food_peanut_butter_2064. food_peanut_butter_2064 is inside trashcan_360. food_peanut_butter_2064 released by right hand. 
##############################
From agent.py
walk_executor(food_pizza_2065)
Robot find: Robot is close to the food_pizza_2065. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_pizza_2065)
Robot find: Robot is close to the food_pizza_2065. Robot is close to the fridge_140. Grabbing food_pizza_2065 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_pizza_2065. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_pizza_2065, trashcan_360)
Robot find: Robot is close to the food_pizza_2065. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_pizza_2065 is inside trashcan_360. trashcan_360 is close food_pizza_2065. food_pizza_2065 is close trashcan_360. food_pizza_2065 released by right hand. 
##############################
From agent.py
walk_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_potato_2066)
Robot find: Robot is close to the food_potato_2066. Robot is close to the fridge_140. Grabbing food_potato_2066 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_potato_2066. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_potato_2066, trashcan_360)
Robot find: Robot is close to the food_potato_2066. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. trashcan_360 is close food_potato_2066. food_potato_2066 is inside trashcan_360. food_potato_2066 is close trashcan_360. food_potato_2066 released by right hand. 
##############################
From agent.py
walk_executor(food_rice_2067)
Robot find: Robot is close to the food_rice_2067. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_rice_2067)
Robot find: Robot is close to the food_rice_2067. Robot is close to the fridge_140. Grabbing food_rice_2067 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_rice_2067. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_rice_2067, trashcan_360)
Robot find: Robot is close to the food_rice_2067. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_rice_2067 is inside trashcan_360. trashcan_360 is close food_rice_2067. food_rice_2067 is close trashcan_360. food_rice_2067 released by right hand. 
##############################
From agent.py
walk_executor(food_salt_2068)
Robot find: Robot is close to the fridge_140. Robot is close to the food_salt_2068. 
##############################
From agent.py
grab_executor(food_salt_2068)
Robot find: Robot is close to the fridge_140. Robot is close to the food_salt_2068. Grabbing food_salt_2068 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_salt_2068. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_salt_2068, trashcan_360)
Robot find: Robot is close to the food_salt_2068. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_salt_2068 is inside trashcan_360. trashcan_360 is close food_salt_2068. food_salt_2068 is close trashcan_360. food_salt_2068 released by right hand. 
##############################
From agent.py
walk_executor(food_snack_2069)
Robot find: Robot is close to the fridge_140. Robot is close to the food_snack_2069. 
##############################
From agent.py
grab_executor(food_snack_2069)
Robot find: Robot is close to the fridge_140. Robot is close to the food_snack_2069. Grabbing food_snack_2069 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_snack_2069. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_snack_2069, trashcan_360)
Robot find: Robot is close to the food_snack_2069. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_snack_2069 is close trashcan_360. trashcan_360 is close food_snack_2069. food_snack_2069 is inside trashcan_360. food_snack_2069 released by right hand. 
##############################
From agent.py
walk_executor(food_sugar_2070)
Robot find: Robot is close to the fridge_140. Robot is close to the food_sugar_2070. 
##############################
From agent.py
grab_executor(food_sugar_2070)
Robot find: Robot is close to the fridge_140. Robot is close to the food_sugar_2070. Grabbing food_sugar_2070 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_sugar_2070. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_sugar_2070, trashcan_360)
Robot find: Robot is close to the food_sugar_2070. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_sugar_2070 is inside trashcan_360. trashcan_360 is close food_sugar_2070. food_sugar_2070 is close trashcan_360. food_sugar_2070 released by right hand. 
##############################
From agent.py
walk_executor(food_turkey_2071)
Robot find: Robot is close to the fridge_140. Robot is close to the food_turkey_2071. 
##############################
From agent.py
grab_executor(food_turkey_2071)
Robot find: Robot is close to the fridge_140. Robot is close to the food_turkey_2071. Grabbing food_turkey_2071 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_turkey_2071. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_turkey_2071, trashcan_360)
Robot find: Robot is close to the food_turkey_2071. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. trashcan_360 is close food_turkey_2071. food_turkey_2071 is inside trashcan_360. food_turkey_2071 is close trashcan_360. food_turkey_2071 released by right hand. 
##############################
From agent.py
walk_executor(food_vegetable_2072)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_vegetable_2072)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the fridge_140. Grabbing food_vegetable_2072 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_vegetable_2072, trashcan_360)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_vegetable_2072 is close trashcan_360. trashcan_360 is close food_vegetable_2072. food_vegetable_2072 is inside trashcan_360. food_vegetable_2072 released by right hand. 
##############################
From agent.py
walk_executor(sauce_2101)
Robot find: Robot is close to the fridge_140. Robot is close to the sauce_2101. 
##############################
From agent.py
grab_executor(sauce_2101)
Robot find: Robot is close to the fridge_140. Robot is close to the sauce_2101. Grabbing sauce_2101 by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: Robot is close to the sauce_2101. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(sauce_2101, trashcan_360)
Robot find: Robot is close to the sauce_2101. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the needle_2012. Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. sauce_2101 is close trashcan_360. trashcan_360 is close sauce_2101. sauce_2101 is inside trashcan_360. sauce_2101 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Throw all the items in the fridge to the trashcan.
Action History:
['walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'grab_executor(food_steak_2042)', 'walk_executor(trashcan_360)', 'putin_executor(food_steak_2042, trashcan_360)', 'walk_executor(food_apple_2043)', 'grab_executor(food_apple_2043)', 'walk_executor(trashcan_360)', 'putin_executor(food_apple_2043, trashcan_360)', 'walk_executor(food_bacon_2044)', 'grab_executor(food_bacon_2044)', 'walk_executor(trashcan_360)', 'putin_executor(food_bacon_2044, trashcan_360)', 'walk_executor(food_banana_2045)', 'grab_executor(food_banana_2045)', 'walk_executor(trashcan_360)', 'putin_executor(food_banana_2045, trashcan_360)', 'walk_executor(food_cake_2046)', 'grab_executor(food_cake_2046)', 'walk_executor(trashcan_360)', 'putin_executor(food_cake_2046, trashcan_360)', 'walk_executor(food_carrot_2047)', 'grab_executor(food_carrot_2047)', 'walk_executor(trashcan_360)', 'putin_executor(food_carrot_2047, trashcan_360)', 'walk_executor(food_cereal_2048)', 'grab_executor(food_cereal_2048)', 'walk_executor(trashcan_360)', 'putin_executor(food_cereal_2048, trashcan_360)', 'walk_executor(food_cheese_2049)', 'grab_executor(food_cheese_2049)', 'walk_executor(trashcan_360)', 'putin_executor(food_cheese_2049, trashcan_360)', 'walk_executor(food_chicken_2050)', 'grab_executor(food_chicken_2050)', 'walk_executor(trashcan_360)', 'putin_executor(food_chicken_2050, trashcan_360)', 'walk_executor(food_dessert_2051)', 'grab_executor(food_dessert_2051)', 'walk_executor(trashcan_360)', 'putin_executor(food_dessert_2051, trashcan_360)', 'walk_executor(food_donut_2052)', 'grab_executor(food_donut_2052)', 'walk_executor(trashcan_360)', 'putin_executor(food_donut_2052, trashcan_360)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(trashcan_360)', 'putin_executor(food_egg_2053, trashcan_360)', 'walk_executor(food_fish_2054)', 'grab_executor(food_fish_2054)', 'walk_executor(trashcan_360)', 'putin_executor(food_fish_2054, trashcan_360)', 'walk_executor(food_food_2055)', 'grab_executor(food_food_2055)', 'walk_executor(trashcan_360)', 'putin_executor(food_food_2055, trashcan_360)', 'walk_executor(food_fruit_2056)', 'grab_executor(food_fruit_2056)', 'walk_executor(trashcan_360)', 'putin_executor(food_fruit_2056, trashcan_360)', 'walk_executor(food_hamburger_2057)', 'grab_executor(food_hamburger_2057)', 'walk_executor(trashcan_360)', 'putin_executor(food_hamburger_2057, trashcan_360)', 'walk_executor(food_ice_cream_2058)', 'grab_executor(food_ice_cream_2058)', 'walk_executor(trashcan_360)', 'putin_executor(food_ice_cream_2058, trashcan_360)', 'walk_executor(food_jam_2059)', 'grab_executor(food_jam_2059)', 'walk_executor(trashcan_360)', 'putin_executor(food_jam_2059, trashcan_360)', 'walk_executor(food_kiwi_2060)', 'grab_executor(food_kiwi_2060)', 'walk_executor(trashcan_360)', 'putin_executor(food_kiwi_2060, trashcan_360)', 'walk_executor(food_lemon_2061)', 'grab_executor(food_lemon_2061)', 'walk_executor(trashcan_360)', 'putin_executor(food_lemon_2061, trashcan_360)', 'walk_executor(food_noodles_2062)', 'grab_executor(food_noodles_2062)', 'walk_executor(trashcan_360)', 'putin_executor(food_noodles_2062, trashcan_360)', 'walk_executor(food_oatmeal_2063)', 'grab_executor(food_oatmeal_2063)', 'walk_executor(trashcan_360)', 'putin_executor(food_oatmeal_2063, trashcan_360)', 'walk_executor(food_peanut_butter_2064)', 'grab_executor(food_peanut_butter_2064)', 'walk_executor(trashcan_360)', 'putin_executor(food_peanut_butter_2064, trashcan_360)', 'walk_executor(food_pizza_2065)', 'grab_executor(food_pizza_2065)', 'walk_executor(trashcan_360)', 'putin_executor(food_pizza_2065, trashcan_360)', 'walk_executor(food_potato_2066)', 'grab_executor(food_potato_2066)', 'walk_executor(trashcan_360)', 'putin_executor(food_potato_2066, trashcan_360)', 'walk_executor(food_rice_2067)', 'grab_executor(food_rice_2067)', 'walk_executor(trashcan_360)', 'putin_executor(food_rice_2067, trashcan_360)', 'walk_executor(food_salt_2068)', 'grab_executor(food_salt_2068)', 'walk_executor(trashcan_360)', 'putin_executor(food_salt_2068, trashcan_360)', 'walk_executor(food_snack_2069)', 'grab_executor(food_snack_2069)', 'walk_executor(trashcan_360)', 'putin_executor(food_snack_2069, trashcan_360)', 'walk_executor(food_sugar_2070)', 'grab_executor(food_sugar_2070)', 'walk_executor(trashcan_360)', 'putin_executor(food_sugar_2070, trashcan_360)', 'walk_executor(food_turkey_2071)', 'grab_executor(food_turkey_2071)', 'walk_executor(trashcan_360)', 'putin_executor(food_turkey_2071, trashcan_360)', 'walk_executor(food_vegetable_2072)', 'grab_executor(food_vegetable_2072)', 'walk_executor(trashcan_360)', 'putin_executor(food_vegetable_2072, trashcan_360)', 'walk_executor(sauce_2101)', 'grab_executor(sauce_2101)', 'walk_executor(trashcan_360)', 'putin_executor(sauce_2101, trashcan_360)']
Time info:
Time consume: 650 seconds
Exp_helper query times: 0
Guidance query times: 1
library scale: 144
goal generate times: 6
goal correct times: 2
action_num: 130

Task complete rate:
1
Scene_id: 2
##############################
