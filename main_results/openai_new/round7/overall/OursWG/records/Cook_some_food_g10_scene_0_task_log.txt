From agent.py
Reset goals: The sub-goals are: 
['1. Find and wash the chicken and the noodles.', '2. Boil the chicken and the noodles together.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2017_around_fridge_289(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_food_noodles_2029_around_fridge_289(food_noodles:item):
    goal: not unknown(food_noodles)
    body:
        assert is_food_noodles(food_noodles)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_noodles,fridge_instance)
        else:
            exp(food_noodles,fridge_instance)
    eff:
        unknown[food_noodles]=False
        close[food_noodles,fridge_instance]=True
        close[fridge_instance,food_noodles]=True
    

#exp_behavior_end

#goal_representation
behavior find_and_wash_ingredients(chicken:item, noodles:item, sink:item):
    body:
        wash(chicken)
        wash(noodles)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken

        bind noodles: item where:
            is_food_noodles(noodles)
        # Select the noodles

        bind sink: item where:
            is_sink(sink)
        # Select the sink

        find_and_wash_ingredients(chicken, noodles, sink)
        # Find and wash the chicken and noodles in the sink
#goal_representation_end

##############################
From agent.py->reset_goal
behavior find_and_wash_ingredients(chicken:item, noodles:item, sink:item):
    body:
        wash(chicken)
        wash(noodles)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken

        bind noodles: item where:
            is_food_noodles(noodles)
        # Select the noodles

        bind sink: item where:
            is_sink(sink)
        # Select the sink

        find_and_wash_ingredients(chicken, noodles, sink)
        # Find and wash the chicken and noodles in the sink
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_chicken_2017, fridge_289)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(food_chicken_2017)switchoff_executor(faucet_43)walk_executor(fridge_289)exp(food_noodles_2029, fridge_289)walk_executor(food_noodles_2029)grab_executor(food_noodles_2029)walk_executor(kitchen_counter_230)put_executor(food_chicken_2017, kitchen_counter_230)switchon_executor(faucet_232)wash_executor(food_noodles_2029)switchoff_executor(faucet_232)
##############################
From agent.py
walk_executor(fridge_289)
Robot find: drawing_240, drawing_239, Robot is close to the fridge_289. 
##############################
From agent.py
switchoff_executor(fridge_289)
Robot find: Robot is close to the fridge_289. fridge_289 is turned off. 
##############################
From agent.py
open_executor(fridge_289)
Robot find: sauce_2078, food_steak_2008, food_apple_2009, food_bacon_2010, food_banana_2011, food_bread_2012, food_cake_2013, food_carrot_2014, food_cereal_2015, food_cheese_2016, food_chicken_2017, food_dessert_2018, food_donut_2019, food_egg_2020, food_fish_2021, food_food_2022, food_fruit_2023, food_hamburger_2024, food_ice_cream_2025, food_jam_2026, food_kiwi_2027, food_lemon_2028, food_noodles_2029, food_oatmeal_2030, food_orange_2031, food_onion_2032, food_peanut_butter_2033, food_pizza_2034, food_potato_2035, food_rice_2036, food_salt_2037, food_snack_2038, food_sugar_2039, food_turkey_2040, food_vegetable_2041, dry_pasta_2042, milk_2043, Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. fridge_289 is opened. 
##############################
From agent.py
exp(food_chicken_2017, fridge_289)
Find food_chicken_2017. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_chicken_2017)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(food_chicken_2017)switchoff_executor(faucet_43)walk_executor(food_noodles_2029)grab_executor(food_noodles_2029)walk_executor(kitchen_counter_230)put_executor(food_chicken_2017, kitchen_counter_230)switchon_executor(faucet_232)wash_executor(food_noodles_2029)switchoff_executor(faucet_232)
##############################
From agent.py
grab_executor(food_chicken_2017)
Robot find: Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. Grabbing food_chicken_2017 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: towel_rack_31, towel_rack_32, towel_rack_34, Robot is close to the food_chicken_2017. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the food_chicken_2017. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
wash_executor(food_chicken_2017)
Robot find: Robot is close to the food_chicken_2017. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the food_chicken_2017. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py
walk_executor(food_noodles_2029)
Robot find: Robot is close to the food_chicken_2017. Robot is close to the fridge_289. Robot is close to the food_noodles_2029. 
##############################
From agent.py
grab_executor(food_noodles_2029)
Robot find: Robot is close to the food_chicken_2017. Robot is close to the fridge_289. Robot is close to the food_noodles_2029. Grabbing food_noodles_2029 by left hand. 
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: drawing_238, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the food_chicken_2017. Robot is close to the food_noodles_2029. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
put_executor(food_chicken_2017, kitchen_counter_230)
Robot find: Robot is close to the food_chicken_2017. Robot is close to the food_noodles_2029. Robot is close to the kitchen_counter_230. kitchen_counter_230 is close food_chicken_2017. food_chicken_2017 is close kitchen_counter_230. food_chicken_2017 is on kitchen_counter_230. food_chicken_2017 released by right hand. 
##############################
From agent.py
switchon_executor(faucet_232)
Robot find: Robot is close to the food_chicken_2017. Robot is close to the food_noodles_2029. Robot is close to the kitchen_counter_230. faucet_232 is turned on. 
##############################
From agent.py
wash_executor(food_noodles_2029)
Robot find: Robot is close to the food_chicken_2017. Robot is close to the food_noodles_2029. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
switchoff_executor(faucet_232)
Robot find: Robot is close to the food_chicken_2017. Robot is close to the food_noodles_2029. Robot is close to the kitchen_counter_230. faucet_232 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_103_around_table_107(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==107
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(chair,table_instance)
        else:
            exp(chair,table_instance)
    eff:
        unknown[chair]=False
        close[chair,table_instance]=True
        close[table_instance,chair]=True
    

behavior find_bowl_2071_around_dishwasher_1001(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==1001
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(bowl,dishwasher_instance)
        else:
            exp(bowl,dishwasher_instance)
    eff:
        unknown[bowl]=False
        close[bowl,dishwasher_instance]=True
        close[dishwasher_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior boil_chicken_noodles(chicken:item, noodles:item, pot:item, stove:item):
    body:
        achieve has_water(pot)
        achieve_once inside(chicken, pot)
        achieve_once inside(noodles, pot)
        achieve_once on(pot, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken

        bind noodles: item where:
            is_food_noodles(noodles)
        # Select the noodles

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        boil_chicken_noodles(chicken, noodles, pot, stove)
        # Boil the chicken and noodles together in the pot on the stove

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior boil_chicken_noodles(chicken:item, noodles:item, pot:item, stove:item):
    body:
        achieve has_water(pot)
        achieve_once inside(chicken, pot)
        achieve_once inside(noodles, pot)
        achieve_once on(pot, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken

        bind noodles: item where:
            is_food_noodles(noodles)
        # Select the noodles

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        boil_chicken_noodles(chicken, noodles, pot, stove)
        # Boil the chicken and noodles together in the pot on the stove

##############################
From agent.py-> find a plan in act()
walk_executor(pot_2069)open_executor(pot_2069)grab_executor(pot_2069)walk_executor(faucet_232)walk_executor(kitchen_counter_230)put_executor(pot_2069, kitchen_counter_230)switchon_executor(faucet_232)switchoff_executor(faucet_232)grab_executor(food_chicken_2017)walk_executor(pot_2069)putin_executor(food_chicken_2017, pot_2069)putin_executor(food_noodles_2029, pot_2069)grab_executor(pot_2069)walk_executor(stove_2065)put_executor(pot_2069, stove_2065)switchon_executor(stove_2065)
##############################
From agent.py
walk_executor(pot_2069)
Robot find: Robot is close to the food_noodles_2029. Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. 
##############################
From agent.py
open_executor(pot_2069)
Robot find: Robot is close to the food_noodles_2029. Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. pot_2069 is opened. 
##############################
From agent.py
grab_executor(pot_2069)
Robot find: Robot is close to the food_noodles_2029. Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. Grabbing pot_2069 by right hand. 
##############################
From agent.py
walk_executor(faucet_232)
Robot find: Robot is close to the food_noodles_2029. Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. Robot is close to the faucet_232. 
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: Robot is close to the food_noodles_2029. Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. 
##############################
From agent.py
put_executor(pot_2069, kitchen_counter_230)
Robot find: Robot is close to the food_noodles_2029. Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. pot_2069 is close kitchen_counter_230. pot_2069 is on kitchen_counter_230. pot_2069 released by right hand. 
##############################
From agent.py
switchon_executor(faucet_232)
Robot find: Robot is close to the food_noodles_2029. Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. faucet_232 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_232)
Robot find: Robot is close to the food_noodles_2029. Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. faucet_232 is turned off. 
##############################
From agent.py
grab_executor(food_chicken_2017)
Robot find: Robot is close to the food_noodles_2029. Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. Robot is close to the food_chicken_2017. Grabbing food_chicken_2017 by right hand. 
##############################
From agent.py
walk_executor(pot_2069)
Robot find: Robot is close to the food_noodles_2029. Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. Robot is close to the food_chicken_2017. 
##############################
From agent.py
putin_executor(food_chicken_2017, pot_2069)
Robot find: Robot is close to the food_noodles_2029. Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. Robot is close to the food_chicken_2017. pot_2069 is close food_chicken_2017. food_chicken_2017 is inside pot_2069. food_chicken_2017 is close pot_2069. food_chicken_2017 released by right hand. 
##############################
From agent.py
putin_executor(food_noodles_2029, pot_2069)
Robot find: Robot is close to the food_noodles_2029. Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. Robot is close to the food_chicken_2017. food_noodles_2029 is close pot_2069. pot_2069 is close food_noodles_2029. food_noodles_2029 is inside pot_2069. food_noodles_2029 released by left hand. 
##############################
From agent.py
grab_executor(pot_2069)
Robot find: Robot is close to the food_noodles_2029. Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. Robot is close to the food_chicken_2017. Grabbing pot_2069 by right hand. 
##############################
From agent.py
walk_executor(stove_2065)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. Robot is close to the stove_2065. 
##############################
From agent.py
put_executor(pot_2069, stove_2065)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. Robot is close to the stove_2065. pot_2069 is close stove_2065. pot_2069 is on stove_2065. stove_2065 is close pot_2069. pot_2069 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2065)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. Robot is close to the stove_2065. stove_2065 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Boil some noodles with chicken.
Action History:
['walk_executor(fridge_289)', 'switchoff_executor(fridge_289)', 'open_executor(fridge_289)', 'grab_executor(food_chicken_2017)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'wash_executor(food_chicken_2017)', 'switchoff_executor(faucet_43)', 'walk_executor(food_noodles_2029)', 'grab_executor(food_noodles_2029)', 'walk_executor(kitchen_counter_230)', 'put_executor(food_chicken_2017, kitchen_counter_230)', 'switchon_executor(faucet_232)', 'wash_executor(food_noodles_2029)', 'switchoff_executor(faucet_232)', 'walk_executor(pot_2069)', 'open_executor(pot_2069)', 'grab_executor(pot_2069)', 'walk_executor(faucet_232)', 'walk_executor(kitchen_counter_230)', 'put_executor(pot_2069, kitchen_counter_230)', 'switchon_executor(faucet_232)', 'switchoff_executor(faucet_232)', 'grab_executor(food_chicken_2017)', 'walk_executor(pot_2069)', 'putin_executor(food_chicken_2017, pot_2069)', 'putin_executor(food_noodles_2029, pot_2069)', 'grab_executor(pot_2069)', 'walk_executor(stove_2065)', 'put_executor(pot_2069, stove_2065)', 'switchon_executor(stove_2065)']
Time info:
Time consume: 85 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 136
goal generate times: 2
goal correct times: 0
action_num: 31

Task complete rate:
Keystate: k1 - Requires: 20 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
