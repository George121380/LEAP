From agent.py
Reset goals: The sub-goals are: 
['1. Clean the noodles and chicken.', '2. Boil the noodles and chicken together until fully cooked.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2089_around_kitchen_counter_119(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_chicken,kitchen_counter_instance)
        else:
            exp(food_chicken,kitchen_counter_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_chicken]=True
    

behavior find_food_noodles_2101_around_kitchen_counter_119(food_noodles:item):
    goal: not unknown(food_noodles)
    body:
        assert is_food_noodles(food_noodles)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_noodles,kitchen_counter_instance)
        else:
            exp(food_noodles,kitchen_counter_instance)
    eff:
        unknown[food_noodles]=False
        close[food_noodles,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_noodles]=True
    

#exp_behavior_end

#goal_representation
 
behavior clean_item(item:item, water_source:item):
    body:
        achieve_once inside(item, water_source) # Place the item in the water source for cleaning
        wash(item) # Wash the item

behavior __goal__():
    body:
        bind noodles: item where:
            is_food_noodles(noodles)
        # Select the noodles

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken

        bind sink: item where:
            is_sink(sink)
        # Select a sink

        clean_item(noodles, sink)
        clean_item(chicken, sink)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior clean_item(item:item, water_source:item):
    body:
        achieve_once inside(item, water_source) # Place the item in the water source for cleaning
        wash(item) # Wash the item

behavior __goal__():
    body:
        bind noodles: item where:
            is_food_noodles(noodles)
        # Select the noodles

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken

        bind sink: item where:
            is_sink(sink)
        # Select a sink

        clean_item(noodles, sink)
        clean_item(chicken, sink)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(food_noodles_2101, kitchen_counter_119)walk_executor(food_noodles_2101)grab_executor(food_noodles_2101)walk_executor(sink_19)putin_executor(food_noodles_2101, sink_19)walk_executor(food_noodles_2101)grab_executor(food_noodles_2101)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_noodles_2101)switchoff_executor(faucet_20)walk_executor(kitchen_counter_119)exp(food_chicken_2089, kitchen_counter_119)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(sink_19)putin_executor(food_chicken_2089, sink_19)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(kitchen_counter_119)put_executor(food_noodles_2101, kitchen_counter_119)switchon_executor(faucet_121)wash_executor(food_chicken_2089)switchoff_executor(faucet_121)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_78, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(food_noodles_2101, kitchen_counter_119)
Fail to find food_noodles_2101 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(food_noodles_2101, cupboard_117)walk_executor(food_noodles_2101)grab_executor(food_noodles_2101)walk_executor(sink_19)putin_executor(food_noodles_2101, sink_19)walk_executor(food_noodles_2101)grab_executor(food_noodles_2101)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_noodles_2101)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_chicken_2089, fridge_126)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(sink_19)putin_executor(food_chicken_2089, sink_19)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(kitchen_counter_119)put_executor(food_noodles_2101, kitchen_counter_119)switchon_executor(faucet_121)wash_executor(food_chicken_2089)switchoff_executor(faucet_121)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(food_noodles_2101, cupboard_117)
Fail to find food_noodles_2101 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(food_noodles_2101, cupboard_118)walk_executor(food_noodles_2101)grab_executor(food_noodles_2101)walk_executor(sink_19)putin_executor(food_noodles_2101, sink_19)walk_executor(food_noodles_2101)grab_executor(food_noodles_2101)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_noodles_2101)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_chicken_2089, fridge_126)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(sink_19)putin_executor(food_chicken_2089, sink_19)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(kitchen_counter_119)put_executor(food_noodles_2101, kitchen_counter_119)switchon_executor(faucet_121)wash_executor(food_chicken_2089)switchoff_executor(faucet_121)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(food_noodles_2101, cupboard_118)
Fail to find food_noodles_2101 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_noodles_2101, fridge_126)walk_executor(food_noodles_2101)grab_executor(food_noodles_2101)walk_executor(sink_19)putin_executor(food_noodles_2101, sink_19)walk_executor(food_noodles_2101)grab_executor(food_noodles_2101)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_noodles_2101)switchoff_executor(faucet_20)walk_executor(fridge_126)exp(food_chicken_2089, fridge_126)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(sink_19)putin_executor(food_chicken_2089, sink_19)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(kitchen_counter_119)put_executor(food_noodles_2101, kitchen_counter_119)switchon_executor(faucet_121)wash_executor(food_chicken_2089)switchoff_executor(faucet_121)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_noodles_2101, fridge_126)
Find food_noodles_2101. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_noodles_2101)walk_executor(sink_19)putin_executor(food_noodles_2101, sink_19)walk_executor(food_noodles_2101)grab_executor(food_noodles_2101)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_noodles_2101)switchoff_executor(faucet_20)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(sink_19)putin_executor(food_chicken_2089, sink_19)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(kitchen_counter_119)put_executor(food_noodles_2101, kitchen_counter_119)switchon_executor(faucet_121)wash_executor(food_chicken_2089)switchoff_executor(faucet_121)
##############################
From agent.py
grab_executor(food_noodles_2101)
Robot find: Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. Grabbing food_noodles_2101 by right hand. 
##############################
From agent.py
walk_executor(sink_19)
Robot find: after_shave_2063, soap_2125, detergent_2155, mat_32, phone_2029, cleaning_solution_2143, drawing_33, Robot is close to the food_noodles_2101. Robot is close to the bathroom_counter_18. Robot is close to the sink_19. 
##############################
From agent.py
putin_executor(food_noodles_2101, sink_19)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the bathroom_counter_18. Robot is close to the sink_19. food_noodles_2101 is close sink_19. sink_19 is close food_noodles_2101. food_noodles_2101 is inside sink_19. food_noodles_2101 released by right hand. 
##############################
From agent.py
walk_executor(food_noodles_2101)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the sink_19. 
##############################
From agent.py
grab_executor(food_noodles_2101)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the sink_19. Grabbing food_noodles_2101 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchon_executor(faucet_20)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned on. 
##############################
From agent.py
wash_executor(food_noodles_2101)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned off. 
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the food_chicken_2089. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_chicken_2089)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the food_chicken_2089. Robot is close to the fridge_126. Grabbing food_chicken_2089 by left hand. 
##############################
From agent.py
walk_executor(sink_19)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the food_chicken_2089. Robot is close to the bathroom_counter_18. Robot is close to the sink_19. 
##############################
From agent.py
putin_executor(food_chicken_2089, sink_19)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the food_chicken_2089. Robot is close to the bathroom_counter_18. Robot is close to the sink_19. food_chicken_2089 is inside sink_19. sink_19 is close food_chicken_2089. food_chicken_2089 is close sink_19. food_chicken_2089 released by left hand. 
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the food_chicken_2089. Robot is close to the sink_19. 
##############################
From agent.py
grab_executor(food_chicken_2089)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the food_chicken_2089. Robot is close to the sink_19. Grabbing food_chicken_2089 by left hand. 
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the food_chicken_2089. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_noodles_2101, kitchen_counter_119)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the food_chicken_2089. Robot is close to the kitchen_counter_119. food_noodles_2101 is close kitchen_counter_119. kitchen_counter_119 is close food_noodles_2101. food_noodles_2101 is on kitchen_counter_119. food_noodles_2101 released by right hand. 
##############################
From agent.py
switchon_executor(faucet_121)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the food_chicken_2089. Robot is close to the kitchen_counter_119. faucet_121 is turned on. 
##############################
From agent.py
wash_executor(food_chicken_2089)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the food_chicken_2089. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
switchoff_executor(faucet_121)
Robot find: Robot is close to the food_noodles_2101. Robot is close to the food_chicken_2089. Robot is close to the kitchen_counter_119. faucet_121 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_2040_around_stove_2135(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2135
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(pot,stove_instance)
        else:
            exp(pot,stove_instance)
    eff:
        unknown[pot]=False
        close[pot,stove_instance]=True
        close[stove_instance,pot]=True
    

behavior find_stamp_2022_around_bowl_2141(stamp:item):
    goal: not unknown(stamp)
    body:
        assert is_stamp(stamp)
        bind bowl_instance:item where:
            is_bowl(bowl_instance) and id[bowl_instance]==2141
        achieve close_char(char,bowl_instance)
        if can_open(bowl_instance):
            achieve_once open(bowl_instance)
            exp(stamp,bowl_instance)
        else:
            exp(stamp,bowl_instance)
    eff:
        unknown[stamp]=False
        close[stamp,bowl_instance]=True
        close[bowl_instance,stamp]=True
    

behavior find_fryingpan_2154_around_stove_2135(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2135
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

#exp_behavior_end

#goal_representation
behavior boil_noodles_and_chicken(noodles:item, chicken:item, pot:item, stove:item):
    body:
        achieve has_water(pot)
        achieve_once inside(noodles, pot)
        achieve_once inside(chicken, pot)
        achieve_once on(pot, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind noodles: item where:
            is_food_noodles(noodles)
        # Select the noodles

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        boil_noodles_and_chicken(noodles, chicken, pot, stove)
        # Boil the noodles and chicken together in the pot on the stove
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior boil_noodles_and_chicken(noodles:item, chicken:item, pot:item, stove:item):
    body:
        achieve has_water(pot)
        achieve_once inside(noodles, pot)
        achieve_once inside(chicken, pot)
        achieve_once on(pot, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind noodles: item where:
            is_food_noodles(noodles)
        # Select the noodles

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        boil_noodles_and_chicken(noodles, chicken, pot, stove)
        # Boil the noodles and chicken together in the pot on the stove
##############################
From agent.py-> find a plan in act()
walk_executor(pot_78)grab_executor(pot_78)walk_executor(faucet_121)walk_executor(kitchen_counter_119)put_executor(pot_78, kitchen_counter_119)switchon_executor(faucet_121)switchoff_executor(faucet_121)grab_executor(food_noodles_2101)walk_executor(pot_78)putin_executor(food_noodles_2101, pot_78)putin_executor(food_chicken_2089, pot_78)grab_executor(pot_78)walk_executor(stove_2135)put_executor(pot_78, stove_2135)switchon_executor(stove_2135)
##############################
From agent.py
walk_executor(pot_78)
Robot find: food_food_2064, Robot is close to the food_chicken_2089. Robot is close to the pot_78. Robot is close to the oven_127. 
##############################
From agent.py
grab_executor(pot_78)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the pot_78. Robot is close to the oven_127. Grabbing pot_78 by right hand. 
##############################
From agent.py
walk_executor(faucet_121)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the pot_78. Robot is close to the faucet_121. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the pot_78. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(pot_78, kitchen_counter_119)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the pot_78. Robot is close to the kitchen_counter_119. pot_78 is close kitchen_counter_119. pot_78 is on kitchen_counter_119. pot_78 released by right hand. 
##############################
From agent.py
switchon_executor(faucet_121)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the pot_78. Robot is close to the kitchen_counter_119. faucet_121 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_121)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the pot_78. Robot is close to the kitchen_counter_119. faucet_121 is turned off. 
##############################
From agent.py
grab_executor(food_noodles_2101)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the pot_78. Robot is close to the kitchen_counter_119. Robot is close to the food_noodles_2101. Grabbing food_noodles_2101 by right hand. 
##############################
From agent.py
walk_executor(pot_78)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the pot_78. Robot is close to the kitchen_counter_119. Robot is close to the food_noodles_2101. 
##############################
From agent.py
putin_executor(food_noodles_2101, pot_78)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the pot_78. Robot is close to the kitchen_counter_119. Robot is close to the food_noodles_2101. food_noodles_2101 is close pot_78. pot_78 is close food_noodles_2101. food_noodles_2101 is inside pot_78. food_noodles_2101 released by right hand. 
##############################
From agent.py
putin_executor(food_chicken_2089, pot_78)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the pot_78. Robot is close to the kitchen_counter_119. Robot is close to the food_noodles_2101. pot_78 is close food_chicken_2089. food_chicken_2089 is inside pot_78. food_chicken_2089 is close pot_78. food_chicken_2089 released by left hand. 
##############################
From agent.py
grab_executor(pot_78)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the pot_78. Robot is close to the kitchen_counter_119. Robot is close to the food_noodles_2101. Grabbing pot_78 by right hand. 
##############################
From agent.py
walk_executor(stove_2135)
Robot find: Robot is close to the pot_78. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. 
##############################
From agent.py
put_executor(pot_78, stove_2135)
Robot find: Robot is close to the pot_78. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. pot_78 is close stove_2135. pot_78 is on stove_2135. stove_2135 is close pot_78. pot_78 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2135)
Robot find: Robot is close to the pot_78. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. stove_2135 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The pot needs to be filled with water before you can boil the noodles and chicken together. Ensure the pot is filled with water on the stove.
##############################
From agent.py
Human Instruction: The pot needs to be filled with water before you can boil the noodles and chicken together. Ensure the pot is filled with water on the stove.

The actions you have taken:
Action 1: Walk to kitchen_counter_119.
Action 2: look for food_noodles_2101 around kitchen_counter_119.
Action 3: Walk to cupboard_117.
Action 4: look for food_noodles_2101 around cupboard_117.
Action 5: Walk to cupboard_118.
Action 6: Open cupboard_118.
Action 7: look for food_noodles_2101 around cupboard_118.
Action 8: Walk to fridge_126.
Action 9: Switch off fridge_126.
Action 10: Open fridge_126.
Action 11: look for food_noodles_2101 around fridge_126.
Action 12: Grab food_noodles_2101.
Action 13: Walk to sink_19.
Action 14: Put food_noodles_2101 into sink_19.
Action 15: Walk to food_noodles_2101.
Action 16: Grab food_noodles_2101.
Action 17: Walk to faucet_20.
Action 18: Switch on faucet_20.
Action 19: Wash food_noodles_2101.
Action 20: Switch off faucet_20.
Action 21: Walk to food_chicken_2089.
Action 22: Grab food_chicken_2089.
Action 23: Walk to sink_19.
Action 24: Put food_chicken_2089 into sink_19.
Action 25: Walk to food_chicken_2089.
Action 26: Grab food_chicken_2089.
Action 27: Walk to kitchen_counter_119.
Action 28: Put food_noodles_2101 on kitchen_counter_119.
Action 29: Switch on faucet_121.
Action 30: Wash food_chicken_2089.
Action 31: Switch off faucet_121.
Action 32: Walk to pot_78.
Action 33: Grab pot_78.
Action 34: Walk to faucet_121.
Action 35: Walk to kitchen_counter_119.
Action 36: Put pot_78 on kitchen_counter_119.
Action 37: Switch on faucet_121.
Action 38: Switch off faucet_121.
Action 39: Grab food_noodles_2101.
Action 40: Walk to pot_78.
Action 41: Put food_noodles_2101 into pot_78.
Action 42: Put food_chicken_2089 into pot_78.
Action 43: Grab pot_78.
Action 44: Walk to stove_2135.
Action 45: Put pot_78 on stove_2135.
Action 46: Switch on stove_2135.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_2138_around_pot_2138(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==2138
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(pot,pot_instance)
        else:
            exp(pot,pot_instance)
    eff:
        unknown[pot]=False
        close[pot,pot_instance]=True
        close[pot_instance,pot]=True
    

#exp_behavior_end

#goal_representation
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet) # Move close to the faucet
        achieve has_water(pot) # Ensure the pot is filled with water

behavior boil_noodles_and_chicken(pot:item, stove:item, noodles:item, chicken:item):
    body:
        achieve_once inside(noodles, pot) # Put noodles in the pot
        achieve_once inside(chicken, pot) # Put chicken in the pot
        achieve_once on(pot, stove) # Place the pot on the stove
        achieve is_on(stove) # Ensure the stove is on for boiling

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select the pot
        
        bind stove: item where:
            is_stove(stove)
        # Select the stove

        bind noodles: item where:
            is_food_noodles(noodles) and id[noodles] == 2101
        # Select the noodles with ID 2101

        bind chicken: item where:
            is_food_chicken(chicken) and id[chicken] == 2089
        # Select the chicken with ID 2089

        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 121
        # Select the faucet with ID 121

        fill_pot_with_water(pot, faucet)
        boil_noodles_and_chicken(pot, stove, noodles, chicken)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet) # Move close to the faucet
        achieve has_water(pot) # Ensure the pot is filled with water

behavior boil_noodles_and_chicken(pot:item, stove:item, noodles:item, chicken:item):
    body:
        achieve_once inside(noodles, pot) # Put noodles in the pot
        achieve_once inside(chicken, pot) # Put chicken in the pot
        achieve_once on(pot, stove) # Place the pot on the stove
        achieve is_on(stove) # Ensure the stove is on for boiling

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select the pot
        
        bind stove: item where:
            is_stove(stove)
        # Select the stove

        bind noodles: item where:
            is_food_noodles(noodles) and id[noodles] == 2101
        # Select the noodles with ID 2101

        bind chicken: item where:
            is_food_chicken(chicken) and id[chicken] == 2089
        # Select the chicken with ID 2089

        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 121
        # Select the faucet with ID 121

        fill_pot_with_water(pot, faucet)
        boil_noodles_and_chicken(pot, stove, noodles, chicken)
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_121)walk_executor(pot_78)grab_executor(pot_78)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(stove_2135)put_executor(pot_78, stove_2135)
##############################
From agent.py
walk_executor(faucet_121)
Robot find: Robot is close to the kitchen_counter_119. Robot is close to the faucet_121. 
##############################
From agent.py
walk_executor(pot_78)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the food_noodles_2101. Robot is close to the pot_78. Robot is close to the stove_2135. 
##############################
From agent.py
grab_executor(pot_78)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the food_noodles_2101. Robot is close to the pot_78. Robot is close to the stove_2135. Grabbing pot_78 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot find: Robot is close to the pot_78. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchon_executor(faucet_20)
Robot find: Robot is close to the pot_78. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot find: Robot is close to the pot_78. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned off. 
##############################
From agent.py
walk_executor(stove_2135)
Robot find: Robot is close to the pot_78. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. 
##############################
From agent.py
put_executor(pot_78, stove_2135)
Robot find: Robot is close to the pot_78. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. pot_78 is close stove_2135. pot_78 is on stove_2135. pot_78 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to fill the pot with water. Although the noodles and chicken were placed in the pot and the pot was placed on the stove, water was not added before turning on the stove.
##############################
From agent.py
Human Instruction: You need to fill the pot with water. Although the noodles and chicken were placed in the pot and the pot was placed on the stove, water was not added before turning on the stove.

The actions you have taken:
Action 1: Walk to kitchen_counter_119.
Action 2: look for food_noodles_2101 around kitchen_counter_119.
Action 3: Walk to cupboard_117.
Action 4: look for food_noodles_2101 around cupboard_117.
Action 5: Walk to cupboard_118.
Action 6: Open cupboard_118.
Action 7: look for food_noodles_2101 around cupboard_118.
Action 8: Walk to fridge_126.
Action 9: Switch off fridge_126.
Action 10: Open fridge_126.
Action 11: look for food_noodles_2101 around fridge_126.
Action 12: Grab food_noodles_2101.
Action 13: Walk to sink_19.
Action 14: Put food_noodles_2101 into sink_19.
Action 15: Walk to food_noodles_2101.
Action 16: Grab food_noodles_2101.
Action 17: Walk to faucet_20.
Action 18: Switch on faucet_20.
Action 19: Wash food_noodles_2101.
Action 20: Switch off faucet_20.
Action 21: Walk to food_chicken_2089.
Action 22: Grab food_chicken_2089.
Action 23: Walk to sink_19.
Action 24: Put food_chicken_2089 into sink_19.
Action 25: Walk to food_chicken_2089.
Action 26: Grab food_chicken_2089.
Action 27: Walk to kitchen_counter_119.
Action 28: Put food_noodles_2101 on kitchen_counter_119.
Action 29: Switch on faucet_121.
Action 30: Wash food_chicken_2089.
Action 31: Switch off faucet_121.
Action 32: Walk to pot_78.
Action 33: Grab pot_78.
Action 34: Walk to faucet_121.
Action 35: Walk to kitchen_counter_119.
Action 36: Put pot_78 on kitchen_counter_119.
Action 37: Switch on faucet_121.
Action 38: Switch off faucet_121.
Action 39: Grab food_noodles_2101.
Action 40: Walk to pot_78.
Action 41: Put food_noodles_2101 into pot_78.
Action 42: Put food_chicken_2089 into pot_78.
Action 43: Grab pot_78.
Action 44: Walk to stove_2135.
Action 45: Put pot_78 on stove_2135.
Action 46: Switch on stove_2135.
Action 47: Walk to faucet_121.
Action 48: Walk to pot_78.
Action 49: Grab pot_78.
Action 50: Walk to faucet_20.
Action 51: Switch on faucet_20.
Action 52: Switch off faucet_20.
Action 53: Walk to stove_2135.
Action 54: Put pot_78 on stove_2135.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_78_around_walllamp_36(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind walllamp_instance:item where:
            is_walllamp(walllamp_instance) and id[walllamp_instance]==36
        achieve close_char(char,walllamp_instance)
        if can_open(walllamp_instance):
            achieve_once open(walllamp_instance)
            exp(pot,walllamp_instance)
        else:
            exp(pot,walllamp_instance)
    eff:
        unknown[pot]=False
        close[pot,walllamp_instance]=True
        close[walllamp_instance,pot]=True
    

behavior find_stamp_2022_around_nightstand_192(stamp:item):
    goal: not unknown(stamp)
    body:
        assert is_stamp(stamp)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==192
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(stamp,nightstand_instance)
        else:
            exp(stamp,nightstand_instance)
    eff:
        unknown[stamp]=False
        close[stamp,nightstand_instance]=True
        close[nightstand_instance,stamp]=True
    

#exp_behavior_end

#goal_representation
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve close_char(char, faucet)
        achieve has_water(pot)

behavior cook_noodles_and_chicken(pot:item, stove:item, noodles:item, chicken:item):
    body:
        achieve_once inside(noodles, pot)
        achieve_once inside(chicken, pot)
        achieve_once on(pot, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot] == 78
        # Select the pot with ID 78

        bind faucet: item where:
            is_faucet(faucet)
        # Select any available faucet

        bind stove: item where:
            is_stove(stove) and id[stove] == 2135
        # Select the stove with ID 2135
        
        bind noodles: item where:
            is_food_noodles(noodles) and id[noodles] == 2101
        # Select the noodles with ID 2101

        bind chicken: item where:
            is_food_chicken(chicken) and id[chicken] == 2089
        # Select the chicken with ID 2089

        fill_pot_with_water(pot, faucet)

        cook_noodles_and_chicken(pot, stove, noodles, chicken)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve close_char(char, faucet)
        achieve has_water(pot)

behavior cook_noodles_and_chicken(pot:item, stove:item, noodles:item, chicken:item):
    body:
        achieve_once inside(noodles, pot)
        achieve_once inside(chicken, pot)
        achieve_once on(pot, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot] == 78
        # Select the pot with ID 78

        bind faucet: item where:
            is_faucet(faucet)
        # Select any available faucet

        bind stove: item where:
            is_stove(stove) and id[stove] == 2135
        # Select the stove with ID 2135
        
        bind noodles: item where:
            is_food_noodles(noodles) and id[noodles] == 2101
        # Select the noodles with ID 2101

        bind chicken: item where:
            is_food_chicken(chicken) and id[chicken] == 2089
        # Select the chicken with ID 2089

        fill_pot_with_water(pot, faucet)

        cook_noodles_and_chicken(pot, stove, noodles, chicken)
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_20)
##############################
From agent.py
walk_executor(faucet_20)
Robot find: Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to fill the pot with water before boiling the noodles and chicken on the stove.
##############################
Task Summary:
Task Goal:
Boil some noodles with chicken.
Action History:
['walk_executor(kitchen_counter_119)', 'walk_executor(cupboard_117)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'grab_executor(food_noodles_2101)', 'walk_executor(sink_19)', 'putin_executor(food_noodles_2101, sink_19)', 'walk_executor(food_noodles_2101)', 'grab_executor(food_noodles_2101)', 'walk_executor(faucet_20)', 'switchon_executor(faucet_20)', 'wash_executor(food_noodles_2101)', 'switchoff_executor(faucet_20)', 'walk_executor(food_chicken_2089)', 'grab_executor(food_chicken_2089)', 'walk_executor(sink_19)', 'putin_executor(food_chicken_2089, sink_19)', 'walk_executor(food_chicken_2089)', 'grab_executor(food_chicken_2089)', 'walk_executor(kitchen_counter_119)', 'put_executor(food_noodles_2101, kitchen_counter_119)', 'switchon_executor(faucet_121)', 'wash_executor(food_chicken_2089)', 'switchoff_executor(faucet_121)', 'walk_executor(pot_78)', 'grab_executor(pot_78)', 'walk_executor(faucet_121)', 'walk_executor(kitchen_counter_119)', 'put_executor(pot_78, kitchen_counter_119)', 'switchon_executor(faucet_121)', 'switchoff_executor(faucet_121)', 'grab_executor(food_noodles_2101)', 'walk_executor(pot_78)', 'putin_executor(food_noodles_2101, pot_78)', 'putin_executor(food_chicken_2089, pot_78)', 'grab_executor(pot_78)', 'walk_executor(stove_2135)', 'put_executor(pot_78, stove_2135)', 'switchon_executor(stove_2135)', 'walk_executor(faucet_121)', 'walk_executor(pot_78)', 'grab_executor(pot_78)', 'walk_executor(faucet_20)', 'switchon_executor(faucet_20)', 'switchoff_executor(faucet_20)', 'walk_executor(stove_2135)', 'put_executor(pot_78, stove_2135)', 'walk_executor(faucet_20)']
Time info:
Time consume: 173 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 94
goal generate times: 4
goal correct times: 0
action_num: 51

Task complete rate:
Keystate: k1 - Requires: 11 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
