From agent.py
Reset goals: The sub-goals are: 
['1. Identify the correct book among any other similar items.', '2. Place the book on the coffee table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2136_around_bookshelf_196(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==196
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_novel_2060_around_bookshelf_196(novel:item):
    goal: not unknown(novel)
    body:
        assert is_novel(novel)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==196
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(novel,bookshelf_instance)
        else:
            exp(novel,bookshelf_instance)
    eff:
        unknown[novel]=False
        close[novel,bookshelf_instance]=True
        close[bookshelf_instance,novel]=True
    

behavior find_diary_2008_around_bookshelf_196(diary:item):
    goal: not unknown(diary)
    body:
        assert is_diary(diary)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==196
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(diary,bookshelf_instance)
        else:
            exp(diary,bookshelf_instance)
    eff:
        unknown[diary]=False
        close[diary,bookshelf_instance]=True
        close[bookshelf_instance,diary]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select a book

        if not visited(book):
            observe(book, "Identify the correct book among any other similar items")
            # Observe the book to ensure it is the correct one
 
#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select a book

        if not visited(book):
            observe(book, "Identify the correct book among any other similar items")
            # Observe the book to ensure it is the correct one
 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_196)open_executor(bookshelf_196)exp(book_2136, bookshelf_196)walk_executor(book_2136)open_executor(book_2136)obs(book_2136, Identify the correct book among any other similar items)
##############################
From agent.py
walk_executor(bookshelf_196)
Robot find: novel_2060, drawing_202, Robot is close to the bookshelf_196. 
##############################
From agent.py
open_executor(bookshelf_196)
Robot find: Robot is close to the photoframe_219. Robot is close to the bookshelf_196. bookshelf_196 is opened. 
##############################
From agent.py
exp(book_2136, bookshelf_196)
Fail to find book_2136 around bookshelf_196. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_124)open_executor(bookshelf_124)exp(book_2136, bookshelf_124)walk_executor(book_2136)open_executor(book_2136)obs(book_2136, Identify the correct book among any other similar items)
##############################
From agent.py
walk_executor(bookshelf_124)
Robot find: book_2136, envelope_2055, book_2137, drawing_110, drawing_111, Robot is close to the bookshelf_124. 
##############################
From agent.py
open_executor(bookshelf_124)
Robot find: Robot is close to the bookshelf_124. bookshelf_124 is opened. 
##############################
From agent.py
exp(book_2136, bookshelf_124)
Find book_2136. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2136)open_executor(book_2136)obs(book_2136, Identify the correct book among any other similar items)
##############################
From agent.py
walk_executor(book_2136)
Robot find: Robot is close to the bookshelf_124. Robot is close to the book_2136. 
##############################
From agent.py
open_executor(book_2136)
Robot find: Robot is close to the bookshelf_124. Robot is close to the book_2136. book_2136 is opened. 
##############################
From agent.py
obs(book_2136, Identify the correct book among any other similar items)
Get this information:  book_2136 is on bookshelf_124. book_2136 is inside dining_room_41. book_2136 is close to bookshelf_124. book_2136 is close to character_240. book_2136 is OPEN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_donut_2091_around_kitchen_counter_122(food_donut:item):
    goal: not unknown(food_donut)
    body:
        assert is_food_donut(food_donut)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_donut,kitchen_counter_instance)
        else:
            exp(food_donut,kitchen_counter_instance)
    eff:
        unknown[food_donut]=False
        close[food_donut,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_donut]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2136
        # Select the specific book identified in previous actions

        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select the coffee table inside the home office

        place_book_on_table(book, table)
        # Place the book on the coffee table in the home office

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2136
        # Select the specific book identified in previous actions

        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select the coffee table inside the home office

        place_book_on_table(book, table)
        # Place the book on the coffee table in the home office

##############################
From agent.py-> find a plan in act()
grab_executor(book_2136)walk_executor(table_270)put_executor(book_2136, table_270)
##############################
From agent.py
grab_executor(book_2136)
Robot find: Robot is close to the bookshelf_124. Robot is close to the book_2136. Grabbing book_2136 by right hand. 
##############################
From agent.py
walk_executor(table_270)
Robot find: shoes_2033, shampoo_2019, pillow_286, pencil_2014, phone_2017, pillow_287, drawing_288, brush_2002, Robot is close to the book_2136. Robot is close to the couch_269. Robot is close to the table_270. 
##############################
From agent.py
put_executor(book_2136, table_270)
Robot find: Robot is close to the book_2136. Robot is close to the couch_269. Robot is close to the table_270. book_2136 is on table_270. table_270 is close book_2136. book_2136 is close table_270. book_2136 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure that the book (book_2136) is placed on the coffee table in the home office. Verify the table you've placed it on (table_270) is the coffee table within the home office. If it is not, you should move the book to the correct table in the home office.
##############################
From agent.py
Human Instruction: You need to ensure that the book (book_2136) is placed on the coffee table in the home office. Verify the table you've placed it on (table_270) is the coffee table within the home office. If it is not, you should move the book to the correct table in the home office.

The actions you have taken:
Action 1: Walk to bookshelf_196.
Action 2: Open bookshelf_196.
Action 3: look for book_2136 around bookshelf_196.
Action 4: Walk to bookshelf_124.
Action 5: Open bookshelf_124.
Action 6: look for book_2136 around bookshelf_124.
Action 7: Walk to book_2136.
Action 8: Open book_2136.
Action 9: Observe around book_2136 with the question of Identify the correct book among any other similar items.
Action 10: Grab book_2136.
Action 11: Walk to table_270.
Action 12: Put book_2136 on table_270.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_donut_2091_around_kitchen_counter_122(food_donut:item):
    goal: not unknown(food_donut)
    body:
        assert is_food_donut(food_donut)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_donut,kitchen_counter_instance)
        else:
            exp(food_donut,kitchen_counter_instance)
    eff:
        unknown[food_donut]=False
        close[food_donut,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_donut]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table)

behavior verify_coffee_table(table:item):
    body:
        observe(table, "Verify if this is the correct coffee table in the home office")

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2136
        # Select the specific book with ID 2136

        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind table: item where:
            is_table(table) and inside(table, home_office) and id[table] == 270
        # Select the specific table with ID 270 inside the home office

        verify_coffee_table(table)
        place_book_on_table(book, table)
        # Place the book on the coffee table in the home office

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table)

behavior verify_coffee_table(table:item):
    body:
        observe(table, "Verify if this is the correct coffee table in the home office")

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book] == 2136
        # Select the specific book with ID 2136

        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind table: item where:
            is_table(table) and inside(table, home_office) and id[table] == 270
        # Select the specific table with ID 270 inside the home office

        verify_coffee_table(table)
        place_book_on_table(book, table)
        # Place the book on the coffee table in the home office

##############################
From agent.py-> find a plan in act()
obs(table_270, Verify if this is the correct coffee table in the home office)
##############################
From agent.py
obs(table_270, Verify if this is the correct coffee table in the home office)
Get this information:  book_2136 is on table_270. shampoo_2019 is on table_270. pencil_2014 is on table_270. orchid_285 is on table_270. table_270 is inside home_office_241. table_270 is inside couch_269. table_270 is close to shampoo_2019. table_270 is close to floor_264. table_270 is close to floor_265. table_270 is close to floor_266. table_270 is close to floor_267. table_270 is close to couch_269. table_270 is close to wall_248. table_270 is close to pillow_286. table_270 is close to orchid_285. table_270 is close to pencil_2014. table_270 is close to pillow_287. table_270 is close to character_240. table_270 is close to book_2136. table_270 is facing drawing_288. table_270 is facing television_281. table_270 is facing computer_276. table_270 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Find the book and put it on the coffee table in home office.
Action History:
['walk_executor(bookshelf_196)', 'open_executor(bookshelf_196)', 'walk_executor(bookshelf_124)', 'open_executor(bookshelf_124)', 'walk_executor(book_2136)', 'open_executor(book_2136)', 'grab_executor(book_2136)', 'walk_executor(table_270)', 'put_executor(book_2136, table_270)']
Time info:
Time consume: 97 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 193
goal generate times: 3
goal correct times: 0
action_num: 9

Task complete rate:
1
Scene_id: 1
##############################
