From agent.py
Reset goals: The sub-goals are: 
['Make a cup of coffee using the coffee maker.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2088_around_kitchen_counter_132(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

behavior find_tea_bag_2017_around_cupboard_130(tea_bag:item):
    goal: not unknown(tea_bag)
    body:
        assert is_tea_bag(tea_bag)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(tea_bag,cupboard_instance)
        else:
            exp(tea_bag,cupboard_instance)
    eff:
        unknown[tea_bag]=False
        close[tea_bag,cupboard_instance]=True
        close[cupboard_instance,tea_bag]=True
    

behavior find_coffee_filter_2035_around_cupboard_130(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(coffee_filter,cupboard_instance)
        else:
            exp(coffee_filter,cupboard_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,cupboard_instance]=True
        close[cupboard_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
def in_kitchen(item: item):
    # Function to check if an item is in the kitchen
    symbol is_in_kitchen = exists room: item : (is_kitchen(room) and inside(item, room))
    return is_in_kitchen

behavior fill_coffee_maker_with_water(coffee_maker:item, sink:item):
    body:
        achieve close_char(char, sink)
        # Move closer to the sink
        achieve has_water(coffee_maker)
        # Fill the coffee maker with water

behavior place_coffee_maker_on_counter(coffee_maker:item, counter:item):
    body:
        achieve_once on(coffee_maker, counter)
        # Place the coffee maker on the kitchen counter

behavior start_coffee_maker(coffee_maker:item):
    body:
        achieve is_on(coffee_maker)
        # Turn on the coffee maker

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind sink: item where:
            is_sink(sink) and in_kitchen(sink)
        # Select a sink in the kitchen

        bind counter: item where:
            is_kitchen_counter(counter)
        # Select the kitchen counter

        fill_coffee_maker_with_water(coffee_maker, sink)
        place_coffee_maker_on_counter(coffee_maker, counter)
        start_coffee_maker(coffee_maker)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cd_player_2084_around_tvstand_186(cd_player:item):
    goal: not unknown(cd_player)
    body:
        assert is_cd_player(cd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==186
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(cd_player,tvstand_instance)
        else:
            exp(cd_player,tvstand_instance)
    eff:
        unknown[cd_player]=False
        close[cd_player,tvstand_instance]=True
        close[tvstand_instance,cd_player]=True
    

behavior find_cup_2089_around_kitchen_counter_132(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

behavior find_coffee_filter_2035_around_cupboard_130(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(coffee_filter,cupboard_instance)
        else:
            exp(coffee_filter,cupboard_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,cupboard_instance]=True
        close[cupboard_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_coffee_maker(coffee_maker:item):
    body:
        achieve plugged(coffee_maker)
        achieve_on coffee_maker

behavior insert_cup_and_start(coffee_maker:item, cup:item):
    body:
        achieve_once inside(cup, coffee_maker)
        achieve is_on(coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind cup: item where:
            is_cup(cup)
        # Select a suitable cup

        prepare_coffee_maker(coffee_maker)
        insert_cup_and_start(coffee_maker, cup)
        # Insert a cup and start the coffee maker

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'coffee_maker') at line 5773, column 20.
Expected one of: 
	* VBAR
	* __ANON_7
	* __ANON_1
	* GREATER_EQ
	* COMMA
	* AT
	* STAR
	* __ANON_5
	* FLOORDIV
	* MINUS
	* __ANON_4
	* __ANON_6
	* NOT_EQ
	* __ANON_8
	* LESS_EQ
	* CIRCUMFLEX
	* __ANON_2
	* RSHIFT
	* OR
	* SLASH
	* MORETHAN
	* __ANON_3
	* PLUS
	* _NEWLINE
	* PERCENT
	* SEMICOLON
	* IF
	* __ANON_0
	* LSHIFT
	* DOUBLE_EQUAL
	* LESSTHAN
	* AND
	* EQUAL
	* AMPERSAND

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_cd_player_2084_around_tvstand_186(cd_player:item):
    goal: not unknown(cd_player)
    body:
        assert is_cd_player(cd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==186
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(cd_player,tvstand_instance)
        else:
            exp(cd_player,tvstand_instance)
    eff:
        unknown[cd_player]=False
        close[cd_player,tvstand_instance]=True
        close[tvstand_instance,cd_player]=True
    

behavior find_cup_2088_around_kitchen_counter_132(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

behavior find_coffee_filter_2035_around_cupboard_130(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(coffee_filter,cupboard_instance)
        else:
            exp(coffee_filter,cupboard_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,cupboard_instance]=True
        close[cupboard_instance,coffee_filter]=True
    

#goal_representation
 
behavior prepare_coffee_maker(coffee_maker:item):
    body:
        achieve plugged(coffee_maker)
        achieve is_on(coffee_maker)

behavior insert_cup_and_start(coffee_maker:item, cup:item):
    body:
        achieve_once inside(cup, coffee_maker)
        achieve is_on(coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        bind cup: item where:
            is_cup(cup)
        # Select a suitable cup

        prepare_coffee_maker(coffee_maker)
        insert_cup_and_start(coffee_maker, cup)
        # Insert a cup and start the coffee maker

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2006_around_cupboard_130(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

behavior find_coffee_filter_2035_around_cupboard_130(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(coffee_filter,cupboard_instance)
        else:
            exp(coffee_filter,cupboard_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,cupboard_instance]=True
        close[cupboard_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
behavior make_coffee_with_coffee_maker(coffee_maker:item, coffee_filter:item, cup:item):
    body:
        achieve is_on(coffee_maker)
        achieve_once inside(coffee_filter, coffee_maker)
        achieve_once inside(cup, coffee_maker)
        achieve_once is_on(coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker) and has_plug(coffee_maker)
        # Select the coffee maker, ensuring its plugged in

        bind coffee_filter: item where:
            is_coffee_filter(coffee_filter)
        # Select a coffee filter

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        make_coffee_with_coffee_maker(coffee_maker, coffee_filter, cup)
        # Make coffee by placing the filter and cup in the coffee maker and turning it on

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "make a cup of coffee using the coffee maker." ?
Answer: Put a suitably sized cup into the coffee machine and start it.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2088_around_cupboard_130(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_cup_and_start_coffee_maker(cup: item, coffee_maker: item):
    body:
        achieve_once inside(cup, coffee_maker)
        achieve_once is_on(coffee_maker)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a suitable cup

        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker

        place_cup_and_start_coffee_maker(cup, coffee_maker)

#goal_representation_end

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(cup_2087, cupboard_130)walk_executor(coffe_maker_147)open_executor(coffe_maker_147)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(coffe_maker_147)putin_executor(cup_2087, coffe_maker_147)close_executor(coffe_maker_147)switchon_executor(coffe_maker_147)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, pot_54, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(cup_2087, cupboard_130)
Fail to find cup_2087 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(cup_2087, cupboard_131)walk_executor(coffe_maker_147)open_executor(coffe_maker_147)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(coffe_maker_147)putin_executor(cup_2087, coffe_maker_147)close_executor(coffe_maker_147)switchon_executor(coffe_maker_147)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(cup_2087, cupboard_131)
Fail to find cup_2087 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_301)exp(cup_2087, wallshelf_301)walk_executor(coffe_maker_147)open_executor(coffe_maker_147)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(coffe_maker_147)putin_executor(cup_2087, coffe_maker_147)close_executor(coffe_maker_147)switchon_executor(coffe_maker_147)
##############################
From agent.py
walk_executor(wallshelf_301)
Robot find: towel_rack_299, towel_rack_300, drawing_296, Robot is close to the wallshelf_301. 
##############################
From agent.py
exp(cup_2087, wallshelf_301)
Fail to find cup_2087 around wallshelf_301. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(cup_2087, kitchen_counter_132)walk_executor(coffe_maker_147)open_executor(coffe_maker_147)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(coffe_maker_147)putin_executor(cup_2087, coffe_maker_147)close_executor(coffe_maker_147)switchon_executor(coffe_maker_147)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the kitchen_counter_132. 
##############################
From agent.py
exp(cup_2087, kitchen_counter_132)
Fail to find cup_2087 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_147)open_executor(coffe_maker_147)exp(cup_2087, coffe_maker_147)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(coffe_maker_147)putin_executor(cup_2087, coffe_maker_147)close_executor(coffe_maker_147)switchon_executor(coffe_maker_147)
##############################
From agent.py
walk_executor(coffe_maker_147)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. 
##############################
From agent.py
open_executor(coffe_maker_147)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. coffe_maker_147 is opened. 
##############################
From agent.py
exp(cup_2087, coffe_maker_147)
Fail to find cup_2087 around coffe_maker_147. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(cup_2087, kitchen_counter_128)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(coffe_maker_147)putin_executor(cup_2087, coffe_maker_147)close_executor(coffe_maker_147)switchon_executor(coffe_maker_147)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the kitchen_counter_128. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2087 ?
Answer: Locate cup_2087 in dining_room_1. It is situated on top of table_123.
Re-decompose: None

##############################
From agent.py
Human Instruction: Locate cup_2087 in dining_room_1. It is situated on top of table_123.

Human Guidance: Put a suitably sized cup into the coffee machine and start it.
The actions you have taken:
Action 1: Walk to cupboard_130.
Action 2: look for cup_2087 around cupboard_130.
Action 3: Walk to cupboard_131.
Action 4: Open cupboard_131.
Action 5: look for cup_2087 around cupboard_131.
Action 6: Walk to wallshelf_301.
Action 7: look for cup_2087 around wallshelf_301.
Action 8: Walk to kitchen_counter_132.
Action 9: look for cup_2087 around kitchen_counter_132.
Action 10: Walk to coffe_maker_147.
Action 11: Open coffe_maker_147.
Action 12: look for cup_2087 around coffe_maker_147.
Action 13: Walk to kitchen_counter_128.

##############################
From agent.py
exp(cup_2087, kitchen_counter_128)
Fail to find cup_2087 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(cup_2087, table_123)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(coffe_maker_147)putin_executor(cup_2087, coffe_maker_147)close_executor(coffe_maker_147)switchon_executor(coffe_maker_147)
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, laptop_2015, fork_2103, cup_2087, bowl_2095, drawing_118, Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
exp(cup_2087, table_123)
Find cup_2087. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(coffe_maker_147)putin_executor(cup_2087, coffe_maker_147)close_executor(coffe_maker_147)switchon_executor(coffe_maker_147)
##############################
From agent.py
walk_executor(cup_2087)
Robot find: Robot is close to the table_123. Robot is close to the cup_2087. 
##############################
From agent.py
grab_executor(cup_2087)
Robot find: Robot is close to the table_123. Robot is close to the cup_2087. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(coffe_maker_147)
Robot find: Robot is close to the cup_2087. Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. 
##############################
From agent.py
putin_executor(cup_2087, coffe_maker_147)
Robot find: Robot is close to the cup_2087. Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. cup_2087 is inside coffe_maker_147. coffe_maker_147 is close cup_2087. cup_2087 is close coffe_maker_147. cup_2087 released by right hand. 
##############################
From agent.py
close_executor(coffe_maker_147)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. coffe_maker_147 is closed. 
##############################
From agent.py
switchon_executor(coffe_maker_147)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. coffe_maker_147 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make a cup of coffee using the coffee maker.
Action History:
['walk_executor(cupboard_130)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(wallshelf_301)', 'walk_executor(kitchen_counter_132)', 'walk_executor(coffe_maker_147)', 'open_executor(coffe_maker_147)', 'walk_executor(kitchen_counter_128)', 'walk_executor(table_123)', 'walk_executor(cup_2087)', 'grab_executor(cup_2087)', 'walk_executor(coffe_maker_147)', 'putin_executor(cup_2087, coffe_maker_147)', 'close_executor(coffe_maker_147)', 'switchon_executor(coffe_maker_147)']
Time info:
Time consume: 149 seconds
Exp_helper query times: 1
Guidance query times: 1
library scale: 180
goal generate times: 4
goal correct times: 0
action_num: 15

Task complete rate:
1
Scene_id: 2
##############################
