From agent.py
Reset goals: The sub-goals are: 
['1. Make a cup of coffee using the coffee maker.  ', '2. Add milk and sugar to the coffee.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2063_around_table_226(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==226
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(cup,table_instance)
        else:
            exp(cup,table_instance)
    eff:
        unknown[cup]=False
        close[cup,table_instance]=True
        close[table_instance,cup]=True
    

behavior find_coffee_filter_2000_around_coffe_maker_290(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind coffe_maker_instance:item where:
            is_coffe_maker(coffe_maker_instance) and id[coffe_maker_instance]==290
        achieve close_char(char,coffe_maker_instance)
        if can_open(coffe_maker_instance):
            achieve_once open(coffe_maker_instance)
            exp(coffee_filter,coffe_maker_instance)
        else:
            exp(coffee_filter,coffe_maker_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,coffe_maker_instance]=True
        close[coffe_maker_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
behavior make_coffee(cup:item, coffee_maker:item):
    body:
        achieve_once inside(cup, coffee_maker)
        # Place the cup inside the coffee maker to start making coffee
        achieve_once closed(coffee_maker)
        # Ensure the coffee maker is closed
        achieve is_on(coffee_maker)
        # Turn on the coffee maker to brew coffee

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select a coffee maker

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        make_coffee(cup, coffee_maker)
        # Use the coffee maker to brew coffee in the cup

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior make_coffee(cup:item, coffee_maker:item):
    body:
        achieve_once inside(cup, coffee_maker)
        # Place the cup inside the coffee maker to start making coffee
        achieve_once closed(coffee_maker)
        # Ensure the coffee maker is closed
        achieve is_on(coffee_maker)
        # Turn on the coffee maker to brew coffee

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select a coffee maker

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        make_coffee(cup, coffee_maker)
        # Use the coffee maker to brew coffee in the cup

##############################
From agent.py-> find a plan in act()
walk_executor(table_226)exp(cup_2064, table_226)walk_executor(coffe_maker_290)open_executor(coffe_maker_290)walk_executor(cup_2064)grab_executor(cup_2064)walk_executor(coffe_maker_290)putin_executor(cup_2064, coffe_maker_290)close_executor(coffe_maker_290)switchon_executor(coffe_maker_290)
##############################
From agent.py
walk_executor(table_226)
Robot find: drawing_243, bowl_2071, coffee_filter_2000, drawing_2003, drawing_241, bowl_2072, mat_236, fork_2080, drawing_238, drawing_239, drawing_240, drawing_242, fork_2081, mat_237, Robot is close to the table_226. 
##############################
From agent.py
exp(cup_2064, table_226)
Fail to find cup_2064 around table_226. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_290)open_executor(coffe_maker_290)exp(cup_2064, coffe_maker_290)walk_executor(cup_2064)grab_executor(cup_2064)walk_executor(coffe_maker_290)putin_executor(cup_2064, coffe_maker_290)close_executor(coffe_maker_290)switchon_executor(coffe_maker_290)
##############################
From agent.py
walk_executor(coffe_maker_290)
Robot find: napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the coffe_maker_290. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
open_executor(coffe_maker_290)
Robot find: Robot is close to the coffe_maker_290. Robot is close to the kitchen_counter_230. coffe_maker_290 is opened. 
##############################
From agent.py
exp(cup_2064, coffe_maker_290)
Find cup_2064. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2064)grab_executor(cup_2064)walk_executor(coffe_maker_290)putin_executor(cup_2064, coffe_maker_290)close_executor(coffe_maker_290)switchon_executor(coffe_maker_290)
##############################
From agent.py
walk_executor(cup_2064)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the cup_2064. 
##############################
From agent.py
grab_executor(cup_2064)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the cup_2064. Grabbing cup_2064 by right hand. 
##############################
From agent.py
walk_executor(coffe_maker_290)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the cup_2064. Robot is close to the coffe_maker_290. 
##############################
From agent.py
putin_executor(cup_2064, coffe_maker_290)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the cup_2064. Robot is close to the coffe_maker_290. coffe_maker_290 is close cup_2064. cup_2064 is inside coffe_maker_290. cup_2064 is close coffe_maker_290. cup_2064 released by right hand. 
##############################
From agent.py
close_executor(coffe_maker_290)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the coffe_maker_290. coffe_maker_290 is closed. 
##############################
From agent.py
switchon_executor(coffe_maker_290)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the coffe_maker_290. coffe_maker_290 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_sugar_2039_around_closetdrawer_143(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==143
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(food_sugar,closetdrawer_instance)
        else:
            exp(food_sugar,closetdrawer_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,closetdrawer_instance]=True
        close[closetdrawer_instance,food_sugar]=True
    

behavior find_remote_control_2052_around_tvstand_353(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==353
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(remote_control,tvstand_instance)
        else:
            exp(remote_control,tvstand_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,tvstand_instance]=True
        close[tvstand_instance,remote_control]=True
    

behavior find_milk_2043_around_fridge_289(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

#exp_behavior_end

#goal_representation
 
behavior add_milk_to_coffee(cup:item, milk:item):
    body:
        achieve_once inside(milk, cup)
        # Add milk into the coffee cup

behavior add_sugar_to_coffee(cup:item, sugar:item):
    body:
        achieve_once inside(sugar, cup)
        # Add sugar into the coffee cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup] == 2064
        # Select the coffee cup

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select sugar

        add_milk_to_coffee(cup, milk)
        add_sugar_to_coffee(cup, sugar)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior add_milk_to_coffee(cup:item, milk:item):
    body:
        achieve_once inside(milk, cup)
        # Add milk into the coffee cup

behavior add_sugar_to_coffee(cup:item, sugar:item):
    body:
        achieve_once inside(sugar, cup)
        # Add sugar into the coffee cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup] == 2064
        # Select the coffee cup

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select sugar

        add_milk_to_coffee(cup, milk)
        add_sugar_to_coffee(cup, sugar)

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(milk_2043, fridge_289)walk_executor(milk_2043)grab_executor(milk_2043)walk_executor(cup_2064)putin_executor(milk_2043, cup_2064)walk_executor(closetdrawer_143)exp(food_sugar_2039, closetdrawer_143)walk_executor(food_sugar_2039)grab_executor(food_sugar_2039)walk_executor(cup_2064)putin_executor(food_sugar_2039, cup_2064)
##############################
From agent.py
walk_executor(fridge_289)
Robot find: Robot is close to the fridge_289. 
##############################
From agent.py
switchoff_executor(fridge_289)
Robot find: Robot is close to the fridge_289. fridge_289 is turned off. 
##############################
From agent.py
open_executor(fridge_289)
Robot find: sauce_2078, food_steak_2008, food_apple_2009, food_bacon_2010, food_banana_2011, food_bread_2012, food_cake_2013, food_carrot_2014, food_cereal_2015, food_cheese_2016, food_chicken_2017, food_dessert_2018, food_donut_2019, food_egg_2020, food_fish_2021, food_food_2022, food_fruit_2023, food_hamburger_2024, food_ice_cream_2025, food_jam_2026, food_kiwi_2027, food_lemon_2028, food_noodles_2029, food_oatmeal_2030, food_orange_2031, food_onion_2032, food_peanut_butter_2033, food_pizza_2034, food_potato_2035, food_rice_2036, food_salt_2037, food_snack_2038, food_sugar_2039, food_turkey_2040, food_vegetable_2041, dry_pasta_2042, milk_2043, Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. fridge_289 is opened. 
##############################
From agent.py
exp(milk_2043, fridge_289)
Find milk_2043. 
##############################
From agent.py-> find a plan in act()
grab_executor(milk_2043)walk_executor(cup_2064)putin_executor(milk_2043, cup_2064)walk_executor(food_sugar_2039)grab_executor(food_sugar_2039)walk_executor(cup_2064)putin_executor(food_sugar_2039, cup_2064)
##############################
From agent.py
grab_executor(milk_2043)
Robot find: Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. Grabbing milk_2043 by right hand. 
##############################
From agent.py
walk_executor(cup_2064)
Robot find: Robot is close to the milk_2043. Robot is close to the coffe_maker_290. 
##############################
From agent.py
putin_executor(milk_2043, cup_2064)
Robot find: Robot is close to the milk_2043. Robot is close to the coffe_maker_290. milk_2043 released by right hand. 
##############################
From agent.py
walk_executor(food_sugar_2039)
Robot find: Robot is close to the fridge_289. Robot is close to the food_sugar_2039. 
##############################
From agent.py
grab_executor(food_sugar_2039)
Robot find: Robot is close to the fridge_289. Robot is close to the food_sugar_2039. Grabbing food_sugar_2039 by right hand. 
##############################
From agent.py
walk_executor(cup_2064)
Robot find: Robot is close to the food_sugar_2039. Robot is close to the coffe_maker_290. 
##############################
From agent.py
putin_executor(food_sugar_2039, cup_2064)
Robot find: Robot is close to the food_sugar_2039. Robot is close to the coffe_maker_290. food_sugar_2039 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
make a cup of coffee using the coffee maker, then add milk and sugar.
Action History:
['walk_executor(table_226)', 'walk_executor(coffe_maker_290)', 'open_executor(coffe_maker_290)', 'walk_executor(cup_2064)', 'grab_executor(cup_2064)', 'walk_executor(coffe_maker_290)', 'putin_executor(cup_2064, coffe_maker_290)', 'close_executor(coffe_maker_290)', 'switchon_executor(coffe_maker_290)', 'walk_executor(fridge_289)', 'switchoff_executor(fridge_289)', 'open_executor(fridge_289)', 'grab_executor(milk_2043)', 'walk_executor(cup_2064)', 'putin_executor(milk_2043, cup_2064)', 'walk_executor(food_sugar_2039)', 'grab_executor(food_sugar_2039)', 'walk_executor(cup_2064)', 'putin_executor(food_sugar_2039, cup_2064)']
Time info:
Time consume: 85 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 45
goal generate times: 2
goal correct times: 0
action_num: 19

Task complete rate:
Keystate: k1 - Requires: 8 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
