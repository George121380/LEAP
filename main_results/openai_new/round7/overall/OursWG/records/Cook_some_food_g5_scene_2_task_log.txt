From agent.py
Reset goals: The sub-goals are: 
['1. Peel and slice the bananas.', '2. Heat oil in a pan.', '3. Fry the banana slices until golden brown.  ', '']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_food_banana_2045_around_table_127(food_banana:item):
    goal: not unknown(food_banana)
    body:
        assert is_food_banana(food_banana)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_banana,table_instance)
        else:
            exp(food_banana,table_instance)
    eff:
        unknown[food_banana]=False
        close[food_banana,table_instance]=True
        close[table_instance,food_banana]=True
    

#exp_behavior_end

#goal_representation
 
def is_banana_or_cutting_board(item: item):
    # Function to check if the item is a banana or a cutting board
    symbol is_target_item = is_food_banana(item) or is_cutting_board(item)
    return is_target_item

behavior peel_and_slice_banana(banana: item, cutting_board: item, knife: item):
    body:
        achieve_once on(banana, cutting_board) # Place the banana on the cutting board
        achieve cut(banana) # Slice the banana

behavior __goal__():
    body:
        bind banana: item where:
            is_food_banana(banana)
        # Select a banana

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        peel_and_slice_banana(banana, cutting_board, knife)
        # Peel and slice the banana using the knife on the cutting board

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_banana_or_cutting_board(item: item):
    # Function to check if the item is a banana or a cutting board
    symbol is_target_item = is_food_banana(item) or is_cutting_board(item)
    return is_target_item

behavior peel_and_slice_banana(banana: item, cutting_board: item, knife: item):
    body:
        achieve_once on(banana, cutting_board) # Place the banana on the cutting board
        achieve cut(banana) # Slice the banana

behavior __goal__():
    body:
        bind banana: item where:
            is_food_banana(banana)
        # Select a banana

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        peel_and_slice_banana(banana, cutting_board, knife)
        # Peel and slice the banana using the knife on the cutting board

##############################
From agent.py-> find a plan in act()
walk_executor(table_127)exp(food_banana_2045, table_127)walk_executor(food_banana_2045)grab_executor(food_banana_2045)walk_executor(cutting_board_2080)put_executor(food_banana_2045, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_banana_2045)cut_executor(food_banana_2045)
##############################
From agent.py
walk_executor(table_127)
Robot find: mat_115, fork_2104, console_2027, crayon_2030, bowl_2096, bowl_2097, napkin_2014, plate_2105, drawing_118, Robot is close to the mat_115. Robot is close to the table_127. 
##############################
From agent.py
exp(food_banana_2045, table_127)
Fail to find food_banana_2045 around table_127. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_banana_2045, fridge_140)walk_executor(food_banana_2045)grab_executor(food_banana_2045)walk_executor(cutting_board_2080)put_executor(food_banana_2045, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_banana_2045)cut_executor(food_banana_2045)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_banana_2045, fridge_140)
Find food_banana_2045. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_banana_2045)walk_executor(cutting_board_2080)put_executor(food_banana_2045, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_banana_2045)cut_executor(food_banana_2045)
##############################
From agent.py
grab_executor(food_banana_2045)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. Grabbing food_banana_2045 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the food_banana_2045. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_banana_2045, cutting_board_2080)
Robot find: Robot is close to the food_banana_2045. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. cutting_board_2080 is close food_banana_2045. food_banana_2045 is close cutting_board_2080. food_banana_2045 is on cutting_board_2080. food_banana_2045 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_52)
Robot find: pot_54, Robot is close to the knifeblock_52. 
##############################
From agent.py
exp(knife_2036, knifeblock_52)
Fail to find knife_2036 around knifeblock_52. 
##############################
From agent.py-> find a plan in act()
walk_executor(curtain_199)open_executor(curtain_199)exp(knife_2036, curtain_199)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_banana_2045)cut_executor(food_banana_2045)
##############################
From agent.py
walk_executor(curtain_199)
Robot find: drawing_196, Robot is close to the curtain_199. 
##############################
From agent.py
open_executor(curtain_199)
Robot find: Robot is close to the curtain_199. curtain_199 is opened. 
##############################
From agent.py
exp(knife_2036, curtain_199)
Fail to find knife_2036 around curtain_199. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Peel and slice the bananas.', '2. Heat oil in a frying pan.', '3. Fry the sliced bananas until they are golden brown.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_banana_2045_around_kitchen_counter_129(food_banana:item):
    goal: not unknown(food_banana)
    body:
        assert is_food_banana(food_banana)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_banana,kitchen_counter_instance)
        else:
            exp(food_banana,kitchen_counter_instance)
    eff:
        unknown[food_banana]=False
        close[food_banana,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_banana]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior peel_and_slice_bananas(banana:item, cutting_board:item, knife:item):
    body:
        achieve_once on(banana, cutting_board) # Place the banana on the cutting board
        achieve cut(banana) # Peel and slice the banana

behavior __goal__():
    body:
        bind banana: item where:
            is_food_banana(banana)
        # Select a banana

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        peel_and_slice_bananas(banana, cutting_board, knife)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior peel_and_slice_bananas(banana:item, cutting_board:item, knife:item):
    body:
        achieve_once on(banana, cutting_board) # Place the banana on the cutting board
        achieve cut(banana) # Peel and slice the banana

behavior __goal__():
    body:
        bind banana: item where:
            is_food_banana(banana)
        # Select a banana

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        peel_and_slice_bananas(banana, cutting_board, knife)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_129)exp(food_banana_2045, kitchen_counter_129)walk_executor(food_banana_2045)grab_executor(food_banana_2045)walk_executor(cutting_board_2080)put_executor(food_banana_2045, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_banana_2045)cut_executor(food_banana_2045)
##############################
From agent.py
walk_executor(kitchen_counter_129)
Robot find: fryingpan_2107, oil_2102, pot_54, pot_2093, Robot is close to the kitchen_counter_129. 
##############################
From agent.py
exp(food_banana_2045, kitchen_counter_129)
Fail to find food_banana_2045 around kitchen_counter_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(food_banana_2045, cupboard_130)walk_executor(food_banana_2045)grab_executor(food_banana_2045)walk_executor(cutting_board_2080)put_executor(food_banana_2045, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_banana_2045)cut_executor(food_banana_2045)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(food_banana_2045, cupboard_130)
Fail to find food_banana_2045 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(food_banana_2045, kitchen_counter_128)walk_executor(food_banana_2045)grab_executor(food_banana_2045)walk_executor(cutting_board_2080)put_executor(food_banana_2045, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_banana_2045)cut_executor(food_banana_2045)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(food_banana_2045, kitchen_counter_128)
Fail to find food_banana_2045 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_banana_2045, fridge_140)walk_executor(food_banana_2045)grab_executor(food_banana_2045)walk_executor(cutting_board_2080)put_executor(food_banana_2045, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_banana_2045)cut_executor(food_banana_2045)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_banana_2045, fridge_140)
Find food_banana_2045. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_banana_2045)walk_executor(cutting_board_2080)put_executor(food_banana_2045, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_banana_2045)cut_executor(food_banana_2045)
##############################
From agent.py
grab_executor(food_banana_2045)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. Grabbing food_banana_2045 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the food_banana_2045. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_banana_2045, cutting_board_2080)
Robot find: Robot is close to the food_banana_2045. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. cutting_board_2080 is close food_banana_2045. food_banana_2045 is close cutting_board_2080. food_banana_2045 is on cutting_board_2080. food_banana_2045 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_52)
Robot find: Robot is close to the knifeblock_52. 
##############################
From agent.py
exp(knife_2036, knifeblock_52)
Fail to find knife_2036 around knifeblock_52. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(knife_2036, table_123)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_banana_2045)cut_executor(food_banana_2045)
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, laptop_2015, fork_2103, cup_2087, bowl_2095, drawing_118, Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
exp(knife_2036, table_123)
Fail to find knife_2036 around table_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(bed_264)exp(knife_2036, bed_264)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_banana_2045)cut_executor(food_banana_2045)
##############################
From agent.py
walk_executor(bed_264)
Robot find: clothes_scarf_2079, pillow_239, clothes_dress_2075, pillow_240, clothes_jacket_2078, mat_237, drawing_238, Robot is close to the bed_264. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find knife_2036 ?
Answer: Go to the dining room labeled as dining_room_1. Once inside, locate the dishwasher with the label dishwasher_143. The target item, knife_2036, is inside this dishwasher.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to the dining room labeled as dining_room_1. Once inside, locate the dishwasher with the label dishwasher_143. The target item, knife_2036, is inside this dishwasher.

The actions you have taken:
Action 1: Walk to kitchen_counter_129.
Action 2: look for food_banana_2045 around kitchen_counter_129.
Action 3: Walk to cupboard_130.
Action 4: look for food_banana_2045 around cupboard_130.
Action 5: Walk to kitchen_counter_128.
Action 6: look for food_banana_2045 around kitchen_counter_128.
Action 7: Walk to fridge_140.
Action 8: Switch off fridge_140.
Action 9: Open fridge_140.
Action 10: look for food_banana_2045 around fridge_140.
Action 11: Grab food_banana_2045.
Action 12: Walk to cutting_board_2080.
Action 13: Put food_banana_2045 on cutting_board_2080.
Action 14: Walk to knifeblock_52.
Action 15: look for knife_2036 around knifeblock_52.
Action 16: Walk to table_123.
Action 17: look for knife_2036 around table_123.
Action 18: Walk to bed_264.

##############################
From agent.py
exp(knife_2036, bed_264)
Fail to find knife_2036 around bed_264. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(knife_2036, dishwasher_143)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_banana_2045)cut_executor(food_banana_2045)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(knife_2036, dishwasher_143)
Find knife_2036. 
##############################
From agent.py-> find a plan in act()
grab_executor(knife_2036)walk_executor(food_banana_2045)cut_executor(food_banana_2045)
##############################
From agent.py
grab_executor(knife_2036)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. Grabbing knife_2036 by right hand. 
##############################
From agent.py
walk_executor(food_banana_2045)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_banana_2045. 
##############################
From agent.py
cut_executor(food_banana_2045)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_banana_2045. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2102_around_oil_2102(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind oil_instance:item where:
            is_oil(oil_instance) and id[oil_instance]==2102
        achieve close_char(char,oil_instance)
        if can_open(oil_instance):
            achieve_once open(oil_instance)
            exp(oil,oil_instance)
        else:
            exp(oil,oil_instance)
    eff:
        unknown[oil]=False
        close[oil,oil_instance]=True
        close[oil_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior heat_oil_in_frying_pan(oil:item, frying_pan:item):
    body:
        achieve_once inside(oil, frying_pan)
        achieve is_on(frying_pan)

behavior __goal__():
    body:
        bind oil: item where:
            is_oil(oil)
        # Select the oil

        bind frying_pan: item where:
            is_fryingpan(frying_pan)
        # Select the frying pan

        heat_oil_in_frying_pan(oil, frying_pan)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_washing_machine_2041(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_clothes_pants_2113_around_basket_for_clothes_2040(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_pants,basket_for_clothes_instance)
        else:
            exp(clothes_pants,basket_for_clothes_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_pants]=True
    

behavior find_oil_2005_around_oven_141(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(oil,oven_instance)
        else:
            exp(oil,oven_instance)
    eff:
        unknown[oil]=False
        close[oil,oven_instance]=True
        close[oven_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
def in_kitchen_counter(item: item):
    # Function to check if an item is on the kitchen counter
    symbol on_kitchen_counter = exists counter: item : (is_kitchen_counter(counter) and on(item, counter))
    return on_kitchen_counter

behavior heat_oil_in_pan(oil:item, pan:item, stove:item):
    body:
        achieve_once inside(oil, pan)
        # Pour oil into the frying pan
        achieve_once on(pan, stove)
        # Place the frying pan on the stove
        achieve is_on(stove)
        # Turn on the stove to heat the oil

behavior __goal__():
    body:
        bind oil: item where:
            is_oil(oil)
        # Select oil
        
        bind stove: item where:
            is_stove(stove) and in_kitchen_counter(stove)
        # Select a stove on the kitchen counter
        
        bind pan: item where:
            is_fryingpan(pan)
        # Select a frying pan

        heat_oil_in_pan(oil, pan, stove)
        # Heat oil in the frying pan on the stove

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def in_kitchen_counter(item: item):
    # Function to check if an item is on the kitchen counter
    symbol on_kitchen_counter = exists counter: item : (is_kitchen_counter(counter) and on(item, counter))
    return on_kitchen_counter

behavior heat_oil_in_pan(oil:item, pan:item, stove:item):
    body:
        achieve_once inside(oil, pan)
        # Pour oil into the frying pan
        achieve_once on(pan, stove)
        # Place the frying pan on the stove
        achieve is_on(stove)
        # Turn on the stove to heat the oil

behavior __goal__():
    body:
        bind oil: item where:
            is_oil(oil)
        # Select oil
        
        bind stove: item where:
            is_stove(stove) and in_kitchen_counter(stove)
        # Select a stove on the kitchen counter
        
        bind pan: item where:
            is_fryingpan(pan)
        # Select a frying pan

        heat_oil_in_pan(oil, pan, stove)
        # Heat oil in the frying pan on the stove

##############################
From agent.py-> find a plan in act()
walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(oil_2102)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the oil_2102. 
##############################
From agent.py
grab_executor(oil_2102)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the oil_2102. Grabbing oil_2102 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the oil_2102. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(oil_2102, fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the oil_2102. Robot is close to the fryingpan_2107. oil_2102 is close fryingpan_2107. oil_2102 is inside fryingpan_2107. fryingpan_2107 is close oil_2102. oil_2102 released by left hand. 
##############################
From agent.py
grab_executor(fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the oil_2102. Robot is close to the fryingpan_2107. Grabbing fryingpan_2107 by left hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(fryingpan_2107, stove_2090)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. fryingpan_2107 is on stove_2090. stove_2090 is close fryingpan_2107. fryingpan_2107 is close stove_2090. fryingpan_2107 released by left hand. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2005_around_sink_133(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(oil,sink_instance)
        else:
            exp(oil,sink_instance)
    eff:
        unknown[oil]=False
        close[oil,sink_instance]=True
        close[sink_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior fry_bananas(bananas:item, fryingpan:item, stove:item):
    body:
        achieve_once inside(bananas, fryingpan)
        achieve_once on(fryingpan, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind bananas: item where:
            is_food_banana(bananas)
        # Select the sliced bananas

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select the frying pan

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        fry_bananas(bananas, fryingpan, stove)
        # Fry the bananas until they are golden brown

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fry_bananas(bananas:item, fryingpan:item, stove:item):
    body:
        achieve_once inside(bananas, fryingpan)
        achieve_once on(fryingpan, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind bananas: item where:
            is_food_banana(bananas)
        # Select the sliced bananas

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select the frying pan

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        fry_bananas(bananas, fryingpan, stove)
        # Fry the bananas until they are golden brown

##############################
From agent.py-> find a plan in act()
walk_executor(food_banana_2045)grab_executor(food_banana_2045)walk_executor(fryingpan_2107)putin_executor(food_banana_2045, fryingpan_2107)
##############################
From agent.py
walk_executor(food_banana_2045)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_banana_2045. 
##############################
From agent.py
grab_executor(food_banana_2045)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_banana_2045. Grabbing food_banana_2045 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_banana_2045. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_banana_2045, fryingpan_2107)
Robot find: Robot is close to the knife_2036. Robot is close to the food_banana_2045. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. food_banana_2045 is close fryingpan_2107. food_banana_2045 is inside fryingpan_2107. fryingpan_2107 is close food_banana_2045. food_banana_2045 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make oil fried banana.
Action History:
['walk_executor(kitchen_counter_129)', 'walk_executor(cupboard_130)', 'walk_executor(kitchen_counter_128)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'grab_executor(food_banana_2045)', 'walk_executor(cutting_board_2080)', 'put_executor(food_banana_2045, cutting_board_2080)', 'walk_executor(knifeblock_52)', 'walk_executor(table_123)', 'walk_executor(bed_264)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'grab_executor(knife_2036)', 'walk_executor(food_banana_2045)', 'cut_executor(food_banana_2045)', 'walk_executor(oil_2102)', 'grab_executor(oil_2102)', 'walk_executor(fryingpan_2107)', 'putin_executor(oil_2102, fryingpan_2107)', 'grab_executor(fryingpan_2107)', 'walk_executor(stove_2090)', 'put_executor(fryingpan_2107, stove_2090)', 'switchon_executor(stove_2090)', 'walk_executor(food_banana_2045)', 'grab_executor(food_banana_2045)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_banana_2045, fryingpan_2107)']
Time info:
Time consume: 162 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 172
goal generate times: 4
goal correct times: 0
action_num: 29

Task complete rate:
1
Scene_id: 2
##############################
