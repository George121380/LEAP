From agent.py
Reset goals: The sub-goals are: 
['Find the book and put it on the coffe table in home office. Then prepare a cup of hot milk, put it on the table.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_milk_2074_around_fridge_140(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_cup_2087_around_fridge_140(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(cup,fridge_instance)
        else:
            exp(cup,fridge_instance)
    eff:
        unknown[cup]=False
        close[cup,fridge_instance]=True
        close[fridge_instance,cup]=True
    

behavior find_book_2091_around_bookshelf_372(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==372
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table) # Place the book on the coffee table

behavior prepare_hot_milk(cup:item, milk:item, stove:item):
    body:
        achieve_once inside(milk, cup)
        achieve has_water(milk) # To heat milk, ensure it is in a container with proper heat
        achieve is_on(stove) # Turn on the stove to heat

behavior place_cup_on_table(cup:item, table:item):
    body:
        achieve_once on(cup, table) # Place the cup on the coffee table

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)

        bind book: item where:
            is_book(book)

        bind table: item where:
            is_table(table) and inside(table, home_office) # Ensure the table is in the home office

        bind milk: item where:
            is_milk(milk)

        bind stove: item where:
            is_stove(stove)

        bind cup: item where:
            is_cup(cup)
        
        place_book_on_table(book, table)
        prepare_hot_milk(cup, milk, stove)
        place_cup_on_table(cup, table)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table) # Place the book on the coffee table

behavior prepare_hot_milk(cup:item, milk:item, stove:item):
    body:
        achieve_once inside(milk, cup)
        achieve has_water(milk) # To heat milk, ensure it is in a container with proper heat
        achieve is_on(stove) # Turn on the stove to heat

behavior place_cup_on_table(cup:item, table:item):
    body:
        achieve_once on(cup, table) # Place the cup on the coffee table

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)

        bind book: item where:
            is_book(book)

        bind table: item where:
            is_table(table) and inside(table, home_office) # Ensure the table is in the home office

        bind milk: item where:
            is_milk(milk)

        bind stove: item where:
            is_stove(stove)

        bind cup: item where:
            is_cup(cup)
        
        place_book_on_table(book, table)
        prepare_hot_milk(cup, milk, stove)
        place_cup_on_table(cup, table)

##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_372)open_executor(bookshelf_372)exp(book_2091, bookshelf_372)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(cup_2087, fridge_140)exp(milk_2074, fridge_140)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(table_193)put_executor(cup_2087, table_193)
##############################
From agent.py
walk_executor(bookshelf_372)
Robot find: stamp_2031, drawing_389, Robot is close to the bookshelf_372. 
##############################
From agent.py
open_executor(bookshelf_372)
Robot find: Robot is close to the bookshelf_372. bookshelf_372 is opened. 
##############################
From agent.py
exp(book_2091, bookshelf_372)
Fail to find book_2091 around bookshelf_372. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['Find the book and put it on the coffe table in home office. Then prepare a cup of hot milk, put it on the table.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2074_around_fridge_140(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_cup_2006_around_fridge_140(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(cup,fridge_instance)
        else:
            exp(cup,fridge_instance)
    eff:
        unknown[cup]=False
        close[cup,fridge_instance]=True
        close[fridge_instance,cup]=True
    

behavior find_book_2091_around_wallshelf_191(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==191
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(book,wallshelf_instance)
        else:
            exp(book,wallshelf_instance)
    eff:
        unknown[book]=False
        close[book,wallshelf_instance]=True
        close[wallshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
behavior find_and_place_book(book:item, table:item):
    body:
        achieve_once on(book, table) # Place the book on the coffee table

behavior prepare_hot_milk_and_place_on_table(milk:item, cup:item, table:item, stove:item):
    body:
        achieve_once inside(milk, cup)
        # Pour milk into the cup

        achieve on(cup, stove)
        # Place the cup on the stove

        achieve_once is_on(stove)
        # Turn on the stove to heat milk

        achieve_once on(cup, table)
        # Place the cup on the table

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        
        bind book: item where:
            is_book(book) and id[book] == 2091

        bind table: item where:
            is_table(table) and inside(table, home_office)

        bind milk: item where:
            is_milk(milk)

        bind cup: item where:
            is_cup(cup)

        bind stove: item where:
            is_stove(stove)

        find_and_place_book(book, table)
        prepare_hot_milk_and_place_on_table(milk, cup, table, stove)
#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2074_around_fridge_140(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_cup_2088_around_cupboard_131(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

behavior find_book_2091_around_bookshelf_260(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==260
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table) # Place the book on the coffee table

behavior prepare_hot_milk_cup(milk:item, cup:item):
    body:
        achieve_once has_water(cup)
        achieve_once inside(milk, cup)
        # Prepare hot milk in a cup

behavior place_cup_on_table(cup:item, table:item):
    body:
        achieve_once on(cup, table) # Place the cup on the table

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Identify the home office

        bind book: item where:
            is_book(book) and id[book] == 2091
        # Select the specific book with ID 2091

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table that is in the home office

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        place_book_on_table(book, table)
        prepare_hot_milk_cup(milk, cup)
        place_cup_on_table(cup, table)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table) # Place the book on the coffee table

behavior prepare_hot_milk_cup(milk:item, cup:item):
    body:
        achieve_once has_water(cup)
        achieve_once inside(milk, cup)
        # Prepare hot milk in a cup

behavior place_cup_on_table(cup:item, table:item):
    body:
        achieve_once on(cup, table) # Place the cup on the table

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Identify the home office

        bind book: item where:
            is_book(book) and id[book] == 2091
        # Select the specific book with ID 2091

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table that is in the home office

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        place_book_on_table(book, table)
        prepare_hot_milk_cup(milk, cup)
        place_cup_on_table(cup, table)

##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_260)open_executor(bookshelf_260)exp(book_2091, bookshelf_260)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)walk_executor(cupboard_131)open_executor(cupboard_131)exp(cup_2087, cupboard_131)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(milk_2074, fridge_140)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(table_193)put_executor(cup_2087, table_193)
##############################
From agent.py
walk_executor(bookshelf_260)
Robot find: drawing_238, chair_263, mat_237, Robot is close to the bookshelf_260. 
##############################
From agent.py
open_executor(bookshelf_260)
Robot find: Robot is close to the bookshelf_260. Robot is close to the photoframe_246. bookshelf_260 is opened. 
##############################
From agent.py
exp(book_2091, bookshelf_260)
Fail to find book_2091 around bookshelf_260. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['Find the book and put it on the coffe table in home office. Then prepare a cup of hot milk, put it on the table.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2074_around_fridge_140(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_cup_2087_around_kitchen_counter_129(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

behavior find_book_2091_around_bookshelf_189(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==189
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_book_on_coffee_table(book:item, coffee_table:item):
    body:
        achieve_once on(book, coffee_table)

behavior prepare_hot_milk(cup:item, milk:item, stove:item):
    body:
        achieve_once inside(milk, cup)
        # Pour milk into the cup
        achieve on(cup, stove)
        # Place the cup on the stove
        achieve is_on(stove)
        # Turn on the stove to heat the milk

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)

        bind book: item where:
            is_book(book) and id[book] == 2091
        
        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)

        bind milk: item where:
            is_milk(milk)

        bind cup: item where:
            is_cup(cup)
        
        bind stove: item where:
            is_stove(stove)

        place_book_on_coffee_table(book, coffee_table)
        prepare_hot_milk(cup, milk, stove)


#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior place_book_on_coffee_table(book:item, coffee_table:item):
    body:
        achieve_once on(book, coffee_table)

behavior prepare_hot_milk(cup:item, milk:item, stove:item):
    body:
        achieve_once inside(milk, cup)
        # Pour milk into the cup
        achieve on(cup, stove)
        # Place the cup on the stove
        achieve is_on(stove)
        # Turn on the stove to heat the milk

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)

        bind book: item where:
            is_book(book) and id[book] == 2091
        
        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)

        bind milk: item where:
            is_milk(milk)

        bind cup: item where:
            is_cup(cup)
        
        bind stove: item where:
            is_stove(stove)

        place_book_on_coffee_table(book, coffee_table)
        prepare_hot_milk(cup, milk, stove)


##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_189)open_executor(bookshelf_189)exp(book_2091, bookshelf_189)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)walk_executor(kitchen_counter_129)exp(cup_2087, kitchen_counter_129)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(milk_2074, fridge_140)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)grab_executor(cup_2087)walk_executor(stove_2090)put_executor(cup_2087, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(bookshelf_189)
Robot find: Robot is close to the bookshelf_189. 
##############################
From agent.py
open_executor(bookshelf_189)
Robot find: Robot is close to the bookshelf_189. bookshelf_189 is opened. 
##############################
From agent.py
exp(book_2091, bookshelf_189)
Fail to find book_2091 around bookshelf_189. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_187)exp(book_2091, wallshelf_187)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(cup_2087, fridge_140)exp(milk_2074, fridge_140)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)grab_executor(cup_2087)walk_executor(stove_2090)put_executor(cup_2087, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(wallshelf_187)
Robot find: Robot is close to the wallshelf_187. 
##############################
From agent.py
exp(book_2091, wallshelf_187)
Fail to find book_2091 around wallshelf_187. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_190)exp(book_2091, wallshelf_190)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(cup_2087, fridge_140)exp(milk_2074, fridge_140)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)grab_executor(cup_2087)walk_executor(stove_2090)put_executor(cup_2087, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(wallshelf_190)
Robot find: Robot is close to the wallshelf_190. 
##############################
From agent.py
exp(book_2091, wallshelf_190)
Fail to find book_2091 around wallshelf_190. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_188)open_executor(bookshelf_188)exp(book_2091, bookshelf_188)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(cup_2087, fridge_140)exp(milk_2074, fridge_140)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)grab_executor(cup_2087)walk_executor(stove_2090)put_executor(cup_2087, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(bookshelf_188)
Robot find: drawing_196, Robot is close to the bookshelf_188. 
##############################
From agent.py
open_executor(bookshelf_188)
Robot find: Robot is close to the bookshelf_188. bookshelf_188 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find book_2091 ?
Answer: Locate dining_room_1 and proceed inside. Look for bookshelf_136, which is within this room. book_2091 is on bookshelf_136.
Re-decompose: None

##############################
From agent.py
Human Instruction: Locate dining_room_1 and proceed inside. Look for bookshelf_136, which is within this room. book_2091 is on bookshelf_136.

The actions you have taken:
Action 1: Walk to bookshelf_372.
Action 2: Open bookshelf_372.
Action 3: look for book_2091 around bookshelf_372.
Action 4: Walk to bookshelf_260.
Action 5: Open bookshelf_260.
Action 6: look for book_2091 around bookshelf_260.
Action 7: Walk to bookshelf_189.
Action 8: Open bookshelf_189.
Action 9: look for book_2091 around bookshelf_189.
Action 10: Walk to wallshelf_187.
Action 11: look for book_2091 around wallshelf_187.
Action 12: Walk to wallshelf_190.
Action 13: look for book_2091 around wallshelf_190.
Action 14: Walk to bookshelf_188.
Action 15: Open bookshelf_188.

##############################
From agent.py
exp(book_2091, bookshelf_188)
Fail to find book_2091 around bookshelf_188. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "find the book and put it on the coffe table in home office. then prepare a cup of hot milk, put it on the table." ?
Answer: Find the book on the bookshelf and put it on the coffee table in the home office. Then, find the milk in the fridge, put it in a cup, put the cup in the microwave, and turn on the microwave. Finally, put the cup on the table in the home office.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2074_around_fridge_140(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_cup_2089_around_fridge_140(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(cup,fridge_instance)
        else:
            exp(cup,fridge_instance)
    eff:
        unknown[cup]=False
        close[cup,fridge_instance]=True
        close[fridge_instance,cup]=True
    

behavior find_book_2091_around_bookshelf_136(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==136
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table)

behavior prepare_hot_milk(milk:item, cup:item, microwave:item):
    body:
        achieve_once inside(milk, cup)
        achieve_once inside(cup, microwave)
        achieve_once closed(microwave)
        achieve_once is_on(microwave)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        
        bind bookshelf: item where:
            is_bookshelf(bookshelf) and inside(bookshelf, dining_room)

        bind book: item where:
            is_book(book) and id[book] == 2091

        bind home_office: item where:
            is_home_office(home_office)

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)

        bind milk: item where:
            is_milk(milk)

        bind cup: item where:
            is_cup(cup)

        bind microwave: item where:
            is_microwave(microwave)

        place_book_on_table(book, coffee_table)
        prepare_hot_milk(milk, cup, microwave)
        achieve_once on(cup, coffee_table)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table)

behavior prepare_hot_milk(milk:item, cup:item, microwave:item):
    body:
        achieve_once inside(milk, cup)
        achieve_once inside(cup, microwave)
        achieve_once closed(microwave)
        achieve_once is_on(microwave)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        
        bind bookshelf: item where:
            is_bookshelf(bookshelf) and inside(bookshelf, dining_room)

        bind book: item where:
            is_book(book) and id[book] == 2091

        bind home_office: item where:
            is_home_office(home_office)

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)

        bind milk: item where:
            is_milk(milk)

        bind cup: item where:
            is_cup(cup)

        bind microwave: item where:
            is_microwave(microwave)

        place_book_on_table(book, coffee_table)
        prepare_hot_milk(milk, cup, microwave)
        achieve_once on(cup, coffee_table)
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_136)exp(book_2091, bookshelf_136)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(cup_2087, fridge_140)exp(milk_2074, fridge_140)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(microwave_149)open_executor(microwave_149)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(microwave_149)putin_executor(cup_2087, microwave_149)close_executor(microwave_149)switchon_executor(microwave_149)switchoff_executor(microwave_149)open_executor(microwave_149)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(table_193)put_executor(cup_2087, table_193)
##############################
From agent.py
walk_executor(bookshelf_136)
Robot find: book_2091, Robot is close to the bookshelf_136. 
##############################
From agent.py
exp(book_2091, bookshelf_136)
Find book_2091. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(cup_2087, fridge_140)exp(milk_2074, fridge_140)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(microwave_149)open_executor(microwave_149)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(microwave_149)putin_executor(cup_2087, microwave_149)close_executor(microwave_149)switchon_executor(microwave_149)switchoff_executor(microwave_149)open_executor(microwave_149)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(table_193)put_executor(cup_2087, table_193)
##############################
From agent.py
walk_executor(book_2091)
Robot find: Robot is close to the bookshelf_136. Robot is close to the book_2091. 
##############################
From agent.py
grab_executor(book_2091)
Robot find: Robot is close to the bookshelf_136. Robot is close to the book_2091. Grabbing book_2091 by right hand. 
##############################
From agent.py
walk_executor(table_193)
Robot find: dvd_player_2000, pillow_195, laser_pointer_2025, mat_201, mouse_2112, chair_2119, oil_2005, keyboard_2111, Robot is close to the book_2091. Robot is close to the table_193. 
##############################
From agent.py
put_executor(book_2091, table_193)
Robot find: Robot is close to the book_2091. Robot is close to the table_193. book_2091 is on table_193. table_193 is close book_2091. book_2091 is close table_193. book_2091 released by right hand. 
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(cup_2087, fridge_140)
Fail to find cup_2087 around fridge_140. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(cup_2087, kitchen_counter_132)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(microwave_149)open_executor(microwave_149)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(microwave_149)putin_executor(cup_2087, microwave_149)close_executor(microwave_149)switchon_executor(microwave_149)switchoff_executor(microwave_149)open_executor(microwave_149)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(table_193)put_executor(cup_2087, table_193)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: pot_54, Robot is close to the kitchen_counter_132. 
##############################
From agent.py
exp(cup_2087, kitchen_counter_132)
Fail to find cup_2087 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(cup_2087, cupboard_131)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(microwave_149)open_executor(microwave_149)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(microwave_149)putin_executor(cup_2087, microwave_149)close_executor(microwave_149)switchon_executor(microwave_149)switchoff_executor(microwave_149)open_executor(microwave_149)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(table_193)put_executor(cup_2087, table_193)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(cup_2087, cupboard_131)
Fail to find cup_2087 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(cup_2087, cupboard_130)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(microwave_149)open_executor(microwave_149)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(microwave_149)putin_executor(cup_2087, microwave_149)close_executor(microwave_149)switchon_executor(microwave_149)switchoff_executor(microwave_149)open_executor(microwave_149)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(table_193)put_executor(cup_2087, table_193)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(cup_2087, cupboard_130)
Fail to find cup_2087 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(tablelamp_358)exp(cup_2087, tablelamp_358)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(microwave_149)open_executor(microwave_149)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(microwave_149)putin_executor(cup_2087, microwave_149)close_executor(microwave_149)switchon_executor(microwave_149)switchoff_executor(microwave_149)open_executor(microwave_149)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(table_193)put_executor(cup_2087, table_193)
##############################
From agent.py
walk_executor(tablelamp_358)
Robot find: mat_386, pillow_368, pillow_370, drawing_388, Robot is close to the bed_376. Robot is close to the tablelamp_358. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2087 ?
Answer: Locate cup_2087 inside dining_room_1. It is on top of table_123.
Re-decompose: None

##############################
From agent.py
Human Instruction: Locate dining_room_1 and proceed inside. Look for bookshelf_136, which is within this room. book_2091 is on bookshelf_136.
Locate cup_2087 inside dining_room_1. It is on top of table_123.

Human Guidance: Find the book on the bookshelf and put it on the coffee table in the home office. Then, find the milk in the fridge, put it in a cup, put the cup in the microwave, and turn on the microwave. Finally, put the cup on the table in the home office.
The actions you have taken:
Action 1: Walk to bookshelf_372.
Action 2: Open bookshelf_372.
Action 3: look for book_2091 around bookshelf_372.
Action 4: Walk to bookshelf_260.
Action 5: Open bookshelf_260.
Action 6: look for book_2091 around bookshelf_260.
Action 7: Walk to bookshelf_189.
Action 8: Open bookshelf_189.
Action 9: look for book_2091 around bookshelf_189.
Action 10: Walk to wallshelf_187.
Action 11: look for book_2091 around wallshelf_187.
Action 12: Walk to wallshelf_190.
Action 13: look for book_2091 around wallshelf_190.
Action 14: Walk to bookshelf_188.
Action 15: Open bookshelf_188.
Action 16: look for book_2091 around bookshelf_188.
Action 17: Walk to bookshelf_136.
Action 18: look for book_2091 around bookshelf_136.
Action 19: Walk to book_2091.
Action 20: Grab book_2091.
Action 21: Walk to table_193.
Action 22: Put book_2091 on table_193.
Action 23: Walk to fridge_140.
Action 24: Switch off fridge_140.
Action 25: Open fridge_140.
Action 26: look for cup_2087 around fridge_140.
Action 27: Walk to kitchen_counter_132.
Action 28: look for cup_2087 around kitchen_counter_132.
Action 29: Walk to cupboard_131.
Action 30: Open cupboard_131.
Action 31: look for cup_2087 around cupboard_131.
Action 32: Walk to cupboard_130.
Action 33: look for cup_2087 around cupboard_130.
Action 34: Walk to tablelamp_358.

##############################
From agent.py
exp(cup_2087, tablelamp_358)
Fail to find cup_2087 around tablelamp_358. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(cup_2087, table_123)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(microwave_149)open_executor(microwave_149)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(microwave_149)putin_executor(cup_2087, microwave_149)close_executor(microwave_149)switchon_executor(microwave_149)switchoff_executor(microwave_149)open_executor(microwave_149)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(table_193)put_executor(cup_2087, table_193)
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, laptop_2015, fork_2103, cup_2087, bowl_2095, drawing_118, Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
exp(cup_2087, table_123)
Find cup_2087. 
##############################
From agent.py-> find a plan in act()
walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(microwave_149)open_executor(microwave_149)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(microwave_149)putin_executor(cup_2087, microwave_149)close_executor(microwave_149)switchon_executor(microwave_149)switchoff_executor(microwave_149)open_executor(microwave_149)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(table_193)put_executor(cup_2087, table_193)
##############################
From agent.py
walk_executor(milk_2074)
Robot find: Robot is close to the milk_2074. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(milk_2074)
Robot find: Robot is close to the milk_2074. Robot is close to the fridge_140. Grabbing milk_2074 by right hand. 
##############################
From agent.py
walk_executor(cup_2087)
Robot find: Robot is close to the milk_2074. Robot is close to the table_123. Robot is close to the cup_2087. 
##############################
From agent.py
putin_executor(milk_2074, cup_2087)
Robot find: Robot is close to the milk_2074. Robot is close to the table_123. Robot is close to the cup_2087. milk_2074 is close cup_2087. milk_2074 is inside cup_2087. cup_2087 is close milk_2074. milk_2074 released by right hand. 
##############################
From agent.py
walk_executor(microwave_149)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. 
##############################
From agent.py
open_executor(microwave_149)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. microwave_149 is opened. 
##############################
From agent.py
walk_executor(cup_2087)
Robot find: Robot is close to the table_123. Robot is close to the cup_2087. 
##############################
From agent.py
grab_executor(cup_2087)
Robot find: Robot is close to the table_123. Robot is close to the cup_2087. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(microwave_149)
Robot find: Robot is close to the cup_2087. Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. 
##############################
From agent.py
putin_executor(cup_2087, microwave_149)
Robot find: Robot is close to the cup_2087. Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. microwave_149 is close cup_2087. cup_2087 is inside microwave_149. cup_2087 is close microwave_149. cup_2087 released by right hand. 
##############################
From agent.py
close_executor(microwave_149)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. microwave_149 is closed. 
##############################
From agent.py
switchon_executor(microwave_149)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. microwave_149 is turned on. 
##############################
From agent.py
switchoff_executor(microwave_149)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. microwave_149 is turned off. 
##############################
From agent.py
open_executor(microwave_149)
Robot find: Robot is close to the cup_2087. Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. microwave_149 is opened. 
##############################
From agent.py
walk_executor(cup_2087)
Robot find: Robot is close to the cup_2087. Robot is close to the microwave_149. 
##############################
From agent.py
grab_executor(cup_2087)
Robot find: Robot is close to the cup_2087. Robot is close to the microwave_149. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(table_193)
Robot find: Robot is close to the cup_2087. Robot is close to the table_193. 
##############################
From agent.py
put_executor(cup_2087, table_193)
Robot find: Robot is close to the cup_2087. Robot is close to the table_193. table_193 is close cup_2087. cup_2087 is close table_193. cup_2087 is on table_193. cup_2087 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Find the book and put it on the coffe table in home office. Then prepare a cup of hot milk, put it on the table.
Action History:
['walk_executor(bookshelf_372)', 'open_executor(bookshelf_372)', 'walk_executor(bookshelf_260)', 'open_executor(bookshelf_260)', 'walk_executor(bookshelf_189)', 'open_executor(bookshelf_189)', 'walk_executor(wallshelf_187)', 'walk_executor(wallshelf_190)', 'walk_executor(bookshelf_188)', 'open_executor(bookshelf_188)', 'walk_executor(bookshelf_136)', 'walk_executor(book_2091)', 'grab_executor(book_2091)', 'walk_executor(table_193)', 'put_executor(book_2091, table_193)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'walk_executor(kitchen_counter_132)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(cupboard_130)', 'walk_executor(tablelamp_358)', 'walk_executor(table_123)', 'walk_executor(milk_2074)', 'grab_executor(milk_2074)', 'walk_executor(cup_2087)', 'putin_executor(milk_2074, cup_2087)', 'walk_executor(microwave_149)', 'open_executor(microwave_149)', 'walk_executor(cup_2087)', 'grab_executor(cup_2087)', 'walk_executor(microwave_149)', 'putin_executor(cup_2087, microwave_149)', 'close_executor(microwave_149)', 'switchon_executor(microwave_149)', 'switchoff_executor(microwave_149)', 'open_executor(microwave_149)', 'walk_executor(cup_2087)', 'grab_executor(cup_2087)', 'walk_executor(table_193)', 'put_executor(cup_2087, table_193)']
Time info:
Time consume: 335 seconds
Exp_helper query times: 2
Guidance query times: 1
library scale: 24
goal generate times: 5
goal correct times: 0
action_num: 42

Task complete rate:
1
Scene_id: 2
##############################
