From agent.py
Reset goals: The sub-goals are: 
['Vacuum the floor by push and pull the vacuume clearner.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2139_around_home_office_241(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(vacuum_cleaner,home_office_instance)
        else:
            exp(vacuum_cleaner,home_office_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,home_office_instance]=True
        close[home_office_instance,vacuum_cleaner]=True
    

#exp_behavior_end

#goal_representation
 
behavior plug_and_turn_on_vacuum_cleaner(vacuum_cleaner:item, power_socket:item):
    body:
        achieve_once plugged(vacuum_cleaner)
        achieve is_on(vacuum_cleaner)

behavior vacuum_floor(vacuum_cleaner:item, floor:item):
    body:
        achieve_once close_char(char, vacuum_cleaner)
        achieve_once clean(floor)

behavior unplug_and_turn_off_vacuum_cleaner(vacuum_cleaner:item):
    body:
        achieve_once is_off(vacuum_cleaner)
        achieve_once unplugged(vacuum_cleaner)

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner)

        bind power_socket: item where:
            is_powersocket(power_socket)

        bind floor: item where:
            is_floor(floor)

        plug_and_turn_on_vacuum_cleaner(vacuum_cleaner, power_socket)
        vacuum_floor(vacuum_cleaner, floor)
        unplug_and_turn_off_vacuum_cleaner(vacuum_cleaner)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2139_around_basket_for_clothes_2078(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(vacuum_cleaner,basket_for_clothes_instance)
        else:
            exp(vacuum_cleaner,basket_for_clothes_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,vacuum_cleaner]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_vacuum_cleaner(vacuum_cleaner:item):
    body:
        achieve plugged(vacuum_cleaner)
        achieve is_on(vacuum_cleaner)

behavior vacuum_floor(vacuum_cleaner:item, floor:item):
    body:
        achieve_once close_char(char, vacuum_cleaner)
        achieve_once close_char(char, floor)

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner)
        # Select a vacuum cleaner

        bind floor: item where:
            is_floor(floor)
        # Select the floor to be vacuumed

        prepare_vacuum_cleaner(vacuum_cleaner)
        vacuum_floor(vacuum_cleaner, floor)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior prepare_vacuum_cleaner(vacuum_cleaner:item):
    body:
        achieve plugged(vacuum_cleaner)
        achieve is_on(vacuum_cleaner)

behavior vacuum_floor(vacuum_cleaner:item, floor:item):
    body:
        achieve_once close_char(char, vacuum_cleaner)
        achieve_once close_char(char, floor)

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner)
        # Select a vacuum cleaner

        bind floor: item where:
            is_floor(floor)
        # Select the floor to be vacuumed

        prepare_vacuum_cleaner(vacuum_cleaner)
        vacuum_floor(vacuum_cleaner, floor)

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2078)exp(vacuum_cleaner_2139, basket_for_clothes_2078)walk_executor(vacuum_cleaner_2139)plugin_executor(vacuum_cleaner_2139)switchon_executor(vacuum_cleaner_2139)walk_executor(floor_10)
##############################
From agent.py
walk_executor(basket_for_clothes_2078)
Robot find: clothes_pants_2157, clothes_shirt_2158, clothes_socks_2159, clothes_skirt_2160, Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the clothes_socks_2159. Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. 
##############################
From agent.py
exp(vacuum_cleaner_2139, basket_for_clothes_2078)
Fail to find vacuum_cleaner_2139 around basket_for_clothes_2078. 
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2079)open_executor(washing_machine_2079)exp(vacuum_cleaner_2139, washing_machine_2079)walk_executor(vacuum_cleaner_2139)plugin_executor(vacuum_cleaner_2139)switchon_executor(vacuum_cleaner_2139)walk_executor(floor_10)
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. 
##############################
From agent.py
open_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is opened. 
##############################
From agent.py
exp(vacuum_cleaner_2139, washing_machine_2079)
Fail to find vacuum_cleaner_2139 around washing_machine_2079. 
##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2144)exp(vacuum_cleaner_2139, ironing_board_2144)walk_executor(vacuum_cleaner_2139)plugin_executor(vacuum_cleaner_2139)switchon_executor(vacuum_cleaner_2139)walk_executor(floor_10)
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot find: Robot is close to the ironing_board_2144. 
##############################
From agent.py
exp(vacuum_cleaner_2139, ironing_board_2144)
Fail to find vacuum_cleaner_2139 around ironing_board_2144. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_270)exp(vacuum_cleaner_2139, table_270)walk_executor(vacuum_cleaner_2139)plugin_executor(vacuum_cleaner_2139)switchon_executor(vacuum_cleaner_2139)walk_executor(floor_10)
##############################
From agent.py
walk_executor(table_270)
Robot find: shoes_2033, shampoo_2019, pillow_286, pencil_2014, phone_2017, pillow_287, drawing_288, brush_2002, Robot is close to the couch_269. Robot is close to the table_270. 
##############################
From agent.py
exp(vacuum_cleaner_2139, table_270)
Fail to find vacuum_cleaner_2139 around table_270. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(vacuum_cleaner_2139, kitchen_counter_123)walk_executor(vacuum_cleaner_2139)plugin_executor(vacuum_cleaner_2139)switchon_executor(vacuum_cleaner_2139)walk_executor(floor_10)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Robot find: tray_2068, oil_2149, knife_2035, food_kiwi_2054, food_orange_2027, Robot is close to the kitchen_counter_123. 
##############################
From agent.py
exp(vacuum_cleaner_2139, kitchen_counter_123)
Fail to find vacuum_cleaner_2139 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(vacuum_cleaner_2139, kitchen_counter_122)walk_executor(vacuum_cleaner_2139)plugin_executor(vacuum_cleaner_2139)switchon_executor(vacuum_cleaner_2139)walk_executor(floor_10)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, pot_78, fryingpan_2154, Robot is close to the kitchen_counter_122. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find vacuum_cleaner_2139 ?
Answer: Go to dining_room_41. Look for trashcan_99; the vacuum_cleaner_2139 is close to it.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_41. Look for trashcan_99; the vacuum_cleaner_2139 is close to it.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2078.
Action 2: look for vacuum_cleaner_2139 around basket_for_clothes_2078.
Action 3: Walk to washing_machine_2079.
Action 4: Open washing_machine_2079.
Action 5: look for vacuum_cleaner_2139 around washing_machine_2079.
Action 6: Walk to ironing_board_2144.
Action 7: look for vacuum_cleaner_2139 around ironing_board_2144.
Action 8: Walk to table_270.
Action 9: look for vacuum_cleaner_2139 around table_270.
Action 10: Walk to kitchen_counter_123.
Action 11: look for vacuum_cleaner_2139 around kitchen_counter_123.
Action 12: Walk to kitchen_counter_122.

##############################
From agent.py
exp(vacuum_cleaner_2139, kitchen_counter_122)
Fail to find vacuum_cleaner_2139 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(trashcan_99)exp(vacuum_cleaner_2139, trashcan_99)walk_executor(vacuum_cleaner_2139)plugin_executor(vacuum_cleaner_2139)switchon_executor(vacuum_cleaner_2139)walk_executor(floor_10)
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: food_orange_2061, food_onion_2009, glue_2045, vacuum_cleaner_2139, Robot is close to the trashcan_99. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. 
##############################
From agent.py
exp(vacuum_cleaner_2139, trashcan_99)
Find vacuum_cleaner_2139. 
##############################
From agent.py-> find a plan in act()
walk_executor(vacuum_cleaner_2139)plugin_executor(vacuum_cleaner_2139)switchon_executor(vacuum_cleaner_2139)walk_executor(floor_10)
##############################
From agent.py
walk_executor(vacuum_cleaner_2139)
Robot find: Robot is close to the vacuum_cleaner_2139. 
##############################
From agent.py
plugin_executor(vacuum_cleaner_2139)
Robot find: Robot is close to the vacuum_cleaner_2139. vacuum_cleaner_2139 is plugged in. 
##############################
From agent.py
switchon_executor(vacuum_cleaner_2139)
Robot find: Robot is close to the vacuum_cleaner_2139. vacuum_cleaner_2139 is turned on. 
##############################
From agent.py
walk_executor(floor_10)
Robot find: 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to perform the push and pull actions to vacuum the floor.
##############################
From agent.py
Human Instruction: The robot needs to perform the push and pull actions to vacuum the floor.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2078.
Action 2: look for vacuum_cleaner_2139 around basket_for_clothes_2078.
Action 3: Walk to washing_machine_2079.
Action 4: Open washing_machine_2079.
Action 5: look for vacuum_cleaner_2139 around washing_machine_2079.
Action 6: Walk to ironing_board_2144.
Action 7: look for vacuum_cleaner_2139 around ironing_board_2144.
Action 8: Walk to table_270.
Action 9: look for vacuum_cleaner_2139 around table_270.
Action 10: Walk to kitchen_counter_123.
Action 11: look for vacuum_cleaner_2139 around kitchen_counter_123.
Action 12: Walk to kitchen_counter_122.
Action 13: look for vacuum_cleaner_2139 around kitchen_counter_122.
Action 14: Walk to trashcan_99.
Action 15: look for vacuum_cleaner_2139 around trashcan_99.
Action 16: Walk to vacuum_cleaner_2139.
Action 17: Plug in vacuum_cleaner_2139.
Action 18: Switch on vacuum_cleaner_2139.
Action 19: Walk to floor_10.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_rag_2052_around_bathroom_counter_18(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(rag,bathroom_counter_instance)
        else:
            exp(rag,bathroom_counter_instance)
    eff:
        unknown[rag]=False
        close[rag,bathroom_counter_instance]=True
        close[bathroom_counter_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior locate_vacuum_cleaner(vacuum_cleaner:item):
    body:
        achieve close_char(char, vacuum_cleaner)

behavior operate_vacuum_cleaner(vacuum_cleaner:item):
    body:
        achieve_once plugged(vacuum_cleaner)
        # Ensure the vacuum cleaner is plugged in before switching it on
        achieve is_on(vacuum_cleaner)
        # Turn on the vacuum cleaner

behavior vacuum_floor(vacuum_cleaner:item, floor:item):
    body:
        achieve close_char(char, floor)
        # Ensure the character is close to the floor being vacuumed
        push(vacuum_cleaner)
        pull(vacuum_cleaner)

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner)
        # Select the vacuum cleaner

        bind floor: item where:
            is_floor(floor)
        # Select the floor

        locate_vacuum_cleaner(vacuum_cleaner)
        operate_vacuum_cleaner(vacuum_cleaner)
        vacuum_floor(vacuum_cleaner, floor)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2125_around_bathroom_counter_18(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_rag_2052_around_bathroom_counter_18(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(rag,bathroom_counter_instance)
        else:
            exp(rag,bathroom_counter_instance)
    eff:
        unknown[rag]=False
        close[rag,bathroom_counter_instance]=True
        close[bathroom_counter_instance,rag]=True
    

#exp_behavior_end

#goal_representation
 
behavior push_and_pull_vacuum_cleaner(vacuum_cleaner:item):
    body:
        push(vacuum_cleaner)
        pull(vacuum_cleaner)
        # Perform push and pull actions to vacuum the floor

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner)
        # Select the vacuum cleaner

        achieve plugged(vacuum_cleaner)
        # Ensure the vacuum cleaner is plugged in

        achieve is_on(vacuum_cleaner)
        # Ensure the vacuum cleaner is turned on

        push_and_pull_vacuum_cleaner(vacuum_cleaner)
        # Execute the behavior to vacuum the floor by pushing and pulling the cleaner

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior push_and_pull_vacuum_cleaner(vacuum_cleaner:item):
    body:
        push(vacuum_cleaner)
        pull(vacuum_cleaner)
        # Perform push and pull actions to vacuum the floor

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner)
        # Select the vacuum cleaner

        achieve plugged(vacuum_cleaner)
        # Ensure the vacuum cleaner is plugged in

        achieve is_on(vacuum_cleaner)
        # Ensure the vacuum cleaner is turned on

        push_and_pull_vacuum_cleaner(vacuum_cleaner)
        # Execute the behavior to vacuum the floor by pushing and pulling the cleaner

##############################
From agent.py-> find a plan in act()
walk_executor(vacuum_cleaner_2139)push_executor(vacuum_cleaner_2139)pull_executor(vacuum_cleaner_2139)
##############################
From agent.py
walk_executor(vacuum_cleaner_2139)
Robot find: Robot is close to the vacuum_cleaner_2139. 
##############################
From agent.py
push_executor(vacuum_cleaner_2139)
Robot find: Robot is close to the vacuum_cleaner_2139. 
##############################
From agent.py
pull_executor(vacuum_cleaner_2139)
Robot find: Robot is close to the vacuum_cleaner_2139. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Vacuum the floor by push and pull the vacuume clearner.
Action History:
['walk_executor(basket_for_clothes_2078)', 'walk_executor(washing_machine_2079)', 'open_executor(washing_machine_2079)', 'walk_executor(ironing_board_2144)', 'walk_executor(table_270)', 'walk_executor(kitchen_counter_123)', 'walk_executor(kitchen_counter_122)', 'walk_executor(trashcan_99)', 'walk_executor(vacuum_cleaner_2139)', 'plugin_executor(vacuum_cleaner_2139)', 'switchon_executor(vacuum_cleaner_2139)', 'walk_executor(floor_10)', 'walk_executor(vacuum_cleaner_2139)', 'push_executor(vacuum_cleaner_2139)', 'pull_executor(vacuum_cleaner_2139)']
Time info:
Time consume: 123 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 30
goal generate times: 4
goal correct times: 0
action_num: 15

Task complete rate:
Keystate: k1 - Requires: 1 steps
Action Completion Rate: 1.0
Scene_id: 1
##############################
