From agent.py
Reset goals: The sub-goals are: 
['Find the book and put it on the coffee table in home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2137_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table) # Place the book on the coffee table

behavior verify_table_location(table:item):
    body:
        observe(table, "Check if the table is inside the home office")

behavior move_book_to_correct_table(book:item, table:item):
    body:
        achieve inside(book, table)
        achieve_once on(book, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        
        bind book: item where:
            is_book(book)
        
        bind coffee_table: item where:
            is_table(coffee_table)
        
        verify_table_location(coffee_table)
        
        if not inside(coffee_table, home_office):
            move_book_to_correct_table(book, coffee_table)
        else:
            place_book_on_table(book, coffee_table)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table) # Place the book on the coffee table

behavior verify_table_location(table:item):
    body:
        observe(table, "Check if the table is inside the home office")

behavior move_book_to_correct_table(book:item, table:item):
    body:
        achieve inside(book, table)
        achieve_once on(book, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        
        bind book: item where:
            is_book(book)
        
        bind coffee_table: item where:
            is_table(coffee_table)
        
        verify_table_location(coffee_table)
        
        if not inside(coffee_table, home_office):
            move_book_to_correct_table(book, coffee_table)
        else:
            place_book_on_table(book, coffee_table)

##############################
From agent.py-> find a plan in act()
walk_executor(table_270)obs(table_270, Check if the table is inside the home office)walk_executor(bookshelf_124)open_executor(bookshelf_124)exp(book_2136, bookshelf_124)walk_executor(book_2136)grab_executor(book_2136)walk_executor(table_270)put_executor(book_2136, table_270)
##############################
From agent.py
walk_executor(table_270)
Robot find: shoes_2033, shampoo_2019, pillow_286, pencil_2014, phone_2017, pillow_287, drawing_288, brush_2002, Robot is close to the couch_269. Robot is close to the table_270. 
##############################
From agent.py
obs(table_270, Check if the table is inside the home office)
Get this information:  shampoo_2019 is on table_270. pencil_2014 is on table_270. orchid_285 is on table_270. table_270 is inside home_office_241. table_270 is inside couch_269. table_270 is close to shampoo_2019. table_270 is close to floor_264. table_270 is close to floor_265. table_270 is close to floor_266. table_270 is close to floor_267. table_270 is close to couch_269. table_270 is close to wall_248. table_270 is close to pillow_286. table_270 is close to orchid_285. table_270 is close to pencil_2014. table_270 is close to pillow_287. table_270 is close to character_240. table_270 is facing drawing_288. table_270 is facing television_281. table_270 is facing computer_276. table_270 is CLEAN.
##############################
From agent.py
walk_executor(bookshelf_124)
Robot find: book_2136, envelope_2055, book_2137, drawing_110, drawing_111, Robot is close to the bookshelf_124. 
##############################
From agent.py
open_executor(bookshelf_124)
Robot find: Robot is close to the bookshelf_124. bookshelf_124 is opened. 
##############################
From agent.py
exp(book_2136, bookshelf_124)
Find book_2136. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_270)obs(table_270, Check if the table is inside the home office)walk_executor(book_2136)grab_executor(book_2136)walk_executor(table_270)put_executor(book_2136, table_270)
##############################
From agent.py
walk_executor(table_270)
Robot find: Robot is close to the couch_269. Robot is close to the table_270. 
##############################
From agent.py
obs(table_270, Check if the table is inside the home office)
Get this information:  shampoo_2019 is on table_270. pencil_2014 is on table_270. orchid_285 is on table_270. table_270 is inside home_office_241. table_270 is inside couch_269. table_270 is close to shampoo_2019. table_270 is close to floor_264. table_270 is close to floor_265. table_270 is close to floor_266. table_270 is close to floor_267. table_270 is close to couch_269. table_270 is close to wall_248. table_270 is close to pillow_286. table_270 is close to orchid_285. table_270 is close to pencil_2014. table_270 is close to pillow_287. table_270 is close to character_240. table_270 is facing drawing_288. table_270 is facing television_281. table_270 is facing computer_276. table_270 is CLEAN.
##############################
From agent.py
walk_executor(book_2136)
Robot find: Robot is close to the book_2136. Robot is close to the bookshelf_124. 
##############################
From agent.py
grab_executor(book_2136)
Robot find: Robot is close to the book_2136. Robot is close to the bookshelf_124. Grabbing book_2136 by right hand. 
##############################
From agent.py
walk_executor(table_270)
Robot find: Robot is close to the book_2136. Robot is close to the couch_269. Robot is close to the table_270. 
##############################
From agent.py
put_executor(book_2136, table_270)
Robot find: Robot is close to the book_2136. Robot is close to the couch_269. Robot is close to the table_270. book_2136 is on table_270. table_270 is close book_2136. book_2136 is close table_270. book_2136 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Find the book and put it on the coffee table in home office.
Action History:
['walk_executor(table_270)', 'walk_executor(bookshelf_124)', 'open_executor(bookshelf_124)', 'walk_executor(table_270)', 'walk_executor(book_2136)', 'grab_executor(book_2136)', 'walk_executor(table_270)', 'put_executor(book_2136, table_270)']
Time info:
Time consume: 27 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 105
goal generate times: 1
goal correct times: 0
action_num: 8

Task complete rate:
1
Scene_id: 1
##############################
