From agent.py
Reset goals: The sub-goals are: 
['Iron a shirt, and put it in on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2158_around_basket_for_clothes_2078(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_shirt,basket_for_clothes_instance)
        else:
            exp(clothes_shirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_shirt]=True
    

behavior find_iron_2161_around_ironing_board_2144(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2144
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior plug_in_and_turn_on_iron(iron:item, socket:item):
    body:
        achieve_once plugged(iron)
        achieve_once is_on(iron)

behavior iron_shirt(shirt:item, iron:item):
    body:
        achieve_once inhand(shirt)
        achieve clean(shirt)

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)

        bind socket: item where:
            is_powersocket(socket)

        bind shirt: item where:
            is_clothes_shirt(shirt)

        bind bed: item where:
            is_bed(bed)

        plug_in_and_turn_on_iron(iron, socket)
        iron_shirt(shirt, iron)
        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior plug_in_and_turn_on_iron(iron:item, socket:item):
    body:
        achieve_once plugged(iron)
        achieve_once is_on(iron)

behavior iron_shirt(shirt:item, iron:item):
    body:
        achieve_once inhand(shirt)
        achieve clean(shirt)

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)

        bind socket: item where:
            is_powersocket(socket)

        bind shirt: item where:
            is_clothes_shirt(shirt)

        bind bed: item where:
            is_bed(bed)

        plug_in_and_turn_on_iron(iron, socket)
        iron_shirt(shirt, iron)
        place_shirt_on_bed(shirt, bed)

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2144)exp(iron_2161, ironing_board_2144)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(basket_for_clothes_2078)exp(clothes_shirt_2158, basket_for_clothes_2078)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot find: Robot is close to the ironing_board_2144. 
##############################
From agent.py
exp(iron_2161, ironing_board_2144)
Fail to find iron_2161 around ironing_board_2144. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2078)exp(iron_2161, basket_for_clothes_2078)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(basket_for_clothes_2078)exp(clothes_shirt_2158, basket_for_clothes_2078)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(basket_for_clothes_2078)
Robot find: clothes_pants_2157, clothes_shirt_2158, clothes_socks_2159, clothes_skirt_2160, Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the clothes_socks_2159. Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. 
##############################
From agent.py
exp(iron_2161, basket_for_clothes_2078)
Fail to find iron_2161 around basket_for_clothes_2078. 
##############################
From agent.py-> find a plan in act()
walk_executor(light_73)exp(iron_2161, light_73)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(light_73)
Robot find: Robot is close to the light_73. 
##############################
From agent.py
exp(iron_2161, light_73)
Fail to find iron_2161 around light_73. 
##############################
From agent.py-> find a plan in act()
walk_executor(bed_197)exp(iron_2161, bed_197)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(bed_197)
Robot find: pillow_208, clothes_scarf_2120, clothes_underwear_2121, drawing_201, clothes_dress_2116, pillow_207, Robot is close to the bed_197. 
##############################
From agent.py
exp(iron_2161, bed_197)
Fail to find iron_2161 around bed_197. 
##############################
From agent.py-> find a plan in act()
walk_executor(dresser_274)open_executor(dresser_274)exp(iron_2161, dresser_274)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(dresser_274)
Robot find: Robot is close to the dresser_274. 
##############################
From agent.py
open_executor(dresser_274)
Robot find: hanger_292, hanger_293, hanger_294, blow_dryer_2057, cat_2069, check_2075, clothes_pants_2036, Robot is close to the hanger_292. Robot is close to the hanger_293. Robot is close to the hanger_294. Robot is close to the blow_dryer_2057. Robot is close to the dresser_274. Robot is close to the cat_2069. Robot is close to the check_2075. dresser_274 is opened. 
##############################
From agent.py
exp(iron_2161, dresser_274)
Fail to find iron_2161 around dresser_274. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_199)exp(iron_2161, table_199)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(table_199)
Robot find: wooden_spoon_2000, mat_203, tea_bag_2023, drawing_202, Robot is close to the table_199. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find iron_2161 ?
Answer: Robot, you can find iron_2161 inside dining_room_41. It is on top of bowl_2142. Look for bowl_2142, and you will find iron_2161 positioned directly on it.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, you can find iron_2161 inside dining_room_41. It is on top of bowl_2142. Look for bowl_2142, and you will find iron_2161 positioned directly on it.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for iron_2161 around ironing_board_2144.
Action 3: Walk to basket_for_clothes_2078.
Action 4: look for iron_2161 around basket_for_clothes_2078.
Action 5: Walk to light_73.
Action 6: look for iron_2161 around light_73.
Action 7: Walk to bed_197.
Action 8: look for iron_2161 around bed_197.
Action 9: Walk to dresser_274.
Action 10: Open dresser_274.
Action 11: look for iron_2161 around dresser_274.
Action 12: Walk to table_199.

##############################
From agent.py
exp(iron_2161, table_199)
Fail to find iron_2161 around table_199. 
##############################
From agent.py-> find a plan in act()
walk_executor(curtain_289)exp(iron_2161, curtain_289)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(curtain_289)
Robot find: pillow_287, Robot is close to the curtain_289. Robot is close to the curtain_290. 
##############################
From agent.py
exp(iron_2161, curtain_289)
Fail to find iron_2161 around curtain_289. 
##############################
From agent.py-> find a plan in act()
walk_executor(desk_272)exp(iron_2161, desk_272)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(desk_272)
Robot find: stamp_2022, phone_2147, mouse_280, keyboard_278, headset_2146, chair_271, stamp_2043, Robot is close to the desk_272. 
##############################
From agent.py
exp(iron_2161, desk_272)
Fail to find iron_2161 around desk_272. 
##############################
From agent.py-> find a plan in act()
walk_executor(trashcan_99)exp(iron_2161, trashcan_99)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: food_orange_2061, food_onion_2009, glue_2045, vacuum_cleaner_2139, Robot is close to the trashcan_99. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. 
##############################
From agent.py
exp(iron_2161, trashcan_99)
Fail to find iron_2161 around trashcan_99. 
##############################
From agent.py-> find a plan in act()
walk_executor(pillow_208)exp(iron_2161, pillow_208)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(pillow_208)
Robot find: Robot is close to the pillow_208. Robot is close to the bed_197. 
##############################
From agent.py
exp(iron_2161, pillow_208)
Fail to find iron_2161 around pillow_208. 
##############################
From agent.py-> find a plan in act()
walk_executor(walllamp_140)exp(iron_2161, walllamp_140)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(walllamp_140)
Robot find: Robot is close to the walllamp_140. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find iron_2161 ?
Answer: Robot, please go to the dining room (dining_room_41). Once there, locate the bowl labeled bowl_2142. The iron, labeled iron_2161, is on top of this bowl. Use the presence of the bowl_2142 to help identify the exact location of the iron_2161.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, you can find iron_2161 inside dining_room_41. It is on top of bowl_2142. Look for bowl_2142, and you will find iron_2161 positioned directly on it.
Robot, please go to the dining room (dining_room_41). Once there, locate the bowl labeled bowl_2142. The iron, labeled iron_2161, is on top of this bowl. Use the presence of the bowl_2142 to help identify the exact location of the iron_2161.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for iron_2161 around ironing_board_2144.
Action 3: Walk to basket_for_clothes_2078.
Action 4: look for iron_2161 around basket_for_clothes_2078.
Action 5: Walk to light_73.
Action 6: look for iron_2161 around light_73.
Action 7: Walk to bed_197.
Action 8: look for iron_2161 around bed_197.
Action 9: Walk to dresser_274.
Action 10: Open dresser_274.
Action 11: look for iron_2161 around dresser_274.
Action 12: Walk to table_199.
Action 13: look for iron_2161 around table_199.
Action 14: Walk to curtain_289.
Action 15: look for iron_2161 around curtain_289.
Action 16: Walk to desk_272.
Action 17: look for iron_2161 around desk_272.
Action 18: Walk to trashcan_99.
Action 19: look for iron_2161 around trashcan_99.
Action 20: Walk to pillow_208.
Action 21: look for iron_2161 around pillow_208.
Action 22: Walk to walllamp_140.

##############################
From agent.py
exp(iron_2161, walllamp_140)
Fail to find iron_2161 around walllamp_140. 
##############################
From agent.py-> find a plan in act()
walk_executor(toaster_132)open_executor(toaster_132)exp(iron_2161, toaster_132)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(toaster_132)
Robot find: pot_78, spectacles_2153, fryingpan_2154, Robot is close to the kitchen_counter_122. Robot is close to the toaster_132. 
##############################
From agent.py
open_executor(toaster_132)
Robot find: Robot is close to the kitchen_counter_122. Robot is close to the toaster_132. toaster_132 is opened. 
##############################
From agent.py
exp(iron_2161, toaster_132)
Fail to find iron_2161 around toaster_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(mat_203)exp(iron_2161, mat_203)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(mat_203)
Robot find: shoe_rack_2044, Robot is close to the mat_203. 
##############################
From agent.py
exp(iron_2161, mat_203)
Fail to find iron_2161 around mat_203. 
##############################
From agent.py-> find a plan in act()
walk_executor(oven_127)open_executor(oven_127)exp(iron_2161, oven_127)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(oven_127)
Robot find: food_food_2064, Robot is close to the oven_127. 
##############################
From agent.py
open_executor(oven_127)
Robot find: tray_128, food_cheese_2072, oil_2013, food_carrot_2015, Robot is close to the tray_128. Robot is close to the food_cheese_2072. Robot is close to the oven_127. Robot is close to the oil_2013. Robot is close to the food_carrot_2015. oven_127 is opened. 
##############################
From agent.py
exp(iron_2161, oven_127)
Fail to find iron_2161 around oven_127. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(iron_2161, cupboard_117)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(iron_2161, cupboard_117)
Fail to find iron_2161 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(wooden_spoon_2000)exp(iron_2161, wooden_spoon_2000)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(wooden_spoon_2000)
Robot find: Robot is close to the wooden_spoon_2000. Robot is close to the table_199. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find iron_2161 ?
Answer: Robot, locate the dining_room_41. In the dining room, find bowl_2142. You will find iron_2161 on top of bowl_2142. Retrieve iron_2161 carefully.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, you can find iron_2161 inside dining_room_41. It is on top of bowl_2142. Look for bowl_2142, and you will find iron_2161 positioned directly on it.
Robot, please go to the dining room (dining_room_41). Once there, locate the bowl labeled bowl_2142. The iron, labeled iron_2161, is on top of this bowl. Use the presence of the bowl_2142 to help identify the exact location of the iron_2161.
Robot, locate the dining_room_41. In the dining room, find bowl_2142. You will find iron_2161 on top of bowl_2142. Retrieve iron_2161 carefully.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for iron_2161 around ironing_board_2144.
Action 3: Walk to basket_for_clothes_2078.
Action 4: look for iron_2161 around basket_for_clothes_2078.
Action 5: Walk to light_73.
Action 6: look for iron_2161 around light_73.
Action 7: Walk to bed_197.
Action 8: look for iron_2161 around bed_197.
Action 9: Walk to dresser_274.
Action 10: Open dresser_274.
Action 11: look for iron_2161 around dresser_274.
Action 12: Walk to table_199.
Action 13: look for iron_2161 around table_199.
Action 14: Walk to curtain_289.
Action 15: look for iron_2161 around curtain_289.
Action 16: Walk to desk_272.
Action 17: look for iron_2161 around desk_272.
Action 18: Walk to trashcan_99.
Action 19: look for iron_2161 around trashcan_99.
Action 20: Walk to pillow_208.
Action 21: look for iron_2161 around pillow_208.
Action 22: Walk to walllamp_140.
Action 23: look for iron_2161 around walllamp_140.
Action 24: Walk to toaster_132.
Action 25: Open toaster_132.
Action 26: look for iron_2161 around toaster_132.
Action 27: Walk to mat_203.
Action 28: look for iron_2161 around mat_203.
Action 29: Walk to oven_127.
Action 30: Open oven_127.
Action 31: look for iron_2161 around oven_127.
Action 32: Walk to cupboard_117.
Action 33: look for iron_2161 around cupboard_117.
Action 34: Walk to wooden_spoon_2000.

##############################
From agent.py
exp(iron_2161, wooden_spoon_2000)
Fail to find iron_2161 around wooden_spoon_2000. 
##############################
From agent.py-> find a plan in act()
walk_executor(doorjamb_309)exp(iron_2161, doorjamb_309)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(doorjamb_309)
Robot find: drawing_288, mat_284, Robot is close to the doorjamb_309. 
##############################
From agent.py
exp(iron_2161, doorjamb_309)
Fail to find iron_2161 around doorjamb_309. 
##############################
From agent.py-> find a plan in act()
walk_executor(doorjamb_308)exp(iron_2161, doorjamb_308)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(doorjamb_308)
Robot find: Robot is close to the doorjamb_308. 
##############################
From agent.py
exp(iron_2161, doorjamb_308)
Fail to find iron_2161 around doorjamb_308. 
##############################
From agent.py-> find a plan in act()
walk_executor(photoframe_219)exp(iron_2161, photoframe_219)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(photoframe_219)
Robot find: novel_2060, Robot is close to the bookshelf_196. 
##############################
From agent.py
exp(iron_2161, photoframe_219)
Fail to find iron_2161 around photoframe_219. 
##############################
From agent.py-> find a plan in act()
walk_executor(photoframe_219)exp(iron_2161, photoframe_219)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(photoframe_219)
Robot find: Robot is close to the bookshelf_196. 
##############################
From agent.py
exp(iron_2161, photoframe_219)
Fail to find iron_2161 around photoframe_219. 
##############################
From agent.py-> find a plan in act()
walk_executor(novel_2060)open_executor(novel_2060)exp(iron_2161, novel_2060)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(clothes_shirt_2158)switchoff_executor(faucet_20)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)
##############################
From agent.py
walk_executor(novel_2060)
Robot find: Robot is close to the bookshelf_196. Robot is close to the novel_2060. 
##############################
From agent.py
open_executor(novel_2060)
Robot find: Robot is close to the bookshelf_196. Robot is close to the novel_2060. novel_2060 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find iron_2161 ?
Answer: Robot, you can find the iron_2161 inside the dining_room_41. It is located on top of the bowl_2142. Retrieve it carefully.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, you can find iron_2161 inside dining_room_41. It is on top of bowl_2142. Look for bowl_2142, and you will find iron_2161 positioned directly on it.
Robot, please go to the dining room (dining_room_41). Once there, locate the bowl labeled bowl_2142. The iron, labeled iron_2161, is on top of this bowl. Use the presence of the bowl_2142 to help identify the exact location of the iron_2161.
Robot, locate the dining_room_41. In the dining room, find bowl_2142. You will find iron_2161 on top of bowl_2142. Retrieve iron_2161 carefully.
Robot, you can find the iron_2161 inside the dining_room_41. It is located on top of the bowl_2142. Retrieve it carefully.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for iron_2161 around ironing_board_2144.
Action 3: Walk to basket_for_clothes_2078.
Action 4: look for iron_2161 around basket_for_clothes_2078.
Action 5: Walk to light_73.
Action 6: look for iron_2161 around light_73.
Action 7: Walk to bed_197.
Action 8: look for iron_2161 around bed_197.
Action 9: Walk to dresser_274.
Action 10: Open dresser_274.
Action 11: look for iron_2161 around dresser_274.
Action 12: Walk to table_199.
Action 13: look for iron_2161 around table_199.
Action 14: Walk to curtain_289.
Action 15: look for iron_2161 around curtain_289.
Action 16: Walk to desk_272.
Action 17: look for iron_2161 around desk_272.
Action 18: Walk to trashcan_99.
Action 19: look for iron_2161 around trashcan_99.
Action 20: Walk to pillow_208.
Action 21: look for iron_2161 around pillow_208.
Action 22: Walk to walllamp_140.
Action 23: look for iron_2161 around walllamp_140.
Action 24: Walk to toaster_132.
Action 25: Open toaster_132.
Action 26: look for iron_2161 around toaster_132.
Action 27: Walk to mat_203.
Action 28: look for iron_2161 around mat_203.
Action 29: Walk to oven_127.
Action 30: Open oven_127.
Action 31: look for iron_2161 around oven_127.
Action 32: Walk to cupboard_117.
Action 33: look for iron_2161 around cupboard_117.
Action 34: Walk to wooden_spoon_2000.
Action 35: look for iron_2161 around wooden_spoon_2000.
Action 36: Walk to doorjamb_309.
Action 37: look for iron_2161 around doorjamb_309.
Action 38: Walk to doorjamb_308.
Action 39: look for iron_2161 around doorjamb_308.
Action 40: Walk to photoframe_219.
Action 41: look for iron_2161 around photoframe_219.
Action 42: Walk to photoframe_219.
Action 43: look for iron_2161 around photoframe_219.
Action 44: Walk to novel_2060.
Action 45: Open novel_2060.

##############################
From agent.py
exp(iron_2161, novel_2060)
Fail to find iron_2161 around novel_2060. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['Iron a shirt, and put it in on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_271_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

behavior find_plate_2152_around_cupboard_118(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(plate,cupboard_instance)
        else:
            exp(plate,cupboard_instance)
    eff:
        unknown[plate]=False
        close[plate,cupboard_instance]=True
        close[cupboard_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior locate_iron(iron:item, bowl:item, dining_room:item):
    body:
        achieve_once inside(iron, dining_room)
        observe(bowl, "Check if iron is on the bowl")
        achieve_once on(iron, bowl)

behavior retrieve_iron(iron:item):
    body:
        achieve_once inhand(iron)

behavior place_shirt_on_ironing_board(shirt:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)

behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve_once close_char(char, ironing_board)
        achieve_once inhand(iron)
        achieve_once on(shirt, ironing_board)
        achieve_once pressed(shirt)

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)

        bind bowl: item where:
            is_bowl(bowl) and inside(bowl, dining_room)

        bind iron: item where:
            is_iron(iron)

        bind ironing_board: item where:
            is_ironing_board(ironing_board)

        bind bed: item where:
            is_bed(bed)

        bind shirt: item where:
            is_clothes_shirt(shirt)

        locate_iron(iron, bowl, dining_room)
        retrieve_iron(iron)
        place_shirt_on_ironing_board(shirt, ironing_board)
        iron_shirt(shirt, iron, ironing_board)
        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

'Function pressed not found. Note that recursive function calls are not supported in the current version.'
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

behavior find_towel_2128_around_washing_machine_2079(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(towel,washing_machine_instance)
        else:
            exp(towel,washing_machine_instance)
    eff:
        unknown[towel]=False
        close[towel,washing_machine_instance]=True
        close[washing_machine_instance,towel]=True
    

#goal_representation
behavior locate_iron(iron:item, bowl:item, dining_room:item):
    body:
        achieve_once inside(iron, dining_room)
        observe(bowl, "Check if iron is on the bowl")
        achieve_once on(iron, bowl)

behavior retrieve_iron(iron:item):
    body:
        achieve_once inhand(iron)

behavior place_shirt_on_ironing_board(shirt:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)

behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve_once close_char(char, ironing_board)
        achieve_once inhand(iron)
        achieve_once on(shirt, ironing_board)
        achieve_once clean(shirt)

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)

        bind bowl: item where:
            is_bowl(bowl) and inside(bowl, dining_room)

        bind iron: item where:
            is_iron(iron)

        bind ironing_board: item where:
            is_ironing_board(ironing_board)

        bind bed: item where:
            is_bed(bed)

        bind shirt: item where:
            is_clothes_shirt(shirt)

        locate_iron(iron, bowl, dining_room)
        retrieve_iron(iron)
        place_shirt_on_ironing_board(shirt, ironing_board)
        iron_shirt(shirt, iron, ironing_board)
        place_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2140_around_kitchen_counter_123(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

behavior find_chair_2003_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior locate_iron(iron:item, bowl:item, dining_room:item):
    body:
        achieve close_char(char, dining_room)
        achieve close_char(char, bowl)
        observe(bowl, "Check if iron is on the bowl")
        achieve_once on(iron, bowl)
        observe(iron, "Check if iron is on top of the bowl")

behavior iron_shirt_and_place_on_bed(iron:item, shirt:item, ironing_board:item, bed:item):
    body:
        achieve_once on(shirt, ironing_board)
        # Place the shirt on the ironing board for ironing
        achieve_once inhand(iron)
        # Iron the shirt using the iron
        achieve_once on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        # Identify the dining room

        bind bowl: item where:
            is_bowl(bowl) and inside(bowl, dining_room)
        # Identify the bowl in the dining room

        bind iron: item where:
            is_iron(iron)
        # Identify the iron 

        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Identify the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Identify the ironing board

        bind bed: item where:
            is_bed(bed)
        # Identify the bed

        locate_iron(iron, bowl, dining_room)
        iron_shirt_and_place_on_bed(iron, shirt, ironing_board, bed)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2140_around_cupboard_118(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

behavior find_towel_2128_around_bathroom_counter_18(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(towel,bathroom_counter_instance)
        else:
            exp(towel,bathroom_counter_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_counter_instance]=True
        close[bathroom_counter_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
def has_iron_on_bowl(bowl:item):
    # Function to check if there is an iron on the specified bowl
    symbol has_iron= exists o: item : (is_iron(o) and on(o, bowl))
    return has_iron

behavior locate_iron(bowl:item):
    body:
        observe(bowl, "Check if the iron is on the bowl")

behavior iron_shirt(shirt:item):
    body:
        achieve clean(shirt)
        # Assume ironing makes the shirt clean

behavior place_on_bed(item:item, bed:item):
    body:
        achieve_once on(item, bed)

behavior __goal__():
    body:
        bind dining_room_41: item where:
            is_dining_room(dining_room_41)
        
        bind bowl_2142: item where:
            is_bowl(bowl_2142) and inside(bowl_2142, dining_room_41)
        
        if not has_iron_on_bowl(bowl_2142):
            locate_iron(bowl_2142)
        
        bind iron_2161: item where:
            is_iron(iron_2161) and on(iron_2161, bowl_2142)
        
        bind shirt: item where:
            is_clothes_shirt(shirt)
        
        bind bed_197: item where:
            is_bed(bed_197)
        
        iron_shirt(shirt)
        place_on_bed(shirt, bed_197)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "iron a shirt, and put it in on the bed." ?
Answer: Put the shirt on the ironing board. Turn on the iron. Then put the iron on the shirt, push and pull it on the shirt. Finally, place the shirt on the bed.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_271_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

behavior find_bowl_2140_around_cupboard_118(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

behavior find_pillow_108_around_pillow_207(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==207
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior acquire_iron(iron:item, bowl:item, dining_room:item):
    body:
        achieve_once inside(iron, dining_room)
        achieve_once on(iron, bowl)

behavior prepare_shirt_for_ironing(shirt:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)
        bind iron: item where:
            is_iron(iron)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        achieve plugged(iron) and plugged(ironing_board)
        achieve is_on(iron)
        bind bowl: item where:
            is_bowl(bowl)
        bind iron: item where:
            is_iron(iron)
        achieve close_char(char, bowl) and close_char(char, iron)
        foreach iron: item:
            if close_char(char, ironing_board):
                achieve is_on(iron) and plugged(iron)

behavior iron_shirt(shirt:item, iron:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve_cleaned(shirt)

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        bind bowl: item where:
            is_bowl(bowl)
            is_iron(iron)
        bind iron: item where:
            is_iron(iron)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind bed: item where:
            is_bed(bed)
        acquire_iron(iron, bowl, dining_room)
        prepare_shirt_for_ironing(shirt, ironing_board)
        iron_shirt(shirt, iron)
        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Variable ironing_board already exists.
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

behavior find_clothes_hat_2117_around_bookshelf_275(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==275
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(clothes_hat,bookshelf_instance)
        else:
            exp(clothes_hat,bookshelf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,bookshelf_instance]=True
        close[bookshelf_instance,clothes_hat]=True
    

behavior find_clothes_gloves_2118_around_clothes_underwear_2121(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind clothes_underwear_instance:item where:
            is_clothes_underwear(clothes_underwear_instance) and id[clothes_underwear_instance]==2121
        achieve close_char(char,clothes_underwear_instance)
        if can_open(clothes_underwear_instance):
            achieve_once open(clothes_underwear_instance)
            exp(clothes_gloves,clothes_underwear_instance)
        else:
            exp(clothes_gloves,clothes_underwear_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,clothes_underwear_instance]=True
        close[clothes_underwear_instance,clothes_gloves]=True
    

behavior find_clothes_jacket_2119_around_clothes_dress_2116(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind clothes_dress_instance:item where:
            is_clothes_dress(clothes_dress_instance) and id[clothes_dress_instance]==2116
        achieve close_char(char,clothes_dress_instance)
        if can_open(clothes_dress_instance):
            achieve_once open(clothes_dress_instance)
            exp(clothes_jacket,clothes_dress_instance)
        else:
            exp(clothes_jacket,clothes_dress_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,clothes_dress_instance]=True
        close[clothes_dress_instance,clothes_jacket]=True
    

#goal_representation
behavior acquire_iron(iron:item, bowl:item, dining_room:item):
    body:
        achieve_once inside(iron, dining_room)
        achieve_once on(iron, bowl)

behavior prepare_shirt_for_ironing(shirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve plugged(iron)
        achieve plugged(ironing_board)
        achieve is_on(iron)

behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve clean(shirt)

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        bind bowl: item where:
            is_bowl(bowl)
        bind iron: item where:
            is_iron(iron)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind bed: item where:
            is_bed(bed)
        acquire_iron(iron, bowl, dining_room)
        prepare_shirt_for_ironing(shirt, ironing_board, iron)
        iron_shirt(shirt, ironing_board, iron)
        place_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_2003_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

behavior find_towel_2128_around_bathroom_counter_18(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(towel,bathroom_counter_instance)
        else:
            exp(towel,bathroom_counter_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_counter_instance]=True
        close[bathroom_counter_instance,towel]=True
    

behavior find_pillow_208_around_pillow_207(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==207
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation

behavior find_iron_in_dining_room(iron:item, bowl:item, dining_room:item):
    body:
        observe(dining_room, "Find bowl_2142 in dining_room_41")
        observe(bowl, "Find iron_2161 positioned directly on bowl_2142")
        achieve_once inside(iron, dining_room)

behavior retrieve_iron(iron:item, bowl:item, dining_room:item):
    body:
        achieve_once inhand(iron)

behavior iron_the_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve_once close_char(char, ironing_board)
        achieve_once inhand(shirt)
        achieve_once close_char(char, iron)
        achieve plugged(iron)
        achieve is_on(iron)
        achieve_once on(iron, shirt)

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron) and id[iron] == 2161
        
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2142
        
        bind dining_room: item where:
            is_dining_room(dining_room) and id[dining_room] == 41
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144

        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 100
        
        bind bed: item where:
            is_bed(bed) and id[bed] == 197
        
        find_iron_in_dining_room(iron, bowl, dining_room)
        retrieve_iron(iron, bowl, dining_room)
        iron_the_shirt(shirt, ironing_board, iron)
        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_fridge_126(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(iron,fridge_instance)
        else:
            exp(iron,fridge_instance)
    eff:
        unknown[iron]=False
        close[iron,fridge_instance]=True
        close[fridge_instance,iron]=True
    

behavior find_towel_2128_around_washing_machine_2079(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(towel,washing_machine_instance)
        else:
            exp(towel,washing_machine_instance)
    eff:
        unknown[towel]=False
        close[towel,washing_machine_instance]=True
        close[washing_machine_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior locate_iron(char: character):
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        achieve_once inside_char(char, dining_room)
        bind bowl: item where:
            is_bowl(bowl) and inside(bowl, dining_room) and id[bowl]==2142
        achieve_once close_char(char, bowl)
        observe(bowl, "Identify the location of the iron on top of the bowl")

behavior prepare_shirt_for_ironing(char: character, iron: item, shirt: item):
    body:
        achieve_once close_char(char, ironing_board_2144)
        achieve_once on(shirt, ironing_board_2144)
        achieve_once plugged(iron)
        achieve_once is_on(iron)
        achieve cut(shirt) # Assuming cut is analogous to necessary ironing
        achieve_once close_char(char, bed_197)
        achieve_once on(shirt, bed_197)

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron) and id[iron]==2161
        locate_iron(char)
        bind shirt: item where:
            is_clothes_shirt(shirt)
        prepare_shirt_for_ironing(char, iron, shirt)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board_2144; available variables: [Variable<char: character>, Variable<iron: item>, Variable<shirt: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_chair_271_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

behavior find_bowl_2142_around_cupboard_118(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

behavior find_iron_2161_around_kitchen_counter_123(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(iron,kitchen_counter_instance)
        else:
            exp(iron,kitchen_counter_instance)
    eff:
        unknown[iron]=False
        close[iron,kitchen_counter_instance]=True
        close[kitchen_counter_instance,iron]=True
    

behavior find_towel_2128_around_bathroom_counter_18(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(towel,bathroom_counter_instance)
        else:
            exp(towel,bathroom_counter_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_counter_instance]=True
        close[bathroom_counter_instance,towel]=True
    

behavior find_pillow_107_around_pillow_207(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==207
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_clothes_jacket_2119_around_nightstand_192(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==192
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(clothes_jacket,nightstand_instance)
        else:
            exp(clothes_jacket,nightstand_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,nightstand_instance]=True
        close[nightstand_instance,clothes_jacket]=True
    

#goal_representation
behavior locate_iron(char: character, dining_room: item):
    body:
        achieve_once inside_char(char, dining_room)
        bind bowl: item where:
            is_bowl(bowl) and inside(bowl, dining_room) and id[bowl]==2142
        achieve_once close_char(char, bowl)
        observe(bowl, "Identify the location of the iron on top of the bowl")

behavior prepare_shirt_for_ironing(char: character, iron: item, shirt: item, ironing_board: item, bed: item):
    body:
        achieve_once close_char(char, ironing_board)
        achieve_once on(shirt, ironing_board)
        achieve_once plugged(iron)
        achieve_once is_on(iron)
        achieve cut(shirt)
        achieve_once close_char(char, bed)
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        locate_iron(char, dining_room)
        bind iron: item where:
            is_iron(iron) and id[iron]==2161
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board]==2144
        bind bed: item where:
            is_bed(bed) and id[bed]==197
        prepare_shirt_for_ironing(char, iron, shirt, ironing_board, bed)
#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py
Reset goals: The sub-goals are: 
['Iron a shirt, and put it in on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2142_around_photoframe_219(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(bowl,photoframe_instance)
        else:
            exp(bowl,photoframe_instance)
    eff:
        unknown[bowl]=False
        close[bowl,photoframe_instance]=True
        close[photoframe_instance,bowl]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior retrieve_iron_from_dining_room(iron:item, bowl:item, dining_room:item):
    body:
        achieve_once inside(iron, dining_room)
        achieve_once on(iron, bowl)

behavior prepare_iron_shirt_and_place_on_bed(shirt:item, ironing_board:item, bed:item, iron:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve is_on(iron)
        achieve cut(shirt)
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        
        bind bowl: item where:
            is_bowl(bowl) and inside(bowl, dining_room)
        
        bind iron: item where:
            is_iron(iron) and on(iron, bowl)
        
        retrieve_iron_from_dining_room(iron, bowl, dining_room)
        
        bind shirt: item where:
            is_clothes_shirt(shirt)
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        bind bed: item where:
            is_bed(bed)

        prepare_iron_shirt_and_place_on_bed(shirt, ironing_board, bed, iron)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_194_around_table_270(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==270
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(chair,table_instance)
        else:
            exp(chair,table_instance)
    eff:
        unknown[chair]=False
        close[chair,table_instance]=True
        close[table_instance,chair]=True
    

behavior find_plate_2152_around_cupboard_118(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(plate,cupboard_instance)
        else:
            exp(plate,cupboard_instance)
    eff:
        unknown[plate]=False
        close[plate,cupboard_instance]=True
        close[cupboard_instance,plate]=True
    

behavior find_towel_2128_around_bathroom_counter_18(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(towel,bathroom_counter_instance)
        else:
            exp(towel,bathroom_counter_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_counter_instance]=True
        close[bathroom_counter_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
def locate_iron():
    # Identify the irons location based on provided instructions
    bind iron: item where:
        is_iron(iron) and id[iron] == 2161
    bind bowl: item where:
        is_bowl(bowl) and id[bowl] == 2142

    if not visited(bowl):
        observe(bowl, "Check if iron_2161 is on top of bowl_2142")
    return iron

behavior iron_shirt(iron: item):
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)

        achieve_once inhand(iron)
        achieve_once on(shirt, ironing_board)  # Put the shirt on ironing board
        achieve is_on(iron)  # Turn on the iron

behavior put_on_bed(item: item):
    body:
        bind bed: item where:
            is_bed(bed)
        achieve_once on(item, bed)  # Put the item on the bed

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron) and id[iron] == 2161

        if not visited(iron):
            bind dining_room: item where:
                is_dining_room(dining_room) and id[dining_room] == 41
            observe(dining_room, "Find bowl_2142 with iron_2161 on top")
            iron = locate_iron()

        iron_shirt(iron)
        put_on_bed(iron)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Behavior body statement bind(CSList(iron: item), and(is_iron(V::iron), (id(V::iron) == C::2161))) are not allowed in the current mode: SymbolicExecutionMode.DERIVED
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_bowl_2141_around_cupboard_118(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

#goal_representation
behavior locate_iron(dining_room: item):
    body:
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2142
        observe(bowl, "Check if iron_2161 is on top of bowl_2142")

behavior iron_shirt(iron: item):
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        achieve_once inhand(iron)
        achieve_once on(shirt, ironing_board)
        achieve is_on(iron)

behavior put_on_bed(item: item, bed: item):
    body:
        achieve_once on(item, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room) and id[dining_room] == 41
        locate_iron(dining_room)
        
        bind iron: item where:
            is_iron(iron) and id[iron] == 2161 and visited(iron)
        
        iron_shirt(iron)
        
        bind bed: item where:
            is_bed(bed)
        put_on_bed(iron, bed)
#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_2003_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

behavior find_iron_2161_around_kitchen_counter_123(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(iron,kitchen_counter_instance)
        else:
            exp(iron,kitchen_counter_instance)
    eff:
        unknown[iron]=False
        close[iron,kitchen_counter_instance]=True
        close[kitchen_counter_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
def is_iron_2161_on_bowl_2142(bowl: item):
    symbol has_iron = exists o: item : (is_iron(o) and on(o, bowl))
    return has_iron

behavior find_and_retrieve_iron(iron:item, dining_room:item):
    body:
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2142 and inside(bowl, dining_room)
        if is_iron_2161_on_bowl_2142(bowl):
            achieve_once inhand(iron)
        else:
            observe(bowl, "Check if iron_2161 is on the bowl_2142 in dining room")

behavior place_shirt_on_ironing_board_and_iron(iron:item, shirt:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve once is_on(iron)
        achieve_once on(iron, shirt)
        achieve clean(shirt)
        achieve_once inhand(shirt)

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room) and id[dining_room] == 41

        bind iron: item where:
            is_iron(iron) and id[iron] == 2161

        find_and_retrieve_iron(iron, dining_room)

        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2171

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        
        place_shirt_on_ironing_board_and_iron(iron, shirt, ironing_board)

        bind bed: item where:
            is_bed(bed) and id[bed] == 197
        
        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'is_on') at line 5492, column 22.
Expected one of: 
	* SEMICOLON
	* _NEWLINE

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_toilet_paper_2076_around_bathroom_counter_18(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(toilet_paper,bathroom_counter_instance)
        else:
            exp(toilet_paper,bathroom_counter_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,bathroom_counter_instance]=True
        close[bathroom_counter_instance,toilet_paper]=True
    

#goal_representation
 
def is_iron_2161_on_bowl_2142(bowl: item):
    symbol has_iron=exists o: item : (is_iron(o) and on(o, bowl))
    return has_iron

behavior find_and_retrieve_iron(iron:item, dining_room:item):
    body:
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2142 and inside(bowl, dining_room)
        if is_iron_2161_on_bowl_2142(bowl):
            achieve_once inhand(iron)
        else:
            observe(bowl, "Check if iron_2161 is on the bowl_2142 in dining room")

behavior place_shirt_on_ironing_board_and_iron(iron:item, shirt:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve_once is_on(iron)
        achieve_once on(iron, shirt)
        achieve clean(shirt)
        achieve_once inhand(shirt)

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room) and id[dining_room] == 41

        bind iron: item where:
            is_iron(iron) and id[iron] == 2161

        find_and_retrieve_iron(iron, dining_room)

        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2171

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144
        
        place_shirt_on_ironing_board_and_iron(iron, shirt, ironing_board)

        bind bed: item where:
            is_bed(bed) and id[bed] == 197
        
        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "iron a shirt, and put it in on the bed." ?
Answer: Put the shirt on the ironing board. Turn on the iron. Then put the iron on the shirt, push and pull it on the shirt. Finally, place the shirt on the bed.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2141_around_kitchen_counter_119(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

behavior find_iron_2161_around_faucet_121(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind faucet_instance:item where:
            is_faucet(faucet_instance) and id[faucet_instance]==121
        achieve close_char(char,faucet_instance)
        if can_open(faucet_instance):
            achieve_once open(faucet_instance)
            exp(iron,faucet_instance)
        else:
            exp(iron,faucet_instance)
    eff:
        unknown[iron]=False
        close[iron,faucet_instance]=True
        close[faucet_instance,iron]=True
    

behavior find_mat_203_around_fridge_126(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(mat,fridge_instance)
        else:
            exp(mat,fridge_instance)
    eff:
        unknown[mat]=False
        close[mat,fridge_instance]=True
        close[fridge_instance,mat]=True
    

#exp_behavior_end

#goal_representation
behavior get_iron(dining_room:item, bowl:item, iron:item):
    body:
        achieve_once inside_char(char, dining_room)
        achieve_once on(iron, bowl)

behavior start_ironing(shirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve plugged(iron)
        achieve is_on(iron)
        achieve_once clean(shirt)

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)

        bind bowl: item where:
            is_bowl(bowl) and inside(bowl, dining_room)

        bind iron: item where:
            is_iron(iron) and on(iron, bowl)

        bind ironing_board: item where:
            is_ironing_board(ironing_board)

        bind shirt: item where:
            is_clothes(shirt) and is_clothes_shirt(shirt)

        bind bed: item where:
            is_bed(bed)

        get_iron(dining_room, bowl, iron)
        start_ironing(shirt, iron, ironing_board)
        place_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2142_around_cupboard_118(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior retrieve_iron_and_walk_to_ironing_board(iron:item, ironing_board:item):
    body:
        achieve_once inhand(iron)
    
behavior setup_shirt_for_ironing(shirt:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)

behavior iron_shirt(iron:item, shirt:item):
    body:
        achieve_once is_on(iron)
        # Begin ironing process
        achieve clean(shirt)
        # Ensure shirt becomes ironed, implied by becoming clean

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind dining_room: item where:
            is_dining_room(dining_room)
        
        bind bowl: item where:
            is_bowl(bowl)
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        bind shirt: item where:
            is_clothes_shirt(shirt)
        
        bind bed: item where:
            is_bed(bed)
        
        achieve inside(iron, dining_room)
        retrieve_iron_and_walk_to_ironing_board(iron, ironing_board)
        setup_shirt_for_ironing(shirt, ironing_board)
        iron_shirt(iron, shirt)
        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2142_around_cupboard_118(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
def locate_bowl_with_iron(dining_room: item):
    # Function to find the bowl_2142 with iron_2161 on top of it in the dining room
    foreach bowl: item:
        if is_bowl(bowl) and inside(bowl, dining_room) and not visited(bowl):
            observe(bowl, "Check if iron_2161 is on top of the bowl_2142")

def prep_shirt_for_ironing(shirt: item, ironing_board: item, iron: item):
    # Function to prepare the shirt for ironing
    achieve_once on(shirt, ironing_board) # Place the shirt on the ironing board
    achieve_once plugged(iron) # Ensure the iron is plugged in
    achieve_once is_on(iron) # Turn on the iron
    # Iron the shirt
    achieve clean(shirt) 

behavior place_shirt_on_bed(shirt: item, bed: item):
    body:
        achieve_once on(shirt, bed) # Place the shirt on the bed

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)

        locate_bowl_with_iron(dining_room)

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        bind bed: item where:
            is_bed(bed)

        bind iron: item where:
            is_iron(iron) and on(iron, bowl) and inside(bowl, dining_room)

        bind shirt: item where:
            is_clothes_shirt(shirt)

        prep_shirt_for_ironing(shirt, ironing_board, iron)
        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Foreach statements are not allowed in the current mode: SymbolicExecutionMode.DERIVED
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_bowl_2141_around_cupboard_118(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

#goal_representation
behavior locate_bowl_with_iron(bowl:item, iron:item):
    body:
        if is_iron(iron) and inside(iron, bowl):
            observe(bowl, "Check if iron_2161 is on top of the bowl_2142")

def locate_bowl_2142(dining_room:item):
    symbol has_bowl=exists o:item: (is_bowl(o) and inside(o, dining_room))
    return has_bowl

behavior prep_shirt_for_ironing(shirt: item, ironing_board: item, iron: item):
    body:
        achieve_once on(shirt, ironing_board) # Place the shirt on the ironing board
        achieve_once plugged(iron) # Ensure the iron is plugged in
        achieve_once is_on(iron) # Turn on the iron

behavior place_shirt_on_bed(shirt: item, bed: item):
    body:
        achieve_once on(shirt, bed) # Place the shirt on the bed

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)

        if not locate_bowl_2142(dining_room):
            foreach bowl: item:
                if is_bowl(bowl) and inside(bowl, dining_room) and not visited(bowl):
                    locate_bowl_with_iron(bowl, iron)
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        bind bed: item where:
            is_bed(bed)
        
        bind iron: item where:
            is_iron(iron) and on(iron, bowl) and inside(bowl, dining_room)
        
        bind shirt: item where:
            is_clothes_shirt(shirt)
        
        prep_shirt_for_ironing(shirt, ironing_board, iron)
        place_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: iron; available variables: [Variable<bowl: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_chair_194_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

behavior find_bowl_2140_around_walllamp_307(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind walllamp_instance:item where:
            is_walllamp(walllamp_instance) and id[walllamp_instance]==307
        achieve close_char(char,walllamp_instance)
        if can_open(walllamp_instance):
            achieve_once open(walllamp_instance)
            exp(bowl,walllamp_instance)
        else:
            exp(bowl,walllamp_instance)
    eff:
        unknown[bowl]=False
        close[bowl,walllamp_instance]=True
        close[walllamp_instance,bowl]=True
    

#goal_representation
behavior locate_bowl_with_iron(bowl:item, iron:item):
    body:
        if is_iron(iron) and inside(iron, bowl):
            observe(bowl, "Check if iron_2161 is on top of the bowl_2142")

def locate_bowl_2142(dining_room:item):
    symbol has_bowl=exists o:item: (is_bowl(o) and inside(o, dining_room))
    return has_bowl

behavior prep_shirt_for_ironing(shirt: item, ironing_board: item, iron: item):
    body:
        achieve_once on(shirt, ironing_board) # Place the shirt on the ironing board
        achieve_once plugged(iron) # Ensure the iron is plugged in
        achieve_once is_on(iron) # Turn on the iron

behavior place_shirt_on_bed(shirt: item, bed: item):
    body:
        achieve_once on(shirt, bed) # Place the shirt on the bed

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)

        bind bowl: item where:
            is_bowl(bowl) and inside(bowl, dining_room)

        bind iron: item where:
            is_iron(iron) and on(iron, bowl) and inside(bowl, dining_room)
        
        if not locate_bowl_2142(dining_room):
            foreach bowl: item:
                if is_bowl(bowl) and inside(bowl, dining_room) and not visited(bowl):
                    locate_bowl_with_iron(bowl, iron)
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        bind bed: item where:
            is_bed(bed)
        
        bind shirt: item where:
            is_clothes_shirt(shirt)
        
        prep_shirt_for_ironing(shirt, ironing_board, iron)
        place_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py
Reset goals: The sub-goals are: 
['Iron a shirt, and put it in on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

#exp_behavior_end

#goal_representation
behavior find_iron_and_ironing_board():
    body:
        bind iron: item where:
            is_iron(iron)
        # Select the item identified as iron

        bind dining_room: item where:
            is_dining_room(dining_room) and id[dining_room]==41
        # Select the dining room with the specific ID
            
        bind bowl: item where:
            is_bowl(bowl) and id[bowl]==2142 and inside(bowl, dining_room)
        # Select the bowl with a specific ID inside the dining room

        if not visited(iron):
            observe(bowl, "Check if iron_2161 is on bowl_2142")
            # Inspect the bowl to find the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

behavior iron_shirt_and_place_on_bed(shirt:item, iron:item, bed:item):
    body:
        achieve_once on(shirt, ironing_board)
        # Place the shirt on the ironing board

        achieve_once is_on(iron)
        # Turn on the iron

        achieve_once close_char(char, shirt)
        # Ensure the shirt is being ironed 

        achieve_once on(shirt, bed)
        # Place the ironed shirt on the bed

behavior __goal__():
    body:
        find_iron_and_ironing_board()
        
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select a shirt

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        iron_shirt_and_place_on_bed(shirt, iron, bed)
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board; available variables: [Variable<shirt: item>, Variable<iron: item>, Variable<bed: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_iron_2161_around_desk_193(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==193
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(iron,desk_instance)
        else:
            exp(iron,desk_instance)
    eff:
        unknown[iron]=False
        close[iron,desk_instance]=True
        close[desk_instance,iron]=True
    

behavior find_chair_194_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

behavior find_pillow_287_around_pillow_287(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==287
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#goal_representation
behavior find_iron_and_ironing_board():
    body:
        bind iron: item where:
            is_iron(iron)

        bind dining_room: item where:
            is_dining_room(dining_room) and id[dining_room]==41

        bind bowl: item where:
            is_bowl(bowl) and id[bowl]==2142 and inside(bowl, dining_room)

        if not visited(iron):
            observe(bowl, "Check if iron_2161 is on bowl_2142")

        bind ironing_board: item where:
            is_ironing_board(ironing_board)

behavior iron_shirt_and_place_on_bed(shirt:item, iron:item, bed:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve_once is_on(iron)
        achieve_once close_char(char, shirt)
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        find_iron_and_ironing_board()

        bind shirt: item where:
            is_clothes_shirt(shirt)

        bind bed: item where:
            is_bed(bed)

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        iron_shirt_and_place_on_bed(shirt, iron, bed, ironing_board)
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: iron; available variables: [].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_bowl_2142_around_cupboard_118(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

behavior find_chair_194_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

behavior find_towel_2128_around_bathroom_counter_18(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(towel,bathroom_counter_instance)
        else:
            exp(towel,bathroom_counter_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_counter_instance]=True
        close[bathroom_counter_instance,towel]=True
    

#goal_representation
behavior find_iron_and_ironing_board():
    body:
        bind iron: item where:
            is_iron(iron) and id[iron]==2161

        bind dining_room: item where:
            is_dining_room(dining_room) and id[dining_room]==41

        bind bowl: item where:
            is_bowl(bowl) and id[bowl]==2142 and inside(bowl, dining_room)

        if not visited(iron):
            observe(bowl, "Check if iron_2161 is on bowl_2142")

        bind ironing_board: item where:
            is_ironing_board(ironing_board)

behavior iron_shirt_and_place_on_bed(shirt:item, iron:item, bed:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve_once is_on(iron)
        achieve_once close_char(char, shirt)
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        find_iron_and_ironing_board()

        bind shirt: item where:
            is_clothes_shirt(shirt)

        bind bed: item where:
            is_bed(bed)

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        iron_shirt_and_place_on_bed(shirt, iron, bed, ironing_board)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2140_around_kitchen_counter_123(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

behavior find_towel_2128_around_bathroom_counter_18(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(towel,bathroom_counter_instance)
        else:
            exp(towel,bathroom_counter_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_counter_instance]=True
        close[bathroom_counter_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
def located_iron_on_bowl(bowl:item):
    symbol has_iron=exists o:item : (is_iron(o) and on(o, bowl))
    return has_iron

behavior retrieve_iron(iron:item):
    body:
        achieve_once inhand(iron)

behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve plugged(iron)
        achieve is_on(iron)
        achieve clean(shirt)
        achieve_once is_off(iron)

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        
        bind bowl: item where:
            is_bowl(bowl) and inside(bowl, dining_room)
        
        if located_iron_on_bowl(bowl):
            bind iron: item where:
                is_iron(iron) and on(iron, bowl)
            
            bind ironing_board: item where:
                is_ironing_board(ironing_board)
            
            bind shirt: item where:
                is_clothes_shirt(shirt)
            
            bind bed: item where:
                is_bed(bed)
            
            retrieve_iron(iron)
            iron_shirt(shirt, ironing_board, iron)
            place_shirt_on_bed(shirt, bed)
        
        else:
            observe(bowl, "Check if there is an iron on the bowl")

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

behavior find_pillow_208_around_pillow_207(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==207
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_iron_2161(iron:item, bowl:item, dining_room:item):
    body:
        achieve_once inside(iron, dining_room)
        achieve_once on(iron, bowl)

behavior iron_shirt_and_place_on_bed(shirt:item, iron:item, ironing_board:item, bed:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve is_on(iron)
        achieve cut(shirt)
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2142 and inside(bowl, dining_room)
        
        bind iron: item where:
            is_iron(iron) and id[iron] == 2161
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144

        bind bed: item where:
            is_bed(bed) and id[bed] == 197

        bind shirt: item where:
            is_clothes_shirt(shirt)

        find_iron_2161(iron, bowl, dining_room)
        iron_shirt_and_place_on_bed(shirt, iron, ironing_board, bed)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "iron a shirt, and put it in on the bed." ?
Answer: Put the shirt on the ironing board. Turn on the iron. Put the iron on the shirt, push and pull it on the shirt. Place the shirt on the bed.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

behavior find_chair_271_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

behavior find_towel_2128_around_washing_machine_2079(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2079
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(towel,washing_machine_instance)
        else:
            exp(towel,washing_machine_instance)
    eff:
        unknown[towel]=False
        close[towel,washing_machine_instance]=True
        close[washing_machine_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior retrieve_iron(iron:item, bowl:item, dining_room:item):
    body:
        achieve_once inside(iron, dining_room)
        achieve_once on(iron, bowl)

behavior use_iron_on_shirt(iron:item, shirt:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve is_on(iron)
        achieve_once inhand(iron)
        achieve clean(shirt)
        achieve_once is_off(iron)

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)

        bind bowl: item where:
            is_bowl(bowl) and inside(bowl, dining_room)
        
        bind iron: item where:
            is_iron(iron)

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        bind shirt: item where:
            is_clothes_shirt(shirt)
        
        bind bed: item where:
            is_bed(bed)

        retrieve_iron(iron, bowl, dining_room)
        use_iron_on_shirt(iron, shirt, ironing_board)
        place_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_271_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

behavior find_plate_2152_around_cupboard_118(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(plate,cupboard_instance)
        else:
            exp(plate,cupboard_instance)
    eff:
        unknown[plate]=False
        close[plate,cupboard_instance]=True
        close[cupboard_instance,plate]=True
    

behavior find_bowl_2141_around_cupboard_118(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

behavior find_towel_2128_around_bathroom_counter_18(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(towel,bathroom_counter_instance)
        else:
            exp(towel,bathroom_counter_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_counter_instance]=True
        close[bathroom_counter_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior retrieve_iron(iron:item, bowl:item, dining_room:item):
    body:
        achieve_once inside(iron, dining_room)
        achieve_once on(iron, bowl)
        observe(iron, "Check if iron 2161 is on bowl 2142")

behavior iron_shirt(iron:item, shirt:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve is_on(iron)
        achieve on(iron, shirt)

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        bind bowl: item where:
            is_bowl(bowl) and id[bowl]==2142 and inside(bowl, dining_room)

        bind iron: item where:
            is_iron(iron) and id[iron]==2161
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        bind shirt: item where:
            is_clothes_shirt(shirt)

        bind bed: item where:
            is_bed(bed)

        retrieve_iron(iron, bowl, dining_room)
        iron_shirt(iron, shirt, ironing_board)
        place_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2140_around_kitchen_counter_123(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

#exp_behavior_end

#goal_representation
behavior locate_and_retrieve_iron(iron:item, bowl:item, dining_room:item):
    body:
        achieve_once inside(bowl, dining_room)
        achieve_once on(iron, bowl)
        achieve_once inhand(iron)

behavior prepare_and_iron_shirt(iron:item, shirt:item, bed:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve is_on(iron)
        achieve_once clean(shirt)
        achieve_once on(shirt, bed)
        
behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2142
        bind iron: item where:
            is_iron(iron) and id[iron] == 2161
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        bind bed: item where:
            is_bed(bed)
        
        locate_and_retrieve_iron(iron, bowl, dining_room)
        prepare_and_iron_shirt(iron, shirt, bed, ironing_board)
#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py
Reset goals: The sub-goals are: 
['Iron a shirt, and put it in on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_194_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

behavior find_bowl_2140_around_fryingpan_2154(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind fryingpan_instance:item where:
            is_fryingpan(fryingpan_instance) and id[fryingpan_instance]==2154
        achieve close_char(char,fryingpan_instance)
        if can_open(fryingpan_instance):
            achieve_once open(fryingpan_instance)
            exp(bowl,fryingpan_instance)
        else:
            exp(bowl,fryingpan_instance)
    eff:
        unknown[bowl]=False
        close[bowl,fryingpan_instance]=True
        close[fryingpan_instance,bowl]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior get_iron_from_dining_room(bowl:item, iron:item, dining_room:item):
    body:
        achieve_once inside(iron, dining_room)
        achieve_once on(iron, bowl)

behavior bring_iron_to_ironing_board(iron:item, ironing_board:item):
    body:
        achieve_once on(iron, ironing_board)

behavior iron_shirt(shirt:item, iron:item):
    body:
        achieve_once plugged(iron)
        achieve_once is_on(iron)
        achieve_once close_char(char, shirt)
        achieve_once on(shirt, iron)
        pull(iron)
        push(iron)
        achieve_once clean(shirt)

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room) and id[dining_room] == 41

        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2142

        bind iron: item where:
            is_iron(iron) and id[iron] == 2161

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2144

        bind shirt: item where:
            is_clothes_shirt(shirt)

        bind bed: item where:
            is_bed(bed) and id[bed] == 197

        get_iron_from_dining_room(bowl, iron, dining_room)
        bring_iron_to_ironing_board(iron, ironing_board)
        iron_shirt(shirt, iron)
        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2141_around_fryingpan_2154(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind fryingpan_instance:item where:
            is_fryingpan(fryingpan_instance) and id[fryingpan_instance]==2154
        achieve close_char(char,fryingpan_instance)
        if can_open(fryingpan_instance):
            achieve_once open(fryingpan_instance)
            exp(bowl,fryingpan_instance)
        else:
            exp(bowl,fryingpan_instance)
    eff:
        unknown[bowl]=False
        close[bowl,fryingpan_instance]=True
        close[fryingpan_instance,bowl]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

#exp_behavior_end

#goal_representation

def locate_iron(dining_room:item):
    body:
        bind iron: item where:
            is_iron(iron) and inside(iron, dining_room)
        observe(iron, "Check if iron is on top of a bowl")

behavior prepare_for_ironing(shirt:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve plugged(iron)
        achieve is_on(iron)

behavior iron_shirt(shirt:item):
    body:
        achieve clean(shirt)
        # Simulate pushing and pulling iron on the shirt

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        locate_iron(dining_room)

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        bind shirt: item where:
            is_clothes_shirt(shirt)
        
        bind bed: item where:
            is_bed(bed)

        prepare_for_ironing(shirt, ironing_board)
        iron_shirt(shirt)
        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('COLON', ':') at line 5477, column 9.
Expected one of: 
	* IF
	* COMMA
	* SLASH
	* OR
	* __ANON_1
	* __ANON_5
	* PERCENT
	* __ANON_3
	* AND
	* __ANON_6
	* MINUS
	* RSHIFT
	* __ANON_8
	* NOT_EQ
	* PLUS
	* __ANON_0
	* VBAR
	* FLOORDIV
	* __ANON_7
	* LESS_EQ
	* CIRCUMFLEX
	* DOUBLE_EQUAL
	* LSHIFT
	* __ANON_2
	* __ANON_4
	* AT
	* GREATER_EQ
	* STAR
	* LESSTHAN
	* MORETHAN
	* SEMICOLON
	* EQUAL
	* _NEWLINE
	* AMPERSAND

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_bowl_2140_around_kitchen_counter_123(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

#goal_representation
behavior retrieve_iron_from_dining_room(iron:item, dining_room:item):
    body:
        achieve_once inside(iron, dining_room)
        observe(iron, "Check if iron is on top of a bowl")

behavior prepare_for_ironing(shirt:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve plugged(iron)
        achieve is_on(iron)

behavior iron_shirt(shirt:item):
    body:
        achieve clean(shirt)
        # Simulate pushing and pulling iron on the shirt

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        bind iron: item where:
            is_iron(iron) and inside(iron, dining_room)

        retrieve_iron_from_dining_room(iron, dining_room)

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        bind shirt: item where:
            is_clothes_shirt(shirt)
        
        bind bed: item where:
            is_bed(bed)

        prepare_for_ironing(shirt, ironing_board)
        iron_shirt(shirt)
        place_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: iron; available variables: [Variable<shirt: item>, Variable<ironing_board: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_chair_2003_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

behavior find_pillow_105_around_pillow_207(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==207
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#goal_representation
behavior retrieve_iron_from_dining_room(iron:item, dining_room:item):
    body:
        achieve_once inside(iron, dining_room)
        observe(iron, "Check if iron is on top of a bowl")

behavior prepare_for_ironing(shirt:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve plugged(iron)
        achieve is_on(iron)

behavior iron_shirt(shirt:item):
    body:
        achieve clean(shirt)
        # Simulate pushing and pulling iron on the shirt

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)

        bind iron: item where:
            is_iron(iron) and inside(iron, dining_room)

        retrieve_iron_from_dining_room(iron, dining_room)

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        bind shirt: item where:
            is_clothes_shirt(shirt)
        
        bind bed: item where:
            is_bed(bed)

        prepare_for_ironing(shirt, ironing_board)
        iron_shirt(shirt)
        place_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

behavior find_mat_284_around_mat_284(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind mat_instance:item where:
            is_mat(mat_instance) and id[mat_instance]==284
        achieve close_char(char,mat_instance)
        if can_open(mat_instance):
            achieve_once open(mat_instance)
            exp(mat,mat_instance)
        else:
            exp(mat,mat_instance)
    eff:
        unknown[mat]=False
        close[mat,mat_instance]=True
        close[mat_instance,mat]=True
    

behavior find_towel_2128_around_bathroom_counter_18(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(towel,bathroom_counter_instance)
        else:
            exp(towel,bathroom_counter_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_counter_instance]=True
        close[bathroom_counter_instance,towel]=True
    

behavior find_pillow_208_around_pillow_207(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==207
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior retrieve_iron(bowl:item, iron:item):
    body:
        observe(bowl, "Check if iron is on top of bowl")
        if on(iron, bowl):
            achieve_once inhand(iron)

behavior prepare_shirt_for_ironing(shirt:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)

behavior plug_in_iron(iron:item):
    body:
        achieve plugged(iron)

behavior turn_on_iron(iron:item):
    body:
        achieve is_on(iron)

behavior iron_the_shirt(shirt:item, iron:item):
    body:
        achieve cut(shirt)
        # Simulation of pushing and pulling iron on shirt

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)

        bind bowl: item where:
            is_bowl(bowl) and inside(bowl, dining_room) and id[bowl]==2142

        bind iron: item where:
            is_iron(iron) and id[iron] == 2161

        retrieve_iron(bowl, iron)

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board]==2144

        bind shirt: item where:
            is_clothes_shirt(shirt)

        prepare_shirt_for_ironing(shirt, ironing_board)
        plug_in_iron(iron)
        turn_on_iron(iron)
        iron_the_shirt(shirt, iron)

        bind bed: item where:
            is_bed(bed) and id[bed]==197

        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['Iron a shirt, and put it in on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2142_around_cupboard_118(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

behavior find_chair_194_around_bookshelf_275(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==275
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(chair,bookshelf_instance)
        else:
            exp(chair,bookshelf_instance)
    eff:
        unknown[chair]=False
        close[chair,bookshelf_instance]=True
        close[bookshelf_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior retrieve_iron(iron:item, dining_room:item, bowl:item):
    body:
        achieve_once inside(iron, dining_room)
        achieve_once on(iron, bowl)
        achieve_once inhand(iron)

behavior iron_shirt(iron:item, ironing_board:item, shirt:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve is_on(iron)
        achieve_once pushed(iron, shirt)
        achieve_once pulled(iron, shirt)

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)

        bind bowl: item where:
            is_bowl(bowl) and inside(bowl, dining_room)

        bind iron: item where:
            is_iron(iron) and on(iron, bowl)

        bind ironing_board: item where:
            is_ironing_board(ironing_board)

        bind bed: item where:
            is_bed(bed)

        bind shirt: item where:
            is_clothes_shirt(shirt)

        retrieve_iron(iron, dining_room, bowl)
        iron_shirt(iron, ironing_board, shirt)
        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

'Function pushed not found. Note that recursive function calls are not supported in the current version.'
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_bowl_2140_around_photoframe_219(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(bowl,photoframe_instance)
        else:
            exp(bowl,photoframe_instance)
    eff:
        unknown[bowl]=False
        close[bowl,photoframe_instance]=True
        close[photoframe_instance,bowl]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

behavior find_mat_203_around_fridge_126(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(mat,fridge_instance)
        else:
            exp(mat,fridge_instance)
    eff:
        unknown[mat]=False
        close[mat,fridge_instance]=True
        close[fridge_instance,mat]=True
    

behavior find_towel_2128_around_bathroom_counter_18(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(towel,bathroom_counter_instance)
        else:
            exp(towel,bathroom_counter_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_counter_instance]=True
        close[bathroom_counter_instance,towel]=True
    

#goal_representation
behavior retrieve_iron(iron:item, dining_room:item, bowl:item):
    body:
        achieve_once inside(iron, dining_room)
        achieve_once on(iron, bowl)
        achieve_once inhand(iron)

behavior iron_shirt(iron:item, ironing_board:item, shirt:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve is_on(iron)
        achieve_once inside_char(char, ironing_board)
        achieve pull(iron, shirt)
        achieve push(iron, shirt)
        achieve clean(shirt)

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)

        bind bowl: item where:
            is_bowl(bowl) and inside(bowl, dining_room)

        bind iron: item where:
            is_iron(iron) and on(iron, bowl)

        bind ironing_board: item where:
            is_ironing_board(ironing_board)

        bind bed: item where:
            is_bed(bed)

        bind shirt: item where:
            is_clothes_shirt(shirt)

        retrieve_iron(iron, dining_room, bowl)
        iron_shirt(iron, ironing_board, shirt)
        place_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Number of arguments does not match the number of types: 2 vs 1. Args: (VariableExpression<V::iron>, VariableExpression<V::shirt>), Types: (ObjectType<item>,)
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_bowl_2141_around_cupboard_118(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

#goal_representation
behavior retrieve_iron(iron:item, dining_room:item, bowl:item):
    body:
        achieve_once inside(iron, dining_room)
        achieve_once on(iron, bowl)
        achieve_once inhand(iron)

behavior iron_shirt(iron:item, ironing_board:item, shirt:item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve is_on(iron)
        achieve pull(iron, shirt)
        achieve push(iron, shirt)
        achieve clean(shirt)

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)

        bind bowl: item where:
            is_bowl(bowl) and inside(bowl, dining_room)

        bind iron: item where:
            is_iron(iron) and on(iron, bowl)

        bind ironing_board: item where:
            is_ironing_board(ironing_board)

        bind bed: item where:
            is_bed(bed)

        bind shirt: item where:
            is_clothes_shirt(shirt)

        retrieve_iron(iron, dining_room, bowl)
        iron_shirt(iron, ironing_board, shirt)
        place_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2141_around_kitchen_counter_123(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

behavior find_iron_2161_around_photoframe_219(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==219
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(iron,photoframe_instance)
        else:
            exp(iron,photoframe_instance)
    eff:
        unknown[iron]=False
        close[iron,photoframe_instance]=True
        close[photoframe_instance,iron]=True
    

behavior find_chair_271_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

behavior find_mat_32_around_mat_284(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind mat_instance:item where:
            is_mat(mat_instance) and id[mat_instance]==284
        achieve close_char(char,mat_instance)
        if can_open(mat_instance):
            achieve_once open(mat_instance)
            exp(mat,mat_instance)
        else:
            exp(mat,mat_instance)
    eff:
        unknown[mat]=False
        close[mat,mat_instance]=True
        close[mat_instance,mat]=True
    

behavior find_pillow_287_around_pillow_287(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==287
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
behavior retrieve_iron(iron: item, bowl: item):
    body:
        achieve_once on(iron, bowl)
        achieve_once visited(iron)

behavior start_ironing(shirt: item, iron: item):
    body:
        achieve_once is_on(iron)
        achieve_once clean(shirt)
        achieve_once inhand(iron)

behavior place_shirt_on_bed(shirt: item, bed: item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        
        bind iron: item where:
            is_iron(iron) and id[iron] == 2161
        
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2142 and close(iron, bowl)
        
        retrieve_iron(iron, bowl)
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        bind shirt: item where:
            is_clothes_shirt(shirt)
        
        start_ironing(shirt, iron)
        
        bind bed: item where:
            is_bed(bed)
        
        place_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2140_around_cupboard_118(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

behavior find_mat_284_around_mat_284(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind mat_instance:item where:
            is_mat(mat_instance) and id[mat_instance]==284
        achieve close_char(char,mat_instance)
        if can_open(mat_instance):
            achieve_once open(mat_instance)
            exp(mat,mat_instance)
        else:
            exp(mat,mat_instance)
    eff:
        unknown[mat]=False
        close[mat,mat_instance]=True
        close[mat_instance,mat]=True
    

behavior find_towel_2128_around_bathroom_counter_18(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(towel,bathroom_counter_instance)
        else:
            exp(towel,bathroom_counter_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_counter_instance]=True
        close[bathroom_counter_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior locate_iron(iron:item, dining_room:item, bowl:item):
    body:
        achieve_once inside(iron, dining_room)
        achieve_once inside(bowl, dining_room)
        achieve_once close_char(char, bowl)
        achieve_once on(iron, bowl)

behavior iron_and_place_shirt(iron:item, ironing_board:item, shirt:item, bed:item):
    body:
        achieve_once is_on(iron)
        achieve_once on(shirt, ironing_board)
        achieve close_char(char, shirt)
        push(iron)
        pull(iron)
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2142
            
        bind iron: item where:
            is_iron(iron) and id[iron] == 2161
        
        locate_iron(iron, dining_room, bowl)
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)

        bind shirt: item where:
            is_clothes_shirt(shirt)
        
        bind bed: item where:
            is_bed(bed)

        iron_and_place_shirt(iron, ironing_board, shirt, bed)
#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
Task Summary:
Task Goal:
Iron a shirt, and put it in on the bed.
Action History:
['walk_executor(ironing_board_2144)', 'walk_executor(basket_for_clothes_2078)', 'walk_executor(light_73)', 'walk_executor(bed_197)', 'walk_executor(dresser_274)', 'open_executor(dresser_274)', 'walk_executor(table_199)', 'walk_executor(curtain_289)', 'walk_executor(desk_272)', 'walk_executor(trashcan_99)', 'walk_executor(pillow_208)', 'walk_executor(walllamp_140)', 'walk_executor(toaster_132)', 'open_executor(toaster_132)', 'walk_executor(mat_203)', 'walk_executor(oven_127)', 'open_executor(oven_127)', 'walk_executor(cupboard_117)', 'walk_executor(wooden_spoon_2000)', 'walk_executor(doorjamb_309)', 'walk_executor(doorjamb_308)', 'walk_executor(photoframe_219)', 'walk_executor(photoframe_219)', 'walk_executor(novel_2060)', 'open_executor(novel_2060)']
Time info:
Time consume: 814 seconds
Exp_helper query times: 4
Guidance query times: 3
library scale: 79
goal generate times: 25
goal correct times: 4
action_num: 25

Task complete rate:
Keystate: k1 - Requires: 11 steps
Keystate: k2 - Requires: 4 steps
Action Completion Rate: 0.0
Scene_id: 1
##############################
