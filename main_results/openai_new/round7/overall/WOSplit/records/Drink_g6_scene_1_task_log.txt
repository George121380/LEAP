From agent.py
Reset goals: The sub-goals are: 
['Make a cup of lemon water with additional sugar.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_sugar_2111_around_cupboard_117(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_sugar,cupboard_instance)
        else:
            exp(food_sugar,cupboard_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,cupboard_instance]=True
        close[cupboard_instance,food_sugar]=True
    

behavior find_food_lemon_2100_around_fridge_126(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_lemon,fridge_instance)
        else:
            exp(food_lemon,fridge_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,fridge_instance]=True
        close[fridge_instance,food_lemon]=True
    

behavior find_cup_2049_around_table_199(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==199
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(cup,table_instance)
        else:
            exp(cup,table_instance)
    eff:
        unknown[cup]=False
        close[cup,table_instance]=True
        close[table_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior squeeze_lemon(lemon:item, cup:item):
    body:
        achieve_once squeeze(lemon)
        achieve_once inside(lemon, cup)
        # Squeeze the lemon into the cup

behavior add_sugar(sugar:item, cup:item):
    body:
        achieve_once inside(sugar, cup)
        # Add sugar into the cup

behavior fill_with_water(cup:item):
    body:
        achieve has_water(cup)
        # Fill the cup with water

behavior __goal__():
    body:
        bind lemon: item where:
            is_food_lemon(lemon)
        # Select a lemon

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select sugar

        squeeze_lemon(lemon, cup)
        add_sugar(sugar, cup)
        fill_with_water(cup)

#goal_representation_end

##############################
Error is:
Unknown expression type: <class 'concepts.dm.crow.behavior.CrowBehaviorApplicationExpression'>.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_sugar_2111_around_cupboard_117(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_sugar,cupboard_instance)
        else:
            exp(food_sugar,cupboard_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,cupboard_instance]=True
        close[cupboard_instance,food_sugar]=True
    

behavior find_knife_2122_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_food_lemon_2100_around_fridge_126(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_lemon,fridge_instance)
        else:
            exp(food_lemon,fridge_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,fridge_instance]=True
        close[fridge_instance,food_lemon]=True
    

behavior find_cup_2049_around_table_199(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==199
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(cup,table_instance)
        else:
            exp(cup,table_instance)
    eff:
        unknown[cup]=False
        close[cup,table_instance]=True
        close[table_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior squeeze_lemon(lemon:item):
    body:
        achieve cut(lemon)
        # Cut the lemon before squeezing
        achieve_once inhand(lemon)
        # Temporarily hold the lemon to squeeze it
        squeeze(lemon)
        # Squeeze the lemon juice into a container

behavior pour_water(cup:item, sink:item):
    body:
        achieve has_water(cup)
        # Fill the cup with water from the sink

behavior add_sugar(cup:item, sugar:item):
    body:
        achieve_once inside(sugar, cup)
        # Add sugar into the cup

behavior stir_drink(cup:item):
    body:
        achieve_once inhand(cup)
        # Temporarily hold the cup to stir the drink

behavior __goal__():
    body:
        bind lemon: item where:
            is_food_lemon(lemon)
        # Select a lemon

        bind sink: item where:
            is_sink(sink)
        # Select a sink for filling water

        bind cup: item where:
            is_cup(cup) and recipient(cup)
        # Select a cup that can receive liquids

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select sugar

        squeeze_lemon(lemon)
        pour_water(cup, sink)
        add_sugar(cup, sugar)
        stir_drink(cup)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior squeeze_lemon(lemon:item):
    body:
        achieve cut(lemon)
        # Cut the lemon before squeezing
        achieve_once inhand(lemon)
        # Temporarily hold the lemon to squeeze it
        squeeze(lemon)
        # Squeeze the lemon juice into a container

behavior pour_water(cup:item, sink:item):
    body:
        achieve has_water(cup)
        # Fill the cup with water from the sink

behavior add_sugar(cup:item, sugar:item):
    body:
        achieve_once inside(sugar, cup)
        # Add sugar into the cup

behavior stir_drink(cup:item):
    body:
        achieve_once inhand(cup)
        # Temporarily hold the cup to stir the drink

behavior __goal__():
    body:
        bind lemon: item where:
            is_food_lemon(lemon)
        # Select a lemon

        bind sink: item where:
            is_sink(sink)
        # Select a sink for filling water

        bind cup: item where:
            is_cup(cup) and recipient(cup)
        # Select a cup that can receive liquids

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select sugar

        squeeze_lemon(lemon)
        pour_water(cup, sink)
        add_sugar(cup, sugar)
        stir_drink(cup)

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_lemon_2100, fridge_126)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(cutting_board_2123)put_executor(food_lemon_2100, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_lemon_2100)cut_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(kitchen_counter_119)put_executor(knife_2122, kitchen_counter_119)walk_executor(food_lemon_2100)walk_executor(table_199)exp(cup_2132, table_199)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(cupboard_117)exp(food_sugar_2111, cupboard_117)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_lemon_2100, fridge_126)
Find food_lemon_2100. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_lemon_2100)walk_executor(cutting_board_2123)put_executor(food_lemon_2100, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_lemon_2100)cut_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(kitchen_counter_119)put_executor(knife_2122, kitchen_counter_119)walk_executor(food_lemon_2100)walk_executor(table_199)exp(cup_2132, table_199)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
grab_executor(food_lemon_2100)
Robot find: Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. Grabbing food_lemon_2100 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_78, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the food_lemon_2100. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_lemon_2100, cutting_board_2123)
Robot find: Robot is close to the food_lemon_2100. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. cutting_board_2123 is close food_lemon_2100. food_lemon_2100 is close cutting_board_2123. food_lemon_2100 is on cutting_board_2123. food_lemon_2100 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_76)
Robot find: Robot is close to the knifeblock_76. 
##############################
From agent.py
exp(knife_2122, knifeblock_76)
Fail to find knife_2122 around knifeblock_76. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['Make a cup of lemon water with additional sugar.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2037_around_kitchen_counter_123(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(knife,kitchen_counter_instance)
        else:
            exp(knife,kitchen_counter_instance)
    eff:
        unknown[knife]=False
        close[knife,kitchen_counter_instance]=True
        close[kitchen_counter_instance,knife]=True
    

behavior find_cup_2133_around_kitchen_counter_123(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

behavior find_diary_2008_around_bookshelf_124(diary:item):
    goal: not unknown(diary)
    body:
        assert is_diary(diary)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(diary,bookshelf_instance)
        else:
            exp(diary,bookshelf_instance)
    eff:
        unknown[diary]=False
        close[diary,bookshelf_instance]=True
        close[bookshelf_instance,diary]=True
    

#exp_behavior_end

#goal_representation
 
behavior squeeze_to_add_lemon_juice(lemon:item, cup:item):
    body:
        achive_once has_water(cup)
        # Ensure the cup has water inside
        achieve_once cut(lemon)
        # Ensure the lemon is cut before squeezing
        achieve_once inside(lemon, cup)
        # Squeeze the lemon to add juice into the cup

behavior add_sugar(cup:item, sugar:item):
    body:
        achieve_once inside(sugar, cup)
        # Add sugar to the cup

behavior __goal__():
    body:
        bind lemon: item where:
            is_food_lemon(lemon)
        # Select a lemon

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select some sugar

        squeeze_to_add_lemon_juice(lemon, cup)
        add_sugar(cup, sugar)
        # Add sugar to the lemon water

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'has_water') at line 5370, column 21.
Expected one of: 
	* EQUAL
	* __ANON_4
	* AT
	* PERCENT
	* __ANON_1
	* AMPERSAND
	* CIRCUMFLEX
	* IF
	* __ANON_6
	* __ANON_0
	* STAR
	* NOT_EQ
	* SEMICOLON
	* SLASH
	* _NEWLINE
	* __ANON_5
	* GREATER_EQ
	* MORETHAN
	* MINUS
	* RSHIFT
	* LSHIFT
	* VBAR
	* __ANON_8
	* LESS_EQ
	* FLOORDIV
	* LESSTHAN
	* COMMA
	* __ANON_7
	* PLUS
	* __ANON_2
	* DOUBLE_EQUAL
	* AND
	* OR
	* __ANON_3

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_knife_2035_around_cupboard_117(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(knife,cupboard_instance)
        else:
            exp(knife,cupboard_instance)
    eff:
        unknown[knife]=False
        close[knife,cupboard_instance]=True
        close[cupboard_instance,knife]=True
    

behavior find_cup_2134_around_cupboard_117(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

behavior find_diary_2008_around_bookshelf_124(diary:item):
    goal: not unknown(diary)
    body:
        assert is_diary(diary)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(diary,bookshelf_instance)
        else:
            exp(diary,bookshelf_instance)
    eff:
        unknown[diary]=False
        close[diary,bookshelf_instance]=True
        close[bookshelf_instance,diary]=True
    

#goal_representation
 
behavior squeeze_to_add_lemon_juice(lemon:item, cup:item):
    body:
        achieve_once has_water(cup)
        # Ensure the cup has water inside
        achieve_once cut(lemon)
        # Ensure the lemon is cut before squeezing
        achieve_once inside(lemon, cup)
        # Squeeze the lemon to add juice into the cup

behavior add_sugar(cup:item, sugar:item):
    body:
        achieve_once inside(sugar, cup)
        # Add sugar to the cup

behavior __goal__():
    body:
        bind lemon: item where:
            is_food_lemon(lemon)
        # Select a lemon

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select some sugar

        squeeze_to_add_lemon_juice(lemon, cup)
        add_sugar(cup, sugar)
        # Add sugar to the lemon water

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior squeeze_to_add_lemon_juice(lemon:item, cup:item):
    body:
        achieve_once has_water(cup)
        # Ensure the cup has water inside
        achieve_once cut(lemon)
        # Ensure the lemon is cut before squeezing
        achieve_once inside(lemon, cup)
        # Squeeze the lemon to add juice into the cup

behavior add_sugar(cup:item, sugar:item):
    body:
        achieve_once inside(sugar, cup)
        # Add sugar to the cup

behavior __goal__():
    body:
        bind lemon: item where:
            is_food_lemon(lemon)
        # Select a lemon

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select some sugar

        squeeze_to_add_lemon_juice(lemon, cup)
        add_sugar(cup, sugar)
        # Add sugar to the lemon water

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(cup_2132, cupboard_117)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(cupboard_117)exp(knife_2122, cupboard_117)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_lemon_2100)cut_executor(food_lemon_2100)walk_executor(kitchen_counter_119)put_executor(knife_2122, kitchen_counter_119)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(cup_2132)putin_executor(food_lemon_2100, cup_2132)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(cup_2132, cupboard_117)
Fail to find cup_2132 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(cup_2132, kitchen_counter_123)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(kitchen_counter_122)exp(knife_2122, kitchen_counter_122)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_lemon_2100)cut_executor(food_lemon_2100)walk_executor(kitchen_counter_119)put_executor(knife_2122, kitchen_counter_119)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(cup_2132)putin_executor(food_lemon_2100, cup_2132)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Robot find: tray_2068, oil_2149, knife_2035, food_kiwi_2054, food_orange_2027, Robot is close to the kitchen_counter_123. 
##############################
From agent.py
exp(cup_2132, kitchen_counter_123)
Fail to find cup_2132 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(cup_2132, cupboard_118)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(knife_2035)grab_executor(knife_2035)walk_executor(food_lemon_2100)cut_executor(food_lemon_2100)walk_executor(kitchen_counter_119)put_executor(cup_2132, kitchen_counter_119)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(cup_2132)putin_executor(food_lemon_2100, cup_2132)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(cup_2132, cupboard_118)
Fail to find cup_2132 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_199)exp(cup_2132, table_199)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(knife_2035)grab_executor(knife_2035)walk_executor(food_lemon_2100)cut_executor(food_lemon_2100)walk_executor(kitchen_counter_119)put_executor(cup_2132, kitchen_counter_119)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(cup_2132)putin_executor(food_lemon_2100, cup_2132)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(table_199)
Robot find: wooden_spoon_2000, mat_203, tea_bag_2023, drawing_201, drawing_202, Robot is close to the table_199. 
##############################
From agent.py
exp(cup_2132, table_199)
Fail to find cup_2132 around table_199. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_129)open_executor(dishwasher_129)exp(cup_2132, dishwasher_129)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(knife_2035)grab_executor(knife_2035)walk_executor(food_lemon_2100)cut_executor(food_lemon_2100)walk_executor(kitchen_counter_119)put_executor(cup_2132, kitchen_counter_119)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(cup_2132)putin_executor(food_lemon_2100, cup_2132)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the dishwasher_129. 
##############################
From agent.py
open_executor(dishwasher_129)
Robot find: detergent_2011, measuring_cup_2012, Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the measuring_cup_2012. dishwasher_129 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2132 ?
Answer: Robot, to locate cup_2132, go to dining_room_41. Once there, look for table_114. Cup_2132 is on table_114.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, to locate cup_2132, go to dining_room_41. Once there, look for table_114. Cup_2132 is on table_114.

The actions you have taken:
Action 1: Walk to fridge_126.
Action 2: Switch off fridge_126.
Action 3: Open fridge_126.
Action 4: look for food_lemon_2100 around fridge_126.
Action 5: Grab food_lemon_2100.
Action 6: Walk to cutting_board_2123.
Action 7: Put food_lemon_2100 on cutting_board_2123.
Action 8: Walk to knifeblock_76.
Action 9: look for knife_2122 around knifeblock_76.
Action 10: Walk to cupboard_117.
Action 11: look for cup_2132 around cupboard_117.
Action 12: Walk to kitchen_counter_123.
Action 13: look for cup_2132 around kitchen_counter_123.
Action 14: Walk to cupboard_118.
Action 15: Open cupboard_118.
Action 16: look for cup_2132 around cupboard_118.
Action 17: Walk to table_199.
Action 18: look for cup_2132 around table_199.
Action 19: Walk to dishwasher_129.
Action 20: Open dishwasher_129.

##############################
From agent.py
exp(cup_2132, dishwasher_129)
Fail to find cup_2132 around dishwasher_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(cup_2132, kitchen_counter_122)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(knife_2035)grab_executor(knife_2035)walk_executor(food_lemon_2100)cut_executor(food_lemon_2100)walk_executor(kitchen_counter_119)put_executor(cup_2132, kitchen_counter_119)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(cup_2132)putin_executor(food_lemon_2100, cup_2132)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, fryingpan_2154, Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(cup_2132, kitchen_counter_122)
Fail to find cup_2132 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(cup_2132, table_114)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(knife_2035)grab_executor(knife_2035)walk_executor(food_lemon_2100)cut_executor(food_lemon_2100)walk_executor(kitchen_counter_119)put_executor(cup_2132, kitchen_counter_119)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(cup_2132)putin_executor(food_lemon_2100, cup_2132)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(table_114)
Robot find: mat_102, cup_2049, pillow_103, pillow_104, pillow_105, pillow_106, lighter_2004, lighter_2039, box_2038, clothes_hat_2117, milk_2115, cup_2134, check_2058, drawing_110, drawing_111, clothes_gloves_2118, cup_2132, food_bread_2084, dry_pasta_2114, knife_2122, cup_2133, table_cloth_2005, food_food_2021, Robot is close to the table_114. Robot is close to the mat_102. 
##############################
From agent.py
exp(cup_2132, table_114)
Find cup_2132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_lemon_2100)cut_executor(food_lemon_2100)walk_executor(kitchen_counter_119)put_executor(knife_2122, kitchen_counter_119)walk_executor(food_lemon_2100)grab_executor(food_lemon_2100)walk_executor(cup_2132)putin_executor(food_lemon_2100, cup_2132)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(cup_2132)
Robot find: Robot is close to the table_114. Robot is close to the cup_2132. 
##############################
From agent.py
grab_executor(cup_2132)
Robot find: Robot is close to the table_114. Robot is close to the cup_2132. Grabbing cup_2132 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot find: mat_32, phone_2029, drawing_33, Robot is close to the cup_2132. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchon_executor(faucet_20)
Robot find: Robot is close to the cup_2132. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot find: Robot is close to the cup_2132. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned off. 
##############################
From agent.py
walk_executor(knife_2122)
Robot find: Robot is close to the cup_2132. Robot is close to the knife_2122. Robot is close to the table_114. 
##############################
From agent.py
grab_executor(knife_2122)
Robot find: Robot is close to the cup_2132. Robot is close to the knife_2122. Robot is close to the table_114. Grabbing knife_2122 by left hand. 
##############################
From agent.py
walk_executor(food_lemon_2100)
Robot find: Robot is close to the cup_2132. Robot is close to the knife_2122. Robot is close to the cutting_board_2123. Robot is close to the food_lemon_2100. 
##############################
From agent.py
cut_executor(food_lemon_2100)
Robot find: Robot is close to the cup_2132. Robot is close to the knife_2122. Robot is close to the cutting_board_2123. Robot is close to the food_lemon_2100. 
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: Robot is close to the cup_2132. Robot is close to the knife_2122. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(knife_2122, kitchen_counter_119)
Robot find: Robot is close to the cup_2132. Robot is close to the knife_2122. Robot is close to the kitchen_counter_119. kitchen_counter_119 is close knife_2122. knife_2122 is close kitchen_counter_119. knife_2122 is on kitchen_counter_119. knife_2122 released by left hand. 
##############################
From agent.py
walk_executor(food_lemon_2100)
Robot find: Robot is close to the cup_2132. Robot is close to the cutting_board_2123. Robot is close to the food_lemon_2100. 
##############################
From agent.py
grab_executor(food_lemon_2100)
Robot find: Robot is close to the cup_2132. Robot is close to the cutting_board_2123. Robot is close to the food_lemon_2100. Grabbing food_lemon_2100 by left hand. 
##############################
From agent.py
walk_executor(cup_2132)
Robot find: Robot is close to the cup_2132. Robot is close to the food_lemon_2100. 
##############################
From agent.py
putin_executor(food_lemon_2100, cup_2132)
Robot find: Robot is close to the cup_2132. Robot is close to the food_lemon_2100. food_lemon_2100 is inside cup_2132. cup_2132 is close food_lemon_2100. food_lemon_2100 is close cup_2132. food_lemon_2100 released by left hand. 
##############################
From agent.py
walk_executor(food_sugar_2111)
Robot find: Robot is close to the cup_2132. Robot is close to the fridge_126. Robot is close to the food_sugar_2111. 
##############################
From agent.py
grab_executor(food_sugar_2111)
Robot find: Robot is close to the cup_2132. Robot is close to the fridge_126. Robot is close to the food_sugar_2111. Grabbing food_sugar_2111 by left hand. 
##############################
From agent.py
walk_executor(cup_2132)
Robot find: Robot is close to the cup_2132. Robot is close to the food_sugar_2111. 
##############################
From agent.py
putin_executor(food_sugar_2111, cup_2132)
Robot find: Robot is close to the cup_2132. Robot is close to the food_sugar_2111. cup_2132 is close food_sugar_2111. food_sugar_2111 is inside cup_2132. food_sugar_2111 is close cup_2132. food_sugar_2111 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make a cup of lemon water with additional sugar.
Action History:
['walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'grab_executor(food_lemon_2100)', 'walk_executor(cutting_board_2123)', 'put_executor(food_lemon_2100, cutting_board_2123)', 'walk_executor(knifeblock_76)', 'walk_executor(cupboard_117)', 'walk_executor(kitchen_counter_123)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'walk_executor(table_199)', 'walk_executor(dishwasher_129)', 'open_executor(dishwasher_129)', 'walk_executor(kitchen_counter_122)', 'walk_executor(table_114)', 'walk_executor(cup_2132)', 'grab_executor(cup_2132)', 'walk_executor(faucet_20)', 'switchon_executor(faucet_20)', 'switchoff_executor(faucet_20)', 'walk_executor(knife_2122)', 'grab_executor(knife_2122)', 'walk_executor(food_lemon_2100)', 'cut_executor(food_lemon_2100)', 'walk_executor(kitchen_counter_119)', 'put_executor(knife_2122, kitchen_counter_119)', 'walk_executor(food_lemon_2100)', 'grab_executor(food_lemon_2100)', 'walk_executor(cup_2132)', 'putin_executor(food_lemon_2100, cup_2132)', 'walk_executor(food_sugar_2111)', 'grab_executor(food_sugar_2111)', 'walk_executor(cup_2132)', 'putin_executor(food_sugar_2111, cup_2132)']
Time info:
Time consume: 932 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 2
goal generate times: 3
goal correct times: 1
action_num: 35

Task complete rate:
1
Scene_id: 1
##############################
