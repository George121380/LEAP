From agent.py
Reset goals: The sub-goals are: 
['Wash the bowls and plates with dishwasher. And wash forks by hand.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2072_around_dishwasher_1001(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==1001
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(bowl,dishwasher_instance)
        else:
            exp(bowl,dishwasher_instance)
    eff:
        unknown[bowl]=False
        close[bowl,dishwasher_instance]=True
        close[dishwasher_instance,bowl]=True
    

behavior find_plate_1000_around_dishwasher_1001(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==1001
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(plate,dishwasher_instance)
        else:
            exp(plate,dishwasher_instance)
    eff:
        unknown[plate]=False
        close[plate,dishwasher_instance]=True
        close[dishwasher_instance,plate]=True
    

behavior find_fork_2081_around_sink_231(fork:item):
    goal: not unknown(fork)
    body:
        assert is_fork(fork)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(fork,sink_instance)
        else:
            exp(fork,sink_instance)
    eff:
        unknown[fork]=False
        close[fork,sink_instance]=True
        close[sink_instance,fork]=True
    

behavior find_soap_2054_around_sink_231(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher)
        achieve_once is_on(dishwasher)

behavior wash_forks_by_hand(fork:item):
    body:
        wash(fork)
        achieve_once clean(fork)

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        foreach o: item:
            if (is_plate(o) or is_bowl(o)) and dirty(o):
                load_dishwasher(o, dishwasher)
        start_dishwasher(dishwasher)

        foreach fork: item:
            if is_fork(fork) and dirty(fork):
                wash_forks_by_hand(fork)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher)
        achieve_once is_on(dishwasher)

behavior wash_forks_by_hand(fork:item):
    body:
        wash(fork)
        achieve_once clean(fork)

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        foreach o: item:
            if (is_plate(o) or is_bowl(o)) and dirty(o):
                load_dishwasher(o, dishwasher)
        start_dishwasher(dishwasher)

        foreach fork: item:
            if is_fork(fork) and dirty(fork):
                wash_forks_by_hand(fork)

##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. 
##############################
From agent.py
switchon_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure that the bowls and plates are loaded into the dishwasher, and the dishwasher must be closed before starting it. Additionally, you need to wash the forks by hand.
##############################
From agent.py
Human Instruction: You need to ensure that the bowls and plates are loaded into the dishwasher, and the dishwasher must be closed before starting it. Additionally, you need to wash the forks by hand.

The actions you have taken:
Action 1: Walk to dishwasher_1001.
Action 2: Switch on dishwasher_1001.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2071_around_kitchen_counter_230(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

behavior find_plate_1000_around_wallshelf_35(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==35
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(plate,wallshelf_instance)
        else:
            exp(plate,wallshelf_instance)
    eff:
        unknown[plate]=False
        close[plate,wallshelf_instance]=True
        close[wallshelf_instance,plate]=True
    

behavior find_fork_2081_around_sink_231(fork:item):
    goal: not unknown(fork)
    body:
        assert is_fork(fork)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(fork,sink_instance)
        else:
            exp(fork,sink_instance)
    eff:
        unknown[fork]=False
        close[fork,sink_instance]=True
        close[sink_instance,fork]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

behavior wash_forks_by_hand(fork:item):
    body:
        achieve_once has_water(fork)
        wash(fork)
        achieve_once clean(fork)

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher

        foreach o: item:
        # Load all bowls and plates into the dishwasher
            if is_bowl(o) or is_plate(o):
                load_dishwasher(o, dishwasher)
        start_dishwasher(dishwasher) # Start the dishwasher

        foreach fork: item:
            if is_fork(fork) and dirty(fork):
                wash_forks_by_hand(fork)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

behavior wash_forks_by_hand(fork:item):
    body:
        achieve_once has_water(fork)
        wash(fork)
        achieve_once clean(fork)

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher

        foreach o: item:
        # Load all bowls and plates into the dishwasher
            if is_bowl(o) or is_plate(o):
                load_dishwasher(o, dishwasher)
        start_dishwasher(dishwasher) # Start the dishwasher

        foreach fork: item:
            if is_fork(fork) and dirty(fork):
                wash_forks_by_hand(fork)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)exp(bowl_2071, kitchen_counter_230)walk_executor(dishwasher_1001)switchoff_executor(dishwasher_1001)open_executor(dishwasher_1001)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(kitchen_counter_230)exp(bowl_2072, kitchen_counter_230)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(wallshelf_35)exp(plate_1000, wallshelf_35)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the kitchen_counter_230. 
##############################
From agent.py
exp(bowl_2071, kitchen_counter_230)
Fail to find bowl_2071 around kitchen_counter_230. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_229)open_executor(cupboard_229)exp(bowl_2071, cupboard_229)walk_executor(dishwasher_1001)switchoff_executor(dishwasher_1001)open_executor(dishwasher_1001)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(cupboard_229)exp(bowl_2072, cupboard_229)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(cupboard_229)exp(plate_1000, cupboard_229)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(cupboard_229)
Robot find: Robot is close to the cupboard_229. 
##############################
From agent.py
open_executor(cupboard_229)
Robot find: Robot is close to the cupboard_229. cupboard_229 is opened. 
##############################
From agent.py
exp(bowl_2071, cupboard_229)
Fail to find bowl_2071 around cupboard_229. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_35)exp(bowl_2071, wallshelf_35)walk_executor(dishwasher_1001)switchoff_executor(dishwasher_1001)open_executor(dishwasher_1001)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(wallshelf_35)exp(bowl_2072, wallshelf_35)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(wallshelf_234)exp(plate_1000, wallshelf_234)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(wallshelf_35)
Robot find: towel_rack_33, towel_rack_34, Robot is close to the wallshelf_35. 
##############################
From agent.py
exp(bowl_2071, wallshelf_35)
Fail to find bowl_2071 around wallshelf_35. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_234)exp(bowl_2071, wallshelf_234)walk_executor(dishwasher_1001)switchoff_executor(dishwasher_1001)open_executor(dishwasher_1001)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(wallshelf_234)exp(bowl_2072, wallshelf_234)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(wallshelf_234)exp(plate_1000, wallshelf_234)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(wallshelf_234)
Robot find: Robot is close to the wallshelf_234. 
##############################
From agent.py
exp(bowl_2071, wallshelf_234)
Fail to find bowl_2071 around wallshelf_234. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_231)exp(bowl_2071, sink_231)walk_executor(dishwasher_1001)switchoff_executor(dishwasher_1001)open_executor(dishwasher_1001)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(sink_231)exp(bowl_2072, sink_231)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(nightstand_102)exp(plate_1000, nightstand_102)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(sink_231)
Robot find: soap_2054, plate_1000, Robot is close to the kitchen_counter_230. Robot is close to the sink_231. 
##############################
From agent.py
exp(bowl_2071, sink_231)
Fail to find bowl_2071 around sink_231. 
##############################
From agent.py-> find a plan in act()
walk_executor(stove_2065)open_executor(stove_2065)exp(bowl_2071, stove_2065)walk_executor(dishwasher_1001)switchoff_executor(dishwasher_1001)open_executor(dishwasher_1001)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(stove_2065)exp(bowl_2072, stove_2065)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(stove_2065)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the stove_2065. 
##############################
From agent.py
open_executor(stove_2065)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the stove_2065. stove_2065 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2071 ?
Answer: Robot, locate the target item, bowl_2071, which is inside dining_room_201. You will find bowl_2071 on top of table_226, as they are in close proximity to each other.
Re-decompose: None

##############################
From agent.py
Human Instruction: You need to ensure that the bowls and plates are loaded into the dishwasher, and the dishwasher must be closed before starting it. Additionally, you need to wash the forks by hand.
Robot, locate the target item, bowl_2071, which is inside dining_room_201. You will find bowl_2071 on top of table_226, as they are in close proximity to each other.

The actions you have taken:
Action 1: Walk to dishwasher_1001.
Action 2: Switch on dishwasher_1001.
Action 3: Walk to kitchen_counter_230.
Action 4: look for bowl_2071 around kitchen_counter_230.
Action 5: Walk to cupboard_229.
Action 6: Open cupboard_229.
Action 7: look for bowl_2071 around cupboard_229.
Action 8: Walk to wallshelf_35.
Action 9: look for bowl_2071 around wallshelf_35.
Action 10: Walk to wallshelf_234.
Action 11: look for bowl_2071 around wallshelf_234.
Action 12: Walk to sink_231.
Action 13: look for bowl_2071 around sink_231.
Action 14: Walk to stove_2065.
Action 15: Open stove_2065.

##############################
From agent.py
exp(bowl_2071, stove_2065)
Fail to find bowl_2071 around stove_2065. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_226)exp(bowl_2071, table_226)walk_executor(dishwasher_1001)switchoff_executor(dishwasher_1001)open_executor(dishwasher_1001)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(table_226)exp(bowl_2072, table_226)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(table_226)
Robot find: bowl_2071, coffee_filter_2000, drawing_2003, bowl_2072, mat_236, fork_2080, fork_2081, mat_237, Robot is close to the table_226. 
##############################
From agent.py
exp(bowl_2071, table_226)
Find bowl_2071. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_1001)switchoff_executor(dishwasher_1001)open_executor(dishwasher_1001)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. 
##############################
From agent.py
switchoff_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is turned off. 
##############################
From agent.py
open_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is opened. 
##############################
From agent.py
walk_executor(bowl_2071)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2071. 
##############################
From agent.py
grab_executor(bowl_2071)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2071. Grabbing bowl_2071 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the bowl_2071. Robot is close to the dishwasher_1001. 
##############################
From agent.py
putin_executor(bowl_2071, dishwasher_1001)
Robot find: Robot is close to the bowl_2071. Robot is close to the dishwasher_1001. bowl_2071 is close dishwasher_1001. bowl_2071 is inside dishwasher_1001. dishwasher_1001 is close bowl_2071. bowl_2071 released by right hand. 
##############################
From agent.py
walk_executor(bowl_2072)
Robot find: Robot is close to the bowl_2072. Robot is close to the table_226. 
##############################
From agent.py
grab_executor(bowl_2072)
Robot find: Robot is close to the bowl_2072. Robot is close to the table_226. Grabbing bowl_2072 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the bowl_2072. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. 
##############################
From agent.py
putin_executor(bowl_2072, dishwasher_1001)
Robot find: Robot is close to the bowl_2072. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. bowl_2072 is close dishwasher_1001. bowl_2072 is inside dishwasher_1001. dishwasher_1001 is close bowl_2072. bowl_2072 released by right hand. 
##############################
From agent.py
walk_executor(plate_1000)
Robot find: Robot is close to the plate_1000. Robot is close to the sink_231. 
##############################
From agent.py
grab_executor(plate_1000)
Robot find: Robot is close to the plate_1000. Robot is close to the sink_231. Grabbing plate_1000 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the plate_1000. Robot is close to the bowl_2072. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. 
##############################
From agent.py
putin_executor(plate_1000, dishwasher_1001)
Robot find: Robot is close to the plate_1000. Robot is close to the bowl_2072. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. plate_1000 is inside dishwasher_1001. plate_1000 is close dishwasher_1001. dishwasher_1001 is close plate_1000. plate_1000 released by right hand. 
##############################
From agent.py
close_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is closed. 
##############################
From agent.py
switchon_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to wash the forks by hand.
##############################
From agent.py
Human Instruction: You need to wash the forks by hand.

The actions you have taken:
Action 1: Walk to dishwasher_1001.
Action 2: Switch on dishwasher_1001.
Action 3: Walk to kitchen_counter_230.
Action 4: look for bowl_2071 around kitchen_counter_230.
Action 5: Walk to cupboard_229.
Action 6: Open cupboard_229.
Action 7: look for bowl_2071 around cupboard_229.
Action 8: Walk to wallshelf_35.
Action 9: look for bowl_2071 around wallshelf_35.
Action 10: Walk to wallshelf_234.
Action 11: look for bowl_2071 around wallshelf_234.
Action 12: Walk to sink_231.
Action 13: look for bowl_2071 around sink_231.
Action 14: Walk to stove_2065.
Action 15: Open stove_2065.
Action 16: look for bowl_2071 around stove_2065.
Action 17: Walk to table_226.
Action 18: look for bowl_2071 around table_226.
Action 19: Walk to dishwasher_1001.
Action 20: Switch off dishwasher_1001.
Action 21: Open dishwasher_1001.
Action 22: Walk to bowl_2071.
Action 23: Grab bowl_2071.
Action 24: Walk to dishwasher_1001.
Action 25: Put bowl_2071 into dishwasher_1001.
Action 26: Walk to bowl_2072.
Action 27: Grab bowl_2072.
Action 28: Walk to dishwasher_1001.
Action 29: Put bowl_2072 into dishwasher_1001.
Action 30: Walk to plate_1000.
Action 31: Grab plate_1000.
Action 32: Walk to dishwasher_1001.
Action 33: Put plate_1000 into dishwasher_1001.
Action 34: Close dishwasher_1001.
Action 35: Switch on dishwasher_1001.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2073_around_bathroom_counter_41(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(cleaning_solution,bathroom_counter_instance)
        else:
            exp(cleaning_solution,bathroom_counter_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_counter_instance]=True
        close[bathroom_counter_instance,cleaning_solution]=True
    

behavior find_soap_2053_around_sink_42(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==42
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the bowl or plate inside the dishwasher

behavior wash_fork_by_hand(fork:item):
    body:
        wash(fork)
        # Wash the fork by hand

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher) and id[dishwasher] == 1001
        # Select the dishwasher with ID 1001
        
        foreach o: item:
        # Load all bowls and plates into the dishwasher
            if (is_bowl(o) or is_plate(o)) and inside(o, char):
                load_dishwasher(o, dishwasher)
        
        foreach o: item:
        # Wash all forks by hand
            if is_fork(o) and inside(o, char):
                wash_fork_by_hand(o)
        
        start_dishwasher(dishwasher) # Start the dishwasher

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Error during applying inside[observation, state](x: item, y: item).
  Arguments: V::o, O::char
Argument #1 type does not match: expect item, got character.
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_detergent_2084_around_bathroom_counter_41(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(detergent,bathroom_counter_instance)
        else:
            exp(detergent,bathroom_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_counter_instance]=True
        close[bathroom_counter_instance,detergent]=True
    

behavior find_soap_2054_around_soap_2054(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind soap_instance:item where:
            is_soap(soap_instance) and id[soap_instance]==2054
        achieve close_char(char,soap_instance)
        if can_open(soap_instance):
            achieve_once open(soap_instance)
            exp(soap,soap_instance)
        else:
            exp(soap,soap_instance)
    eff:
        unknown[soap]=False
        close[soap,soap_instance]=True
        close[soap_instance,soap]=True
    

#goal_representation
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the bowl or plate inside the dishwasher

behavior wash_fork_by_hand(fork:item):
    body:
        wash(fork)
        # Wash the fork by hand

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher) and id[dishwasher] == 1001
        # Select the dishwasher with ID 1001
        
        foreach o: item:
        # Load all bowls and plates into the dishwasher
            if (is_bowl(o) or is_plate(o)) and inside_char(char, o):
                load_dishwasher(o, dishwasher)
        
        foreach o: item:
        # Wash all forks by hand
            if is_fork(o) and inside_char(char, o):
                wash_fork_by_hand(o)
        
        start_dishwasher(dishwasher) # Start the dishwasher

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(item:item, dishwasher:item):
    body:
        achieve_once inside(item, dishwasher)

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher)
        achieve_once is_on(dishwasher)

behavior wash_fork_by_hand(fork:item):
    body:
        wash(fork)
        achieve clean(fork)

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher) and id[dishwasher] == 1001

        foreach item: item:
            if (is_bowl(item) or is_plate(item)) and not clean(item):
                load_dishwasher(item, dishwasher)

        start_dishwasher(dishwasher)

        foreach fork: item:
            if is_fork(fork) and not clean(fork):
                wash_fork_by_hand(fork)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_dishwasher(item:item, dishwasher:item):
    body:
        achieve_once inside(item, dishwasher)

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher)
        achieve_once is_on(dishwasher)

behavior wash_fork_by_hand(fork:item):
    body:
        wash(fork)
        achieve clean(fork)

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher) and id[dishwasher] == 1001

        foreach item: item:
            if (is_bowl(item) or is_plate(item)) and not clean(item):
                load_dishwasher(item, dishwasher)

        start_dishwasher(dishwasher)

        foreach fork: item:
            if is_fork(fork) and not clean(fork):
                wash_fork_by_hand(fork)

##############################
From agent.py-> find a plan in act()
walk_executor(fork_2080)grab_executor(fork_2080)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(fork_2080)switchoff_executor(faucet_43)walk_executor(fork_2081)grab_executor(fork_2081)walk_executor(kitchen_counter_230)put_executor(fork_2080, kitchen_counter_230)switchon_executor(faucet_232)wash_executor(fork_2081)switchoff_executor(faucet_232)
##############################
From agent.py
walk_executor(fork_2080)
Robot find: Robot is close to the fork_2080. Robot is close to the table_226. 
##############################
From agent.py
grab_executor(fork_2080)
Robot find: Robot is close to the fork_2080. Robot is close to the table_226. Grabbing fork_2080 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: towel_rack_31, towel_rack_32, Robot is close to the fork_2080. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the fork_2080. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
wash_executor(fork_2080)
Robot find: Robot is close to the fork_2080. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the fork_2080. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py
walk_executor(fork_2081)
Robot find: Robot is close to the fork_2080. Robot is close to the fork_2081. Robot is close to the table_226. 
##############################
From agent.py
grab_executor(fork_2081)
Robot find: Robot is close to the fork_2080. Robot is close to the fork_2081. Robot is close to the table_226. Grabbing fork_2081 by left hand. 
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: Robot is close to the fork_2080. Robot is close to the fork_2081. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
put_executor(fork_2080, kitchen_counter_230)
Robot find: Robot is close to the fork_2080. Robot is close to the fork_2081. Robot is close to the kitchen_counter_230. kitchen_counter_230 is close fork_2080. fork_2080 is close kitchen_counter_230. fork_2080 is on kitchen_counter_230. fork_2080 released by right hand. 
##############################
From agent.py
switchon_executor(faucet_232)
Robot find: Robot is close to the fork_2080. Robot is close to the fork_2081. Robot is close to the kitchen_counter_230. faucet_232 is turned on. 
##############################
From agent.py
wash_executor(fork_2081)
Robot find: Robot is close to the fork_2080. Robot is close to the fork_2081. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
switchoff_executor(faucet_232)
Robot find: Robot is close to the fork_2080. Robot is close to the fork_2081. Robot is close to the kitchen_counter_230. faucet_232 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Wash the bowls and plates with dishwasher. And wash forks by hand.
Action History:
['walk_executor(dishwasher_1001)', 'switchon_executor(dishwasher_1001)', 'walk_executor(kitchen_counter_230)', 'walk_executor(cupboard_229)', 'open_executor(cupboard_229)', 'walk_executor(wallshelf_35)', 'walk_executor(wallshelf_234)', 'walk_executor(sink_231)', 'walk_executor(stove_2065)', 'open_executor(stove_2065)', 'walk_executor(table_226)', 'walk_executor(dishwasher_1001)', 'switchoff_executor(dishwasher_1001)', 'open_executor(dishwasher_1001)', 'walk_executor(bowl_2071)', 'grab_executor(bowl_2071)', 'walk_executor(dishwasher_1001)', 'putin_executor(bowl_2071, dishwasher_1001)', 'walk_executor(bowl_2072)', 'grab_executor(bowl_2072)', 'walk_executor(dishwasher_1001)', 'putin_executor(bowl_2072, dishwasher_1001)', 'walk_executor(plate_1000)', 'grab_executor(plate_1000)', 'walk_executor(dishwasher_1001)', 'putin_executor(plate_1000, dishwasher_1001)', 'close_executor(dishwasher_1001)', 'switchon_executor(dishwasher_1001)', 'walk_executor(fork_2080)', 'grab_executor(fork_2080)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'wash_executor(fork_2080)', 'switchoff_executor(faucet_43)', 'walk_executor(fork_2081)', 'grab_executor(fork_2081)', 'walk_executor(kitchen_counter_230)', 'put_executor(fork_2080, kitchen_counter_230)', 'switchon_executor(faucet_232)', 'wash_executor(fork_2081)', 'switchoff_executor(faucet_232)']
Time info:
Time consume: 202 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 8
goal generate times: 4
goal correct times: 0
action_num: 41

Task complete rate:
1
Scene_id: 0
##############################
