From agent.py
Reset goals: The sub-goals are: 
['make a cup of coffee using the coffee maker, then add milk and sugar.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2115_around_fridge_126(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_cup_2049_around_cupboard_118(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

behavior find_food_sugar_2111_around_cupboard_118(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_sugar,cupboard_instance)
        else:
            exp(food_sugar,cupboard_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,cupboard_instance]=True
        close[cupboard_instance,food_sugar]=True
    

#exp_behavior_end

#goal_representation
 
behavior brew_coffee(coffee_maker:item, cup:item):
    body:
        achieve_once has_water(cup)
        # Ensure the cup has been filled with brewed coffee

behavior add_milk_and_sugar(cup:item, milk:item, sugar:item):
    body:
        achieve_once inside(milk, cup)
        # Add milk to the cup
        achieve_once inside(sugar, cup)
        # Add sugar to the cup

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)

        bind cup: item where:
            is_cup(cup)

        bind milk: item where:
            is_milk(milk)

        bind sugar: item where:
            is_food_sugar(sugar)

        brew_coffee(coffee_maker, cup)
        add_milk_and_sugar(cup, milk, sugar)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior brew_coffee(coffee_maker:item, cup:item):
    body:
        achieve_once has_water(cup)
        # Ensure the cup has been filled with brewed coffee

behavior add_milk_and_sugar(cup:item, milk:item, sugar:item):
    body:
        achieve_once inside(milk, cup)
        # Add milk to the cup
        achieve_once inside(sugar, cup)
        # Add sugar to the cup

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)

        bind cup: item where:
            is_cup(cup)

        bind milk: item where:
            is_milk(milk)

        bind sugar: item where:
            is_food_sugar(sugar)

        brew_coffee(coffee_maker, cup)
        add_milk_and_sugar(cup, milk, sugar)

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(cup_2132, cupboard_118)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(cupboard_118)exp(food_sugar_2111, cupboard_118)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: pot_78, Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(cup_2132, cupboard_118)
Fail to find cup_2132 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(cup_2132, cupboard_117)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(cupboard_117)exp(food_sugar_2111, cupboard_117)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(cup_2132, cupboard_117)
Fail to find cup_2132 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(cup_2132, kitchen_counter_122)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(kitchen_counter_122)exp(food_sugar_2111, kitchen_counter_122)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, fryingpan_2154, Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(cup_2132, kitchen_counter_122)
Fail to find cup_2132 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(cup_2132, table_114)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(kitchen_counter_123)exp(food_sugar_2111, kitchen_counter_123)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(table_114)
Robot find: mat_102, cup_2049, pillow_103, pillow_104, pillow_105, pillow_106, lighter_2004, lighter_2039, box_2038, clothes_hat_2117, milk_2115, cup_2134, check_2058, drawing_110, drawing_111, clothes_gloves_2118, cup_2132, food_bread_2084, dry_pasta_2114, knife_2122, cup_2133, table_cloth_2005, food_food_2021, Robot is close to the table_114. Robot is close to the mat_102. 
##############################
From agent.py
exp(cup_2132, table_114)
Find cup_2132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(kitchen_counter_123)exp(food_sugar_2111, kitchen_counter_123)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(cup_2132)
Robot find: Robot is close to the table_114. Robot is close to the cup_2132. 
##############################
From agent.py
grab_executor(cup_2132)
Robot find: Robot is close to the table_114. Robot is close to the cup_2132. Grabbing cup_2132 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot find: mat_32, phone_2029, drawing_33, Robot is close to the cup_2132. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. 
##############################
From agent.py
switchon_executor(faucet_20)
Robot find: Robot is close to the cup_2132. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot find: Robot is close to the cup_2132. Robot is close to the bathroom_counter_18. Robot is close to the faucet_20. faucet_20 is turned off. 
##############################
From agent.py
walk_executor(milk_2115)
Robot find: Robot is close to the cup_2132. Robot is close to the table_114. Robot is close to the milk_2115. 
##############################
From agent.py
grab_executor(milk_2115)
Robot find: Robot is close to the cup_2132. Robot is close to the table_114. Robot is close to the milk_2115. Grabbing milk_2115 by left hand. 
##############################
From agent.py
walk_executor(cup_2132)
Robot find: Robot is close to the cup_2132. Robot is close to the milk_2115. 
##############################
From agent.py
putin_executor(milk_2115, cup_2132)
Robot find: Robot is close to the cup_2132. Robot is close to the milk_2115. milk_2115 is close cup_2132. cup_2132 is close milk_2115. milk_2115 is inside cup_2132. milk_2115 released by left hand. 
##############################
From agent.py
walk_executor(kitchen_counter_123)
Robot find: tray_2068, oil_2149, knife_2035, food_kiwi_2054, food_orange_2027, Robot is close to the cup_2132. Robot is close to the kitchen_counter_123. 
##############################
From agent.py
exp(food_sugar_2111, kitchen_counter_123)
Fail to find food_sugar_2111 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(food_sugar_2111, kitchen_counter_119)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the cup_2132. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(food_sugar_2111, kitchen_counter_119)
Fail to find food_sugar_2111 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_sugar_2111, fridge_126)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the cup_2132. Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the cup_2132. Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the cup_2132. Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_sugar_2111, fridge_126)
Find food_sugar_2111. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_sugar_2111)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
grab_executor(food_sugar_2111)
Robot find: Robot is close to the cup_2132. Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. Grabbing food_sugar_2111 by left hand. 
##############################
From agent.py
putin_executor(food_sugar_2111, cup_2132)
Robot find: Robot is close to the cup_2132. Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. cup_2132 is close food_sugar_2111. food_sugar_2111 is inside cup_2132. food_sugar_2111 is close cup_2132. food_sugar_2111 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The coffee-making part of the task is incomplete. You need to use the coffee maker to brew coffee into the cup. Currently, only milk and sugar have been added to the cup.
##############################
From agent.py
Human Instruction: The coffee-making part of the task is incomplete. You need to use the coffee maker to brew coffee into the cup. Currently, only milk and sugar have been added to the cup.

The actions you have taken:
Action 1: Walk to cupboard_118.
Action 2: Open cupboard_118.
Action 3: look for cup_2132 around cupboard_118.
Action 4: Walk to cupboard_117.
Action 5: look for cup_2132 around cupboard_117.
Action 6: Walk to kitchen_counter_122.
Action 7: look for cup_2132 around kitchen_counter_122.
Action 8: Walk to table_114.
Action 9: look for cup_2132 around table_114.
Action 10: Walk to cup_2132.
Action 11: Grab cup_2132.
Action 12: Walk to faucet_20.
Action 13: Switch on faucet_20.
Action 14: Switch off faucet_20.
Action 15: Walk to milk_2115.
Action 16: Grab milk_2115.
Action 17: Walk to cup_2132.
Action 18: Put milk_2115 into cup_2132.
Action 19: Walk to kitchen_counter_123.
Action 20: look for food_sugar_2111 around kitchen_counter_123.
Action 21: Walk to kitchen_counter_119.
Action 22: look for food_sugar_2111 around kitchen_counter_119.
Action 23: Walk to fridge_126.
Action 24: Switch off fridge_126.
Action 25: Open fridge_126.
Action 26: look for food_sugar_2111 around fridge_126.
Action 27: Grab food_sugar_2111.
Action 28: Put food_sugar_2111 into cup_2132.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_coffee_filter_2053_around_coffe_maker_130(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind coffe_maker_instance:item where:
            is_coffe_maker(coffe_maker_instance) and id[coffe_maker_instance]==130
        achieve close_char(char,coffe_maker_instance)
        if can_open(coffe_maker_instance):
            achieve_once open(coffe_maker_instance)
            exp(coffee_filter,coffe_maker_instance)
        else:
            exp(coffee_filter,coffe_maker_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,coffe_maker_instance]=True
        close[coffe_maker_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
behavior brew_coffee(coffee_maker:item, cup:item):
    body:
        achieve_once on(cup, coffee_maker)
        # Place the cup under the coffee maker
        achieve_once is_on(coffee_maker)
        # Turn on the coffee maker to brew coffee into the cup

behavior add_ingredients(cup:item, milk:item, sugar:item):
    body:
        achieve_once inside(milk, cup)
        # Add milk to the cup
        achieve_once inside(sugar, cup)
        # Add sugar to the cup

behavior stop_coffee_maker(coffee_maker:item):
    body:
        achieve_once is_off(coffee_maker)
        # Turn off the coffee maker once brewing is complete

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select a coffee maker

        bind cup: item where:
            is_cup(cup) and id[cup] == 2132
        # Select the cup with ID 2132

        bind milk: item where:
            is_milk(milk) and id[milk] == 2115
        # Select the milk with ID 2115

        bind sugar: item where:
            is_food_sugar(sugar) and id[sugar] == 2111
        # Select the sugar with ID 2111

        brew_coffee(coffee_maker, cup)
        add_ingredients(cup, milk, sugar)
        stop_coffee_maker(coffee_maker)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior brew_coffee(coffee_maker:item, cup:item):
    body:
        achieve_once on(cup, coffee_maker)
        # Place the cup under the coffee maker
        achieve_once is_on(coffee_maker)
        # Turn on the coffee maker to brew coffee into the cup

behavior add_ingredients(cup:item, milk:item, sugar:item):
    body:
        achieve_once inside(milk, cup)
        # Add milk to the cup
        achieve_once inside(sugar, cup)
        # Add sugar to the cup

behavior stop_coffee_maker(coffee_maker:item):
    body:
        achieve_once is_off(coffee_maker)
        # Turn off the coffee maker once brewing is complete

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select a coffee maker

        bind cup: item where:
            is_cup(cup) and id[cup] == 2132
        # Select the cup with ID 2132

        bind milk: item where:
            is_milk(milk) and id[milk] == 2115
        # Select the milk with ID 2115

        bind sugar: item where:
            is_food_sugar(sugar) and id[sugar] == 2111
        # Select the sugar with ID 2111

        brew_coffee(coffee_maker, cup)
        add_ingredients(cup, milk, sugar)
        stop_coffee_maker(coffee_maker)

##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)switchon_executor(coffe_maker_130)switchoff_executor(coffe_maker_130)
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot find: Robot is close to the cup_2132. Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. 
##############################
From agent.py
put_executor(cup_2132, coffe_maker_130)
Robot find: Robot is close to the cup_2132. Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. coffe_maker_130 is close cup_2132. cup_2132 is close coffe_maker_130. cup_2132 is on coffe_maker_130. cup_2132 released by right hand. 
##############################
From agent.py
switchon_executor(coffe_maker_130)
Robot find: Robot is close to the cup_2132. Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. coffe_maker_130 is turned on. 
##############################
From agent.py
switchoff_executor(coffe_maker_130)
Robot find: Robot is close to the cup_2132. Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. coffe_maker_130 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to ensure that coffee has been brewed into cup_2132 using the coffee maker. Currently, only milk and sugar has been added, and the coffee maker was turned on and off without it being explicitly stated that coffee brewed into the cup.
##############################
From agent.py
Human Instruction: The robot needs to ensure that coffee has been brewed into cup_2132 using the coffee maker. Currently, only milk and sugar has been added, and the coffee maker was turned on and off without it being explicitly stated that coffee brewed into the cup.

The actions you have taken:
Action 1: Walk to cupboard_118.
Action 2: Open cupboard_118.
Action 3: look for cup_2132 around cupboard_118.
Action 4: Walk to cupboard_117.
Action 5: look for cup_2132 around cupboard_117.
Action 6: Walk to kitchen_counter_122.
Action 7: look for cup_2132 around kitchen_counter_122.
Action 8: Walk to table_114.
Action 9: look for cup_2132 around table_114.
Action 10: Walk to cup_2132.
Action 11: Grab cup_2132.
Action 12: Walk to faucet_20.
Action 13: Switch on faucet_20.
Action 14: Switch off faucet_20.
Action 15: Walk to milk_2115.
Action 16: Grab milk_2115.
Action 17: Walk to cup_2132.
Action 18: Put milk_2115 into cup_2132.
Action 19: Walk to kitchen_counter_123.
Action 20: look for food_sugar_2111 around kitchen_counter_123.
Action 21: Walk to kitchen_counter_119.
Action 22: look for food_sugar_2111 around kitchen_counter_119.
Action 23: Walk to fridge_126.
Action 24: Switch off fridge_126.
Action 25: Open fridge_126.
Action 26: look for food_sugar_2111 around fridge_126.
Action 27: Grab food_sugar_2111.
Action 28: Put food_sugar_2111 into cup_2132.
Action 29: Walk to coffe_maker_130.
Action 30: Put cup_2132 on coffe_maker_130.
Action 31: Switch on coffe_maker_130.
Action 32: Switch off coffe_maker_130.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_coffee_filter_2053_around_dishwasher_129(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==129
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(coffee_filter,dishwasher_instance)
        else:
            exp(coffee_filter,dishwasher_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,dishwasher_instance]=True
        close[dishwasher_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
behavior brew_coffee(coffee_maker:item, cup:item):
    body:
        achieve_once inside(coffee_maker, cup)
        # Ensure coffee fills the cup from the coffee maker

behavior add_milk_and_sugar(cup:item, milk:item, sugar:item, table:item):
    body:
        achieve_once on(cup, table)
        achieve_once inside(milk, cup)
        achieve_once inside(sugar, cup)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker) and id[coffee_maker] == 130
        # Select the coffee maker with ID 130
        
        bind cup: item where:
            is_cup(cup) and id[cup] == 2132
        # Select the cup with ID 2132
        
        bind milk: item where:
            is_milk(milk) and id[milk] == 2115
        # Select the milk with ID 2115
        
        bind sugar: item where:
            is_food_sugar(sugar) and id[sugar] == 2111
        # Select the sugar with ID 2111
        
        bind kitchen_counter: item where:
            is_kitchen_counter(kitchen_counter) and id[kitchen_counter] == 122
        # Select the kitchen counter with ID 122
        
        brew_coffee(coffee_maker, cup)
        add_milk_and_sugar(cup, milk, sugar, kitchen_counter)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_coffee_filter_2053_around_fryingpan_2154(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind fryingpan_instance:item where:
            is_fryingpan(fryingpan_instance) and id[fryingpan_instance]==2154
        achieve close_char(char,fryingpan_instance)
        if can_open(fryingpan_instance):
            achieve_once open(fryingpan_instance)
            exp(coffee_filter,fryingpan_instance)
        else:
            exp(coffee_filter,fryingpan_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,fryingpan_instance]=True
        close[fryingpan_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
behavior ensure_coffee_brewed(cup:item, coffee_maker:item):
    body:
        achieve_once on(cup, coffee_maker)
        # Ensure that the cup is placed on the coffee maker
        achieve_once is_on(coffee_maker)
        # Ensure the coffee maker is turned on
        achieve_once is_off(coffee_maker)
        # Ensure the coffee maker is turned off once coffee is brewed

behavior add_milk(cup:item, milk:item):
    body:
        achieve_once inside(milk, cup)
        # Add milk into the cup

behavior add_sugar(cup:item, sugar:item):
    body:
        achieve_once inside(sugar, cup)
        # Add sugar into the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup]==2132
        # Select the specific cup by ID
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker) and id[coffee_maker]==130
        # Select the coffee maker by ID
        bind milk: item where:
            is_milk(milk) and id[milk]==2115
        # Select the milk product
        bind sugar: item where:
            is_food_sugar(sugar) and id[sugar]==2111
        # Select the sugar item
        
        ensure_coffee_brewed(cup, coffee_maker)
        add_milk(cup, milk)
        add_sugar(cup, sugar)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior ensure_coffee_brewed(cup:item, coffee_maker:item):
    body:
        achieve_once on(cup, coffee_maker)
        # Ensure that the cup is placed on the coffee maker
        achieve_once is_on(coffee_maker)
        # Ensure the coffee maker is turned on
        achieve_once is_off(coffee_maker)
        # Ensure the coffee maker is turned off once coffee is brewed

behavior add_milk(cup:item, milk:item):
    body:
        achieve_once inside(milk, cup)
        # Add milk into the cup

behavior add_sugar(cup:item, sugar:item):
    body:
        achieve_once inside(sugar, cup)
        # Add sugar into the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup]==2132
        # Select the specific cup by ID
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker) and id[coffee_maker]==130
        # Select the coffee maker by ID
        bind milk: item where:
            is_milk(milk) and id[milk]==2115
        # Select the milk product
        bind sugar: item where:
            is_food_sugar(sugar) and id[sugar]==2111
        # Select the sugar item
        
        ensure_coffee_brewed(cup, coffee_maker)
        add_milk(cup, milk)
        add_sugar(cup, sugar)

##############################
From agent.py-> find a plan in act()
switchon_executor(coffe_maker_130)switchoff_executor(coffe_maker_130)
##############################
From agent.py
switchon_executor(coffe_maker_130)
Robot find: Robot is close to the cup_2132. Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. coffe_maker_130 is turned on. 
##############################
From agent.py
switchoff_executor(coffe_maker_130)
Robot find: Robot is close to the cup_2132. Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. coffe_maker_130 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
make a cup of coffee using the coffee maker, then add milk and sugar.
Action History:
['walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'walk_executor(cupboard_117)', 'walk_executor(kitchen_counter_122)', 'walk_executor(table_114)', 'walk_executor(cup_2132)', 'grab_executor(cup_2132)', 'walk_executor(faucet_20)', 'switchon_executor(faucet_20)', 'switchoff_executor(faucet_20)', 'walk_executor(milk_2115)', 'grab_executor(milk_2115)', 'walk_executor(cup_2132)', 'putin_executor(milk_2115, cup_2132)', 'walk_executor(kitchen_counter_123)', 'walk_executor(kitchen_counter_119)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'grab_executor(food_sugar_2111)', 'putin_executor(food_sugar_2111, cup_2132)', 'walk_executor(coffe_maker_130)', 'put_executor(cup_2132, coffe_maker_130)', 'switchon_executor(coffe_maker_130)', 'switchoff_executor(coffe_maker_130)', 'switchon_executor(coffe_maker_130)', 'switchoff_executor(coffe_maker_130)']
Time info:
Time consume: 155 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 7
goal generate times: 4
goal correct times: 0
action_num: 27

Task complete rate:
Keystate: k1 - Requires: 15 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
