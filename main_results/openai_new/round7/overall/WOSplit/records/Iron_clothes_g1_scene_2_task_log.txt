From agent.py
Reset goals: The sub-goals are: 
['Directly iron a pair of skirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_skirt_2116_around_ironing_board_2099(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_skirt,ironing_board_instance)
        else:
            exp(clothes_skirt,ironing_board_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,ironing_board_instance]=True
        close[ironing_board_instance,clothes_skirt]=True
    

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
## Output:

behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once plugged(iron)
        achieve_once is_on(iron)
        achieve_once open(ironing_board)
        achieve_once on(skirt, ironing_board)
        achieve clean(skirt) # Ironing removes wrinkles, making the skirt appear clean

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        
        bind iron: item where:
            is_iron(iron)
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        iron_skirt(skirt, iron, ironing_board)
#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_skirt_2116_around_ironing_board_2099(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_skirt,ironing_board_instance)
        else:
            exp(clothes_skirt,ironing_board_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,ironing_board_instance]=True
        close[ironing_board_instance,clothes_skirt]=True
    

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior achieve_ironing_state(skirt:item, iron:item):
    body:
        achieve_once inhand(skirt)
        achieve is_on(iron)
        achieve clean(skirt)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind iron: item where:
            is_iron(iron)
        achieve_ironing_state(skirt, iron)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior achieve_ironing_state(skirt:item, iron:item):
    body:
        achieve_once inhand(skirt)
        achieve is_on(iron)
        achieve clean(skirt)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind iron: item where:
            is_iron(iron)
        achieve_ironing_state(skirt, iron)

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)exp(clothes_skirt_2116, ironing_board_2099)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)exp(iron_2117, ironing_board_2099)walk_executor(iron_2117)plugin_executor(iron_2117)switchon_executor(iron_2117)wash_executor(clothes_skirt_2116)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: iron_2117, Robot is close to the ironing_board_2099. 
##############################
From agent.py
exp(clothes_skirt_2116, ironing_board_2099)
Fail to find clothes_skirt_2116 around ironing_board_2099. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)exp(clothes_skirt_2116, basket_for_clothes_2040)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(iron_2117)plugin_executor(iron_2117)switchon_executor(iron_2117)wash_executor(clothes_skirt_2116)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Robot find: clothes_pants_2113, clothes_shirt_2114, clothes_socks_2115, clothes_skirt_2116, Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. 
##############################
From agent.py
exp(clothes_skirt_2116, basket_for_clothes_2040)
Find clothes_skirt_2116. 
##############################
From agent.py-> find a plan in act()
grab_executor(clothes_skirt_2116)walk_executor(iron_2117)plugin_executor(iron_2117)switchon_executor(iron_2117)wash_executor(clothes_skirt_2116)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
grab_executor(clothes_skirt_2116)
Robot find: Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. Grabbing clothes_skirt_2116 by right hand. 
##############################
From agent.py
walk_executor(iron_2117)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. 
##############################
From agent.py
plugin_executor(iron_2117)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. iron_2117 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2117)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. iron_2117 is turned on. 
##############################
From agent.py
wash_executor(clothes_skirt_2116)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. clothes_skirt_2116 is cleaned. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: pot_54, Robot is close to the clothes_skirt_2116. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to iron the clothes_skirt_2116. This includes directly using the iron_2117 on the skirt to complete the ironing process, which has not been mentioned as an action taken.
##############################
From agent.py
Human Instruction: The robot needs to iron the clothes_skirt_2116. This includes directly using the iron_2117 on the skirt to complete the ironing process, which has not been mentioned as an action taken.

The actions you have taken:
Action 1: Walk to ironing_board_2099.
Action 2: look for clothes_skirt_2116 around ironing_board_2099.
Action 3: Walk to basket_for_clothes_2040.
Action 4: look for clothes_skirt_2116 around basket_for_clothes_2040.
Action 5: Grab clothes_skirt_2116.
Action 6: Walk to iron_2117.
Action 7: Plug in iron_2117.
Action 8: Switch on iron_2117.
Action 9: Wash clothes_skirt_2116.
Action 10: Walk to faucet_134.
Action 11: Switch off faucet_134.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2098_around_sink_307(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(cleaning_solution,sink_instance)
        else:
            exp(cleaning_solution,sink_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,sink_instance]=True
        close[sink_instance,cleaning_solution]=True
    

behavior find_clothes_hat_2076_around_washing_machine_2041(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_hat,washing_machine_instance)
        else:
            exp(clothes_hat,washing_machine_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,washing_machine_instance]=True
        close[washing_machine_instance,clothes_hat]=True
    

behavior find_towel_2083_around_sink_307(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(towel,sink_instance)
        else:
            exp(towel,sink_instance)
    eff:
        unknown[towel]=False
        close[towel,sink_instance]=True
        close[sink_instance,towel]=True
    

behavior find_clothes_underwear_2022_around_washing_machine_2041(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_underwear,washing_machine_instance)
        else:
            exp(clothes_underwear,washing_machine_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,washing_machine_instance]=True
        close[washing_machine_instance,clothes_underwear]=True
    

behavior find_towel_rack_298_around_bathtub_297(towel_rack:item):
    goal: not unknown(towel_rack)
    body:
        assert is_towel_rack(towel_rack)
        bind bathtub_instance:item where:
            is_bathtub(bathtub_instance) and id[bathtub_instance]==297
        achieve close_char(char,bathtub_instance)
        if can_open(bathtub_instance):
            achieve_once open(bathtub_instance)
            exp(towel_rack,bathtub_instance)
        else:
            exp(towel_rack,bathtub_instance)
    eff:
        unknown[towel_rack]=False
        close[towel_rack,bathtub_instance]=True
        close[bathtub_instance,towel_rack]=True
    

behavior find_clothes_jacket_2078_around_washing_machine_2041(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_jacket,washing_machine_instance)
        else:
            exp(clothes_jacket,washing_machine_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,washing_machine_instance]=True
        close[washing_machine_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(clothes:item, iron:item, ironing_board:item):
    body:
        achieve_once close_char(char, ironing_board)
        # Get close to the ironing board
        achieve_once on(clothes, ironing_board)
        # Place the clothes on the ironing board
        achieve inhand(iron)
        # Ensure the iron is in hand for ironing
        achieve clean(clothes)
        # Ensure the clothes become clean after ironing

behavior __goal__():
    body:
        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt)
        # Select the skirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        iron_clothes(clothes_skirt, iron, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_clothes(clothes:item, iron:item, ironing_board:item):
    body:
        achieve_once close_char(char, ironing_board)
        # Get close to the ironing board
        achieve_once on(clothes, ironing_board)
        # Place the clothes on the ironing board
        achieve inhand(iron)
        # Ensure the iron is in hand for ironing
        achieve clean(clothes)
        # Ensure the clothes become clean after ironing

behavior __goal__():
    body:
        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt)
        # Select the skirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        iron_clothes(clothes_skirt, iron, ironing_board)

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)grab_executor(iron_2117)
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. 
##############################
From agent.py
put_executor(clothes_skirt_2116, ironing_board_2099)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. ironing_board_2099 is close clothes_skirt_2116. clothes_skirt_2116 is close ironing_board_2099. clothes_skirt_2116 is on ironing_board_2099. clothes_skirt_2116 released by right hand. 
##############################
From agent.py
grab_executor(iron_2117)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. Grabbing iron_2117 by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to use the iron on the clothes_skirt_2116 to complete the ironing process.
##############################
From agent.py
Human Instruction: You need to use the iron on the clothes_skirt_2116 to complete the ironing process.

The actions you have taken:
Action 1: Walk to ironing_board_2099.
Action 2: look for clothes_skirt_2116 around ironing_board_2099.
Action 3: Walk to basket_for_clothes_2040.
Action 4: look for clothes_skirt_2116 around basket_for_clothes_2040.
Action 5: Grab clothes_skirt_2116.
Action 6: Walk to iron_2117.
Action 7: Plug in iron_2117.
Action 8: Switch on iron_2117.
Action 9: Wash clothes_skirt_2116.
Action 10: Walk to faucet_134.
Action 11: Switch off faucet_134.
Action 12: Walk to ironing_board_2099.
Action 13: Put clothes_skirt_2116 on ironing_board_2099.
Action 14: Grab iron_2117.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2098_around_sink_307(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(cleaning_solution,sink_instance)
        else:
            exp(cleaning_solution,sink_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,sink_instance]=True
        close[sink_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
## Output:

behavior prepare_skirt_for_ironing(skirt:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)

behavior iron_skirt(skirt:item, iron:item):
    body:
        achieve_once close_char(char, iron)
        achieve_once close_char(char, skirt)
        achieve clean(skirt)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        bind iron: item where:
            is_iron(iron)

        prepare_skirt_for_ironing(skirt, ironing_board)
        iron_skirt(skirt, iron)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_washing_machine_2041(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_towel_rack_299_around_bathtub_297(towel_rack:item):
    goal: not unknown(towel_rack)
    body:
        assert is_towel_rack(towel_rack)
        bind bathtub_instance:item where:
            is_bathtub(bathtub_instance) and id[bathtub_instance]==297
        achieve close_char(char,bathtub_instance)
        if can_open(bathtub_instance):
            achieve_once open(bathtub_instance)
            exp(towel_rack,bathtub_instance)
        else:
            exp(towel_rack,bathtub_instance)
    eff:
        unknown[towel_rack]=False
        close[towel_rack,bathtub_instance]=True
        close[bathtub_instance,towel_rack]=True
    

#exp_behavior_end

#goal_representation
## Output:

behavior ensure_skirt_is_on_ironing_board(skirt: item, ironing_board: item):
    body:
        achieve_once on(skirt, ironing_board)

behavior ensure_iron_is_plugged_in_and_on(iron: item):
    body:
        achieve plugged(iron)
        achieve is_on(iron)

behavior prepare_iron_for_ironing(iron: item, skirt: item, ironing_board: item):
    body:
        ensure_skirt_is_on_ironing_board(skirt, ironing_board)
        ensure_iron_is_plugged_in_and_on(iron)

behavior iron_skirt(skirt: item, iron: item):
    body:
        achieve_once clean(skirt)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2116
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2099

        bind iron: item where:
            is_iron(iron) and id[iron] == 2117

        prepare_iron_for_ironing(iron, skirt, ironing_board)
        iron_skirt(skirt, iron)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2098_around_cupboard_131(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cleaning_solution,cupboard_instance)
        else:
            exp(cleaning_solution,cupboard_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,cupboard_instance]=True
        close[cupboard_instance,cleaning_solution]=True
    

behavior find_towel_2083_around_bathtub_297(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathtub_instance:item where:
            is_bathtub(bathtub_instance) and id[bathtub_instance]==297
        achieve close_char(char,bathtub_instance)
        if can_open(bathtub_instance):
            achieve_once open(bathtub_instance)
            exp(towel,bathtub_instance)
        else:
            exp(towel,bathtub_instance)
    eff:
        unknown[towel]=False
        close[towel,bathtub_instance]=True
        close[bathtub_instance,towel]=True
    

#exp_behavior_end

#goal_representation
## Output:

behavior iron_clothes(clothes:item, ironing_board:item, iron:item):
    body:
        achieve_once close_char(char, ironing_board)
        achieve_once on(clothes, ironing_board)
        achieve_once is_on(iron)
        achieve_once close_char(char, iron)

behavior __goal__():
    body:
        bind clothes: item where:
            is_clothes_skirt(clothes) and id[clothes] == 2116

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2099

        bind iron: item where:
            is_iron(iron) and id[iron] == 2117

        iron_clothes(clothes, ironing_board, iron)
#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "directly iron a pair of skirt." ?
Answer: Put the skirt on the ironing board. Turn on the iron. Then put the iron on the skirt, push and pull it on the skirt.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_hat_2076_around_couch_192(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==192
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(clothes_hat,couch_instance)
        else:
            exp(clothes_hat,couch_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,couch_instance]=True
        close[couch_instance,clothes_hat]=True
    

behavior find_towel_2083_around_sink_307(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(towel,sink_instance)
        else:
            exp(towel,sink_instance)
    eff:
        unknown[towel]=False
        close[towel,sink_instance]=True
        close[sink_instance,towel]=True
    

behavior find_detergent_2108_around_washing_machine_2041(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
## Output:

behavior prepare_skirt_for_ironing(skirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(skirt, ironing_board)
        achieve_once inhand(iron)

behavior iron_skirt_on_ironing_board(skirt:item, iron:item):
    body:
        achieve_once inhand(iron)
        achieve clean(skirt)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        bind iron: item where:
            is_iron(iron)

        prepare_skirt_for_ironing(skirt, ironing_board, iron)
        iron_skirt_on_ironing_board(skirt, iron)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2096_around_cupboard_131(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

behavior find_dough_2021_around_stove_2090(dough:item):
    goal: not unknown(dough)
    body:
        assert is_dough(dough)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(dough,stove_instance)
        else:
            exp(dough,stove_instance)
    eff:
        unknown[dough]=False
        close[dough,stove_instance]=True
        close[stove_instance,dough]=True
    

behavior find_detergent_2108_around_washing_machine_2041(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
## Output:

behavior prepare_skirt_for_ironing(skirt:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)

behavior directly_iron_skirt(skirt:item, iron:item):
    body:
        achieve_once close_char(char, skirt)
        achieve_once inhand(iron)
        achieve clean(skirt)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        bind iron: item where:
            is_iron(iron)

        prepare_skirt_for_ironing(skirt, ironing_board)
        directly_iron_skirt(skirt, iron)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2098_around_bathroom_cabinet_305(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
## Output:

behavior iron_clothes(clothes:item, iron:item):
    body:
        achieve is_on(iron)
        achieve_once on(iron, clothes)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        bind iron: item where:
            is_iron(iron)
        
        achieve_once on(skirt, ironing_board)
        iron_clothes(skirt, iron)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
## Output:

behavior iron_clothes(clothes:item, iron:item):
    body:
        achieve is_on(iron)
        achieve_once on(iron, clothes)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        bind iron: item where:
            is_iron(iron)
        
        achieve_once on(skirt, ironing_board)
        iron_clothes(skirt, iron)
##############################
From agent.py-> find a plan in act()
put_executor(iron_2117, clothes_skirt_2116)
##############################
From agent.py
put_executor(iron_2117, clothes_skirt_2116)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. clothes_skirt_2116 is close iron_2117. iron_2117 is close clothes_skirt_2116. iron_2117 is on clothes_skirt_2116. iron_2117 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to use the iron to iron the skirt by pushing and pulling the iron over it.
##############################
Task Summary:
Task Goal:
Directly iron a pair of skirt.
Action History:
['walk_executor(ironing_board_2099)', 'walk_executor(basket_for_clothes_2040)', 'grab_executor(clothes_skirt_2116)', 'walk_executor(iron_2117)', 'plugin_executor(iron_2117)', 'switchon_executor(iron_2117)', 'wash_executor(clothes_skirt_2116)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(ironing_board_2099)', 'put_executor(clothes_skirt_2116, ironing_board_2099)', 'grab_executor(iron_2117)', 'put_executor(iron_2117, clothes_skirt_2116)']
Time info:
Time consume: 186 seconds
Exp_helper query times: 0
Guidance query times: 1
library scale: 104
goal generate times: 9
goal correct times: 0
action_num: 13

Task complete rate:
Keystate: k1 - Requires: 0 steps
Action Completion Rate: 0.0
Scene_id: 2
##############################
