From agent.py
Reset goals: The sub-goals are: 
['Fried a steak. Then cut it and put it on a plate.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_food_steak_2042_around_table_193(food_steak:item):
    goal: not unknown(food_steak)
    body:
        assert is_food_steak(food_steak)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==193
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_steak,table_instance)
        else:
            exp(food_steak,table_instance)
    eff:
        unknown[food_steak]=False
        close[food_steak,table_instance]=True
        close[table_instance,food_steak]=True
    

behavior find_plate_2105_around_kitchen_counter_128(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(plate,kitchen_counter_instance)
        else:
            exp(plate,kitchen_counter_instance)
    eff:
        unknown[plate]=False
        close[plate,kitchen_counter_instance]=True
        close[kitchen_counter_instance,plate]=True
    

behavior find_chair_263_around_desk_261(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==261
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

#exp_behavior_end

#goal_representation
behavior prepare_steak_for_frying(steak:item, fryingpan:item):
    body:
        achieve_once inside(steak, fryingpan)

behavior fry_steak(steak:item, stove:item):
    body:
        achieve on(steak, stove)
        achieve is_on(stove)

behavior cut_steak(steak:item, knife:item, cutting_board:item):
    body:
        achieve_once on(steak, cutting_board)
        achieve_once inhand(knife)
        achieve cut(steak)

behavior serve_steak(steak:item, plate:item):
    body:
        achieve_once on(steak, plate)

behavior __goal__():
    body:
        bind steak: item where:
            is_food_steak(steak)

        bind fryingpan: item where:
            is_fryingpan(fryingpan)

        bind stove: item where:
            is_stove(stove)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind plate: item where:
            is_plate(plate)

        prepare_steak_for_frying(steak, fryingpan)
        fry_steak(steak, stove)
        cut_steak(steak, knife, cutting_board)
        serve_steak(steak, plate)
#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_food_steak_2042_around_cutting_board_2080(food_steak:item):
    goal: not unknown(food_steak)
    body:
        assert is_food_steak(food_steak)
        bind cutting_board_instance:item where:
            is_cutting_board(cutting_board_instance) and id[cutting_board_instance]==2080
        achieve close_char(char,cutting_board_instance)
        if can_open(cutting_board_instance):
            achieve_once open(cutting_board_instance)
            exp(food_steak,cutting_board_instance)
        else:
            exp(food_steak,cutting_board_instance)
    eff:
        unknown[food_steak]=False
        close[food_steak,cutting_board_instance]=True
        close[cutting_board_instance,food_steak]=True
    

behavior find_plate_2105_around_kitchen_counter_128(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(plate,kitchen_counter_instance)
        else:
            exp(plate,kitchen_counter_instance)
    eff:
        unknown[plate]=False
        close[plate,kitchen_counter_instance]=True
        close[kitchen_counter_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_steak_for_frying(steak:item, fryingpan:item):
    body:
        achieve_once inside(steak, fryingpan)

behavior fry_steak(steak:item, stove:item):
    body:
        achieve on(stove, fryingpan)
        achieve is_on(stove)

behavior cut_steak(steak:item, knife:item, cutting_board:item):
    body:
        achieve_once on(steak, cutting_board)
        achieve_once inhand(knife)
        achieve cut(steak)

behavior place_steak_on_plate(steak:item, plate:item):
    body:
        achieve_once on(steak, plate)

behavior __goal__():
    body:
        bind steak: item where:
            is_food_steak(steak)

        bind fryingpan: item where:
            is_fryingpan(fryingpan)

        bind stove: item where:
            is_stove(stove)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind plate: item where:
            is_plate(plate)

        prepare_steak_for_frying(steak, fryingpan)
        fry_steak(steak, stove)
        cut_steak(steak, knife, cutting_board)
        place_steak_on_plate(steak, plate)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: fryingpan; available variables: [Variable<steak: item>, Variable<stove: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_food_steak_2042_around_table_193(food_steak:item):
    goal: not unknown(food_steak)
    body:
        assert is_food_steak(food_steak)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==193
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_steak,table_instance)
        else:
            exp(food_steak,table_instance)
    eff:
        unknown[food_steak]=False
        close[food_steak,table_instance]=True
        close[table_instance,food_steak]=True
    

behavior find_plate_2105_around_kitchen_counter_128(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(plate,kitchen_counter_instance)
        else:
            exp(plate,kitchen_counter_instance)
    eff:
        unknown[plate]=False
        close[plate,kitchen_counter_instance]=True
        close[kitchen_counter_instance,plate]=True
    

#goal_representation
 
behavior prepare_steak_for_frying(steak:item, fryingpan:item):
    body:
        achieve_once inside(steak, fryingpan)

behavior fry_steak(steak:item, fryingpan:item, stove:item):
    body:
        achieve on(stove, fryingpan)
        achieve is_on(stove)

behavior cut_steak(steak:item, knife:item, cutting_board:item):
    body:
        achieve_once on(steak, cutting_board)
        achieve_once inhand(knife)
        achieve cut(steak)

behavior place_steak_on_plate(steak:item, plate:item):
    body:
        achieve_once on(steak, plate)

behavior __goal__():
    body:
        bind steak: item where:
            is_food_steak(steak)

        bind fryingpan: item where:
            is_fryingpan(fryingpan)

        bind stove: item where:
            is_stove(stove)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind plate: item where:
            is_plate(plate)

        prepare_steak_for_frying(steak, fryingpan)
        fry_steak(steak, fryingpan, stove)
        cut_steak(steak, knife, cutting_board)
        place_steak_on_plate(steak, plate)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_food_steak_2042_around_table_193(food_steak:item):
    goal: not unknown(food_steak)
    body:
        assert is_food_steak(food_steak)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==193
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_steak,table_instance)
        else:
            exp(food_steak,table_instance)
    eff:
        unknown[food_steak]=False
        close[food_steak,table_instance]=True
        close[table_instance,food_steak]=True
    

behavior find_plate_2105_around_kitchen_counter_128(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(plate,kitchen_counter_instance)
        else:
            exp(plate,kitchen_counter_instance)
    eff:
        unknown[plate]=False
        close[plate,kitchen_counter_instance]=True
        close[kitchen_counter_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior fry_steak(steak:item, fryingpan:item, stove:item):
    body:
        achieve_once inside(steak, fryingpan)
        # Place the steak inside the frying pan
        achieve on(fryingpan, stove)
        # Place the frying pan on the stove
        achieve is_on(stove)
        # Turn on the stove to fry the steak

behavior cut_steak(steak:item, knife:item, cutting_board:item):
    body:
        achieve_once on(steak, cutting_board)
        # Place the steak on the cutting board
        achieve_once inhand(knife)
        # Hold the knife
        achieve cut(steak)
        # Cut the steak

behavior place_steak_on_plate(steak:item, plate:item):
    body:
        achieve_once on(steak, plate)
        # Place the cut steak on the plate

behavior __goal__():
    body:
        bind steak: item where:
            is_food_steak(steak)
        # Select the steak

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        bind plate: item where:
            is_plate(plate)
        # Select a plate

        fry_steak(steak, fryingpan, stove)
        cut_steak(steak, knife, cutting_board)
        place_steak_on_plate(steak, plate)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior fry_steak(steak:item, fryingpan:item, stove:item):
    body:
        achieve_once inside(steak, fryingpan)
        # Place the steak inside the frying pan
        achieve on(fryingpan, stove)
        # Place the frying pan on the stove
        achieve is_on(stove)
        # Turn on the stove to fry the steak

behavior cut_steak(steak:item, knife:item, cutting_board:item):
    body:
        achieve_once on(steak, cutting_board)
        # Place the steak on the cutting board
        achieve_once inhand(knife)
        # Hold the knife
        achieve cut(steak)
        # Cut the steak

behavior place_steak_on_plate(steak:item, plate:item):
    body:
        achieve_once on(steak, plate)
        # Place the cut steak on the plate

behavior __goal__():
    body:
        bind steak: item where:
            is_food_steak(steak)
        # Select the steak

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        bind plate: item where:
            is_plate(plate)
        # Select a plate

        fry_steak(steak, fryingpan, stove)
        cut_steak(steak, knife, cutting_board)
        place_steak_on_plate(steak, plate)

##############################
From agent.py-> find a plan in act()
walk_executor(stove_2090)open_executor(stove_2090)exp(fryingpan_2107, stove_2090)walk_executor(table_193)exp(food_steak_2042, table_193)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(fryingpan_2107)putin_executor(food_steak_2042, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(cutting_board_2080)put_executor(food_steak_2042, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_steak_2042)cut_executor(food_steak_2042)walk_executor(kitchen_counter_128)exp(plate_2105, kitchen_counter_128)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_54, pot_2093, Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
open_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is opened. 
##############################
From agent.py
exp(fryingpan_2107, stove_2090)
Find fryingpan_2107. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_193)exp(food_steak_2042, table_193)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(fryingpan_2107)putin_executor(food_steak_2042, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(cutting_board_2080)put_executor(food_steak_2042, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_steak_2042)cut_executor(food_steak_2042)walk_executor(kitchen_counter_128)exp(plate_2105, kitchen_counter_128)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
walk_executor(table_193)
Robot find: dvd_player_2000, pillow_195, laser_pointer_2025, mat_201, mouse_2112, chair_2119, oil_2005, keyboard_2111, drawing_196, Robot is close to the table_193. 
##############################
From agent.py
exp(food_steak_2042, table_193)
Fail to find food_steak_2042 around table_193. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_127)exp(food_steak_2042, table_127)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(fryingpan_2107)putin_executor(food_steak_2042, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(cutting_board_2080)put_executor(food_steak_2042, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_steak_2042)cut_executor(food_steak_2042)walk_executor(table_127)exp(plate_2105, table_127)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
walk_executor(table_127)
Robot find: mat_115, fork_2104, console_2027, crayon_2030, bowl_2096, bowl_2097, napkin_2014, plate_2105, drawing_118, Robot is close to the mat_115. Robot is close to the table_127. 
##############################
From agent.py
exp(food_steak_2042, table_127)
Fail to find food_steak_2042 around table_127. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(food_steak_2042, kitchen_counter_128)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(fryingpan_2107)putin_executor(food_steak_2042, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(cutting_board_2080)put_executor(food_steak_2042, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_steak_2042)cut_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(food_steak_2042, kitchen_counter_128)
Fail to find food_steak_2042 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(food_steak_2042, table_123)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(fryingpan_2107)putin_executor(food_steak_2042, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(cutting_board_2080)put_executor(food_steak_2042, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_steak_2042)cut_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, laptop_2015, fork_2103, cup_2087, bowl_2095, Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
exp(food_steak_2042, table_123)
Fail to find food_steak_2042 around table_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_steak_2042, fridge_140)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(fryingpan_2107)putin_executor(food_steak_2042, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(cutting_board_2080)put_executor(food_steak_2042, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_steak_2042)cut_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_steak_2042, fridge_140)
Find food_steak_2042. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_steak_2042)walk_executor(fryingpan_2107)putin_executor(food_steak_2042, fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)switchon_executor(stove_2090)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(cutting_board_2080)put_executor(food_steak_2042, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_steak_2042)cut_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
grab_executor(food_steak_2042)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. Grabbing food_steak_2042 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the food_steak_2042. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_steak_2042, fryingpan_2107)
Robot find: Robot is close to the food_steak_2042. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. food_steak_2042 is close fryingpan_2107. food_steak_2042 is inside fryingpan_2107. fryingpan_2107 is close food_steak_2042. food_steak_2042 released by right hand. 
##############################
From agent.py
grab_executor(fryingpan_2107)
Robot find: Robot is close to the food_steak_2042. Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Grabbing fryingpan_2107 by right hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(fryingpan_2107, stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. fryingpan_2107 is on stove_2090. stove_2090 is close fryingpan_2107. fryingpan_2107 is close stove_2090. fryingpan_2107 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py
walk_executor(food_steak_2042)
Robot find: Robot is close to the fryingpan_2107. Robot is close to the food_steak_2042. 
##############################
From agent.py
grab_executor(food_steak_2042)
Robot find: Robot is close to the fryingpan_2107. Robot is close to the food_steak_2042. Grabbing food_steak_2042 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the food_steak_2042. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_steak_2042, cutting_board_2080)
Robot find: Robot is close to the food_steak_2042. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. cutting_board_2080 is close food_steak_2042. food_steak_2042 is close cutting_board_2080. food_steak_2042 is on cutting_board_2080. food_steak_2042 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_52)
Robot find: Robot is close to the knifeblock_52. 
##############################
From agent.py
exp(knife_2036, knifeblock_52)
Fail to find knife_2036 around knifeblock_52. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(fryingpan_2107)putin_executor(food_steak_2042, fryingpan_2107)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(cutting_board_2080)put_executor(food_steak_2042, cutting_board_2080)walk_executor(trashcan_360)exp(knife_2036, trashcan_360)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_steak_2042)cut_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
walk_executor(food_steak_2042)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_steak_2042. 
##############################
From agent.py
grab_executor(food_steak_2042)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_steak_2042. Grabbing food_steak_2042 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the food_steak_2042. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_steak_2042, fryingpan_2107)
Robot find: Robot is close to the food_steak_2042. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. food_steak_2042 is close fryingpan_2107. food_steak_2042 is inside fryingpan_2107. fryingpan_2107 is close food_steak_2042. food_steak_2042 released by right hand. 
##############################
From agent.py
walk_executor(food_steak_2042)
Robot find: Robot is close to the food_steak_2042. Robot is close to the fryingpan_2107. 
##############################
From agent.py
grab_executor(food_steak_2042)
Robot find: Robot is close to the food_steak_2042. Robot is close to the fryingpan_2107. Grabbing food_steak_2042 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the food_steak_2042. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_steak_2042, cutting_board_2080)
Robot find: Robot is close to the food_steak_2042. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_steak_2042 is close cutting_board_2080. food_steak_2042 is on cutting_board_2080. food_steak_2042 released by right hand. 
##############################
From agent.py
walk_executor(trashcan_360)
Robot find: box_2023, needle_2012, drawing_388, Robot is close to the box_2023. Robot is close to the trashcan_360. Robot is close to the needle_2012. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find knife_2036 ?
Answer: Go to dining_room_1. Inside, locate dishwasher_143. Knife_2036 is inside the dishwasher_143.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_1. Inside, locate dishwasher_143. Knife_2036 is inside the dishwasher_143.

The actions you have taken:
Action 1: Walk to stove_2090.
Action 2: Open stove_2090.
Action 3: look for fryingpan_2107 around stove_2090.
Action 4: Walk to table_193.
Action 5: look for food_steak_2042 around table_193.
Action 6: Walk to table_127.
Action 7: look for food_steak_2042 around table_127.
Action 8: Walk to kitchen_counter_128.
Action 9: look for food_steak_2042 around kitchen_counter_128.
Action 10: Walk to table_123.
Action 11: look for food_steak_2042 around table_123.
Action 12: Walk to fridge_140.
Action 13: Switch off fridge_140.
Action 14: Open fridge_140.
Action 15: look for food_steak_2042 around fridge_140.
Action 16: Grab food_steak_2042.
Action 17: Walk to fryingpan_2107.
Action 18: Put food_steak_2042 into fryingpan_2107.
Action 19: Grab fryingpan_2107.
Action 20: Walk to stove_2090.
Action 21: Put fryingpan_2107 on stove_2090.
Action 22: Switch on stove_2090.
Action 23: Walk to food_steak_2042.
Action 24: Grab food_steak_2042.
Action 25: Walk to cutting_board_2080.
Action 26: Put food_steak_2042 on cutting_board_2080.
Action 27: Walk to knifeblock_52.
Action 28: look for knife_2036 around knifeblock_52.
Action 29: Walk to food_steak_2042.
Action 30: Grab food_steak_2042.
Action 31: Walk to fryingpan_2107.
Action 32: Put food_steak_2042 into fryingpan_2107.
Action 33: Walk to food_steak_2042.
Action 34: Grab food_steak_2042.
Action 35: Walk to cutting_board_2080.
Action 36: Put food_steak_2042 on cutting_board_2080.
Action 37: Walk to trashcan_360.

##############################
From agent.py
exp(knife_2036, trashcan_360)
Fail to find knife_2036 around trashcan_360. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(fryingpan_2107)putin_executor(food_steak_2042, fryingpan_2107)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(cutting_board_2080)put_executor(food_steak_2042, cutting_board_2080)walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(knife_2036, dishwasher_143)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_steak_2042)cut_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
walk_executor(food_steak_2042)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_steak_2042. 
##############################
From agent.py
grab_executor(food_steak_2042)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_steak_2042. Grabbing food_steak_2042 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the food_steak_2042. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_steak_2042, fryingpan_2107)
Robot find: Robot is close to the food_steak_2042. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. food_steak_2042 is close fryingpan_2107. food_steak_2042 is inside fryingpan_2107. food_steak_2042 released by right hand. 
##############################
From agent.py
walk_executor(food_steak_2042)
Robot find: Robot is close to the food_steak_2042. Robot is close to the fryingpan_2107. 
##############################
From agent.py
grab_executor(food_steak_2042)
Robot find: Robot is close to the food_steak_2042. Robot is close to the fryingpan_2107. Grabbing food_steak_2042 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the food_steak_2042. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_steak_2042, cutting_board_2080)
Robot find: Robot is close to the food_steak_2042. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_steak_2042 is close cutting_board_2080. food_steak_2042 is on cutting_board_2080. food_steak_2042 released by right hand. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(knife_2036, dishwasher_143)
Find knife_2036. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(fryingpan_2107)putin_executor(food_steak_2042, fryingpan_2107)walk_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(cutting_board_2080)put_executor(food_steak_2042, cutting_board_2080)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_steak_2042)cut_executor(food_steak_2042)grab_executor(food_steak_2042)walk_executor(plate_2105)put_executor(food_steak_2042, plate_2105)
##############################
From agent.py
walk_executor(food_steak_2042)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_steak_2042. 
##############################
From agent.py
grab_executor(food_steak_2042)
Robot find: Robot is close to the cutting_board_2080. Robot is close to the food_steak_2042. Grabbing food_steak_2042 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the food_steak_2042. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_steak_2042, fryingpan_2107)
Robot find: Robot is close to the food_steak_2042. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. food_steak_2042 is close fryingpan_2107. food_steak_2042 is inside fryingpan_2107. food_steak_2042 released by right hand. 
##############################
From agent.py
walk_executor(food_steak_2042)
Robot find: Robot is close to the food_steak_2042. Robot is close to the fryingpan_2107. 
##############################
From agent.py
grab_executor(food_steak_2042)
Robot find: Robot is close to the food_steak_2042. Robot is close to the fryingpan_2107. Grabbing food_steak_2042 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the food_steak_2042. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_steak_2042, cutting_board_2080)
Robot find: Robot is close to the food_steak_2042. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_steak_2042 is close cutting_board_2080. food_steak_2042 is on cutting_board_2080. food_steak_2042 released by right hand. 
##############################
From agent.py
walk_executor(knife_2036)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. 
##############################
From agent.py
grab_executor(knife_2036)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. Grabbing knife_2036 by right hand. 
##############################
From agent.py
walk_executor(food_steak_2042)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_steak_2042. 
##############################
From agent.py
cut_executor(food_steak_2042)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_steak_2042. 
##############################
From agent.py
grab_executor(food_steak_2042)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_steak_2042. Grabbing food_steak_2042 by left hand. 
##############################
From agent.py
walk_executor(plate_2105)
Robot find: Robot is close to the knife_2036. Robot is close to the food_steak_2042. Robot is close to the plate_2105. Robot is close to the table_127. 
##############################
From agent.py
put_executor(food_steak_2042, plate_2105)
Robot find: Robot is close to the knife_2036. Robot is close to the food_steak_2042. Robot is close to the plate_2105. Robot is close to the table_127. food_steak_2042 is close plate_2105. plate_2105 is close food_steak_2042. food_steak_2042 is on plate_2105. food_steak_2042 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Fried a steak. Then cut it and put it on a plate.
Action History:
['walk_executor(stove_2090)', 'open_executor(stove_2090)', 'walk_executor(table_193)', 'walk_executor(table_127)', 'walk_executor(kitchen_counter_128)', 'walk_executor(table_123)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'grab_executor(food_steak_2042)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_steak_2042, fryingpan_2107)', 'grab_executor(fryingpan_2107)', 'walk_executor(stove_2090)', 'put_executor(fryingpan_2107, stove_2090)', 'switchon_executor(stove_2090)', 'walk_executor(food_steak_2042)', 'grab_executor(food_steak_2042)', 'walk_executor(cutting_board_2080)', 'put_executor(food_steak_2042, cutting_board_2080)', 'walk_executor(knifeblock_52)', 'walk_executor(food_steak_2042)', 'grab_executor(food_steak_2042)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_steak_2042, fryingpan_2107)', 'walk_executor(food_steak_2042)', 'grab_executor(food_steak_2042)', 'walk_executor(cutting_board_2080)', 'put_executor(food_steak_2042, cutting_board_2080)', 'walk_executor(trashcan_360)', 'walk_executor(food_steak_2042)', 'grab_executor(food_steak_2042)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_steak_2042, fryingpan_2107)', 'walk_executor(food_steak_2042)', 'grab_executor(food_steak_2042)', 'walk_executor(cutting_board_2080)', 'put_executor(food_steak_2042, cutting_board_2080)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'walk_executor(food_steak_2042)', 'grab_executor(food_steak_2042)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_steak_2042, fryingpan_2107)', 'walk_executor(food_steak_2042)', 'grab_executor(food_steak_2042)', 'walk_executor(cutting_board_2080)', 'put_executor(food_steak_2042, cutting_board_2080)', 'walk_executor(knife_2036)', 'grab_executor(knife_2036)', 'walk_executor(food_steak_2042)', 'cut_executor(food_steak_2042)', 'grab_executor(food_steak_2042)', 'walk_executor(plate_2105)', 'put_executor(food_steak_2042, plate_2105)']
Time info:
Time consume: 278 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 65
goal generate times: 3
goal correct times: 0
action_num: 55

Task complete rate:
Keystate: k1 - Requires: 8 steps
Keystate: k2 - Requires: 0 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
