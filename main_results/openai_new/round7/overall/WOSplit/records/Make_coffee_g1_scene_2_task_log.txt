From agent.py
Reset goals: The sub-goals are: 
['Make a cup of coffee using the coffee maker.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_coffee_filter_2035_around_coffe_maker_147(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind coffe_maker_instance:item where:
            is_coffe_maker(coffe_maker_instance) and id[coffe_maker_instance]==147
        achieve close_char(char,coffe_maker_instance)
        if can_open(coffe_maker_instance):
            achieve_once open(coffe_maker_instance)
            exp(coffee_filter,coffe_maker_instance)
        else:
            exp(coffee_filter,coffe_maker_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,coffe_maker_instance]=True
        close[coffe_maker_instance,coffee_filter]=True
    

behavior find_cup_2089_around_coffe_maker_147(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind coffe_maker_instance:item where:
            is_coffe_maker(coffe_maker_instance) and id[coffe_maker_instance]==147
        achieve close_char(char,coffe_maker_instance)
        if can_open(coffe_maker_instance):
            achieve_once open(coffe_maker_instance)
            exp(cup,coffe_maker_instance)
        else:
            exp(cup,coffe_maker_instance)
    eff:
        unknown[cup]=False
        close[cup,coffe_maker_instance]=True
        close[coffe_maker_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_coffee_maker_with_water(coffee_maker:item, water_source:item):
    body:
        achieve_once has_water(coffee_maker)

behavior prepare_coffee_filter(coffee_filter:item, coffee_maker:item):
    body:
        achieve_once inside(coffee_filter, coffee_maker)
        
behavior make_coffee(coffee_maker:item):
    body:
        achieve is_on(coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        bind water_source: item where:
            is_faucet(water_source)
        bind coffee_filter: item where:
            is_coffee_filter(coffee_filter)

        prepare_coffee_maker_with_water(coffee_maker, water_source)
        prepare_coffee_filter(coffee_filter, coffee_maker)
        make_coffee(coffee_maker)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior prepare_coffee_maker_with_water(coffee_maker:item, water_source:item):
    body:
        achieve_once has_water(coffee_maker)

behavior prepare_coffee_filter(coffee_filter:item, coffee_maker:item):
    body:
        achieve_once inside(coffee_filter, coffee_maker)
        
behavior make_coffee(coffee_maker:item):
    body:
        achieve is_on(coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        bind water_source: item where:
            is_faucet(water_source)
        bind coffee_filter: item where:
            is_coffee_filter(coffee_filter)

        prepare_coffee_maker_with_water(coffee_maker, water_source)
        prepare_coffee_filter(coffee_filter, coffee_maker)
        make_coffee(coffee_maker)

##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_147)open_executor(coffe_maker_147)exp(coffee_filter_2035, coffe_maker_147)walk_executor(coffee_filter_2035)grab_executor(coffee_filter_2035)walk_executor(coffe_maker_147)putin_executor(coffee_filter_2035, coffe_maker_147)close_executor(coffe_maker_147)switchon_executor(coffe_maker_147)
##############################
From agent.py
walk_executor(coffe_maker_147)
Robot find: fryingpan_2107, oil_2102, pot_54, pot_2093, Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. 
##############################
From agent.py
open_executor(coffe_maker_147)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. coffe_maker_147 is opened. 
##############################
From agent.py
exp(coffee_filter_2035, coffe_maker_147)
Fail to find coffee_filter_2035 around coffe_maker_147. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(coffee_filter_2035, cupboard_131)walk_executor(coffee_filter_2035)grab_executor(coffee_filter_2035)walk_executor(coffe_maker_147)putin_executor(coffee_filter_2035, coffe_maker_147)close_executor(coffe_maker_147)switchon_executor(coffe_maker_147)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(coffee_filter_2035, cupboard_131)
Fail to find coffee_filter_2035 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(coffee_filter_2035, cupboard_130)walk_executor(coffee_filter_2035)grab_executor(coffee_filter_2035)walk_executor(coffe_maker_147)putin_executor(coffee_filter_2035, coffe_maker_147)close_executor(coffe_maker_147)switchon_executor(coffe_maker_147)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(coffee_filter_2035, cupboard_130)
Fail to find coffee_filter_2035 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(coffee_filter_2035, kitchen_counter_132)walk_executor(coffee_filter_2035)grab_executor(coffee_filter_2035)walk_executor(coffe_maker_147)putin_executor(coffee_filter_2035, coffe_maker_147)close_executor(coffe_maker_147)switchon_executor(coffe_maker_147)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the kitchen_counter_132. 
##############################
From agent.py
exp(coffee_filter_2035, kitchen_counter_132)
Fail to find coffee_filter_2035 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(coffee_filter_2035, kitchen_counter_128)walk_executor(coffee_filter_2035)grab_executor(coffee_filter_2035)walk_executor(coffe_maker_147)putin_executor(coffee_filter_2035, coffe_maker_147)close_executor(coffe_maker_147)switchon_executor(coffe_maker_147)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(coffee_filter_2035, kitchen_counter_128)
Fail to find coffee_filter_2035 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(coffee_filter_2035, fridge_140)walk_executor(coffee_filter_2035)grab_executor(coffee_filter_2035)walk_executor(coffe_maker_147)putin_executor(coffee_filter_2035, coffe_maker_147)close_executor(coffe_maker_147)switchon_executor(coffe_maker_147)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find coffee_filter_2035 ?
Answer: The target item is the coffee_filter_2035. You can find the coffee_filter_2035 inside the bedroom_327. Specifically, it is located inside the filing_cabinet_378. This filing cabinet is very close to the coffee_filter_2035, so once you locate the filing cabinet, you will find the coffee filter inside it.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item is the coffee_filter_2035. You can find the coffee_filter_2035 inside the bedroom_327. Specifically, it is located inside the filing_cabinet_378. This filing cabinet is very close to the coffee_filter_2035, so once you locate the filing cabinet, you will find the coffee filter inside it.

The actions you have taken:
Action 1: Walk to coffe_maker_147.
Action 2: Open coffe_maker_147.
Action 3: look for coffee_filter_2035 around coffe_maker_147.
Action 4: Walk to cupboard_131.
Action 5: Open cupboard_131.
Action 6: look for coffee_filter_2035 around cupboard_131.
Action 7: Walk to cupboard_130.
Action 8: look for coffee_filter_2035 around cupboard_130.
Action 9: Walk to kitchen_counter_132.
Action 10: look for coffee_filter_2035 around kitchen_counter_132.
Action 11: Walk to kitchen_counter_128.
Action 12: look for coffee_filter_2035 around kitchen_counter_128.
Action 13: Walk to fridge_140.
Action 14: Switch off fridge_140.
Action 15: Open fridge_140.

##############################
From agent.py
exp(coffee_filter_2035, fridge_140)
Fail to find coffee_filter_2035 around fridge_140. 
##############################
From agent.py-> find a plan in act()
walk_executor(filing_cabinet_378)exp(coffee_filter_2035, filing_cabinet_378)walk_executor(coffee_filter_2035)grab_executor(coffee_filter_2035)walk_executor(coffe_maker_147)putin_executor(coffee_filter_2035, coffe_maker_147)close_executor(coffe_maker_147)switchon_executor(coffe_maker_147)
##############################
From agent.py
walk_executor(filing_cabinet_378)
Robot find: food_bread_2016, crayon_2020, needle_2024, check_2033, alcohol_2002, coffee_filter_2035, soap_2037, bills_2009, drawing_387, Robot is close to the food_bread_2016. Robot is close to the crayon_2020. Robot is close to the needle_2024. Robot is close to the check_2033. Robot is close to the alcohol_2002. Robot is close to the coffee_filter_2035. Robot is close to the soap_2037. Robot is close to the bills_2009. Robot is close to the filing_cabinet_378. 
##############################
From agent.py
exp(coffee_filter_2035, filing_cabinet_378)
Find coffee_filter_2035. 
##############################
From agent.py-> find a plan in act()
grab_executor(coffee_filter_2035)walk_executor(coffe_maker_147)putin_executor(coffee_filter_2035, coffe_maker_147)close_executor(coffe_maker_147)switchon_executor(coffe_maker_147)
##############################
From agent.py
grab_executor(coffee_filter_2035)
Robot find: Robot is close to the food_bread_2016. Robot is close to the crayon_2020. Robot is close to the needle_2024. Robot is close to the check_2033. Robot is close to the alcohol_2002. Robot is close to the coffee_filter_2035. Robot is close to the soap_2037. Robot is close to the bills_2009. Robot is close to the filing_cabinet_378. Grabbing coffee_filter_2035 by right hand. 
##############################
From agent.py
walk_executor(coffe_maker_147)
Robot find: Robot is close to the coffee_filter_2035. Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. 
##############################
From agent.py
putin_executor(coffee_filter_2035, coffe_maker_147)
Robot find: Robot is close to the coffee_filter_2035. Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. coffee_filter_2035 is inside coffe_maker_147. coffe_maker_147 is close coffee_filter_2035. coffee_filter_2035 is close coffe_maker_147. coffee_filter_2035 released by right hand. 
##############################
From agent.py
close_executor(coffe_maker_147)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. coffe_maker_147 is closed. 
##############################
From agent.py
switchon_executor(coffe_maker_147)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. coffe_maker_147 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to ensure that the coffee maker has water in it before making the coffee. The step to prepare the coffee maker with water has not been performed. The robot should find a water source (likely a faucet), grab water, and pour it into the coffee maker to complete this step.
##############################
From agent.py
Human Instruction: The robot needs to ensure that the coffee maker has water in it before making the coffee. The step to prepare the coffee maker with water has not been performed. The robot should find a water source (likely a faucet), grab water, and pour it into the coffee maker to complete this step.

The actions you have taken:
Action 1: Walk to coffe_maker_147.
Action 2: Open coffe_maker_147.
Action 3: look for coffee_filter_2035 around coffe_maker_147.
Action 4: Walk to cupboard_131.
Action 5: Open cupboard_131.
Action 6: look for coffee_filter_2035 around cupboard_131.
Action 7: Walk to cupboard_130.
Action 8: look for coffee_filter_2035 around cupboard_130.
Action 9: Walk to kitchen_counter_132.
Action 10: look for coffee_filter_2035 around kitchen_counter_132.
Action 11: Walk to kitchen_counter_128.
Action 12: look for coffee_filter_2035 around kitchen_counter_128.
Action 13: Walk to fridge_140.
Action 14: Switch off fridge_140.
Action 15: Open fridge_140.
Action 16: look for coffee_filter_2035 around fridge_140.
Action 17: Walk to filing_cabinet_378.
Action 18: look for coffee_filter_2035 around filing_cabinet_378.
Action 19: Grab coffee_filter_2035.
Action 20: Walk to coffe_maker_147.
Action 21: Put coffee_filter_2035 into coffe_maker_147.
Action 22: Close coffe_maker_147.
Action 23: Switch on coffe_maker_147.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_mouse_2003_around_cpuscreen_383(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind cpuscreen_instance:item where:
            is_cpuscreen(cpuscreen_instance) and id[cpuscreen_instance]==383
        achieve close_char(char,cpuscreen_instance)
        if can_open(cpuscreen_instance):
            achieve_once open(cpuscreen_instance)
            exp(mouse,cpuscreen_instance)
        else:
            exp(mouse,cpuscreen_instance)
    eff:
        unknown[mouse]=False
        close[mouse,cpuscreen_instance]=True
        close[cpuscreen_instance,mouse]=True
    

#exp_behavior_end

#goal_representation
## Output:

behavior prepare_coffee_maker_with_water(faucet:item, coffee_maker:item):
    body:
        achieve close_char(char, faucet)
        achieve has_water(coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
            # Select a coffee maker

        bind faucet: item where:
            is_faucet(faucet)
            # Select a faucet

        prepare_coffee_maker_with_water(faucet, coffee_maker)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
## Output:

behavior prepare_coffee_maker_with_water(faucet:item, coffee_maker:item):
    body:
        achieve close_char(char, faucet)
        achieve has_water(coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
            # Select a coffee maker

        bind faucet: item where:
            is_faucet(faucet)
            # Select a faucet

        prepare_coffee_maker_with_water(faucet, coffee_maker)
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure that the coffee maker has water in it. Walk to a water source like the faucet, grab water, and pour it into the coffee maker.
##############################
From agent.py
Human Instruction: You need to ensure that the coffee maker has water in it. Walk to a water source like the faucet, grab water, and pour it into the coffee maker.

The actions you have taken:
Action 1: Walk to coffe_maker_147.
Action 2: Open coffe_maker_147.
Action 3: look for coffee_filter_2035 around coffe_maker_147.
Action 4: Walk to cupboard_131.
Action 5: Open cupboard_131.
Action 6: look for coffee_filter_2035 around cupboard_131.
Action 7: Walk to cupboard_130.
Action 8: look for coffee_filter_2035 around cupboard_130.
Action 9: Walk to kitchen_counter_132.
Action 10: look for coffee_filter_2035 around kitchen_counter_132.
Action 11: Walk to kitchen_counter_128.
Action 12: look for coffee_filter_2035 around kitchen_counter_128.
Action 13: Walk to fridge_140.
Action 14: Switch off fridge_140.
Action 15: Open fridge_140.
Action 16: look for coffee_filter_2035 around fridge_140.
Action 17: Walk to filing_cabinet_378.
Action 18: look for coffee_filter_2035 around filing_cabinet_378.
Action 19: Grab coffee_filter_2035.
Action 20: Walk to coffe_maker_147.
Action 21: Put coffee_filter_2035 into coffe_maker_147.
Action 22: Close coffe_maker_147.
Action 23: Switch on coffe_maker_147.
Action 24: Walk to faucet_134.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_mouse_380_around_computer_379(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==379
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(mouse,computer_instance)
        else:
            exp(mouse,computer_instance)
    eff:
        unknown[mouse]=False
        close[mouse,computer_instance]=True
        close[computer_instance,mouse]=True
    

behavior find_cup_2006_around_sink_133(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(cup,sink_instance)
        else:
            exp(cup,sink_instance)
    eff:
        unknown[cup]=False
        close[cup,sink_instance]=True
        close[sink_instance,cup]=True
    

#exp_behavior_end

#goal_representation
## Output:

behavior fill_coffee_maker_with_water(coffee_maker:item, faucet:item):
    body:
        achieve_once has_water(coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        
        bind faucet: item where:
            is_faucet(faucet)
        
        fill_coffee_maker_with_water(coffee_maker, faucet)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2088_around_desk_375(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==375
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(cup,desk_instance)
        else:
            exp(cup,desk_instance)
    eff:
        unknown[cup]=False
        close[cup,desk_instance]=True
        close[desk_instance,cup]=True
    

behavior find_bowl_2095_around_sink_133(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(bowl,sink_instance)
        else:
            exp(bowl,sink_instance)
    eff:
        unknown[bowl]=False
        close[bowl,sink_instance]=True
        close[sink_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior ensure_faucet_is_on(faucet:item):
    body:
        achieve is_on(faucet)

behavior fill_coffee_maker_with_water(coffee_maker:item):
    body:
        achieve has_water(coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        
        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 134
        
        ensure_faucet_is_on(faucet)
        fill_coffee_maker_with_water(coffee_maker)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_mouse_2003_around_computer_2110(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==2110
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(mouse,computer_instance)
        else:
            exp(mouse,computer_instance)
    eff:
        unknown[mouse]=False
        close[mouse,computer_instance]=True
        close[computer_instance,mouse]=True
    

behavior find_cup_2089_around_sink_133(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(cup,sink_instance)
        else:
            exp(cup,sink_instance)
    eff:
        unknown[cup]=False
        close[cup,sink_instance]=True
        close[sink_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior check_faucet_and_fill_water(faucet:item, coffee_maker:item):
    body:
        achieve_once close_char(char, faucet)
        observe(faucet, "Check if it is a water source")
        achieve has_water(coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker) and id[coffee_maker] == 147
        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 134
        check_faucet_and_fill_water(faucet, coffee_maker)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior check_faucet_and_fill_water(faucet:item, coffee_maker:item):
    body:
        achieve_once close_char(char, faucet)
        observe(faucet, "Check if it is a water source")
        achieve has_water(coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker) and id[coffee_maker] == 147
        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 134
        check_faucet_and_fill_water(faucet, coffee_maker)

##############################
From agent.py-> find a plan in act()
obs(faucet_134, Check if it is a water source)
##############################
From agent.py
obs(faucet_134, Check if it is a water source)
Get this information:  faucet_134 is inside dining_room_1. faucet_134 is on kitchen_counter_132. faucet_134 is close to cupboard_130. faucet_134 is close to wall_2. faucet_134 is close to kitchen_counter_132. faucet_134 is close to sink_133. faucet_134 is close to wall_6. faucet_134 is close to walllamp_45. faucet_134 is close to oven_141. faucet_134 is close to floor_15. faucet_134 is close to floor_16. faucet_134 is close to knifeblock_52. faucet_134 is close to microwave_149. faucet_134 is close to ceiling_27. faucet_134 is close to ceiling_28. faucet_134 is close to character_219. faucet_134 is ON. faucet_134 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to fill the coffee maker with water. Walk to the faucet, grab water, and pour it into the coffee maker.
##############################
Task Summary:
Task Goal:
Make a cup of coffee using the coffee maker.
Action History:
['walk_executor(coffe_maker_147)', 'open_executor(coffe_maker_147)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(cupboard_130)', 'walk_executor(kitchen_counter_132)', 'walk_executor(kitchen_counter_128)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'walk_executor(filing_cabinet_378)', 'grab_executor(coffee_filter_2035)', 'walk_executor(coffe_maker_147)', 'putin_executor(coffee_filter_2035, coffe_maker_147)', 'close_executor(coffe_maker_147)', 'switchon_executor(coffe_maker_147)', 'walk_executor(faucet_134)']
Time info:
Time consume: 148 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 96
goal generate times: 5
goal correct times: 0
action_num: 17

Task complete rate:
Keystate: k1 - Requires: 9 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
