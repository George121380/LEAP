From agent.py
Reset goals: The sub-goals are: 
['Cook a pot of fish soup.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_fish_2093_around_kitchen_counter_123(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_fish,kitchen_counter_instance)
        else:
            exp(food_fish,kitchen_counter_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_fish]=True
    

behavior find_knife_2037_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_pot_2040_around_kitchen_counter_123(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(pot,kitchen_counter_instance)
        else:
            exp(pot,kitchen_counter_instance)
    eff:
        unknown[pot]=False
        close[pot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,pot]=True
    

behavior find_homework_2047_around_desk_272(homework:item):
    goal: not unknown(homework)
    body:
        assert is_homework(homework)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==272
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(homework,desk_instance)
        else:
            exp(homework,desk_instance)
    eff:
        unknown[homework]=False
        close[homework,desk_instance]=True
        close[desk_instance,homework]=True
    

#exp_behavior_end

#goal_representation
## Output:

def fish_soup_preparation_steps(pot: item):
    # Define the function to check preliminary requirements and do observations
    achieve has_water(pot)
    # Ensure the pot has water
    achieve_once inside(fish, pot)
    # Put fish inside the pot
    achieve_once close_char(char, stove)
    # Approach the stove
    achieve on(pot, stove)
    # Place the pot on the stove
    achieve is_on(stove)
    # Turn on the stove
    achieve has_water(pot)
    # Ensure to maintain water in the pot

behavior prepare_ingredients(fish:item, knife:item, cutting_board:item):
    body:
        achieve_once on(fish, cutting_board)
        achieve_once inhand(knife)

behavior cut_fish(fish:item):
    body:
        achieve cut(fish)

behavior cook_fish_soup(fish:item, stove:item, pot:item):
    body:
        fish_soup_preparation_steps(pot)

behavior __goal__():
    body:
        # Bind the necessary items
        bind fish: item where:
            is_food_fish(fish) 
        bind knife: item where:
            is_knife(knife)
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        bind stove: item where:
            is_stove(stove)
        bind pot: item where:
            is_pot(pot)
        bind faucet: item where:
            is_faucet(faucet) 
        
        prepare_ingredients(fish, knife, cutting_board)
        cut_fish(fish)
        cook_fish_soup(fish, stove, pot)
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Unknown variable: fish; available variables: [Variable<pot: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_fish_2093_around_fridge_126(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_fish,fridge_instance)
        else:
            exp(food_fish,fridge_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,fridge_instance]=True
        close[fridge_instance,food_fish]=True
    

behavior find_knife_2035_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_pot_2040_around_cupboard_117(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(pot,cupboard_instance)
        else:
            exp(pot,cupboard_instance)
    eff:
        unknown[pot]=False
        close[pot,cupboard_instance]=True
        close[cupboard_instance,pot]=True
    

behavior find_homework_2047_around_desk_272(homework:item):
    goal: not unknown(homework)
    body:
        assert is_homework(homework)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==272
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(homework,desk_instance)
        else:
            exp(homework,desk_instance)
    eff:
        unknown[homework]=False
        close[homework,desk_instance]=True
        close[desk_instance,homework]=True
    

#goal_representation
## Output:

def fish_soup_preparation_steps(pot: item, fish: item, stove: item):
    achieve has_water(pot)
    achieve_once inside(fish, pot)
    achieve_once close_char(char, stove)
    achieve on(pot, stove)
    achieve is_on(stove)
    achieve has_water(pot)

behavior prepare_ingredients(fish: item, knife: item, cutting_board: item):
    body:
        achieve_once on(fish, cutting_board)
        achieve_once inhand(knife)

behavior cut_fish(fish: item):
    body:
        achieve cut(fish)

behavior cook_fish_soup(pot: item, fish: item, stove: item):
    body:
        fish_soup_preparation_steps(pot, fish, stove)

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        bind knife: item where:
            is_knife(knife)
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        bind stove: item where:
            is_stove(stove)
        bind pot: item where:
            is_pot(pot)
        bind faucet: item where:
            is_faucet(faucet)
        
        prepare_ingredients(fish, knife, cutting_board)
        cut_fish(fish)
        cook_fish_soup(pot, fish, stove)
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Achieve statements are not allowed in the current mode: SymbolicExecutionMode.DERIVED
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_fish_2093_around_kitchen_counter_123(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_fish,kitchen_counter_instance)
        else:
            exp(food_fish,kitchen_counter_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_fish]=True
    

behavior find_knife_2122_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_pot_2040_around_cupboard_117(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(pot,cupboard_instance)
        else:
            exp(pot,cupboard_instance)
    eff:
        unknown[pot]=False
        close[pot,cupboard_instance]=True
        close[cupboard_instance,pot]=True
    

behavior find_homework_2047_around_desk_272(homework:item):
    goal: not unknown(homework)
    body:
        assert is_homework(homework)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==272
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(homework,desk_instance)
        else:
            exp(homework,desk_instance)
    eff:
        unknown[homework]=False
        close[homework,desk_instance]=True
        close[desk_instance,homework]=True
    

#goal_representation
behavior fish_soup_preparation_steps(pot: item, fish: item, stove: item):
    body:
        achieve_once has_water(pot)
        achieve_once inside(fish, pot)
        achieve on(pot, stove)
        achieve is_on(stove)

behavior prepare_ingredients(fish: item, knife: item, cutting_board: item):
    body:
        achieve_once on(fish, cutting_board)
        achieve_once inhand(knife)

behavior cut_fish(fish: item):
    body:
        achieve cut(fish)

behavior cook_fish_soup(pot: item, fish: item, stove: item):
    body:
        fish_soup_preparation_steps(pot, fish, stove)

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        bind knife: item where:
            is_knife(knife)
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        bind stove: item where:
            is_stove(stove)
        bind pot: item where:
            is_pot(pot)
        bind faucet: item where:
            is_faucet(faucet)
        
        prepare_ingredients(fish, knife, cutting_board)
        cut_fish(fish)
        cook_fish_soup(pot, fish, stove)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior fish_soup_preparation_steps(pot: item, fish: item, stove: item):
    body:
        achieve_once has_water(pot)
        achieve_once inside(fish, pot)
        achieve on(pot, stove)
        achieve is_on(stove)

behavior prepare_ingredients(fish: item, knife: item, cutting_board: item):
    body:
        achieve_once on(fish, cutting_board)
        achieve_once inhand(knife)

behavior cut_fish(fish: item):
    body:
        achieve cut(fish)

behavior cook_fish_soup(pot: item, fish: item, stove: item):
    body:
        fish_soup_preparation_steps(pot, fish, stove)

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        bind knife: item where:
            is_knife(knife)
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        bind stove: item where:
            is_stove(stove)
        bind pot: item where:
            is_pot(pot)
        bind faucet: item where:
            is_faucet(faucet)
        
        prepare_ingredients(fish, knife, cutting_board)
        cut_fish(fish)
        cook_fish_soup(pot, fish, stove)
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(food_fish_2093, kitchen_counter_123)walk_executor(food_fish_2093)grab_executor(food_fish_2093)walk_executor(cutting_board_2123)put_executor(food_fish_2093, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_fish_2093)cut_executor(food_fish_2093)walk_executor(cupboard_117)exp(pot_78, cupboard_117)walk_executor(pot_78)open_executor(pot_78)grab_executor(pot_78)walk_executor(faucet_121)walk_executor(kitchen_counter_119)put_executor(knife_2122, kitchen_counter_119)switchon_executor(faucet_121)switchoff_executor(faucet_121)walk_executor(food_fish_2093)grab_executor(food_fish_2093)walk_executor(pot_78)putin_executor(food_fish_2093, pot_78)walk_executor(stove_2135)put_executor(pot_78, stove_2135)switchon_executor(stove_2135)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Robot find: tray_2068, oil_2149, knife_2035, food_kiwi_2054, food_orange_2027, Robot is close to the kitchen_counter_123. 
##############################
From agent.py
exp(food_fish_2093, kitchen_counter_123)
Fail to find food_fish_2093 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(cutting_board_2123)exp(food_fish_2093, cutting_board_2123)walk_executor(food_fish_2093)grab_executor(food_fish_2093)walk_executor(cutting_board_2123)put_executor(food_fish_2093, cutting_board_2123)walk_executor(knife_2035)grab_executor(knife_2035)walk_executor(food_fish_2093)cut_executor(food_fish_2093)walk_executor(cupboard_117)exp(pot_78, cupboard_117)walk_executor(pot_78)open_executor(pot_78)grab_executor(pot_78)walk_executor(faucet_121)walk_executor(kitchen_counter_119)put_executor(knife_2035, kitchen_counter_119)switchon_executor(faucet_121)switchoff_executor(faucet_121)walk_executor(food_fish_2093)grab_executor(food_fish_2093)walk_executor(pot_78)putin_executor(food_fish_2093, pot_78)walk_executor(stove_2135)put_executor(pot_78, stove_2135)switchon_executor(stove_2135)
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_78, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(food_fish_2093, cutting_board_2123)
Fail to find food_fish_2093 around cutting_board_2123. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_fish_2093, fridge_126)walk_executor(food_fish_2093)grab_executor(food_fish_2093)walk_executor(cutting_board_2123)put_executor(food_fish_2093, cutting_board_2123)walk_executor(knife_2035)grab_executor(knife_2035)walk_executor(food_fish_2093)cut_executor(food_fish_2093)walk_executor(pot_78)grab_executor(pot_78)walk_executor(faucet_121)walk_executor(kitchen_counter_119)put_executor(knife_2035, kitchen_counter_119)switchon_executor(faucet_121)switchoff_executor(faucet_121)walk_executor(food_fish_2093)grab_executor(food_fish_2093)walk_executor(pot_78)putin_executor(food_fish_2093, pot_78)walk_executor(stove_2135)put_executor(pot_78, stove_2135)switchon_executor(stove_2135)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_fish_2093, fridge_126)
Find food_fish_2093. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_fish_2093)walk_executor(cutting_board_2123)put_executor(food_fish_2093, cutting_board_2123)walk_executor(knife_2035)grab_executor(knife_2035)walk_executor(food_fish_2093)cut_executor(food_fish_2093)walk_executor(pot_78)grab_executor(pot_78)walk_executor(faucet_121)walk_executor(kitchen_counter_119)put_executor(knife_2035, kitchen_counter_119)switchon_executor(faucet_121)switchoff_executor(faucet_121)walk_executor(food_fish_2093)grab_executor(food_fish_2093)walk_executor(pot_78)putin_executor(food_fish_2093, pot_78)walk_executor(stove_2135)put_executor(pot_78, stove_2135)switchon_executor(stove_2135)
##############################
From agent.py
grab_executor(food_fish_2093)
Robot find: Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. Grabbing food_fish_2093 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot find: Robot is close to the food_fish_2093. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_fish_2093, cutting_board_2123)
Robot find: Robot is close to the food_fish_2093. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. cutting_board_2123 is close food_fish_2093. food_fish_2093 is close cutting_board_2123. food_fish_2093 is on cutting_board_2123. food_fish_2093 released by right hand. 
##############################
From agent.py
walk_executor(knife_2035)
Robot find: Robot is close to the kitchen_counter_123. Robot is close to the knife_2035. 
##############################
From agent.py
grab_executor(knife_2035)
Robot find: Robot is close to the kitchen_counter_123. Robot is close to the knife_2035. Grabbing knife_2035 by right hand. 
##############################
From agent.py
walk_executor(food_fish_2093)
Robot find: Robot is close to the knife_2035. Robot is close to the cutting_board_2123. Robot is close to the food_fish_2093. 
##############################
From agent.py
cut_executor(food_fish_2093)
Robot find: Robot is close to the knife_2035. Robot is close to the cutting_board_2123. Robot is close to the food_fish_2093. 
##############################
From agent.py
walk_executor(pot_78)
Robot find: food_food_2064, Robot is close to the knife_2035. Robot is close to the pot_78. Robot is close to the oven_127. 
##############################
From agent.py
grab_executor(pot_78)
Robot find: Robot is close to the knife_2035. Robot is close to the pot_78. Robot is close to the oven_127. Grabbing pot_78 by left hand. 
##############################
From agent.py
walk_executor(faucet_121)
Robot find: Robot is close to the knife_2035. Robot is close to the pot_78. Robot is close to the faucet_121. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: Robot is close to the knife_2035. Robot is close to the pot_78. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(knife_2035, kitchen_counter_119)
Robot find: Robot is close to the knife_2035. Robot is close to the pot_78. Robot is close to the kitchen_counter_119. kitchen_counter_119 is close knife_2035. knife_2035 is close kitchen_counter_119. knife_2035 is on kitchen_counter_119. knife_2035 released by right hand. 
##############################
From agent.py
switchon_executor(faucet_121)
Robot find: Robot is close to the knife_2035. Robot is close to the pot_78. Robot is close to the kitchen_counter_119. faucet_121 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_121)
Robot find: Robot is close to the knife_2035. Robot is close to the pot_78. Robot is close to the kitchen_counter_119. faucet_121 is turned off. 
##############################
From agent.py
walk_executor(food_fish_2093)
Robot find: Robot is close to the pot_78. Robot is close to the cutting_board_2123. Robot is close to the food_fish_2093. 
##############################
From agent.py
grab_executor(food_fish_2093)
Robot find: Robot is close to the pot_78. Robot is close to the cutting_board_2123. Robot is close to the food_fish_2093. Grabbing food_fish_2093 by right hand. 
##############################
From agent.py
walk_executor(pot_78)
Robot find: Robot is close to the pot_78. Robot is close to the food_fish_2093. 
##############################
From agent.py
putin_executor(food_fish_2093, pot_78)
Robot find: Robot is close to the pot_78. Robot is close to the food_fish_2093. pot_78 is close food_fish_2093. food_fish_2093 is inside pot_78. food_fish_2093 is close pot_78. food_fish_2093 released by right hand. 
##############################
From agent.py
walk_executor(stove_2135)
Robot find: Robot is close to the pot_78. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. 
##############################
From agent.py
put_executor(pot_78, stove_2135)
Robot find: Robot is close to the pot_78. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. pot_78 is close stove_2135. pot_78 is on stove_2135. stove_2135 is close pot_78. pot_78 released by left hand. 
##############################
From agent.py
switchon_executor(stove_2135)
Robot find: Robot is close to the pot_78. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. stove_2135 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Cook a pot of fish soup.
Action History:
['walk_executor(kitchen_counter_123)', 'walk_executor(cutting_board_2123)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'grab_executor(food_fish_2093)', 'walk_executor(cutting_board_2123)', 'put_executor(food_fish_2093, cutting_board_2123)', 'walk_executor(knife_2035)', 'grab_executor(knife_2035)', 'walk_executor(food_fish_2093)', 'cut_executor(food_fish_2093)', 'walk_executor(pot_78)', 'grab_executor(pot_78)', 'walk_executor(faucet_121)', 'walk_executor(kitchen_counter_119)', 'put_executor(knife_2035, kitchen_counter_119)', 'switchon_executor(faucet_121)', 'switchoff_executor(faucet_121)', 'walk_executor(food_fish_2093)', 'grab_executor(food_fish_2093)', 'walk_executor(pot_78)', 'putin_executor(food_fish_2093, pot_78)', 'walk_executor(stove_2135)', 'put_executor(pot_78, stove_2135)', 'switchon_executor(stove_2135)']
Time info:
Time consume: 191 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 90
goal generate times: 1
goal correct times: 2
action_num: 26

Task complete rate:
Keystate: k1 - Requires: 15 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
