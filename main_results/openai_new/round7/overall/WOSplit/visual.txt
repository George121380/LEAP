############################################################
When the sub-task is: Find the book and put it on the table in home office. Then turn on the light in the home office.
A successful representation:
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table) # Place the book on the table

behavior turn_on_light(light:item):
    body:
        achieve is_on(light) # Ensure the light is turned on

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Identify the home office

        bind book: item where:
            is_book(book)
        # Select a book
        bind table: item where:
            is_table(table) and inside(table, home_office) 
        # Select a table that is in the home office
        bind light: item where:
            is_light(light) and inside(light, home_office)
        # Select a light that is in the home office
        place_book_on_table(book, table)
        turn_on_light(light)

############################################################
When the sub-task is: Make a cup of lemon water with additional sugar.
A successful representation:
 
behavior squeeze_to_add_lemon_juice(lemon:item, cup:item):
    body:
        achieve_once has_water(cup)
        # Ensure the cup has water inside
        achieve_once cut(lemon)
        # Ensure the lemon is cut before squeezing
        achieve_once inside(lemon, cup)
        # Squeeze the lemon to add juice into the cup

behavior add_sugar(cup:item, sugar:item):
    body:
        achieve_once inside(sugar, cup)
        # Add sugar to the cup

behavior __goal__():
    body:
        bind lemon: item where:
            is_food_lemon(lemon)
        # Select a lemon

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select some sugar

        squeeze_to_add_lemon_juice(lemon, cup)
        add_sugar(cup, sugar)
        # Add sugar to the lemon water

############################################################
When the sub-task is: Wash my cat.
A successful representation:
 
behavior wash_cat(cat:item, sink:item):
    body:
        achieve_once close_char(char, sink)
        # Get close to the sink
        achieve_once inside(cat, sink)
        # Place the cat inside the sink
        wash(cat)
        # Wash the cat
        achieve_once clean(cat)
        # Ensure the cat becomes clean after washing

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat)
        # Select the cat to wash

        bind sink: item where:
            is_sink(sink)
        # Select a sink where the cat can be washed

        wash_cat(cat, sink)

############################################################
When the sub-task is: Find my cat and touch it
A successful representation:
 
behavior find_and_touch_cat(cat:item):
    body:
        achieve_once close_char(char, cat)
        # Get close to the cat
        touch(cat)
        # Touch the cat to confirm interaction

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat)
        # Select the cat to interact with

        if not close_char(char, cat):
            find_and_touch_cat(cat)
        else:
            touch(cat)
        # If not already close to the cat, find and touch the cat
        # Otherwise, directly touch the cat

############################################################
When the sub-task is: Use pot to boil some water.
A successful representation:
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once has_water(pot)
        # Fill the pot with water from the faucet

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)
        # Ensure the stove is turned on

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve on(pot, stove)
        # Place the pot on the stove

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        fill_pot_with_water(pot, faucet)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

############################################################
When the sub-task is: Put milk and egg on one of the table in dining room. Throw all the items in the fridge to the trashcan. Then put milk and eggs back in the fridge.
A successful representation:
 
behavior move_milk_and_egg_to_table(milk:item, egg:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior throw_items_in_fridge_to_trash(fridge:item, trashcan:item):
    body:
        foreach item: item:
            if inside(item, fridge):
                achieve_once inside(item, trashcan)

behavior return_milk_and_egg_to_fridge(milk:item, egg:item, fridge:item):
    body:
        achieve_once inside(milk, fridge)
        achieve_once inside(egg, fridge)

behavior close_the_fridge_door(fridge:item):
    body:
        achieve_once closed(fridge)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        
        bind table: item where:
            is_table(table) and inside(table, dining_room)
        
        bind milk: item where:
            is_milk(milk)
        
        bind egg: item where:
            is_food_egg(egg)
        
        bind trashcan: item where:
            is_trashcan(trashcan)
        
        bind fridge: item where:
            is_fridge(fridge) and id[fridge] == 126
        
        move_milk_and_egg_to_table(milk, egg, table)
        throw_items_in_fridge_to_trash(fridge, trashcan)
        return_milk_and_egg_to_fridge(milk, egg, fridge)
        close_the_fridge_door(fridge)

############################################################
When the sub-task is: Put pizza and hamburger on a plate. Then hot them in the microwave. Then put them on a table in dinning room.
A successful representation:
 
behavior place_food_on_plate(pizza:item, hamburger:item, plate:item):
    body:
        achieve_once on(pizza, plate)
        achieve_once on(hamburger, plate)

behavior heat_in_microwave(plate:item, microwave:item):
    body:
        achieve_once inside(plate, microwave)
        achieve_once closed(microwave)
        achieve_once is_on(microwave)

behavior put_on_table(plate:item, table:item):
    body:
        achieve_once on(plate, table)

behavior close_the_microwave_door(microwave:item):
    body:
        achieve_once is_off(microwave)
        achieve_once closed(microwave)

behavior __goal__():
    body:
        bind pizza: item where:
            is_food_pizza(pizza)
        
        bind hamburger: item where:
            is_food_hamburger(hamburger)
        
        bind plate: item where:
            is_plate(plate)
        
        bind microwave: item where:
            is_microwave(microwave)
        
        bind dining_room: item where:
            is_dining_room(dining_room)
        
        bind table: item where:
            is_table(table) and inside(table, dining_room)

        place_food_on_plate(pizza, hamburger, plate)
        heat_in_microwave(plate, microwave)
        close_the_microwave_door(microwave)
        put_on_table(plate, table)

############################################################
When the sub-task is: Wash the bowls and plates with dishwasher. And wash forks by hand.
A successful representation:
 
behavior load_dishwasher(item:item, dishwasher:item):
    body:
        achieve_once inside(item, dishwasher)

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher)
        achieve_once is_on(dishwasher)

behavior wash_fork_by_hand(fork:item):
    body:
        wash(fork)
        achieve clean(fork)

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher) and id[dishwasher] == 1001

        foreach item: item:
            if (is_bowl(item) or is_plate(item)) and not clean(item):
                load_dishwasher(item, dishwasher)

        start_dishwasher(dishwasher)

        foreach fork: item:
            if is_fork(fork) and not clean(fork):
                wash_fork_by_hand(fork)

############################################################
When the sub-task is: Hand wash the jacket, then wash it by washing machine.
A successful representation:
 
behavior hand_wash_jacket(jacket: item):
    body:
        wash(jacket)
        # Hand wash the jacket
        achieve has_water(jacket)
        # Ensure the jacket is soaked with water
        rinse(jacket)
        # Rinse the jacket with water
        achieve clean(jacket)
        # Ensure the jacket is clean after rinsing

behavior machine_wash_jacket(jacket: item, washing_machine: item):
    body:
        achieve_once inside(jacket, washing_machine)
        # Place the jacket inside the washing machine
        achieve_once closed(washing_machine)
        # Close the washing machine door
        achieve_once is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select a jacket to wash
        
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine

        hand_wash_jacket(jacket)
        machine_wash_jacket(jacket, washing_machine)

############################################################
When the sub-task is: Open the windows in the bathroom.
A successful representation:
 
behavior open_window(window:item):
    body:
        achieve open(window)

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)

        bind window: item where:
            is_window(window) and inside(window, bathroom)

        open_window(window)

############################################################
When the sub-task is: slice some chicken
A successful representation:
 
behavior prepare_chicken_for_slicing(chicken:item, knife:item, cutting_board:item):
    body:
        achieve_once on(chicken, cutting_board)
        achieve_once inhand(knife)

behavior slice_chicken(chicken:item):
    body:
        achieve cut(chicken)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        prepare_chicken_for_slicing(chicken, knife, cutting_board)
        slice_chicken(chicken)

############################################################
When the sub-task is: Get a cup of water and add some sliced kiwi inside.
A successful representation:
 
behavior fill_cup_with_water(cup:item, faucet:item):
    body:
        achieve_once has_water(cup)
        # Fill the cup with water from the faucet

behavior slice_kiwi(kiwi:item, knife:item, cutting_board:item):
    body:
        achieve_once cut(kiwi)
        # Slice the kiwi

behavior add_sliced_kiwi_to_cup(kiwi:item, cup:item):
    body:
        achieve_once inside(kiwi, cup)
        # Add the sliced kiwi to the cup of water

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        bind kiwi: item where:
            is_food_kiwi(kiwi)
        # Select a kiwi

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        fill_cup_with_water(cup, faucet)
        slice_kiwi(kiwi, knife, cutting_board)
        add_sliced_kiwi_to_cup(kiwi, cup)

############################################################
When the sub-task is: Find the book and put it on the coffee table in home office.
A successful representation:
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table) # Place the book on the coffee table

behavior verify_table_location(table:item):
    body:
        observe(table, "Check if the table is inside the home office")

behavior move_book_to_correct_table(book:item, table:item):
    body:
        achieve inside(book, table)
        achieve_once on(book, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        
        bind book: item where:
            is_book(book) and id[book] == 2091

        bind table: item where:
            is_table(table)
        
        verify_table_location(table)
        
        if not inside(table, home_office):
            move_book_to_correct_table(book, table)
        else:
            place_book_on_table(book, table)

############################################################
When the sub-task is: Open the windows in the bathroom.
A successful representation:
 
behavior open_window(window:item):
    body:
        achieve open(window)

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)

        bind window: item where:
            is_window(window) and inside(window, bathroom)

        open_window(window)

############################################################
When the sub-task is: Put pizza and hamburger on a plate. Then hot them in the microwave. Then put them on a table in dinning room.
A successful representation:
 
behavior place_food_on_plate(pizza:item, hamburger:item, plate:item):
    body:
        achieve_once on(pizza, plate)
        achieve_once on(hamburger, plate)

behavior heat_in_microwave(plate:item, microwave:item):
    body:
        achieve_once inside(plate, microwave)
        achieve_once closed(microwave)
        achieve_once is_on(microwave)

behavior put_on_table(plate:item, table:item):
    body:
        achieve_once on(plate, table)

behavior close_the_microwave_door(microwave:item):
    body:
        achieve_once is_off(microwave)
        achieve_once closed(microwave)

behavior __goal__():
    body:
        bind pizza: item where:
            is_food_pizza(pizza)
        
        bind hamburger: item where:
            is_food_hamburger(hamburger)
        
        bind plate: item where:
            is_plate(plate)
        
        bind microwave: item where:
            is_microwave(microwave)
        
        bind dining_room: item where:
            is_dining_room(dining_room)
        
        bind table: item where:
            is_table(table) and inside(table, dining_room)

        place_food_on_plate(pizza, hamburger, plate)
        heat_in_microwave(plate, microwave)
        close_the_microwave_door(microwave)
        put_on_table(plate, table)

############################################################
When the sub-task is: Make sure there is at least one light on in every room.
A successful representation:
 
behavior turn_on_light(light: item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        foreach room: item:
            if is_bedroom(room) or is_home_office(room) or is_bathroom(room) or is_dining_room(room):
                foreach light: item:
                    if is_light(light) and inside(light, room):
                        if not is_on(light):
                            turn_on_light(light)

############################################################
When the sub-task is: wash all the bowls and the plates with dishwasher
A successful representation:
 
behavior load_dishwasher(item:item, dishwasher:item):
    body:
        achieve_once inside(item, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher)
        # Close the dishwasher door
        achieve_once is_on(dishwasher)
        # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher

        foreach item: item:
            if (is_bowl(item) or is_plate(item)) and not clean(item):
                load_dishwasher(item, dishwasher)
        # Load all dirty bowls and plates into the dishwasher

        start_dishwasher(dishwasher)
        # Start the dishwasher

############################################################
When the sub-task is: Roast chicken with onion in the oven.
A successful representation:
 
behavior prepare_chicken_and_onion_for_roasting(chicken:item, onion:item, cutting_board:item):
    body:
        achieve_once on(chicken, cutting_board)
        achieve_once on(onion, cutting_board)

behavior place_in_oven(chicken:item, onion:item, oven:item):
    body:
        achieve_once inside(chicken, oven)
        achieve_once inside(onion, oven)
        achieve_once closed(oven)
        achieve_once is_on(oven)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind onion: item where:
            is_food_onion(onion)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind oven: item where:
            is_oven(oven)

        prepare_chicken_and_onion_for_roasting(chicken, onion, cutting_board)
        place_in_oven(chicken, onion, oven)

############################################################
When the sub-task is: wash all the bowls and the plates with dishwasher
A successful representation:
 
behavior load_dishwasher(item:item, dishwasher:item):
    body:
        achieve_once inside(item, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher)
        # Close the dishwasher door
        achieve_once is_on(dishwasher)
        # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher

        foreach item: item:
            if (is_bowl(item) or is_plate(item)) and not clean(item):
                load_dishwasher(item, dishwasher)
        # Load all dirty bowls and plates into the dishwasher

        start_dishwasher(dishwasher)
        # Start the dishwasher

############################################################
When the sub-task is: Boil some rice by pot.
A successful representation:
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once has_water(pot)
        # Fill the pot with water from the faucet

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve on(pot, stove)
        # Place the pot on the stove

behavior add_rice_to_pot(rice:item, pot:item):
    body:
        achieve_once inside(rice, pot)
        # Add rice to the pot

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)
        # Ensure the stove is turned on

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)

        bind faucet: item where:
            is_faucet(faucet)

        bind stove: item where:
            is_stove(stove)

        bind rice: item where:
            is_food_rice(rice)

        fill_pot_with_water(pot, faucet)
        place_pot_on_stove(pot, stove)
        add_rice_to_pot(rice, pot)
        turn_on_stove(stove)

############################################################
When the sub-task is: Put milk and egg on one of the table in dining room. Throw all the items in the fridge to the trashcan. Then put milk and eggs back in the fridge.
A successful representation:

behavior move_milk_and_egg_to_table(milk:item, egg:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior throw_items_in_fridge_to_trash(fridge:item, trashcan:item):
    body:
        foreach item: item:
            if inside(item, fridge):
                achieve_once inside(item, trashcan)

behavior return_milk_and_egg_to_fridge(milk:item, egg:item, fridge:item):
    body:
        achieve_once inside(milk, fridge)
        achieve_once inside(egg, fridge)

behavior close_the_fridge_door(fridge:item):
    body:
        achieve_once closed(fridge)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        
        bind table: item where:
            is_table(table) and inside(table, dining_room)
        
        bind milk: item where:
            is_milk(milk)
        
        bind egg: item where:
            is_food_egg(egg)
        
        bind fridge: item where:
            is_fridge(fridge)
        
        bind trashcan: item where:
            is_trashcan(trashcan)
        
        move_milk_and_egg_to_table(milk, egg, table)
        throw_items_in_fridge_to_trash(fridge, trashcan)
        return_milk_and_egg_to_fridge(milk, egg, fridge)
        close_the_fridge_door(fridge)

############################################################
When the sub-task is: Boil egg.
A successful representation:
 
behavior boil_egg(egg:item, pot:item, stove:item, faucet:item):
    body:
        achieve_once has_water(pot)
        # Ensure the pot has water

        achieve_once inside(egg, pot)
        # Place the egg inside the pot filled with water

        achieve on(pot, stove)
        # Place the pot on the stove

        achieve is_on(stove)
        # Turn on the stove to start boiling

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select an egg

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        boil_egg(egg, pot, stove, faucet)

############################################################
When the sub-task is: Get a cup of water.
A successful representation:
 
behavior fill_cup_with_water(cup:item, faucet:item):
    body:
        achieve_once has_water(cup)
        # Fill the cup with water from the faucet

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        fill_cup_with_water(cup, faucet)

############################################################
When the sub-task is: Find the book and put it on the coffe table in home office. Then prepare a cup of hot milk, put it on the table.
A successful representation:
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table)

behavior prepare_hot_milk(milk:item, cup:item, microwave:item):
    body:
        achieve_once inside(milk, cup)
        achieve_once inside(cup, microwave)
        achieve_once closed(microwave)
        achieve_once is_on(microwave)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        
        bind bookshelf: item where:
            is_bookshelf(bookshelf) and inside(bookshelf, dining_room)

        bind book: item where:
            is_book(book) and id[book] == 2091

        bind home_office: item where:
            is_home_office(home_office)

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)

        bind milk: item where:
            is_milk(milk)

        bind cup: item where:
            is_cup(cup)

        bind microwave: item where:
            is_microwave(microwave)

        place_book_on_table(book, coffee_table)
        prepare_hot_milk(milk, cup, microwave)
        achieve_once on(cup, coffee_table)
############################################################
When the sub-task is: Get a cup of water and freeze it.
A successful representation:
 
behavior fill_cup_with_water(cup:item, faucet:item):
    body:
        achieve_once has_water(cup)
        # Fill the cup with water from the faucet

behavior place_cup_in_freezer(cup:item, freezer:item):
    body:
        achieve_once inside(cup, freezer)
        # Place the cup in the freezer

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        bind freezer: item where:
            is_fridge(freezer)
        # Select a freezer (using fridge as a substitute)

        fill_cup_with_water(cup, faucet)
        place_cup_in_freezer(cup, freezer)

############################################################
When the sub-task is: Turn on the dvd player.
A successful representation:
 
behavior turn_on_dvd_player(dvd_player:item):
    body:
        achieve is_on(dvd_player) # Ensure the DVD player is turned on

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        # Select the DVD player to operate
        turn_on_dvd_player(dvd_player)

############################################################
When the sub-task is: Find a book and put it on the coffe table in home office. Then open the window in the home office.
A successful representation:
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table) # Place the book on the coffee table

behavior open_window(window:item):
    body:
        achieve open(window) # Ensure the window is open

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Identify the home office

        bind book: item where:
            is_book(book)
        # Select a book
        
        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Select a coffee table that is in the home office

        bind window: item where:
            is_window(window) and inside(window, home_office)
        # Select a window that is in the home office

        place_book_on_table(book, coffee_table)
        open_window(window)

############################################################
When the sub-task is: slice some chicken
A successful representation:
behavior prepare_chicken_for_slicing(chicken:item, knife:item, cutting_board:item):
    body:
        achieve_once on(chicken, cutting_board)
        achieve_once inhand(knife)

behavior slice_chicken(chicken:item):
    body:
        achieve cut(chicken)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        prepare_chicken_for_slicing(chicken, knife, cutting_board)
        slice_chicken(chicken)
############################################################
When the sub-task is: Put milk, turkey, egg, fish and chicken on one of the table in dining room.
A successful representation:
 
behavior place_items_on_table(milk:item, turkey:item, egg:item, fish:item, chicken:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(turkey, table)
        achieve_once on(egg, table)
        achieve_once on(fish, table)
        achieve_once on(chicken, table)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)

        bind table: item where:
            is_table(table) and inside(table, dining_room)

        bind milk: item where:
            is_milk(milk)

        bind turkey: item where:
            is_food_turkey(turkey)

        bind egg: item where:
            is_food_egg(egg)

        bind fish: item where:
            is_food_fish(fish)

        bind chicken: item where:
            is_food_chicken(chicken)

        place_items_on_table(milk, turkey, egg, fish, chicken, table)

############################################################
When the sub-task is: Turn on the TV by touching the remote control.
A successful representation:
 
behavior turn_on_tv_with_remote_control(remote_control: item, television: item):
    body:
        achieve_once close_char(char, remote_control)
        # Ensure the character is close to the remote control
        achieve_once close_char(char, television)
        # Ensure the character is close to the television
        touch(remote_control)
        # Touch the remote control to turn on the television

behavior __goal__():
    body:
        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select a remote control

        bind television: item where:
            is_television(television)
        # Select a television

        turn_on_tv_with_remote_control(remote_control, television)

############################################################
When the sub-task is: Get a cup of water.
A successful representation:
 
behavior fill_cup_with_water(cup:item, faucet:item):
    body:
        achieve_once has_water(cup)
        # Fill the cup with water from the faucet

behavior ensure_faucet_is_on(faucet:item):
    body:
        achieve is_on(faucet)
        # Ensure the faucet is turned on

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        ensure_faucet_is_on(faucet)
        fill_cup_with_water(cup, faucet)

############################################################
When the sub-task is: Make sure there is at least one light on in every room.
A successful representation:
behavior turn_on_light(light: item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        foreach room: item:
            symbol has_light = exists light: item : (is_light(light) and inside(light, room))
            if has_light:
                foreach light: item:
                    if is_light(light) and inside(light, room) and not is_on(light):
                        turn_on_light(light)
############################################################
When the sub-task is: Cut the chicken into pieces, then put back to the fridge.
A successful representation:
 
behavior prepare_chicken_for_slicing(chicken:item, knife:item, cutting_board:item):
    body:
        achieve_once on(chicken, cutting_board)
        achieve_once inhand(knife)

behavior slice_chicken(chicken:item):
    body:
        achieve cut(chicken)

behavior store_chicken_in_fridge(chicken:item, fridge:item):
    body:
        achieve_once inside(chicken, fridge)
        achieve_once closed(fridge)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind fridge: item where:
            is_fridge(fridge)

        prepare_chicken_for_slicing(chicken, knife, cutting_board)
        slice_chicken(chicken)
        store_chicken_in_fridge(chicken, fridge)

############################################################
When the sub-task is: Put milk, turkey, egg, fish and chicken on one of the table in dining room.
A successful representation:
 
behavior place_items_on_table(milk:item, turkey:item, egg:item, fish:item, chicken:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(turkey, table)
        achieve_once on(egg, table)
        achieve_once on(fish, table)
        achieve_once on(chicken, table)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)

        bind table: item where:
            is_table(table) and inside(table, dining_room)

        bind milk: item where:
            is_milk(milk)

        bind turkey: item where:
            is_food_turkey(turkey)

        bind egg: item where:
            is_food_egg(egg)

        bind fish: item where:
            is_food_fish(fish)

        bind chicken: item where:
            is_food_chicken(chicken)

        place_items_on_table(milk, turkey, egg, fish, chicken, table)

############################################################
When the sub-task is: Turn on the lights in the bedroom. Then turn on the lights in the bathroom.
A successful representation:
 
behavior turn_on_lights(light: item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)

        bind bathroom: item where:
            is_bathroom(bathroom)

        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)

        turn_on_lights(bedroom_light)
        turn_on_lights(bathroom_light)

############################################################
When the sub-task is: Make some French fries.
A successful representation:

behavior prepare_potato_for_frying(potato:item, knife:item, cutting_board:item):
    body:
        achieve_once on(potato, cutting_board)
        achieve_once inhand(knife)

behavior cut_potato(potato:item):
    body:
        achieve cut(potato)

behavior fry_potato(potato:item, fryingpan:item, oil:item, stove:item):
    body:
        achieve_once inside(oil, fryingpan)
        achieve_once inside(potato, fryingpan)
        achieve on(fryingpan, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind fryingpan: item where:
            is_fryingpan(fryingpan)

        bind oil: item where:
            is_oil(oil)

        bind stove: item where:
            is_stove(stove)

        prepare_potato_for_frying(potato, knife, cutting_board)
        cut_potato(potato)
        fry_potato(potato, fryingpan, oil, stove)

############################################################
When the sub-task is: Wipe the toilet with toilet paper. Then throw it into the toilet.
A successful representation:
 
behavior wipe_toilet_with_toilet_paper(toilet:item, toilet_paper:item):
    body:
        achieve_once inhand(toilet_paper)
        # Ensure the toilet paper is in hand for wiping
        wipe(toilet)
        # Wipe the toilet using the toilet paper
        achieve clean(toilet)
        # Ensure the toilet becomes clean after wiping

behavior throw_toilet_paper_into_toilet(toilet_paper:item, toilet:item):
    body:
        achieve_once inside(toilet_paper, toilet)
        # Throw the used toilet paper into the toilet

behavior __goal__():
    body:
        bind toilet: item where:
            is_toilet(toilet)
            
        bind toilet_paper: item where:
            is_toilet_paper(toilet_paper)

        wipe_toilet_with_toilet_paper(toilet, toilet_paper)
        throw_toilet_paper_into_toilet(toilet_paper, toilet)

############################################################
When the sub-task is: Hand wash the jacket, then wash it by washing machine.
A successful representation:
 
behavior hand_wash_jacket(jacket: item):
    body:
        wash(jacket)
        # Hand wash the jacket
        achieve has_water(jacket)
        # Ensure the jacket is soaked with water
        rinse(jacket)
        # Rinse the jacket with water
        achieve clean(jacket)
        # Ensure the jacket is clean after rinsing

behavior machine_wash_jacket(jacket: item, washing_machine: item):
    body:
        achieve_once inside(jacket, washing_machine)
        # Place the jacket inside the washing machine
        achieve_once closed(washing_machine)
        # Close the washing machine door
        achieve_once is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select a jacket to wash
        
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine

        hand_wash_jacket(jacket)
        machine_wash_jacket(jacket, washing_machine)

############################################################
When the sub-task is: Insert a CD and play music using the CD player.
A successful representation:
 
behavior insert_cd(cd:item, cd_player:item):
    body:
        achieve_once inside(cd, cd_player)

behavior play_music(cd_player:item):
    body:
        achieve is_on(cd_player)

behavior __goal__():
    body:
        bind cd: item where:
            is_cd(cd)
        # Select a CD

        bind cd_player: item where:
            is_cd_player(cd_player)
        # Select a CD player

        insert_cd(cd, cd_player)
        play_music(cd_player)

############################################################
When the sub-task is: Turn on the lights in the bedroom. Then turn on the lights in the bathroom.
A successful representation:
 
behavior turn_on_lights(light: item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)

        bind bathroom: item where:
            is_bathroom(bathroom)

        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)

        turn_on_lights(bedroom_light)
        turn_on_lights(bathroom_light)

############################################################
When the sub-task is: Put milk and egg on one of the table in dining room. Throw all the items in the fridge to the trashcan. Then put milk and eggs back in the fridge.
A successful representation:
 
behavior move_milk_and_egg_to_table(milk:item, egg:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(egg, table)

behavior throw_items_in_fridge_to_trash(fridge:item, trashcan:item):
    body:
        foreach item: item:
            if inside(item, fridge):
                achieve_once inside(item, trashcan)

behavior return_milk_and_egg_to_fridge(milk:item, egg:item, fridge:item):
    body:
        achieve_once inside(milk, fridge)
        achieve_once inside(egg, fridge)

behavior close_the_fridge_door(fridge:item):
    body:
        achieve_once closed(fridge)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        
        bind table: item where:
            is_table(table) and inside(table, dining_room)
        
        bind milk: item where:
            is_milk(milk)
        
        bind egg: item where:
            is_food_egg(egg)
        
        bind fridge: item where:
            is_fridge(fridge)
        
        bind trashcan: item where:
            is_trashcan(trashcan)
        
        move_milk_and_egg_to_table(milk, egg, table)
        throw_items_in_fridge_to_trash(fridge, trashcan)
        return_milk_and_egg_to_fridge(milk, egg, fridge)
        close_the_fridge_door(fridge)

############################################################
When the sub-task is: Turn on the lights in the bathroom.
A successful representation:
 
behavior turn_on_lights(light: item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)

        turn_on_lights(bathroom_light)

############################################################
When the sub-task is: Slice and toast bread.
A successful representation:
behavior slice_bread(bread: item, knife: item, cutting_board: item):
    body:
        achieve_once on(bread, cutting_board)
        achieve_once inhand(knife)
        achieve cut(bread)

behavior toast_bread(bread: item, toaster: item):
    body:
        achieve_once inside(bread, toaster)
        achieve_once closed(toaster)
        achieve_once is_on(toaster)

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind toaster: item where:
            is_toaster(toaster)

        slice_bread(bread, knife, cutting_board)
        toast_bread(bread, toaster)
############################################################
When the sub-task is: Make a cup of lemon water with additional sugar.
A successful representation:
 
behavior squeeze_to_add_lemon_juice(lemon:item, cup:item):
    body:
        achieve_once has_water(cup)
        # Ensure the cup has water inside
        achieve_once cut(lemon)
        # Ensure the lemon is cut before squeezing
        achieve_once inside(lemon, cup)
        # Squeeze the lemon to add juice into the cup

behavior add_sugar(cup:item, sugar:item):
    body:
        achieve_once inside(sugar, cup)
        # Add sugar to the cup

behavior __goal__():
    body:
        bind lemon: item where:
            is_food_lemon(lemon)
        # Select a lemon

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select some sugar

        squeeze_to_add_lemon_juice(lemon, cup)
        add_sugar(cup, sugar)
        # Add sugar to the lemon water

############################################################
When the sub-task is: Cut the chicken into pieces, then put back to the fridge.
A successful representation:
 
behavior prepare_chicken_for_slicing(chicken:item, knife:item, cutting_board:item):
    body:
        achieve_once on(chicken, cutting_board)
        achieve_once inhand(knife)

behavior slice_chicken(chicken:item):
    body:
        achieve cut(chicken)

behavior store_chicken_in_fridge(chicken:item, fridge:item):
    body:
        achieve_once inside(chicken, fridge)
        achieve_once closed(fridge)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind fridge: item where:
            is_fridge(fridge)

        prepare_chicken_for_slicing(chicken, knife, cutting_board)
        slice_chicken(chicken)
        store_chicken_in_fridge(chicken, fridge)

############################################################
When the sub-task is: Find my spectacles and put it on the coffe table in home office. Then find the book and put it on the coffe table in home office.
A successful representation:
 
behavior find_spectacles_and_place_on_table(spectacles:item, table:item):
    body:
        achieve_once on(spectacles, table)

behavior find_book_and_place_on_table(book:item, table:item):
    body:
        achieve_once on(book, table)

behavior verify_table_location(table:item, home_office:item):
    body:
        observe(table, "Check if the table is inside the home office")
        
behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select spectacles

        bind book: item where:
            is_book(book)
        # Select book

        bind home_office: item where:
            is_home_office(home_office)
        # Identify the home office
        
        bind coffee_table: item where:
            is_table(coffee_table)
        
        verify_table_location(coffee_table, home_office)

        if inside(coffee_table, home_office):
            find_spectacles_and_place_on_table(spectacles, coffee_table)
            find_book_and_place_on_table(book, coffee_table)


############################################################
When the sub-task is: Turn on the lights in the bedroom. Then turn on the lights in the bathroom.
A successful representation:
 
behavior turn_on_lights(light: item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)

        bind bathroom: item where:
            is_bathroom(bathroom)

        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)

        turn_on_lights(bedroom_light)
        turn_on_lights(bathroom_light)

############################################################
When the sub-task is: Prepare a sink of soapy water in the bathroom.
A successful representation:
behavior ensure_faucet_is_off(faucet:item):
    body:
        achieve is_off(faucet) 

behavior fill_sink_with_water(sink:item, faucet:item):
    body:
        achieve has_water(sink) 

behavior combine_water_and_soap(sink:item, soap:item):
    body:
        achieve_once inside(soap, sink)

behavior __goal__():
    body:
        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 43

        bind sink: item where:
            is_sink(sink) and id[sink] == 42

        bind soap: item where:
            is_soap(soap) and id[soap] == 2053

        ensure_faucet_is_off(faucet)
        fill_sink_with_water(sink, faucet)
        combine_water_and_soap(sink, soap)
############################################################
When the sub-task is: Wipe the toilet with toilet paper. Then throw it into the toilet.
A successful representation:

behavior wipe_toilet_with_toilet_paper(toilet:item, toilet_paper:item):
    body:
        achieve_once inhand(toilet_paper)
        # Ensure the toilet paper is in hand for wiping
        wipe(toilet)
        # Wipe the toilet using the toilet paper
        achieve clean(toilet)
        # Ensure the toilet becomes clean after wiping

behavior throw_toilet_paper_into_toilet(toilet_paper:item, toilet:item):
    body:
        achieve_once inside(toilet_paper, toilet)
        # Throw the used toilet paper into the toilet

behavior __goal__():
    body:
        bind toilet: item where:
            is_toilet(toilet)
            
        bind toilet_paper: item where:
            is_toilet_paper(toilet_paper)

        wipe_toilet_with_toilet_paper(toilet, toilet_paper)
        throw_toilet_paper_into_toilet(toilet_paper, toilet)

############################################################
When the sub-task is: Wipe all the windows in the house by towel.
A successful representation:
 
behavior wipe_window_by_towel(window:item, towel:item):
    body:
        achieve_once inhand(towel)
        # Ensure the towel is held to wipe the window
        wipe(window)
        # Wipe the window using the towel
        achieve clean(window)
        # Ensure the window becomes clean after wiping

behavior __goal__():
    body:
        foreach window: item:
            if is_window(window) and dirty(window):
                bind towel: item where:
                    is_towel(towel)
                wipe_window_by_towel(window, towel)

############################################################
When the sub-task is: Turn on the dvd player.
A successful representation:
 
behavior turn_on_dvd_player(dvd_player:item):
    body:
        achieve is_on(dvd_player) # Ensure the DVD player is turned on

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        # Select the DVD player to operate
        turn_on_dvd_player(dvd_player)

############################################################
When the sub-task is: Find the book and put it on the table in home office. Then turn on the light in the home office.
A successful representation:
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table) # Place the book on the coffee table

behavior turn_on_light(light:item):
    body:
        achieve is_on(light) # Ensure the light is turned on

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Identify the home office

        bind book: item where:
            is_book(book)
        # Select a book
        
        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table that is in the home office

        bind light: item where:
            is_light(light) and inside(light, home_office)
        # Select a light that is in the home office

        place_book_on_table(book, table)
        turn_on_light(light)
############################################################
When the sub-task is: Prepare a bowl of water and put the bowl on the table in home office. Then find my cat put it on the table.
A successful representation:

behavior prepare_bowl_of_water(bowl:item, faucet:item, table:item):
    body:
        achieve_once has_water(bowl)
        achieve_once on(bowl, table)

behavior find_and_place_cat(cat:item, table:item):
    body:
        achieve_once on(cat, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Identify the home office

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table that is in the home office

        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        bind cat: item where:
            is_cat(cat)
        # Select the cat

        prepare_bowl_of_water(bowl, faucet, table)
        find_and_place_cat(cat, table)

############################################################
When the sub-task is: Prepare a sink of soapy water in the bathroom.
A successful representation:
 
behavior ensure_faucet_is_off(faucet:item):
    body:
        achieve is_off(faucet)

behavior fill_sink_with_water(faucet:item, sink:item):
    body:
        achieve has_water(sink)

behavior combine_water_and_soap(sink:item, soap:item):
    body:
        achieve_once inside(soap, sink)

behavior prepare_sink_of_soapy_water(faucet:item, sink:item, soap:item):
    body:
        ensure_faucet_is_off(faucet)
        combine_water_and_soap(sink, soap)
        fill_sink_with_water(faucet, sink)

behavior __goal__():
    body:
        bind faucet: item where:
            is_faucet(faucet)
        
        bind sink: item where:
            is_sink(sink)
        
        bind soap: item where:
            is_soap(soap)
        
        prepare_sink_of_soapy_water(faucet, sink, soap)

############################################################
When the sub-task is: Boil egg.
A successful representation:

behavior prepare_pot_for_boiling(pot:item, faucet:item):
    body:
        achieve_once has_water(pot)
        # Fill the pot with water from the faucet

behavior place_egg_in_pot(egg:item, pot:item):
    body:
        achieve_once inside(egg, pot)
        # Place the egg inside the pot of water

behavior turn_on_stove_and_boil_egg(pot:item, stove:item):
    body:
        achieve on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil the egg

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select an egg

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        prepare_pot_for_boiling(pot, faucet)
        place_egg_in_pot(egg, pot)
        turn_on_stove_and_boil_egg(pot, stove)

############################################################
When the sub-task is: Get a bowl of ice cream and add some jam on the top.
A successful representation:
 
behavior get_ice_cream_and_add_jam(bowl:item, ice_cream:item, jam:item):
    body:
        achieve_once inside(ice_cream, bowl)
        # Add ice cream to the bowl
        achieve_once on(jam, ice_cream)
        # Add jam on top of the ice cream

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl

        bind ice_cream: item where:
            is_food_ice_cream(ice_cream)
        # Select ice cream

        bind jam: item where:
            is_food_jam(jam)
        # Select jam

        get_ice_cream_and_add_jam(bowl, ice_cream, jam)

############################################################
When the sub-task is: Get a bowl of ice cream and add some jam on the top.
A successful representation:
behavior get_ice_cream_and_add_jam(bowl:item, ice_cream:item, jam:item):
    body:
        achieve_once inside(ice_cream, bowl)
        # Add ice cream to the bowl
        achieve_once on(jam, ice_cream)
        # Add jam on top of the ice cream

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl

        bind ice_cream: item where:
            is_food_ice_cream(ice_cream)
        # Select ice cream

        bind jam: item where:
            is_food_jam(jam)
        # Select jam

        get_ice_cream_and_add_jam(bowl, ice_cream, jam)
############################################################
When the sub-task is: Put milk, turkey, egg, fish and chicken on one of the table in dining room.
A successful representation:
 
behavior place_items_on_table(milk:item, turkey:item, egg:item, fish:item, chicken:item, table:item):
    body:
        achieve_once on(milk, table)
        achieve_once on(turkey, table)
        achieve_once on(egg, table)
        achieve_once on(fish, table)
        achieve_once on(chicken, table)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)

        bind table: item where:
            is_table(table) and inside(table, dining_room)

        bind milk: item where:
            is_milk(milk)

        bind turkey: item where:
            is_food_turkey(turkey)

        bind egg: item where:
            is_food_egg(egg)

        bind fish: item where:
            is_food_fish(fish)

        bind chicken: item where:
            is_food_chicken(chicken)

        place_items_on_table(milk, turkey, egg, fish, chicken, table)

############################################################
When the sub-task is: Wash my cat.
A successful representation:
 
behavior wash_cat(cat:item, sink:item):
    body:
        achieve_once close_char(char, sink)
        # Get close to the sink
        achieve_once inside(cat, sink)
        # Place the cat inside the sink
        wash(cat)
        # Wash the cat
        achieve_once clean(cat)
        # Ensure the cat becomes clean after washing

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat)
        # Select the cat to wash

        bind sink: item where:
            is_sink(sink)
        # Select a sink where the cat can be washed

        wash_cat(cat, sink)

############################################################
When the sub-task is: Slice some chicken and give it to my cat.
A successful representation:

behavior prepare_chicken_for_slicing(chicken:item, knife:item, cutting_board:item):
    body:
        achieve_once on(chicken, cutting_board)
        achieve_once inhand(knife)

behavior slice_chicken(chicken:item):
    body:
        achieve cut(chicken)

behavior give_chicken_to_cat(chicken:item, cat:item):
    body:
        achieve_once close_char(char, cat)
        achieve_once on(chicken, cat)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind cat: item where:
            is_cat(cat)

        prepare_chicken_for_slicing(chicken, knife, cutting_board)
        slice_chicken(chicken)
        give_chicken_to_cat(chicken, cat)

############################################################
When the sub-task is: Turn on the dvd player.
A successful representation:
behavior turn_on_dvd_player(dvd_player:item):
    body:
        achieve is_on(dvd_player) # Ensure the DVD player is turned on

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        # Select the DVD player to operate
        turn_on_dvd_player(dvd_player)
############################################################
When the sub-task is: Find the book and put it on the coffe table in home office. Then prepare a cup of hot milk, put it on the table.
A successful representation:
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table) # Place the book on the coffee table

behavior prepare_and_heat_milk(milk:item, cup:item, microwave:item):
    body:
        achieve_once inside(milk, cup) # Pour the milk into the cup
        achieve_once inside(cup, microwave) # Place the cup inside the microwave
        achieve_once closed(microwave) # Close the microwave door
        achieve_once is_on(microwave) # Turn on the microwave to heat the milk

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Identify the home office

        bind book: item where:
            is_book(book)
        # Select a book
        
        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Select a coffee table that is in the home office

        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind microwave: item where:
            is_microwave(microwave)
        # Select a microwave

        place_book_on_table(book, coffee_table)
        prepare_and_heat_milk(milk, cup, microwave)
        achieve_once on(cup, coffee_table) # Place the heated cup of milk on the coffee table
############################################################
When the sub-task is: Roast chicken with onion in the oven.
A successful representation:
behavior prepare_chicken_and_onion_for_roasting(chicken:item, onion:item, cutting_board:item):
    body:
        achieve_once on(chicken, cutting_board)
        achieve_once on(onion, cutting_board)

behavior place_in_oven(chicken:item, onion:item, oven:item):
    body:
        achieve_once inside(chicken, oven)
        achieve_once inside(onion, oven)
        achieve_once closed(oven)
        achieve_once is_on(oven)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind onion: item where:
            is_food_onion(onion)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind oven: item where:
            is_oven(oven)

        prepare_chicken_and_onion_for_roasting(chicken, onion, cutting_board)
        place_in_oven(chicken, onion, oven)
############################################################
When the sub-task is: Insert a CD and play music using the CD player.
A successful representation:
behavior insert_cd(cd:item, cd_player:item):
    body:
        achieve_once inside(cd, cd_player)

behavior play_music(cd_player:item):
    body:
        achieve is_on(cd_player)

behavior __goal__():
    body:
        bind cd: item where:
            is_cd(cd)

        bind cd_player: item where:
            is_cd_player(cd_player)

        insert_cd(cd, cd_player)
        play_music(cd_player)
############################################################
When the sub-task is: Get a cup of water and add some sliced kiwi inside.
A successful representation:

behavior fill_cup_with_water(cup:item, faucet:item):
    body:
        achieve_once has_water(cup)
        # Fill the cup with water from the faucet

behavior slice_kiwi(kiwi:item, knife:item, cutting_board:item):
    body:
        achieve_once cut(kiwi)
        # Slice the kiwi

behavior add_sliced_kiwi_to_cup(kiwi:item, cup:item):
    body:
        achieve_once inside(kiwi, cup)
        # Add the sliced kiwi to the cup of water

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        bind kiwi: item where:
            is_food_kiwi(kiwi)
        # Select a kiwi

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        fill_cup_with_water(cup, faucet)
        slice_kiwi(kiwi, knife, cutting_board)
        add_sliced_kiwi_to_cup(kiwi, cup)

############################################################
When the sub-task is: Throw all the items in the fridge to the trashcan.
A successful representation:
behavior throw_items_in_fridge_to_trash(fridge:item, trashcan:item):
    body:
        foreach item: item:
            if inside(item, fridge):
                achieve_once inside(item, trashcan)
                # Throw each item from the fridge into the trashcan

behavior __goal__():
    body:
        bind fridge: item where:
            is_fridge(fridge) and id[fridge]==289
        # Select the fridge with ID 289

        bind trashcan: item where:
            is_trashcan(trashcan)
        # Select a trashcan

        throw_items_in_fridge_to_trash(fridge, trashcan)
        # Initiate the process of discarding all items from the fridge into the trashcan
############################################################
When the sub-task is: Get a cup of milk and heat it by microwave.
A successful representation:
behavior get_milk_and_heat_in_microwave(milk:item, cup:item, microwave:item):
    body:
        achieve_once inside(milk, cup)
        achieve_once inside(cup, microwave)
        achieve_once closed(microwave)
        achieve_once is_on(microwave)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        
        bind cup: item where:
            is_cup(cup)
        
        bind microwave: item where:
            is_microwave(microwave)

        get_milk_and_heat_in_microwave(milk, cup, microwave)
############################################################
When the sub-task is: Find my cat and touch it
A successful representation:
 
behavior find_and_touch_cat(cat:item):
    body:
        achieve_once close_char(char, cat)
        # Get close to the cat
        touch(cat)
        # Touch the cat

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat)
        # Select the cat

        if not close_char(char, cat):
            find_and_touch_cat(cat)
        else:
            touch(cat)
        # If not already close to the cat, find and touch the cat
        # Otherwise, directly touch the cat

############################################################
When the sub-task is: Hand wash the jacket, then wash it by washing machine.
A successful representation:
behavior hand_wash_jacket(jacket: item):
    body:
        wash(jacket)
        # Hand wash the jacket
        achieve has_water(jacket)
        # Ensure the jacket is soaked with water
        rinse(jacket)
        # Rinse the jacket with water
        achieve clean(jacket)
        # Ensure the jacket is clean after rinsing

behavior machine_wash_jacket(jacket: item, washing_machine: item):
    body:
        achieve_once inside(jacket, washing_machine)
        # Place the jacket inside the washing machine
        achieve_once closed(washing_machine)
        # Close the washing machine door
        achieve_once is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select a jacket to wash

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine

        hand_wash_jacket(jacket)
        machine_wash_jacket(jacket, washing_machine)
############################################################
When the sub-task is: wash all the bowls and the plates with dishwasher
A successful representation:
behavior load_dishwasher(item:item, dishwasher:item):
    body:
        achieve_once inside(item, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher)
        # Close the dishwasher door
        achieve_once is_on(dishwasher)
        # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher

        foreach item: item:
            if (is_bowl(item) or is_plate(item)) and not clean(item):
                load_dishwasher(item, dishwasher)
        # Load all dirty bowls and plates into the dishwasher

        start_dishwasher(dishwasher)
        # Start the dishwasher
############################################################
When the sub-task is: Clean the bathroom sink directly.
A successful representation:
behavior wipe_sink_with_towel(sink:item, towel:item):
    body:
        achieve_once inhand(towel)
        # Ensure the towel is held to wipe the sink
        wipe(sink)
        # Wipe the sink using the towel
        achieve clean(sink)
        # Ensure the sink becomes clean after wiping

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and id[sink] == 42
        # Select the sink with ID 42

        bind towel: item where:
            is_towel(towel)
        # Select a towel

        wipe_sink_with_towel(sink, towel)
############################################################
When the sub-task is: Wash the bowls and plates with dishwasher. And wash forks by hand.
A successful representation:
 
behavior load_dishwasher(item:item, dishwasher:item):
    body:
        achieve_once inside(item, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher)
        # Close the dishwasher door
        achieve_once is_on(dishwasher)
        # Turn on the dishwasher

behavior wash_fork_by_hand(fork:item):
    body:
        wash(fork)
        achieve clean(fork)

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher) and id[dishwasher] == 129

        foreach item: item:
            if (is_bowl(item) or is_plate(item)):
                load_dishwasher(item, dishwasher)

        start_dishwasher(dishwasher)

        foreach fork: item:
            if is_fork(fork):
                wash_fork_by_hand(fork)

############################################################
When the sub-task is: Turn on the lights in the bathroom.
A successful representation:

behavior turn_on_lights(light: item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)

        turn_on_lights(bathroom_light)

############################################################
When the sub-task is: Boil some rice by pot.
A successful representation:
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once has_water(pot)
        # Fill the pot with water from the faucet

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve on(pot, stove)
        # Place the pot on the stove

behavior add_rice_to_pot(rice:item, pot:item):
    body:
        achieve_once inside(rice, pot)
        # Add rice to the pot

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)
        # Ensure the stove is turned on

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)

        bind faucet: item where:
            is_faucet(faucet)

        bind stove: item where:
            is_stove(stove)

        bind rice: item where:
            is_food_rice(rice)

        fill_pot_with_water(pot, faucet)
        place_pot_on_stove(pot, stove)
        add_rice_to_pot(rice, pot)
        turn_on_stove(stove)

############################################################
When the sub-task is: Open the windows in the bathroom.
A successful representation:
 
behavior open_window(window:item):
    body:
        achieve open(window)

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)

        bind window: item where:
            is_window(window) and inside(window, bathroom)

        open_window(window)

############################################################
When the sub-task is: Find my cat and touch it
A successful representation:
 
behavior find_and_touch_cat(cat:item):
    body:
        achieve_once close_char(char, cat)
        # Get close to the cat
        touch(cat)
        # Touch the cat

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat)
        # Select the cat

        if not close_char(char, cat):
            find_and_touch_cat(cat)
        else:
            touch(cat)
        # If not already close to the cat, find and touch the cat
        # Otherwise, directly touch the cat
 
############################################################
When the sub-task is: Prepare a cup of hot milk with cereal inside.
A successful representation:

behavior prepare_milk_with_cereal(cup:item, milk:item, cereal:item):
    body:
        achieve_once inside(milk, cup)
        achieve_once inside(cereal, cup)

behavior heat_milk_in_microwave(cup:item, microwave:item):
    body:
        achieve_once inside(cup, microwave)
        achieve_once closed(microwave)
        achieve_once is_on(microwave)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        
        bind milk: item where:
            is_milk(milk)
        
        bind cereal: item where:
            is_food_cereal(cereal)
        
        bind microwave: item where:
            is_microwave(microwave)

        prepare_milk_with_cereal(cup, milk, cereal)
        heat_milk_in_microwave(cup, microwave)

############################################################
When the sub-task is: Wash my cat.
A successful representation:
behavior wash_cat(cat:item, sink:item):
    body:
        achieve_once close_char(char, sink)
        # Get close to the sink
        achieve_once inside(cat, sink)
        # Place the cat inside the sink
        wash(cat)
        # Wash the cat
        achieve_once clean(cat)
        # Ensure the cat becomes clean after washing

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat)
        # Select the cat to wash

        bind sink: item where:
            is_sink(sink)
        # Select a sink where the cat can be washed

        wash_cat(cat, sink)
############################################################
When the sub-task is: Prepare a bowl of water and put the bowl on the table in home office. Then find my cat put it on the table.
A successful representation:
behavior prepare_bowl_of_water_and_put_on_table(bowl:item, faucet:item, table:item):
    body:
        achieve_once has_water(bowl)
        achieve_once on(bowl, table)

behavior find_and_put_cat_on_table(cat:item, table:item):
    body:
        achieve_once on(cat, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)

        bind table: item where:
            is_table(table) and inside(table, home_office)

        bind bowl: item where:
            is_bowl(bowl)

        bind faucet: item where:
            is_faucet(faucet)

        bind cat: item where:
            is_cat(cat)

        prepare_bowl_of_water_and_put_on_table(bowl, faucet, table)
        find_and_put_cat_on_table(cat, table)
############################################################
When the sub-task is: Put cleaning solution in the dishwasher. Then wash the bowls and the plates with dishwasher.
A successful representation:
behavior load_dishwasher_with_solution(dishwasher: item, cleaning_solution: item):
    body:
        achieve_once inside(cleaning_solution, dishwasher)

behavior load_dishwasher_with_dishes(dishwasher: item, dish: item):
    body:
        achieve_once inside(dish, dishwasher)

behavior start_dishwasher(dishwasher: item):
    body:
        achieve_once closed(dishwasher)
        achieve_once is_on(dishwasher)

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        
        bind cleaning_solution: item where:
            is_cleaning_solution(cleaning_solution)
        
        foreach dish: item:
            if (is_bowl(dish) or is_plate(dish)):
                load_dishwasher_with_dishes(dishwasher, dish)
        
        load_dishwasher_with_solution(dishwasher, cleaning_solution)
        start_dishwasher(dishwasher)
############################################################
When the sub-task is: Put cleaning solution in the dishwasher. Then wash the bowls and the plates with dishwasher.
A successful representation:
behavior load_dishwasher_with_solution(dishwasher: item, cleaning_solution: item):
    body:
        achieve_once inside(cleaning_solution, dishwasher)

behavior load_dishwasher_with_dishes(dishwasher: item, dish: item):
    body:
        achieve_once inside(dish, dishwasher)

behavior start_dishwasher(dishwasher: item):
    body:
        achieve_once closed(dishwasher)
        achieve_once is_on(dishwasher)

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        
        bind cleaning_solution: item where:
            is_cleaning_solution(cleaning_solution)
        
        foreach dish: item:
            if (is_bowl(dish) or is_plate(dish)):
                load_dishwasher_with_dishes(dishwasher, dish)
        
        load_dishwasher_with_solution(dishwasher, cleaning_solution)
        start_dishwasher(dishwasher)
############################################################
When the sub-task is: Roast chicken with onion in the oven.
A successful representation:
behavior prepare_chicken_and_onion_for_roasting(chicken:item, onion:item, cutting_board:item):
    body:
        achieve_once on(chicken, cutting_board)
        achieve_once on(onion, cutting_board)

behavior place_in_oven(chicken:item, onion:item, oven:item):
    body:
        achieve_once inside(chicken, oven)
        achieve_once inside(onion, oven)
        achieve_once closed(oven)
        achieve_once is_on(oven)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind onion: item where:
            is_food_onion(onion)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind oven: item where:
            is_oven(oven)

        prepare_chicken_and_onion_for_roasting(chicken, onion, cutting_board)
        place_in_oven(chicken, onion, oven)
############################################################
When the sub-task is: Put cleaning solution in the dishwasher. Then wash the bowls and the plates with dishwasher.
A successful representation:
behavior load_dishwasher_with_solution(dishwasher: item, cleaning_solution: item):
    body:
        achieve_once inside(cleaning_solution, dishwasher)

behavior load_dishwasher_with_dishes(dishwasher: item, dish: item):
    body:
        achieve_once inside(dish, dishwasher)

behavior start_dishwasher(dishwasher: item):
    body:
        achieve_once closed(dishwasher)
        achieve_once is_on(dishwasher)

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        
        bind cleaning_solution: item where:
            is_cleaning_solution(cleaning_solution)
        
        foreach dish: item:
            if (is_bowl(dish) or is_plate(dish)):
                load_dishwasher_with_dishes(dishwasher, dish)
        
        load_dishwasher_with_solution(dishwasher, cleaning_solution)
        start_dishwasher(dishwasher)
############################################################
When the sub-task is: Wipe all the windows in the house by towel.
A successful representation:
 
behavior wipe_window_by_towel(window:item, towel:item):
    body:
        achieve_once inhand(towel)
        wipe(window)
        achieve clean(window)

behavior __goal__():
    body:
        foreach window: item:
            if is_window(window) and dirty(window):
                bind towel: item where:
                    is_towel(towel)
                wipe_window_by_towel(window, towel)

############################################################
When the sub-task is: Use pot to boil some water.
A successful representation:
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)

        bind faucet: item where:
            is_faucet(faucet)

        bind stove: item where:
            is_stove(stove)

        fill_pot_with_water(pot, faucet)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

############################################################
When the sub-task is: Get a bowl of ice cream and add some jam on the top.
A successful representation:
## Output:

behavior get_ice_cream_and_add_jam(bowl:item, ice_cream:item, jam:item):
    body:
        achieve_once inside(ice_cream, bowl)
        achieve_once on(jam, ice_cream)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        bind ice_cream: item where:
            is_food_ice_cream(ice_cream)
        bind jam: item where:
            is_food_jam(jam)
        get_ice_cream_and_add_jam(bowl, ice_cream, jam)
############################################################
When the sub-task is: Throw all the items in the fridge to the trashcan.
A successful representation:
## Output:

behavior throw_items_in_fridge_to_trash(fridge:item, trashcan:item):
    body:
        foreach item: item:
            if inside(item, fridge):
                achieve_once inside(item, trashcan)

behavior __goal__():
    body:
        bind fridge: item where:
            is_fridge(fridge) and id[fridge] == 126
        bind trashcan: item where:
            is_trashcan(trashcan)
        throw_items_in_fridge_to_trash(fridge, trashcan)
############################################################
When the sub-task is: Slice some chicken and give it to my cat.
A successful representation:
## Output:

behavior prepare_chicken_for_slicing(chicken:item, knife:item, cutting_board:item):
    body:
        achieve_once on(chicken, cutting_board)
        achieve_once inhand(knife)

behavior slice_chicken(chicken:item):
    body:
        achieve cut(chicken)

behavior give_chicken_to_cat(chicken:item, cat:item):
    body:
        achieve_once close_char(char, cat)
        achieve_once on(chicken, cat)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind cat: item where:
            is_cat(cat)

        prepare_chicken_for_slicing(chicken, knife, cutting_board)
        slice_chicken(chicken)
        give_chicken_to_cat(chicken, cat)
############################################################
When the sub-task is: Wipe all the windows in the house by towel.
A successful representation:
## Output:

behavior wipe_window_by_towel(window:item, towel:item):
    body:
        achieve_once inhand(towel)
        wipe(window)
        achieve clean(window)

behavior __goal__():
    body:
        foreach window: item:
            if is_window(window) and dirty(window):
                bind towel: item where:
                    is_towel(towel)
                wipe_window_by_towel(window, towel)
############################################################
When the sub-task is: Wipe the toilet with toilet paper. Then throw it into the toilet.
A successful representation:
## Output:

behavior wipe_toilet_with_toilet_paper(toilet:item, toilet_paper:item):
    body:
        achieve_once inhand(toilet_paper)
        wipe(toilet)
        achieve clean(toilet)

behavior throw_toilet_paper_into_toilet(toilet_paper:item, toilet:item):
    body:
        achieve_once inside(toilet_paper, toilet)

behavior __goal__():
    body:
        bind toilet: item where:
            is_toilet(toilet)
        bind toilet_paper: item where:
            is_toilet_paper(toilet_paper)
        wipe_toilet_with_toilet_paper(toilet, toilet_paper)
        throw_toilet_paper_into_toilet(toilet_paper, toilet)
############################################################
When the sub-task is: Make oil fried banana.
A successful representation:
## Output:
behavior prepare_banana_for_frying(banana:item, knife:item, cutting_board:item):
    body:
        achieve_once on(banana, cutting_board)
        achieve_once inhand(knife)

behavior cut_banana(banana:item):
    body:
        achieve cut(banana)

behavior fry_banana(banana:item, fryingpan:item, oil:item, stove:item):
    body:
        achieve_once inside(oil, fryingpan)
        achieve_once inside(banana, fryingpan)
        achieve on(fryingpan, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind banana: item where:
            is_food_banana(banana)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind fryingpan: item where:
            is_fryingpan(fryingpan)

        bind oil: item where:
            is_oil(oil)

        bind stove: item where:
            is_stove(stove)

        prepare_banana_for_frying(banana, knife, cutting_board)
        cut_banana(banana)
        fry_banana(banana, fryingpan, oil, stove)
############################################################
When the sub-task is: Find the book and put it on the table in home office. Then turn on the light in the home office.
A successful representation:
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table)

behavior turn_on_light(light:item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        
        bind book: item where:
            is_book(book) and id[book] == 2091
        
        bind table: item where:
            is_table(table) and inside(table, home_office)
        
        bind light: item where:
            is_light(light) and inside(light, home_office)

        place_book_on_table(book, table)
        turn_on_light(light)

############################################################
When the sub-task is: Slice and toast bread.
A successful representation:
 
behavior slice_bread(bread: item, knife: item, cutting_board: item):
    body:
        achieve_once on(bread, cutting_board)
        achieve_once inhand(knife)
        achieve cut(bread)

behavior toast_bread(bread: item, toaster: item):
    body:
        achieve_once inside(bread, toaster)
        achieve_once closed(toaster)
        achieve_once is_on(toaster)

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind toaster: item where:
            is_toaster(toaster)

        slice_bread(bread, knife, cutting_board)
        toast_bread(bread, toaster)

############################################################
When the sub-task is: Slice and toast bread.
A successful representation:
 
behavior slice_bread(bread: item, knife: item, cutting_board: item):
    body:
        achieve_once on(bread, cutting_board)
        achieve_once inhand(knife)
        achieve cut(bread)

behavior toast_bread(bread: item, toaster: item):
    body:
        achieve_once inside(bread, toaster)
        achieve_once closed(toaster)
        achieve_once is_on(toaster)

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind toaster: item where:
            is_toaster(toaster)

        slice_bread(bread, knife, cutting_board)
        toast_bread(bread, toaster)

############################################################
When the sub-task is: Turn on the TV by touching the remote control.
A successful representation:
## Output:

behavior turn_on_tv_with_remote_control(remote_control: item):
    body:
        achieve_once close_char(char, remote_control)
        touch(remote_control)

behavior __goal__():
    body:
        bind remote_control: item where:
            is_remote_control(remote_control)
        turn_on_tv_with_remote_control(remote_control)
############################################################
When the sub-task is: Insert a CD and play music using the CD player.
A successful representation:
## Output:

behavior insert_cd(cd:item, cd_player:item):
    body:
        achieve_once inside(cd, cd_player)

behavior play_music(cd_player:item):
    body:
        achieve is_on(cd_player)

behavior __goal__():
    body:
        bind cd: item where:
            is_cd(cd)
        bind cd_player: item where:
            is_cd_player(cd_player)
        insert_cd(cd, cd_player)
        play_music(cd_player)
############################################################
When the sub-task is: Find a book and put it on the coffe table in home office. Then open the window in the home office.
A successful representation:
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table)

behavior open_window(window:item):
    body:
        achieve open(window)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        
        bind book: item where:
            is_book(book)
        
        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        
        bind window: item where:
            is_window(window) and inside(window, home_office)
        
        place_book_on_table(book, coffee_table)
        open_window(window)

############################################################
When the sub-task is: Prepare a bowl of water and put the bowl on the table in home office. Then find my cat put it on the table.
A successful representation:
 
behavior prepare_bowl_of_water(bowl:item, faucet:item):
    body:
        achieve_once has_water(bowl)

behavior put_bowl_on_table(bowl:item, table:item):
    body:
        achieve_once on(bowl, table)

behavior find_and_put_cat_on_table(cat:item, table:item):
    body:
        achieve_once on(cat, table)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)

        bind faucet: item where:
            is_faucet(faucet)

        bind home_office: item where:
            is_home_office(home_office)
        
        bind table: item where:
            is_table(table) and inside(table, home_office)

        bind cat: item where:
            is_cat(cat)

        prepare_bowl_of_water(bowl, faucet)
        put_bowl_on_table(bowl, table)
        find_and_put_cat_on_table(cat, table)

############################################################
When the sub-task is: Make some French fries.
A successful representation:
## Output:

behavior prepare_potato_for_frying(potato:item, knife:item, cutting_board:item):
    body:
        achieve_once on(potato, cutting_board)
        achieve_once inhand(knife)

behavior cut_potato(potato:item):
    body:
        achieve cut(potato)

behavior fry_potato(potato:item, fryingpan:item, oil:item, stove:item):
    body:
        achieve_once inside(oil, fryingpan)
        achieve_once inside(potato, fryingpan)
        achieve on(fryingpan, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind potato: item where:
            is_food_potato(potato)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind fryingpan: item where:
            is_fryingpan(fryingpan)

        bind oil: item where:
            is_oil(oil)

        bind stove: item where:
            is_stove(stove)

        prepare_potato_for_frying(potato, knife, cutting_board)
        cut_potato(potato)
        fry_potato(potato, fryingpan, oil, stove)
############################################################
When the sub-task is: Make oil fried banana.
A successful representation:
## Output:

behavior prepare_banana_for_frying(banana:item, knife:item, cutting_board:item):
    body:
        achieve_once on(banana, cutting_board)
        achieve_once inhand(knife)

behavior cut_banana(banana:item):
    body:
        achieve cut(banana)

behavior fry_banana(banana:item, fryingpan:item, oil:item, stove:item):
    body:
        achieve_once inside(oil, fryingpan)
        achieve_once inside(banana, fryingpan)
        achieve on(fryingpan, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind banana: item where:
            is_food_banana(banana)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind fryingpan: item where:
            is_fryingpan(fryingpan)

        bind oil: item where:
            is_oil(oil)

        bind stove: item where:
            is_stove(stove)

        prepare_banana_for_frying(banana, knife, cutting_board)
        cut_banana(banana)
        fry_banana(banana, fryingpan, oil, stove)
############################################################
When the sub-task is: Turn on the TV by touching the remote control.
A successful representation:
## Output:

behavior turn_on_tv_with_remote_control(remote_control: item):
    body:
        achieve_once close_char(char, remote_control)
        touch(remote_control)

behavior __goal__():
    body:
        bind remote_control: item where:
            is_remote_control(remote_control)
        turn_on_tv_with_remote_control(remote_control)
############################################################
When the sub-task is: Clean the bathroom sink directly.
A successful representation:
## Output:

behavior wipe_sink_with_towel(sink:item, towel:item):
    body:
        achieve_once inhand(towel)
        # Ensure the towel is held to wipe the sink
        wipe(sink)
        # Wipe the sink using the towel
        achieve clean(sink)
        # Ensure the sink becomes clean after wiping

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and id[sink] == 19
        # Select the sink with ID 19

        bind towel: item where:
            is_towel(towel)
        # Select a towel

        wipe_sink_with_towel(sink, towel)
############################################################
When the sub-task is: Turn on the lights in the bathroom.
A successful representation:
## Output:

behavior turn_on_lights(light: item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)

        turn_on_lights(bathroom_light)
############################################################
When the sub-task is: Get a cup of milk and heat it by microwave.
A successful representation:
 
behavior get_milk_and_heat_in_microwave(milk:item, cup:item, microwave:item):
    body:
        achieve_once inside(milk, cup)
        achieve_once inside(cup, microwave)
        achieve_once closed(microwave)
        achieve_once is_on(microwave)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        
        bind cup: item where:
            is_cup(cup)
        
        bind microwave: item where:
            is_microwave(microwave)

        get_milk_and_heat_in_microwave(milk, cup, microwave)

############################################################
When the sub-task is: Find the book and put it on the coffee table in home office.
A successful representation:
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table) # Place the book on the coffee table

behavior verify_table_location(table:item):
    body:
        observe(table, "Check if the table is inside the home office")

behavior move_book_to_correct_table(book:item, table:item):
    body:
        achieve inside(book, table)
        achieve_once on(book, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        
        bind book: item where:
            is_book(book)
        
        bind coffee_table: item where:
            is_table(coffee_table)
        
        verify_table_location(coffee_table)
        
        if not inside(coffee_table, home_office):
            move_book_to_correct_table(book, coffee_table)
        else:
            place_book_on_table(book, coffee_table)

