From agent.py
Reset goals: The sub-goals are: 
['1. Find a bowl and scoop ice cream into it.', '2. Add jam on top of the ice cream.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2141_around_cupboard_117(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

behavior find_food_ice_cream_2097_around_fridge_126(food_ice_cream:item):
    goal: not unknown(food_ice_cream)
    body:
        assert is_food_ice_cream(food_ice_cream)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_ice_cream,fridge_instance)
        else:
            exp(food_ice_cream,fridge_instance)
    eff:
        unknown[food_ice_cream]=False
        close[food_ice_cream,fridge_instance]=True
        close[fridge_instance,food_ice_cream]=True
    

#exp_behavior_end

#goal_representation
 
# Function to check if there is a bowl available
def has_bowl():
    symbol has_bowl_available = exists b: item : (is_bowl(b))
    return has_bowl_available

# Function to check if there is ice cream available
def has_ice_cream():
    symbol has_ice_cream_available = exists i: item : (is_food_ice_cream(i))
    return has_ice_cream_available

behavior take_bowl(bowl: item):
    body:
        achieve_once inhand(bowl)

behavior scoop_ice_cream(bowl: item, ice_cream: item):
    body:
        achieve_once inside(ice_cream, bowl)

behavior __goal__():
    body:
        if has_bowl():
            bind bowl: item where:
                is_bowl(bowl)
                
            if has_ice_cream():
                bind ice_cream: item where:
                    is_food_ice_cream(ice_cream)
                
                take_bowl(bowl)
                scoop_ice_cream(bowl, ice_cream)
            else:
                foreach o: item:
                    if is_food_ice_cream(o) and not visited(o):
                        observe(o, "Look for ice cream")
        else:
            foreach o: item:
                if is_bowl(o) and not visited(o):
                    observe(o, "Search for a bowl")

#goal_representation_end

##############################
From agent.py->reset_goal
 
# Function to check if there is a bowl available
def has_bowl():
    symbol has_bowl_available = exists b: item : (is_bowl(b))
    return has_bowl_available

# Function to check if there is ice cream available
def has_ice_cream():
    symbol has_ice_cream_available = exists i: item : (is_food_ice_cream(i))
    return has_ice_cream_available

behavior take_bowl(bowl: item):
    body:
        achieve_once inhand(bowl)

behavior scoop_ice_cream(bowl: item, ice_cream: item):
    body:
        achieve_once inside(ice_cream, bowl)

behavior __goal__():
    body:
        if has_bowl():
            bind bowl: item where:
                is_bowl(bowl)
                
            if has_ice_cream():
                bind ice_cream: item where:
                    is_food_ice_cream(ice_cream)
                
                take_bowl(bowl)
                scoop_ice_cream(bowl, ice_cream)
            else:
                foreach o: item:
                    if is_food_ice_cream(o) and not visited(o):
                        observe(o, "Look for ice cream")
        else:
            foreach o: item:
                if is_bowl(o) and not visited(o):
                    observe(o, "Search for a bowl")

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(bowl_2140, cupboard_117)walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_ice_cream_2097, fridge_126)walk_executor(food_ice_cream_2097)grab_executor(food_ice_cream_2097)walk_executor(bowl_2140)putin_executor(food_ice_cream_2097, bowl_2140)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, pot_78, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(bowl_2140, cupboard_117)
Fail to find bowl_2140 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(bowl_2140, cupboard_118)walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_ice_cream_2097, fridge_126)walk_executor(food_ice_cream_2097)grab_executor(food_ice_cream_2097)walk_executor(bowl_2140)putin_executor(food_ice_cream_2097, bowl_2140)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(bowl_2140, cupboard_118)
Fail to find bowl_2140 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(bowl_2140, fridge_126)walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(fridge_126)exp(food_ice_cream_2097, fridge_126)walk_executor(food_ice_cream_2097)grab_executor(food_ice_cream_2097)walk_executor(bowl_2140)putin_executor(food_ice_cream_2097, bowl_2140)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(bowl_2140, fridge_126)
Fail to find bowl_2140 around fridge_126. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(bowl_2140, kitchen_counter_119)walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(food_ice_cream_2097)grab_executor(food_ice_cream_2097)walk_executor(bowl_2140)putin_executor(food_ice_cream_2097, bowl_2140)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(bowl_2140, kitchen_counter_119)
Find bowl_2140. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(food_ice_cream_2097)grab_executor(food_ice_cream_2097)walk_executor(bowl_2140)putin_executor(food_ice_cream_2097, bowl_2140)
##############################
From agent.py
walk_executor(bowl_2140)
Robot find: Robot is close to the kitchen_counter_119. Robot is close to the bowl_2140. 
##############################
From agent.py
grab_executor(bowl_2140)
Robot find: Robot is close to the kitchen_counter_119. Robot is close to the bowl_2140. Grabbing bowl_2140 by right hand. 
##############################
From agent.py
walk_executor(food_ice_cream_2097)
Robot find: Robot is close to the bowl_2140. Robot is close to the food_ice_cream_2097. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_ice_cream_2097)
Robot find: Robot is close to the bowl_2140. Robot is close to the food_ice_cream_2097. Robot is close to the fridge_126. Grabbing food_ice_cream_2097 by left hand. 
##############################
From agent.py
walk_executor(bowl_2140)
Robot find: Robot is close to the bowl_2140. Robot is close to the food_ice_cream_2097. 
##############################
From agent.py
putin_executor(food_ice_cream_2097, bowl_2140)
Robot find: Robot is close to the bowl_2140. Robot is close to the food_ice_cream_2097. food_ice_cream_2097 is inside bowl_2140. bowl_2140 is close food_ice_cream_2097. food_ice_cream_2097 is close bowl_2140. food_ice_cream_2097 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_bread_2084_around_kitchen_counter_123(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_bread,kitchen_counter_instance)
        else:
            exp(food_bread,kitchen_counter_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_bread]=True
    

#exp_behavior_end

#goal_representation
behavior put_jam_on_ice_cream(jam:item, ice_cream:item):
    body:
        achieve_once on(jam, ice_cream)

behavior __goal__():
    body:
        bind jam: item where:
            is_food_jam(jam)
        # Select jam
        
        bind ice_cream: item where:
            is_food_ice_cream(ice_cream) and inside(ice_cream, bowl_2140)
        # Select ice cream inside the bowl
        
        put_jam_on_ice_cream(jam, ice_cream)
        # Add jam on top of the ice cream
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: bowl_2140; available variables: [Variable<ice_cream: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_bread_2084_around_kitchen_counter_122(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_bread,kitchen_counter_instance)
        else:
            exp(food_bread,kitchen_counter_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_bread]=True
    

#goal_representation
 
behavior put_jam_on_ice_cream(jam:item, ice_cream:item):
    body:
        achieve_once on(jam, ice_cream)

behavior __goal__():
    body:
        bind jam: item where:
            is_food_jam(jam)
        # Select jam
        
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2140
        # Select bowl with ID 2140
        
        bind ice_cream: item where:
            is_food_ice_cream(ice_cream) and inside(ice_cream, bowl)
        # Select ice cream inside the bowl
        
        put_jam_on_ice_cream(jam, ice_cream)
        # Add jam on top of the ice cream

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior put_jam_on_ice_cream(jam:item, ice_cream:item):
    body:
        achieve_once on(jam, ice_cream)

behavior __goal__():
    body:
        bind jam: item where:
            is_food_jam(jam)
        # Select jam
        
        bind bowl: item where:
            is_bowl(bowl) and id[bowl] == 2140
        # Select bowl with ID 2140
        
        bind ice_cream: item where:
            is_food_ice_cream(ice_cream) and inside(ice_cream, bowl)
        # Select ice cream inside the bowl
        
        put_jam_on_ice_cream(jam, ice_cream)
        # Add jam on top of the ice cream

##############################
From agent.py-> find a plan in act()
walk_executor(food_jam_2098)grab_executor(food_jam_2098)walk_executor(food_ice_cream_2097)put_executor(food_jam_2098, food_ice_cream_2097)
##############################
From agent.py
walk_executor(food_jam_2098)
Robot find: Robot is close to the bowl_2140. Robot is close to the food_jam_2098. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_jam_2098)
Robot find: Robot is close to the bowl_2140. Robot is close to the food_jam_2098. Robot is close to the fridge_126. Grabbing food_jam_2098 by left hand. 
##############################
From agent.py
walk_executor(food_ice_cream_2097)
Robot find: Robot is close to the bowl_2140. Robot is close to the food_jam_2098. Robot is close to the food_ice_cream_2097. 
##############################
From agent.py
put_executor(food_jam_2098, food_ice_cream_2097)
Robot find: Robot is close to the bowl_2140. Robot is close to the food_jam_2098. Robot is close to the food_ice_cream_2097. food_ice_cream_2097 is close food_jam_2098. food_jam_2098 is close food_ice_cream_2097. food_jam_2098 is on food_ice_cream_2097. food_jam_2098 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Get a bowl of ice cream and add some jam on the top.
Action History:
['walk_executor(cupboard_117)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'walk_executor(kitchen_counter_119)', 'walk_executor(bowl_2140)', 'grab_executor(bowl_2140)', 'walk_executor(food_ice_cream_2097)', 'grab_executor(food_ice_cream_2097)', 'walk_executor(bowl_2140)', 'putin_executor(food_ice_cream_2097, bowl_2140)', 'walk_executor(food_jam_2098)', 'grab_executor(food_jam_2098)', 'walk_executor(food_ice_cream_2097)', 'put_executor(food_jam_2098, food_ice_cream_2097)']
Time info:
Time consume: 80 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 126
goal generate times: 2
goal correct times: 1
action_num: 17

Task complete rate:
1
Scene_id: 1
##############################
