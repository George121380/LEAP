From agent.py
Reset goals: The sub-goals are: 
['1. Iron the shirt.', '2. Iron the skirt.', '3. Place the shirt and the skirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_ironing_board_2144(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2144
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_shirt_2158_around_basket_for_clothes_2078(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_shirt,basket_for_clothes_instance)
        else:
            exp(clothes_shirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
 
def needs_ironing(shirt:item):
    # Function to check if the shirt needs ironing
    symbol needs_ironing=exists c: item : (is_clothes_shirt(c) and clean(c))
    return needs_ironing

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        # Select an iron
        if exists shirt: item : (is_clothes_shirt(shirt) and needs_ironing(shirt)):
            bind shirt: item where:
                is_clothes_shirt(shirt) and needs_ironing(shirt)
            achieve close_char(char, shirt)
            # Bring the iron close to the shirt
            observe(iron,"Check if the iron is plugged in and turned on")
            # Ensure the iron is ready for ironing

        else:
            # If no shirt needing ironing is known, explore potential shirts
            foreach shirt: item:
                if is_clothes_shirt(shirt) and not visited(shirt):
                    observe(shirt,"Check if it needs ironing")
                    # Check shirts to see if ironing is needed

#goal_representation_end

##############################
Error is:
Failed to rename the derived function application.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2161_around_ironing_board_2144(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2144
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_shirt_2158_around_basket_for_clothes_2078(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2078
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_shirt,basket_for_clothes_instance)
        else:
            exp(clothes_shirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt: item, iron: item):
    body:
        achieve_once plugged(iron)
        achieve_once is_on(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind iron: item where:
            is_iron(iron)
        
        iron_shirt(shirt, iron)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior iron_shirt(shirt: item, iron: item):
    body:
        achieve_once plugged(iron)
        achieve_once is_on(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind iron: item where:
            is_iron(iron)
        
        iron_shirt(shirt, iron)

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2144)exp(iron_2161, ironing_board_2144)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot find: Robot is close to the ironing_board_2144. 
##############################
From agent.py
exp(iron_2161, ironing_board_2144)
Fail to find iron_2161 around ironing_board_2144. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(iron_2161, cupboard_117)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, pot_78, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(iron_2161, cupboard_117)
Fail to find iron_2161 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2078)exp(iron_2161, basket_for_clothes_2078)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(basket_for_clothes_2078)
Robot find: clothes_pants_2157, clothes_shirt_2158, clothes_socks_2159, clothes_skirt_2160, Robot is close to the clothes_pants_2157. Robot is close to the clothes_shirt_2158. Robot is close to the clothes_socks_2159. Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. 
##############################
From agent.py
exp(iron_2161, basket_for_clothes_2078)
Fail to find iron_2161 around basket_for_clothes_2078. 
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2079)open_executor(washing_machine_2079)exp(iron_2161, washing_machine_2079)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. 
##############################
From agent.py
open_executor(washing_machine_2079)
Robot find: Robot is close to the washing_machine_2079. washing_machine_2079 is opened. 
##############################
From agent.py
exp(iron_2161, washing_machine_2079)
Fail to find iron_2161 around washing_machine_2079. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(iron_2161, cupboard_118)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(iron_2161, cupboard_118)
Fail to find iron_2161 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(curtain_206)exp(iron_2161, curtain_206)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(curtain_206)
Robot find: mat_203, drawing_201, Robot is close to the curtain_206. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find iron_2161 ?
Answer: The target item, iron_2161, is located inside the dining_room_41. You can find iron_2161 on top of bowl_2142. This should help you identify and retrieve the item efficiently.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item, iron_2161, is located inside the dining_room_41. You can find iron_2161 on top of bowl_2142. This should help you identify and retrieve the item efficiently.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for iron_2161 around ironing_board_2144.
Action 3: Walk to cupboard_117.
Action 4: look for iron_2161 around cupboard_117.
Action 5: Walk to basket_for_clothes_2078.
Action 6: look for iron_2161 around basket_for_clothes_2078.
Action 7: Walk to washing_machine_2079.
Action 8: Open washing_machine_2079.
Action 9: look for iron_2161 around washing_machine_2079.
Action 10: Walk to cupboard_118.
Action 11: Open cupboard_118.
Action 12: look for iron_2161 around cupboard_118.
Action 13: Walk to curtain_206.

##############################
From agent.py
exp(iron_2161, curtain_206)
Fail to find iron_2161 around curtain_206. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_199)exp(iron_2161, table_199)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(table_199)
Robot find: wooden_spoon_2000, tea_bag_2023, drawing_202, Robot is close to the table_199. 
##############################
From agent.py
exp(iron_2161, table_199)
Fail to find iron_2161 around table_199. 
##############################
From agent.py-> find a plan in act()
walk_executor(bench_113)exp(iron_2161, bench_113)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(bench_113)
Robot find: mat_102, pillow_103, pillow_104, pillow_105, pillow_106, drawing_110, Robot is close to the bench_113. 
##############################
From agent.py
exp(iron_2161, bench_113)
Fail to find iron_2161 around bench_113. 
##############################
From agent.py-> find a plan in act()
walk_executor(cutting_board_2123)exp(iron_2161, cutting_board_2123)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(iron_2161, cutting_board_2123)
Fail to find iron_2161 around cutting_board_2123. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2142)exp(iron_2161, bowl_2142)walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(bowl_2142)
Robot find: iron_2161, Robot is close to the kitchen_counter_119. Robot is close to the bowl_2142. 
##############################
From agent.py
exp(iron_2161, bowl_2142)
Find iron_2161. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2161)plugin_executor(iron_2161)switchon_executor(iron_2161)
##############################
From agent.py
walk_executor(iron_2161)
Robot find: Robot is close to the bowl_2142. Robot is close to the iron_2161. 
##############################
From agent.py
plugin_executor(iron_2161)
Robot find: Robot is close to the bowl_2142. Robot is close to the iron_2161. iron_2161 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2161)
Robot find: Robot is close to the bowl_2142. Robot is close to the iron_2161. iron_2161 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to iron the shirt. After finding, plugging in, and turning on the iron, proceed to grab the shirt and perform the ironing action.
##############################
From agent.py
Human Instruction: You need to iron the shirt. After finding, plugging in, and turning on the iron, proceed to grab the shirt and perform the ironing action.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for iron_2161 around ironing_board_2144.
Action 3: Walk to cupboard_117.
Action 4: look for iron_2161 around cupboard_117.
Action 5: Walk to basket_for_clothes_2078.
Action 6: look for iron_2161 around basket_for_clothes_2078.
Action 7: Walk to washing_machine_2079.
Action 8: Open washing_machine_2079.
Action 9: look for iron_2161 around washing_machine_2079.
Action 10: Walk to cupboard_118.
Action 11: Open cupboard_118.
Action 12: look for iron_2161 around cupboard_118.
Action 13: Walk to curtain_206.
Action 14: look for iron_2161 around curtain_206.
Action 15: Walk to table_199.
Action 16: look for iron_2161 around table_199.
Action 17: Walk to bench_113.
Action 18: look for iron_2161 around bench_113.
Action 19: Walk to cutting_board_2123.
Action 20: look for iron_2161 around cutting_board_2123.
Action 21: Walk to bowl_2142.
Action 22: look for iron_2161 around bowl_2142.
Action 23: Walk to iron_2161.
Action 24: Plug in iron_2161.
Action 25: Switch on iron_2161.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_hat_2117_around_bookshelf_196(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==196
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(clothes_hat,bookshelf_instance)
        else:
            exp(clothes_hat,bookshelf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,bookshelf_instance]=True
        close[bookshelf_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
behavior iron_item(item: item, iron: item):
    body:
        achieve_once inhand(item)  # Temporarily hold the clothing item
        achieve_once is_on(iron)  # Ensure the iron is turned on for the action

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        achieve plugged(iron)  # Ensure the iron is plugged in
        achieve is_on(iron)    # Turn on the iron
        
        iron_item(shirt, iron)  # Iron the shirt
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior iron_item(item: item, iron: item):
    body:
        achieve_once inhand(item)  # Temporarily hold the clothing item
        achieve_once is_on(iron)  # Ensure the iron is turned on for the action

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        achieve plugged(iron)  # Ensure the iron is plugged in
        achieve is_on(iron)    # Turn on the iron
        
        iron_item(shirt, iron)  # Iron the shirt
##############################
From agent.py-> find a plan in act()
walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)
##############################
From agent.py
walk_executor(clothes_shirt_2158)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the basket_for_clothes_2078. 
##############################
From agent.py
grab_executor(clothes_shirt_2158)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the basket_for_clothes_2078. Grabbing clothes_shirt_2158 by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to perform the ironing action on the shirt now that you have grabbed it and the iron is on and ready.
##############################
From agent.py
Human Instruction: You need to perform the ironing action on the shirt now that you have grabbed it and the iron is on and ready.

The actions you have taken:
Action 1: Walk to ironing_board_2144.
Action 2: look for iron_2161 around ironing_board_2144.
Action 3: Walk to cupboard_117.
Action 4: look for iron_2161 around cupboard_117.
Action 5: Walk to basket_for_clothes_2078.
Action 6: look for iron_2161 around basket_for_clothes_2078.
Action 7: Walk to washing_machine_2079.
Action 8: Open washing_machine_2079.
Action 9: look for iron_2161 around washing_machine_2079.
Action 10: Walk to cupboard_118.
Action 11: Open cupboard_118.
Action 12: look for iron_2161 around cupboard_118.
Action 13: Walk to curtain_206.
Action 14: look for iron_2161 around curtain_206.
Action 15: Walk to table_199.
Action 16: look for iron_2161 around table_199.
Action 17: Walk to bench_113.
Action 18: look for iron_2161 around bench_113.
Action 19: Walk to cutting_board_2123.
Action 20: look for iron_2161 around cutting_board_2123.
Action 21: Walk to bowl_2142.
Action 22: look for iron_2161 around bowl_2142.
Action 23: Walk to iron_2161.
Action 24: Plug in iron_2161.
Action 25: Switch on iron_2161.
Action 26: Walk to clothes_shirt_2158.
Action 27: Grab clothes_shirt_2158.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_mat_102_around_mat_102(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind mat_instance:item where:
            is_mat(mat_instance) and id[mat_instance]==102
        achieve close_char(char,mat_instance)
        if can_open(mat_instance):
            achieve_once open(mat_instance)
            exp(mat,mat_instance)
        else:
            exp(mat,mat_instance)
    eff:
        unknown[mat]=False
        close[mat,mat_instance]=True
        close[mat_instance,mat]=True
    

behavior find_rag_2052_around_fridge_126(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(rag,fridge_instance)
        else:
            exp(rag,fridge_instance)
    eff:
        unknown[rag]=False
        close[rag,fridge_instance]=True
        close[fridge_instance,rag]=True
    

behavior find_towel_2128_around_shower_16(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==16
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(towel,shower_instance)
        else:
            exp(towel,shower_instance)
    eff:
        unknown[towel]=False
        close[towel,shower_instance]=True
        close[shower_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt: item, iron: item, ironing_board: item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve_on iron_shirt

behavior ensure_iron_is_ready(iron: item):
    body:
        achieve plugged(iron)
        achieve is_on(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind iron: item where:
            is_iron(iron)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)

        ensure_iron_is_ready(iron)
        iron_shirt(shirt, iron, ironing_board)


#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'iron_shirt') at line 5314, column 20.
Expected one of: 
	* OR
	* __ANON_3
	* __ANON_0
	* AND
	* PLUS
	* LESS_EQ
	* PERCENT
	* FLOORDIV
	* GREATER_EQ
	* __ANON_5
	* __ANON_1
	* _NEWLINE
	* SLASH
	* MINUS
	* IF
	* __ANON_2
	* RSHIFT
	* __ANON_7
	* AT
	* LESSTHAN
	* AMPERSAND
	* COMMA
	* __ANON_4
	* LSHIFT
	* SEMICOLON
	* VBAR
	* NOT_EQ
	* __ANON_8
	* STAR
	* EQUAL
	* __ANON_6
	* CIRCUMFLEX
	* DOUBLE_EQUAL
	* MORETHAN

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_mat_32_around_couch_269(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==269
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(mat,couch_instance)
        else:
            exp(mat,couch_instance)
    eff:
        unknown[mat]=False
        close[mat,couch_instance]=True
        close[couch_instance,mat]=True
    

behavior find_rag_2052_around_bench_115(rag:item):
    goal: not unknown(rag)
    body:
        assert is_rag(rag)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==115
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(rag,bench_instance)
        else:
            exp(rag,bench_instance)
    eff:
        unknown[rag]=False
        close[rag,bench_instance]=True
        close[bench_instance,rag]=True
    

#goal_representation
 
behavior iron_shirt(shirt: item, iron: item, ironing_board: item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve is_on(iron)

behavior ensure_iron_is_ready(iron: item):
    body:
        achieve plugged(iron)
        achieve is_on(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind iron: item where:
            is_iron(iron)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)

        ensure_iron_is_ready(iron)
        iron_shirt(shirt, iron, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_shirt(shirt: item, iron: item, ironing_board: item):
    body:
        achieve_once on(shirt, ironing_board)
        achieve is_on(iron)

behavior ensure_iron_is_ready(iron: item):
    body:
        achieve plugged(iron)
        achieve is_on(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind iron: item where:
            is_iron(iron)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)

        ensure_iron_is_ready(iron)
        iron_shirt(shirt, iron, ironing_board)

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2144)put_executor(clothes_shirt_2158, ironing_board_2144)
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the ironing_board_2144. 
##############################
From agent.py
put_executor(clothes_shirt_2158, ironing_board_2144)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the ironing_board_2144. ironing_board_2144 is close clothes_shirt_2158. clothes_shirt_2158 is close ironing_board_2144. clothes_shirt_2158 is on ironing_board_2144. clothes_shirt_2158 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to perform the ironing action on the shirt now that you have grabbed it and the iron is on and ready.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_hat_2117_around_light_283(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind light_instance:item where:
            is_light(light_instance) and id[light_instance]==283
        achieve close_char(char,light_instance)
        if can_open(light_instance):
            achieve_once open(light_instance)
            exp(clothes_hat,light_instance)
        else:
            exp(clothes_hat,light_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,light_instance]=True
        close[light_instance,clothes_hat]=True
    

behavior find_clothes_pants_2036_around_couch_198(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==198
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(clothes_pants,couch_instance)
        else:
            exp(clothes_pants,couch_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,couch_instance]=True
        close[couch_instance,clothes_pants]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve plugged(iron)
        achieve is_on(iron)
        achieve inhand(skirt)
        # Iron the skirt while holding it
        achieve_once on(skirt, ironing_board) 
        # Place the skirt on the ironing board temporarily for ironing
        # After ironing, place it on the bed
        achieve_once inside(skirt, bed) 

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt item
        bind iron: item where:
            is_iron(iron)
        # Select the iron item
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        bind bed: item where:
            is_bed(bed)
        # Select the bed
        
        iron_skirt(skirt, iron, ironing_board)
        # Execute the behavior to iron the skirt


#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: bed; available variables: [Variable<skirt: item>, Variable<iron: item>, Variable<ironing_board: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item, bed:item):
    body:
        achieve plugged(iron)
        achieve is_on(iron)
        achieve_once inhand(skirt)
        # Iron the skirt while holding it
        achieve_once on(skirt, ironing_board) 
        # Place the skirt on the ironing board temporarily for ironing
        # After ironing, place it on the bed
        achieve_once inside(skirt, bed) 

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt item
        bind iron: item where:
            is_iron(iron)
        # Select the iron item
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        bind bed: item where:
            is_bed(bed)
        # Select the bed

        iron_skirt(skirt, iron, ironing_board, bed)
        # Execute the behavior to iron the skirt

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_hat_2117_around_bookshelf_275(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==275
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(clothes_hat,bookshelf_instance)
        else:
            exp(clothes_hat,bookshelf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,bookshelf_instance]=True
        close[bookshelf_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once inhand(skirt)
        achieve_once is_on(iron)
        achieve_once on(skirt, ironing_board)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select an item that is a skirt

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select an iron that is plugged in and turned on

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        iron_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once inhand(skirt)
        achieve_once is_on(iron)
        achieve_once on(skirt, ironing_board)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select an item that is a skirt

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select an iron that is plugged in and turned on

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        iron_skirt(skirt, iron, ironing_board)

##############################
From agent.py-> find a plan in act()
walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)walk_executor(ironing_board_2144)put_executor(clothes_skirt_2160, ironing_board_2144)
##############################
From agent.py
walk_executor(clothes_skirt_2160)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. 
##############################
From agent.py
grab_executor(clothes_skirt_2160)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the basket_for_clothes_2078. Grabbing clothes_skirt_2160 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2144)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the ironing_board_2144. 
##############################
From agent.py
put_executor(clothes_skirt_2160, ironing_board_2144)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the ironing_board_2144. clothes_skirt_2160 is close ironing_board_2144. ironing_board_2144 is close clothes_skirt_2160. clothes_skirt_2160 is on ironing_board_2144. clothes_skirt_2160 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_mat_32_around_mat_102(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind mat_instance:item where:
            is_mat(mat_instance) and id[mat_instance]==102
        achieve close_char(char,mat_instance)
        if can_open(mat_instance):
            achieve_once open(mat_instance)
            exp(mat,mat_instance)
        else:
            exp(mat,mat_instance)
    eff:
        unknown[mat]=False
        close[mat,mat_instance]=True
        close[mat_instance,mat]=True
    

behavior find_clothes_pants_2036_around_bed_197(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==197
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(clothes_pants,bed_instance)
        else:
            exp(clothes_pants,bed_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,bed_instance]=True
        close[bed_instance,clothes_pants]=True
    

#exp_behavior_end

#goal_representation
behavior place_on_bed(clothing:item, bed:item):
    body:
        achieve_once on(clothing, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)

        bind skirt: item where:
            is_clothes_skirt(skirt)

        bind bed: item where:
            is_bed(bed)
        
        place_on_bed(shirt, bed)
        place_on_bed(skirt, bed)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior place_on_bed(clothing:item, bed:item):
    body:
        achieve_once on(clothing, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)

        bind skirt: item where:
            is_clothes_skirt(skirt)

        bind bed: item where:
            is_bed(bed)
        
        place_on_bed(shirt, bed)
        place_on_bed(skirt, bed)
##############################
From agent.py-> find a plan in act()
walk_executor(clothes_shirt_2158)grab_executor(clothes_shirt_2158)walk_executor(bed_197)put_executor(clothes_shirt_2158, bed_197)walk_executor(clothes_skirt_2160)grab_executor(clothes_skirt_2160)walk_executor(bed_197)put_executor(clothes_skirt_2160, bed_197)
##############################
From agent.py
walk_executor(clothes_shirt_2158)
Robot find: Robot is close to the ironing_board_2144. Robot is close to the clothes_shirt_2158. 
##############################
From agent.py
grab_executor(clothes_shirt_2158)
Robot find: Robot is close to the ironing_board_2144. Robot is close to the clothes_shirt_2158. Grabbing clothes_shirt_2158 by right hand. 
##############################
From agent.py
walk_executor(bed_197)
Robot find: pillow_208, clothes_scarf_2120, clothes_underwear_2121, clothes_dress_2116, pillow_207, Robot is close to the clothes_shirt_2158. Robot is close to the bed_197. 
##############################
From agent.py
put_executor(clothes_shirt_2158, bed_197)
Robot find: Robot is close to the clothes_shirt_2158. Robot is close to the bed_197. bed_197 is close clothes_shirt_2158. clothes_shirt_2158 is close bed_197. clothes_shirt_2158 is on bed_197. clothes_shirt_2158 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2160)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the ironing_board_2144. 
##############################
From agent.py
grab_executor(clothes_skirt_2160)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the ironing_board_2144. Grabbing clothes_skirt_2160 by right hand. 
##############################
From agent.py
walk_executor(bed_197)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the bed_197. 
##############################
From agent.py
put_executor(clothes_skirt_2160, bed_197)
Robot find: Robot is close to the clothes_skirt_2160. Robot is close to the bed_197. clothes_skirt_2160 is close bed_197. bed_197 is close clothes_skirt_2160. clothes_skirt_2160 is on bed_197. clothes_skirt_2160 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Iron the shirt and the skirt, and place them on the bed.
Action History:
['walk_executor(ironing_board_2144)', 'walk_executor(cupboard_117)', 'walk_executor(basket_for_clothes_2078)', 'walk_executor(washing_machine_2079)', 'open_executor(washing_machine_2079)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'walk_executor(curtain_206)', 'walk_executor(table_199)', 'walk_executor(bench_113)', 'walk_executor(cutting_board_2123)', 'walk_executor(bowl_2142)', 'walk_executor(iron_2161)', 'plugin_executor(iron_2161)', 'switchon_executor(iron_2161)', 'walk_executor(clothes_shirt_2158)', 'grab_executor(clothes_shirt_2158)', 'walk_executor(ironing_board_2144)', 'put_executor(clothes_shirt_2158, ironing_board_2144)', 'walk_executor(clothes_skirt_2160)', 'grab_executor(clothes_skirt_2160)', 'walk_executor(ironing_board_2144)', 'put_executor(clothes_skirt_2160, ironing_board_2144)', 'walk_executor(clothes_shirt_2158)', 'grab_executor(clothes_shirt_2158)', 'walk_executor(bed_197)', 'put_executor(clothes_shirt_2158, bed_197)', 'walk_executor(clothes_skirt_2160)', 'grab_executor(clothes_skirt_2160)', 'walk_executor(bed_197)', 'put_executor(clothes_skirt_2160, bed_197)']
Time info:
Time consume: 259 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 65
goal generate times: 7
goal correct times: 1
action_num: 31

Task complete rate:
Keystate: k1 - Requires: 8 steps
Keystate: k2 - Requires: 7 steps
Keystate: k3 - Requires: 0 steps
Keystate: k4 - Requires: 0 steps
Action Completion Rate: 0.0
Scene_id: 1
##############################
