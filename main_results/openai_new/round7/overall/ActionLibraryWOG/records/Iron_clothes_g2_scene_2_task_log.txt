From agent.py
Reset goals: The sub-goals are: 
['1. Wash the shirt by hand in a sink.', '2. Iron the shirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2114_around_basket_for_clothes_2040(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_shirt,basket_for_clothes_instance)
        else:
            exp(clothes_shirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_shirt]=True
    

behavior find_detergent_2108_around_cupboard_131(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(detergent,cupboard_instance)
        else:
            exp(detergent,cupboard_instance)
    eff:
        unknown[detergent]=False
        close[detergent,cupboard_instance]=True
        close[cupboard_instance,detergent]=True
    

behavior find_soap_2037_around_bathroom_counter_306(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_shirt(shirt:item, sink:item):
    body:
        achieve clean(shirt) 
        # Ensure the shirt is clean after washing it in the sink

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind sink: item where:
            is_sink(sink)
        hand_wash_shirt(shirt, sink)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior hand_wash_shirt(shirt:item, sink:item):
    body:
        achieve clean(shirt) 
        # Ensure the shirt is clean after washing it in the sink

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind sink: item where:
            is_sink(sink)
        hand_wash_shirt(shirt, sink)

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)exp(clothes_shirt_2114, basket_for_clothes_2040)walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Robot find: clothes_pants_2113, clothes_shirt_2114, clothes_socks_2115, clothes_skirt_2116, Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. 
##############################
From agent.py
exp(clothes_shirt_2114, basket_for_clothes_2040)
Find clothes_shirt_2114. 
##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)walk_executor(faucet_134)switchoff_executor(faucet_134)
##############################
From agent.py
grab_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. Grabbing clothes_shirt_2114 by right hand. 
##############################
From agent.py
wash_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. clothes_shirt_2114 is cleaned. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: pot_54, Robot is close to the clothes_shirt_2114. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation

def has_ironing_board(ironing_board:item):
    # Function to check if an ironing board is available
    return is_ironing_board(ironing_board)

behavior plug_in_iron(iron:item, socket:item):
    # Behavior to plug the iron into a power socket
    body:
        achieve_once plugged(iron)
        achieve_once close(iron, socket)

behavior heat_up_iron(iron:item):
    # Behavior to turn on the iron and heat it up
    body:
        achieve is_on(iron)

behavior iron_clothes(shirt:item, ironing_board:item):
    # Behavior to iron the shirt
    body:
        achieve_once on(shirt, ironing_board) # Move shirt onto the ironing board for ironing
        achieve clean(shirt) # Ensure the shirt becomes wrinklefree (ie, clean)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind iron: item where:
            is_iron(iron)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        bind socket: item where:
            is_powersocket(socket)
        
        plug_in_iron(iron, socket) # Plug in the iron
        heat_up_iron(iron) # Heat up the iron for use
        iron_clothes(shirt, ironing_board) # Iron the shirt

#goal_representation_end

##############################
From agent.py->reset_sub_goal

def has_ironing_board(ironing_board:item):
    # Function to check if an ironing board is available
    return is_ironing_board(ironing_board)

behavior plug_in_iron(iron:item, socket:item):
    # Behavior to plug the iron into a power socket
    body:
        achieve_once plugged(iron)
        achieve_once close(iron, socket)

behavior heat_up_iron(iron:item):
    # Behavior to turn on the iron and heat it up
    body:
        achieve is_on(iron)

behavior iron_clothes(shirt:item, ironing_board:item):
    # Behavior to iron the shirt
    body:
        achieve_once on(shirt, ironing_board) # Move shirt onto the ironing board for ironing
        achieve clean(shirt) # Ensure the shirt becomes wrinklefree (ie, clean)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind iron: item where:
            is_iron(iron)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        bind socket: item where:
            is_powersocket(socket)
        
        plug_in_iron(iron, socket) # Plug in the iron
        heat_up_iron(iron) # Heat up the iron for use
        iron_clothes(shirt, ironing_board) # Iron the shirt

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)exp(iron_2117, ironing_board_2099)walk_executor(iron_2117)plugin_executor(iron_2117)grab_executor(iron_2117)walk_executor(powersocket_48)put_executor(iron_2117, powersocket_48)walk_executor(iron_2117)switchon_executor(iron_2117)walk_executor(ironing_board_2099)put_executor(clothes_shirt_2114, ironing_board_2099)
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: iron_2117, Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. 
##############################
From agent.py
exp(iron_2117, ironing_board_2099)
Find iron_2117. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2117)plugin_executor(iron_2117)grab_executor(iron_2117)walk_executor(powersocket_48)put_executor(iron_2117, powersocket_48)walk_executor(iron_2117)switchon_executor(iron_2117)walk_executor(ironing_board_2099)put_executor(clothes_shirt_2114, ironing_board_2099)
##############################
From agent.py
walk_executor(iron_2117)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. 
##############################
From agent.py
plugin_executor(iron_2117)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. iron_2117 is plugged in. 
##############################
From agent.py
grab_executor(iron_2117)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. Grabbing iron_2117 by left hand. 
##############################
From agent.py
walk_executor(powersocket_48)
Robot find: phone_47, Robot is close to the clothes_shirt_2114. Robot is close to the iron_2117. Robot is close to the powersocket_48. 
##############################
From agent.py
put_executor(iron_2117, powersocket_48)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the iron_2117. Robot is close to the powersocket_48. powersocket_48 is close iron_2117. iron_2117 is close powersocket_48. iron_2117 is on powersocket_48. iron_2117 released by left hand. 
##############################
From agent.py
walk_executor(iron_2117)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the iron_2117. Robot is close to the powersocket_48. 
##############################
From agent.py
switchon_executor(iron_2117)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the iron_2117. Robot is close to the powersocket_48. iron_2117 is turned on. 
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. 
##############################
From agent.py
put_executor(clothes_shirt_2114, ironing_board_2099)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. ironing_board_2099 is close clothes_shirt_2114. clothes_shirt_2114 is close ironing_board_2099. clothes_shirt_2114 is on ironing_board_2099. clothes_shirt_2114 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to iron the clothes_shirt_2114 using the iron_2117. Ensure that the shirt is pressed to become wrinkle-free. Currently, the iron is turned on and the shirt is on the ironing board, but no action indicating the shirt has been ironed is provided.
##############################
From agent.py
Human Instruction: The robot needs to iron the clothes_shirt_2114 using the iron_2117. Ensure that the shirt is pressed to become wrinkle-free. Currently, the iron is turned on and the shirt is on the ironing board, but no action indicating the shirt has been ironed is provided.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2040.
Action 2: look for clothes_shirt_2114 around basket_for_clothes_2040.
Action 3: Grab clothes_shirt_2114.
Action 4: Wash clothes_shirt_2114.
Action 5: Walk to faucet_134.
Action 6: Switch off faucet_134.
Action 7: Walk to ironing_board_2099.
Action 8: look for iron_2117 around ironing_board_2099.
Action 9: Walk to iron_2117.
Action 10: Plug in iron_2117.
Action 11: Grab iron_2117.
Action 12: Walk to powersocket_48.
Action 13: Put iron_2117 on powersocket_48.
Action 14: Walk to iron_2117.
Action 15: Switch on iron_2117.
Action 16: Walk to ironing_board_2099.
Action 17: Put clothes_shirt_2114 on ironing_board_2099.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_shower_303(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==303
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(towel,shower_instance)
        else:
            exp(towel,shower_instance)
    eff:
        unknown[towel]=False
        close[towel,shower_instance]=True
        close[shower_instance,towel]=True
    

behavior find_cleaning_solution_2098_around_cupboard_131(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cleaning_solution,cupboard_instance)
        else:
            exp(cleaning_solution,cupboard_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,cupboard_instance]=True
        close[cupboard_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
behavior iron_shirt():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        achieve_once inhand(iron)
        # Hold the iron in hand
        achieve is_on(iron)
        # Ensure the iron is turned on for use
        achieve clean(shirt)
        # The shirt should be clean before ironing

behavior __goal__():
    body:
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and on(clothes_shirt_2114, ironing_board)
        # The shirt is already on the ironing board
        bind iron: item where:
            is_iron(iron)
        iron_shirt() 
        # Iron the shirt to make it wrinklefree
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: clothes_shirt_2114; available variables: [Variable<ironing_board: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_hat_2076_around_washing_machine_2041(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_hat,washing_machine_instance)
        else:
            exp(clothes_hat,washing_machine_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,washing_machine_instance]=True
        close[washing_machine_instance,clothes_hat]=True
    

#goal_representation
behavior iron_shirt(shirt: item, iron: item):
    body:
        achieve_once inhand(iron)
        # Hold the iron in hand
        achieve is_on(iron)
        # Ensure the iron is turned on for use
        achieve clean(shirt)
        # The shirt should be clean before ironing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and on(shirt, ironing_board)
        # The shirt is already on the ironing board
        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        iron_shirt(shirt, iron) 
        # Iron the shirt to make it wrinklefree
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior iron_shirt(shirt: item, iron: item):
    body:
        achieve_once inhand(iron)
        # Hold the iron in hand
        achieve is_on(iron)
        # Ensure the iron is turned on for use
        achieve clean(shirt)
        # The shirt should be clean before ironing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        bind ironing_board: item where:
            is_ironing_board(ironing_board) and on(shirt, ironing_board)
        # The shirt is already on the ironing board
        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        iron_shirt(shirt, iron) 
        # Iron the shirt to make it wrinklefree
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2117)grab_executor(iron_2117)
##############################
From agent.py
walk_executor(iron_2117)
Robot find: Robot is close to the powersocket_48. Robot is close to the iron_2117. 
##############################
From agent.py
grab_executor(iron_2117)
Robot find: Robot is close to the powersocket_48. Robot is close to the iron_2117. Grabbing iron_2117 by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You must use the iron (iron_2117) to iron the shirt (clothes_shirt_2114) which is already placed on the ironing board (ironing_board_2099) to complete the sub-task.
##############################
From agent.py
Human Instruction: You must use the iron (iron_2117) to iron the shirt (clothes_shirt_2114) which is already placed on the ironing board (ironing_board_2099) to complete the sub-task.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2040.
Action 2: look for clothes_shirt_2114 around basket_for_clothes_2040.
Action 3: Grab clothes_shirt_2114.
Action 4: Wash clothes_shirt_2114.
Action 5: Walk to faucet_134.
Action 6: Switch off faucet_134.
Action 7: Walk to ironing_board_2099.
Action 8: look for iron_2117 around ironing_board_2099.
Action 9: Walk to iron_2117.
Action 10: Plug in iron_2117.
Action 11: Grab iron_2117.
Action 12: Walk to powersocket_48.
Action 13: Put iron_2117 on powersocket_48.
Action 14: Walk to iron_2117.
Action 15: Switch on iron_2117.
Action 16: Walk to ironing_board_2099.
Action 17: Put clothes_shirt_2114 on ironing_board_2099.
Action 18: Walk to iron_2117.
Action 19: Grab iron_2117.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_vegetable_2072_around_fridge_140(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_vegetable,fridge_instance)
        else:
            exp(food_vegetable,fridge_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,fridge_instance]=True
        close[fridge_instance,food_vegetable]=True
    

behavior find_towel_2083_around_shower_303(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==303
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(towel,shower_instance)
        else:
            exp(towel,shower_instance)
    eff:
        unknown[towel]=False
        close[towel,shower_instance]=True
        close[shower_instance,towel]=True
    

#exp_behavior_end

#goal_representation
behavior place_shirt_on_board(shirt:item, board:item):
    body:
        achieve_once on(shirt, board)

behavior switch_on_iron(iron:item):
    body:
        achieve_once is_on(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt with ID 2114

        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        # Select the iron with ID 2117

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2099
        # Select the ironing board with ID 2099

        place_shirt_on_board(shirt, ironing_board)
        # Place the shirt on the ironing board

        switch_on_iron(iron)
        # Switch on the iron
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_sink_133(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(towel,sink_instance)
        else:
            exp(towel,sink_instance)
    eff:
        unknown[towel]=False
        close[towel,sink_instance]=True
        close[sink_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt: item, iron: item, board: item):
    body:
        achieve_once is_on(iron)
        # Ensure the iron is on to be able to iron the shirt
        achieve_once on(shirt, board)
        # Place the shirt on the ironing board
        achieve_once close_char(char, iron)
        # Bring the character close to the iron
        achieve_once close_char(char, board)
        # Ensure the character is near the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt instance with ID 2114
        
        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        # Select the iron instance with ID 2117

        bind board: item where:
            is_ironing_board(board) and id[board] == 2099
        # Select the ironing board instance with ID 2099

        iron_shirt(shirt, iron, board)
        # Execute the iron_shirt behavior with the selected shirt, iron, and board

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_shirt(shirt: item, iron: item, board: item):
    body:
        achieve_once is_on(iron)
        # Ensure the iron is on to be able to iron the shirt
        achieve_once on(shirt, board)
        # Place the shirt on the ironing board
        achieve_once close_char(char, iron)
        # Bring the character close to the iron
        achieve_once close_char(char, board)
        # Ensure the character is near the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2114
        # Select the shirt instance with ID 2114
        
        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        # Select the iron instance with ID 2117

        bind board: item where:
            is_ironing_board(board) and id[board] == 2099
        # Select the ironing board instance with ID 2099

        iron_shirt(shirt, iron, board)
        # Execute the iron_shirt behavior with the selected shirt, iron, and board

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the iron_2117. Robot is close to the ironing_board_2099. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to use the iron (which you have already switched on and picked up) to actually iron the shirt that is on the ironing board.
##############################
Task Summary:
Task Goal:
Hand wash a shirt and iron this shirt.
Action History:
['walk_executor(basket_for_clothes_2040)', 'grab_executor(clothes_shirt_2114)', 'wash_executor(clothes_shirt_2114)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(ironing_board_2099)', 'walk_executor(iron_2117)', 'plugin_executor(iron_2117)', 'grab_executor(iron_2117)', 'walk_executor(powersocket_48)', 'put_executor(iron_2117, powersocket_48)', 'walk_executor(iron_2117)', 'switchon_executor(iron_2117)', 'walk_executor(ironing_board_2099)', 'put_executor(clothes_shirt_2114, ironing_board_2099)', 'walk_executor(iron_2117)', 'grab_executor(iron_2117)', 'walk_executor(ironing_board_2099)']
Time info:
Time consume: 119 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 101
goal generate times: 5
goal correct times: 1
action_num: 18

Task complete rate:
Keystate: k1 - Requires: 0 steps
Keystate: k2 - Requires: 2 steps
Action Completion Rate: 0.0
Scene_id: 2
##############################
