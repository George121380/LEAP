From agent.py
Reset goals: The sub-goals are: 
['1. Find the book and put it on the coffee table in the home office.', '2. Prepare a cup of hot milk and put it on the table.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2091_around_bookshelf_189(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==189
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_place_book(book:item, table:item):
    body:
        achieve_once on(book, table)
        # Place the book on the table

behavior __goal__():
    body:
        bind table: item where:
            is_table(table)
        # Find any table to place the book on
        
        bind book: item where:
            is_book(book)
        # Find the book

        find_and_place_book(book, table)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_and_place_book(book:item, table:item):
    body:
        achieve_once on(book, table)
        # Place the book on the table

behavior __goal__():
    body:
        bind table: item where:
            is_table(table)
        # Find any table to place the book on
        
        bind book: item where:
            is_book(book)
        # Find the book

        find_and_place_book(book, table)

##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_189)open_executor(bookshelf_189)exp(book_2091, bookshelf_189)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_123)put_executor(book_2091, table_123)
##############################
From agent.py
walk_executor(bookshelf_189)
Robot find: Robot is close to the bookshelf_189. 
##############################
From agent.py
open_executor(bookshelf_189)
Robot find: Robot is close to the bookshelf_189. bookshelf_189 is opened. 
##############################
From agent.py
exp(book_2091, bookshelf_189)
Fail to find book_2091 around bookshelf_189. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_137)open_executor(bookshelf_137)exp(book_2091, bookshelf_137)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_123)put_executor(book_2091, table_123)
##############################
From agent.py
walk_executor(bookshelf_137)
Robot find: cup_2089, book_2092, drawing_118, Robot is close to the bookshelf_137. 
##############################
From agent.py
open_executor(bookshelf_137)
Robot find: Robot is close to the bookshelf_137. Robot is close to the photoframe_102. bookshelf_137 is opened. 
##############################
From agent.py
exp(book_2091, bookshelf_137)
Fail to find book_2091 around bookshelf_137. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2092)grab_executor(book_2092)walk_executor(table_123)put_executor(book_2092, table_123)
##############################
From agent.py
walk_executor(book_2092)
Robot find: Robot is close to the bookshelf_137. Robot is close to the book_2092. 
##############################
From agent.py
grab_executor(book_2092)
Robot find: Robot is close to the bookshelf_137. Robot is close to the book_2092. Grabbing book_2092 by right hand. 
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, laptop_2015, fork_2103, cup_2087, bowl_2095, Robot is close to the book_2092. Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
put_executor(book_2092, table_123)
Robot find: Robot is close to the book_2092. Robot is close to the mat_114. Robot is close to the table_123. book_2092 is close table_123. table_123 is close book_2092. book_2092 is on table_123. book_2092 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2074_around_fridge_140(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_pot_54_around_sink_133(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==133
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(pot,sink_instance)
        else:
            exp(pot,sink_instance)
    eff:
        unknown[pot]=False
        close[pot,sink_instance]=True
        close[sink_instance,pot]=True
    

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_detergent_2108_around_washing_machine_2041(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_hot_milk(milk:item, stove:item, pot:item):
    body:
        achieve_once inside(milk, pot)
        achieve_once on(pot, stove)
        # Place the milk in the pot and position it on the stove
        achieve is_on(stove)
        # Ensure the stove is on to heat the milk

behavior place_on_table(item:item, table:item):
    body:
        achieve_once on(item, table)
        # Place the item on the designated table

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind table: item where:
            is_table(table)
        # Select a table

        prepare_hot_milk(milk, stove, pot)
        place_on_table(pot, table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior prepare_hot_milk(milk:item, stove:item, pot:item):
    body:
        achieve_once inside(milk, pot)
        achieve_once on(pot, stove)
        # Place the milk in the pot and position it on the stove
        achieve is_on(stove)
        # Ensure the stove is on to heat the milk

behavior place_on_table(item:item, table:item):
    body:
        achieve_once on(item, table)
        # Place the item on the designated table

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind table: item where:
            is_table(table)
        # Select a table

        prepare_hot_milk(milk, stove, pot)
        place_on_table(pot, table)

##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)exp(pot_2093, sink_133)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(milk_2074, fridge_140)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(pot_2093)putin_executor(milk_2074, pot_2093)grab_executor(pot_2093)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)walk_executor(pot_2093)grab_executor(pot_2093)walk_executor(table_123)put_executor(pot_2093, table_123)
##############################
From agent.py
walk_executor(sink_133)
Robot find: after_shave_2029, cleaning_solution_2098, juice_2034, pot_54, Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
exp(pot_2093, sink_133)
Fail to find pot_2093 around sink_133. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(milk_2074, fridge_140)walk_executor(pot_54)open_executor(pot_54)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(pot_54)putin_executor(milk_2074, pot_54)grab_executor(pot_54)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)walk_executor(pot_54)grab_executor(pot_54)walk_executor(table_123)put_executor(pot_54, table_123)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(milk_2074, fridge_140)
Find milk_2074. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_54)open_executor(pot_54)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(pot_54)putin_executor(milk_2074, pot_54)grab_executor(pot_54)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)walk_executor(pot_54)grab_executor(pot_54)walk_executor(table_123)put_executor(pot_54, table_123)
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
open_executor(pot_54)
Robot find: Robot is close to the oven_141. Robot is close to the pot_54. pot_54 is opened. 
##############################
From agent.py
walk_executor(milk_2074)
Robot find: Robot is close to the milk_2074. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(milk_2074)
Robot find: Robot is close to the milk_2074. Robot is close to the fridge_140. Grabbing milk_2074 by right hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the milk_2074. Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
putin_executor(milk_2074, pot_54)
Robot find: Robot is close to the milk_2074. Robot is close to the oven_141. Robot is close to the pot_54. milk_2074 is close pot_54. pot_54 is close milk_2074. milk_2074 is inside pot_54. milk_2074 released by right hand. 
##############################
From agent.py
grab_executor(pot_54)
Robot find: Robot is close to the milk_2074. Robot is close to the oven_141. Robot is close to the pot_54. Grabbing pot_54 by right hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(pot_54, stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. pot_54 is on stove_2090. pot_54 is close stove_2090. stove_2090 is close pot_54. pot_54 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the pot_54. Robot is close to the stove_2090. Robot is close to the milk_2074. 
##############################
From agent.py
grab_executor(pot_54)
Robot find: Robot is close to the pot_54. Robot is close to the stove_2090. Robot is close to the milk_2074. Grabbing pot_54 by right hand. 
##############################
From agent.py
walk_executor(table_123)
Robot find: Robot is close to the pot_54. Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
put_executor(pot_54, table_123)
Robot find: Robot is close to the pot_54. Robot is close to the mat_114. Robot is close to the table_123. pot_54 is on table_123. pot_54 is close table_123. table_123 is close pot_54. pot_54 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Find the book and put it on the coffe table in home office. Then prepare a cup of hot milk, put it on the table.
Action History:
['walk_executor(bookshelf_189)', 'open_executor(bookshelf_189)', 'walk_executor(bookshelf_137)', 'open_executor(bookshelf_137)', 'walk_executor(book_2092)', 'grab_executor(book_2092)', 'walk_executor(table_123)', 'put_executor(book_2092, table_123)', 'walk_executor(sink_133)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'walk_executor(pot_54)', 'open_executor(pot_54)', 'walk_executor(milk_2074)', 'grab_executor(milk_2074)', 'walk_executor(pot_54)', 'putin_executor(milk_2074, pot_54)', 'grab_executor(pot_54)', 'walk_executor(stove_2090)', 'put_executor(pot_54, stove_2090)', 'switchon_executor(stove_2090)', 'walk_executor(pot_54)', 'grab_executor(pot_54)', 'walk_executor(table_123)', 'put_executor(pot_54, table_123)']
Time info:
Time consume: 128 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 44
goal generate times: 2
goal correct times: 0
action_num: 26

Task complete rate:
Keystate: k1 - Requires: 4 steps
Keystate: k2 - Requires: 12 steps
Keystate: k3 - Requires: 7 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
