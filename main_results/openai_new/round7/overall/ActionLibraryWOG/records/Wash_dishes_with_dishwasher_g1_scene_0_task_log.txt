From agent.py
Reset goals: The sub-goals are: 
['1. Find all the bowls and plates.', '2. Use the dishwasher to wash the bowls and plates.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_1000_around_dishwasher_1001(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==1001
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(plate,dishwasher_instance)
        else:
            exp(plate,dishwasher_instance)
    eff:
        unknown[plate]=False
        close[plate,dishwasher_instance]=True
        close[dishwasher_instance,plate]=True
    

behavior find_bowl_2071_around_dishwasher_1001(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==1001
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(bowl,dishwasher_instance)
        else:
            exp(bowl,dishwasher_instance)
    eff:
        unknown[bowl]=False
        close[bowl,dishwasher_instance]=True
        close[dishwasher_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
def has_plate_or_bowl():
    symbol exist_plate_bowl = exists x: item : (is_plate(x) or is_bowl(x))
    return exist_plate_bowl

behavior __goal__():
    body:
        if has_plate_or_bowl():
            foreach item: item:
                if is_plate(item) or is_bowl(item):
                    observe(item, "Check location of the item")
        else:
            foreach item: item:
                if is_plate(item) or is_bowl(item) and not visited(item):
                    observe(item, "Check its presence") 

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_plate_or_bowl():
    symbol exist_plate_bowl = exists x: item : (is_plate(x) or is_bowl(x))
    return exist_plate_bowl

behavior __goal__():
    body:
        if has_plate_or_bowl():
            foreach item: item:
                if is_plate(item) or is_bowl(item):
                    observe(item, "Check location of the item")
        else:
            foreach item: item:
                if is_plate(item) or is_bowl(item) and not visited(item):
                    observe(item, "Check its presence") 

##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_1001)open_executor(dishwasher_1001)exp(bowl_2071, dishwasher_1001)walk_executor(bowl_2071)obs(bowl_2071, Check location of the item)walk_executor(dishwasher_1001)exp(bowl_2072, dishwasher_1001)walk_executor(bowl_2072)obs(bowl_2072, Check location of the item)walk_executor(dishwasher_1001)exp(plate_1000, dishwasher_1001)walk_executor(plate_1000)obs(plate_1000, Check location of the item)
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. 
##############################
From agent.py
open_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is opened. 
##############################
From agent.py
exp(bowl_2071, dishwasher_1001)
Fail to find bowl_2071 around dishwasher_1001. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_229)open_executor(cupboard_229)exp(bowl_2071, cupboard_229)walk_executor(bowl_2071)obs(bowl_2071, Check location of the item)walk_executor(cupboard_229)exp(bowl_2072, cupboard_229)walk_executor(bowl_2072)obs(bowl_2072, Check location of the item)walk_executor(doorjamb_346)exp(plate_1000, doorjamb_346)walk_executor(plate_1000)obs(plate_1000, Check location of the item)
##############################
From agent.py
walk_executor(cupboard_229)
Robot find: Robot is close to the cupboard_229. 
##############################
From agent.py
open_executor(cupboard_229)
Robot find: Robot is close to the cupboard_229. cupboard_229 is opened. 
##############################
From agent.py
exp(bowl_2071, cupboard_229)
Fail to find bowl_2071 around cupboard_229. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)exp(bowl_2071, kitchen_counter_230)walk_executor(bowl_2071)obs(bowl_2071, Check location of the item)walk_executor(kitchen_counter_230)exp(bowl_2072, kitchen_counter_230)walk_executor(bowl_2072)obs(bowl_2072, Check location of the item)walk_executor(kitchen_counter_230)exp(plate_1000, kitchen_counter_230)walk_executor(plate_1000)obs(plate_1000, Check location of the item)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the kitchen_counter_230. 
##############################
From agent.py
exp(bowl_2071, kitchen_counter_230)
Fail to find bowl_2071 around kitchen_counter_230. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_231)exp(bowl_2071, sink_231)walk_executor(bowl_2071)obs(bowl_2071, Check location of the item)walk_executor(sink_231)exp(bowl_2072, sink_231)walk_executor(bowl_2072)obs(bowl_2072, Check location of the item)walk_executor(doorjamb_346)exp(plate_1000, doorjamb_346)walk_executor(plate_1000)obs(plate_1000, Check location of the item)
##############################
From agent.py
walk_executor(sink_231)
Robot find: soap_2054, plate_1000, Robot is close to the kitchen_counter_230. Robot is close to the sink_231. 
##############################
From agent.py
exp(bowl_2071, sink_231)
Fail to find bowl_2071 around sink_231. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_232)exp(bowl_2071, faucet_232)walk_executor(bowl_2071)obs(bowl_2071, Check location of the item)walk_executor(faucet_232)exp(bowl_2072, faucet_232)walk_executor(bowl_2072)obs(bowl_2072, Check location of the item)walk_executor(plate_1000)obs(plate_1000, Check location of the item)
##############################
From agent.py
walk_executor(faucet_232)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the faucet_232. 
##############################
From agent.py
exp(bowl_2071, faucet_232)
Fail to find bowl_2071 around faucet_232. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_42)exp(bowl_2071, sink_42)walk_executor(bowl_2071)obs(bowl_2071, Check location of the item)walk_executor(sink_42)exp(bowl_2072, sink_42)walk_executor(bowl_2072)obs(bowl_2072, Check location of the item)walk_executor(plate_1000)obs(plate_1000, Check location of the item)
##############################
From agent.py
walk_executor(sink_42)
Robot find: detergent_2084, cleaning_solution_2073, towel_rack_31, soap_2053, towel_rack_32, towel_rack_34, Robot is close to the bathroom_counter_41. Robot is close to the sink_42. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2071 ?
Answer: Robot, you can find bowl_2071 on table_226. This table is located inside dining_room_201. The bowl is positioned directly on the table, ensuring it's close to and easily identifiable with the table itself.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, you can find bowl_2071 on table_226. This table is located inside dining_room_201. The bowl is positioned directly on the table, ensuring it's close to and easily identifiable with the table itself.

The actions you have taken:
Action 1: Walk to dishwasher_1001.
Action 2: Open dishwasher_1001.
Action 3: look for bowl_2071 around dishwasher_1001.
Action 4: Walk to cupboard_229.
Action 5: Open cupboard_229.
Action 6: look for bowl_2071 around cupboard_229.
Action 7: Walk to kitchen_counter_230.
Action 8: look for bowl_2071 around kitchen_counter_230.
Action 9: Walk to sink_231.
Action 10: look for bowl_2071 around sink_231.
Action 11: Walk to faucet_232.
Action 12: look for bowl_2071 around faucet_232.
Action 13: Walk to sink_42.

##############################
From agent.py
exp(bowl_2071, sink_42)
Fail to find bowl_2071 around sink_42. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_355)exp(bowl_2071, table_355)walk_executor(bowl_2071)obs(bowl_2071, Check location of the item)walk_executor(table_355)exp(bowl_2072, table_355)walk_executor(bowl_2072)obs(bowl_2072, Check location of the item)walk_executor(plate_1000)obs(plate_1000, Check location of the item)
##############################
From agent.py
walk_executor(table_355)
Robot find: mat_401, headset_2062, spectacles_2082, pillow_406, remote_control_2052, clothes_jacket_2047, pillow_405, cat_2055, drawing_400, drawing_404, hairbrush_2002, vacuum_cleaner_2070, Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. 
##############################
From agent.py
exp(bowl_2071, table_355)
Fail to find bowl_2071 around table_355. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_226)exp(bowl_2071, table_226)walk_executor(bowl_2071)obs(bowl_2071, Check location of the item)walk_executor(table_226)exp(bowl_2072, table_226)walk_executor(bowl_2072)obs(bowl_2072, Check location of the item)walk_executor(plate_1000)obs(plate_1000, Check location of the item)
##############################
From agent.py
walk_executor(table_226)
Robot find: bowl_2071, coffee_filter_2000, drawing_2003, bowl_2072, mat_236, fork_2080, fork_2081, mat_237, Robot is close to the table_226. 
##############################
From agent.py
exp(bowl_2071, table_226)
Find bowl_2071. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2071)obs(bowl_2071, Check location of the item)walk_executor(bowl_2072)obs(bowl_2072, Check location of the item)walk_executor(plate_1000)obs(plate_1000, Check location of the item)
##############################
From agent.py
walk_executor(bowl_2071)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2071. 
##############################
From agent.py
obs(bowl_2071, Check location of the item)
Get this information:  bowl_2071 is close to table_226. bowl_2071 is close to character_65. bowl_2071 is on table_226. bowl_2071 is inside dining_room_201. bowl_2071 is DIRTY.
##############################
From agent.py
walk_executor(bowl_2072)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2072. 
##############################
From agent.py
obs(bowl_2072, Check location of the item)
Get this information:  bowl_2072 is close to table_226. bowl_2072 is close to character_65. bowl_2072 is on table_226. bowl_2072 is inside dining_room_201. bowl_2072 is DIRTY.
##############################
From agent.py
walk_executor(plate_1000)
Robot find: Robot is close to the plate_1000. Robot is close to the sink_231. 
##############################
From agent.py
obs(plate_1000, Check location of the item)
Get this information:  plate_1000 is inside dining_room_201. plate_1000 is close to sink_231. plate_1000 is close to character_65. plate_1000 is on sink_231. plate_1000 is DIRTY.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_sugar_2039_around_fridge_289(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_sugar,fridge_instance)
        else:
            exp(food_sugar,fridge_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,fridge_instance]=True
        close[fridge_instance,food_sugar]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

behavior __goal__():
    body:
        bind bowl_2071: item where:
            is_bowl(bowl_2071)
        # Select bowl with ID 2071
        
        bind bowl_2072: item where:
            is_bowl(bowl_2072)
        # Select additional bowl with ID 2072

        bind plate_1000: item where:
            is_plate(plate_1000)
        # Select plate with ID 1000

        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select any dishwasher

        # Load the bowls and plates into the dishwasher
        load_dishwasher(bowl_2071, dishwasher)
        load_dishwasher(bowl_2072, dishwasher)
        load_dishwasher(plate_1000, dishwasher)

        start_dishwasher(dishwasher) # Start the dishwasher

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

behavior __goal__():
    body:
        bind bowl_2071: item where:
            is_bowl(bowl_2071)
        # Select bowl with ID 2071
        
        bind bowl_2072: item where:
            is_bowl(bowl_2072)
        # Select additional bowl with ID 2072

        bind plate_1000: item where:
            is_plate(plate_1000)
        # Select plate with ID 1000

        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select any dishwasher

        # Load the bowls and plates into the dishwasher
        load_dishwasher(bowl_2071, dishwasher)
        load_dishwasher(bowl_2072, dishwasher)
        load_dishwasher(plate_1000, dishwasher)

        start_dishwasher(dishwasher) # Start the dishwasher

##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(bowl_2071)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2071. 
##############################
From agent.py
grab_executor(bowl_2071)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2071. Grabbing bowl_2071 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the bowl_2071. Robot is close to the dishwasher_1001. 
##############################
From agent.py
putin_executor(bowl_2071, dishwasher_1001)
Robot find: Robot is close to the bowl_2071. Robot is close to the dishwasher_1001. bowl_2071 is close dishwasher_1001. bowl_2071 is inside dishwasher_1001. dishwasher_1001 is close bowl_2071. bowl_2071 released by right hand. 
##############################
From agent.py
walk_executor(plate_1000)
Robot find: Robot is close to the plate_1000. Robot is close to the sink_231. 
##############################
From agent.py
grab_executor(plate_1000)
Robot find: Robot is close to the plate_1000. Robot is close to the sink_231. Grabbing plate_1000 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the plate_1000. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. 
##############################
From agent.py
putin_executor(plate_1000, dishwasher_1001)
Robot find: Robot is close to the plate_1000. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. plate_1000 is inside dishwasher_1001. plate_1000 is close dishwasher_1001. dishwasher_1001 is close plate_1000. plate_1000 released by right hand. 
##############################
From agent.py
close_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is closed. 
##############################
From agent.py
switchon_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to load bowl_2072 into the dishwasher.
##############################
From agent.py
Human Instruction: The robot needs to load bowl_2072 into the dishwasher.

The actions you have taken:
Action 1: Walk to dishwasher_1001.
Action 2: Open dishwasher_1001.
Action 3: look for bowl_2071 around dishwasher_1001.
Action 4: Walk to cupboard_229.
Action 5: Open cupboard_229.
Action 6: look for bowl_2071 around cupboard_229.
Action 7: Walk to kitchen_counter_230.
Action 8: look for bowl_2071 around kitchen_counter_230.
Action 9: Walk to sink_231.
Action 10: look for bowl_2071 around sink_231.
Action 11: Walk to faucet_232.
Action 12: look for bowl_2071 around faucet_232.
Action 13: Walk to sink_42.
Action 14: look for bowl_2071 around sink_42.
Action 15: Walk to table_355.
Action 16: look for bowl_2071 around table_355.
Action 17: Walk to table_226.
Action 18: look for bowl_2071 around table_226.
Action 19: Walk to bowl_2071.
Action 20: Observe around bowl_2071 with the question of Check location of the item.
Action 21: Walk to bowl_2072.
Action 22: Observe around bowl_2072 with the question of Check location of the item.
Action 23: Walk to plate_1000.
Action 24: Observe around plate_1000 with the question of Check location of the item.
Action 25: Walk to bowl_2071.
Action 26: Grab bowl_2071.
Action 27: Walk to dishwasher_1001.
Action 28: Put bowl_2071 into dishwasher_1001.
Action 29: Walk to plate_1000.
Action 30: Grab plate_1000.
Action 31: Walk to dishwasher_1001.
Action 32: Put plate_1000 into dishwasher_1001.
Action 33: Close dishwasher_1001.
Action 34: Switch on dishwasher_1001.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_mat_237_around_mat_237(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind mat_instance:item where:
            is_mat(mat_instance) and id[mat_instance]==237
        achieve close_char(char,mat_instance)
        if can_open(mat_instance):
            achieve_once open(mat_instance)
            exp(mat,mat_instance)
        else:
            exp(mat,mat_instance)
    eff:
        unknown[mat]=False
        close[mat,mat_instance]=True
        close[mat_instance,mat]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher
        bind bowl_2072: item where:
            is_bowl(bowl_2072) and id[bowl_2072]==2072
        # Select bowl with ID 2072
        bind bowls: item where:
            is_bowl(bowls) and inside(bowls, dishwasher)
        # Verify if there are any other bowls in the dishwasher
        if not bowls:
            achieve_once inside(bowl_2072, dishwasher)
            # Load the specific bowl_2072 into the dishwasher
        start_dishwasher(dishwasher) # Start the dishwasher

#goal_representation_end

##############################
Error is:
Boolean expression only supports boolean values in CSP mode.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_cereal_2015_around_fridge_289(food_cereal:item):
    goal: not unknown(food_cereal)
    body:
        assert is_food_cereal(food_cereal)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_cereal,fridge_instance)
        else:
            exp(food_cereal,fridge_instance)
    eff:
        unknown[food_cereal]=False
        close[food_cereal,fridge_instance]=True
        close[fridge_instance,food_cereal]=True
    

behavior find_dvd_player_2061_around_tvstand_353(dvd_player:item):
    goal: not unknown(dvd_player)
    body:
        assert is_dvd_player(dvd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==353
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(dvd_player,tvstand_instance)
        else:
            exp(dvd_player,tvstand_instance)
    eff:
        unknown[dvd_player]=False
        close[dvd_player,tvstand_instance]=True
        close[tvstand_instance,dvd_player]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(bowl:item, dishwasher:item):
    body:
        achieve_once inside(bowl, dishwasher)
        # Move the bowl inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher)
        # Ensure the dishwasher is closed
        achieve_once is_on(dishwasher)
        # Ensure the dishwasher is turned on

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher) and id[dishwasher]==1001
        # Select the dishwasher with ID 1001
        
        bind bowl: item where:
            is_bowl(bowl) and id[bowl]==2072
        # Select the bowl with ID 2072

        bind plate: item where:
            is_plate(plate) and id[plate]==1000
        # Select the plate with ID 1000
        
        load_dishwasher(bowl, dishwasher)
        # Load bowl into the dishwasher
        
        load_dishwasher(plate, dishwasher)
        # Load plate into the dishwasher

        start_dishwasher(dishwasher)
        # Start the dishwasher

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_dishwasher(bowl:item, dishwasher:item):
    body:
        achieve_once inside(bowl, dishwasher)
        # Move the bowl inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher)
        # Ensure the dishwasher is closed
        achieve_once is_on(dishwasher)
        # Ensure the dishwasher is turned on

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher) and id[dishwasher]==1001
        # Select the dishwasher with ID 1001
        
        bind bowl: item where:
            is_bowl(bowl) and id[bowl]==2072
        # Select the bowl with ID 2072

        bind plate: item where:
            is_plate(plate) and id[plate]==1000
        # Select the plate with ID 1000
        
        load_dishwasher(bowl, dishwasher)
        # Load bowl into the dishwasher
        
        load_dishwasher(plate, dishwasher)
        # Load plate into the dishwasher

        start_dishwasher(dishwasher)
        # Start the dishwasher

##############################
From agent.py-> find a plan in act()
switchoff_executor(dishwasher_1001)open_executor(dishwasher_1001)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
switchoff_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is turned off. 
##############################
From agent.py
open_executor(dishwasher_1001)
Robot find: Robot is close to the plate_1000. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. dishwasher_1001 is opened. 
##############################
From agent.py
walk_executor(bowl_2072)
Robot find: Robot is close to the bowl_2072. Robot is close to the table_226. 
##############################
From agent.py
grab_executor(bowl_2072)
Robot find: Robot is close to the bowl_2072. Robot is close to the table_226. Grabbing bowl_2072 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the bowl_2072. Robot is close to the plate_1000. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. 
##############################
From agent.py
putin_executor(bowl_2072, dishwasher_1001)
Robot find: Robot is close to the bowl_2072. Robot is close to the plate_1000. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. bowl_2072 is close dishwasher_1001. bowl_2072 is inside dishwasher_1001. dishwasher_1001 is close bowl_2072. bowl_2072 released by right hand. 
##############################
From agent.py
close_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is closed. 
##############################
From agent.py
switchon_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
wash all the bowls and the plates with dishwasher
Action History:
['walk_executor(dishwasher_1001)', 'open_executor(dishwasher_1001)', 'walk_executor(cupboard_229)', 'open_executor(cupboard_229)', 'walk_executor(kitchen_counter_230)', 'walk_executor(sink_231)', 'walk_executor(faucet_232)', 'walk_executor(sink_42)', 'walk_executor(table_355)', 'walk_executor(table_226)', 'walk_executor(bowl_2071)', 'walk_executor(bowl_2072)', 'walk_executor(plate_1000)', 'walk_executor(bowl_2071)', 'grab_executor(bowl_2071)', 'walk_executor(dishwasher_1001)', 'putin_executor(bowl_2071, dishwasher_1001)', 'walk_executor(plate_1000)', 'grab_executor(plate_1000)', 'walk_executor(dishwasher_1001)', 'putin_executor(plate_1000, dishwasher_1001)', 'close_executor(dishwasher_1001)', 'switchon_executor(dishwasher_1001)', 'switchoff_executor(dishwasher_1001)', 'open_executor(dishwasher_1001)', 'walk_executor(bowl_2072)', 'grab_executor(bowl_2072)', 'walk_executor(dishwasher_1001)', 'putin_executor(bowl_2072, dishwasher_1001)', 'close_executor(dishwasher_1001)', 'switchon_executor(dishwasher_1001)']
Time info:
Time consume: 173 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 38
goal generate times: 4
goal correct times: 0
action_num: 31

Task complete rate:
1
Scene_id: 0
##############################
