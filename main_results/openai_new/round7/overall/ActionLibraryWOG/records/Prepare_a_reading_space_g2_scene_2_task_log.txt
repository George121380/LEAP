From agent.py
Reset goals: The sub-goals are: 
['1. Find the book and put it on the table in the home office.', '2. Turn on the light in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2092_around_bookshelf_260(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==260
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
def is_in_home_office(table:item):
    # Function to check if a table is inside the home office
    symbol in_home_office = exists room: item : (is_home_office(room) and inside(table, room))
    return in_home_office

behavior place_on_table(obj:item, table:item):
    body:
        achieve_once on(obj, table) # Place the object on the table

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select a book

        if exists table: item : (is_table(table) and surfaces(table) and is_in_home_office(table)):
            # Check if there is a table with a surface in the home office
            bind table: item where:
                is_table(table) and surfaces(table) and is_in_home_office(table)
            # Select a table in the home office
            place_on_table(book, table)

        else:
            # If no suitable table is found, begin searching for one in the home_office
            bind home_office: item where:
                is_home_office(home_office)
            # Select the home office
            observe(home_office, "Looking for table with surfaces in the home office")

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_in_home_office(table:item):
    # Function to check if a table is inside the home office
    symbol in_home_office = exists room: item : (is_home_office(room) and inside(table, room))
    return in_home_office

behavior place_on_table(obj:item, table:item):
    body:
        achieve_once on(obj, table) # Place the object on the table

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select a book

        if exists table: item : (is_table(table) and surfaces(table) and is_in_home_office(table)):
            # Check if there is a table with a surface in the home office
            bind table: item where:
                is_table(table) and surfaces(table) and is_in_home_office(table)
            # Select a table in the home office
            place_on_table(book, table)

        else:
            # If no suitable table is found, begin searching for one in the home_office
            bind home_office: item where:
                is_home_office(home_office)
            # Select the home office
            observe(home_office, "Looking for table with surfaces in the home office")

##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_260)open_executor(bookshelf_260)exp(book_2091, bookshelf_260)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(bookshelf_260)
Robot find: drawing_238, chair_263, mat_237, Robot is close to the bookshelf_260. 
##############################
From agent.py
open_executor(bookshelf_260)
Robot find: Robot is close to the bookshelf_260. Robot is close to the photoframe_246. bookshelf_260 is opened. 
##############################
From agent.py
exp(book_2091, bookshelf_260)
Fail to find book_2091 around bookshelf_260. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_188)open_executor(bookshelf_188)exp(book_2091, bookshelf_188)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(bookshelf_188)
Robot find: drawing_196, Robot is close to the bookshelf_188. 
##############################
From agent.py
open_executor(bookshelf_188)
Robot find: Robot is close to the bookshelf_188. bookshelf_188 is opened. 
##############################
From agent.py
exp(book_2091, bookshelf_188)
Fail to find book_2091 around bookshelf_188. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_189)open_executor(bookshelf_189)exp(book_2091, bookshelf_189)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(bookshelf_189)
Robot find: Robot is close to the bookshelf_189. 
##############################
From agent.py
open_executor(bookshelf_189)
Robot find: Robot is close to the bookshelf_189. bookshelf_189 is opened. 
##############################
From agent.py
exp(book_2091, bookshelf_189)
Fail to find book_2091 around bookshelf_189. 
##############################
From agent.py-> find a plan in act()
walk_executor(walllamp_45)exp(book_2091, walllamp_45)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(walllamp_45)
Robot find: Robot is close to the walllamp_45. 
##############################
From agent.py
exp(book_2091, walllamp_45)
Fail to find book_2091 around walllamp_45. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_372)open_executor(bookshelf_372)exp(book_2091, bookshelf_372)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(bookshelf_372)
Robot find: stamp_2031, drawing_389, Robot is close to the bookshelf_372. 
##############################
From agent.py
open_executor(bookshelf_372)
Robot find: Robot is close to the bookshelf_372. bookshelf_372 is opened. 
##############################
From agent.py
exp(book_2091, bookshelf_372)
Fail to find book_2091 around bookshelf_372. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_137)open_executor(bookshelf_137)exp(book_2091, bookshelf_137)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(bookshelf_137)
Robot find: cup_2089, book_2092, drawing_118, Robot is close to the bookshelf_137. 
##############################
From agent.py
open_executor(bookshelf_137)
Robot find: Robot is close to the bookshelf_137. Robot is close to the photoframe_102. bookshelf_137 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find book_2091 ?
Answer: Locate the dining room. Inside dining_room_1, you will find bookshelf_136. Book_2091 is on bookshelf_136. Look for book_2091 directly on that shelf.
Re-decompose: None

##############################
From agent.py
Human Instruction: Locate the dining room. Inside dining_room_1, you will find bookshelf_136. Book_2091 is on bookshelf_136. Look for book_2091 directly on that shelf.

The actions you have taken:
Action 1: Walk to bookshelf_260.
Action 2: Open bookshelf_260.
Action 3: look for book_2091 around bookshelf_260.
Action 4: Walk to bookshelf_188.
Action 5: Open bookshelf_188.
Action 6: look for book_2091 around bookshelf_188.
Action 7: Walk to bookshelf_189.
Action 8: Open bookshelf_189.
Action 9: look for book_2091 around bookshelf_189.
Action 10: Walk to walllamp_45.
Action 11: look for book_2091 around walllamp_45.
Action 12: Walk to bookshelf_372.
Action 13: Open bookshelf_372.
Action 14: look for book_2091 around bookshelf_372.
Action 15: Walk to bookshelf_137.
Action 16: Open bookshelf_137.

##############################
From agent.py
exp(book_2091, bookshelf_137)
Fail to find book_2091 around bookshelf_137. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2092)grab_executor(book_2092)walk_executor(table_193)put_executor(book_2092, table_193)
##############################
From agent.py
walk_executor(book_2092)
Robot find: Robot is close to the bookshelf_137. Robot is close to the book_2092. 
##############################
From agent.py
grab_executor(book_2092)
Robot find: Robot is close to the bookshelf_137. Robot is close to the book_2092. Grabbing book_2092 by right hand. 
##############################
From agent.py
walk_executor(table_193)
Robot find: dvd_player_2000, pillow_195, laser_pointer_2025, mat_201, mouse_2112, chair_2119, oil_2005, keyboard_2111, Robot is close to the book_2092. Robot is close to the table_193. 
##############################
From agent.py
put_executor(book_2092, table_193)
Robot find: Robot is close to the book_2092. Robot is close to the table_193. table_193 is close book_2092. book_2092 is close table_193. book_2092 is on table_193. book_2092 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to find book_2091 on bookshelf_136 in dining_room_1 and place it on the table in the home office, as book_2092 was placed instead.
##############################
From agent.py
Human Instruction: You need to find book_2091 on bookshelf_136 in dining_room_1 and place it on the table in the home office, as book_2092 was placed instead.

The actions you have taken:
Action 1: Walk to bookshelf_260.
Action 2: Open bookshelf_260.
Action 3: look for book_2091 around bookshelf_260.
Action 4: Walk to bookshelf_188.
Action 5: Open bookshelf_188.
Action 6: look for book_2091 around bookshelf_188.
Action 7: Walk to bookshelf_189.
Action 8: Open bookshelf_189.
Action 9: look for book_2091 around bookshelf_189.
Action 10: Walk to walllamp_45.
Action 11: look for book_2091 around walllamp_45.
Action 12: Walk to bookshelf_372.
Action 13: Open bookshelf_372.
Action 14: look for book_2091 around bookshelf_372.
Action 15: Walk to bookshelf_137.
Action 16: Open bookshelf_137.
Action 17: look for book_2091 around bookshelf_137.
Action 18: Walk to book_2092.
Action 19: Grab book_2092.
Action 20: Walk to table_193.
Action 21: Put book_2092 on table_193.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2092_around_bookshelf_136(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==136
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation

behavior place_on_table(book:item, table:item):
    body:
        achieve_once on(book, table)

behavior __goal__():
    body:
        bind bookshelf: item where:
            is_bookshelf(bookshelf) and inside(bookshelf, dining_room_1)
        # Select bookshelf_136 since it is in the dining room

        bind book: item where:
            is_book(book) and id[book] == 2091
        # Select book_2091

        bind table: item where:
            is_table(table) and inside(table, home_office_241)
        # Select a table inside the home office

        place_on_table(book, table)
        # Place book_2091 on the table in the home office

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: dining_room_1; available variables: [Variable<bookshelf: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_book_2092_around_bookshelf_136(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==136
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#goal_representation
behavior place_on_table(book:item, table:item):
    body:
        achieve_once on(book, table)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        # Define and bind dining_room

        bind home_office: item where:
            is_home_office(home_office)
        # Define and bind home_office

        bind bookshelf: item where:
            is_bookshelf(bookshelf) and inside(bookshelf, dining_room)
        # Select bookshelf_136 since it is in the dining room

        bind book: item where:
            is_book(book) and id[book] == 2091
        # Select book_2091

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table inside the home office

        place_on_table(book, table)
        # Place book_2091 on the table in the home office
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior place_on_table(book:item, table:item):
    body:
        achieve_once on(book, table)

behavior __goal__():
    body:
        bind dining_room: item where:
            is_dining_room(dining_room)
        # Define and bind dining_room

        bind home_office: item where:
            is_home_office(home_office)
        # Define and bind home_office

        bind bookshelf: item where:
            is_bookshelf(bookshelf) and inside(bookshelf, dining_room)
        # Select bookshelf_136 since it is in the dining room

        bind book: item where:
            is_book(book) and id[book] == 2091
        # Select book_2091

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table inside the home office

        place_on_table(book, table)
        # Place book_2091 on the table in the home office
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_136)exp(book_2091, bookshelf_136)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(bookshelf_136)
Robot find: book_2091, Robot is close to the bookshelf_136. 
##############################
From agent.py
exp(book_2091, bookshelf_136)
Find book_2091. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(book_2091)
Robot find: Robot is close to the bookshelf_136. Robot is close to the book_2091. 
##############################
From agent.py
grab_executor(book_2091)
Robot find: Robot is close to the bookshelf_136. Robot is close to the book_2091. Grabbing book_2091 by right hand. 
##############################
From agent.py
walk_executor(table_193)
Robot find: Robot is close to the book_2091. Robot is close to the table_193. 
##############################
From agent.py
put_executor(book_2091, table_193)
Robot find: Robot is close to the book_2091. Robot is close to the table_193. book_2091 is on table_193. table_193 is close book_2091. book_2091 is close table_193. book_2091 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_phone_47_around_home_office_161(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==161
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(phone,home_office_instance)
        else:
            exp(phone,home_office_instance)
    eff:
        unknown[phone]=False
        close[phone,home_office_instance]=True
        close[home_office_instance,phone]=True
    

#exp_behavior_end

#goal_representation

behavior __goal__():
    body:
        bind light: item where:
            is_light(light) and inside(light, home_office)
        achieve is_on(light)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: home_office; available variables: [Variable<light: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_stereo_2007_around_home_office_161(stereo:item):
    goal: not unknown(stereo)
    body:
        assert is_stereo(stereo)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==161
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(stereo,home_office_instance)
        else:
            exp(stereo,home_office_instance)
    eff:
        unknown[stereo]=False
        close[stereo,home_office_instance]=True
        close[home_office_instance,stereo]=True
    

#goal_representation
 
behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        bind light: item where:
            is_light(light) and inside(light, home_office)
        achieve is_on(light)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        bind light: item where:
            is_light(light) and inside(light, home_office)
        achieve is_on(light)

##############################
From agent.py-> find a plan in act()
walk_executor(light_217)switchon_executor(light_217)
##############################
From agent.py
walk_executor(light_217)
Robot find: Robot is close to the light_217. 
##############################
From agent.py
switchon_executor(light_217)
Robot find: Robot is close to the light_217. light_217 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Find the book and put it on the table in home office. Then turn on the light in the home office.
Action History:
['walk_executor(bookshelf_260)', 'open_executor(bookshelf_260)', 'walk_executor(bookshelf_188)', 'open_executor(bookshelf_188)', 'walk_executor(bookshelf_189)', 'open_executor(bookshelf_189)', 'walk_executor(walllamp_45)', 'walk_executor(bookshelf_372)', 'open_executor(bookshelf_372)', 'walk_executor(bookshelf_137)', 'open_executor(bookshelf_137)', 'walk_executor(book_2092)', 'grab_executor(book_2092)', 'walk_executor(table_193)', 'put_executor(book_2092, table_193)', 'walk_executor(bookshelf_136)', 'walk_executor(book_2091)', 'grab_executor(book_2091)', 'walk_executor(table_193)', 'put_executor(book_2091, table_193)', 'walk_executor(light_217)', 'switchon_executor(light_217)']
Time info:
Time consume: 138 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 133
goal generate times: 3
goal correct times: 2
action_num: 22

Task complete rate:
1
Scene_id: 2
##############################
