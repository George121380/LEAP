From agent.py
Reset goals: The sub-goals are: 
['1. Find the specific book and place it on the coffee table in the home office.', '2. Open the window in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_novel_2010_around_bookshelf_260(novel:item):
    goal: not unknown(novel)
    body:
        assert is_novel(novel)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==260
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(novel,bookshelf_instance)
        else:
            exp(novel,bookshelf_instance)
    eff:
        unknown[novel]=False
        close[novel,bookshelf_instance]=True
        close[bookshelf_instance,novel]=True
    

behavior find_book_2091_around_bookshelf_260(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==260
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
behavior place_book_on_coffee_table(book:item, table:item):
    body:
        achieve_once on(book, table) # Place the book on the coffee table

def identify_coffee_table_in_home_office(coffee_table:item):
    # Function to check if a table is a coffee table and is in the home office
    symbol in_home_office=exists room: item : (is_home_office(room) and inside(coffee_table, room))
    return in_home_office

behavior __goal__():
    body:
        bind coffee_table: item where:
            is_table(coffee_table) and identify_coffee_table_in_home_office(coffee_table)
        # Select a coffee table that is in the home office

        foreach bookshelf: item:
            if is_bookshelf(bookshelf) and not visited(bookshelf):
                observe(bookshelf, "Check for any book")
            # Check all unvisited bookshelves to find a book
        
        bind book: item where:
            is_book(book) and not visited(book)
        # Select the book that is found and not yet visited
        
        place_book_on_coffee_table(book, coffee_table)
        # Place the book on the selected coffee table
#goal_representation_end

##############################
From agent.py->reset_goal
behavior place_book_on_coffee_table(book:item, table:item):
    body:
        achieve_once on(book, table) # Place the book on the coffee table

def identify_coffee_table_in_home_office(coffee_table:item):
    # Function to check if a table is a coffee table and is in the home office
    symbol in_home_office=exists room: item : (is_home_office(room) and inside(coffee_table, room))
    return in_home_office

behavior __goal__():
    body:
        bind coffee_table: item where:
            is_table(coffee_table) and identify_coffee_table_in_home_office(coffee_table)
        # Select a coffee table that is in the home office

        foreach bookshelf: item:
            if is_bookshelf(bookshelf) and not visited(bookshelf):
                observe(bookshelf, "Check for any book")
            # Check all unvisited bookshelves to find a book
        
        bind book: item where:
            is_book(book) and not visited(book)
        # Select the book that is found and not yet visited
        
        place_book_on_coffee_table(book, coffee_table)
        # Place the book on the selected coffee table
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_136)obs(bookshelf_136, Check for any book)walk_executor(bookshelf_137)open_executor(bookshelf_137)obs(bookshelf_137, Check for any book)walk_executor(bookshelf_188)open_executor(bookshelf_188)obs(bookshelf_188, Check for any book)walk_executor(bookshelf_189)open_executor(bookshelf_189)obs(bookshelf_189, Check for any book)walk_executor(bookshelf_260)open_executor(bookshelf_260)obs(bookshelf_260, Check for any book)walk_executor(bookshelf_372)open_executor(bookshelf_372)obs(bookshelf_372, Check for any book)walk_executor(bookshelf_260)exp(book_2091, bookshelf_260)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(bookshelf_136)
Robot find: book_2091, Robot is close to the bookshelf_136. 
##############################
From agent.py
obs(bookshelf_136, Check for any book)
Get this information:  bookshelf_136 is on floor_12. bookshelf_136 is on floor_13. book_2091 is on bookshelf_136. bookshelf_136 is close to wall_5. bookshelf_136 is close to wall_10. bookshelf_136 is close to floor_12. bookshelf_136 is close to floor_13. bookshelf_136 is close to floor_18. bookshelf_136 is close to ceiling_25. bookshelf_136 is close to doorjamb_285. bookshelf_136 is close to ceiling_30. bookshelf_136 is close to door_286. bookshelf_136 is close to door_38. bookshelf_136 is close to book_2091. bookshelf_136 is close to floor_336. bookshelf_136 is close to floor_337. bookshelf_136 is close to wall_344. bookshelf_136 is close to wall_345. bookshelf_136 is close to ceiling_355. bookshelf_136 is close to doorjamb_356. bookshelf_136 is close to desk_375. bookshelf_136 is close to computer_379. bookshelf_136 is close to mouse_380. bookshelf_136 is close to mousepad_381. bookshelf_136 is close to keyboard_382. bookshelf_136 is close to cpuscreen_383. bookshelf_136 is close to character_219. bookshelf_136 is inside dining_room_1. bookshelf_136 is CLEAN. bookshelf_136 is OPEN.
##############################
From agent.py
walk_executor(bookshelf_137)
Robot find: cup_2089, book_2092, drawing_118, Robot is close to the bookshelf_137. 
##############################
From agent.py
open_executor(bookshelf_137)
Robot find: Robot is close to the bookshelf_137. Robot is close to the photoframe_102. bookshelf_137 is opened. 
##############################
From agent.py
obs(bookshelf_137, Check for any book)
Get this information:  cup_2089 is on bookshelf_137. bookshelf_137 is inside dining_room_1. photoframe_102 is inside bookshelf_137. book_2092 is on bookshelf_137. bookshelf_137 is close to drawing_387. bookshelf_137 is close to ceiling_36. bookshelf_137 is close to photoframe_102. bookshelf_137 is close to tvstand_135. bookshelf_137 is close to doorjamb_39. bookshelf_137 is close to cup_2089. bookshelf_137 is close to wall_9. bookshelf_137 is close to wall_11. bookshelf_137 is close to book_2092. bookshelf_137 is close to floor_335. bookshelf_137 is close to floor_19. bookshelf_137 is close to drawing_118. bookshelf_137 is close to wall_343. bookshelf_137 is close to floor_24. bookshelf_137 is close to filing_cabinet_378. bookshelf_137 is close to ceiling_31. bookshelf_137 is close to character_219. bookshelf_137 is on floor_24. bookshelf_137 is CLEAN. bookshelf_137 is OPEN.
##############################
From agent.py
walk_executor(bookshelf_188)
Robot find: drawing_196, Robot is close to the bookshelf_188. 
##############################
From agent.py
open_executor(bookshelf_188)
Robot find: Robot is close to the bookshelf_188. bookshelf_188 is opened. 
##############################
From agent.py
obs(bookshelf_188, Check for any book)
Get this information:  bookshelf_188 is on floor_165. bookshelf_188 is close to kitchen_counter_128. bookshelf_188 is close to floor_165. bookshelf_188 is close to wall_6. bookshelf_188 is close to floor_167. bookshelf_188 is close to door_234. bookshelf_188 is close to wall_172. bookshelf_188 is close to wall_174. bookshelf_188 is close to floor_15. bookshelf_188 is close to ceiling_177. bookshelf_188 is close to ceiling_180. bookshelf_188 is close to doorjamb_182. bookshelf_188 is close to bookshelf_189. bookshelf_188 is close to character_219. bookshelf_188 is facing drawing_196. bookshelf_188 is facing drawing_238. bookshelf_188 is inside home_office_161. bookshelf_188 is OPEN. bookshelf_188 is DIRTY.
##############################
From agent.py
walk_executor(bookshelf_189)
Robot find: Robot is close to the bookshelf_189. 
##############################
From agent.py
open_executor(bookshelf_189)
Robot find: Robot is close to the bookshelf_189. bookshelf_189 is opened. 
##############################
From agent.py
obs(bookshelf_189, Check for any book)
Get this information:  bookshelf_189 is inside home_office_161. bookshelf_189 is on floor_167. bookshelf_189 is close to kitchen_counter_128. bookshelf_189 is close to wall_3. bookshelf_189 is close to doorjamb_37. bookshelf_189 is close to wall_6. bookshelf_189 is close to floor_167. bookshelf_189 is close to floor_166. bookshelf_189 is close to wall_171. bookshelf_189 is close to wall_172. bookshelf_189 is close to floor_14. bookshelf_189 is close to floor_15. bookshelf_189 is close to ceiling_176. bookshelf_189 is close to ceiling_177. bookshelf_189 is close to light_217. bookshelf_189 is close to powersocket_218. bookshelf_189 is close to ceiling_27. bookshelf_189 is close to bookshelf_188. bookshelf_189 is close to character_219. bookshelf_189 is facing television_216. bookshelf_189 is CLEAN. bookshelf_189 is OPEN.
##############################
From agent.py
walk_executor(bookshelf_260)
Robot find: drawing_238, chair_263, mat_237, Robot is close to the bookshelf_260. 
##############################
From agent.py
open_executor(bookshelf_260)
Robot find: Robot is close to the bookshelf_260. Robot is close to the photoframe_246. bookshelf_260 is opened. 
##############################
From agent.py
obs(bookshelf_260, Check for any book)
Get this information:  bookshelf_260 is facing drawing_238. photoframe_246 is inside bookshelf_260. bookshelf_260 is inside bedroom_220. bookshelf_260 is on floor_221. bookshelf_260 is on floor_222. bookshelf_260 is close to ceiling_226. bookshelf_260 is close to powersocket_259. bookshelf_260 is close to ceiling_227. bookshelf_260 is close to wall_231. bookshelf_260 is close to chair_263. bookshelf_260 is close to wall_233. bookshelf_260 is close to mat_237. bookshelf_260 is close to photoframe_246. bookshelf_260 is close to floor_221. bookshelf_260 is close to floor_222. bookshelf_260 is close to floor_223. bookshelf_260 is close to character_219. bookshelf_260 is CLEAN. bookshelf_260 is OPEN.
##############################
From agent.py
walk_executor(bookshelf_372)
Robot find: stamp_2031, drawing_389, Robot is close to the bookshelf_372. 
##############################
From agent.py
open_executor(bookshelf_372)
Robot find: Robot is close to the bookshelf_372. bookshelf_372 is opened. 
##############################
From agent.py
obs(bookshelf_372, Check for any book)
Get this information:  stamp_2031 is on bookshelf_372. bookshelf_372 is close to walllamp_290. bookshelf_372 is close to drawing_296. bookshelf_372 is close to photoframe_361. bookshelf_372 is close to towel_rack_298. bookshelf_372 is close to floor_331. bookshelf_372 is close to floor_332. bookshelf_372 is close to wall_269. bookshelf_372 is close to stamp_2031. bookshelf_372 is close to floor_272. bookshelf_372 is close to bathroom_cabinet_305. bookshelf_372 is close to bathroom_counter_306. bookshelf_372 is close to wall_339. bookshelf_372 is close to floor_273. bookshelf_372 is close to wall_342. bookshelf_372 is close to ceiling_279. bookshelf_372 is close to ceiling_349. bookshelf_372 is close to ceiling_350. bookshelf_372 is close to character_219. bookshelf_372 is facing computer_379. bookshelf_372 is facing drawing_389. bookshelf_372 is inside bedroom_327. photoframe_361 is on bookshelf_372. bookshelf_372 is on floor_331. bookshelf_372 is CLEAN. bookshelf_372 is OPEN.
##############################
From agent.py
walk_executor(bookshelf_260)
Robot find: Robot is close to the bookshelf_260. Robot is close to the photoframe_246. 
##############################
From agent.py
exp(book_2091, bookshelf_260)
Find book_2091. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(book_2091)
Robot find: Robot is close to the bookshelf_136. Robot is close to the book_2091. 
##############################
From agent.py
grab_executor(book_2091)
Robot find: Robot is close to the bookshelf_136. Robot is close to the book_2091. Grabbing book_2091 by right hand. 
##############################
From agent.py
walk_executor(table_193)
Robot find: dvd_player_2000, pillow_195, laser_pointer_2025, mat_201, mouse_2112, chair_2119, oil_2005, keyboard_2111, Robot is close to the book_2091. Robot is close to the table_193. 
##############################
From agent.py
put_executor(book_2091, table_193)
Robot find: Robot is close to the book_2091. Robot is close to the table_193. book_2091 is on table_193. table_193 is close book_2091. book_2091 is close table_193. book_2091 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation

behavior open_window(window:item):
    body:
        achieve_once open(window)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select a window in the home office
        bind window: item where:
            is_window(window) and inside(window, home_office)
        open_window(window)

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior open_window(window:item):
    body:
        achieve_once open(window)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select a window in the home office
        bind window: item where:
            is_window(window) and inside(window, home_office)
        open_window(window)

##############################
From agent.py-> find a plan in act()
walk_executor(window_181)open_executor(window_181)
##############################
From agent.py
walk_executor(window_181)
Robot find: Robot is close to the window_181. 
##############################
From agent.py
open_executor(window_181)
Robot find: Robot is close to the window_181. window_181 is opened. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Find a book and put it on the coffe table in home office. Then open the window in the home office.
Action History:
['walk_executor(bookshelf_136)', 'walk_executor(bookshelf_137)', 'open_executor(bookshelf_137)', 'walk_executor(bookshelf_188)', 'open_executor(bookshelf_188)', 'walk_executor(bookshelf_189)', 'open_executor(bookshelf_189)', 'walk_executor(bookshelf_260)', 'open_executor(bookshelf_260)', 'walk_executor(bookshelf_372)', 'open_executor(bookshelf_372)', 'walk_executor(bookshelf_260)', 'walk_executor(book_2091)', 'grab_executor(book_2091)', 'walk_executor(table_193)', 'put_executor(book_2091, table_193)', 'walk_executor(window_181)', 'open_executor(window_181)']
Time info:
Time consume: 75 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 139
goal generate times: 2
goal correct times: 0
action_num: 18

Task complete rate:
1
Scene_id: 2
##############################
