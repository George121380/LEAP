From agent.py
Reset goals: The sub-goals are: 
['Iron the skirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_skirt_2116_around_ironing_board_2099(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_skirt,ironing_board_instance)
        else:
            exp(clothes_skirt,ironing_board_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,ironing_board_instance]=True
        close[ironing_board_instance,clothes_skirt]=True
    

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt: item, iron: item, ironing_board: item):
    body:
        achieve_once on(skirt, ironing_board)
        # Place the skirt on the ironing board
        achieve plugged(iron)
        # Ensure that the iron is plugged in
        achieve is_on(iron)
        # Ensure that the iron is turned on
        # Iron the skirt using the iron (the action to achieve this is implicit)

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select a skirt
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron
        
        achieve close_char(char, ironing_board)
        # Move the character closer to the ironing board

        iron_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_skirt_2116_around_ironing_board_2099(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_skirt,ironing_board_instance)
        else:
            exp(clothes_skirt,ironing_board_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,ironing_board_instance]=True
        close[ironing_board_instance,clothes_skirt]=True
    

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior plug_iron(iron:item):
    body:
        achieve_once plugged(iron)

behavior heat_iron(iron:item):
    body:
        achieve_once is_on(iron)

behavior iron_skirt(skirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(skirt, ironing_board)
        # Assume we need to place the skirt on the ironing board first
        achieve_once plugged(iron)
        # Ensure the iron is plugged in
        achieve_once is_on(iron)
        # Ensure the iron is heated

behavior reset_iron(iron:item):
    body:
        achieve_once is_off(iron)
        # Turn off the iron after use
        achieve_once unplugged(iron)
        # Unplug the iron after use

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        iron_skirt(skirt, ironing_board, iron)
        # Iron the skirt using the iron

        reset_iron(iron)
        # Reset the iron after use

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior plug_iron(iron:item):
    body:
        achieve_once plugged(iron)

behavior heat_iron(iron:item):
    body:
        achieve_once is_on(iron)

behavior iron_skirt(skirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(skirt, ironing_board)
        # Assume we need to place the skirt on the ironing board first
        achieve_once plugged(iron)
        # Ensure the iron is plugged in
        achieve_once is_on(iron)
        # Ensure the iron is heated

behavior reset_iron(iron:item):
    body:
        achieve_once is_off(iron)
        # Turn off the iron after use
        achieve_once unplugged(iron)
        # Unplug the iron after use

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        iron_skirt(skirt, ironing_board, iron)
        # Iron the skirt using the iron

        reset_iron(iron)
        # Reset the iron after use

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)exp(clothes_skirt_2116, ironing_board_2099)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)exp(iron_2117, ironing_board_2099)walk_executor(iron_2117)plugin_executor(iron_2117)switchon_executor(iron_2117)switchoff_executor(iron_2117)plugout_executor(iron_2117)
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: iron_2117, Robot is close to the ironing_board_2099. 
##############################
From agent.py
exp(clothes_skirt_2116, ironing_board_2099)
Fail to find clothes_skirt_2116 around ironing_board_2099. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)exp(clothes_skirt_2116, basket_for_clothes_2040)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)plugin_executor(iron_2117)switchon_executor(iron_2117)switchoff_executor(iron_2117)plugout_executor(iron_2117)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Robot find: clothes_pants_2113, clothes_shirt_2114, clothes_socks_2115, clothes_skirt_2116, Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. 
##############################
From agent.py
exp(clothes_skirt_2116, basket_for_clothes_2040)
Find clothes_skirt_2116. 
##############################
From agent.py-> find a plan in act()
grab_executor(clothes_skirt_2116)walk_executor(ironing_board_2099)put_executor(clothes_skirt_2116, ironing_board_2099)plugin_executor(iron_2117)switchon_executor(iron_2117)switchoff_executor(iron_2117)plugout_executor(iron_2117)
##############################
From agent.py
grab_executor(clothes_skirt_2116)
Robot find: Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. Grabbing clothes_skirt_2116 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. 
##############################
From agent.py
put_executor(clothes_skirt_2116, ironing_board_2099)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. ironing_board_2099 is close clothes_skirt_2116. clothes_skirt_2116 is close ironing_board_2099. clothes_skirt_2116 is on ironing_board_2099. clothes_skirt_2116 released by right hand. 
##############################
From agent.py
plugin_executor(iron_2117)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. iron_2117 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2117)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. iron_2117 is turned on. 
##############################
From agent.py
switchoff_executor(iron_2117)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. iron_2117 is turned off. 
##############################
From agent.py
plugout_executor(iron_2117)
Robot find: Robot is close to the clothes_skirt_2116. Robot is close to the ironing_board_2099. iron_2117 is unplugged. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Directly iron a pair of skirt.
Action History:
['walk_executor(ironing_board_2099)', 'walk_executor(basket_for_clothes_2040)', 'grab_executor(clothes_skirt_2116)', 'walk_executor(ironing_board_2099)', 'put_executor(clothes_skirt_2116, ironing_board_2099)', 'plugin_executor(iron_2117)', 'switchon_executor(iron_2117)', 'switchoff_executor(iron_2117)', 'plugout_executor(iron_2117)']
Time info:
Time consume: 47 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 148
goal generate times: 2
goal correct times: 0
action_num: 9

Task complete rate:
Keystate: k1 - Requires: 7 steps
Action Completion Rate: 0.0
Scene_id: 2
##############################
