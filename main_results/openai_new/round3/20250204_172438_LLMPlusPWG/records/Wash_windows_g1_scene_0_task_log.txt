From agent.py
Reset goals: The sub-goals are: 
['Open the windows in the bathroom.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        # Select the bathroom area to locate the windows in it

        foreach window: item:
            # Check all windows that are inside the bathroom and have not been visited
            if is_window(window) and inside(window, bathroom) and not visited(window):
                observe(window, "Check if the window is open")
                # Observe whether each window in the bathroom is open
                achieve open(window)
                # If a window is not open, ensure it gets opened

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        # Select the bathroom area to locate the windows in it

        foreach window: item:
            # Check all windows that are inside the bathroom and have not been visited
            if is_window(window) and inside(window, bathroom) and not visited(window):
                observe(window, "Check if the window is open")
                # Observe whether each window in the bathroom is open
                achieve open(window)
                # If a window is not open, ensure it gets opened

##############################
From agent.py-> find a plan in act()
walk_executor(window_63)open_executor(window_63)obs(window_63, Check if the window is open)
##############################
From agent.py
walk_executor(window_63)
Robot find: towel_rack_33, Robot is close to the window_63. 
##############################
From agent.py
open_executor(window_63)
Robot find: Robot is close to the window_63. window_63 is opened. 
##############################
From agent.py
obs(window_63, Check if the window is open)
Get this information:  window_63 is close to towel_rack_33. window_63 is close to floor_5. window_63 is close to wall_9. window_63 is close to wall_10. window_63 is close to wall_13. window_63 is close to ceiling_20. window_63 is close to curtain_23. window_63 is close to curtain_24. window_63 is close to curtain_25. window_63 is close to bathtub_30. window_63 is close to character_65. window_63 is inside bathroom_1. window_63 is DIRTY. window_63 is OPEN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Open the windows in the bathroom.
Action History:
['walk_executor(window_63)', 'open_executor(window_63)']
Time info:
Time consume: 18 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 1
goal correct times: 0

Task complete rate:
1
Scene_id: 0
##############################
