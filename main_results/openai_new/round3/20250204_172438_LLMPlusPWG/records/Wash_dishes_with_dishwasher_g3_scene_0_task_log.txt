From agent.py
Reset goals: The sub-goals are: 
['Wash the bowls and plates with dishwasher. And wash forks by hand.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_1000_around_dishwasher_1001(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==1001
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(plate,dishwasher_instance)
        else:
            exp(plate,dishwasher_instance)
    eff:
        unknown[plate]=False
        close[plate,dishwasher_instance]=True
        close[dishwasher_instance,plate]=True
    

behavior find_fork_2080_around_sink_231(fork:item):
    goal: not unknown(fork)
    body:
        assert is_fork(fork)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(fork,sink_instance)
        else:
            exp(fork,sink_instance)
    eff:
        unknown[fork]=False
        close[fork,sink_instance]=True
        close[sink_instance,fork]=True
    

behavior find_bowl_2071_around_dishwasher_1001(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==1001
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(bowl,dishwasher_instance)
        else:
            exp(bowl,dishwasher_instance)
    eff:
        unknown[bowl]=False
        close[bowl,dishwasher_instance]=True
        close[dishwasher_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_bowls_plates_in_dishwasher(bowl_or_plate:item, dishwasher:item):
    body:
        achieve inside(bowl_or_plate, dishwasher)
        # Load the bowl or plate into the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve closed(dishwasher)
        # Ensure the dishwasher is closed
        achieve is_on(dishwasher)
        # Start the dishwasher

behavior wash_forks_by_hand(fork:item):
    body:
        wash(fork)
        # Wash the fork by hand

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select the dishwasher
        
        foreach obj: item:
        # Load all bowls and plates into the dishwasher
            if is_bowl(obj) or is_plate(obj) and dirty(obj):
                load_bowls_plates_in_dishwasher(obj, dishwasher)
        
        start_dishwasher(dishwasher)
        # Start the dishwasher after loading bowls and plates
        
        foreach fork: item:
        # Wash each fork by hand
            if is_fork(fork) and dirty(fork):
                wash_forks_by_hand(fork)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior load_bowls_plates_in_dishwasher(bowl_or_plate:item, dishwasher:item):
    body:
        achieve inside(bowl_or_plate, dishwasher)
        # Load the bowl or plate into the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve closed(dishwasher)
        # Ensure the dishwasher is closed
        achieve is_on(dishwasher)
        # Start the dishwasher

behavior wash_forks_by_hand(fork:item):
    body:
        wash(fork)
        # Wash the fork by hand

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select the dishwasher
        
        foreach obj: item:
        # Load all bowls and plates into the dishwasher
            if is_bowl(obj) or is_plate(obj) and dirty(obj):
                load_bowls_plates_in_dishwasher(obj, dishwasher)
        
        start_dishwasher(dishwasher)
        # Start the dishwasher after loading bowls and plates
        
        foreach fork: item:
        # Wash each fork by hand
            if is_fork(fork) and dirty(fork):
                wash_forks_by_hand(fork)

##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_1001)open_executor(dishwasher_1001)exp(bowl_2071, dishwasher_1001)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)exp(bowl_2072, dishwasher_1001)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. 
##############################
From agent.py
open_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is opened. 
##############################
From agent.py
exp(bowl_2071, dishwasher_1001)
Fail to find bowl_2071 around dishwasher_1001. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_290)open_executor(coffe_maker_290)exp(bowl_2071, coffe_maker_290)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(coffe_maker_290)exp(bowl_2072, coffe_maker_290)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(coffe_maker_290)
Robot find: pot_2069, knife_2050, cutting_board_2051, cup_2064, fryingpan_2083, napkin_2005, cup_2063, oil_2079, drawing_239, drawing_238, drawing_240, drawing_241, drawing_242, drawing_243, Robot is close to the coffe_maker_290. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
open_executor(coffe_maker_290)
Robot find: Robot is close to the coffe_maker_290. Robot is close to the kitchen_counter_230. coffe_maker_290 is opened. 
##############################
From agent.py
exp(bowl_2071, coffe_maker_290)
Fail to find bowl_2071 around coffe_maker_290. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(bowl_2071, fridge_289)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(fridge_289)exp(bowl_2072, fridge_289)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(fridge_289)
Robot find: Robot is close to the fridge_289. 
##############################
From agent.py
switchoff_executor(fridge_289)
Robot find: Robot is close to the fridge_289. fridge_289 is turned off. 
##############################
From agent.py
open_executor(fridge_289)
Robot find: sauce_2078, food_steak_2008, food_apple_2009, food_bacon_2010, food_banana_2011, food_bread_2012, food_cake_2013, food_carrot_2014, food_cereal_2015, food_cheese_2016, food_chicken_2017, food_dessert_2018, food_donut_2019, food_egg_2020, food_fish_2021, food_food_2022, food_fruit_2023, food_hamburger_2024, food_ice_cream_2025, food_jam_2026, food_kiwi_2027, food_lemon_2028, food_noodles_2029, food_oatmeal_2030, food_orange_2031, food_onion_2032, food_peanut_butter_2033, food_pizza_2034, food_potato_2035, food_rice_2036, food_salt_2037, food_snack_2038, food_sugar_2039, food_turkey_2040, food_vegetable_2041, dry_pasta_2042, milk_2043, Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. fridge_289 is opened. 
##############################
From agent.py
exp(bowl_2071, fridge_289)
Fail to find bowl_2071 around fridge_289. 
##############################
From agent.py-> find a plan in act()
walk_executor(orchid_178)exp(bowl_2071, orchid_178)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(orchid_178)exp(bowl_2072, orchid_178)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(orchid_178)
Robot find: mat_173, clothes_hat_2045, clothes_gloves_2046, drawing_176, drawing_174, drawing_175, Robot is close to the orchid_178. Robot is close to the table_107. 
##############################
From agent.py
exp(bowl_2071, orchid_178)
Fail to find bowl_2071 around orchid_178. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_146)exp(bowl_2071, closetdrawer_146)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(closetdrawer_146)exp(bowl_2072, closetdrawer_146)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(closetdrawer_146)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(bowl_2071, closetdrawer_146)
Fail to find bowl_2071 around closetdrawer_146. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_146)exp(bowl_2071, closetdrawer_146)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(closetdrawer_146)exp(bowl_2072, closetdrawer_146)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(closetdrawer_146)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2071 ?
Answer: Head to the dining room, which is labeled dining_room_201. Once there, locate table_226. You will find bowl_2071 on table_226.
Re-decompose: None

##############################
From agent.py
Human Instruction: Head to the dining room, which is labeled dining_room_201. Once there, locate table_226. You will find bowl_2071 on table_226.

The actions you have taken:
Action 1: Walk to dishwasher_1001.
Action 2: Open dishwasher_1001.
Action 3: look for bowl_2071 around dishwasher_1001.
Action 4: Walk to coffe_maker_290.
Action 5: Open coffe_maker_290.
Action 6: look for bowl_2071 around coffe_maker_290.
Action 7: Walk to fridge_289.
Action 8: Switch off fridge_289.
Action 9: Open fridge_289.
Action 10: look for bowl_2071 around fridge_289.
Action 11: Walk to orchid_178.
Action 12: look for bowl_2071 around orchid_178.
Action 13: Walk to closetdrawer_146.
Action 14: look for bowl_2071 around closetdrawer_146.
Action 15: Walk to closetdrawer_146.

##############################
From agent.py
exp(bowl_2071, closetdrawer_146)
Fail to find bowl_2071 around closetdrawer_146. 
##############################
Error record: object of type 'NoneType' has no len()
##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
['walk_executor(dishwasher_1001)', 'open_executor(dishwasher_1001)', 'walk_executor(coffe_maker_290)', 'open_executor(coffe_maker_290)', 'walk_executor(fridge_289)', 'switchoff_executor(fridge_289)', 'open_executor(fridge_289)', 'walk_executor(orchid_178)', 'walk_executor(closetdrawer_146)', 'walk_executor(closetdrawer_146)']
Time info:
Time consume: 107 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 1
goal correct times: 0

Task complete rate:
Keystate: k1 - Requires: 14 steps
Action Completion Rate: 0.0
Scene_id: 0
##############################
