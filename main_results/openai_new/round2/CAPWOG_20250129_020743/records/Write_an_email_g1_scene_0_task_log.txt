From agent.py
Reset goals: The sub-goals are: 
['Turn on the computer in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_keyboard_415_around_desk_357(keyboard:item):
    goal: not unknown(keyboard)
    body:
        assert is_keyboard(keyboard)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==357
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(keyboard,desk_instance)
        else:
            exp(keyboard,desk_instance)
    eff:
        unknown[keyboard]=False
        close[keyboard,desk_instance]=True
        close[desk_instance,keyboard]=True
    

behavior find_mouse_413_around_computer_417(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==417
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(mouse,computer_instance)
        else:
            exp(mouse,computer_instance)
    eff:
        unknown[mouse]=False
        close[mouse,computer_instance]=True
        close[computer_instance,mouse]=True
    

#exp_behavior_end

#goal_representation
 
behavior turn_on_computer(computer:item):
    body:
        assert has_switch(computer)
        switch_on(computer)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
            
        bind computer: item where:
            is_computer(computer) and inside(computer, home_office)
            
        if not is_on(computer):
            turn_on_computer(computer)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior turn_on_computer(computer:item):
    body:
        assert has_switch(computer)
        switch_on(computer)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
            
        bind computer: item where:
            is_computer(computer) and inside(computer, home_office)
            
        if not is_on(computer):
            turn_on_computer(computer)

##############################
From agent.py-> find a plan in act()
walk_executor(computer_417)switchon_executor(computer_417)
##############################
From agent.py
walk_executor(computer_417)
Find chair_356. Find mouse_413. Find keyboard_415. Robot is inside the home_office_319. Robot is close to the computer_417. Robot is no longer inside bathroom_1.
##############################
From agent.py
switchon_executor(computer_417)
Find hanger_361. Find spectacles_2082. Find drawing_402. Find hanger_372. Find cat_2055. Find clothes_jacket_2047. Find book_2066. Find phone_2077. Find hanger_375. Find pencil_2001. Find pillow_405. Find hanger_367. Find pillow_406. Find remote_control_2052. Find hanger_359. Find dvd_player_2061. Find drawing_400. Find drawing_403. Find hanger_365. Find book_2067. Find hanger_376. Find hairbrush_2002. Find vacuum_cleaner_2070. Find headset_2062. Find mat_401. Find hanger_363. Find hanger_374. Find drawing_404. Find headset_2076. Find hanger_369. Robot is inside the home_office_319. Robot is close to the computer_417. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Turn on the computer in home office.
Action History:
['walk_executor(computer_417)', 'switchon_executor(computer_417)']
Time info:
Time consume: 22 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
Task complete rate:
Keystate: k1 - Requires: 0 steps
Action Completion Rate: 0.0
Scene_id: 0
##############################
