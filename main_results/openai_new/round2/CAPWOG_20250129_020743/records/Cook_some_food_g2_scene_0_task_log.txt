From agent.py
Reset goals: The sub-goals are: 
['Slice the chicken.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2017_around_fridge_289(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_knife_2050_around_closetdrawer_384(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==384
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(knife,closetdrawer_instance)
        else:
            exp(knife,closetdrawer_instance)
    eff:
        unknown[knife]=False
        close[knife,closetdrawer_instance]=True
        close[closetdrawer_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_knife():
    body:
        foreach item: item:
            if is_knife(item) and not visited(item):
                observe(item, "Checking if this is the knife required for slicing the chicken")

behavior grab_knife(knife: item):
    body:
        walk_to(knife)
        grab(knife)

behavior slice_chicken(knife: item, chicken: item):
    body:
        cuts(chicken)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken) and cuttable(chicken)
        find_knife()

        assert_exists knife: item: is_knife(knife) and visited(knife)
        bind knife: item where:
            is_knife(knife) and visited(knife)

        grab_knife(knife)
        slice_chicken(knife, chicken)


#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
[]
Time info:
Time consume: 51 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
Task complete rate:
Keystate: k1 - Requires: 13 steps
Action Completion Rate: 0.0
Scene_id: 0
##############################
