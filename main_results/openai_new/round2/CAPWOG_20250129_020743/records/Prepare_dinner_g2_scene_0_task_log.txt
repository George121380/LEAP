From agent.py
Reset goals: The sub-goals are: 
['1. Find the onion and the chicken, and place them on a prep area.', '2. Put the chicken and onion into the oven to roast.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2017_around_fridge_289(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_food_onion_2032_around_fridge_289(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_onion,fridge_instance)
        else:
            exp(food_onion,fridge_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,fridge_instance]=True
        close[fridge_instance,food_onion]=True
    

#exp_behavior_end

#goal_representation
 
def is_prep_area(location: item):
    symbol is_prep_area=exists surface: item : surfaces(surface) and inside(location, surface)
    return is_prep_area

def has_onion_and_chicken(location: item):
    symbol has_items = exists o: item : (is_food_onion(o) or is_food_chicken(o)) and inside(o, location)
    return has_items

behavior put_on_prep_area(obj: item, prep_area: item):
    body:
        put_on(obj, prep_area)

behavior __goal__():
    body:
        bind location: item where:
            is_prep_area(location)

        foreach obj: item:
            if is_food_onion(obj) or is_food_chicken(obj) and inside(obj, location):
                bind prep_area: item where:
                    is_prep_area(prep_area)
                # Move onion and chicken to the prep area
                put_on_prep_area(obj, prep_area)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_prep_area(location: item):
    symbol is_prep_area=exists surface: item : surfaces(surface) and inside(location, surface)
    return is_prep_area

def has_onion_and_chicken(location: item):
    symbol has_items = exists o: item : (is_food_onion(o) or is_food_chicken(o)) and inside(o, location)
    return has_items

behavior put_on_prep_area(obj: item, prep_area: item):
    body:
        put_on(obj, prep_area)

behavior __goal__():
    body:
        bind location: item where:
            is_prep_area(location)

        foreach obj: item:
            if is_food_onion(obj) or is_food_chicken(obj) and inside(obj, location):
                bind prep_area: item where:
                    is_prep_area(prep_area)
                # Move onion and chicken to the prep area
                put_on_prep_area(obj, prep_area)

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_onion_2032, fridge_289)walk_executor(food_onion_2032)grab_executor(food_onion_2032)walk_executor(sink_42)put_executor(food_onion_2032, sink_42)
##############################
From agent.py
walk_executor(fridge_289)
Find sauce_2078. Find food_steak_2008. Find food_apple_2009. Find food_bacon_2010. Find food_banana_2011. Find food_bread_2012. Find food_cake_2013. Find food_carrot_2014. Find food_cereal_2015. Find food_cheese_2016. Find food_chicken_2017. Find food_dessert_2018. Find food_donut_2019. Find food_egg_2020. Find food_fish_2021. Find food_food_2022. Find food_fruit_2023. Find food_hamburger_2024. Find food_ice_cream_2025. Find food_jam_2026. Find food_kiwi_2027. Find food_lemon_2028. Find food_noodles_2029. Find food_oatmeal_2030. Find food_orange_2031. Find food_onion_2032. Find food_peanut_butter_2033. Find food_pizza_2034. Find food_potato_2035. Find food_rice_2036. Find food_salt_2037. Find food_snack_2038. Find food_sugar_2039. Find food_turkey_2040. Find food_vegetable_2041. Find dry_pasta_2042. Find milk_2043. Find drawing_239. Find drawing_240. Robot is inside the dining_room_201. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the floor_202. Robot is close to the floor_203. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. Robot is no longer inside bathroom_1.
##############################
From agent.py
switchoff_executor(fridge_289)
Find mat_22. Find drawing_174. Robot is inside the dining_room_201. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the floor_202. Robot is close to the floor_203. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. 
##############################
From agent.py
open_executor(fridge_289)
Robot is inside the dining_room_201. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the floor_202. Robot is close to the floor_203. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. 
##############################
From agent.py
exp(food_onion_2032, fridge_289)
Find food_onion_2032. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_onion_2032)walk_executor(sink_42)put_executor(food_onion_2032, sink_42)
##############################
From agent.py
grab_executor(food_onion_2032)
Robot is inside the dining_room_201. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the floor_202. Robot is close to the floor_203. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. Grabbing food_onion_2032 by right hand. 
##############################
From agent.py
walk_executor(sink_42)
Find towel_rack_32. Find towel_rack_34. Find towel_rack_31. Find detergent_2084. Find soap_2053. Find basket_for_clothes_2006. Find cleaning_solution_2073. Robot is inside the bathroom_1. Robot is close to the food_onion_2032. Robot is close to the bathroom_counter_41. Robot is close to the sink_42. Robot is no longer inside dining_room_201.Robot is no longer close sauce_2078.Robot is no longer close fridge_289.Robot is no longer close floor_202.Robot is no longer close floor_203.Robot is no longer close food_steak_2008.Robot is no longer close food_apple_2009.Robot is no longer close food_bacon_2010.Robot is no longer close food_banana_2011.Robot is no longer close food_bread_2012.Robot is no longer close food_cake_2013.Robot is no longer close food_carrot_2014.Robot is no longer close food_cereal_2015.Robot is no longer close food_cheese_2016.Robot is no longer close food_chicken_2017.Robot is no longer close food_dessert_2018.Robot is no longer close food_donut_2019.Robot is no longer close food_egg_2020.Robot is no longer close food_fish_2021.Robot is no longer close food_food_2022.Robot is no longer close food_fruit_2023.Robot is no longer close food_hamburger_2024.Robot is no longer close food_ice_cream_2025.Robot is no longer close food_jam_2026.Robot is no longer close food_kiwi_2027.Robot is no longer close food_lemon_2028.Robot is no longer close food_noodles_2029.Robot is no longer close food_oatmeal_2030.Robot is no longer close food_orange_2031.Robot is no longer close food_peanut_butter_2033.Robot is no longer close food_pizza_2034.Robot is no longer close food_potato_2035.Robot is no longer close food_rice_2036.Robot is no longer close food_salt_2037.Robot is no longer close food_snack_2038.Robot is no longer close food_sugar_2039.Robot is no longer close food_turkey_2040.Robot is no longer close food_vegetable_2041.Robot is no longer close dry_pasta_2042.Robot is no longer close milk_2043.
##############################
From agent.py
put_executor(food_onion_2032, sink_42)
Find drawing_176. Robot is inside the bathroom_1. Robot is close to the food_onion_2032. Robot is close to the bathroom_counter_41. Robot is close to the sink_42. food_onion_2032 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You have found the onion and placed it on the sink, but you need to find and place both the onion and the chicken on a designated prep area to complete this sub-task.
##############################
From agent.py
Human Instruction: You have found the onion and placed it on the sink, but you need to find and place both the onion and the chicken on a designated prep area to complete this sub-task.

The actions you have taken:
Action 1: Walk to fridge_289.
Action 2: Switch off fridge_289.
Action 3: Open fridge_289.
Action 4: look for food_onion_2032 around fridge_289.
Action 5: Grab food_onion_2032.
Action 6: Walk to sink_42.
Action 7: Put food_onion_2032 on sink_42.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cutting_board_2051_around_kitchen_counter_230(cutting_board:item):
    goal: not unknown(cutting_board)
    body:
        assert is_cutting_board(cutting_board)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cutting_board,kitchen_counter_instance)
        else:
            exp(cutting_board,kitchen_counter_instance)
    eff:
        unknown[cutting_board]=False
        close[cutting_board,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cutting_board]=True
    

behavior find_knife_2050_around_oven_295(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==295
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(knife,oven_instance)
        else:
            exp(knife,oven_instance)
    eff:
        unknown[knife]=False
        close[knife,oven_instance]=True
        close[oven_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
def has_onion_and_chicken(prep_area:item):
    # Function to check if both the onion and chicken are on the prep area
    symbol has_onion_chicken=exists onion: item : exists chicken: item : is_food_onion(onion) and is_food_chicken(chicken) and on(onion, prep_area) and on(chicken, prep_area)
    return has_onion_chicken

behavior place_on_prep_area(inhand_obj:item, prep_area:item):
    body:
        put_on(inhand_obj, prep_area)

behavior __goal__():
    body:
        bind prep_area: item where:
            is_kitchen_counter(prep_area)
        # Select the prep area which is a kitchen counter

        if not has_onion_and_chicken(prep_area):
            # Check if both the onion and chicken are already on the prep area
            if not exists onion: item : is_food_onion(onion) and on(onion, prep_area):
                # If onion is not on the prep area, find it
                if exists onion: item : is_food_onion(onion) and on(onion, sink_42):
                    # If the onion is on the sink, grab it
                    bind onion: item where:
                        is_food_onion(onion) and on(onion, sink_42)
                    grab(onion)
                    place_on_prep_area(onion, prep_area)
                    empty_a_hand()

            if not exists chicken: item : is_food_chicken(chicken) and on(chicken, prep_area):
                # If chicken is not on the prep area, find it
                foreach chicken: item:
                    if is_food_chicken(chicken) and not visited(chicken):
                        observe(chicken,"Where is the chicken")
                    if is_food_chicken(chicken) and close_char(char, chicken):
                        grab(chicken)
                        place_on_prep_area(chicken, prep_area)
                        empty_a_hand()

#goal_representation_end

##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
['walk_executor(fridge_289)', 'switchoff_executor(fridge_289)', 'open_executor(fridge_289)', 'grab_executor(food_onion_2032)', 'walk_executor(sink_42)', 'put_executor(food_onion_2032, sink_42)']
Time info:
Time consume: 113 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
Task complete rate:
Keystate: k1 - Requires: 13 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
