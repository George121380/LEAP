From agent.py
Reset goals: The sub-goals are: 
['Slice some chicken and give it to the cat.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2017_around_fridge_289(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_knife_2050_around_kitchen_counter_230(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(knife,kitchen_counter_instance)
        else:
            exp(knife,kitchen_counter_instance)
    eff:
        unknown[knife]=False
        close[knife,kitchen_counter_instance]=True
        close[kitchen_counter_instance,knife]=True
    

behavior find_cat_2055_around_table_226(cat:item):
    goal: not unknown(cat)
    body:
        assert is_cat(cat)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==226
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(cat,table_instance)
        else:
            exp(cat,table_instance)
    eff:
        unknown[cat]=False
        close[cat,table_instance]=True
        close[table_instance,cat]=True
    

#exp_behavior_end

#goal_representation

def has_knife():
    # Function to check if a knife is present
    symbol has_knife=exists knife: item : is_knife(knife)
    return has_knife

def in_kitchen_counter(knife:item):
    # Function to check if the knife is on the kitchen counter
    symbol in_kitchen_counter=exists counter: item : is_kitchen_counter(counter) and on(knife, counter)
    return in_kitchen_counter

def has_cat_nearby():
    # Function to check if a cat is nearby
    symbol has_cat=exists cat: item : is_cat(cat) and close_char(char, cat)
    return has_cat

def is_cuttable_chicken(chicken: item):
    # Function to determine if the chicken is cuttable
    return is_food_chicken(chicken) and cuttable(chicken)

behavior slice_chicken(chicken: item):
    body:
        bind knife: item where:
            is_knife(knife) and in_kitchen_counter(knife)
        # Select knife on the kitchen counter

        grab(knife)
        # Grab the knife

        cuts(chicken)
        # Cut the chicken

behavior give_to_cat(chicken: item):
    body:
        if has_cat_nearby():
            bind cat: item where:
                is_cat(cat) and close_char(char, cat)
            put_close(chicken, cat)
        # Give the cut chicken to the cat

behavior __goal__():
    body:
        if has_knife() and exists chicken: item : is_cuttable_chicken(chicken):
            bind chicken: item where:
                is_cuttable_chicken(chicken)
            slice_chicken(chicken)
            give_to_cat(chicken)
        else:
            observe(knife, "Check is there a knife on kitchen counter or somewhere else")
            observe(chicken, "Check is there any chicken available")

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
[]
Time info:
Time consume: 60 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
Task complete rate:
Keystate: k1 - Requires: 11 steps
Keystate: k2 - Requires: 7 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
