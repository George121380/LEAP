From agent.py
Reset goals: The sub-goals are: 
['Wash the fish at first. Then put milk, turkey, eggs, fish and chicken on one of the table in dining room.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_turkey_2040_around_fridge_289(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_turkey,fridge_instance)
        else:
            exp(food_turkey,fridge_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,fridge_instance]=True
        close[fridge_instance,food_turkey]=True
    

behavior find_food_egg_2020_around_fridge_289(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_food_fish_2021_around_fridge_289(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_fish,fridge_instance)
        else:
            exp(food_fish,fridge_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,fridge_instance]=True
        close[fridge_instance,food_fish]=True
    

behavior find_milk_2043_around_fridge_289(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_food_chicken_2017_around_fridge_289(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_fish(fish:item, sink:item):
    body:
        achieve inside(fish, sink)
        if exists faucet:item: is_faucet(faucet) and close(faucet, sink):
            achieve_once is_on(faucet)
            wash(fish)
            achieve_once is_off(faucet)
        else:
            wash(fish)

behavior place_on_table(item:item, table:item):
    body:
        achieve on(item, table)

behavior __goal__():
    body:
        bind fish: item where:
            is_food_fish(fish)
        
        bind sink: item where:
            is_sink(sink)

        wash_fish(fish, sink)

        bind dining_room: item where:
            is_dining_room(dining_room)

        bind table: item where:
            is_table(table) and inside(table, dining_room)
        
        bind milk: item where:
            is_milk(milk)
        
        bind turkey: item where:
            is_food_turkey(turkey)
        
        bind eggs: item where:
            is_food_egg(eggs)
        
        bind chicken: item where:
            is_food_chicken(chicken)

        place_on_table(milk, table)
        place_on_table(turkey, table)
        place_on_table(eggs, table)
        place_on_table(fish, table)
        place_on_table(chicken, table)

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
[]
Time info:
Time consume: 67 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
Task complete rate:
Keystate: k1 - Requires: 7 steps
Keystate: k2 - Requires: 23 steps
Action Completion Rate: 0.0
Scene_id: 0
##############################
