From agent.py
Reset goals: The sub-goals are: 
['Make a cup of coffee using the coffee maker.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2064_around_cupboard_229(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==229
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

behavior find_coffee_filter_2000_around_kitchen_counter_230(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(coffee_filter,kitchen_counter_instance)
        else:
            exp(coffee_filter,kitchen_counter_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,kitchen_counter_instance]=True
        close[kitchen_counter_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
behavior plug_in_coffee_maker(coffee_maker:item, powersocket:item):
    body:
        achieve plugged(coffee_maker)
        # Plug in the coffee maker to the power socket

behavior fill_water_reservoir(coffee_maker:item, tap:item):
    body:
        achieve inhand(coffee_maker)
        # Temporarily hold the coffee maker to fill it with water
        achieve_once is_on(tap)
        # Turn on the tap to fill the water reservoir

        achieve_once is_off(tap)
        # Turn off the tap after filling

behavior place_coffee_filter(coffee_maker:item, coffee_filter:item):
    body:
        achieve inside(coffee_filter, coffee_maker)
        # Place the coffee filter inside the coffee maker

behavior add_coffee_grounds(coffee_maker:item, coffee_grounds:item):
    body:
        achieve inside(coffee_grounds, coffee_maker)
        # Add coffee grounds inside the coffee maker

behavior start_coffee_brewing(coffee_maker:item):
    body:
        achieve is_on(coffee_maker)
        # Start the brewing process by turning on the coffee maker

behavior pour_coffee_into_cup(coffee_maker:item, cup:item):
    body:
        achieve on(cup, kitchen_counter)
        # Place the cup on the kitchen counter under the coffee maker spout
        achieve has_water(cup)
        # Coffee is poured into the cup

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select coffee maker instance
        bind powersocket: item where:
            is_powersocket(powersocket)
        # Select a power socket instance
        bind tap: item where:
            is_faucet(tap)
        # Select a tap to fill water
        bind coffee_filter: item where:
            is_coffee_filter(coffee_filter)
        # Select a coffee filter instance
        bind coffee_grounds: item where:
            is_food(coffee_grounds) and is_coffee_grounds(coffee_grounds)
        # Select coffee grounds instance
        bind cup: item where:
            is_cup(cup)
        # Select a cup instance

        plug_in_coffee_maker(coffee_maker, powersocket)
        fill_water_reservoir(coffee_maker, tap)
        place_coffee_filter(coffee_maker, coffee_filter)
        add_coffee_grounds(coffee_maker, coffee_grounds)
        start_coffee_brewing(coffee_maker)
        pour_coffee_into_cup(coffee_maker, cup)

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
[]
Time info:
Time consume: 83 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
Task complete rate:
Keystate: k1 - Requires: 8 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
