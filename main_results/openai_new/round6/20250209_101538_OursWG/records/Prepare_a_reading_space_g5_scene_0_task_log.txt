From agent.py
Reset goals: The sub-goals are: 
['1. Find the spectacles and put them on the coffee table in the home office.', '2. Find the book and put it on the coffee table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_spectacles_2082_around_home_office_319(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==319
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(spectacles,home_office_instance)
        else:
            exp(spectacles,home_office_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,home_office_instance]=True
        close[home_office_instance,spectacles]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_place_spectacles(spectacles:item, coffee_table:item, home_office:item):
    body:
        achieve_once inside(spectacles, home_office)
        # Ensure the spectacles are inside the home office
        achieve_once on(spectacles, coffee_table)
        # Place the spectacles on the coffee table

behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select the spectacles

        bind coffee_table: item where:
            is_coffee_table(coffee_table)
        # Select the coffee table

        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office
        
        find_and_place_spectacles(spectacles, coffee_table, home_office)
        # Execute the task of finding and placing the spectacles

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_spectacles_2082_around_desk_104(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==104
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(spectacles,desk_instance)
        else:
            exp(spectacles,desk_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,desk_instance]=True
        close[desk_instance,spectacles]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_spectacles_and_put_on_table(spectacles:item, table: item):
    body:
        achieve_once on(spectacles, table)
        # Place the spectacles on the coffee table

behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select spectacles
        
        bind table: item where:
            is_coffee_table(table) and inside(table, home_office)
        # Select the coffee table in the home office
        
        find_spectacles_and_put_on_table(spectacles, table)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: home_office; available variables: [Variable<table: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_spectacles_2082_around_desk_104(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==104
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(spectacles,desk_instance)
        else:
            exp(spectacles,desk_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,desk_instance]=True
        close[desk_instance,spectacles]=True
    

#goal_representation
 
# Define a function to check if a table is inside the home office
def in_home_office(table:item):
    symbol in_home_office=exists room: item : (is_home_office(room) and inside(table, room))
    return in_home_office

behavior find_spectacles_and_put_on_table(spectacles:item, table: item):
    body:
        achieve_once on(spectacles, table)
        # Place the spectacles on the coffee table

behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select spectacles
        
        bind table: item where:
            is_coffee_table(table) and in_home_office(table)
        # Select the coffee table in the home office

        find_spectacles_and_put_on_table(spectacles, table)

#goal_representation_end

##############################
From agent.py->reset_goal
 
# Define a function to check if a table is inside the home office
def in_home_office(table:item):
    symbol in_home_office=exists room: item : (is_home_office(room) and inside(table, room))
    return in_home_office

behavior find_spectacles_and_put_on_table(spectacles:item, table: item):
    body:
        achieve_once on(spectacles, table)
        # Place the spectacles on the coffee table

behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select spectacles
        
        bind table: item where:
            is_coffee_table(table) and in_home_office(table)
        # Select the coffee table in the home office

        find_spectacles_and_put_on_table(spectacles, table)

##############################
From agent.py-> find a plan in act()
walk_executor(desk_104)exp(spectacles_2082, desk_104)walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(coffee_table_2068)put_executor(spectacles_2082, coffee_table_2068)
##############################
From agent.py
walk_executor(desk_104)
Robot find: mouse_166, keyboard_168, drawing_175, chair_103, Robot is close to the desk_104. 
##############################
From agent.py
exp(spectacles_2082, desk_104)
Fail to find spectacles_2082 around desk_104. 
##############################
From agent.py-> find a plan in act()
walk_executor(home_office_319)exp(spectacles_2082, home_office_319)walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(coffee_table_2068)put_executor(spectacles_2082, coffee_table_2068)
##############################
From agent.py
walk_executor(home_office_319)

##############################
From agent.py
exp(spectacles_2082, home_office_319)
Fail to find spectacles_2082 around home_office_319. 
##############################
From agent.py-> find a plan in act()
walk_executor(desk_357)exp(spectacles_2082, desk_357)walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(coffee_table_2068)put_executor(spectacles_2082, coffee_table_2068)
##############################
From agent.py
walk_executor(desk_357)
Robot find: keyboard_415, headset_2076, chair_356, phone_2077, mouse_413, pencil_2001, Robot is close to the desk_357. 
##############################
From agent.py
exp(spectacles_2082, desk_357)
Fail to find spectacles_2082 around desk_357. 
##############################
From agent.py-> find a plan in act()
walk_executor(home_office_319)exp(spectacles_2082, home_office_319)walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(coffee_table_2068)put_executor(spectacles_2082, coffee_table_2068)
##############################
From agent.py
walk_executor(home_office_319)

##############################
From agent.py
exp(spectacles_2082, home_office_319)
Fail to find spectacles_2082 around home_office_319. 
##############################
From agent.py-> find a plan in act()
walk_executor(home_office_319)exp(spectacles_2082, home_office_319)walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(coffee_table_2068)put_executor(spectacles_2082, coffee_table_2068)
##############################
From agent.py
walk_executor(home_office_319)

##############################
From agent.py
exp(spectacles_2082, home_office_319)
Fail to find spectacles_2082 around home_office_319. 
##############################
From agent.py-> find a plan in act()
walk_executor(home_office_319)exp(spectacles_2082, home_office_319)walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(coffee_table_2068)put_executor(spectacles_2082, coffee_table_2068)
##############################
From agent.py
walk_executor(home_office_319)

##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find spectacles_2082 ?
Answer: Go to home_office_319. Once inside, look for table_355. You will find spectacles_2082 on top of table_355.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to home_office_319. Once inside, look for table_355. You will find spectacles_2082 on top of table_355.

The actions you have taken:
Action 1: Walk to desk_104.
Action 2: look for spectacles_2082 around desk_104.
Action 3: Walk to home_office_319.
Action 4: look for spectacles_2082 around home_office_319.
Action 5: Walk to desk_357.
Action 6: look for spectacles_2082 around desk_357.
Action 7: Walk to home_office_319.
Action 8: look for spectacles_2082 around home_office_319.
Action 9: Walk to home_office_319.
Action 10: look for spectacles_2082 around home_office_319.
Action 11: Walk to home_office_319.

##############################
From agent.py
exp(spectacles_2082, home_office_319)
Fail to find spectacles_2082 around home_office_319. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_355)exp(spectacles_2082, table_355)walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(coffee_table_2068)put_executor(spectacles_2082, coffee_table_2068)
##############################
From agent.py
walk_executor(table_355)
Robot find: mat_401, headset_2062, spectacles_2082, pillow_406, remote_control_2052, clothes_jacket_2047, pillow_405, cat_2055, drawing_400, drawing_404, hairbrush_2002, vacuum_cleaner_2070, Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. 
##############################
From agent.py
exp(spectacles_2082, table_355)
Find spectacles_2082. 
##############################
From agent.py-> find a plan in act()
walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(coffee_table_2068)put_executor(spectacles_2082, coffee_table_2068)
##############################
From agent.py
walk_executor(spectacles_2082)
Robot find: Robot is close to the table_355. Robot is close to the spectacles_2082. 
##############################
From agent.py
grab_executor(spectacles_2082)
Robot find: Robot is close to the table_355. Robot is close to the spectacles_2082. Grabbing spectacles_2082 by right hand. 
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot find: Robot is close to the spectacles_2082. Robot is close to the coffee_table_2068. 
##############################
From agent.py
put_executor(spectacles_2082, coffee_table_2068)
Robot find: Robot is close to the spectacles_2082. Robot is close to the coffee_table_2068. coffee_table_2068 is close spectacles_2082. spectacles_2082 is close coffee_table_2068. spectacles_2082 is on coffee_table_2068. spectacles_2082 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2066_around_home_office_319(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==319
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(book,home_office_instance)
        else:
            exp(book,home_office_instance)
    eff:
        unknown[book]=False
        close[book,home_office_instance]=True
        close[home_office_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
def find_book_in_home_office(home_office:item):
    # Function to check if there is a book in the specified home office
    symbol found_book=exists b: item : (is_book(b) and inside(b, home_office))
    return found_book

behavior move_book_on_table(book:item, coffee_table:item):
    body:
        achieve_once on(book, coffee_table)
        # Place the book on the coffee table

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office) and id[home_office]==319
        # Select home office with ID 319

        bind coffee_table: item where:
            is_coffee_table(coffee_table)
        # Select the coffee table in the home office

        if exists book: item : (is_book(book) and inside(book, home_office)):
            # If a book is found in the home office, bind it and then move it
            bind book: item where:
                is_book(book) and inside(book, home_office)
            move_book_on_table(book, coffee_table)
        else:
            # If the book is not found, observe until finding it
            foreach book: item:
                if is_book(book) and not visited(book):
                    observe(book, "Check if the book is in the home office and move it")

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def find_book_in_home_office(home_office:item):
    # Function to check if there is a book in the specified home office
    symbol found_book=exists b: item : (is_book(b) and inside(b, home_office))
    return found_book

behavior move_book_on_table(book:item, coffee_table:item):
    body:
        achieve_once on(book, coffee_table)
        # Place the book on the coffee table

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office) and id[home_office]==319
        # Select home office with ID 319

        bind coffee_table: item where:
            is_coffee_table(coffee_table)
        # Select the coffee table in the home office

        if exists book: item : (is_book(book) and inside(book, home_office)):
            # If a book is found in the home office, bind it and then move it
            bind book: item where:
                is_book(book) and inside(book, home_office)
            move_book_on_table(book, coffee_table)
        else:
            # If the book is not found, observe until finding it
            foreach book: item:
                if is_book(book) and not visited(book):
                    observe(book, "Check if the book is in the home office and move it")

##############################
From agent.py-> find a plan in act()
walk_executor(home_office_319)exp(book_2066, home_office_319)walk_executor(book_2066)open_executor(book_2066)obs(book_2066, Check if the book is in the home office and move it)walk_executor(home_office_319)exp(book_2067, home_office_319)walk_executor(book_2067)open_executor(book_2067)obs(book_2067, Check if the book is in the home office and move it)
##############################
From agent.py
walk_executor(home_office_319)

##############################
From agent.py
exp(book_2066, home_office_319)
Fail to find book_2066 around home_office_319. 
##############################
From agent.py-> find a plan in act()
walk_executor(home_office_319)exp(book_2066, home_office_319)walk_executor(book_2066)open_executor(book_2066)obs(book_2066, Check if the book is in the home office and move it)walk_executor(home_office_319)exp(book_2067, home_office_319)walk_executor(book_2067)open_executor(book_2067)obs(book_2067, Check if the book is in the home office and move it)
##############################
From agent.py
walk_executor(home_office_319)

##############################
From agent.py
exp(book_2066, home_office_319)
Fail to find book_2066 around home_office_319. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_233)open_executor(bookshelf_233)exp(book_2066, bookshelf_233)walk_executor(book_2066)open_executor(book_2066)obs(book_2066, Check if the book is in the home office and move it)walk_executor(bookshelf_233)exp(book_2067, bookshelf_233)walk_executor(book_2067)open_executor(book_2067)obs(book_2067, Check if the book is in the home office and move it)
##############################
From agent.py
walk_executor(bookshelf_233)
Robot find: Robot is close to the bookshelf_233. 
##############################
From agent.py
open_executor(bookshelf_233)
Robot find: Robot is close to the bookshelf_233. bookshelf_233 is opened. 
##############################
From agent.py
exp(book_2066, bookshelf_233)
Fail to find book_2066 around bookshelf_233. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_101)open_executor(bookshelf_101)exp(book_2066, bookshelf_101)walk_executor(book_2066)open_executor(book_2066)obs(book_2066, Check if the book is in the home office and move it)walk_executor(bookshelf_101)exp(book_2067, bookshelf_101)walk_executor(book_2067)open_executor(book_2067)obs(book_2067, Check if the book is in the home office and move it)
##############################
From agent.py
walk_executor(bookshelf_101)
Robot find: drawing_174, drawing_176, Robot is close to the bookshelf_101. 
##############################
From agent.py
open_executor(bookshelf_101)
Robot find: Robot is close to the photoframe_185. Robot is close to the bookshelf_101. bookshelf_101 is opened. 
##############################
From agent.py
exp(book_2066, bookshelf_101)
Fail to find book_2066 around bookshelf_101. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_354)open_executor(bookshelf_354)exp(book_2066, bookshelf_354)walk_executor(book_2066)open_executor(book_2066)obs(book_2066, Check if the book is in the home office and move it)walk_executor(bookshelf_354)exp(book_2067, bookshelf_354)walk_executor(book_2067)open_executor(book_2067)obs(book_2067, Check if the book is in the home office and move it)
##############################
From agent.py
walk_executor(bookshelf_354)
Robot find: drawing_402, drawing_403, book_2066, book_2067, Robot is close to the bookshelf_354. 
##############################
From agent.py
open_executor(bookshelf_354)
Robot find: Robot is close to the bookshelf_354. Robot is close to the photoframe_430. bookshelf_354 is opened. 
##############################
From agent.py
exp(book_2066, bookshelf_354)
Find book_2066. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2066)open_executor(book_2066)obs(book_2066, Check if the book is in the home office and move it)walk_executor(book_2067)open_executor(book_2067)obs(book_2067, Check if the book is in the home office and move it)
##############################
From agent.py
walk_executor(book_2066)
Robot find: Robot is close to the bookshelf_354. Robot is close to the book_2066. 
##############################
From agent.py
open_executor(book_2066)
Robot find: Robot is close to the bookshelf_354. Robot is close to the book_2066. book_2066 is opened. 
##############################
From agent.py
obs(book_2066, Check if the book is in the home office and move it)
Get this information:  book_2066 is close to bookshelf_354. book_2066 is close to character_65. book_2066 is on bookshelf_354. book_2066 is inside home_office_319. book_2066 is OPEN.
##############################
From agent.py
walk_executor(book_2067)
Robot find: Robot is close to the bookshelf_354. Robot is close to the book_2067. 
##############################
From agent.py
open_executor(book_2067)
Robot find: Robot is close to the bookshelf_354. Robot is close to the book_2067. book_2067 is opened. 
##############################
From agent.py
obs(book_2067, Check if the book is in the home office and move it)
Get this information:  book_2067 is close to bookshelf_354. book_2067 is close to character_65. book_2067 is on bookshelf_354. book_2067 is inside home_office_319. book_2067 is OPEN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to move the book_2066, which is found at bookshelf_354 in the home office, and place it on the coffee table in the home office.
##############################
From agent.py
Human Instruction: You need to move the book_2066, which is found at bookshelf_354 in the home office, and place it on the coffee table in the home office.

The actions you have taken:
Action 1: Walk to desk_104.
Action 2: look for spectacles_2082 around desk_104.
Action 3: Walk to home_office_319.
Action 4: look for spectacles_2082 around home_office_319.
Action 5: Walk to desk_357.
Action 6: look for spectacles_2082 around desk_357.
Action 7: Walk to home_office_319.
Action 8: look for spectacles_2082 around home_office_319.
Action 9: Walk to home_office_319.
Action 10: look for spectacles_2082 around home_office_319.
Action 11: Walk to home_office_319.
Action 12: look for spectacles_2082 around home_office_319.
Action 13: Walk to table_355.
Action 14: look for spectacles_2082 around table_355.
Action 15: Walk to spectacles_2082.
Action 16: Grab spectacles_2082.
Action 17: Walk to coffee_table_2068.
Action 18: Put spectacles_2082 on coffee_table_2068.
Action 19: Walk to home_office_319.
Action 20: look for book_2066 around home_office_319.
Action 21: Walk to home_office_319.
Action 22: look for book_2066 around home_office_319.
Action 23: Walk to bookshelf_233.
Action 24: Open bookshelf_233.
Action 25: look for book_2066 around bookshelf_233.
Action 26: Walk to bookshelf_101.
Action 27: Open bookshelf_101.
Action 28: look for book_2066 around bookshelf_101.
Action 29: Walk to bookshelf_354.
Action 30: Open bookshelf_354.
Action 31: look for book_2066 around bookshelf_354.
Action 32: Walk to book_2066.
Action 33: Open book_2066.
Action 34: Observe around book_2066 with the question of Check if the book is in the home office and move it.
Action 35: Walk to book_2067.
Action 36: Open book_2067.
Action 37: Observe around book_2067 with the question of Check if the book is in the home office and move it.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2053_around_bathroom_cabinet_40(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation

behavior move_book(book:item, coffee_table:item):
    body:
        achieve_once on(book, coffee_table)
        # Place the book on the coffee table

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book]==2066
        # Select the book with ID 2066

        bind coffee_table: item where:
            is_coffee_table(coffee_table)
        # Select the coffee table in the home office

        move_book(book, coffee_table)
        # Move the book to the coffee table

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior move_book(book:item, coffee_table:item):
    body:
        achieve_once on(book, coffee_table)
        # Place the book on the coffee table

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book]==2066
        # Select the book with ID 2066

        bind coffee_table: item where:
            is_coffee_table(coffee_table)
        # Select the coffee table in the home office

        move_book(book, coffee_table)
        # Move the book to the coffee table

##############################
From agent.py-> find a plan in act()
walk_executor(book_2066)grab_executor(book_2066)walk_executor(coffee_table_2068)put_executor(book_2066, coffee_table_2068)
##############################
From agent.py
walk_executor(book_2066)
Robot find: Robot is close to the bookshelf_354. Robot is close to the book_2066. 
##############################
From agent.py
grab_executor(book_2066)
Robot find: Robot is close to the bookshelf_354. Robot is close to the book_2066. Grabbing book_2066 by right hand. 
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot find: Robot is close to the book_2066. Robot is close to the coffee_table_2068. 
##############################
From agent.py
put_executor(book_2066, coffee_table_2068)
Robot find: Robot is close to the book_2066. Robot is close to the coffee_table_2068. coffee_table_2068 is close book_2066. book_2066 is close coffee_table_2068. book_2066 is on coffee_table_2068. book_2066 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Find my spectacles and put it on the coffe table in home office. Then find the book and put it on the coffe table in home office.
Action History:
['walk_executor(desk_104)', 'walk_executor(home_office_319)', 'walk_executor(desk_357)', 'walk_executor(home_office_319)', 'walk_executor(home_office_319)', 'walk_executor(home_office_319)', 'walk_executor(table_355)', 'walk_executor(spectacles_2082)', 'grab_executor(spectacles_2082)', 'walk_executor(coffee_table_2068)', 'put_executor(spectacles_2082, coffee_table_2068)', 'walk_executor(home_office_319)', 'walk_executor(home_office_319)', 'walk_executor(bookshelf_233)', 'open_executor(bookshelf_233)', 'walk_executor(bookshelf_101)', 'open_executor(bookshelf_101)', 'walk_executor(bookshelf_354)', 'open_executor(bookshelf_354)', 'walk_executor(book_2066)', 'open_executor(book_2066)', 'walk_executor(book_2067)', 'open_executor(book_2067)', 'walk_executor(book_2066)', 'grab_executor(book_2066)', 'walk_executor(coffee_table_2068)', 'put_executor(book_2066, coffee_table_2068)']
Time info:
Time consume: 157 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 6
goal generate times: 4
goal correct times: 1
action_num: 27

Task complete rate:
Keystate: k1 - Requires: 8 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
