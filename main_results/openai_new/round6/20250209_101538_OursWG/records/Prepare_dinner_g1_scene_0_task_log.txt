From agent.py
Reset goals: The sub-goals are: 
['Boil the rice in a pot.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_2069_around_kitchen_counter_230(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(pot,kitchen_counter_instance)
        else:
            exp(pot,kitchen_counter_instance)
    eff:
        unknown[pot]=False
        close[pot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,pot]=True
    

behavior find_food_rice_2036_around_cupboard_229(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==229
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_rice,cupboard_instance)
        else:
            exp(food_rice,cupboard_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,cupboard_instance]=True
        close[cupboard_instance,food_rice]=True
    

behavior find_towel_rack_34_around_bathroom_cabinet_40(towel_rack:item):
    goal: not unknown(towel_rack)
    body:
        assert is_towel_rack(towel_rack)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel_rack,bathroom_cabinet_instance)
        else:
            exp(towel_rack,bathroom_cabinet_instance)
    eff:
        unknown[towel_rack]=False
        close[towel_rack,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel_rack]=True
    

behavior find_soap_2054_around_bathroom_cabinet_40(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        # Ensure character is close to the faucet to fill the pot
        achieve has_water(pot)
        # Fill the pot with water

behavior place_pot_on_stove_and_boil(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil the pot

behavior add_rice_to_pot(pot:item, rice:item):
    body:
        achieve_once inside(rice, pot)
        # Add rice to the pot with boiling water

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot
        
        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        bind stove: item where:
            is_stove(stove)
        # Select a stove
        
        bind rice: item where:
            is_food_rice(rice)
        # Select rice

        fill_pot_with_water(pot, faucet)
        place_pot_on_stove_and_boil(pot, stove)
        add_rice_to_pot(pot, rice)
        # Add rice to the pot and boil

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        # Ensure character is close to the faucet to fill the pot
        achieve has_water(pot)
        # Fill the pot with water

behavior place_pot_on_stove_and_boil(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil the pot

behavior add_rice_to_pot(pot:item, rice:item):
    body:
        achieve_once inside(rice, pot)
        # Add rice to the pot with boiling water

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot
        
        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        bind stove: item where:
            is_stove(stove)
        # Select a stove
        
        bind rice: item where:
            is_food_rice(rice)
        # Select rice

        fill_pot_with_water(pot, faucet)
        place_pot_on_stove_and_boil(pot, stove)
        add_rice_to_pot(pot, rice)
        # Add rice to the pot and boil

##############################
From agent.py-> find a plan in act()
walk_executor(faucet_43)walk_executor(kitchen_counter_230)exp(pot_2069, kitchen_counter_230)walk_executor(pot_2069)open_executor(pot_2069)grab_executor(pot_2069)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(stove_2065)put_executor(pot_2069, stove_2065)switchon_executor(stove_2065)walk_executor(cupboard_229)open_executor(cupboard_229)exp(food_rice_2036, cupboard_229)walk_executor(food_rice_2036)grab_executor(food_rice_2036)walk_executor(pot_2069)putin_executor(food_rice_2036, pot_2069)
##############################
From agent.py
walk_executor(faucet_43)
Robot find: towel_rack_31, towel_rack_32, towel_rack_34, Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the kitchen_counter_230. 
##############################
From agent.py
exp(pot_2069, kitchen_counter_230)
Find pot_2069. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_43)walk_executor(pot_2069)open_executor(pot_2069)grab_executor(pot_2069)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(stove_2065)put_executor(pot_2069, stove_2065)switchon_executor(stove_2065)walk_executor(cupboard_229)open_executor(cupboard_229)exp(food_rice_2036, cupboard_229)walk_executor(food_rice_2036)grab_executor(food_rice_2036)walk_executor(pot_2069)putin_executor(food_rice_2036, pot_2069)
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
walk_executor(pot_2069)
Robot find: Robot is close to the pot_2069. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
open_executor(pot_2069)
Robot find: Robot is close to the pot_2069. Robot is close to the kitchen_counter_230. pot_2069 is opened. 
##############################
From agent.py
grab_executor(pot_2069)
Robot find: Robot is close to the pot_2069. Robot is close to the kitchen_counter_230. Grabbing pot_2069 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the pot_2069. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the pot_2069. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the pot_2069. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py
walk_executor(stove_2065)
Robot find: Robot is close to the pot_2069. Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
put_executor(pot_2069, stove_2065)
Robot find: Robot is close to the pot_2069. Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. pot_2069 is close stove_2065. pot_2069 is on stove_2065. stove_2065 is close pot_2069. pot_2069 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2065)
Robot find: Robot is close to the pot_2069. Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. stove_2065 is turned on. 
##############################
From agent.py
walk_executor(cupboard_229)
Robot find: Robot is close to the cupboard_229. 
##############################
From agent.py
open_executor(cupboard_229)
Robot find: Robot is close to the cupboard_229. cupboard_229 is opened. 
##############################
From agent.py
exp(food_rice_2036, cupboard_229)
Fail to find food_rice_2036 around cupboard_229. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_43)walk_executor(walllamp_27)exp(food_rice_2036, walllamp_27)walk_executor(food_rice_2036)grab_executor(food_rice_2036)walk_executor(pot_2069)putin_executor(food_rice_2036, pot_2069)
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
walk_executor(walllamp_27)
Robot find: Robot is close to the walllamp_27. 
##############################
From agent.py
exp(food_rice_2036, walllamp_27)
Fail to find food_rice_2036 around walllamp_27. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_43)walk_executor(closetdrawer_384)exp(food_rice_2036, closetdrawer_384)walk_executor(food_rice_2036)grab_executor(food_rice_2036)walk_executor(pot_2069)putin_executor(food_rice_2036, pot_2069)
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
walk_executor(closetdrawer_384)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(food_rice_2036, closetdrawer_384)
Fail to find food_rice_2036 around closetdrawer_384. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_43)walk_executor(closetdrawer_384)exp(food_rice_2036, closetdrawer_384)walk_executor(food_rice_2036)grab_executor(food_rice_2036)walk_executor(pot_2069)putin_executor(food_rice_2036, pot_2069)
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
walk_executor(closetdrawer_384)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(food_rice_2036, closetdrawer_384)
Fail to find food_rice_2036 around closetdrawer_384. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_43)walk_executor(closetdrawer_384)exp(food_rice_2036, closetdrawer_384)walk_executor(food_rice_2036)grab_executor(food_rice_2036)walk_executor(pot_2069)putin_executor(food_rice_2036, pot_2069)
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
walk_executor(closetdrawer_384)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(food_rice_2036, closetdrawer_384)
Fail to find food_rice_2036 around closetdrawer_384. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_43)walk_executor(closetdrawer_384)exp(food_rice_2036, closetdrawer_384)walk_executor(food_rice_2036)grab_executor(food_rice_2036)walk_executor(pot_2069)putin_executor(food_rice_2036, pot_2069)
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
walk_executor(closetdrawer_384)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find food_rice_2036 ?
Answer: The target item, food_rice_2036, is located inside the fridge_289, which is situated in the dining_room_201. To find food_rice_2036, open the fridge_289.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item, food_rice_2036, is located inside the fridge_289, which is situated in the dining_room_201. To find food_rice_2036, open the fridge_289.

The actions you have taken:
Action 1: Walk to faucet_43.
Action 2: Walk to kitchen_counter_230.
Action 3: look for pot_2069 around kitchen_counter_230.
Action 4: Walk to faucet_43.
Action 5: Walk to pot_2069.
Action 6: Open pot_2069.
Action 7: Grab pot_2069.
Action 8: Walk to faucet_43.
Action 9: Switch on faucet_43.
Action 10: Switch off faucet_43.
Action 11: Walk to stove_2065.
Action 12: Put pot_2069 on stove_2065.
Action 13: Switch on stove_2065.
Action 14: Walk to cupboard_229.
Action 15: Open cupboard_229.
Action 16: look for food_rice_2036 around cupboard_229.
Action 17: Walk to faucet_43.
Action 18: Walk to walllamp_27.
Action 19: look for food_rice_2036 around walllamp_27.
Action 20: Walk to faucet_43.
Action 21: Walk to closetdrawer_384.
Action 22: look for food_rice_2036 around closetdrawer_384.
Action 23: Walk to faucet_43.
Action 24: Walk to closetdrawer_384.
Action 25: look for food_rice_2036 around closetdrawer_384.
Action 26: Walk to faucet_43.
Action 27: Walk to closetdrawer_384.
Action 28: look for food_rice_2036 around closetdrawer_384.
Action 29: Walk to faucet_43.
Action 30: Walk to closetdrawer_384.

##############################
From agent.py
exp(food_rice_2036, closetdrawer_384)
Fail to find food_rice_2036 around closetdrawer_384. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_43)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_rice_2036, fridge_289)walk_executor(food_rice_2036)grab_executor(food_rice_2036)walk_executor(pot_2069)putin_executor(food_rice_2036, pot_2069)
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
walk_executor(fridge_289)
Robot find: Robot is close to the fridge_289. 
##############################
From agent.py
switchoff_executor(fridge_289)
Robot find: Robot is close to the fridge_289. fridge_289 is turned off. 
##############################
From agent.py
open_executor(fridge_289)
Robot find: sauce_2078, food_steak_2008, food_apple_2009, food_bacon_2010, food_banana_2011, food_bread_2012, food_cake_2013, food_carrot_2014, food_cereal_2015, food_cheese_2016, food_chicken_2017, food_dessert_2018, food_donut_2019, food_egg_2020, food_fish_2021, food_food_2022, food_fruit_2023, food_hamburger_2024, food_ice_cream_2025, food_jam_2026, food_kiwi_2027, food_lemon_2028, food_noodles_2029, food_oatmeal_2030, food_orange_2031, food_onion_2032, food_peanut_butter_2033, food_pizza_2034, food_potato_2035, food_rice_2036, food_salt_2037, food_snack_2038, food_sugar_2039, food_turkey_2040, food_vegetable_2041, dry_pasta_2042, milk_2043, Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. fridge_289 is opened. 
##############################
From agent.py
exp(food_rice_2036, fridge_289)
Find food_rice_2036. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_43)walk_executor(food_rice_2036)grab_executor(food_rice_2036)walk_executor(pot_2069)putin_executor(food_rice_2036, pot_2069)
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
walk_executor(food_rice_2036)
Robot find: Robot is close to the fridge_289. Robot is close to the food_rice_2036. 
##############################
From agent.py
grab_executor(food_rice_2036)
Robot find: Robot is close to the fridge_289. Robot is close to the food_rice_2036. Grabbing food_rice_2036 by right hand. 
##############################
From agent.py
walk_executor(pot_2069)
Robot find: Robot is close to the food_rice_2036. Robot is close to the stove_2065. Robot is close to the pot_2069. 
##############################
From agent.py
putin_executor(food_rice_2036, pot_2069)
Robot find: Robot is close to the food_rice_2036. Robot is close to the stove_2065. Robot is close to the pot_2069. pot_2069 is close food_rice_2036. food_rice_2036 is inside pot_2069. food_rice_2036 is close pot_2069. food_rice_2036 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: Add water to pot_2069 and ensure it is boiling before adding rice to it.
##############################
From agent.py
Human Instruction: Add water to pot_2069 and ensure it is boiling before adding rice to it.

The actions you have taken:
Action 1: Walk to faucet_43.
Action 2: Walk to kitchen_counter_230.
Action 3: look for pot_2069 around kitchen_counter_230.
Action 4: Walk to faucet_43.
Action 5: Walk to pot_2069.
Action 6: Open pot_2069.
Action 7: Grab pot_2069.
Action 8: Walk to faucet_43.
Action 9: Switch on faucet_43.
Action 10: Switch off faucet_43.
Action 11: Walk to stove_2065.
Action 12: Put pot_2069 on stove_2065.
Action 13: Switch on stove_2065.
Action 14: Walk to cupboard_229.
Action 15: Open cupboard_229.
Action 16: look for food_rice_2036 around cupboard_229.
Action 17: Walk to faucet_43.
Action 18: Walk to walllamp_27.
Action 19: look for food_rice_2036 around walllamp_27.
Action 20: Walk to faucet_43.
Action 21: Walk to closetdrawer_384.
Action 22: look for food_rice_2036 around closetdrawer_384.
Action 23: Walk to faucet_43.
Action 24: Walk to closetdrawer_384.
Action 25: look for food_rice_2036 around closetdrawer_384.
Action 26: Walk to faucet_43.
Action 27: Walk to closetdrawer_384.
Action 28: look for food_rice_2036 around closetdrawer_384.
Action 29: Walk to faucet_43.
Action 30: Walk to closetdrawer_384.
Action 31: look for food_rice_2036 around closetdrawer_384.
Action 32: Walk to faucet_43.
Action 33: Walk to fridge_289.
Action 34: Switch off fridge_289.
Action 35: Open fridge_289.
Action 36: look for food_rice_2036 around fridge_289.
Action 37: Walk to faucet_43.
Action 38: Walk to food_rice_2036.
Action 39: Grab food_rice_2036.
Action 40: Walk to pot_2069.
Action 41: Put food_rice_2036 into pot_2069.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_1000_around_dishwasher_1001(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==1001
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(plate,dishwasher_instance)
        else:
            exp(plate,dishwasher_instance)
    eff:
        unknown[plate]=False
        close[plate,dishwasher_instance]=True
        close[dishwasher_instance,plate]=True
    

behavior find_wall_clock_249_around_bathroom_cabinet_40(wall_clock:item):
    goal: not unknown(wall_clock)
    body:
        assert is_wall_clock(wall_clock)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(wall_clock,bathroom_cabinet_instance)
        else:
            exp(wall_clock,bathroom_cabinet_instance)
    eff:
        unknown[wall_clock]=False
        close[wall_clock,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,wall_clock]=True
    

behavior find_tray_296_around_closetdrawer_392(tray:item):
    goal: not unknown(tray)
    body:
        assert is_tray(tray)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==392
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(tray,closetdrawer_instance)
        else:
            exp(tray,closetdrawer_instance)
    eff:
        unknown[tray]=False
        close[tray,closetdrawer_instance]=True
        close[closetdrawer_instance,tray]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        # Ensure character is close to the faucet before filling
        achieve has_water(pot)
        # Fill the pot with water

behavior start_boiling_rice(pot:item, rice:item, stove:item):
    body:
        achieve_once inside(rice, pot)
        # Place the rice inside the pot
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil the rice

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot] == 2069
        # Select the pot with ID 2069
        
        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet
        
        bind stove: item where:
            is_stove(stove) and id[stove] == 2065
        # Select the stove with ID 2065
        
        bind rice: item where:
            is_food_rice(rice) and id[rice] == 2036
        # Select rice with ID 2036
        
        fill_with_water(pot, faucet)
        start_boiling_rice(pot, rice, stove)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        # Ensure character is close to the faucet before filling
        achieve has_water(pot)
        # Fill the pot with water

behavior start_boiling_rice(pot:item, rice:item, stove:item):
    body:
        achieve_once inside(rice, pot)
        # Place the rice inside the pot
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil the rice

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot] == 2069
        # Select the pot with ID 2069
        
        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet
        
        bind stove: item where:
            is_stove(stove) and id[stove] == 2065
        # Select the stove with ID 2065
        
        bind rice: item where:
            is_food_rice(rice) and id[rice] == 2036
        # Select rice with ID 2036
        
        fill_with_water(pot, faucet)
        start_boiling_rice(pot, rice, stove)

##############################
From agent.py-> find a plan in act()
walk_executor(faucet_43)
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: Ensure that water is actually added to the pot before adding rice to it, as there is no action confirming that water was filled in pot_2069.
##############################
From agent.py
Human Instruction: Ensure that water is actually added to the pot before adding rice to it, as there is no action confirming that water was filled in pot_2069.

The actions you have taken:
Action 1: Walk to faucet_43.
Action 2: Walk to kitchen_counter_230.
Action 3: look for pot_2069 around kitchen_counter_230.
Action 4: Walk to faucet_43.
Action 5: Walk to pot_2069.
Action 6: Open pot_2069.
Action 7: Grab pot_2069.
Action 8: Walk to faucet_43.
Action 9: Switch on faucet_43.
Action 10: Switch off faucet_43.
Action 11: Walk to stove_2065.
Action 12: Put pot_2069 on stove_2065.
Action 13: Switch on stove_2065.
Action 14: Walk to cupboard_229.
Action 15: Open cupboard_229.
Action 16: look for food_rice_2036 around cupboard_229.
Action 17: Walk to faucet_43.
Action 18: Walk to walllamp_27.
Action 19: look for food_rice_2036 around walllamp_27.
Action 20: Walk to faucet_43.
Action 21: Walk to closetdrawer_384.
Action 22: look for food_rice_2036 around closetdrawer_384.
Action 23: Walk to faucet_43.
Action 24: Walk to closetdrawer_384.
Action 25: look for food_rice_2036 around closetdrawer_384.
Action 26: Walk to faucet_43.
Action 27: Walk to closetdrawer_384.
Action 28: look for food_rice_2036 around closetdrawer_384.
Action 29: Walk to faucet_43.
Action 30: Walk to closetdrawer_384.
Action 31: look for food_rice_2036 around closetdrawer_384.
Action 32: Walk to faucet_43.
Action 33: Walk to fridge_289.
Action 34: Switch off fridge_289.
Action 35: Open fridge_289.
Action 36: look for food_rice_2036 around fridge_289.
Action 37: Walk to faucet_43.
Action 38: Walk to food_rice_2036.
Action 39: Grab food_rice_2036.
Action 40: Walk to pot_2069.
Action 41: Put food_rice_2036 into pot_2069.
Action 42: Walk to faucet_43.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior fill_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        # Ensure character is close to the faucet before filling
        achieve has_water(pot)
        # Fill the pot with water

behavior boil_rice(pot:item, rice:item, stove:item):
    body:
        achieve_once inside(rice, pot)
        # Put the rice inside the pot
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil the rice

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot] == 2069
        # Select pot with ID 2069
        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 43
        # Select faucet with ID 43
        bind rice: item where:
            is_food_rice(rice) and id[rice] == 2036
        # Select rice with ID 2036
        bind stove: item where:
            is_stove(stove) and id[stove] == 2065
        # Select stove with ID 2065
        fill_with_water(pot, faucet)
        boil_rice(pot, rice, stove)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        # Ensure character is close to the faucet before filling
        achieve has_water(pot)
        # Fill the pot with water

behavior add_rice_to_pot(rice:item, pot:item):
    body:
        achieve_once inside(rice, pot)
        # Add the rice to the pot

behavior start_boiling_rice(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to start boiling the rice

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot] == 2069
        # Select pot with ID 2069
        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 43
        # Select faucet with ID 43
        bind rice: item where:
            is_food_rice(rice) and id[rice] == 2036
        # Select rice with ID 2036
        bind stove: item where:
            is_stove(stove) and id[stove] == 2065
        # Select stove with ID 2065
        fill_pot_with_water(pot, faucet)
        add_rice_to_pot(rice, pot)
        start_boiling_rice(pot, stove)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_hanger_374_around_closetdrawer_384(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==384
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(hanger,closetdrawer_instance)
        else:
            exp(hanger,closetdrawer_instance)
    eff:
        unknown[hanger]=False
        close[hanger,closetdrawer_instance]=True
        close[closetdrawer_instance,hanger]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once close_char(char, faucet)
        # Ensure character is close to the faucet before filling
        achieve has_water(pot)
        # Fill the pot with water

behavior boil_rice(pot:item, rice:item, stove:item):
    body:
        achieve_once inside(rice, pot)
        # Place the rice inside the pot
        achieve_once on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil the rice

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot] == 2069
        # Select pot with ID 2069
        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 43
        # Select faucet with ID 43
        bind rice: item where:
            is_food_rice(rice) and id[rice] == 2036
        # Select rice with ID 2036
        bind stove: item where:
            is_stove(stove) and id[stove] == 2065
        # Select stove with ID 2065
        fill_pot_with_water(pot, faucet)
        boil_rice(pot, rice, stove)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "boil the rice in a pot." ?
Answer: Fill the pot with water. Put the rice into the pot. Put the pot on the stove and turn on the stove.
Re-decompose: False

##############################
Error record: 'OursWG' object has no attribute 'refineme'
##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
['walk_executor(faucet_43)', 'walk_executor(kitchen_counter_230)', 'walk_executor(faucet_43)', 'walk_executor(pot_2069)', 'open_executor(pot_2069)', 'grab_executor(pot_2069)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'switchoff_executor(faucet_43)', 'walk_executor(stove_2065)', 'put_executor(pot_2069, stove_2065)', 'switchon_executor(stove_2065)', 'walk_executor(cupboard_229)', 'open_executor(cupboard_229)', 'walk_executor(faucet_43)', 'walk_executor(walllamp_27)', 'walk_executor(faucet_43)', 'walk_executor(closetdrawer_384)', 'walk_executor(faucet_43)', 'walk_executor(closetdrawer_384)', 'walk_executor(faucet_43)', 'walk_executor(closetdrawer_384)', 'walk_executor(faucet_43)', 'walk_executor(closetdrawer_384)', 'walk_executor(faucet_43)', 'walk_executor(fridge_289)', 'switchoff_executor(fridge_289)', 'open_executor(fridge_289)', 'walk_executor(faucet_43)', 'walk_executor(food_rice_2036)', 'grab_executor(food_rice_2036)', 'walk_executor(pot_2069)', 'putin_executor(food_rice_2036, pot_2069)', 'walk_executor(faucet_43)']
Time info:
Time consume: 160 seconds
Exp_helper query times: 1
Guidance query times: 1
library scale: 43
goal generate times: 5
goal correct times: 0
action_num: 34

Task complete rate:
Keystate: k1 - Requires: 0 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
