From agent.py
Reset goals: The sub-goals are: 
['Make a cup of coffee using the coffee maker.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_coffee_filter_2000_around_kitchen_counter_230(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(coffee_filter,kitchen_counter_instance)
        else:
            exp(coffee_filter,kitchen_counter_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,kitchen_counter_instance]=True
        close[kitchen_counter_instance,coffee_filter]=True
    

behavior find_cup_2063_around_coffe_maker_290(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind coffe_maker_instance:item where:
            is_coffe_maker(coffe_maker_instance) and id[coffe_maker_instance]==290
        achieve close_char(char,coffe_maker_instance)
        if can_open(coffe_maker_instance):
            achieve_once open(coffe_maker_instance)
            exp(cup,coffe_maker_instance)
        else:
            exp(cup,coffe_maker_instance)
    eff:
        unknown[cup]=False
        close[cup,coffe_maker_instance]=True
        close[coffe_maker_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior brew_coffee(coffee_maker:item, cup:item):
    body:
        achieve_once inside(cup, coffee_maker)
        # Place the cup under the coffee makers output
        achieve_once is_on(coffee_maker)
        # Turn on the coffee maker to start brewing

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select a coffee maker

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        brew_coffee(coffee_maker, cup)
        # Brew coffee into the cup using the coffee maker

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior brew_coffee(coffee_maker:item, cup:item):
    body:
        achieve_once inside(cup, coffee_maker)
        # Place the cup under the coffee makers output
        achieve_once is_on(coffee_maker)
        # Turn on the coffee maker to start brewing

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select a coffee maker

        bind cup: item where:
            is_cup(cup)
        # Select a cup

        brew_coffee(coffee_maker, cup)
        # Brew coffee into the cup using the coffee maker

##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_290)open_executor(coffe_maker_290)exp(cup_2064, coffe_maker_290)walk_executor(cup_2064)grab_executor(cup_2064)walk_executor(coffe_maker_290)putin_executor(cup_2064, coffe_maker_290)close_executor(coffe_maker_290)switchon_executor(coffe_maker_290)
##############################
From agent.py
walk_executor(coffe_maker_290)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the coffe_maker_290. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
open_executor(coffe_maker_290)
Robot find: Robot is close to the coffe_maker_290. Robot is close to the kitchen_counter_230. coffe_maker_290 is opened. 
##############################
From agent.py
exp(cup_2064, coffe_maker_290)
Find cup_2064. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2064)grab_executor(cup_2064)walk_executor(coffe_maker_290)putin_executor(cup_2064, coffe_maker_290)close_executor(coffe_maker_290)switchon_executor(coffe_maker_290)
##############################
From agent.py
walk_executor(cup_2064)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the cup_2064. 
##############################
From agent.py
grab_executor(cup_2064)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the cup_2064. Grabbing cup_2064 by right hand. 
##############################
From agent.py
walk_executor(coffe_maker_290)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the cup_2064. Robot is close to the coffe_maker_290. 
##############################
From agent.py
putin_executor(cup_2064, coffe_maker_290)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the cup_2064. Robot is close to the coffe_maker_290. coffe_maker_290 is close cup_2064. cup_2064 is inside coffe_maker_290. cup_2064 is close coffe_maker_290. cup_2064 released by right hand. 
##############################
From agent.py
close_executor(coffe_maker_290)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the coffe_maker_290. coffe_maker_290 is closed. 
##############################
From agent.py
switchon_executor(coffe_maker_290)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the coffe_maker_290. coffe_maker_290 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make a cup of coffee using the coffee maker.
Action History:
['walk_executor(coffe_maker_290)', 'open_executor(coffe_maker_290)', 'walk_executor(cup_2064)', 'grab_executor(cup_2064)', 'walk_executor(coffe_maker_290)', 'putin_executor(cup_2064, coffe_maker_290)', 'close_executor(coffe_maker_290)', 'switchon_executor(coffe_maker_290)']
Time info:
Time consume: 33 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 48
goal generate times: 1
goal correct times: 0
action_num: 8

Task complete rate:
1
Scene_id: 0
##############################
