From agent.py
Reset goals: The sub-goals are: 
['1. Find the CD player and open its tray.', '2. Insert the CD into the tray and close it.', '3. Press the play button on the CD player to start playing music.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cd_player_2129_around_computer_209(cd_player:item):
    goal: not unknown(cd_player)
    body:
        assert is_cd_player(cd_player)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==209
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(cd_player,computer_instance)
        else:
            exp(cd_player,computer_instance)
    eff:
        unknown[cd_player]=False
        close[cd_player,computer_instance]=True
        close[computer_instance,cd_player]=True
    

behavior find_tray_128_around_dishwasher_129(tray:item):
    goal: not unknown(tray)
    body:
        assert is_tray(tray)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==129
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(tray,dishwasher_instance)
        else:
            exp(tray,dishwasher_instance)
    eff:
        unknown[tray]=False
        close[tray,dishwasher_instance]=True
        close[dishwasher_instance,tray]=True
    

#exp_behavior_end

#goal_representation
 
def is_cd_player_target(cd_player:item):
    symbol cd_player_target=exists obj: item : is_cd_player(cd_player)
    return cd_player_target

behavior find_and_open_cd_player(cd_player:item):
    body:
        if not visited(cd_player):
            walk_to(cd_player)
            observe(cd_player,"Check if the CD player can be opened")
            if can_open(cd_player) and closed(cd_player):
                opens(cd_player)

behavior __goal__():
    body:
        bind cd_player: item where:
            is_cd_player(cd_player) and is_cd_player_target(cd_player)
        find_and_open_cd_player(cd_player)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cd_player_2129_around_computer_209(cd_player:item):
    goal: not unknown(cd_player)
    body:
        assert is_cd_player(cd_player)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==209
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(cd_player,computer_instance)
        else:
            exp(cd_player,computer_instance)
    eff:
        unknown[cd_player]=False
        close[cd_player,computer_instance]=True
        close[computer_instance,cd_player]=True
    

behavior find_tray_2068_around_computer_209(tray:item):
    goal: not unknown(tray)
    body:
        assert is_tray(tray)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==209
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(tray,computer_instance)
        else:
            exp(tray,computer_instance)
    eff:
        unknown[tray]=False
        close[tray,computer_instance]=True
        close[computer_instance,tray]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind cd_player: item where:
            is_cd_player(cd_player)
        # Bind the CD player to interact with it
        if not close_char(char, cd_player):
            walk_to(cd_player)
        # Walk towards the CD player if not already close
        if not open(cd_player):
            opens(cd_player)
        # Open the CD player tray if its not already open

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior __goal__():
    body:
        bind cd_player: item where:
            is_cd_player(cd_player)
        # Bind the CD player to interact with it
        if not close_char(char, cd_player):
            walk_to(cd_player)
        # Walk towards the CD player if not already close
        if not open(cd_player):
            opens(cd_player)
        # Open the CD player tray if its not already open

##############################
From agent.py-> find a plan in act()
walk_executor(computer_209)exp(cd_player_2129, computer_209)walk_executor(cd_player_2129)open_executor(cd_player_2129)
##############################
From agent.py
walk_executor(computer_209)
Robot find: chair_194, keyboard_211, mouse_213, Robot is close to the computer_209. 
##############################
From agent.py
exp(cd_player_2129, computer_209)
Fail to find cd_player_2129 around computer_209. 
##############################
From agent.py-> find a plan in act()
walk_executor(desk_272)exp(cd_player_2129, desk_272)walk_executor(cd_player_2129)open_executor(cd_player_2129)
##############################
From agent.py
walk_executor(desk_272)
Robot find: stamp_2022, phone_2147, mouse_280, keyboard_278, headset_2146, chair_271, stamp_2043, Robot is close to the desk_272. 
##############################
From agent.py
exp(cd_player_2129, desk_272)
Fail to find cd_player_2129 around desk_272. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_270)exp(cd_player_2129, table_270)walk_executor(cd_player_2129)open_executor(cd_player_2129)
##############################
From agent.py
walk_executor(table_270)
Robot find: shoes_2033, shampoo_2019, pillow_286, pencil_2014, phone_2017, pillow_287, drawing_288, brush_2002, Robot is close to the couch_269. Robot is close to the table_270. 
##############################
From agent.py
exp(cd_player_2129, table_270)
Fail to find cd_player_2129 around table_270. 
##############################
From agent.py-> find a plan in act()
walk_executor(chair_271)exp(cd_player_2129, chair_271)walk_executor(cd_player_2129)open_executor(cd_player_2129)
##############################
From agent.py
walk_executor(chair_271)
Robot find: mat_284, Robot is close to the chair_271. 
##############################
From agent.py
exp(cd_player_2129, chair_271)
Fail to find cd_player_2129 around chair_271. 
##############################
From agent.py-> find a plan in act()
walk_executor(tvstand_273)exp(cd_player_2129, tvstand_273)walk_executor(cd_player_2129)open_executor(cd_player_2129)
##############################
From agent.py
walk_executor(tvstand_273)
Robot find: cd_2145, headset_2131, cd_player_2129, remote_control_2124, dvd_player_2130, Robot is close to the tvstand_273. 
##############################
From agent.py
exp(cd_player_2129, tvstand_273)
Find cd_player_2129. 
##############################
From agent.py-> find a plan in act()
walk_executor(cd_player_2129)open_executor(cd_player_2129)
##############################
From agent.py
walk_executor(cd_player_2129)
Robot find: Robot is close to the tvstand_273. Robot is close to the cd_player_2129. 
##############################
From agent.py
open_executor(cd_player_2129)
Robot find: Robot is close to the tvstand_273. Robot is close to the cd_player_2129. cd_player_2129 is opened. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cd_2030_around_dvd_player_2130(cd:item):
    goal: not unknown(cd)
    body:
        assert is_cd(cd)
        bind dvd_player_instance:item where:
            is_dvd_player(dvd_player_instance) and id[dvd_player_instance]==2130
        achieve close_char(char,dvd_player_instance)
        if can_open(dvd_player_instance):
            achieve_once open(dvd_player_instance)
            exp(cd,dvd_player_instance)
        else:
            exp(cd,dvd_player_instance)
    eff:
        unknown[cd]=False
        close[cd,dvd_player_instance]=True
        close[dvd_player_instance,cd]=True
    

#exp_behavior_end

#goal_representation
 
behavior insert_cd(cd:item, cd_player:item):
    body:
        if not inside(cd, cd_player):
            put_inside(cd, cd_player)

behavior close_cd_player(cd_player:item):
    body:
        if open(cd_player):
            closes(cd_player)

behavior __goal__():
    body:
        bind cd_player: item where:
            is_cd_player(cd_player)
        # Select the cd player
        bind cd: item where:
            is_cd(cd)
        # Select the CD
        insert_cd(cd, cd_player)
        close_cd_player(cd_player)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior insert_cd(cd:item, cd_player:item):
    body:
        if not inside(cd, cd_player):
            put_inside(cd, cd_player)

behavior close_cd_player(cd_player:item):
    body:
        if open(cd_player):
            closes(cd_player)

behavior __goal__():
    body:
        bind cd_player: item where:
            is_cd_player(cd_player)
        # Select the cd player
        bind cd: item where:
            is_cd(cd)
        # Select the CD
        insert_cd(cd, cd_player)
        close_cd_player(cd_player)

##############################
From agent.py-> find a plan in act()
walk_executor(cd_2145)grab_executor(cd_2145)walk_executor(cd_player_2129)putin_executor(cd_2145, cd_player_2129)close_executor(cd_player_2129)
##############################
From agent.py
walk_executor(cd_2145)
Robot find: Robot is close to the tvstand_273. Robot is close to the cd_2145. 
##############################
From agent.py
grab_executor(cd_2145)
Robot find: Robot is close to the tvstand_273. Robot is close to the cd_2145. Grabbing cd_2145 by right hand. 
##############################
From agent.py
walk_executor(cd_player_2129)
Robot find: Robot is close to the tvstand_273. Robot is close to the cd_2145. Robot is close to the cd_player_2129. 
##############################
From agent.py
putin_executor(cd_2145, cd_player_2129)
Robot find: Robot is close to the tvstand_273. Robot is close to the cd_2145. Robot is close to the cd_player_2129. cd_2145 is close cd_player_2129. cd_player_2129 is close cd_2145. cd_2145 is inside cd_player_2129. cd_2145 released by right hand. 
##############################
From agent.py
close_executor(cd_player_2129)
Robot find: Robot is close to the tvstand_273. Robot is close to the cd_player_2129. cd_player_2129 is closed. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cd_2145_around_bookshelf_196(cd:item):
    goal: not unknown(cd)
    body:
        assert is_cd(cd)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==196
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(cd,bookshelf_instance)
        else:
            exp(cd,bookshelf_instance)
    eff:
        unknown[cd]=False
        close[cd,bookshelf_instance]=True
        close[bookshelf_instance,cd]=True
    

behavior find_stereo_2050_around_dvd_player_2130(stereo:item):
    goal: not unknown(stereo)
    body:
        assert is_stereo(stereo)
        bind dvd_player_instance:item where:
            is_dvd_player(dvd_player_instance) and id[dvd_player_instance]==2130
        achieve close_char(char,dvd_player_instance)
        if can_open(dvd_player_instance):
            achieve_once open(dvd_player_instance)
            exp(stereo,dvd_player_instance)
        else:
            exp(stereo,dvd_player_instance)
    eff:
        unknown[stereo]=False
        close[stereo,dvd_player_instance]=True
        close[dvd_player_instance,stereo]=True
    

#exp_behavior_end

#goal_representation
 
behavior press_play(cd_player:item):
    body:
        if closed(cd_player):
            switch_on(cd_player)
            # Press the play button to start playing music

behavior __goal__():
    body:
        bind cd_player: item where:
            is_cd_player(cd_player)
        # Bind the CD player
        press_play(cd_player)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior press_play(cd_player:item):
    body:
        if closed(cd_player):
            switch_on(cd_player)
            # Press the play button to start playing music

behavior __goal__():
    body:
        bind cd_player: item where:
            is_cd_player(cd_player)
        # Bind the CD player
        press_play(cd_player)

##############################
From agent.py-> find a plan in act()
plugin_executor(cd_player_2129)switchon_executor(cd_player_2129)
##############################
From agent.py
plugin_executor(cd_player_2129)
Robot find: Robot is close to the tvstand_273. Robot is close to the cd_player_2129. cd_player_2129 is plugged in. 
##############################
From agent.py
switchon_executor(cd_player_2129)
Robot find: Robot is close to the tvstand_273. Robot is close to the cd_player_2129. cd_player_2129 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to press the play button on the CD player to start playing music.
##############################
From agent.py
Human Instruction: You need to press the play button on the CD player to start playing music.

The actions you have taken:
Action 1: Walk to computer_209.
Action 2: look for cd_player_2129 around computer_209.
Action 3: Walk to desk_272.
Action 4: look for cd_player_2129 around desk_272.
Action 5: Walk to table_270.
Action 6: look for cd_player_2129 around table_270.
Action 7: Walk to chair_271.
Action 8: look for cd_player_2129 around chair_271.
Action 9: Walk to tvstand_273.
Action 10: look for cd_player_2129 around tvstand_273.
Action 11: Walk to cd_player_2129.
Action 12: Open cd_player_2129.
Action 13: Walk to cd_2145.
Action 14: Grab cd_2145.
Action 15: Walk to cd_player_2129.
Action 16: Put cd_2145 into cd_player_2129.
Action 17: Close cd_player_2129.
Action 18: Plug in cd_player_2129.
Action 19: Switch on cd_player_2129.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cd_2145_around_curtain_204(cd:item):
    goal: not unknown(cd)
    body:
        assert is_cd(cd)
        bind curtain_instance:item where:
            is_curtain(curtain_instance) and id[curtain_instance]==204
        achieve close_char(char,curtain_instance)
        if can_open(curtain_instance):
            achieve_once open(curtain_instance)
            exp(cd,curtain_instance)
        else:
            exp(cd,curtain_instance)
    eff:
        unknown[cd]=False
        close[cd,curtain_instance]=True
        close[curtain_instance,cd]=True
    

behavior find_stereo_2050_around_tvstand_116(stereo:item):
    goal: not unknown(stereo)
    body:
        assert is_stereo(stereo)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==116
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(stereo,tvstand_instance)
        else:
            exp(stereo,tvstand_instance)
    eff:
        unknown[stereo]=False
        close[stereo,tvstand_instance]=True
        close[tvstand_instance,stereo]=True
    

#exp_behavior_end

#goal_representation

behavior press_play_button(cd_player:item):
    body:
        if close_char(char, cd_player):
            touch(cd_player)
            # Press the play button

behavior __goal__():
    body:
        bind cd_player: item where:
            is_cd_player(cd_player)
        # Select the CD player
        press_play_button(cd_player)
        # Press the play button to start playing music

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior press_play_button(cd_player:item):
    body:
        if close_char(char, cd_player):
            touch(cd_player)
            # Press the play button

behavior __goal__():
    body:
        bind cd_player: item where:
            is_cd_player(cd_player)
        # Select the CD player
        press_play_button(cd_player)
        # Press the play button to start playing music

##############################
From agent.py-> find a plan in act()
touch_executor(cd_player_2129)
##############################
From agent.py
touch_executor(cd_player_2129)
Robot find: Robot is close to the tvstand_273. Robot is close to the cd_player_2129. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Insert a CD and play music using the CD player.
Action History:
['walk_executor(computer_209)', 'walk_executor(desk_272)', 'walk_executor(table_270)', 'walk_executor(chair_271)', 'walk_executor(tvstand_273)', 'walk_executor(cd_player_2129)', 'open_executor(cd_player_2129)', 'walk_executor(cd_2145)', 'grab_executor(cd_2145)', 'walk_executor(cd_player_2129)', 'putin_executor(cd_2145, cd_player_2129)', 'close_executor(cd_player_2129)', 'plugin_executor(cd_player_2129)', 'switchon_executor(cd_player_2129)', 'touch_executor(cd_player_2129)']
Time info:
Time consume: 127 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 5
goal correct times: 0
action_num: 15

Task complete rate:
1
Scene_id: 1
##############################
