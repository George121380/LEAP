From agent.py
Reset goals: The sub-goals are: 
['Make chicken pasta, put it in a plate.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_dry_pasta_2114_around_cupboard_117(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(dry_pasta,cupboard_instance)
        else:
            exp(dry_pasta,cupboard_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,cupboard_instance]=True
        close[cupboard_instance,dry_pasta]=True
    

behavior find_pot_2040_around_cupboard_117(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(pot,cupboard_instance)
        else:
            exp(pot,cupboard_instance)
    eff:
        unknown[pot]=False
        close[pot,cupboard_instance]=True
        close[cupboard_instance,pot]=True
    

behavior find_wooden_spoon_2000_around_cupboard_117(wooden_spoon:item):
    goal: not unknown(wooden_spoon)
    body:
        assert is_wooden_spoon(wooden_spoon)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(wooden_spoon,cupboard_instance)
        else:
            exp(wooden_spoon,cupboard_instance)
    eff:
        unknown[wooden_spoon]=False
        close[wooden_spoon,cupboard_instance]=True
        close[cupboard_instance,wooden_spoon]=True
    

behavior find_plate_2152_around_cupboard_117(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(plate,cupboard_instance)
        else:
            exp(plate,cupboard_instance)
    eff:
        unknown[plate]=False
        close[plate,cupboard_instance]=True
        close[cupboard_instance,plate]=True
    

behavior find_sauce_2148_around_cupboard_117(sauce:item):
    goal: not unknown(sauce)
    body:
        assert is_sauce(sauce)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(sauce,cupboard_instance)
        else:
            exp(sauce,cupboard_instance)
    eff:
        unknown[sauce]=False
        close[sauce,cupboard_instance]=True
        close[cupboard_instance,sauce]=True
    

behavior find_food_chicken_2089_around_fridge_126(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

#exp_behavior_end

#goal_representation

behavior make_chicken_pasta_put_on_plate(chicken:item, dry_pasta:item, pot:item, stove:item, sauce:item, mixing_spoon:item, plate:item):
    body:
        achieve_once inside(chicken, pot) # Place chicken pieces inside the pot
        achieve_once inside(dry_pasta, pot) # Add dry pasta to the pot with chicken
        achieve_once inside(sauce, pot) # Add sauce to the pot
        achieve_once is_on(stove) # Turn on the stove to cook the ingredients
        achieve_once has_water(pot) # Ensure pot has water for boiling pasta
        achieve_once clean(mixing_spoon) # Ensure the mixing spoon is clean for mixing
        achieve_once cut(chicken) # Ensure the chicken is cut before cooking
        achieve_once on(chicken, plate) # Once cooked, place the pasta on a plate
        
behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select an item as chicken
        
        bind dry_pasta: item where:
            is_dry_pasta(dry_pasta)
        # Select an item as dry pasta
        
        bind pot: item where:
            is_pot(pot)
        # Choose a pot for cooking
        
        bind stove: item where:
            is_stove(stove)
        # Choose a stove for cooking
        
        bind sauce: item where:
            is_sauce(sauce)
        # Select a sauce for the dish
        
        bind mixing_spoon: item where:
            is_wooden_spoon(mixing_spoon)
        # Select a spoon for mixing
        
        bind plate: item where:
            is_plate(plate)
        # Select a plate for serving the dish

        make_chicken_pasta_put_on_plate(chicken, dry_pasta, pot, stove, sauce, mixing_spoon, plate)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_dry_pasta_2114_around_cupboard_117(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(dry_pasta,cupboard_instance)
        else:
            exp(dry_pasta,cupboard_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,cupboard_instance]=True
        close[cupboard_instance,dry_pasta]=True
    

behavior find_pot_78_around_cupboard_117(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(pot,cupboard_instance)
        else:
            exp(pot,cupboard_instance)
    eff:
        unknown[pot]=False
        close[pot,cupboard_instance]=True
        close[cupboard_instance,pot]=True
    

behavior find_plate_2152_around_cupboard_117(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(plate,cupboard_instance)
        else:
            exp(plate,cupboard_instance)
    eff:
        unknown[plate]=False
        close[plate,cupboard_instance]=True
        close[cupboard_instance,plate]=True
    

behavior find_food_chicken_2089_around_fridge_126(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

#exp_behavior_end

#goal_representation
 
behavior cook_chicken_pasta(chicken:item, dry_pasta:item, pot:item, stove:item):
    body:
        achieve_once inside(chicken, pot) # Place chicken in pot
        achieve_once inside(dry_pasta, pot) # Place dry pasta in pot
        achieve_once is_on(stove) # Turn on stove

behavior serve_on_plate(chicken_pasta:item, plate:item):
    body:
        achieve_once on(chicken_pasta, plate) # Serve the chicken pasta on a plate

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select chicken as an ingredient
        bind dry_pasta: item where:
            is_dry_pasta(dry_pasta)
        # Select dry pasta as an ingredient
        bind pot: item where:
            is_pot(pot)
        # Select cooking pot
        bind stove: item where:
            is_stove(stove)
        # Select stove as cooking appliance

        bind plate: item where:
            is_plate(plate)
        # Select plate for serving

        cook_chicken_pasta(chicken, dry_pasta, pot, stove)
        # Cooking the chicken pasta
        
        bind cooked_pasta: item where:
            is_food(dry_pasta) and inside(dry_pasta, pot)
        serve_on_plate(cooked_pasta, plate)
        # Serve cooked chicken pasta on a plate

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_dry_pasta_2114_around_cupboard_117(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(dry_pasta,cupboard_instance)
        else:
            exp(dry_pasta,cupboard_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,cupboard_instance]=True
        close[cupboard_instance,dry_pasta]=True
    

behavior find_pot_78_around_cupboard_117(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(pot,cupboard_instance)
        else:
            exp(pot,cupboard_instance)
    eff:
        unknown[pot]=False
        close[pot,cupboard_instance]=True
        close[cupboard_instance,pot]=True
    

behavior find_plate_2152_around_cupboard_117(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(plate,cupboard_instance)
        else:
            exp(plate,cupboard_instance)
    eff:
        unknown[plate]=False
        close[plate,cupboard_instance]=True
        close[cupboard_instance,plate]=True
    

behavior find_food_chicken_2089_around_fridge_126(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_sauce_2148_around_cupboard_117(sauce:item):
    goal: not unknown(sauce)
    body:
        assert is_sauce(sauce)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(sauce,cupboard_instance)
        else:
            exp(sauce,cupboard_instance)
    eff:
        unknown[sauce]=False
        close[sauce,cupboard_instance]=True
        close[cupboard_instance,sauce]=True
    

#exp_behavior_end

#goal_representation
 
behavior cook_chicken_pasta(chicken:item, pasta:item, sauce:item, pot:item, stove:item, plate:item):
    body:
        achieve_once inside(chicken, pot) # Place chicken in the pot
        achieve_once inside(pasta, pot) # Place pasta in the pot
        achieve_once inside(sauce, pot) # Add sauce to the pot
        achieve_once closed(pot) # Cover the pot
        achieve_once is_on(stove) # Turn on the stove to cook
        achieve_once clean(pot) # Make sure the pot is clean before serving

behavior serve_on_plate(food:item, plate:item):
    body:
        achieve_once on(food, plate) # Place the cooked chicken pasta on the plate

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select a chicken item
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select a pasta item
        bind sauce: item where:
            is_sauce(sauce)
        # Select a sauce item
        bind pot: item where:
            is_pot(pot)
        # Select a pot
        bind stove: item where:
            is_stove(stove)
        # Select a stove
        bind plate: item where:
            is_plate(plate)
        # Select a plate
        
        cook_chicken_pasta(chicken, pasta, sauce, pot, stove, plate)
        serve_on_plate(chicken, plate) # Serve cooked chicken pasta on plate

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior cook_chicken_pasta(chicken:item, pasta:item, sauce:item, pot:item, stove:item, plate:item):
    body:
        achieve_once inside(chicken, pot) # Place chicken in the pot
        achieve_once inside(pasta, pot) # Place pasta in the pot
        achieve_once inside(sauce, pot) # Add sauce to the pot
        achieve_once closed(pot) # Cover the pot
        achieve_once is_on(stove) # Turn on the stove to cook
        achieve_once clean(pot) # Make sure the pot is clean before serving

behavior serve_on_plate(food:item, plate:item):
    body:
        achieve_once on(food, plate) # Place the cooked chicken pasta on the plate

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select a chicken item
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Select a pasta item
        bind sauce: item where:
            is_sauce(sauce)
        # Select a sauce item
        bind pot: item where:
            is_pot(pot)
        # Select a pot
        bind stove: item where:
            is_stove(stove)
        # Select a stove
        bind plate: item where:
            is_plate(plate)
        # Select a plate
        
        cook_chicken_pasta(chicken, pasta, sauce, pot, stove, plate)
        serve_on_plate(chicken, plate) # Serve cooked chicken pasta on plate

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(pot_78, cupboard_117)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_chicken_2089, fridge_126)walk_executor(pot_78)open_executor(pot_78)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(pot_78)putin_executor(food_chicken_2089, pot_78)walk_executor(cupboard_117)exp(dry_pasta_2114, cupboard_117)walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(pot_78)putin_executor(dry_pasta_2114, pot_78)walk_executor(cupboard_117)exp(sauce_2148, cupboard_117)walk_executor(sauce_2148)grab_executor(sauce_2148)walk_executor(pot_78)putin_executor(sauce_2148, pot_78)close_executor(pot_78)walk_executor(stove_2135)switchon_executor(stove_2135)walk_executor(pot_78)grab_executor(pot_78)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(pot_78)switchoff_executor(faucet_20)walk_executor(cupboard_117)exp(plate_2152, cupboard_117)walk_executor(pot_78)open_executor(pot_78)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(plate_2152)put_executor(food_chicken_2089, plate_2152)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, pot_78, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(pot_78, cupboard_117)
Find pot_78. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_chicken_2089, fridge_126)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(pot_78)putin_executor(food_chicken_2089, pot_78)walk_executor(cupboard_117)exp(dry_pasta_2114, cupboard_117)walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(pot_78)putin_executor(dry_pasta_2114, pot_78)walk_executor(cupboard_117)exp(sauce_2148, cupboard_117)walk_executor(sauce_2148)grab_executor(sauce_2148)walk_executor(pot_78)putin_executor(sauce_2148, pot_78)close_executor(pot_78)walk_executor(stove_2135)switchon_executor(stove_2135)walk_executor(cupboard_117)exp(plate_2152, cupboard_117)walk_executor(pot_78)open_executor(pot_78)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(plate_2152)put_executor(food_chicken_2089, plate_2152)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_chicken_2089, fridge_126)
Find food_chicken_2089. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_chicken_2089)walk_executor(pot_78)putin_executor(food_chicken_2089, pot_78)walk_executor(cupboard_117)exp(dry_pasta_2114, cupboard_117)walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(pot_78)putin_executor(dry_pasta_2114, pot_78)walk_executor(sauce_2148)grab_executor(sauce_2148)walk_executor(pot_78)putin_executor(sauce_2148, pot_78)close_executor(pot_78)walk_executor(stove_2135)switchon_executor(stove_2135)walk_executor(cupboard_117)exp(plate_2152, cupboard_117)walk_executor(pot_78)open_executor(pot_78)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(plate_2152)put_executor(food_chicken_2089, plate_2152)
##############################
From agent.py
grab_executor(food_chicken_2089)
Robot find: Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. Grabbing food_chicken_2089 by right hand. 
##############################
From agent.py
walk_executor(pot_78)
Robot find: food_food_2064, Robot is close to the food_chicken_2089. Robot is close to the pot_78. Robot is close to the oven_127. 
##############################
From agent.py
putin_executor(food_chicken_2089, pot_78)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the pot_78. Robot is close to the oven_127. pot_78 is close food_chicken_2089. food_chicken_2089 is inside pot_78. food_chicken_2089 is close pot_78. food_chicken_2089 released by right hand. 
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(dry_pasta_2114, cupboard_117)
Fail to find dry_pasta_2114 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(dry_pasta_2114, kitchen_counter_119)walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(pot_78)putin_executor(dry_pasta_2114, pot_78)walk_executor(sauce_2148)grab_executor(sauce_2148)walk_executor(pot_78)putin_executor(sauce_2148, pot_78)close_executor(pot_78)walk_executor(stove_2135)switchon_executor(stove_2135)walk_executor(dishwasher_129)open_executor(dishwasher_129)exp(plate_2152, dishwasher_129)walk_executor(pot_78)open_executor(pot_78)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(plate_2152)put_executor(food_chicken_2089, plate_2152)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(dry_pasta_2114, kitchen_counter_119)
Fail to find dry_pasta_2114 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(curtain_290)exp(dry_pasta_2114, curtain_290)walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(pot_78)putin_executor(dry_pasta_2114, pot_78)walk_executor(sauce_2148)grab_executor(sauce_2148)walk_executor(pot_78)putin_executor(sauce_2148, pot_78)close_executor(pot_78)walk_executor(stove_2135)switchon_executor(stove_2135)walk_executor(pot_78)open_executor(pot_78)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(plate_2152)put_executor(food_chicken_2089, plate_2152)
##############################
From agent.py
walk_executor(curtain_290)
Robot find: pillow_287, Robot is close to the curtain_289. Robot is close to the curtain_290. 
##############################
From agent.py
exp(dry_pasta_2114, curtain_290)
Fail to find dry_pasta_2114 around curtain_290. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(dry_pasta_2114, kitchen_counter_122)walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(pot_78)putin_executor(dry_pasta_2114, pot_78)walk_executor(sauce_2148)grab_executor(sauce_2148)walk_executor(pot_78)putin_executor(sauce_2148, pot_78)close_executor(pot_78)walk_executor(stove_2135)switchon_executor(stove_2135)walk_executor(pot_78)open_executor(pot_78)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(plate_2152)put_executor(food_chicken_2089, plate_2152)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, fryingpan_2154, Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(dry_pasta_2114, kitchen_counter_122)
Fail to find dry_pasta_2114 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(dry_pasta_2114, cupboard_118)walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(pot_78)putin_executor(dry_pasta_2114, pot_78)walk_executor(sauce_2148)grab_executor(sauce_2148)walk_executor(pot_78)putin_executor(sauce_2148, pot_78)close_executor(pot_78)walk_executor(stove_2135)switchon_executor(stove_2135)walk_executor(pot_78)open_executor(pot_78)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(plate_2152)put_executor(food_chicken_2089, plate_2152)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(dry_pasta_2114, cupboard_118)
Fail to find dry_pasta_2114 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2140)exp(dry_pasta_2114, bowl_2140)walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(pot_78)putin_executor(dry_pasta_2114, pot_78)walk_executor(sauce_2148)grab_executor(sauce_2148)walk_executor(pot_78)putin_executor(sauce_2148, pot_78)close_executor(pot_78)walk_executor(stove_2135)switchon_executor(stove_2135)walk_executor(pot_78)open_executor(pot_78)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(plate_2152)put_executor(food_chicken_2089, plate_2152)
##############################
From agent.py
walk_executor(bowl_2140)
Robot find: Robot is close to the bowl_2140. Robot is close to the kitchen_counter_119. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find dry_pasta_2114 ?
Answer: Go to dining_room_41. Locate table_114, as dry_pasta_2114 is on this table. Look for the dry pasta near the center or edge of the table for easier identification and retrieval.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_41. Locate table_114, as dry_pasta_2114 is on this table. Look for the dry pasta near the center or edge of the table for easier identification and retrieval.

The actions you have taken:
Action 1: Walk to cupboard_117.
Action 2: look for pot_78 around cupboard_117.
Action 3: Walk to fridge_126.
Action 4: Switch off fridge_126.
Action 5: Open fridge_126.
Action 6: look for food_chicken_2089 around fridge_126.
Action 7: Grab food_chicken_2089.
Action 8: Walk to pot_78.
Action 9: Put food_chicken_2089 into pot_78.
Action 10: Walk to cupboard_117.
Action 11: look for dry_pasta_2114 around cupboard_117.
Action 12: Walk to kitchen_counter_119.
Action 13: look for dry_pasta_2114 around kitchen_counter_119.
Action 14: Walk to curtain_290.
Action 15: look for dry_pasta_2114 around curtain_290.
Action 16: Walk to kitchen_counter_122.
Action 17: look for dry_pasta_2114 around kitchen_counter_122.
Action 18: Walk to cupboard_118.
Action 19: Open cupboard_118.
Action 20: look for dry_pasta_2114 around cupboard_118.
Action 21: Walk to bowl_2140.

##############################
From agent.py
exp(dry_pasta_2114, bowl_2140)
Fail to find dry_pasta_2114 around bowl_2140. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(dry_pasta_2114, table_114)walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(pot_78)putin_executor(dry_pasta_2114, pot_78)walk_executor(sauce_2148)grab_executor(sauce_2148)walk_executor(pot_78)putin_executor(sauce_2148, pot_78)close_executor(pot_78)walk_executor(stove_2135)switchon_executor(stove_2135)walk_executor(pot_78)open_executor(pot_78)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(plate_2152)put_executor(food_chicken_2089, plate_2152)
##############################
From agent.py
walk_executor(table_114)
Robot find: mat_102, cup_2049, pillow_103, pillow_104, pillow_105, pillow_106, lighter_2004, lighter_2039, box_2038, clothes_hat_2117, milk_2115, cup_2134, check_2058, drawing_110, drawing_111, clothes_gloves_2118, cup_2132, food_bread_2084, dry_pasta_2114, knife_2122, cup_2133, table_cloth_2005, food_food_2021, Robot is close to the table_114. Robot is close to the mat_102. 
##############################
From agent.py
exp(dry_pasta_2114, table_114)
Find dry_pasta_2114. 
##############################
From agent.py-> find a plan in act()
walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(pot_78)putin_executor(dry_pasta_2114, pot_78)walk_executor(sauce_2148)grab_executor(sauce_2148)walk_executor(pot_78)putin_executor(sauce_2148, pot_78)close_executor(pot_78)walk_executor(stove_2135)switchon_executor(stove_2135)walk_executor(pot_78)open_executor(pot_78)walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(plate_2152)put_executor(food_chicken_2089, plate_2152)
##############################
From agent.py
walk_executor(dry_pasta_2114)
Robot find: Robot is close to the table_114. Robot is close to the dry_pasta_2114. 
##############################
From agent.py
grab_executor(dry_pasta_2114)
Robot find: Robot is close to the table_114. Robot is close to the dry_pasta_2114. Grabbing dry_pasta_2114 by right hand. 
##############################
From agent.py
walk_executor(pot_78)
Robot find: Robot is close to the dry_pasta_2114. Robot is close to the food_chicken_2089. Robot is close to the pot_78. Robot is close to the oven_127. 
##############################
From agent.py
putin_executor(dry_pasta_2114, pot_78)
Robot find: Robot is close to the dry_pasta_2114. Robot is close to the food_chicken_2089. Robot is close to the pot_78. Robot is close to the oven_127. dry_pasta_2114 is inside pot_78. pot_78 is close dry_pasta_2114. dry_pasta_2114 is close pot_78. dry_pasta_2114 released by right hand. 
##############################
From agent.py
walk_executor(sauce_2148)
Robot find: Robot is close to the sauce_2148. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(sauce_2148)
Robot find: Robot is close to the sauce_2148. Robot is close to the fridge_126. Grabbing sauce_2148 by right hand. 
##############################
From agent.py
walk_executor(pot_78)
Robot find: Robot is close to the sauce_2148. Robot is close to the food_chicken_2089. Robot is close to the dry_pasta_2114. Robot is close to the pot_78. Robot is close to the oven_127. 
##############################
From agent.py
putin_executor(sauce_2148, pot_78)
Robot find: Robot is close to the sauce_2148. Robot is close to the food_chicken_2089. Robot is close to the dry_pasta_2114. Robot is close to the pot_78. Robot is close to the oven_127. sauce_2148 is inside pot_78. pot_78 is close sauce_2148. sauce_2148 is close pot_78. sauce_2148 released by right hand. 
##############################
From agent.py
close_executor(pot_78)
Robot find: Robot is close to the pot_78. Robot is close to the oven_127. pot_78 is closed. 
##############################
From agent.py
walk_executor(stove_2135)
Robot find: Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. 
##############################
From agent.py
switchon_executor(stove_2135)
Robot find: Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. stove_2135 is turned on. 
##############################
From agent.py
walk_executor(pot_78)
Robot find: Robot is close to the pot_78. Robot is close to the oven_127. 
##############################
From agent.py
open_executor(pot_78)
Robot find: Robot is close to the dry_pasta_2114. Robot is close to the sauce_2148. Robot is close to the food_chicken_2089. Robot is close to the pot_78. Robot is close to the oven_127. pot_78 is opened. 
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the pot_78. 
##############################
From agent.py
grab_executor(food_chicken_2089)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the pot_78. Grabbing food_chicken_2089 by right hand. 
##############################
From agent.py
walk_executor(plate_2152)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the plate_2152. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_chicken_2089, plate_2152)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the plate_2152. Robot is close to the kitchen_counter_119. food_chicken_2089 is close plate_2152. plate_2152 is close food_chicken_2089. food_chicken_2089 is on plate_2152. food_chicken_2089 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to put both the chicken and the pasta on the plate to finish the sub-task. Currently, only the chicken has been placed on the plate, leaving the pasta in the pot.
##############################
From agent.py
Human Instruction: The robot needs to put both the chicken and the pasta on the plate to finish the sub-task. Currently, only the chicken has been placed on the plate, leaving the pasta in the pot.

The actions you have taken:
Action 1: Walk to cupboard_117.
Action 2: look for pot_78 around cupboard_117.
Action 3: Walk to fridge_126.
Action 4: Switch off fridge_126.
Action 5: Open fridge_126.
Action 6: look for food_chicken_2089 around fridge_126.
Action 7: Grab food_chicken_2089.
Action 8: Walk to pot_78.
Action 9: Put food_chicken_2089 into pot_78.
Action 10: Walk to cupboard_117.
Action 11: look for dry_pasta_2114 around cupboard_117.
Action 12: Walk to kitchen_counter_119.
Action 13: look for dry_pasta_2114 around kitchen_counter_119.
Action 14: Walk to curtain_290.
Action 15: look for dry_pasta_2114 around curtain_290.
Action 16: Walk to kitchen_counter_122.
Action 17: look for dry_pasta_2114 around kitchen_counter_122.
Action 18: Walk to cupboard_118.
Action 19: Open cupboard_118.
Action 20: look for dry_pasta_2114 around cupboard_118.
Action 21: Walk to bowl_2140.
Action 22: look for dry_pasta_2114 around bowl_2140.
Action 23: Walk to table_114.
Action 24: look for dry_pasta_2114 around table_114.
Action 25: Walk to dry_pasta_2114.
Action 26: Grab dry_pasta_2114.
Action 27: Walk to pot_78.
Action 28: Put dry_pasta_2114 into pot_78.
Action 29: Walk to sauce_2148.
Action 30: Grab sauce_2148.
Action 31: Walk to pot_78.
Action 32: Put sauce_2148 into pot_78.
Action 33: Close pot_78.
Action 34: Walk to stove_2135.
Action 35: Switch on stove_2135.
Action 36: Walk to pot_78.
Action 37: Open pot_78.
Action 38: Walk to food_chicken_2089.
Action 39: Grab food_chicken_2089.
Action 40: Walk to plate_2152.
Action 41: Put food_chicken_2089 on plate_2152.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_78_around_sink_19(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==19
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(pot,sink_instance)
        else:
            exp(pot,sink_instance)
    eff:
        unknown[pot]=False
        close[pot,sink_instance]=True
        close[sink_instance,pot]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_pasta_on_plate(pasta:item, plate:item):
    body:
        achieve_once on(pasta, plate)

behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta) and inside(pasta, pot_78)
        bind plate: item where:
            is_plate(plate) and id[plate]==2152
        put_pasta_on_plate(pasta, plate)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_2138_around_pot_2138(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==2138
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(pot,pot_instance)
        else:
            exp(pot,pot_instance)
    eff:
        unknown[pot]=False
        close[pot,pot_instance]=True
        close[pot_instance,pot]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_pasta_on_plate(pasta:item, plate:item):
    body:
        achieve_once on(pasta, plate) # Place the pasta on the plate

behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta) and inside(pasta, pot_78)
        # Select the pasta in pot_78
        
        bind plate: item where:
            is_plate(plate) and id[plate]==2152
        # Select the plate with ID 2152

        put_pasta_on_plate(pasta, plate)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_cheese_2072_around_sink_120(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==120
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(food_cheese,sink_instance)
        else:
            exp(food_cheese,sink_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,sink_instance]=True
        close[sink_instance,food_cheese]=True
    

behavior find_knife_2035_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior add_pasta_to_plate(pasta:item, plate:item):
    body:
        achieve_once on(pasta, plate)
        
behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Locate the pasta that needs to be placed on the plate
        
        bind plate: item where:
            is_plate(plate)
        # Locate the plate

        add_pasta_to_plate(pasta, plate)
        # Add the pasta to the plate

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior add_pasta_to_plate(pasta:item, plate:item):
    body:
        achieve_once on(pasta, plate)
        
behavior __goal__():
    body:
        bind pasta: item where:
            is_dry_pasta(pasta)
        # Locate the pasta that needs to be placed on the plate
        
        bind plate: item where:
            is_plate(plate)
        # Locate the plate

        add_pasta_to_plate(pasta, plate)
        # Add the pasta to the plate

##############################
From agent.py-> find a plan in act()
walk_executor(dry_pasta_2114)grab_executor(dry_pasta_2114)walk_executor(plate_2152)put_executor(dry_pasta_2114, plate_2152)
##############################
From agent.py
walk_executor(dry_pasta_2114)
Robot find: Robot is close to the dry_pasta_2114. Robot is close to the pot_78. 
##############################
From agent.py
grab_executor(dry_pasta_2114)
Robot find: Robot is close to the dry_pasta_2114. Robot is close to the pot_78. Grabbing dry_pasta_2114 by right hand. 
##############################
From agent.py
walk_executor(plate_2152)
Robot find: Robot is close to the dry_pasta_2114. Robot is close to the plate_2152. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(dry_pasta_2114, plate_2152)
Robot find: Robot is close to the dry_pasta_2114. Robot is close to the plate_2152. Robot is close to the kitchen_counter_119. plate_2152 is close dry_pasta_2114. dry_pasta_2114 is close plate_2152. dry_pasta_2114 is on plate_2152. dry_pasta_2114 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make chicken pasta, put it in a plate.
Action History:
['walk_executor(cupboard_117)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'grab_executor(food_chicken_2089)', 'walk_executor(pot_78)', 'putin_executor(food_chicken_2089, pot_78)', 'walk_executor(cupboard_117)', 'walk_executor(kitchen_counter_119)', 'walk_executor(curtain_290)', 'walk_executor(kitchen_counter_122)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'walk_executor(bowl_2140)', 'walk_executor(table_114)', 'walk_executor(dry_pasta_2114)', 'grab_executor(dry_pasta_2114)', 'walk_executor(pot_78)', 'putin_executor(dry_pasta_2114, pot_78)', 'walk_executor(sauce_2148)', 'grab_executor(sauce_2148)', 'walk_executor(pot_78)', 'putin_executor(sauce_2148, pot_78)', 'close_executor(pot_78)', 'walk_executor(stove_2135)', 'switchon_executor(stove_2135)', 'walk_executor(pot_78)', 'open_executor(pot_78)', 'walk_executor(food_chicken_2089)', 'grab_executor(food_chicken_2089)', 'walk_executor(plate_2152)', 'put_executor(food_chicken_2089, plate_2152)', 'walk_executor(dry_pasta_2114)', 'grab_executor(dry_pasta_2114)', 'walk_executor(plate_2152)', 'put_executor(dry_pasta_2114, plate_2152)']
Time info:
Time consume: 362 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 6
goal correct times: 0
action_num: 36

Task complete rate:
Keystate: k1 - Requires: 11 steps
Keystate: k2 - Requires: 11 steps
Keystate: k3 - Requires: 6 steps
Keystate: k4 - Requires: 0 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
