From agent.py
Reset goals: The sub-goals are: 
['Find my spectacles and put it on the coffe table in home office. Then find the book and put it on the coffe table in home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_spectacles_2153_around_home_office_241(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(spectacles,home_office_instance)
        else:
            exp(spectacles,home_office_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,home_office_instance]=True
        close[home_office_instance,spectacles]=True
    

behavior find_book_2136_around_bookshelf_275(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==275
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        # Find the spectacles and place it on the coffee table in the home office
        foreach spectacles: item:
            if is_spectacles(spectacles) and not visited(spectacles):
                observe(spectacles, "Check where the spectacles are placed")
                achieve_once inhand(spectacles)
                bind coffee_table: item where:
                    is_table(coffee_table) and inside(coffee_table, home_office)
                achieve_once on(spectacles, coffee_table)

        # Find the book and place it on the coffee table in the home office
        foreach book: item:
            if is_book(book) and not visited(book):
                observe(book, "Check where the book is placed")
                achieve_once inhand(book)
                bind coffee_table: item where:
                    is_table(coffee_table) and inside(coffee_table, home_office)
                achieve_once on(book, coffee_table)


#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_spectacles_2153_around_desk_272(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==272
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(spectacles,desk_instance)
        else:
            exp(spectacles,desk_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,desk_instance]=True
        close[desk_instance,spectacles]=True
    

behavior find_book_2136_around_bookshelf_275(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==275
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
def is_home_office_table(table:item):
    # Check if the table is a coffee table in the home office by determining if its inside the home office
    symbol is_home_office_table=exists room: item : (is_home_office(room) and inside(table, room))
    return is_home_office_table

behavior place_on_table(obj:item, table:item):
    # Define the behavior to place an item on a table
    body:
        achieve_once on(obj, table)

behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select spectacles from available items

        bind book: item where:
            is_book(book)
        # Select book from available items

        bind coffee_table: item where:
            surfaces(coffee_table) and is_home_office_table(coffee_table)
        # Select a table with surfaces inside the home office

        place_on_table(spectacles, coffee_table)
        place_on_table(book, coffee_table)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_home_office_table(table:item):
    # Check if the table is a coffee table in the home office by determining if its inside the home office
    symbol is_home_office_table=exists room: item : (is_home_office(room) and inside(table, room))
    return is_home_office_table

behavior place_on_table(obj:item, table:item):
    # Define the behavior to place an item on a table
    body:
        achieve_once on(obj, table)

behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select spectacles from available items

        bind book: item where:
            is_book(book)
        # Select book from available items

        bind coffee_table: item where:
            surfaces(coffee_table) and is_home_office_table(coffee_table)
        # Select a table with surfaces inside the home office

        place_on_table(spectacles, coffee_table)
        place_on_table(book, coffee_table)

##############################
From agent.py-> find a plan in act()
walk_executor(desk_272)exp(spectacles_2153, desk_272)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(floor_262)put_executor(spectacles_2153, floor_262)exp(book_2136, bookshelf_275)walk_executor(book_2136)grab_executor(book_2136)walk_executor(floor_262)put_executor(book_2136, floor_262)
##############################
From agent.py
walk_executor(desk_272)
Robot find: stamp_2022, phone_2147, mouse_280, keyboard_278, headset_2146, chair_271, stamp_2043, Robot is close to the desk_272. 
##############################
From agent.py
exp(spectacles_2153, desk_272)
Fail to find spectacles_2153 around desk_272. 
##############################
From agent.py-> find a plan in act()
walk_executor(desk_193)exp(spectacles_2153, desk_193)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(floor_262)put_executor(spectacles_2153, floor_262)exp(book_2136, bookshelf_275)walk_executor(book_2136)grab_executor(book_2136)walk_executor(floor_262)put_executor(book_2136, floor_262)
##############################
From agent.py
walk_executor(desk_193)
Robot find: mouse_213, keyboard_211, check_2026, chair_194, laser_pointer_2034, Robot is close to the desk_193. 
##############################
From agent.py
exp(spectacles_2153, desk_193)
Fail to find spectacles_2153 around desk_193. 
##############################
From agent.py-> find a plan in act()
walk_executor(computer_276)exp(spectacles_2153, computer_276)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(floor_262)put_executor(spectacles_2153, floor_262)exp(book_2136, bookshelf_275)walk_executor(book_2136)grab_executor(book_2136)walk_executor(floor_262)put_executor(book_2136, floor_262)
##############################
From agent.py
walk_executor(computer_276)
Robot find: mat_284, Robot is close to the computer_276. 
##############################
From agent.py
exp(spectacles_2153, computer_276)
Fail to find spectacles_2153 around computer_276. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_275)exp(spectacles_2153, bookshelf_275)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(floor_262)put_executor(spectacles_2153, floor_262)exp(book_2136, bookshelf_275)walk_executor(book_2136)grab_executor(book_2136)walk_executor(floor_262)put_executor(book_2136, floor_262)
##############################
From agent.py
walk_executor(bookshelf_275)
Robot find: pencil_2020, Robot is close to the bookshelf_275. 
##############################
From agent.py
exp(spectacles_2153, bookshelf_275)
Fail to find spectacles_2153 around bookshelf_275. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_196)open_executor(bookshelf_196)exp(spectacles_2153, bookshelf_196)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(floor_259)put_executor(spectacles_2153, floor_259)walk_executor(bookshelf_196)exp(book_2136, bookshelf_196)walk_executor(book_2136)grab_executor(book_2136)walk_executor(floor_259)put_executor(book_2136, floor_259)
##############################
From agent.py
walk_executor(bookshelf_196)
Robot find: novel_2060, drawing_202, Robot is close to the bookshelf_196. 
##############################
From agent.py
open_executor(bookshelf_196)
Robot find: Robot is close to the photoframe_219. Robot is close to the bookshelf_196. bookshelf_196 is opened. 
##############################
From agent.py
exp(spectacles_2153, bookshelf_196)
Fail to find spectacles_2153 around bookshelf_196. 
##############################
From agent.py-> find a plan in act()
walk_executor(dresser_274)open_executor(dresser_274)exp(spectacles_2153, dresser_274)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(floor_259)put_executor(spectacles_2153, floor_259)walk_executor(bookshelf_124)open_executor(bookshelf_124)exp(book_2136, bookshelf_124)walk_executor(book_2136)grab_executor(book_2136)walk_executor(floor_259)put_executor(book_2136, floor_259)
##############################
From agent.py
walk_executor(dresser_274)
Robot find: Robot is close to the dresser_274. 
##############################
From agent.py
open_executor(dresser_274)
Robot find: hanger_292, hanger_293, hanger_294, blow_dryer_2057, cat_2069, check_2075, clothes_pants_2036, Robot is close to the hanger_292. Robot is close to the hanger_293. Robot is close to the hanger_294. Robot is close to the blow_dryer_2057. Robot is close to the dresser_274. Robot is close to the cat_2069. Robot is close to the check_2075. dresser_274 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find spectacles_2153 ?
Answer: Robot, locate spectacles_2153 on kitchen_counter_122 inside dining_room_41. Look for them on the counter surface, ensuring to identify other usual kitchen items present for precise identification.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, locate spectacles_2153 on kitchen_counter_122 inside dining_room_41. Look for them on the counter surface, ensuring to identify other usual kitchen items present for precise identification.

The actions you have taken:
Action 1: Walk to desk_272.
Action 2: look for spectacles_2153 around desk_272.
Action 3: Walk to desk_193.
Action 4: look for spectacles_2153 around desk_193.
Action 5: Walk to computer_276.
Action 6: look for spectacles_2153 around computer_276.
Action 7: Walk to bookshelf_275.
Action 8: look for spectacles_2153 around bookshelf_275.
Action 9: Walk to bookshelf_196.
Action 10: Open bookshelf_196.
Action 11: look for spectacles_2153 around bookshelf_196.
Action 12: Walk to dresser_274.
Action 13: Open dresser_274.

##############################
From agent.py
exp(spectacles_2153, dresser_274)
Fail to find spectacles_2153 around dresser_274. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(spectacles_2153, kitchen_counter_122)walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(floor_259)put_executor(spectacles_2153, floor_259)walk_executor(bookshelf_124)open_executor(bookshelf_124)exp(book_2136, bookshelf_124)walk_executor(book_2136)grab_executor(book_2136)walk_executor(floor_259)put_executor(book_2136, floor_259)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, pot_78, fryingpan_2154, Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(spectacles_2153, kitchen_counter_122)
Find spectacles_2153. 
##############################
From agent.py-> find a plan in act()
walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(floor_259)put_executor(spectacles_2153, floor_259)walk_executor(bookshelf_124)open_executor(bookshelf_124)exp(book_2136, bookshelf_124)walk_executor(book_2136)grab_executor(book_2136)walk_executor(floor_259)put_executor(book_2136, floor_259)
##############################
From agent.py
walk_executor(spectacles_2153)
Robot find: Robot is close to the kitchen_counter_122. Robot is close to the spectacles_2153. 
##############################
From agent.py
grab_executor(spectacles_2153)
Robot find: Robot is close to the kitchen_counter_122. Robot is close to the spectacles_2153. Grabbing spectacles_2153 by right hand. 
##############################
From agent.py
walk_executor(floor_259)
Robot find: Robot is close to the spectacles_2153. 
##############################
From agent.py
put_executor(spectacles_2153, floor_259)
Robot find: Robot is close to the spectacles_2153. spectacles_2153 is close floor_259. spectacles_2153 is on floor_259. floor_259 is close spectacles_2153. spectacles_2153 released by right hand. 
##############################
From agent.py
walk_executor(bookshelf_124)
Robot find: book_2136, envelope_2055, book_2137, drawing_110, drawing_111, Robot is close to the bookshelf_124. 
##############################
From agent.py
open_executor(bookshelf_124)
Robot find: Robot is close to the bookshelf_124. bookshelf_124 is opened. 
##############################
From agent.py
exp(book_2136, bookshelf_124)
Find book_2136. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2136)grab_executor(book_2136)walk_executor(floor_259)put_executor(book_2136, floor_259)
##############################
From agent.py
walk_executor(book_2136)
Robot find: Robot is close to the bookshelf_124. Robot is close to the book_2136. 
##############################
From agent.py
grab_executor(book_2136)
Robot find: Robot is close to the bookshelf_124. Robot is close to the book_2136. Grabbing book_2136 by right hand. 
##############################
From agent.py
walk_executor(floor_259)
Robot find: Robot is close to the book_2136. 
##############################
From agent.py
put_executor(book_2136, floor_259)
Robot find: Robot is close to the book_2136. book_2136 is on floor_259. floor_259 is close book_2136. book_2136 is close floor_259. book_2136 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to move the spectacles and the book from the floor to the coffee table in the home office. Currently, both items are on the floor, not on the specified coffee table.
##############################
From agent.py
Human Instruction: You need to move the spectacles and the book from the floor to the coffee table in the home office. Currently, both items are on the floor, not on the specified coffee table.

The actions you have taken:
Action 1: Walk to desk_272.
Action 2: look for spectacles_2153 around desk_272.
Action 3: Walk to desk_193.
Action 4: look for spectacles_2153 around desk_193.
Action 5: Walk to computer_276.
Action 6: look for spectacles_2153 around computer_276.
Action 7: Walk to bookshelf_275.
Action 8: look for spectacles_2153 around bookshelf_275.
Action 9: Walk to bookshelf_196.
Action 10: Open bookshelf_196.
Action 11: look for spectacles_2153 around bookshelf_196.
Action 12: Walk to dresser_274.
Action 13: Open dresser_274.
Action 14: look for spectacles_2153 around dresser_274.
Action 15: Walk to kitchen_counter_122.
Action 16: look for spectacles_2153 around kitchen_counter_122.
Action 17: Walk to spectacles_2153.
Action 18: Grab spectacles_2153.
Action 19: Walk to floor_259.
Action 20: Put spectacles_2153 on floor_259.
Action 21: Walk to bookshelf_124.
Action 22: Open bookshelf_124.
Action 23: look for book_2136 around bookshelf_124.
Action 24: Walk to book_2136.
Action 25: Grab book_2136.
Action 26: Walk to floor_259.
Action 27: Put book_2136 on floor_259.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_2003_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

behavior find_knife_2035_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_homework_2047_around_home_office_241(homework:item):
    goal: not unknown(homework)
    body:
        assert is_homework(homework)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==241
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(homework,home_office_instance)
        else:
            exp(homework,home_office_instance)
    eff:
        unknown[homework]=False
        close[homework,home_office_instance]=True
        close[home_office_instance,homework]=True
    

#exp_behavior_end

#goal_representation
 
def is_on_coffee_table(item:item):
    # Check if the item is on the coffee table in the home office
    symbol on_coffee_table=exists table: item: (is_table(table) and inside(table, home_office) and on(item, table))
    return on_coffee_table

def is_spectacles_on_floor(item:item):
    # Check if the spectacles are on the floor
    symbol on_floor=exists floor: item: (is_floor(floor) and close(item, floor))
    return on_floor

behavior place_on_coffee_table(item:item, table:item):
    body:
        achieve_once on(item, table) # Place the item on the coffee table

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)

        bind spectacles: item where:
            is_spectacles(spectacles)
        
        bind book: item where:
            is_book(book)

        if not is_on_coffee_table(spectacles) or not is_on_coffee_table(book):
            if is_spectacles_on_floor(spectacles):
                place_on_coffee_table(spectacles, coffee_table)
            if not is_on_coffee_table(book):
                place_on_coffee_table(book, coffee_table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_2003_around_chair_271(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==271
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

behavior find_brush_2002_around_cupboard_117(brush:item):
    goal: not unknown(brush)
    body:
        assert is_brush(brush)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(brush,cupboard_instance)
        else:
            exp(brush,cupboard_instance)
    eff:
        unknown[brush]=False
        close[brush,cupboard_instance]=True
        close[cupboard_instance,brush]=True
    

behavior find_toy_2056_around_dishwasher_129(toy:item):
    goal: not unknown(toy)
    body:
        assert is_toy(toy)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==129
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(toy,dishwasher_instance)
        else:
            exp(toy,dishwasher_instance)
    eff:
        unknown[toy]=False
        close[toy,dishwasher_instance]=True
        close[dishwasher_instance,toy]=True
    

#exp_behavior_end

#goal_representation
 
behavior move_item_to_table(item:item, table:item):
    body:
        achieve_once on(item, table)
        # Place the item on the specified table

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office as the room

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table inside the home office

        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select the spectacles

        bind book: item where:
            is_book(book)
        # Select the book

        move_item_to_table(spectacles, coffee_table)
        # Move spectacles to the coffee table
        
        move_item_to_table(book, coffee_table)
        # Move book to the coffee table

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior move_item_to_table(item:item, table:item):
    body:
        achieve_once on(item, table)
        # Place the item on the specified table

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office as the room

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table inside the home office

        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select the spectacles

        bind book: item where:
            is_book(book)
        # Select the book

        move_item_to_table(spectacles, coffee_table)
        # Move spectacles to the coffee table
        
        move_item_to_table(book, coffee_table)
        # Move book to the coffee table

##############################
From agent.py-> find a plan in act()
walk_executor(spectacles_2153)grab_executor(spectacles_2153)walk_executor(table_270)put_executor(spectacles_2153, table_270)walk_executor(book_2136)grab_executor(book_2136)walk_executor(table_270)put_executor(book_2136, table_270)
##############################
From agent.py
walk_executor(spectacles_2153)
Robot find: Robot is close to the spectacles_2153. 
##############################
From agent.py
grab_executor(spectacles_2153)
Robot find: Robot is close to the spectacles_2153. Grabbing spectacles_2153 by right hand. 
##############################
From agent.py
walk_executor(table_270)
Robot find: shoes_2033, shampoo_2019, pillow_286, pencil_2014, phone_2017, pillow_287, drawing_288, brush_2002, Robot is close to the spectacles_2153. Robot is close to the couch_269. Robot is close to the table_270. 
##############################
From agent.py
put_executor(spectacles_2153, table_270)
Robot find: Robot is close to the spectacles_2153. Robot is close to the couch_269. Robot is close to the table_270. spectacles_2153 is close table_270. spectacles_2153 is on table_270. table_270 is close spectacles_2153. spectacles_2153 released by right hand. 
##############################
From agent.py
walk_executor(book_2136)
Robot find: Robot is close to the book_2136. 
##############################
From agent.py
grab_executor(book_2136)
Robot find: Robot is close to the book_2136. Grabbing book_2136 by right hand. 
##############################
From agent.py
walk_executor(table_270)
Robot find: Robot is close to the book_2136. Robot is close to the couch_269. Robot is close to the table_270. 
##############################
From agent.py
put_executor(book_2136, table_270)
Robot find: Robot is close to the book_2136. Robot is close to the couch_269. Robot is close to the table_270. book_2136 is on table_270. table_270 is close book_2136. book_2136 is close table_270. book_2136 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Find my spectacles and put it on the coffe table in home office. Then find the book and put it on the coffe table in home office.
Action History:
['walk_executor(desk_272)', 'walk_executor(desk_193)', 'walk_executor(computer_276)', 'walk_executor(bookshelf_275)', 'walk_executor(bookshelf_196)', 'open_executor(bookshelf_196)', 'walk_executor(dresser_274)', 'open_executor(dresser_274)', 'walk_executor(kitchen_counter_122)', 'walk_executor(spectacles_2153)', 'grab_executor(spectacles_2153)', 'walk_executor(floor_259)', 'put_executor(spectacles_2153, floor_259)', 'walk_executor(bookshelf_124)', 'open_executor(bookshelf_124)', 'walk_executor(book_2136)', 'grab_executor(book_2136)', 'walk_executor(floor_259)', 'put_executor(book_2136, floor_259)', 'walk_executor(spectacles_2153)', 'grab_executor(spectacles_2153)', 'walk_executor(table_270)', 'put_executor(spectacles_2153, table_270)', 'walk_executor(book_2136)', 'grab_executor(book_2136)', 'walk_executor(table_270)', 'put_executor(book_2136, table_270)']
Time info:
Time consume: 168 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 4
goal correct times: 0
action_num: 27

Task complete rate:
1
Scene_id: 1
##############################
