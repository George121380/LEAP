From agent.py
Reset goals: The sub-goals are: 
['Scramble the egg using the frying pan.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_egg_2092_around_kitchen_counter_119(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_egg,kitchen_counter_instance)
        else:
            exp(food_egg,kitchen_counter_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_egg]=True
    

behavior find_knife_2037_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_fryingpan_2154_around_cupboard_118(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(fryingpan,cupboard_instance)
        else:
            exp(fryingpan,cupboard_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,cupboard_instance]=True
        close[cupboard_instance,fryingpan]=True
    

#exp_behavior_end

#goal_representation
 
def has_egg_inhand():
    # Function to check if there is an egg in hand
    symbol has_egg=exists o: item : (is_food_egg(o) and inhand(o))
    return has_egg

behavior scramble_egg(egg:item, fryingpan:item):
    body:
        if not cut(egg):
            cuts(egg) # Cut the egg for scrambling if not already cut
        if not inside(egg, fryingpan):
            put_inside(egg, fryingpan) # Place the egg in the frying pan for cooking

behavior cook_egg(fryingpan:item):
    body:
        if is_off(fryingpan):
            switch_on(fryingpan) # Turn on the frying pan to cook the egg

behavior __goal__():
    body:
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan

        if not has_egg_inhand():
            foreach egg: item:
                if is_food_egg(egg) and not visited(egg):
                    observe(egg, "Ensure egg is in hand to cook")
        
        bind egg: item where:
            is_food_egg(egg) and inhand(egg)
        # Select egg in hand

        scramble_egg(egg, fryingpan) # Scramble the egg in the frying pan
        cook_egg(fryingpan) # Cook the scrambled egg in the frying pan

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_egg_2092_around_kitchen_counter_119(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_egg,kitchen_counter_instance)
        else:
            exp(food_egg,kitchen_counter_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_egg]=True
    

behavior find_fryingpan_2154_around_kitchen_counter_123(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==123
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

behavior find_food_banana_2083_around_kitchen_counter_119(food_banana:item):
    goal: not unknown(food_banana)
    body:
        assert is_food_banana(food_banana)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_banana,kitchen_counter_instance)
        else:
            exp(food_banana,kitchen_counter_instance)
    eff:
        unknown[food_banana]=False
        close[food_banana,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_banana]=True
    

#exp_behavior_end

#goal_representation
 
behavior grab_egg_and_pan(egg: item, pan: item):
    body:
        if grabbable(egg) and not inhand(egg):
            grab(egg)
        
        if grabbable(pan) and not inhand(pan):
            grab(pan)

behavior check_and_switch_on_stove(stove: item):
    body:
        if not is_on(stove):
            switch_on(stove)

behavior crack_and_scramble_egg(egg: item, pan: item):
    body:
        if not cut(egg):
            cuts(egg) # Simulate cracking the egg
        
        put_on(egg, pan)  # Place the egg in the pan
        # Additional logic can be added to simulate scrambling

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        
        bind pan: item where:
            is_fryingpan(pan)

        bind stove: item where:
            is_stove(stove)
        
        walk_to(egg)
        grab_egg_and_pan(egg, pan)
        
        walk_to(stove)
        check_and_switch_on_stove(stove)
        
        put_on(pan, stove)  # Place the pan on the stove
        
        crack_and_scramble_egg(egg, pan)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_egg_2092_around_kitchen_counter_119(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_egg,kitchen_counter_instance)
        else:
            exp(food_egg,kitchen_counter_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_egg]=True
    

behavior find_fryingpan_2154_around_kitchen_counter_119(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

#exp_behavior_end

#goal_representation
 
def in_pan(egg:item, fryingpan:item):
    # Function to check if the egg is in the frying pan
    symbol in_pan=exists o: item : (is_food_egg(o) and inside(o, fryingpan))
    return in_pan

behavior crack_egg(fryingpan:item):
    # Behavior to crack the egg and put it in the frying pan
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select egg from available items

        if not in_pan(egg, fryingpan):
            put_inside(egg, fryingpan)
            # Put the egg into the frying pan

behavior scramble_egg(fryingpan:item):
    # Behavior to scramble the egg in the frying pan
    body:
        if not cut(fryingpan):
            cuts(fryingpan)
            # Indicates performing scrambling action

behavior __goal__():
    body:
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select frying pan

        crack_egg(fryingpan)
        scramble_egg(fryingpan)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_egg_2092_around_kitchen_counter_119(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_egg,kitchen_counter_instance)
        else:
            exp(food_egg,kitchen_counter_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_egg]=True
    

behavior find_fryingpan_2154_around_kitchen_counter_119(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

behavior find_knife_2037_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior scramble_egg(egg:item, pan:item):
    body:
        if not cut(egg):
            cuts(egg)
        if not on(egg, pan):
            put_on(egg, pan)

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select an egg
        bind pan: item where:
            is_fryingpan(pan)
        # Select a frying pan
        scramble_egg(egg, pan)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior scramble_egg(egg:item, pan:item):
    body:
        if not cut(egg):
            cuts(egg)
        if not on(egg, pan):
            put_on(egg, pan)

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select an egg
        bind pan: item where:
            is_fryingpan(pan)
        # Select a frying pan
        scramble_egg(egg, pan)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(food_egg_2092, kitchen_counter_119)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(cutting_board_2123)put_executor(food_egg_2092, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_egg_2092)cut_executor(food_egg_2092)walk_executor(kitchen_counter_119)exp(fryingpan_2154, kitchen_counter_119)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(fryingpan_2154)put_executor(food_egg_2092, fryingpan_2154)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_78, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(food_egg_2092, kitchen_counter_119)
Fail to find food_egg_2092 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_egg_2092, fridge_126)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(cutting_board_2123)put_executor(food_egg_2092, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_egg_2092)cut_executor(food_egg_2092)walk_executor(cupboard_118)open_executor(cupboard_118)exp(fryingpan_2154, cupboard_118)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(fryingpan_2154)put_executor(food_egg_2092, fryingpan_2154)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_egg_2092, fridge_126)
Find food_egg_2092. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_egg_2092)walk_executor(cutting_board_2123)put_executor(food_egg_2092, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_egg_2092)cut_executor(food_egg_2092)walk_executor(cupboard_118)open_executor(cupboard_118)exp(fryingpan_2154, cupboard_118)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(fryingpan_2154)put_executor(food_egg_2092, fryingpan_2154)
##############################
From agent.py
grab_executor(food_egg_2092)
Robot find: Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. Grabbing food_egg_2092 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot find: Robot is close to the food_egg_2092. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_egg_2092, cutting_board_2123)
Robot find: Robot is close to the food_egg_2092. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. cutting_board_2123 is close food_egg_2092. food_egg_2092 is close cutting_board_2123. food_egg_2092 is on cutting_board_2123. food_egg_2092 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_76)
Robot find: Robot is close to the knifeblock_76. 
##############################
From agent.py
exp(knife_2122, knifeblock_76)
Fail to find knife_2122 around knifeblock_76. 
##############################
From agent.py-> find a plan in act()
walk_executor(computer_209)exp(knife_2122, computer_209)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_egg_2092)cut_executor(food_egg_2092)walk_executor(stove_2135)open_executor(stove_2135)exp(fryingpan_2154, stove_2135)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(fryingpan_2154)put_executor(food_egg_2092, fryingpan_2154)
##############################
From agent.py
walk_executor(computer_209)
Robot find: chair_194, keyboard_211, mouse_213, Robot is close to the computer_209. 
##############################
From agent.py
exp(knife_2122, computer_209)
Fail to find knife_2122 around computer_209. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(knife_2122, cupboard_118)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_egg_2092)cut_executor(food_egg_2092)walk_executor(cupboard_118)exp(fryingpan_2154, cupboard_118)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(fryingpan_2154)put_executor(food_egg_2092, fryingpan_2154)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(knife_2122, cupboard_118)
Fail to find knife_2122 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
grab_executor(knife_2037)walk_executor(food_egg_2092)cut_executor(food_egg_2092)walk_executor(stove_2135)open_executor(stove_2135)exp(fryingpan_2154, stove_2135)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(fryingpan_2154)put_executor(food_egg_2092, fryingpan_2154)
##############################
From agent.py
grab_executor(knife_2037)
Robot find: Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. Grabbing knife_2037 by right hand. 
##############################
From agent.py
walk_executor(food_egg_2092)
Robot find: Robot is close to the knife_2037. Robot is close to the cutting_board_2123. Robot is close to the food_egg_2092. 
##############################
From agent.py
cut_executor(food_egg_2092)
Robot find: Robot is close to the knife_2037. Robot is close to the cutting_board_2123. Robot is close to the food_egg_2092. 
##############################
From agent.py
walk_executor(stove_2135)
Robot find: Robot is close to the knife_2037. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. 
##############################
From agent.py
open_executor(stove_2135)
Robot find: Robot is close to the knife_2037. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. stove_2135 is opened. 
##############################
From agent.py
exp(fryingpan_2154, stove_2135)
Fail to find fryingpan_2154 around stove_2135. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_egg_2092)cut_executor(food_egg_2092)walk_executor(oven_127)open_executor(oven_127)exp(fryingpan_2154, oven_127)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(fryingpan_2154)put_executor(food_egg_2092, fryingpan_2154)
##############################
From agent.py
walk_executor(food_egg_2092)
Robot find: Robot is close to the knife_2037. Robot is close to the cutting_board_2123. Robot is close to the food_egg_2092. 
##############################
From agent.py
cut_executor(food_egg_2092)
Robot find: Robot is close to the knife_2037. Robot is close to the cutting_board_2123. Robot is close to the food_egg_2092. 
##############################
From agent.py
walk_executor(oven_127)
Robot find: food_food_2064, Robot is close to the knife_2037. Robot is close to the oven_127. 
##############################
From agent.py
open_executor(oven_127)
Robot find: tray_128, food_cheese_2072, oil_2013, food_carrot_2015, Robot is close to the knife_2037. Robot is close to the tray_128. Robot is close to the food_cheese_2072. Robot is close to the oven_127. Robot is close to the oil_2013. Robot is close to the food_carrot_2015. oven_127 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find fryingpan_2154 ?
Answer: Go to the dining room labeled as dining_room_41. Locate kitchen_counter_122. The frying pan with the identifier fryingpan_2154 is on top of kitchen_counter_122.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to the dining room labeled as dining_room_41. Locate kitchen_counter_122. The frying pan with the identifier fryingpan_2154 is on top of kitchen_counter_122.

The actions you have taken:
Action 1: Walk to kitchen_counter_119.
Action 2: look for food_egg_2092 around kitchen_counter_119.
Action 3: Walk to fridge_126.
Action 4: Switch off fridge_126.
Action 5: Open fridge_126.
Action 6: look for food_egg_2092 around fridge_126.
Action 7: Grab food_egg_2092.
Action 8: Walk to cutting_board_2123.
Action 9: Put food_egg_2092 on cutting_board_2123.
Action 10: Walk to knifeblock_76.
Action 11: look for knife_2122 around knifeblock_76.
Action 12: Walk to computer_209.
Action 13: look for knife_2122 around computer_209.
Action 14: Walk to cupboard_118.
Action 15: Open cupboard_118.
Action 16: look for knife_2122 around cupboard_118.
Action 17: Grab knife_2037.
Action 18: Walk to food_egg_2092.
Action 19: Cut food_egg_2092.
Action 20: Walk to stove_2135.
Action 21: Open stove_2135.
Action 22: look for fryingpan_2154 around stove_2135.
Action 23: Walk to food_egg_2092.
Action 24: Cut food_egg_2092.
Action 25: Walk to oven_127.
Action 26: Open oven_127.

##############################
From agent.py
exp(fryingpan_2154, oven_127)
Fail to find fryingpan_2154 around oven_127. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_egg_2092)cut_executor(food_egg_2092)walk_executor(kitchen_counter_122)exp(fryingpan_2154, kitchen_counter_122)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(fryingpan_2154)put_executor(food_egg_2092, fryingpan_2154)
##############################
From agent.py
walk_executor(food_egg_2092)
Robot find: Robot is close to the knife_2037. Robot is close to the cutting_board_2123. Robot is close to the food_egg_2092. 
##############################
From agent.py
cut_executor(food_egg_2092)
Robot find: Robot is close to the knife_2037. Robot is close to the cutting_board_2123. Robot is close to the food_egg_2092. 
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, fryingpan_2154, Robot is close to the knife_2037. Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(fryingpan_2154, kitchen_counter_122)
Find fryingpan_2154. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_egg_2092)cut_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(fryingpan_2154)put_executor(food_egg_2092, fryingpan_2154)
##############################
From agent.py
walk_executor(food_egg_2092)
Robot find: Robot is close to the knife_2037. Robot is close to the cutting_board_2123. Robot is close to the food_egg_2092. 
##############################
From agent.py
cut_executor(food_egg_2092)
Robot find: Robot is close to the knife_2037. Robot is close to the cutting_board_2123. Robot is close to the food_egg_2092. 
##############################
From agent.py
grab_executor(food_egg_2092)
Robot find: Robot is close to the knife_2037. Robot is close to the cutting_board_2123. Robot is close to the food_egg_2092. Grabbing food_egg_2092 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2154)
Robot find: Robot is close to the knife_2037. Robot is close to the food_egg_2092. Robot is close to the fryingpan_2154. Robot is close to the kitchen_counter_122. 
##############################
From agent.py
put_executor(food_egg_2092, fryingpan_2154)
Robot find: Robot is close to the knife_2037. Robot is close to the food_egg_2092. Robot is close to the fryingpan_2154. Robot is close to the kitchen_counter_122. fryingpan_2154 is close food_egg_2092. food_egg_2092 is close fryingpan_2154. food_egg_2092 is on fryingpan_2154. food_egg_2092 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Scramble egg by the fryingpan.
Action History:
['walk_executor(kitchen_counter_119)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'grab_executor(food_egg_2092)', 'walk_executor(cutting_board_2123)', 'put_executor(food_egg_2092, cutting_board_2123)', 'walk_executor(knifeblock_76)', 'walk_executor(computer_209)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'grab_executor(knife_2037)', 'walk_executor(food_egg_2092)', 'cut_executor(food_egg_2092)', 'walk_executor(stove_2135)', 'open_executor(stove_2135)', 'walk_executor(food_egg_2092)', 'cut_executor(food_egg_2092)', 'walk_executor(oven_127)', 'open_executor(oven_127)', 'walk_executor(food_egg_2092)', 'cut_executor(food_egg_2092)', 'walk_executor(kitchen_counter_122)', 'walk_executor(food_egg_2092)', 'cut_executor(food_egg_2092)', 'grab_executor(food_egg_2092)', 'walk_executor(fryingpan_2154)', 'put_executor(food_egg_2092, fryingpan_2154)']
Time info:
Time consume: 158 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 4
goal correct times: 0
action_num: 28

Task complete rate:
Keystate: k1 - Requires: 10 steps
Keystate: k2 - Requires: 8 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
