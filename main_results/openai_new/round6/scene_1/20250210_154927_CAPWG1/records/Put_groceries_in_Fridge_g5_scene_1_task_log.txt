From agent.py
Reset goals: The sub-goals are: 
['1. Find a table in the dining room and place the milk and egg on it.', '2. Remove all items from the fridge and throw them in the trashcan.', '3. Return the milk and egg to the fridge.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2115_around_fridge_126(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_food_egg_2092_around_fridge_126(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_milk_and_egg_on_table(milk:item, egg:item, table:item):
    body:
        if is_milk(milk) and inhand(milk) and is_food_egg(egg) and inhand(egg):
            put_on(milk, table)
            put_on(egg, table)

behavior __goal__():
    body:
        bind table: item where:
            is_table(table) and surfaces(table)
        # Find a table with a surface in the dining room
        
        bind milk: item where:
            is_milk(milk)
        # Select the milk
        
        bind egg: item where:
            is_food_egg(egg)
        # Select the egg
        
        # Walk to the table and place the milk and egg on it
        walk_to(table)
        if has_a_free_hand(char):
            grab(milk)
        if has_a_free_hand(char):
            grab(egg)
        place_milk_and_egg_on_table(milk, egg, table)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior place_milk_and_egg_on_table(milk:item, egg:item, table:item):
    body:
        if is_milk(milk) and inhand(milk) and is_food_egg(egg) and inhand(egg):
            put_on(milk, table)
            put_on(egg, table)

behavior __goal__():
    body:
        bind table: item where:
            is_table(table) and surfaces(table)
        # Find a table with a surface in the dining room
        
        bind milk: item where:
            is_milk(milk)
        # Select the milk
        
        bind egg: item where:
            is_food_egg(egg)
        # Select the egg
        
        # Walk to the table and place the milk and egg on it
        walk_to(table)
        if has_a_free_hand(char):
            grab(milk)
        if has_a_free_hand(char):
            grab(egg)
        place_milk_and_egg_on_table(milk, egg, table)

##############################
From agent.py-> find a plan in act()
walk_executor(table_114)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(milk_2115, fridge_126)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(fridge_126)exp(food_egg_2092, fridge_126)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(milk_2115, table_114)put_executor(food_egg_2092, table_114)
##############################
From agent.py
walk_executor(table_114)
Robot find: mat_102, cup_2049, pillow_103, pillow_104, pillow_105, pillow_106, lighter_2004, lighter_2039, box_2038, clothes_hat_2117, milk_2115, cup_2134, check_2058, drawing_110, drawing_111, clothes_gloves_2118, cup_2132, food_bread_2084, dry_pasta_2114, knife_2122, cup_2133, table_cloth_2005, food_food_2021, Robot is close to the table_114. Robot is close to the mat_102. 
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(milk_2115, fridge_126)
Find milk_2115. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_114)grab_executor(milk_2115)walk_executor(food_egg_2092)grab_executor(food_egg_2092)walk_executor(table_114)put_executor(milk_2115, table_114)put_executor(food_egg_2092, table_114)
##############################
From agent.py
walk_executor(table_114)
Robot find: Robot is close to the table_114. Robot is close to the mat_102. 
##############################
From agent.py
grab_executor(milk_2115)
Robot find: Robot is close to the table_114. Robot is close to the mat_102. Robot is close to the milk_2115. Grabbing milk_2115 by right hand. 
##############################
From agent.py
walk_executor(food_egg_2092)
Robot find: Robot is close to the milk_2115. Robot is close to the food_egg_2092. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_egg_2092)
Robot find: Robot is close to the milk_2115. Robot is close to the food_egg_2092. Robot is close to the fridge_126. Grabbing food_egg_2092 by left hand. 
##############################
From agent.py
walk_executor(table_114)
Robot find: Robot is close to the milk_2115. Robot is close to the food_egg_2092. Robot is close to the table_114. Robot is close to the mat_102. 
##############################
From agent.py
put_executor(milk_2115, table_114)
Robot find: Robot is close to the milk_2115. Robot is close to the food_egg_2092. Robot is close to the table_114. Robot is close to the mat_102. milk_2115 is close table_114. milk_2115 is on table_114. milk_2115 released by right hand. 
##############################
From agent.py
put_executor(food_egg_2092, table_114)
Robot find: Robot is close to the milk_2115. Robot is close to the food_egg_2092. Robot is close to the table_114. Robot is close to the mat_102. table_114 is close food_egg_2092. food_egg_2092 is close table_114. food_egg_2092 is on table_114. food_egg_2092 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Error record: list index out of range
##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
['walk_executor(table_114)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'walk_executor(table_114)', 'grab_executor(milk_2115)', 'walk_executor(food_egg_2092)', 'grab_executor(food_egg_2092)', 'walk_executor(table_114)', 'put_executor(milk_2115, table_114)', 'put_executor(food_egg_2092, table_114)']
Time info:
Time consume: 62 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 1
goal correct times: 0
action_num: 11

Task complete rate:
Keystate: k1 - Requires: 0 steps
Keystate: k2 - Requires: 144 steps
Keystate: k3 - Requires: 7 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
