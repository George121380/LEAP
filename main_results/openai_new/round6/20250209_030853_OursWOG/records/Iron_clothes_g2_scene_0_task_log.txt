From agent.py
Reset goals: The sub-goals are: 
['1. Wash the shirt by hand in the sink.  ', '2. Iron the shirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2086_around_basket_for_clothes_2006(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_shirt,basket_for_clothes_instance)
        else:
            exp(clothes_shirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_shirt]=True
    

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_shirt(shirt: item, sink: item):
    body:
        achieve_once inside(shirt, sink)
        # Place the shirt in the sink
        wash(shirt)
        # Wash the shirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select a shirt

        bind sink: item where:
            is_sink(sink)
        # Select a sink

        wash_shirt(shirt, sink)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior wash_shirt(shirt: item, sink: item):
    body:
        achieve_once inside(shirt, sink)
        # Place the shirt in the sink
        wash(shirt)
        # Wash the shirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select a shirt

        bind sink: item where:
            is_sink(sink)
        # Select a sink

        wash_shirt(shirt, sink)

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)exp(clothes_shirt_2086, basket_for_clothes_2006)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(sink_42)putin_executor(clothes_shirt_2086, sink_42)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_shirt_2086)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Robot find: clothes_pants_2085, clothes_shirt_2086, clothes_socks_2087, clothes_skirt_2088, towel_rack_31, towel_rack_33, towel_rack_32, towel_rack_34, mat_22, Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
exp(clothes_shirt_2086, basket_for_clothes_2006)
Find clothes_shirt_2086. 
##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2086)walk_executor(sink_42)putin_executor(clothes_shirt_2086, sink_42)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_shirt_2086)switchoff_executor(faucet_43)
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(sink_42)
Robot find: detergent_2084, cleaning_solution_2073, soap_2053, Robot is close to the clothes_shirt_2086. Robot is close to the bathroom_counter_41. Robot is close to the sink_42. 
##############################
From agent.py
putin_executor(clothes_shirt_2086, sink_42)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the bathroom_counter_41. Robot is close to the sink_42. sink_42 is close clothes_shirt_2086. clothes_shirt_2086 is close sink_42. clothes_shirt_2086 is inside sink_42. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the sink_42. 
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the sink_42. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
wash_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. clothes_shirt_2086 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve_once close_char(char, ironing_board) # Move close to the ironing board
        achieve_once on(shirt, ironing_board) # Place the shirt on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Turn the iron on
        # Ironing occurs here
        achieve is_off(iron) # Turn the iron off after ironing
        achieve unplugged(iron) # Unplug the iron

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed
        bind iron: item where:
            is_iron(iron)
        # Select the iron to use
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board to use
        iron_shirt(shirt, iron, ironing_board)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
def is_ironing_board(x: item):
    return True # Assume it is an ironing board when is_ironing_board(x) is called, indicating the item is an ironing board

behavior place_on_ironing_board(shirt: item, board: item):
    body:
        achieve_once on(shirt, board)
        # Place the shirt on the ironing board

behavior plug_in_iron(iron: item, socket: item):
    body:
        achieve_once plugged(iron)
        # Plug in the iron

behavior iron_shirt(shirt: item, iron: item):
    body:
        achieve_once is_on(iron) # Turn on the iron
        # Iron the shirt

behavior reset_iron(iron: item, socket: item):
    body:
        achieve_once is_off(iron) # Turn off the iron
        achieve_once unplugged(iron) # Unplug the iron

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select a shirt
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board
        bind iron: item where:
            is_iron(iron)
        # Select an iron
        bind socket: item where:
            is_powersocket(socket)
        # Select a power socket
        place_on_ironing_board(shirt, ironing_board)
        plug_in_iron(iron, socket)
        iron_shirt(shirt, iron)
        reset_iron(iron, socket)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_ironing_board(x: item):
    return True # Assume it is an ironing board when is_ironing_board(x) is called, indicating the item is an ironing board

behavior place_on_ironing_board(shirt: item, board: item):
    body:
        achieve_once on(shirt, board)
        # Place the shirt on the ironing board

behavior plug_in_iron(iron: item, socket: item):
    body:
        achieve_once plugged(iron)
        # Plug in the iron

behavior iron_shirt(shirt: item, iron: item):
    body:
        achieve_once is_on(iron) # Turn on the iron
        # Iron the shirt

behavior reset_iron(iron: item, socket: item):
    body:
        achieve_once is_off(iron) # Turn off the iron
        achieve_once unplugged(iron) # Unplug the iron

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select a shirt
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board
        bind iron: item where:
            is_iron(iron)
        # Select an iron
        bind socket: item where:
            is_powersocket(socket)
        # Select a power socket
        place_on_ironing_board(shirt, ironing_board)
        plug_in_iron(iron, socket)
        iron_shirt(shirt, iron)
        reset_iron(iron, socket)

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)switchoff_executor(iron_2089)plugout_executor(iron_2089)
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: iron_2089, Robot is close to the clothes_shirt_2086. Robot is close to the ironing_board_2074. 
##############################
From agent.py
put_executor(clothes_shirt_2086, ironing_board_2074)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the ironing_board_2074. ironing_board_2074 is close clothes_shirt_2086. clothes_shirt_2086 is close ironing_board_2074. clothes_shirt_2086 is on ironing_board_2074. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
exp(iron_2089, ironing_board_2074)
Find iron_2089. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)switchoff_executor(iron_2089)plugout_executor(iron_2089)
##############################
From agent.py
walk_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. 
##############################
From agent.py
plugin_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. iron_2089 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. iron_2089 is turned on. 
##############################
From agent.py
switchoff_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. iron_2089 is turned off. 
##############################
From agent.py
plugout_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. iron_2089 is unplugged. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Hand wash a shirt and iron this shirt.
Action History:
['walk_executor(basket_for_clothes_2006)', 'grab_executor(clothes_shirt_2086)', 'walk_executor(sink_42)', 'putin_executor(clothes_shirt_2086, sink_42)', 'walk_executor(clothes_shirt_2086)', 'grab_executor(clothes_shirt_2086)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'wash_executor(clothes_shirt_2086)', 'switchoff_executor(faucet_43)', 'walk_executor(ironing_board_2074)', 'put_executor(clothes_shirt_2086, ironing_board_2074)', 'walk_executor(iron_2089)', 'plugin_executor(iron_2089)', 'switchon_executor(iron_2089)', 'switchoff_executor(iron_2089)', 'plugout_executor(iron_2089)']
Time info:
Time consume: 101 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 5
goal generate times: 3
goal correct times: 0
action_num: 17

Task complete rate:
Keystate: k1 - Requires: 0 steps
Keystate: k2 - Requires: 6 steps
Action Completion Rate: 0.0
Scene_id: 0
##############################
