From agent.py
Reset goals: The sub-goals are: 
['1. Identify each room in the household.', '2. For each room, check if any light is already on.', '3. Turn on a light in rooms where no lights are currently on.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def identify_room(room:item):
    # Function to determine if an item is a room
    symbol is_a_room = exists r: item : ( (is_bedroom(r) or is_dining_room(r) or is_bathroom(r) or is_home_office(r)) and r == room )
    return is_a_room

behavior __goal__():
    body:
        # Initialize an exploration to identify each room in the household
        foreach room: item:
            if not visited(room):
                observe(room, "Identify if this item is a room")

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_368_around_bed_264(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==264
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

behavior find_towel_2083_around_bathtub_297(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathtub_instance:item where:
            is_bathtub(bathtub_instance) and id[bathtub_instance]==297
        achieve close_char(char,bathtub_instance)
        if can_open(bathtub_instance):
            achieve_once open(bathtub_instance)
            exp(towel,bathtub_instance)
        else:
            exp(towel,bathtub_instance)
    eff:
        unknown[towel]=False
        close[towel,bathtub_instance]=True
        close[bathtub_instance,towel]=True
    

behavior find_toilet_paper_2118_around_toilet_302(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind toilet_instance:item where:
            is_toilet(toilet_instance) and id[toilet_instance]==302
        achieve close_char(char,toilet_instance)
        if can_open(toilet_instance):
            achieve_once open(toilet_instance)
            exp(toilet_paper,toilet_instance)
        else:
            exp(toilet_paper,toilet_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,toilet_instance]=True
        close[toilet_instance,toilet_paper]=True
    

#exp_behavior_end

#goal_representation
 
behavior observe_rooms():
    body:
        foreach room: item:
            if (is_bedroom(room) or is_dining_room(room) or is_bathroom(room) or is_home_office(room)) and not visited(room):
                observe(room, "Identify each room in the household")

behavior __goal__():
    body:
        observe_rooms()

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior observe_rooms():
    body:
        foreach room: item:
            if (is_bedroom(room) or is_dining_room(room) or is_bathroom(room) or is_home_office(room)) and not visited(room):
                observe(room, "Identify each room in the household")

behavior __goal__():
    body:
        observe_rooms()

##############################
From agent.py-> find a plan in act()
walk_executor(dining_room_1)obs(dining_room_1, Identify each room in the household)walk_executor(home_office_161)obs(home_office_161, Identify each room in the household)walk_executor(bedroom_220)obs(bedroom_220, Identify each room in the household)walk_executor(bathroom_265)obs(bathroom_265, Identify each room in the household)walk_executor(bedroom_327)obs(bedroom_327, Identify each room in the household)
##############################
From agent.py
walk_executor(dining_room_1)

##############################
From agent.py
obs(dining_room_1, Identify each room in the household)
Get this information:  plate_2105 is inside dining_room_1. food_rice_2067 is inside dining_room_1. walllamp_46 is inside dining_room_1. after_shave_2029 is inside dining_room_1. bench_125 is inside dining_room_1. dining_room_1 is close to window_2109. ceiling_30 is inside dining_room_1. wall_8 is inside dining_room_1. floor_19 is inside dining_room_1. bench_126 is inside dining_room_1. light_49 is inside dining_room_1. door_38 is inside dining_room_1. cup_2089 is inside dining_room_1. wall_11 is inside dining_room_1. bowl_2097 is inside dining_room_1. food_jam_2059 is inside dining_room_1. food_sugar_2070 is inside dining_room_1. remote_control_2081 is inside dining_room_1. food_apple_2043 is inside dining_room_1. dough_2021 is inside dining_room_1. blender_2032 is inside dining_room_1. kitchen_counter_128 is inside dining_room_1. orchid_117 is inside dining_room_1. stovefan_139 is inside dining_room_1. floor_22 is inside dining_room_1. food_dessert_2051 is inside dining_room_1. food_noodles_2062 is inside dining_room_1. knifeblock_52 is inside dining_room_1. ceilinglamp_41 is inside dining_room_1. curtain_120 is inside dining_room_1. wall_3 is inside dining_room_1. floor_14 is inside dining_room_1. ceiling_33 is inside dining_room_1. dry_pasta_2073 is inside dining_room_1. walllamp_44 is inside dining_room_1. fridge_140 is inside dining_room_1. book_2092 is inside dining_room_1. fork_2103 is inside dining_room_1. ceiling_25 is inside dining_room_1. food_fish_2054 is inside dining_room_1. food_pizza_2065 is inside dining_room_1. console_2027 is inside dining_room_1. table_123 is inside dining_room_1. wall_6 is inside dining_room_1. cd_player_2084 is inside dining_room_1. character_219 is inside dining_room_1. food_cake_2046 is inside dining_room_1. tray_142 is inside dining_room_1. ceiling_36 is inside dining_room_1. phone_47 is inside dining_room_1. food_orange_2008 is inside dining_room_1. mat_115 is inside dining_room_1. dishwasher_143 is inside dining_room_1. bowl_2095 is inside dining_room_1. spectacles_2106 is inside dining_room_1. faucet_134 is inside dining_room_1. ceiling_28 is inside dining_room_1. food_hamburger_2057 is inside dining_room_1. food_salt_2068 is inside dining_room_1. floor_17 is inside dining_room_1. tvstand_135 is inside dining_room_1. cup_2087 is inside dining_room_1. cleaning_solution_2098 is inside dining_room_1. wall_9 is inside dining_room_1. food_cheese_2049 is inside dining_room_1. food_kiwi_2060 is inside dining_room_1. doorjamb_39 is inside dining_room_1. homework_2011 is inside dining_room_1. drawing_118 is inside dining_room_1. crayon_2030 is inside dining_room_1. bookshelf_137 is inside dining_room_1. floor_20 is inside dining_room_1. ceiling_31 is inside dining_room_1. mouse_2003 is inside dining_room_1. stove_2090 is inside dining_room_1. doorjamb_37 is between dining_room_1. floor_23 is inside dining_room_1. food_donut_2052 is inside dining_room_1. floor_12 is inside dining_room_1. window_2109 is inside dining_room_1. napkin_2014 is inside dining_room_1. ceilinglamp_42 is inside dining_room_1. food_turkey_2071 is inside dining_room_1. pot_2093 is inside dining_room_1. wall_4 is inside dining_room_1. food_bacon_2044 is inside dining_room_1. kitchen_counter_129 is inside dining_room_1. sauce_2101 is inside dining_room_1. photoframe_102 is inside dining_room_1. food_oatmeal_2063 is inside dining_room_1. milk_2074 is inside dining_room_1. oil_2102 is inside dining_room_1. door_38 is between dining_room_1. knife_2036 is inside dining_room_1. curtain_121 is inside dining_room_1. kitchen_counter_132 is inside dining_room_1. ceiling_26 is inside dining_room_1. floor_15 is inside dining_room_1. food_food_2055 is inside dining_room_1. bench_122 is inside dining_room_1. walllamp_45 is inside dining_room_1. ceiling_34 is inside dining_room_1. dvd_player_2085 is inside dining_room_1. tea_bag_2017 is inside dining_room_1. wall_7 is inside dining_room_1. food_carrot_2047 is inside dining_room_1. oven_141 is inside dining_room_1. floor_18 is inside dining_room_1. fork_2104 is inside dining_room_1. doorjamb_37 is inside dining_room_1. food_potato_2066 is inside dining_room_1. bench_124 is inside dining_room_1. bowl_2096 is inside dining_room_1. fryingpan_2107 is inside dining_room_1. shoes_2001 is inside dining_room_1. food_ice_cream_2058 is inside dining_room_1. powersocket_48 is inside dining_room_1. table_127 is inside dining_room_1. wall_10 is inside dining_room_1. cup_2088 is inside dining_room_1. window_40 is inside dining_room_1. ceiling_29 is inside dining_room_1. food_snack_2069 is inside dining_room_1. wall_2 is inside dining_room_1. coffe_maker_147 is inside dining_room_1. bookshelf_136 is inside dining_room_1. floor_21 is inside dining_room_1. food_chicken_2050 is inside dining_room_1. food_lemon_2061 is inside dining_room_1. food_vegetable_2072 is inside dining_room_1. curtain_119 is inside dining_room_1. cutting_board_2080 is inside dining_room_1. book_2091 is inside dining_room_1. food_steak_2042 is inside dining_room_1. food_egg_2053 is inside dining_room_1. microwave_149 is inside dining_room_1. chair_138 is inside dining_room_1. ceilinglamp_43 is inside dining_room_1. ceiling_32 is inside dining_room_1. laptop_2015 is inside dining_room_1. wall_5 is inside dining_room_1. juice_2034 is inside dining_room_1. cupboard_130 is inside dining_room_1. floor_24 is inside dining_room_1. food_peanut_butter_2064 is inside dining_room_1. ceiling_35 is inside dining_room_1. floor_13 is inside dining_room_1. cupboard_131 is inside dining_room_1. pot_54 is inside dining_room_1. floor_16 is inside dining_room_1. food_banana_2045 is inside dining_room_1. food_fruit_2056 is inside dining_room_1. food_butter_2018 is inside dining_room_1. mat_114 is inside dining_room_1. food_cereal_2048 is inside dining_room_1. food_onion_2026 is inside dining_room_1. toaster_144 is inside dining_room_1. sink_133 is inside dining_room_1. ceiling_27 is inside dining_room_1. dining_room_1 is CLEAN.
##############################
From agent.py
walk_executor(home_office_161)

##############################
From agent.py
obs(home_office_161, Identify each room in the household)
Get this information:  floor_163 is inside home_office_161. floor_164 is inside home_office_161. walllamp_183 is inside home_office_161. chair_2119 is inside home_office_161. cd_2100 is inside home_office_161. tvstand_186 is inside home_office_161. curtain_197 is inside home_office_161. keyboard_2111 is inside home_office_161. television_216 is inside home_office_161. floor_167 is inside home_office_161. bookshelf_189 is inside home_office_161. ceiling_178 is inside home_office_161. wall_170 is inside home_office_161. oil_2005 is inside home_office_161. ceiling_180 is inside home_office_161. character_219 is inside home_office_161. window_181 is inside home_office_161. orchid_200 is inside home_office_161. wall_173 is inside home_office_161. floor_162 is inside home_office_161. video_game_controller_2019 is inside home_office_161. couch_192 is inside home_office_161. floor_165 is inside home_office_161. dvd_player_2000 is inside home_office_161. clothes_underwear_2022 is inside home_office_161. ceiling_175 is inside home_office_161. pillow_195 is inside home_office_161. doorjamb_37 is between home_office_161. floor_168 is inside home_office_161. cat_2082 is inside home_office_161. wallshelf_187 is inside home_office_161. ceiling_176 is inside home_office_161. curtain_198 is inside home_office_161. mouse_2112 is inside home_office_161. light_217 is inside home_office_161. cup_2006 is inside home_office_161. laser_pointer_2025 is inside home_office_161. wallshelf_190 is inside home_office_161. door_234 is between home_office_161. wall_171 is inside home_office_161. doorjamb_182 is inside home_office_161. mat_201 is inside home_office_161. table_193 is inside home_office_161. walllamp_184 is inside home_office_161. ceilinglamp_185 is inside home_office_161. wall_174 is inside home_office_161. computer_2110 is inside home_office_161. ceiling_177 is inside home_office_161. floor_166 is inside home_office_161. drawing_196 is inside home_office_161. ceiling_179 is inside home_office_161. powersocket_218 is inside home_office_161. wall_169 is inside home_office_161. vacuum_cleaner_2094 is inside home_office_161. curtain_199 is inside home_office_161. photoframe_210 is inside home_office_161. bookshelf_188 is inside home_office_161. wall_172 is inside home_office_161. stereo_2007 is inside home_office_161. wallshelf_191 is inside home_office_161. home_office_161 is CLEAN.
##############################
From agent.py
walk_executor(bedroom_220)

##############################
From agent.py
obs(bedroom_220, Identify each room in the household)
Get this information:  pillow_240 is inside bedroom_220. powersocket_259 is inside bedroom_220. wall_232 is inside bedroom_220. floor_221 is inside bedroom_220. clothes_jacket_2078 is inside bedroom_220. nightstand_262 is inside bedroom_220. floor_224 is inside bedroom_220. ceilinglamp_235 is inside bedroom_220. ceiling_227 is inside bedroom_220. photoframe_246 is inside bedroom_220. bedroom_220 is close to ironing_board_2099. character_219 is inside bedroom_220. drawing_238 is inside bedroom_220. bookshelf_260 is inside bedroom_220. floor_222 is inside bedroom_220. wall_230 is inside bedroom_220. clothes_hat_2076 is inside bedroom_220. iron_2117 is inside bedroom_220. clothes_scarf_2079 is inside bedroom_220. wall_233 is inside bedroom_220. chair_263 is inside bedroom_220. floor_225 is inside bedroom_220. tablelamp_236 is inside bedroom_220. pillow_239 is inside bedroom_220. ceiling_228 is inside bedroom_220. light_258 is inside bedroom_220. door_234 is between bedroom_220. clothes_gloves_2077 is inside bedroom_220. wall_231 is inside bedroom_220. desk_261 is inside bedroom_220. floor_223 is inside bedroom_220. ironing_board_2099 is inside bedroom_220. door_234 is inside bedroom_220. bed_264 is inside bedroom_220. ceiling_226 is inside bedroom_220. mat_237 is inside bedroom_220. ceiling_229 is inside bedroom_220. clothes_dress_2075 is inside bedroom_220. headset_2086 is inside bedroom_220. bedroom_220 is CLEAN.
##############################
From agent.py
walk_executor(bathroom_265)

##############################
From agent.py
obs(bathroom_265, Identify each room in the household)
Get this information:  faucet_308 is inside bathroom_265. bathtub_297 is inside bathroom_265. wall_270 is inside bathroom_265. ceiling_281 is inside bathroom_265. clothes_skirt_2116 is inside bathroom_265. towel_rack_300 is inside bathroom_265. basket_for_clothes_2040 is inside bathroom_265. detergent_2108 is inside bathroom_265. floor_273 is inside bathroom_265. mat_292 is inside bathroom_265. shower_303 is inside bathroom_265. ceiling_284 is inside bathroom_265. bathroom_counter_306 is inside bathroom_265. wall_268 is inside bathroom_265. light_325 is inside bathroom_265. character_219 is inside bathroom_265. window_287 is inside bathroom_265. towel_rack_298 is inside bathroom_265. floor_276 is inside bathroom_265. ceiling_279 is inside bathroom_265. soap_2038 is inside bathroom_265. walllamp_290 is inside bathroom_265. toilet_paper_2118 is inside bathroom_265. washing_machine_2041 is inside bathroom_265. ceiling_282 is inside bathroom_265. curtain_293 is inside bathroom_265. wall_271 is inside bathroom_265. wallshelf_301 is inside bathroom_265. doorjamb_285 is inside bathroom_265. floor_274 is inside bathroom_265. curtain_304 is inside bathroom_265. wall_266 is inside bathroom_265. floor_277 is inside bathroom_265. floor_278 is inside bathroom_265. drawing_296 is inside bathroom_265. sink_307 is inside bathroom_265. wall_269 is inside bathroom_265. clothes_socks_2115 is inside bathroom_265. towel_rack_299 is inside bathroom_265. door_286 is between bathroom_265. ceiling_280 is inside bathroom_265. walllamp_291 is inside bathroom_265. ceilinglamp_288 is inside bathroom_265. floor_272 is inside bathroom_265. toilet_302 is inside bathroom_265. curtain_294 is inside bathroom_265. ceiling_283 is inside bathroom_265. floor_275 is inside bathroom_265. door_286 is inside bathroom_265. bathroom_cabinet_305 is inside bathroom_265. towel_2083 is inside bathroom_265. wall_267 is inside bathroom_265. clothes_pants_2113 is inside bathroom_265. clothes_shirt_2114 is inside bathroom_265. walllamp_289 is inside bathroom_265. bathroom_265 is CLEAN.
##############################
From agent.py
walk_executor(bedroom_327)

##############################
From agent.py
obs(bedroom_327, Identify each room in the household)
Get this information:  novel_2010 is inside bedroom_327. window_346 is inside bedroom_327. ceilinglamp_357 is inside bedroom_327. bed_376 is inside bedroom_327. wall_338 is inside bedroom_327. drawing_387 is inside bedroom_327. alcohol_2002 is inside bedroom_327. trashcan_360 is inside bedroom_327. ceiling_349 is inside bedroom_327. pillow_368 is inside bedroom_327. computer_379 is inside bedroom_327. curtain_390 is inside bedroom_327. wall_341 is inside bedroom_327. ceiling_352 is inside bedroom_327. floor_330 is inside bedroom_327. glue_2013 is inside bedroom_327. floor_333 is inside bedroom_327. needle_2024 is inside bedroom_327. coffee_filter_2035 is inside bedroom_327. keyboard_382 is inside bedroom_327. wall_344 is inside bedroom_327. food_bread_2016 is inside bedroom_327. chair_374 is inside bedroom_327. floor_336 is inside bedroom_327. character_219 is inside bedroom_327. ceiling_355 is inside bedroom_327. dresser_377 is inside bedroom_327. floor_328 is inside bedroom_327. wall_339 is inside bedroom_327. ceiling_347 is inside bedroom_327. tablelamp_358 is inside bedroom_327. floor_331 is inside bedroom_327. drawing_388 is inside bedroom_327. ceiling_350 is inside bedroom_327. photoframe_361 is inside bedroom_327. check_2033 is inside bedroom_327. mouse_380 is inside bedroom_327. curtain_391 is inside bedroom_327. ceiling_353 is inside bedroom_327. wall_342 is inside bedroom_327. door_38 is between bedroom_327. bookshelf_372 is inside bedroom_327. cpuscreen_383 is inside bedroom_327. wall_345 is inside bedroom_327. floor_334 is inside bedroom_327. doorjamb_356 is inside bedroom_327. pajamas_2039 is inside bedroom_327. tape_2028 is inside bedroom_327. mat_386 is inside bedroom_327. desk_375 is inside bedroom_327. ceiling_348 is inside bedroom_327. floor_337 is inside bedroom_327. crayon_2020 is inside bedroom_327. bills_2009 is inside bedroom_327. door_286 is between bedroom_327. filing_cabinet_378 is inside bedroom_327. floor_329 is inside bedroom_327. wall_340 is inside bedroom_327. tablelamp_359 is inside bedroom_327. stamp_2031 is inside bedroom_327. needle_2012 is inside bedroom_327. box_2023 is inside bedroom_327. mousepad_381 is inside bedroom_327. pillow_370 is inside bedroom_327. floor_332 is inside bedroom_327. drawing_389 is inside bedroom_327. coin_2004 is inside bedroom_327. ceiling_351 is inside bedroom_327. wall_343 is inside bedroom_327. nightstand_373 is inside bedroom_327. floor_335 is inside bedroom_327. curtain_392 is inside bedroom_327. ceiling_354 is inside bedroom_327. soap_2037 is inside bedroom_327. light_384 is inside bedroom_327. bedroom_327 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior check_light_in_room(room:item):
    body:
        foreach light: item:
            if is_light(light) and inside(light, room) and not visited(light):
                observe(light, "Check if the light is on")

behavior __goal__():
    body:
        foreach room: item:
            if is_dining_room(room) or is_home_office(room) or is_bedroom(room) or is_bathroom(room):
                check_light_in_room(room)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior check_light_in_room(room:item):
    body:
        foreach light: item:
            if is_light(light) and inside(light, room) and not visited(light):
                observe(light, "Check if the light is on")

behavior __goal__():
    body:
        foreach room: item:
            if is_dining_room(room) or is_home_office(room) or is_bedroom(room) or is_bathroom(room):
                check_light_in_room(room)

##############################
From agent.py-> find a plan in act()
walk_executor(light_49)obs(light_49, Check if the light is on)walk_executor(light_217)obs(light_217, Check if the light is on)walk_executor(light_258)obs(light_258, Check if the light is on)walk_executor(light_325)obs(light_325, Check if the light is on)walk_executor(light_384)obs(light_384, Check if the light is on)
##############################
From agent.py
walk_executor(light_49)
Robot find: phone_47, Robot is close to the light_49. 
##############################
From agent.py
obs(light_49, Check if the light is on)
Get this information:  light_49 is inside dining_room_1. light_49 is close to wall_3. light_49 is close to wall_5. light_49 is close to wall_268. light_49 is close to floor_13. light_49 is close to floor_14. light_49 is close to floor_12. light_49 is close to floor_277. light_49 is close to ceiling_25. light_49 is close to ceiling_26. light_49 is close to doorjamb_37. light_49 is close to floor_166. light_49 is close to wall_171. light_49 is close to toilet_302. light_49 is close to phone_47. light_49 is close to powersocket_48. light_49 is close to ceiling_176. light_49 is close to walllamp_183. light_49 is close to light_217. light_49 is close to powersocket_218. light_49 is close to character_219. light_49 is CLOSED. light_49 is CLEAN. light_49 is OFF. light_49 is PLUGGED_IN.
##############################
From agent.py
walk_executor(light_217)
Robot find: Robot is close to the light_217. 
##############################
From agent.py
obs(light_217, Check if the light is on)
Get this information:  light_217 is close to wall_3. light_217 is close to ceiling_26. light_217 is close to doorjamb_37. light_217 is close to floor_166. light_217 is close to floor_167. light_217 is close to wall_6. light_217 is close to wall_171. light_217 is close to wall_172. light_217 is close to floor_14. light_217 is close to phone_47. light_217 is close to powersocket_48. light_217 is close to light_49. light_217 is close to ceiling_176. light_217 is close to ceiling_177. light_217 is close to floor_15. light_217 is close to powersocket_218. light_217 is close to ceiling_27. light_217 is close to bookshelf_189. light_217 is close to character_219. light_217 is inside home_office_161. light_217 is facing television_216. light_217 is CLOSED. light_217 is CLEAN. light_217 is OFF. light_217 is PLUGGED_IN.
##############################
From agent.py
walk_executor(light_258)
Robot find: drawing_238, Robot is close to the light_258. 
##############################
From agent.py
obs(light_258, Check if the light is on)
Get this information:  light_258 is close to couch_192. light_258 is close to floor_224. light_258 is close to pillow_195. light_258 is close to drawing_196. light_258 is close to ceiling_228. light_258 is close to floor_165. light_258 is close to floor_164. light_258 is close to wall_232. light_258 is close to door_234. light_258 is close to wall_170. light_258 is close to wall_174. light_258 is close to drawing_238. light_258 is close to ceiling_179. light_258 is close to ceiling_180. light_258 is close to doorjamb_182. light_258 is close to character_219. light_258 is facing drawing_238. light_258 is inside bedroom_220. light_258 is CLOSED. light_258 is CLEAN. light_258 is OFF. light_258 is PLUGGED_IN.
##############################
From agent.py
walk_executor(light_325)
Robot find: drawing_296, mat_292, Robot is close to the light_325. 
##############################
From agent.py
obs(light_325, Check if the light is on)
Get this information:  light_325 is inside bathroom_265. light_325 is close to ceiling_355. light_325 is close to mat_292. light_325 is close to drawing_296. light_325 is close to floor_332. light_325 is close to wall_269. light_325 is close to wall_271. light_325 is close to floor_272. light_325 is close to floor_337. light_325 is close to floor_273. light_325 is close to wall_339. light_325 is close to floor_276. light_325 is close to ceiling_279. light_325 is close to ceiling_280. light_325 is close to wall_345. light_325 is close to doorjamb_285. light_325 is close to ceiling_350. light_325 is close to door_286. light_325 is close to character_219. light_325 is CLOSED. light_325 is CLEAN. light_325 is OFF. light_325 is PLUGGED_IN.
##############################
From agent.py
walk_executor(light_384)
Robot find: drawing_387, Robot is close to the light_384. 
##############################
From agent.py
obs(light_384, Check if the light is on)
Get this information:  light_384 is close to drawing_387. light_384 is close to tvstand_135. light_384 is close to wall_9. light_384 is close to wall_10. light_384 is close to floor_18. light_384 is close to floor_19. light_384 is close to ceiling_30. light_384 is close to ceiling_31. light_384 is close to door_38. light_384 is close to floor_335. light_384 is close to floor_336. light_384 is close to wall_343. light_384 is close to wall_344. light_384 is close to ceiling_353. light_384 is close to ceiling_354. light_384 is close to doorjamb_356. light_384 is close to orchid_117. light_384 is close to drawing_118. light_384 is close to desk_375. light_384 is close to mousepad_381. light_384 is close to character_219. light_384 is inside bedroom_327. light_384 is CLOSED. light_384 is CLEAN. light_384 is OFF. light_384 is PLUGGED_IN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def no_light_on_in_room(room:item):
    symbol all_lights_off=not exists light: item : (is_light(light) and inside(light, room) and is_on(light))
    return all_lights_off

behavior turn_on_light(light:item):
    body:
        if is_off(light) and has_switch(light):
            switch_on(light)

behavior ensure_light_on_in_room(room:item):
    body:
        # Ensure there is at least one light on in the room if all are off
        if no_light_on_in_room(room):
            foreach light: item:
                if is_light(light) and inside(light, room) and is_off(light) and has_switch(light):
                    walk_to(light)
                    turn_on_light(light)
                    break

behavior __goal__():
    body:
        foreach room: item:
            if not visited(room):
                observe(room, "Identify each room in the household")
                observe(room, "Check if any light is already on")

        foreach room: item:
            ensure_light_on_in_room(room)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_light_off_in_room(room:item):
    # Function to check if all lights are off in the specified room
    symbol all_lights_off=not exists light: item : (is_light(light) and inside(light, room) and is_on(light))
    return all_lights_off

behavior turn_on_light_in_room(room:item):
    body:
        if is_light_off_in_room(room):
            bind light: item where:
                is_light(light) and inside(light, room) and visited(light) and not is_on(light)
            switch_on(light)

behavior __goal__():
    body:
        foreach room: item:
            if not visited(room):
                walk_to(room)
                observe(room, "Identify each room in the household")
                foreach light: item:
                    if is_light(light) and inside(light, room) and not visited(light):
                        observe(light, "Check if the light is on")
                        turn_on_light_in_room(room)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def has_no_light_on(room:item):
    # Function to check if there is no light on in the specified room
    symbol no_light_on=not exists light: item : (is_light(light) and is_on(light) and inside(light, room))
    return no_light_on

behavior turn_light_on_if_off(light:item):
    body:
        if is_light(light) and is_off(light):
            switch_on(light)
            # Turn the light on if it is off

behavior __goal__():
    body:
        foreach room: item:
            if has_no_light_on(room):
                foreach light: item:
                    if is_light(light) and inside(light, room) and is_off(light):
                        walk_to(light)
                        turn_light_on_if_off(light)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_light_in_room(light:item):
    body:
        if is_off(light) and has_switch(light):
            switch_on(light)
            # Turn on the light if its off and has a switch

behavior __goal__():
    body:
        foreach light: item:
            if is_light(light) and not is_on(light):
                # Check for lights that are off
                turn_on_light_in_room(light)
                # Turn on the light

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior turn_on_light_in_room(light:item):
    body:
        if is_off(light) and has_switch(light):
            switch_on(light)
            # Turn on the light if its off and has a switch

behavior __goal__():
    body:
        foreach light: item:
            if is_light(light) and not is_on(light):
                # Check for lights that are off
                turn_on_light_in_room(light)
                # Turn on the light

##############################
From agent.py-> find a plan in act()
walk_executor(light_49)switchon_executor(light_49)walk_executor(light_217)switchon_executor(light_217)walk_executor(light_258)switchon_executor(light_258)walk_executor(light_325)switchon_executor(light_325)walk_executor(light_384)switchon_executor(light_384)
##############################
From agent.py
walk_executor(light_49)
Robot find: Robot is close to the light_49. 
##############################
From agent.py
switchon_executor(light_49)
Robot find: Robot is close to the light_49. light_49 is turned on. 
##############################
From agent.py
walk_executor(light_217)
Robot find: Robot is close to the light_217. 
##############################
From agent.py
switchon_executor(light_217)
Robot find: Robot is close to the light_217. light_217 is turned on. 
##############################
From agent.py
walk_executor(light_258)
Robot find: Robot is close to the light_258. 
##############################
From agent.py
switchon_executor(light_258)
Robot find: Robot is close to the light_258. light_258 is turned on. 
##############################
From agent.py
walk_executor(light_325)
Robot find: Robot is close to the light_325. 
##############################
From agent.py
switchon_executor(light_325)
Robot find: Robot is close to the light_325. light_325 is turned on. 
##############################
From agent.py
walk_executor(light_384)
Robot find: Robot is close to the light_384. 
##############################
From agent.py
switchon_executor(light_384)
Robot find: Robot is close to the light_384. light_384 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make sure there is at least one light on in every room.
Action History:
['walk_executor(dining_room_1)', 'walk_executor(home_office_161)', 'walk_executor(bedroom_220)', 'walk_executor(bathroom_265)', 'walk_executor(bedroom_327)', 'walk_executor(light_49)', 'walk_executor(light_217)', 'walk_executor(light_258)', 'walk_executor(light_325)', 'walk_executor(light_384)', 'walk_executor(light_49)', 'switchon_executor(light_49)', 'walk_executor(light_217)', 'switchon_executor(light_217)', 'walk_executor(light_258)', 'switchon_executor(light_258)', 'walk_executor(light_325)', 'switchon_executor(light_325)', 'walk_executor(light_384)', 'switchon_executor(light_384)']
Time info:
Time consume: 111 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 7
goal correct times: 0
action_num: 20

Task complete rate:
1
Scene_id: 2
##############################
