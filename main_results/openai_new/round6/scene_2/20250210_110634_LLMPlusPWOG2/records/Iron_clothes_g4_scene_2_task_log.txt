From agent.py
Reset goals: The sub-goals are: 
['Iron a shirt, and put it in on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_shirt_2114_around_ironing_board_2099(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_shirt,ironing_board_instance)
        else:
            exp(clothes_shirt,ironing_board_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,ironing_board_instance]=True
        close[ironing_board_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt_and_place_on_bed(shirt: item, ironing_board: item, iron: item, bed: item):
    body:
        achieve_once on(shirt, ironing_board) # Place the shirt on the ironing board
        achieve_once is_on(iron) # Turn the iron on
        achieve_once unplugged(iron) # Ensure the iron is unplugged (implied scenario condition for safety)
        achieve_once plugged(iron) # Plug the iron in to start ironing process
        achieve_once clean(shirt) # Make sure the shirt is ironed and clean
        achieve_once unplugged(iron) # Once ironing is complete, unplug the iron
        achieve_once on(shirt, bed) # Place the shirt on the bed after ironing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select a shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        iron_shirt_and_place_on_bed(shirt, ironing_board, iron, bed)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior iron_shirt_and_place_on_bed(shirt: item, ironing_board: item, iron: item, bed: item):
    body:
        achieve_once on(shirt, ironing_board) # Place the shirt on the ironing board
        achieve_once is_on(iron) # Turn the iron on
        achieve_once unplugged(iron) # Ensure the iron is unplugged (implied scenario condition for safety)
        achieve_once plugged(iron) # Plug the iron in to start ironing process
        achieve_once clean(shirt) # Make sure the shirt is ironed and clean
        achieve_once unplugged(iron) # Once ironing is complete, unplug the iron
        achieve_once on(shirt, bed) # Place the shirt on the bed after ironing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select a shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        iron_shirt_and_place_on_bed(shirt, ironing_board, iron, bed)

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)exp(clothes_shirt_2114, ironing_board_2099)walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)walk_executor(ironing_board_2099)put_executor(clothes_shirt_2114, ironing_board_2099)exp(iron_2117, ironing_board_2099)walk_executor(iron_2117)plugin_executor(iron_2117)switchon_executor(iron_2117)switchoff_executor(iron_2117)plugout_executor(iron_2117)plugin_executor(iron_2117)walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(iron_2117)plugout_executor(iron_2117)walk_executor(bed_264)put_executor(clothes_shirt_2114, bed_264)
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: iron_2117, Robot is close to the ironing_board_2099. 
##############################
From agent.py
exp(clothes_shirt_2114, ironing_board_2099)
Fail to find clothes_shirt_2114 around ironing_board_2099. 
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2041)open_executor(washing_machine_2041)exp(clothes_shirt_2114, washing_machine_2041)walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)walk_executor(ironing_board_2099)put_executor(clothes_shirt_2114, ironing_board_2099)plugin_executor(iron_2117)switchon_executor(iron_2117)switchoff_executor(iron_2117)plugout_executor(iron_2117)plugin_executor(iron_2117)walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(iron_2117)plugout_executor(iron_2117)walk_executor(bed_264)put_executor(clothes_shirt_2114, bed_264)
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. 
##############################
From agent.py
open_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. washing_machine_2041 is opened. 
##############################
From agent.py
exp(clothes_shirt_2114, washing_machine_2041)
Fail to find clothes_shirt_2114 around washing_machine_2041. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)exp(clothes_shirt_2114, basket_for_clothes_2040)walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)walk_executor(ironing_board_2099)put_executor(clothes_shirt_2114, ironing_board_2099)plugin_executor(iron_2117)switchon_executor(iron_2117)switchoff_executor(iron_2117)plugout_executor(iron_2117)plugin_executor(iron_2117)walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(iron_2117)plugout_executor(iron_2117)walk_executor(bed_264)put_executor(clothes_shirt_2114, bed_264)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Robot find: clothes_pants_2113, clothes_shirt_2114, clothes_socks_2115, clothes_skirt_2116, Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. 
##############################
From agent.py
exp(clothes_shirt_2114, basket_for_clothes_2040)
Find clothes_shirt_2114. 
##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2114)walk_executor(ironing_board_2099)put_executor(clothes_shirt_2114, ironing_board_2099)plugin_executor(iron_2117)switchon_executor(iron_2117)switchoff_executor(iron_2117)plugout_executor(iron_2117)plugin_executor(iron_2117)walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(iron_2117)plugout_executor(iron_2117)walk_executor(bed_264)put_executor(clothes_shirt_2114, bed_264)
##############################
From agent.py
grab_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. Grabbing clothes_shirt_2114 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. 
##############################
From agent.py
put_executor(clothes_shirt_2114, ironing_board_2099)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. ironing_board_2099 is close clothes_shirt_2114. clothes_shirt_2114 is close ironing_board_2099. clothes_shirt_2114 is on ironing_board_2099. clothes_shirt_2114 released by right hand. 
##############################
From agent.py
plugin_executor(iron_2117)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. iron_2117 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2117)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. iron_2117 is turned on. 
##############################
From agent.py
switchoff_executor(iron_2117)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. iron_2117 is turned off. 
##############################
From agent.py
plugout_executor(iron_2117)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. iron_2117 is unplugged. 
##############################
From agent.py
plugin_executor(iron_2117)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. iron_2117 is plugged in. 
##############################
From agent.py
walk_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. 
##############################
From agent.py
grab_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. Grabbing clothes_shirt_2114 by right hand. 
##############################
From agent.py
wash_executor(clothes_shirt_2114)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. clothes_shirt_2114 is cleaned. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: pot_54, Robot is close to the clothes_shirt_2114. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(iron_2117)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. 
##############################
From agent.py
plugout_executor(iron_2117)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the ironing_board_2099. Robot is close to the iron_2117. iron_2117 is unplugged. 
##############################
From agent.py
walk_executor(bed_264)
Robot find: clothes_scarf_2079, pillow_239, clothes_dress_2075, pillow_240, clothes_jacket_2078, mat_237, drawing_238, Robot is close to the clothes_shirt_2114. Robot is close to the bed_264. 
##############################
From agent.py
put_executor(clothes_shirt_2114, bed_264)
Robot find: Robot is close to the clothes_shirt_2114. Robot is close to the bed_264. bed_264 is close clothes_shirt_2114. clothes_shirt_2114 is close bed_264. clothes_shirt_2114 is on bed_264. clothes_shirt_2114 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The shirt must be ironed. Ensure the shirt is placed on the ironing board and ironed. You need to turn the iron on and off to simulate the ironing process, ensure the shirt is clean, and the iron is unplugged. After that, move the shirt to the bed.
##############################
From agent.py
Human Instruction: The shirt must be ironed. Ensure the shirt is placed on the ironing board and ironed. You need to turn the iron on and off to simulate the ironing process, ensure the shirt is clean, and the iron is unplugged. After that, move the shirt to the bed.

The actions you have taken:
Action 1: Walk to ironing_board_2099.
Action 2: look for clothes_shirt_2114 around ironing_board_2099.
Action 3: Walk to washing_machine_2041.
Action 4: Open washing_machine_2041.
Action 5: look for clothes_shirt_2114 around washing_machine_2041.
Action 6: Walk to basket_for_clothes_2040.
Action 7: look for clothes_shirt_2114 around basket_for_clothes_2040.
Action 8: Grab clothes_shirt_2114.
Action 9: Walk to ironing_board_2099.
Action 10: Put clothes_shirt_2114 on ironing_board_2099.
Action 11: Plug in iron_2117.
Action 12: Switch on iron_2117.
Action 13: Switch off iron_2117.
Action 14: Plug out iron_2117.
Action 15: Plug in iron_2117.
Action 16: Walk to clothes_shirt_2114.
Action 17: Grab clothes_shirt_2114.
Action 18: Wash clothes_shirt_2114.
Action 19: Walk to faucet_134.
Action 20: Switch off faucet_134.
Action 21: Walk to iron_2117.
Action 22: Plug out iron_2117.
Action 23: Walk to bed_264.
Action 24: Put clothes_shirt_2114 on bed_264.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_underwear_2022_around_cupboard_130(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(clothes_underwear,cupboard_instance)
        else:
            exp(clothes_underwear,cupboard_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,cupboard_instance]=True
        close[cupboard_instance,clothes_underwear]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_ironing(iron:item, shirt:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)
        # Position the shirt on the ironing board
        achieve plugged(iron)
        # Ensure the iron is plugged in
        achieve is_on(iron)
        # Turn the iron on
        achieve clean(shirt)
        # Ensure the shirt is clean

behavior finish_ironing(iron:item, shirt:item, bed:item):
    body:
        achieve unplugged(iron)
        # Unplug the iron
        achieve_once on(shirt, bed)
        # Place the shirt on the bed

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        bind bed: item where:
            is_bed(bed)
        prepare_ironing(iron, shirt, ironing_board)
        finish_ironing(iron, shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_underwear_2022_around_bathroom_cabinet_305(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(clothes_underwear,bathroom_cabinet_instance)
        else:
            exp(clothes_underwear,bathroom_cabinet_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,clothes_underwear]=True
    

behavior find_clothes_hat_2076_around_bathroom_counter_306(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(clothes_hat,bathroom_counter_instance)
        else:
            exp(clothes_hat,bathroom_counter_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,bathroom_counter_instance]=True
        close[bathroom_counter_instance,clothes_hat]=True
    

behavior find_clothes_gloves_2077_around_clothes_dress_2075(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind clothes_dress_instance:item where:
            is_clothes_dress(clothes_dress_instance) and id[clothes_dress_instance]==2075
        achieve close_char(char,clothes_dress_instance)
        if can_open(clothes_dress_instance):
            achieve_once open(clothes_dress_instance)
            exp(clothes_gloves,clothes_dress_instance)
        else:
            exp(clothes_gloves,clothes_dress_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,clothes_dress_instance]=True
        close[clothes_dress_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item):
    body:
        achieve plugged(iron)
        achieve_once is_on(iron)
        achieve_once clean(shirt)
        achieve_once on(shirt, bed)
        achieve unplugged(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed

        bind bed: item where:
            is_bed(bed)
        # Select a bed to place the shirt on after ironing

        bind iron: item where:
            is_iron(iron)
        # Select the iron for ironing the shirt

        iron_shirt(shirt, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_underwear_2022_around_bathroom_counter_306(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(clothes_underwear,bathroom_counter_instance)
        else:
            exp(clothes_underwear,bathroom_counter_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,bathroom_counter_instance]=True
        close[bathroom_counter_instance,clothes_underwear]=True
    

behavior find_clothes_hat_2076_around_cupboard_130(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(clothes_hat,cupboard_instance)
        else:
            exp(clothes_hat,cupboard_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,cupboard_instance]=True
        close[cupboard_instance,clothes_hat]=True
    

behavior find_pajamas_2039_around_dresser_377(pajamas:item):
    goal: not unknown(pajamas)
    body:
        assert is_pajamas(pajamas)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(pajamas,dresser_instance)
        else:
            exp(pajamas,dresser_instance)
    eff:
        unknown[pajamas]=False
        close[pajamas,dresser_instance]=True
        close[dresser_instance,pajamas]=True
    

#exp_behavior_end

#goal_representation
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve_on_iron_board(shirt, ironing_board)
        achieve_on_iron(shirt)
        achieve unplugged(iron)

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Ensure the shirt is clean
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        bind iron: item where:
            is_iron(iron)
        # Select the iron
        bind bed: item where:
            is_bed(bed)
        # Select the bed
        iron_shirt(shirt, ironing_board, iron)
        place_shirt_on_bed(shirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_underwear_2022_around_bathroom_cabinet_305(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(clothes_underwear,bathroom_cabinet_instance)
        else:
            exp(clothes_underwear,bathroom_cabinet_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,clothes_underwear]=True
    

behavior find_clothes_hat_2076_around_clothes_jacket_2078(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind clothes_jacket_instance:item where:
            is_clothes_jacket(clothes_jacket_instance) and id[clothes_jacket_instance]==2078
        achieve close_char(char,clothes_jacket_instance)
        if can_open(clothes_jacket_instance):
            achieve_once open(clothes_jacket_instance)
            exp(clothes_hat,clothes_jacket_instance)
        else:
            exp(clothes_hat,clothes_jacket_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,clothes_jacket_instance]=True
        close[clothes_jacket_instance,clothes_hat]=True
    

behavior find_clothes_gloves_2077_around_bathroom_counter_306(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(clothes_gloves,bathroom_counter_instance)
        else:
            exp(clothes_gloves,bathroom_counter_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,bathroom_counter_instance]=True
        close[bathroom_counter_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation

behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve_once is_clean(shirt)
        # Ensure the shirt is clean before ironing
        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve plugged(iron)
        # Plug in the iron
        achieve is_on(iron)
        # Switch on the iron

behavior unplug_and_turn_off_iron(iron:item):
    body:
        achieve_once is_off(iron)
        # Switch off the iron
        achieve_once unplugged(iron)
        # Unplug the iron

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve_once on(shirt, bed)
        # Place the shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select a shirt
        bind iron: item where:
            is_iron(iron)
        # Select an iron
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board
        bind bed: item where:
            is_bed(bed)
        # Select a bed
        iron_shirt(shirt, iron, ironing_board)
        unplug_and_turn_off_iron(iron)
        place_shirt_on_bed(shirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_underwear_2022_around_bathroom_cabinet_305(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(clothes_underwear,bathroom_cabinet_instance)
        else:
            exp(clothes_underwear,bathroom_cabinet_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,clothes_underwear]=True
    

behavior find_clothes_hat_2076_around_nightstand_262(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==262
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(clothes_hat,nightstand_instance)
        else:
            exp(clothes_hat,nightstand_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,nightstand_instance]=True
        close[nightstand_instance,clothes_hat]=True
    

behavior find_clothes_gloves_2077_around_clothes_jacket_2078(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind clothes_jacket_instance:item where:
            is_clothes_jacket(clothes_jacket_instance) and id[clothes_jacket_instance]==2078
        achieve close_char(char,clothes_jacket_instance)
        if can_open(clothes_jacket_instance):
            achieve_once open(clothes_jacket_instance)
            exp(clothes_gloves,clothes_jacket_instance)
        else:
            exp(clothes_gloves,clothes_jacket_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,clothes_jacket_instance]=True
        close[clothes_jacket_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve plugged(iron)
        achieve is_on(iron)
        achieve_once on(shirt, ironing_board)
        achieve clean(shirt)
        achieve_once unplugged(iron)

behavior place_shirt_on_bed(shirt:item, bed:item):
    body:
        achieve on(shirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to iron
        bind iron: item where:
            is_iron(iron)
        # Select the iron
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        bind bed: item where:
            is_bed(bed)
        # Select the bed
        
        iron_shirt(shirt, iron, ironing_board) # Iron the shirt
        place_shirt_on_bed(shirt, bed) # Place the shirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_underwear_2022_around_dresser_377(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_underwear,dresser_instance)
        else:
            exp(clothes_underwear,dresser_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,dresser_instance]=True
        close[dresser_instance,clothes_underwear]=True
    

behavior find_clothes_hat_2076_around_clothes_jacket_2078(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind clothes_jacket_instance:item where:
            is_clothes_jacket(clothes_jacket_instance) and id[clothes_jacket_instance]==2078
        achieve close_char(char,clothes_jacket_instance)
        if can_open(clothes_jacket_instance):
            achieve_once open(clothes_jacket_instance)
            exp(clothes_hat,clothes_jacket_instance)
        else:
            exp(clothes_hat,clothes_jacket_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,clothes_jacket_instance]=True
        close[clothes_jacket_instance,clothes_hat]=True
    

behavior find_clothes_gloves_2077_around_clothes_jacket_2078(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind clothes_jacket_instance:item where:
            is_clothes_jacket(clothes_jacket_instance) and id[clothes_jacket_instance]==2078
        achieve close_char(char,clothes_jacket_instance)
        if can_open(clothes_jacket_instance):
            achieve_once open(clothes_jacket_instance)
            exp(clothes_gloves,clothes_jacket_instance)
        else:
            exp(clothes_gloves,clothes_jacket_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,clothes_jacket_instance]=True
        close[clothes_jacket_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve plugged(iron) # Plug in the iron
        achieve is_on(iron) # Turn on the iron
        achieve clean(shirt) # Ensure the shirt is clean
        achieve_once inhand(shirt) # Temporarily hold the shirt to iron it
        achieve_once on(shirt, ironing_board) # Place the shirt on the ironing board
        achieve is_off(iron) # Turn off the iron
        achieve unplugged(iron) # Unplug the iron

behavior move_shirt_to_bed(shirt:item, bed:item):
    body:
        achieve_once inhand(shirt) # Temporarily hold the shirt to move it
        achieve_once on(shirt, bed) # Place the shirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        bind iron: item where:
            is_iron(iron)
        bind bed: item where:
            is_bed(bed)
        iron_shirt(shirt, ironing_board, iron)
        move_shirt_to_bed(shirt, bed)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
Error record: object of type 'NoneType' has no len()
##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
['walk_executor(ironing_board_2099)', 'walk_executor(washing_machine_2041)', 'open_executor(washing_machine_2041)', 'walk_executor(basket_for_clothes_2040)', 'grab_executor(clothes_shirt_2114)', 'walk_executor(ironing_board_2099)', 'put_executor(clothes_shirt_2114, ironing_board_2099)', 'plugin_executor(iron_2117)', 'switchon_executor(iron_2117)', 'switchoff_executor(iron_2117)', 'plugout_executor(iron_2117)', 'plugin_executor(iron_2117)', 'walk_executor(clothes_shirt_2114)', 'grab_executor(clothes_shirt_2114)', 'wash_executor(clothes_shirt_2114)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(iron_2117)', 'plugout_executor(iron_2117)', 'walk_executor(bed_264)', 'put_executor(clothes_shirt_2114, bed_264)']
Time info:
Time consume: 193 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 7
goal correct times: 0
action_num: 21

Task complete rate:
Keystate: k1 - Requires: 9 steps
Keystate: k2 - Requires: 0 steps
Action Completion Rate: 0.0
Scene_id: 2
##############################
