From agent.py
Reset goals: The sub-goals are: 
['Find my spectacles and put it on the coffe table in home office. Then find the book and put it on the coffe table in home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_spectacles_2106_around_home_office_161(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==161
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(spectacles,home_office_instance)
        else:
            exp(spectacles,home_office_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,home_office_instance]=True
        close[home_office_instance,spectacles]=True
    

behavior find_book_2091_around_bookshelf_136(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==136
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_place_spectacles(spectacles:item, table:item):
    body:
        achieve_once on(spectacles, table)

behavior find_and_place_book(book:item, table:item):
    body:
        achieve_once on(book, table)

behavior __goal__():
    body:
        bind table: item where:
            is_table(table) and is_home_office(inside(table))
        # Bind the table in the home office

        bind spectacles: item where:
            is_spectacles(spectacles)
        # Bind the spectacles
        find_and_place_spectacles(spectacles, table)

        bind book: item where:
            is_book(book)
        # Bind a book
        find_and_place_book(book, table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_spectacles_2106_around_home_office_161(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==161
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(spectacles,home_office_instance)
        else:
            exp(spectacles,home_office_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,home_office_instance]=True
        close[home_office_instance,spectacles]=True
    

behavior find_book_2092_around_bookshelf_136(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==136
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_place_item(item_type_function, destination_table: item, location_item: item):
    body:
        bind item: item where:
            item_type_function(item)
        # Achieve inhand state temporarily to place the item on the table
        achieve_once on(item, destination_table)

def locate_item_type(item_type_function):
    symbol found = exists o: item : (item_type_function(o))
    return found

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)

        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)

        # Find and place spectacles
        if not locate_item_type(is_spectacles):
            foreach o: item:
                if is_spectacles(o) and not visited(o):
                    observe(o, "Locate the position of spectacles")

        if locate_item_type(is_spectacles):
            find_and_place_item(is_spectacles, coffee_table, home_office)

        # Find and place book
        if not locate_item_type(is_book):
            foreach o: item:
                if is_book(o) and not visited(o):
                    observe(o, "Locate the position of book")

        if locate_item_type(is_book):
            find_and_place_item(is_book, coffee_table, home_office)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_spectacles_2106_around_computer_2110(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==2110
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(spectacles,computer_instance)
        else:
            exp(spectacles,computer_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,computer_instance]=True
        close[computer_instance,spectacles]=True
    

behavior find_book_2091_around_bookshelf_136(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==136
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_spectacles_on_table(spectacles: item, table: item):
    body:
        achieve_once on(spectacles, table)

behavior place_book_on_table(book: item, table: item):
    body:
        achieve_once on(book, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office room
        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table inside the home office
        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select the spectacles
        bind book: item where:
            is_book(book)
        # Select the book
        place_spectacles_on_table(spectacles, coffee_table)
        # Place the spectacles on the coffee table
        place_book_on_table(book, coffee_table)
        # Place the book on the coffee table

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior place_spectacles_on_table(spectacles: item, table: item):
    body:
        achieve_once on(spectacles, table)

behavior place_book_on_table(book: item, table: item):
    body:
        achieve_once on(book, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office room
        bind coffee_table: item where:
            is_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table inside the home office
        bind spectacles: item where:
            is_spectacles(spectacles)
        # Select the spectacles
        bind book: item where:
            is_book(book)
        # Select the book
        place_spectacles_on_table(spectacles, coffee_table)
        # Place the spectacles on the coffee table
        place_book_on_table(book, coffee_table)
        # Place the book on the coffee table

##############################
From agent.py-> find a plan in act()
walk_executor(computer_2110)exp(spectacles_2106, computer_2110)walk_executor(spectacles_2106)grab_executor(spectacles_2106)walk_executor(table_193)put_executor(spectacles_2106, table_193)walk_executor(bookshelf_136)exp(book_2091, bookshelf_136)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(computer_2110)
Robot find: dvd_player_2000, mouse_2112, chair_2119, keyboard_2111, pillow_195, laser_pointer_2025, mat_201, oil_2005, drawing_196, Robot is close to the table_193. Robot is close to the computer_2110. 
##############################
From agent.py
exp(spectacles_2106, computer_2110)
Fail to find spectacles_2106 around computer_2110. 
##############################
From agent.py-> find a plan in act()
walk_executor(home_office_161)exp(spectacles_2106, home_office_161)walk_executor(spectacles_2106)grab_executor(spectacles_2106)walk_executor(table_193)put_executor(spectacles_2106, table_193)walk_executor(bookshelf_136)exp(book_2091, bookshelf_136)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(home_office_161)

##############################
From agent.py
exp(spectacles_2106, home_office_161)
Fail to find spectacles_2106 around home_office_161. 
##############################
From agent.py-> find a plan in act()
walk_executor(home_office_161)exp(spectacles_2106, home_office_161)walk_executor(spectacles_2106)grab_executor(spectacles_2106)walk_executor(table_193)put_executor(spectacles_2106, table_193)walk_executor(bookshelf_136)exp(book_2091, bookshelf_136)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(home_office_161)

##############################
From agent.py
exp(spectacles_2106, home_office_161)
Fail to find spectacles_2106 around home_office_161. 
##############################
From agent.py-> find a plan in act()
walk_executor(home_office_161)exp(spectacles_2106, home_office_161)walk_executor(spectacles_2106)grab_executor(spectacles_2106)walk_executor(table_193)put_executor(spectacles_2106, table_193)walk_executor(bookshelf_137)open_executor(bookshelf_137)exp(book_2091, bookshelf_137)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(home_office_161)

##############################
From agent.py
exp(spectacles_2106, home_office_161)
Fail to find spectacles_2106 around home_office_161. 
##############################
From agent.py-> find a plan in act()
walk_executor(home_office_161)exp(spectacles_2106, home_office_161)walk_executor(spectacles_2106)grab_executor(spectacles_2106)walk_executor(table_193)put_executor(spectacles_2106, table_193)walk_executor(bookshelf_136)exp(book_2091, bookshelf_136)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(home_office_161)

##############################
From agent.py
exp(spectacles_2106, home_office_161)
Fail to find spectacles_2106 around home_office_161. 
##############################
From agent.py-> find a plan in act()
walk_executor(home_office_161)exp(spectacles_2106, home_office_161)walk_executor(spectacles_2106)grab_executor(spectacles_2106)walk_executor(table_193)put_executor(spectacles_2106, table_193)walk_executor(bookshelf_136)exp(book_2091, bookshelf_136)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(home_office_161)

##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find spectacles_2106 ?
Answer: Please proceed to dining_room_1. Once there, locate kitchen_counter_128. You will find spectacles_2106 on top of kitchen_counter_128.
Re-decompose: None

##############################
From agent.py
Human Instruction: Please proceed to dining_room_1. Once there, locate kitchen_counter_128. You will find spectacles_2106 on top of kitchen_counter_128.

The actions you have taken:
Action 1: Walk to computer_2110.
Action 2: look for spectacles_2106 around computer_2110.
Action 3: Walk to home_office_161.
Action 4: look for spectacles_2106 around home_office_161.
Action 5: Walk to home_office_161.
Action 6: look for spectacles_2106 around home_office_161.
Action 7: Walk to home_office_161.
Action 8: look for spectacles_2106 around home_office_161.
Action 9: Walk to home_office_161.
Action 10: look for spectacles_2106 around home_office_161.
Action 11: Walk to home_office_161.

##############################
From agent.py
exp(spectacles_2106, home_office_161)
Fail to find spectacles_2106 around home_office_161. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(spectacles_2106, kitchen_counter_128)walk_executor(spectacles_2106)grab_executor(spectacles_2106)walk_executor(table_193)put_executor(spectacles_2106, table_193)walk_executor(bookshelf_372)open_executor(bookshelf_372)exp(book_2091, bookshelf_372)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(spectacles_2106, kitchen_counter_128)
Find spectacles_2106. 
##############################
From agent.py-> find a plan in act()
walk_executor(spectacles_2106)grab_executor(spectacles_2106)walk_executor(table_193)put_executor(spectacles_2106, table_193)walk_executor(bookshelf_372)open_executor(bookshelf_372)exp(book_2091, bookshelf_372)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(spectacles_2106)
Robot find: Robot is close to the kitchen_counter_128. Robot is close to the spectacles_2106. 
##############################
From agent.py
grab_executor(spectacles_2106)
Robot find: Robot is close to the kitchen_counter_128. Robot is close to the spectacles_2106. Grabbing spectacles_2106 by right hand. 
##############################
From agent.py
walk_executor(table_193)
Robot find: Robot is close to the spectacles_2106. Robot is close to the table_193. 
##############################
From agent.py
put_executor(spectacles_2106, table_193)
Robot find: Robot is close to the spectacles_2106. Robot is close to the table_193. table_193 is close spectacles_2106. spectacles_2106 is close table_193. spectacles_2106 is on table_193. spectacles_2106 released by right hand. 
##############################
From agent.py
walk_executor(bookshelf_372)
Robot find: stamp_2031, drawing_389, Robot is close to the bookshelf_372. 
##############################
From agent.py
open_executor(bookshelf_372)
Robot find: Robot is close to the bookshelf_372. bookshelf_372 is opened. 
##############################
From agent.py
exp(book_2091, bookshelf_372)
Fail to find book_2091 around bookshelf_372. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_137)open_executor(bookshelf_137)exp(book_2091, bookshelf_137)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(bookshelf_137)
Robot find: cup_2089, book_2092, drawing_118, Robot is close to the bookshelf_137. 
##############################
From agent.py
open_executor(bookshelf_137)
Robot find: Robot is close to the bookshelf_137. Robot is close to the photoframe_102. bookshelf_137 is opened. 
##############################
From agent.py
exp(book_2091, bookshelf_137)
Fail to find book_2091 around bookshelf_137. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2092)grab_executor(book_2092)walk_executor(table_193)put_executor(book_2092, table_193)
##############################
From agent.py
walk_executor(book_2092)
Robot find: Robot is close to the bookshelf_137. Robot is close to the book_2092. 
##############################
From agent.py
grab_executor(book_2092)
Robot find: Robot is close to the bookshelf_137. Robot is close to the book_2092. Grabbing book_2092 by right hand. 
##############################
From agent.py
walk_executor(table_193)
Robot find: Robot is close to the book_2092. Robot is close to the table_193. 
##############################
From agent.py
put_executor(book_2092, table_193)
Robot find: Robot is close to the book_2092. Robot is close to the table_193. table_193 is close book_2092. book_2092 is close table_193. book_2092 is on table_193. book_2092 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Find my spectacles and put it on the coffe table in home office. Then find the book and put it on the coffe table in home office.
Action History:
['walk_executor(computer_2110)', 'walk_executor(home_office_161)', 'walk_executor(home_office_161)', 'walk_executor(home_office_161)', 'walk_executor(home_office_161)', 'walk_executor(home_office_161)', 'walk_executor(kitchen_counter_128)', 'walk_executor(spectacles_2106)', 'grab_executor(spectacles_2106)', 'walk_executor(table_193)', 'put_executor(spectacles_2106, table_193)', 'walk_executor(bookshelf_372)', 'open_executor(bookshelf_372)', 'walk_executor(bookshelf_137)', 'open_executor(bookshelf_137)', 'walk_executor(book_2092)', 'grab_executor(book_2092)', 'walk_executor(table_193)', 'put_executor(book_2092, table_193)']
Time info:
Time consume: 122 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 3
goal correct times: 0
action_num: 19

Task complete rate:
1
Scene_id: 2
##############################
