From agent.py
Reset goals: The sub-goals are: 
['Make chicken pasta, put it in a plate.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_kitchen_counter_129(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(plate,kitchen_counter_instance)
        else:
            exp(plate,kitchen_counter_instance)
    eff:
        unknown[plate]=False
        close[plate,kitchen_counter_instance]=True
        close[kitchen_counter_instance,plate]=True
    

behavior find_food_chicken_2050_around_fridge_140(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_fryingpan_2107_around_kitchen_counter_129(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

behavior find_pot_54_around_kitchen_counter_129(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(pot,kitchen_counter_instance)
        else:
            exp(pot,kitchen_counter_instance)
    eff:
        unknown[pot]=False
        close[pot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,pot]=True
    

behavior find_oil_2005_around_kitchen_counter_129(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(oil,kitchen_counter_instance)
        else:
            exp(oil,kitchen_counter_instance)
    eff:
        unknown[oil]=False
        close[oil,kitchen_counter_instance]=True
        close[kitchen_counter_instance,oil]=True
    

behavior find_dry_pasta_2073_around_kitchen_counter_129(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(dry_pasta,kitchen_counter_instance)
        else:
            exp(dry_pasta,kitchen_counter_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,kitchen_counter_instance]=True
        close[kitchen_counter_instance,dry_pasta]=True
    

behavior find_food_food_2055_around_kitchen_counter_129(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_food,kitchen_counter_instance)
        else:
            exp(food_food,kitchen_counter_instance)
    eff:
        unknown[food_food]=False
        close[food_food,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
 
behavior cook_chicken_pasta(chicken:item, pasta:item, stove:item, pot:item, pan:item, cooking_oil:item):
    body:
        achieve_once inside(chicken, pan)
        # Place chicken in a pan
        achieve_once inside(pasta, pot)
        # Place pasta in a pot
        achieve_once inside(cooking_oil, pan)
        # Add cooking oil into the pan
        achieve is_on(stove)
        # Ensure the stove is on
        achieve_once cut(chicken)
        # Cut the chicken
        achieve has_water(pot)
        # Fill the pot with water
        achieve_once is_on(stove)
        # Ensure the stove is still on for cooking

behavior plate_food(chicken_pasta:item, plate:item):
    body:
        achieve_once on(chicken_pasta, plate)
        # Place the chicken pasta on the plate

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        bind dry_pasta: item where:
            is_dry_pasta(dry_pasta)
        bind stove: item where:
            is_stove(stove)
        bind pot: item where:
            is_pot(pot)
        bind pan: item where:
            is_fryingpan(pan)
        bind cooking_oil: item where:
            is_oil(cooking_oil)
        bind chicken_pasta: item where:
            is_food_food(chicken_pasta)
        bind plate: item where:
            is_plate(plate)
        cook_chicken_pasta(chicken, dry_pasta, stove, pot, pan, cooking_oil)
        plate_food(chicken_pasta, plate)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_kitchen_counter_129(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(plate,kitchen_counter_instance)
        else:
            exp(plate,kitchen_counter_instance)
    eff:
        unknown[plate]=False
        close[plate,kitchen_counter_instance]=True
        close[kitchen_counter_instance,plate]=True
    

behavior find_food_chicken_2050_around_fridge_140(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_dry_pasta_2073_around_kitchen_counter_129(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(dry_pasta,kitchen_counter_instance)
        else:
            exp(dry_pasta,kitchen_counter_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,kitchen_counter_instance]=True
        close[kitchen_counter_instance,dry_pasta]=True
    

#exp_behavior_end

#goal_representation

behavior make_chicken_pasta_with_plate(chicken:item, pasta:item, plate:item):
    body:
        achieve_once cut(chicken)
        # Ensure chicken is cut
        achieve_once inside(chicken, stove)
        # Place chicken inside a pot on the stove to cook
        achieve_once inside(pasta, stove)
        # Place pasta inside a pot on the stove to cook
        achieve_once on(pasta, plate)
        # Put the cooked pasta on the plate
        achieve_once on(chicken, plate)
        # Put the cooked chicken on the plate

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        bind pasta: item where:
            is_dry_pasta(pasta)
        bind plate: item where:
            is_plate(plate)
        # Select a plate
        make_chicken_pasta_with_plate(chicken, pasta, plate)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_2105_around_kitchen_counter_129(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(plate,kitchen_counter_instance)
        else:
            exp(plate,kitchen_counter_instance)
    eff:
        unknown[plate]=False
        close[plate,kitchen_counter_instance]=True
        close[kitchen_counter_instance,plate]=True
    

behavior find_food_chicken_2050_around_fridge_140(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_pot_54_around_kitchen_counter_129(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(pot,kitchen_counter_instance)
        else:
            exp(pot,kitchen_counter_instance)
    eff:
        unknown[pot]=False
        close[pot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,pot]=True
    

behavior find_dry_pasta_2073_around_kitchen_counter_129(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(dry_pasta,kitchen_counter_instance)
        else:
            exp(dry_pasta,kitchen_counter_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,kitchen_counter_instance]=True
        close[kitchen_counter_instance,dry_pasta]=True
    

behavior find_knife_2036_around_kitchen_counter_129(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(knife,kitchen_counter_instance)
        else:
            exp(knife,kitchen_counter_instance)
    eff:
        unknown[knife]=False
        close[knife,kitchen_counter_instance]=True
        close[kitchen_counter_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_chicken_pasta(chicken:item, pasta:item, pot:item, stove:item, cutting_board:item, knife:item, plate:item):
    body:
        achieve_once cut(chicken)
        achieve_once inside(chicken, pot)
        achieve_once inside(pasta, pot)
        achieve_once is_on(stove)
        # Assume pasta and chicken are cooked together in the pot on the stove
        achieve_once clean(plate) # Ensure the plate is clean
        achieve_once on(chicken, plate)
        achieve_once on(pasta, plate)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        bind pasta: item where:
            is_dry_pasta(pasta)
        bind pot: item where:
            is_pot(pot)
        bind stove: item where:
            is_stove(stove)
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        bind knife: item where:
            is_knife(knife)
        bind plate: item where:
            is_plate(plate)
        prepare_chicken_pasta(chicken, pasta, pot, stove, cutting_board, knife, plate)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior prepare_chicken_pasta(chicken:item, pasta:item, pot:item, stove:item, cutting_board:item, knife:item, plate:item):
    body:
        achieve_once cut(chicken)
        achieve_once inside(chicken, pot)
        achieve_once inside(pasta, pot)
        achieve_once is_on(stove)
        # Assume pasta and chicken are cooked together in the pot on the stove
        achieve_once clean(plate) # Ensure the plate is clean
        achieve_once on(chicken, plate)
        achieve_once on(pasta, plate)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        bind pasta: item where:
            is_dry_pasta(pasta)
        bind pot: item where:
            is_pot(pot)
        bind stove: item where:
            is_stove(stove)
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        bind knife: item where:
            is_knife(knife)
        bind plate: item where:
            is_plate(plate)
        prepare_chicken_pasta(chicken, pasta, pot, stove, cutting_board, knife, plate)

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(cutting_board_2080)put_executor(food_chicken_2050, cutting_board_2080)walk_executor(kitchen_counter_129)exp(knife_2036, kitchen_counter_129)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_chicken_2050)cut_executor(food_chicken_2050)walk_executor(kitchen_counter_129)exp(pot_54, kitchen_counter_129)walk_executor(pot_54)open_executor(pot_54)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(pot_54)putin_executor(food_chicken_2050, pot_54)walk_executor(kitchen_counter_129)exp(dry_pasta_2073, kitchen_counter_129)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_54)putin_executor(dry_pasta_2073, pot_54)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(kitchen_counter_129)exp(plate_2105, kitchen_counter_129)walk_executor(plate_2105)grab_executor(plate_2105)wash_executor(plate_2105)walk_executor(kitchen_counter_132)put_executor(knife_2036, kitchen_counter_132)switchoff_executor(faucet_134)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(plate_2105)put_executor(food_chicken_2050, plate_2105)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(plate_2105)put_executor(dry_pasta_2073, plate_2105)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_chicken_2050, fridge_140)
Find food_chicken_2050. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_chicken_2050)walk_executor(cutting_board_2080)put_executor(food_chicken_2050, cutting_board_2080)walk_executor(kitchen_counter_129)exp(knife_2036, kitchen_counter_129)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_chicken_2050)cut_executor(food_chicken_2050)walk_executor(kitchen_counter_129)exp(pot_54, kitchen_counter_129)walk_executor(pot_54)open_executor(pot_54)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(pot_54)putin_executor(food_chicken_2050, pot_54)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_54)putin_executor(dry_pasta_2073, pot_54)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(kitchen_counter_129)exp(plate_2105, kitchen_counter_129)walk_executor(plate_2105)grab_executor(plate_2105)wash_executor(plate_2105)walk_executor(kitchen_counter_132)put_executor(knife_2036, kitchen_counter_132)switchoff_executor(faucet_134)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(plate_2105)put_executor(food_chicken_2050, plate_2105)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(plate_2105)put_executor(dry_pasta_2073, plate_2105)
##############################
From agent.py
grab_executor(food_chicken_2050)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. Grabbing food_chicken_2050 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the food_chicken_2050. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_chicken_2050, cutting_board_2080)
Robot find: Robot is close to the food_chicken_2050. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_chicken_2050 is close cutting_board_2080. cutting_board_2080 is close food_chicken_2050. food_chicken_2050 is on cutting_board_2080. food_chicken_2050 released by right hand. 
##############################
From agent.py
walk_executor(kitchen_counter_129)
Robot find: fryingpan_2107, oil_2102, pot_54, pot_2093, Robot is close to the kitchen_counter_129. 
##############################
From agent.py
exp(knife_2036, kitchen_counter_129)
Fail to find knife_2036 around kitchen_counter_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_chicken_2050)cut_executor(food_chicken_2050)walk_executor(pot_54)open_executor(pot_54)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(pot_54)putin_executor(food_chicken_2050, pot_54)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_54)putin_executor(dry_pasta_2073, pot_54)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(cupboard_130)exp(plate_2105, cupboard_130)walk_executor(plate_2105)grab_executor(plate_2105)wash_executor(plate_2105)walk_executor(kitchen_counter_132)put_executor(knife_2036, kitchen_counter_132)switchoff_executor(faucet_134)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(plate_2105)put_executor(food_chicken_2050, plate_2105)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(plate_2105)put_executor(dry_pasta_2073, plate_2105)
##############################
From agent.py
walk_executor(knifeblock_52)
Robot find: Robot is close to the knifeblock_52. 
##############################
From agent.py
exp(knife_2036, knifeblock_52)
Fail to find knife_2036 around knifeblock_52. 
##############################
From agent.py-> find a plan in act()
walk_executor(doorjamb_285)exp(knife_2036, doorjamb_285)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_chicken_2050)cut_executor(food_chicken_2050)walk_executor(pot_54)open_executor(pot_54)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(pot_54)putin_executor(food_chicken_2050, pot_54)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_54)putin_executor(dry_pasta_2073, pot_54)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(cupboard_130)exp(plate_2105, cupboard_130)walk_executor(plate_2105)grab_executor(plate_2105)wash_executor(plate_2105)walk_executor(kitchen_counter_132)put_executor(knife_2036, kitchen_counter_132)switchoff_executor(faucet_134)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(plate_2105)put_executor(food_chicken_2050, plate_2105)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(plate_2105)put_executor(dry_pasta_2073, plate_2105)
##############################
From agent.py
walk_executor(doorjamb_285)
Robot find: mat_292, drawing_296, Robot is close to the doorjamb_285. 
##############################
From agent.py
exp(knife_2036, doorjamb_285)
Fail to find knife_2036 around doorjamb_285. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(knife_2036, cupboard_130)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_chicken_2050)cut_executor(food_chicken_2050)walk_executor(pot_54)open_executor(pot_54)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(pot_54)putin_executor(food_chicken_2050, pot_54)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_54)putin_executor(dry_pasta_2073, pot_54)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(cupboard_130)exp(plate_2105, cupboard_130)walk_executor(plate_2105)grab_executor(plate_2105)wash_executor(plate_2105)walk_executor(kitchen_counter_132)put_executor(knife_2036, kitchen_counter_132)switchoff_executor(faucet_134)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(plate_2105)put_executor(food_chicken_2050, plate_2105)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(plate_2105)put_executor(dry_pasta_2073, plate_2105)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(knife_2036, cupboard_130)
Fail to find knife_2036 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(knife_2036, cupboard_131)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_chicken_2050)cut_executor(food_chicken_2050)walk_executor(pot_54)open_executor(pot_54)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(pot_54)putin_executor(food_chicken_2050, pot_54)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_54)putin_executor(dry_pasta_2073, pot_54)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(cupboard_131)exp(plate_2105, cupboard_131)walk_executor(plate_2105)grab_executor(plate_2105)wash_executor(plate_2105)walk_executor(kitchen_counter_132)put_executor(knife_2036, kitchen_counter_132)switchoff_executor(faucet_134)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(plate_2105)put_executor(food_chicken_2050, plate_2105)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(plate_2105)put_executor(dry_pasta_2073, plate_2105)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(knife_2036, cupboard_131)
Fail to find knife_2036 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(knife_2036, kitchen_counter_132)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_chicken_2050)cut_executor(food_chicken_2050)walk_executor(pot_54)open_executor(pot_54)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(pot_54)putin_executor(food_chicken_2050, pot_54)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_54)putin_executor(dry_pasta_2073, pot_54)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(kitchen_counter_132)exp(plate_2105, kitchen_counter_132)walk_executor(plate_2105)grab_executor(plate_2105)wash_executor(plate_2105)walk_executor(kitchen_counter_132)put_executor(knife_2036, kitchen_counter_132)switchoff_executor(faucet_134)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(plate_2105)put_executor(food_chicken_2050, plate_2105)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(plate_2105)put_executor(dry_pasta_2073, plate_2105)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the kitchen_counter_132. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find knife_2036 ?
Answer: The target item, knife_2036, is located inside dining_room_1 within the dishwasher_143. Focus on finding the dishwasher, and you will find knife_2036 inside it.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item, knife_2036, is located inside dining_room_1 within the dishwasher_143. Focus on finding the dishwasher, and you will find knife_2036 inside it.

The actions you have taken:
Action 1: Walk to fridge_140.
Action 2: Switch off fridge_140.
Action 3: Open fridge_140.
Action 4: look for food_chicken_2050 around fridge_140.
Action 5: Grab food_chicken_2050.
Action 6: Walk to cutting_board_2080.
Action 7: Put food_chicken_2050 on cutting_board_2080.
Action 8: Walk to kitchen_counter_129.
Action 9: look for knife_2036 around kitchen_counter_129.
Action 10: Walk to knifeblock_52.
Action 11: look for knife_2036 around knifeblock_52.
Action 12: Walk to doorjamb_285.
Action 13: look for knife_2036 around doorjamb_285.
Action 14: Walk to cupboard_130.
Action 15: look for knife_2036 around cupboard_130.
Action 16: Walk to cupboard_131.
Action 17: Open cupboard_131.
Action 18: look for knife_2036 around cupboard_131.
Action 19: Walk to kitchen_counter_132.

##############################
From agent.py
exp(knife_2036, kitchen_counter_132)
Fail to find knife_2036 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(knife_2036, dishwasher_143)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_chicken_2050)cut_executor(food_chicken_2050)walk_executor(pot_54)open_executor(pot_54)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(pot_54)putin_executor(food_chicken_2050, pot_54)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_54)putin_executor(dry_pasta_2073, pot_54)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(dishwasher_143)exp(plate_2105, dishwasher_143)walk_executor(plate_2105)grab_executor(plate_2105)wash_executor(plate_2105)walk_executor(kitchen_counter_132)put_executor(knife_2036, kitchen_counter_132)switchoff_executor(faucet_134)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(plate_2105)put_executor(food_chicken_2050, plate_2105)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(plate_2105)put_executor(dry_pasta_2073, plate_2105)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(knife_2036, dishwasher_143)
Find knife_2036. 
##############################
From agent.py-> find a plan in act()
grab_executor(knife_2036)walk_executor(food_chicken_2050)cut_executor(food_chicken_2050)walk_executor(pot_54)open_executor(pot_54)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(pot_54)putin_executor(food_chicken_2050, pot_54)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(pot_54)putin_executor(dry_pasta_2073, pot_54)walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(dishwasher_143)exp(plate_2105, dishwasher_143)walk_executor(plate_2105)grab_executor(plate_2105)wash_executor(plate_2105)walk_executor(kitchen_counter_132)put_executor(knife_2036, kitchen_counter_132)switchoff_executor(faucet_134)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(plate_2105)put_executor(food_chicken_2050, plate_2105)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(plate_2105)put_executor(dry_pasta_2073, plate_2105)
##############################
From agent.py
grab_executor(knife_2036)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. Grabbing knife_2036 by right hand. 
##############################
From agent.py
walk_executor(food_chicken_2050)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_chicken_2050. 
##############################
From agent.py
cut_executor(food_chicken_2050)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_chicken_2050. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the knife_2036. Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
open_executor(pot_54)
Robot find: Robot is close to the knife_2036. Robot is close to the oven_141. Robot is close to the pot_54. pot_54 is opened. 
##############################
From agent.py
walk_executor(food_chicken_2050)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_chicken_2050. 
##############################
From agent.py
grab_executor(food_chicken_2050)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_chicken_2050. Grabbing food_chicken_2050 by left hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the knife_2036. Robot is close to the food_chicken_2050. Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
putin_executor(food_chicken_2050, pot_54)
Robot find: Robot is close to the knife_2036. Robot is close to the food_chicken_2050. Robot is close to the oven_141. Robot is close to the pot_54. food_chicken_2050 is close pot_54. pot_54 is close food_chicken_2050. food_chicken_2050 is inside pot_54. food_chicken_2050 released by left hand. 
##############################
From agent.py
walk_executor(dry_pasta_2073)
Robot find: Robot is close to the knife_2036. Robot is close to the dry_pasta_2073. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(dry_pasta_2073)
Robot find: Robot is close to the knife_2036. Robot is close to the dry_pasta_2073. Robot is close to the fridge_140. Grabbing dry_pasta_2073 by left hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the knife_2036. Robot is close to the dry_pasta_2073. Robot is close to the food_chicken_2050. Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
putin_executor(dry_pasta_2073, pot_54)
Robot find: Robot is close to the knife_2036. Robot is close to the dry_pasta_2073. Robot is close to the food_chicken_2050. Robot is close to the oven_141. Robot is close to the pot_54. dry_pasta_2073 is inside pot_54. dry_pasta_2073 is close pot_54. pot_54 is close dry_pasta_2073. dry_pasta_2073 released by left hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the knife_2036. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. 
##############################
From agent.py
exp(plate_2105, dishwasher_143)
Fail to find plate_2105 around dishwasher_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_127)exp(plate_2105, table_127)walk_executor(plate_2105)grab_executor(plate_2105)wash_executor(plate_2105)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(plate_2105)put_executor(food_chicken_2050, plate_2105)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(plate_2105)put_executor(dry_pasta_2073, plate_2105)
##############################
From agent.py
walk_executor(table_127)
Robot find: mat_115, fork_2104, console_2027, crayon_2030, bowl_2096, bowl_2097, napkin_2014, plate_2105, drawing_118, Robot is close to the knife_2036. Robot is close to the mat_115. Robot is close to the table_127. 
##############################
From agent.py
exp(plate_2105, table_127)
Find plate_2105. 
##############################
From agent.py-> find a plan in act()
walk_executor(plate_2105)grab_executor(plate_2105)wash_executor(plate_2105)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(plate_2105)put_executor(food_chicken_2050, plate_2105)walk_executor(dry_pasta_2073)grab_executor(dry_pasta_2073)walk_executor(plate_2105)put_executor(dry_pasta_2073, plate_2105)
##############################
From agent.py
walk_executor(plate_2105)
Robot find: Robot is close to the knife_2036. Robot is close to the table_127. Robot is close to the plate_2105. 
##############################
From agent.py
grab_executor(plate_2105)
Robot find: Robot is close to the knife_2036. Robot is close to the table_127. Robot is close to the plate_2105. Grabbing plate_2105 by left hand. 
##############################
From agent.py
wash_executor(plate_2105)
Robot find: Robot is close to the knife_2036. Robot is close to the table_127. Robot is close to the plate_2105. plate_2105 is cleaned. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the knife_2036. Robot is close to the plate_2105. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the knife_2036. Robot is close to the plate_2105. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(food_chicken_2050)
Robot find: Robot is close to the knife_2036. Robot is close to the plate_2105. Robot is close to the food_chicken_2050. Robot is close to the pot_54. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2114_around_basket_for_clothes_2040(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_shirt,basket_for_clothes_instance)
        else:
            exp(clothes_shirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_shirt]=True
    

behavior find_food_onion_2026_around_bowl_2097(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind bowl_instance:item where:
            is_bowl(bowl_instance) and id[bowl_instance]==2097
        achieve close_char(char,bowl_instance)
        if can_open(bowl_instance):
            achieve_once open(bowl_instance)
            exp(food_onion,bowl_instance)
        else:
            exp(food_onion,bowl_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,bowl_instance]=True
        close[bowl_instance,food_onion]=True
    

behavior find_oil_2102_around_oil_2102(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind oil_instance:item where:
            is_oil(oil_instance) and id[oil_instance]==2102
        achieve close_char(char,oil_instance)
        if can_open(oil_instance):
            achieve_once open(oil_instance)
            exp(oil,oil_instance)
        else:
            exp(oil,oil_instance)
    eff:
        unknown[oil]=False
        close[oil,oil_instance]=True
        close[oil_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_chicken_pasta(chicken:item, dry_pasta:item, knife:item, pot:item, stove:item):
    body:
        achieve_once cut(chicken)
        achieve_once inside(chicken, pot)
        achieve_once inside(dry_pasta, pot)
        achieve_once is_on(stove)

behavior plate_food(pot:item, plate:item):
    body:
        achieve_once on(plate, pot)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken
        bind dry_pasta: item where:
            is_dry_pasta(dry_pasta)
        # Select the dry pasta
        bind knife: item where:
            is_knife(knife)
        # Select the knife
        bind pot: item where:
            is_pot(pot)
        # Select the pot
        bind stove: item where:
            is_stove(stove)
        # Select the stove
        bind plate: item where:
            is_plate(plate)
        # Select the plate
        prepare_chicken_pasta(chicken, dry_pasta, knife, pot, stove)
        plate_food(pot, plate)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior prepare_chicken_pasta(chicken:item, dry_pasta:item, knife:item, pot:item, stove:item):
    body:
        achieve_once cut(chicken)
        achieve_once inside(chicken, pot)
        achieve_once inside(dry_pasta, pot)
        achieve_once is_on(stove)

behavior plate_food(pot:item, plate:item):
    body:
        achieve_once on(plate, pot)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken
        bind dry_pasta: item where:
            is_dry_pasta(dry_pasta)
        # Select the dry pasta
        bind knife: item where:
            is_knife(knife)
        # Select the knife
        bind pot: item where:
            is_pot(pot)
        # Select the pot
        bind stove: item where:
            is_stove(stove)
        # Select the stove
        bind plate: item where:
            is_plate(plate)
        # Select the plate
        prepare_chicken_pasta(chicken, dry_pasta, knife, pot, stove)
        plate_food(pot, plate)

##############################
From agent.py-> find a plan in act()
put_executor(plate_2105, pot_54)
##############################
From agent.py
put_executor(plate_2105, pot_54)
Robot find: Robot is close to the knife_2036. Robot is close to the plate_2105. Robot is close to the food_chicken_2050. Robot is close to the pot_54. plate_2105 is on pot_54. pot_54 is close plate_2105. plate_2105 is close pot_54. plate_2105 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make chicken pasta, put it in a plate.
Action History:
['walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'grab_executor(food_chicken_2050)', 'walk_executor(cutting_board_2080)', 'put_executor(food_chicken_2050, cutting_board_2080)', 'walk_executor(kitchen_counter_129)', 'walk_executor(knifeblock_52)', 'walk_executor(doorjamb_285)', 'walk_executor(cupboard_130)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(kitchen_counter_132)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'grab_executor(knife_2036)', 'walk_executor(food_chicken_2050)', 'cut_executor(food_chicken_2050)', 'walk_executor(pot_54)', 'open_executor(pot_54)', 'walk_executor(food_chicken_2050)', 'grab_executor(food_chicken_2050)', 'walk_executor(pot_54)', 'putin_executor(food_chicken_2050, pot_54)', 'walk_executor(dry_pasta_2073)', 'grab_executor(dry_pasta_2073)', 'walk_executor(pot_54)', 'putin_executor(dry_pasta_2073, pot_54)', 'walk_executor(stove_2090)', 'switchon_executor(stove_2090)', 'walk_executor(dishwasher_143)', 'walk_executor(table_127)', 'walk_executor(plate_2105)', 'grab_executor(plate_2105)', 'wash_executor(plate_2105)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(food_chicken_2050)', 'grab_executor(food_chicken_2050) (Failed)', 'put_executor(plate_2105, pot_54)']
Time info:
Time consume: 375 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 4
goal correct times: 0
action_num: 40

Task complete rate:
Keystate: k1 - Requires: 5 steps
Keystate: k2 - Requires: 11 steps
Keystate: k3 - Requires: 8 steps
Keystate: k4 - Requires: 8 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
