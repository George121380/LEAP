From agent.py
Reset goals: The sub-goals are: 
['Wipe all the windows in the house by towel.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_bathroom_counter_306(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(towel,bathroom_counter_instance)
        else:
            exp(towel,bathroom_counter_instance)
    eff:
        unknown[towel]=False
        close[towel,bathroom_counter_instance]=True
        close[bathroom_counter_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior wipe_window(w:item, t:item):
    body:
        achieve_once inhand(t)
        achieve clean(w)

behavior __goal__():
    body:
        bind w: item where:
            is_window(w)
        bind t: item where:
            is_towel(t)
        wipe_window(w, t)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior wipe_window(w:item, t:item):
    body:
        achieve_once inhand(t)
        achieve clean(w)

behavior __goal__():
    body:
        bind w: item where:
            is_window(w)
        bind t: item where:
            is_towel(t)
        wipe_window(w, t)

##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_counter_306)exp(towel_2083, bathroom_counter_306)walk_executor(towel_2083)grab_executor(towel_2083)walk_executor(window_2109)wipe_executor(window_2109)
##############################
From agent.py
walk_executor(bathroom_counter_306)
Robot find: towel_rack_298, drawing_296, Robot is close to the bathroom_counter_306. 
##############################
From agent.py
exp(towel_2083, bathroom_counter_306)
Fail to find towel_2083 around bathroom_counter_306. 
##############################
From agent.py-> find a plan in act()
walk_executor(towel_rack_298)exp(towel_2083, towel_rack_298)walk_executor(towel_2083)grab_executor(towel_2083)walk_executor(window_2109)wipe_executor(window_2109)
##############################
From agent.py
walk_executor(towel_rack_298)
Robot find: towel_2083, Robot is close to the towel_rack_298. 
##############################
From agent.py
exp(towel_2083, towel_rack_298)
Find towel_2083. 
##############################
From agent.py-> find a plan in act()
walk_executor(towel_2083)grab_executor(towel_2083)walk_executor(window_2109)wipe_executor(window_2109)
##############################
From agent.py
walk_executor(towel_2083)
Robot find: Robot is close to the towel_rack_298. Robot is close to the towel_2083. 
##############################
From agent.py
grab_executor(towel_2083)
Robot find: Robot is close to the towel_rack_298. Robot is close to the towel_2083. Grabbing towel_2083 by right hand. 
##############################
From agent.py
walk_executor(window_2109)
Robot find: Robot is close to the towel_2083. Robot is close to the window_2109. 
##############################
From agent.py
wipe_executor(window_2109)
Robot find: Robot is close to the towel_2083. Robot is close to the window_2109. window_2109 is cleaned. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot has wiped window_2109, but to complete the task, you need to wipe all the windows in the house, not just window_2109. Proceed to locate and wipe other windows.
##############################
From agent.py
Human Instruction: The robot has wiped window_2109, but to complete the task, you need to wipe all the windows in the house, not just window_2109. Proceed to locate and wipe other windows.

The actions you have taken:
Action 1: Walk to bathroom_counter_306.
Action 2: look for towel_2083 around bathroom_counter_306.
Action 3: Walk to towel_rack_298.
Action 4: look for towel_2083 around towel_rack_298.
Action 5: Walk to towel_2083.
Action 6: Grab towel_2083.
Action 7: Walk to window_2109.
Action 8: Wipe window_2109.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior wipe_windows(w: item):
    body:
        achieve_once clean(w)

behavior locate_next_window():
    body:
        foreach w: item:
            if is_window(w) and not visited(w):
                observe(w, "Locate and check the state of the window")
                achieve_once close_char(char, w)

behavior __goal__():
    body:
        bind towel: item where:
            is_towel(towel) and inhand(towel)
        foreach w: item:
            if is_window(w):
                wipe_windows(w)
                locate_next_window()

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior wipe_windows(w: item):
    body:
        achieve_once clean(w)

behavior locate_next_window():
    body:
        foreach w: item:
            if is_window(w) and not visited(w):
                observe(w, "Locate and check the state of the window")
                achieve_once close_char(char, w)

behavior __goal__():
    body:
        bind towel: item where:
            is_towel(towel) and inhand(towel)
        foreach w: item:
            if is_window(w):
                wipe_windows(w)
                locate_next_window()

##############################
From agent.py-> find a plan in act()
open_executor(window_2109)obs(window_2109, Locate and check the state of the window)walk_executor(window_40)open_executor(window_40)obs(window_40, Locate and check the state of the window)walk_executor(window_181)open_executor(window_181)obs(window_181, Locate and check the state of the window)walk_executor(window_287)open_executor(window_287)obs(window_287, Locate and check the state of the window)walk_executor(window_346)open_executor(window_346)obs(window_346, Locate and check the state of the window)walk_executor(window_40)wipe_executor(window_40)walk_executor(window_181)wipe_executor(window_181)walk_executor(window_287)wipe_executor(window_287)walk_executor(window_346)wipe_executor(window_346)
##############################
From agent.py
open_executor(window_2109)
Robot find: Robot is close to the towel_2083. Robot is close to the window_2109. window_2109 is opened. 
##############################
From agent.py
obs(window_2109, Locate and check the state of the window)
Get this information:  window_2109 is inside dining_room_1. window_2109 is close to dining_room_1. window_2109 is close to character_219. window_2109 is CLEAN. window_2109 is OPEN.
##############################
From agent.py
walk_executor(window_40)
Robot find: Robot is close to the towel_2083. Robot is close to the window_40. 
##############################
From agent.py
open_executor(window_40)
Robot find: Robot is close to the towel_2083. Robot is close to the window_40. window_40 is opened. 
##############################
From agent.py
obs(window_40, Locate and check the state of the window)
Get this information:  window_40 is close to ceiling_35. window_40 is close to wall_4. window_40 is close to doorjamb_39. window_40 is close to wall_7. window_40 is close to ceilinglamp_43. window_40 is close to wall_11. window_40 is close to floor_23. window_40 is close to curtain_119. window_40 is close to curtain_120. window_40 is close to curtain_121. window_40 is close to character_219. window_40 is inside dining_room_1. window_40 is DIRTY. window_40 is OPEN.
##############################
From agent.py
walk_executor(window_181)
Robot find: drawing_196, Robot is close to the towel_2083. Robot is close to the window_181. 
##############################
From agent.py
open_executor(window_181)
Robot find: Robot is close to the towel_2083. Robot is close to the window_181. window_181 is opened. 
##############################
From agent.py
obs(window_181, Locate and check the state of the window)
Get this information:  window_181 is facing television_216. window_181 is facing drawing_196. window_181 is inside home_office_161. window_181 is close to curtain_197. window_181 is close to curtain_198. window_181 is close to curtain_199. window_181 is close to floor_168. window_181 is close to wall_169. window_181 is close to wall_170. window_181 is close to wall_173. window_181 is close to ceiling_178. window_181 is close to photoframe_210. window_181 is close to wallshelf_187. window_181 is close to wallshelf_190. window_181 is close to wallshelf_191. window_181 is close to character_219. window_181 is DIRTY. window_181 is OPEN.
##############################
From agent.py
walk_executor(window_287)
Robot find: towel_rack_299, Robot is close to the towel_2083. Robot is close to the window_287. 
##############################
From agent.py
open_executor(window_287)
Robot find: Robot is close to the towel_2083. Robot is close to the window_287. window_287 is opened. 
##############################
From agent.py
obs(window_287, Locate and check the state of the window)
Get this information:  window_287 is inside bathroom_265. window_287 is close to curtain_293. window_287 is close to curtain_294. window_287 is close to bathtub_297. window_287 is close to wall_266. window_287 is close to towel_rack_299. window_287 is close to wall_267. window_287 is close to wall_270. window_287 is close to floor_275. window_287 is close to basket_for_clothes_2040. window_287 is close to washing_machine_2041. window_287 is close to ceiling_283. window_287 is close to character_219. window_287 is DIRTY. window_287 is OPEN.
##############################
From agent.py
walk_executor(window_346)
Robot find: pillow_370, drawing_389, mat_386, pillow_368, drawing_388, Robot is close to the towel_2083. Robot is close to the window_346. 
##############################
From agent.py
open_executor(window_346)
Robot find: Robot is close to the towel_2083. Robot is close to the window_346. window_346 is opened. 
##############################
From agent.py
obs(window_346, Locate and check the state of the window)
Get this information:  window_346 is inside bedroom_327. window_346 is close to mat_386. window_346 is close to drawing_389. window_346 is close to curtain_390. window_346 is close to curtain_391. window_346 is close to curtain_392. window_346 is close to tablelamp_359. window_346 is close to tablelamp_358. window_346 is close to floor_330. window_346 is close to pillow_368. window_346 is close to pillow_370. window_346 is close to wall_340. window_346 is close to nightstand_373. window_346 is close to wall_341. window_346 is close to wall_342. window_346 is close to bed_376. window_346 is close to ceiling_348. window_346 is close to character_219. window_346 is facing drawing_388. window_346 is DIRTY. window_346 is OPEN.
##############################
From agent.py
walk_executor(window_40)
Robot find: Robot is close to the towel_2083. Robot is close to the window_40. 
##############################
From agent.py
wipe_executor(window_40)
Robot find: Robot is close to the towel_2083. Robot is close to the window_40. window_40 is cleaned. 
##############################
From agent.py
walk_executor(window_181)
Robot find: Robot is close to the towel_2083. Robot is close to the window_181. 
##############################
From agent.py
wipe_executor(window_181)
Robot find: Robot is close to the towel_2083. Robot is close to the window_181. window_181 is cleaned. 
##############################
From agent.py
walk_executor(window_287)
Robot find: Robot is close to the towel_2083. Robot is close to the window_287. 
##############################
From agent.py
wipe_executor(window_287)
Robot find: Robot is close to the towel_2083. Robot is close to the window_287. window_287 is cleaned. 
##############################
From agent.py
walk_executor(window_346)
Robot find: Robot is close to the towel_2083. Robot is close to the window_346. 
##############################
From agent.py
wipe_executor(window_346)
Robot find: Robot is close to the towel_2083. Robot is close to the window_346. window_346 is cleaned. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Wipe all the windows in the house by towel.
Action History:
['walk_executor(bathroom_counter_306)', 'walk_executor(towel_rack_298)', 'walk_executor(towel_2083)', 'grab_executor(towel_2083)', 'walk_executor(window_2109)', 'wipe_executor(window_2109)', 'open_executor(window_2109)', 'walk_executor(window_40)', 'open_executor(window_40)', 'walk_executor(window_181)', 'open_executor(window_181)', 'walk_executor(window_287)', 'open_executor(window_287)', 'walk_executor(window_346)', 'open_executor(window_346)', 'walk_executor(window_40)', 'wipe_executor(window_40)', 'walk_executor(window_181)', 'wipe_executor(window_181)', 'walk_executor(window_287)', 'wipe_executor(window_287)', 'walk_executor(window_346)', 'wipe_executor(window_346)']
Time info:
Time consume: 63 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 2
goal correct times: 0
action_num: 23

Task complete rate:
1
Scene_id: 2
##############################
