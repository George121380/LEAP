From agent.py
Reset goals: The sub-goals are: 
['Turn on the DVD player.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_dvd_player_2000_around_tvstand_135(dvd_player:item):
    goal: not unknown(dvd_player)
    body:
        assert is_dvd_player(dvd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==135
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(dvd_player,tvstand_instance)
        else:
            exp(dvd_player,tvstand_instance)
    eff:
        unknown[dvd_player]=False
        close[dvd_player,tvstand_instance]=True
        close[tvstand_instance,dvd_player]=True
    

#exp_behavior_end

#goal_representation

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        
        if is_off(dvd_player):
            switch_on(dvd_player)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_dvd_player_2000_around_television_216(dvd_player:item):
    goal: not unknown(dvd_player)
    body:
        assert is_dvd_player(dvd_player)
        bind television_instance:item where:
            is_television(television_instance) and id[television_instance]==216
        achieve close_char(char,television_instance)
        if can_open(television_instance):
            achieve_once open(television_instance)
            exp(dvd_player,television_instance)
        else:
            exp(dvd_player,television_instance)
    eff:
        unknown[dvd_player]=False
        close[dvd_player,television_instance]=True
        close[television_instance,dvd_player]=True
    

#exp_behavior_end

#goal_representation
behavior turn_on_dvd_player(dvd_player:item):
    body:
        if has_switch(dvd_player) and is_off(dvd_player):
            switch_on(dvd_player)

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        # Select the DVD player
        turn_on_dvd_player(dvd_player)  # Turn on the DVD player
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_dvd_player_2085_around_tvstand_135(dvd_player:item):
    goal: not unknown(dvd_player)
    body:
        assert is_dvd_player(dvd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==135
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(dvd_player,tvstand_instance)
        else:
            exp(dvd_player,tvstand_instance)
    eff:
        unknown[dvd_player]=False
        close[dvd_player,tvstand_instance]=True
        close[tvstand_instance,dvd_player]=True
    

#exp_behavior_end

#goal_representation
 
behavior turn_on_dvd(dvd_player: item):
    body:
        if is_off(dvd_player):
            switch_on(dvd_player)

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        turn_on_dvd(dvd_player)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_dvd_player_2085_around_tvstand_135(dvd_player:item):
    goal: not unknown(dvd_player)
    body:
        assert is_dvd_player(dvd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==135
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(dvd_player,tvstand_instance)
        else:
            exp(dvd_player,tvstand_instance)
    eff:
        unknown[dvd_player]=False
        close[dvd_player,tvstand_instance]=True
        close[tvstand_instance,dvd_player]=True
    

#exp_behavior_end

#goal_representation
 
behavior turn_on_dvd_player(dvd_player:item):
    body:
        if is_off(dvd_player):
            switch_on(dvd_player)

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        turn_on_dvd_player(dvd_player)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_dvd_player_2085_around_tvstand_135(dvd_player:item):
    goal: not unknown(dvd_player)
    body:
        assert is_dvd_player(dvd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==135
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(dvd_player,tvstand_instance)
        else:
            exp(dvd_player,tvstand_instance)
    eff:
        unknown[dvd_player]=False
        close[dvd_player,tvstand_instance]=True
        close[tvstand_instance,dvd_player]=True
    

#exp_behavior_end

#goal_representation
 
behavior turn_on_dvd_player(dvd_player:item):
    body:
        if is_off(dvd_player):
            walk_to(dvd_player) # Move close to the DVD player
            switch_on(dvd_player) # Turn on the DVD player

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        turn_on_dvd_player(dvd_player)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_dvd_player_2085_around_tvstand_135(dvd_player:item):
    goal: not unknown(dvd_player)
    body:
        assert is_dvd_player(dvd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==135
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(dvd_player,tvstand_instance)
        else:
            exp(dvd_player,tvstand_instance)
    eff:
        unknown[dvd_player]=False
        close[dvd_player,tvstand_instance]=True
        close[tvstand_instance,dvd_player]=True
    

#exp_behavior_end

#goal_representation
 
behavior locate_dvd_player(dvd_player: item):
    body:
        if not close_char(char, dvd_player):
            walk_to(dvd_player) # Approach the DVD player to ensure proximity

behavior turn_on_dvd_player(dvd_player: item):
    body:
        if is_off(dvd_player) and close_char(char, dvd_player): # Ensure we are close and the device is off
            switch_on(dvd_player)

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        locate_dvd_player(dvd_player)
        turn_on_dvd_player(dvd_player)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior locate_dvd_player(dvd_player: item):
    body:
        if not close_char(char, dvd_player):
            walk_to(dvd_player) # Approach the DVD player to ensure proximity

behavior turn_on_dvd_player(dvd_player: item):
    body:
        if is_off(dvd_player) and close_char(char, dvd_player): # Ensure we are close and the device is off
            switch_on(dvd_player)

behavior __goal__():
    body:
        bind dvd_player: item where:
            is_dvd_player(dvd_player)
        locate_dvd_player(dvd_player)
        turn_on_dvd_player(dvd_player)

##############################
From agent.py-> find a plan in act()
walk_executor(tvstand_135)exp(dvd_player_2085, tvstand_135)walk_executor(dvd_player_2085)
##############################
From agent.py
walk_executor(tvstand_135)
Robot find: drawing_118, remote_control_2081, cd_player_2084, dvd_player_2085, Robot is close to the tvstand_135. 
##############################
From agent.py
exp(dvd_player_2085, tvstand_135)
Find dvd_player_2085. 
##############################
From agent.py-> find a plan in act()
exp(dvd_player_2000, tvstand_135)walk_executor(dvd_player_2000)
##############################
From agent.py
exp(dvd_player_2000, tvstand_135)
Fail to find dvd_player_2000 around tvstand_135. 
##############################
From agent.py-> find a plan in act()
walk_executor(dvd_player_2085)plugin_executor(dvd_player_2085)switchon_executor(dvd_player_2085)
##############################
From agent.py
walk_executor(dvd_player_2085)
Robot find: Robot is close to the tvstand_135. Robot is close to the dvd_player_2085. 
##############################
From agent.py
plugin_executor(dvd_player_2085)
Robot find: Robot is close to the tvstand_135. Robot is close to the dvd_player_2085. dvd_player_2085 is plugged in. 
##############################
From agent.py
switchon_executor(dvd_player_2085)
Robot find: Robot is close to the tvstand_135. Robot is close to the dvd_player_2085. dvd_player_2085 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Turn on the dvd player.
Action History:
['walk_executor(tvstand_135)', 'walk_executor(dvd_player_2085)', 'plugin_executor(dvd_player_2085)', 'switchon_executor(dvd_player_2085)']
Time info:
Time consume: 75 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 6
goal correct times: 0
action_num: 4

Task complete rate:
1
Scene_id: 2
##############################
