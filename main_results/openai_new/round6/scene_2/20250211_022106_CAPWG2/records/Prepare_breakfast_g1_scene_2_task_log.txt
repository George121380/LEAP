From agent.py
Reset goals: The sub-goals are: 
['Slice and toast the bread.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_bread_2016_around_kitchen_counter_132(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_bread,kitchen_counter_instance)
        else:
            exp(food_bread,kitchen_counter_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_bread]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
def is_bread_cuttable(bread: item):
    # Function to check if a bread item can be cut
    return cuttable(bread)

def is_ready_toast_bread(toaster: item):
    # Check if the toaster is plugged and off
    return plugged(toaster) and is_off(toaster)

behavior slice_bread(bread: item):
    body:
        if not cut(bread):
            cuts(bread) # Cut the bread

behavior prepare_toaster(toaster: item):
    body:
        if has_switch(toaster) and is_off(toaster):
            switch_on(toaster) # Turn on the toaster

behavior toast_bread(bread: item, toaster: item):
    body:
        if is_ready_toast_bread(toaster):
            put_inside(bread, toaster) # Put sliced bread in the toaster

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread) and is_bread_cuttable(bread)
        # Select a bread that can be cut
        
        bind toaster: item where:
            is_toaster(toaster)
        # Select a toaster
        
        slice_bread(bread) # Slice the bread
        
        prepare_toaster(toaster) 
        
        toast_bread(bread, toaster) # Toast the sliced bread

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_bread_cuttable(bread: item):
    # Function to check if a bread item can be cut
    return cuttable(bread)

def is_ready_toast_bread(toaster: item):
    # Check if the toaster is plugged and off
    return plugged(toaster) and is_off(toaster)

behavior slice_bread(bread: item):
    body:
        if not cut(bread):
            cuts(bread) # Cut the bread

behavior prepare_toaster(toaster: item):
    body:
        if has_switch(toaster) and is_off(toaster):
            switch_on(toaster) # Turn on the toaster

behavior toast_bread(bread: item, toaster: item):
    body:
        if is_ready_toast_bread(toaster):
            put_inside(bread, toaster) # Put sliced bread in the toaster

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread) and is_bread_cuttable(bread)
        # Select a bread that can be cut
        
        bind toaster: item where:
            is_toaster(toaster)
        # Select a toaster
        
        slice_bread(bread) # Slice the bread
        
        prepare_toaster(toaster) 
        
        toast_bread(bread, toaster) # Toast the sliced bread

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(food_bread_2016, kitchen_counter_132)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: pot_54, Robot is close to the kitchen_counter_132. 
##############################
From agent.py
exp(food_bread_2016, kitchen_counter_132)
Fail to find food_bread_2016 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(food_bread_2016, cupboard_131)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(food_bread_2016, cupboard_131)
Fail to find food_bread_2016 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_bread_2016, fridge_140)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_bread_2016, fridge_140)
Fail to find food_bread_2016 around fridge_140. 
##############################
From agent.py-> find a plan in act()
walk_executor(toaster_144)open_executor(toaster_144)exp(food_bread_2016, toaster_144)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(toaster_144)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. 
##############################
From agent.py
open_executor(toaster_144)
Robot find: Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. toaster_144 is opened. 
##############################
From agent.py
exp(food_bread_2016, toaster_144)
Fail to find food_bread_2016 around toaster_144. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(food_bread_2016, cupboard_130)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(food_bread_2016, cupboard_130)
Fail to find food_bread_2016 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(doorjamb_39)exp(food_bread_2016, doorjamb_39)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(doorjamb_39)
Robot find: drawing_118, Robot is close to the doorjamb_39. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find food_bread_2016 ?
Answer: Go to bedroom_327. In this room, locate filing_cabinet_378. Open filing_cabinet_378 and you will find food_bread_2016 inside. The bread is directly stored within this cabinet.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to bedroom_327. In this room, locate filing_cabinet_378. Open filing_cabinet_378 and you will find food_bread_2016 inside. The bread is directly stored within this cabinet.

The actions you have taken:
Action 1: Walk to kitchen_counter_132.
Action 2: look for food_bread_2016 around kitchen_counter_132.
Action 3: Walk to cupboard_131.
Action 4: Open cupboard_131.
Action 5: look for food_bread_2016 around cupboard_131.
Action 6: Walk to fridge_140.
Action 7: Switch off fridge_140.
Action 8: Open fridge_140.
Action 9: look for food_bread_2016 around fridge_140.
Action 10: Walk to toaster_144.
Action 11: Open toaster_144.
Action 12: look for food_bread_2016 around toaster_144.
Action 13: Walk to cupboard_130.
Action 14: look for food_bread_2016 around cupboard_130.
Action 15: Walk to doorjamb_39.

##############################
From agent.py
exp(food_bread_2016, doorjamb_39)
Fail to find food_bread_2016 around doorjamb_39. 
##############################
From agent.py-> find a plan in act()
walk_executor(filing_cabinet_378)exp(food_bread_2016, filing_cabinet_378)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(filing_cabinet_378)
Robot find: food_bread_2016, crayon_2020, needle_2024, check_2033, alcohol_2002, coffee_filter_2035, soap_2037, bills_2009, drawing_387, Robot is close to the food_bread_2016. Robot is close to the crayon_2020. Robot is close to the needle_2024. Robot is close to the check_2033. Robot is close to the alcohol_2002. Robot is close to the coffee_filter_2035. Robot is close to the soap_2037. Robot is close to the bills_2009. Robot is close to the filing_cabinet_378. 
##############################
From agent.py
exp(food_bread_2016, filing_cabinet_378)
Find food_bread_2016. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_bread_2016)walk_executor(cutting_board_2080)put_executor(food_bread_2016, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
grab_executor(food_bread_2016)
Robot find: Robot is close to the food_bread_2016. Robot is close to the crayon_2020. Robot is close to the needle_2024. Robot is close to the check_2033. Robot is close to the alcohol_2002. Robot is close to the coffee_filter_2035. Robot is close to the soap_2037. Robot is close to the bills_2009. Robot is close to the filing_cabinet_378. Grabbing food_bread_2016 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the food_bread_2016. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_bread_2016, cutting_board_2080)
Robot find: Robot is close to the food_bread_2016. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. cutting_board_2080 is close food_bread_2016. food_bread_2016 is close cutting_board_2080. food_bread_2016 is on cutting_board_2080. food_bread_2016 released by right hand. 
##############################
From agent.py
walk_executor(knifeblock_52)
Robot find: Robot is close to the knifeblock_52. 
##############################
From agent.py
exp(knife_2036, knifeblock_52)
Fail to find knife_2036 around knifeblock_52. 
##############################
From agent.py-> find a plan in act()
walk_executor(ceilinglamp_357)exp(knife_2036, ceilinglamp_357)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(ceilinglamp_357)
Robot find: drawing_388, drawing_389, Robot is close to the ceilinglamp_357. 
##############################
From agent.py
exp(knife_2036, ceilinglamp_357)
Fail to find knife_2036 around ceilinglamp_357. 
##############################
From agent.py-> find a plan in act()
walk_executor(drawing_388)exp(knife_2036, drawing_388)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(drawing_388)
Robot find: mat_386, pillow_370, pillow_368, Robot is close to the drawing_388. 
##############################
From agent.py
exp(knife_2036, drawing_388)
Fail to find knife_2036 around drawing_388. 
##############################
From agent.py-> find a plan in act()
walk_executor(desk_375)exp(knife_2036, desk_375)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(desk_375)
Robot find: glue_2013, keyboard_382, chair_374, mouse_380, Robot is close to the desk_375. 
##############################
From agent.py
exp(knife_2036, desk_375)
Fail to find knife_2036 around desk_375. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_147)open_executor(coffe_maker_147)exp(knife_2036, coffe_maker_147)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(coffe_maker_147)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. 
##############################
From agent.py
open_executor(coffe_maker_147)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. coffe_maker_147 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find knife_2036 ?
Answer: Locate dining_room_1. Inside, find dishwasher_143. The target item, knife_2036, is inside dishwasher_143.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to bedroom_327. In this room, locate filing_cabinet_378. Open filing_cabinet_378 and you will find food_bread_2016 inside. The bread is directly stored within this cabinet.
Locate dining_room_1. Inside, find dishwasher_143. The target item, knife_2036, is inside dishwasher_143.

The actions you have taken:
Action 1: Walk to kitchen_counter_132.
Action 2: look for food_bread_2016 around kitchen_counter_132.
Action 3: Walk to cupboard_131.
Action 4: Open cupboard_131.
Action 5: look for food_bread_2016 around cupboard_131.
Action 6: Walk to fridge_140.
Action 7: Switch off fridge_140.
Action 8: Open fridge_140.
Action 9: look for food_bread_2016 around fridge_140.
Action 10: Walk to toaster_144.
Action 11: Open toaster_144.
Action 12: look for food_bread_2016 around toaster_144.
Action 13: Walk to cupboard_130.
Action 14: look for food_bread_2016 around cupboard_130.
Action 15: Walk to doorjamb_39.
Action 16: look for food_bread_2016 around doorjamb_39.
Action 17: Walk to filing_cabinet_378.
Action 18: look for food_bread_2016 around filing_cabinet_378.
Action 19: Grab food_bread_2016.
Action 20: Walk to cutting_board_2080.
Action 21: Put food_bread_2016 on cutting_board_2080.
Action 22: Walk to knifeblock_52.
Action 23: look for knife_2036 around knifeblock_52.
Action 24: Walk to ceilinglamp_357.
Action 25: look for knife_2036 around ceilinglamp_357.
Action 26: Walk to drawing_388.
Action 27: look for knife_2036 around drawing_388.
Action 28: Walk to desk_375.
Action 29: look for knife_2036 around desk_375.
Action 30: Walk to coffe_maker_147.
Action 31: Open coffe_maker_147.

##############################
From agent.py
exp(knife_2036, coffe_maker_147)
Fail to find knife_2036 around coffe_maker_147. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(knife_2036, dishwasher_143)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(knife_2036, dishwasher_143)
Find knife_2036. 
##############################
From agent.py-> find a plan in act()
grab_executor(knife_2036)walk_executor(food_bread_2016)cut_executor(food_bread_2016)walk_executor(toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
grab_executor(knife_2036)
Robot find: Robot is close to the knife_2036. Robot is close to the dishwasher_143. Grabbing knife_2036 by right hand. 
##############################
From agent.py
walk_executor(food_bread_2016)
Robot find: Robot is close to the knife_2036. Robot is close to the food_bread_2016. Robot is close to the cutting_board_2080. 
##############################
From agent.py
cut_executor(food_bread_2016)
Robot find: Robot is close to the knife_2036. Robot is close to the food_bread_2016. Robot is close to the cutting_board_2080. 
##############################
From agent.py
walk_executor(toaster_144)
Robot find: Robot is close to the knife_2036. Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. 
##############################
From agent.py
close_executor(toaster_144)
Robot find: Robot is close to the knife_2036. Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. toaster_144 is closed. 
##############################
From agent.py
switchon_executor(toaster_144)
Robot find: Robot is close to the knife_2036. Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. toaster_144 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to put the sliced bread into the toaster to complete the task of toasting the bread.
##############################
From agent.py
Human Instruction: You need to put the sliced bread into the toaster to complete the task of toasting the bread.

The actions you have taken:
Action 1: Walk to kitchen_counter_132.
Action 2: look for food_bread_2016 around kitchen_counter_132.
Action 3: Walk to cupboard_131.
Action 4: Open cupboard_131.
Action 5: look for food_bread_2016 around cupboard_131.
Action 6: Walk to fridge_140.
Action 7: Switch off fridge_140.
Action 8: Open fridge_140.
Action 9: look for food_bread_2016 around fridge_140.
Action 10: Walk to toaster_144.
Action 11: Open toaster_144.
Action 12: look for food_bread_2016 around toaster_144.
Action 13: Walk to cupboard_130.
Action 14: look for food_bread_2016 around cupboard_130.
Action 15: Walk to doorjamb_39.
Action 16: look for food_bread_2016 around doorjamb_39.
Action 17: Walk to filing_cabinet_378.
Action 18: look for food_bread_2016 around filing_cabinet_378.
Action 19: Grab food_bread_2016.
Action 20: Walk to cutting_board_2080.
Action 21: Put food_bread_2016 on cutting_board_2080.
Action 22: Walk to knifeblock_52.
Action 23: look for knife_2036 around knifeblock_52.
Action 24: Walk to ceilinglamp_357.
Action 25: look for knife_2036 around ceilinglamp_357.
Action 26: Walk to drawing_388.
Action 27: look for knife_2036 around drawing_388.
Action 28: Walk to desk_375.
Action 29: look for knife_2036 around desk_375.
Action 30: Walk to coffe_maker_147.
Action 31: Open coffe_maker_147.
Action 32: look for knife_2036 around coffe_maker_147.
Action 33: Walk to dishwasher_143.
Action 34: Open dishwasher_143.
Action 35: look for knife_2036 around dishwasher_143.
Action 36: Grab knife_2036.
Action 37: Walk to food_bread_2016.
Action 38: Cut food_bread_2016.
Action 39: Walk to toaster_144.
Action 40: Close toaster_144.
Action 41: Switch on toaster_144.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_underwear_2022_around_basket_for_clothes_2040(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_underwear,basket_for_clothes_instance)
        else:
            exp(clothes_underwear,basket_for_clothes_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_underwear]=True
    

behavior find_iron_2117_around_ironing_board_2099(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
def has_toastable_bread(toaster:item, bread:item):
    # Check if the bread can be toasted inside the toaster
    symbol ready_to_toast=exists bread: item : (is_food_bread(bread) and on(bread, cutting_board))
    return ready_to_toast

behavior slice_bread(knife:item, bread:item):
    body:
        if not cut(bread):
            grab(knife)
            cuts(bread)
            empty_a_hand()

behavior toast_bread(bread:item, toaster:item):
    body:
        if not inside(bread, toaster):
            put_inside(bread, toaster)
        if is_off(toaster):
            switch_on(toaster)

behavior close_toaster_and_turn_on(toaster:item):
    body:
        if open(toaster):
            closes(toaster)
        if is_off(toaster):
            switch_on(toaster)

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        bind knife: item where:
            is_knife(knife)
        
        bind toaster: item where:
            is_toaster(toaster)

        if not cut(bread):
            slice_bread(knife, bread)
        
        if has_toastable_bread(toaster, bread):
            walk_to(bread)
            grab(bread)
            toast_bread(bread, toaster)
            empty_a_hand()

        close_toaster_and_turn_on(toaster)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_dough_2021_around_pot_54(dough:item):
    goal: not unknown(dough)
    body:
        assert is_dough(dough)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==54
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(dough,pot_instance)
        else:
            exp(dough,pot_instance)
    eff:
        unknown[dough]=False
        close[dough,pot_instance]=True
        close[pot_instance,dough]=True
    

behavior find_food_butter_2018_around_table_127(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==127
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_butter,table_instance)
        else:
            exp(food_butter,table_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,table_instance]=True
        close[table_instance,food_butter]=True
    

#exp_behavior_end

#goal_representation
 
behavior grab_and_cut_bread(food_bread:item, knife:item):
    body:
        if not inhand(food_bread):
            grab(food_bread)
        if not cut(food_bread):
            cut(food_bread)

behavior put_into_toaster(food_bread:item, toaster:item):
    body:
        if not inside(food_bread, toaster):
            put_inside(food_bread, toaster)

behavior start_toaster(toaster:item):
    body:
        if open(toaster):
            closes(toaster)
        if is_off(toaster):
            switch_on(toaster)

behavior __goal__():
    body:
        bind food_bread: item where:
            is_food_bread(food_bread)
        
        bind knife: item where:
            is_knife(knife)

        bind toaster: item where:
            is_toaster(toaster)

        grab_and_cut_bread(food_bread, knife)
        put_into_toaster(food_bread, toaster)
        start_toaster(toaster)
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_underwear_2022_around_basket_for_clothes_2040(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_underwear,basket_for_clothes_instance)
        else:
            exp(clothes_underwear,basket_for_clothes_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_underwear]=True
    

#exp_behavior_end

#goal_representation
 
behavior slice_bread(bread:item, knife:item, cutting_board:item):
    body:
        if not cut(bread):
            put_on(bread, cutting_board)
            # Place the bread on the cutting board
            if not inhand(knife):
                grab(knife)
                # Grab the knife for slicing
            cuts(bread)
            # Slice the bread

behavior toast_bread(bread:item, toaster:item):
    body:
        if not inside(bread, toaster):
            put_inside(bread, toaster) 
            # Place sliced bread inside the toaster
        if is_off(toaster):
            switch_on(toaster)
            # Turn on the toaster

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)
        # Select the bread item
        bind knife: item where:
            is_knife(knife)
        # Select the knife for slicing
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select the cutting board
        bind toaster: item where:
            is_toaster(toaster)
        # Select the toaster
        slice_bread(bread, knife, cutting_board)
        toast_bread(bread, toaster)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior slice_bread(bread:item, knife:item, cutting_board:item):
    body:
        if not cut(bread):
            put_on(bread, cutting_board)
            # Place the bread on the cutting board
            if not inhand(knife):
                grab(knife)
                # Grab the knife for slicing
            cuts(bread)
            # Slice the bread

behavior toast_bread(bread:item, toaster:item):
    body:
        if not inside(bread, toaster):
            put_inside(bread, toaster) 
            # Place sliced bread inside the toaster
        if is_off(toaster):
            switch_on(toaster)
            # Turn on the toaster

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)
        # Select the bread item
        bind knife: item where:
            is_knife(knife)
        # Select the knife for slicing
        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select the cutting board
        bind toaster: item where:
            is_toaster(toaster)
        # Select the toaster
        slice_bread(bread, knife, cutting_board)
        toast_bread(bread, toaster)

##############################
From agent.py-> find a plan in act()
switchoff_executor(toaster_144)open_executor(toaster_144)walk_executor(food_bread_2016)grab_executor(food_bread_2016)walk_executor(toaster_144)putin_executor(food_bread_2016, toaster_144)close_executor(toaster_144)switchon_executor(toaster_144)
##############################
From agent.py
switchoff_executor(toaster_144)
Robot find: Robot is close to the knife_2036. Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. toaster_144 is turned off. 
##############################
From agent.py
open_executor(toaster_144)
Robot find: Robot is close to the knife_2036. Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. toaster_144 is opened. 
##############################
From agent.py
walk_executor(food_bread_2016)
Robot find: Robot is close to the knife_2036. Robot is close to the food_bread_2016. Robot is close to the cutting_board_2080. 
##############################
From agent.py
grab_executor(food_bread_2016)
Robot find: Robot is close to the knife_2036. Robot is close to the food_bread_2016. Robot is close to the cutting_board_2080. Grabbing food_bread_2016 by left hand. 
##############################
From agent.py
walk_executor(toaster_144)
Robot find: Robot is close to the knife_2036. Robot is close to the food_bread_2016. Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. 
##############################
From agent.py
putin_executor(food_bread_2016, toaster_144)
Robot find: Robot is close to the knife_2036. Robot is close to the food_bread_2016. Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. food_bread_2016 is inside toaster_144. toaster_144 is close food_bread_2016. food_bread_2016 is close toaster_144. food_bread_2016 released by left hand. 
##############################
From agent.py
close_executor(toaster_144)
Robot find: Robot is close to the knife_2036. Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. toaster_144 is closed. 
##############################
From agent.py
switchon_executor(toaster_144)
Robot find: Robot is close to the knife_2036. Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. toaster_144 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Slice and toast bread.
Action History:
['walk_executor(kitchen_counter_132)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'walk_executor(toaster_144)', 'open_executor(toaster_144)', 'walk_executor(cupboard_130)', 'walk_executor(doorjamb_39)', 'walk_executor(filing_cabinet_378)', 'grab_executor(food_bread_2016)', 'walk_executor(cutting_board_2080)', 'put_executor(food_bread_2016, cutting_board_2080)', 'walk_executor(knifeblock_52)', 'walk_executor(ceilinglamp_357)', 'walk_executor(drawing_388)', 'walk_executor(desk_375)', 'walk_executor(coffe_maker_147)', 'open_executor(coffe_maker_147)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'grab_executor(knife_2036)', 'walk_executor(food_bread_2016)', 'cut_executor(food_bread_2016)', 'walk_executor(toaster_144)', 'close_executor(toaster_144)', 'switchon_executor(toaster_144)', 'switchoff_executor(toaster_144)', 'open_executor(toaster_144)', 'walk_executor(food_bread_2016)', 'grab_executor(food_bread_2016)', 'walk_executor(toaster_144)', 'putin_executor(food_bread_2016, toaster_144)', 'close_executor(toaster_144)', 'switchon_executor(toaster_144)']
Time info:
Time consume: 230 seconds
Exp_helper query times: 2
Guidance query times: 0
library scale: 0
goal generate times: 4
goal correct times: 0
action_num: 36

Task complete rate:
1
Scene_id: 2
##############################
