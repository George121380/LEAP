From agent.py
Reset goals: The sub-goals are: 
['Wipe the toilet with toilet paper, then throw the used toilet paper into the toilet.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_toilet_paper_2118_around_toilet_302(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind toilet_instance:item where:
            is_toilet(toilet_instance) and id[toilet_instance]==302
        achieve close_char(char,toilet_instance)
        if can_open(toilet_instance):
            achieve_once open(toilet_instance)
            exp(toilet_paper,toilet_instance)
        else:
            exp(toilet_paper,toilet_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,toilet_instance]=True
        close[toilet_instance,toilet_paper]=True
    

#exp_behavior_end

#goal_representation
 
behavior wipe_toilet(toilet:item):
    body:
        achieve_once dirty(toilet)
        # Wipe the toilet using toilet paper

behavior throw_used_toilet_paper(toilet_paper:item, toilet:item):
    body:
        achieve_once inside(toilet_paper, toilet)
        # Throw the used toilet paper into the toilet

behavior __goal__():
    body:
        bind toilet: item where:
            is_toilet(toilet)
        # Select a toilet
        bind toilet_paper: item where:
            is_toilet_paper(toilet_paper)
        # Select toilet paper
        wipe_toilet(toilet)
        throw_used_toilet_paper(toilet_paper, toilet)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_toilet_paper_2118_around_toilet_302(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind toilet_instance:item where:
            is_toilet(toilet_instance) and id[toilet_instance]==302
        achieve close_char(char,toilet_instance)
        if can_open(toilet_instance):
            achieve_once open(toilet_instance)
            exp(toilet_paper,toilet_instance)
        else:
            exp(toilet_paper,toilet_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,toilet_instance]=True
        close[toilet_instance,toilet_paper]=True
    

#exp_behavior_end

#goal_representation

behavior wipe_toilet(toilet:item, toilet_paper:item):
    body:
        achieve_once inhand(toilet_paper)
        # Hold the toilet paper temporarily
        wipe(toilet)
        # Wipe the toilet with the toilet paper

behavior throw_in_toilet(toilet_paper:item, toilet:item):
    body:
        achieve_once inside(toilet_paper, toilet)
        # Discard the used toilet paper inside the toilet

behavior __goal__():
    body:
        bind toilet: item where:
            is_toilet(toilet)
        # Select a toilet

        bind toilet_paper: item where:
            is_toilet_paper(toilet_paper)
        # Select toilet paper

        wipe_toilet(toilet, toilet_paper)
        throw_in_toilet(toilet_paper, toilet)

#goal_representation_end

##############################
From agent.py->reset_goal

behavior wipe_toilet(toilet:item, toilet_paper:item):
    body:
        achieve_once inhand(toilet_paper)
        # Hold the toilet paper temporarily
        wipe(toilet)
        # Wipe the toilet with the toilet paper

behavior throw_in_toilet(toilet_paper:item, toilet:item):
    body:
        achieve_once inside(toilet_paper, toilet)
        # Discard the used toilet paper inside the toilet

behavior __goal__():
    body:
        bind toilet: item where:
            is_toilet(toilet)
        # Select a toilet

        bind toilet_paper: item where:
            is_toilet_paper(toilet_paper)
        # Select toilet paper

        wipe_toilet(toilet, toilet_paper)
        throw_in_toilet(toilet_paper, toilet)

##############################
From agent.py-> find a plan in act()
walk_executor(toilet_302)open_executor(toilet_302)exp(toilet_paper_2118, toilet_302)walk_executor(toilet_paper_2118)grab_executor(toilet_paper_2118)walk_executor(toilet_302)wipe_executor(toilet_302)putin_executor(toilet_paper_2118, toilet_302)
##############################
From agent.py
walk_executor(toilet_302)
Robot find: toilet_paper_2118, Robot is close to the toilet_302. 
##############################
From agent.py
open_executor(toilet_302)
Robot find: Robot is close to the toilet_302. toilet_302 is opened. 
##############################
From agent.py
exp(toilet_paper_2118, toilet_302)
Find toilet_paper_2118. 
##############################
From agent.py-> find a plan in act()
walk_executor(toilet_paper_2118)grab_executor(toilet_paper_2118)walk_executor(toilet_302)wipe_executor(toilet_302)putin_executor(toilet_paper_2118, toilet_302)
##############################
From agent.py
walk_executor(toilet_paper_2118)
Robot find: Robot is close to the toilet_paper_2118. 
##############################
From agent.py
grab_executor(toilet_paper_2118)
Robot find: Robot is close to the toilet_paper_2118. Grabbing toilet_paper_2118 by right hand. 
##############################
From agent.py
walk_executor(toilet_302)
Robot find: Robot is close to the toilet_paper_2118. Robot is close to the toilet_302. 
##############################
From agent.py
wipe_executor(toilet_302)
Robot find: Robot is close to the toilet_paper_2118. Robot is close to the toilet_302. 
##############################
From agent.py
putin_executor(toilet_paper_2118, toilet_302)
Robot find: Robot is close to the toilet_paper_2118. Robot is close to the toilet_302. toilet_paper_2118 is close toilet_302. toilet_paper_2118 is inside toilet_302. toilet_paper_2118 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Wipe the toilet with toilet paper. Then throw it into the toilet.
Action History:
['walk_executor(toilet_302)', 'open_executor(toilet_302)', 'walk_executor(toilet_paper_2118)', 'grab_executor(toilet_paper_2118)', 'walk_executor(toilet_302)', 'wipe_executor(toilet_302)', 'putin_executor(toilet_paper_2118, toilet_302)']
Time info:
Time consume: 43 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 2
goal correct times: 0
action_num: 7

Task complete rate:
1
Scene_id: 2
##############################
