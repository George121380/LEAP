From agent.py
Reset goals: The sub-goals are: 
['1. Find the book and put it on the coffee table in the home office.', '2. Open the window in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2091_around_bookshelf_372(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==372
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table)
        # Place the book on the table

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select a book
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office
        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select the coffee table in the home office
        
        place_book_on_table(book, table)


#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior place_book_on_table(book:item, table:item):
    body:
        achieve_once on(book, table)
        # Place the book on the table

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select a book
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office
        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select the coffee table in the home office
        
        place_book_on_table(book, table)


##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_372)open_executor(bookshelf_372)exp(book_2091, bookshelf_372)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(bookshelf_372)
Robot find: stamp_2031, drawing_389, Robot is close to the bookshelf_372. 
##############################
From agent.py
open_executor(bookshelf_372)
Robot find: Robot is close to the bookshelf_372. bookshelf_372 is opened. 
##############################
From agent.py
exp(book_2091, bookshelf_372)
Fail to find book_2091 around bookshelf_372. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_136)exp(book_2091, bookshelf_136)walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(bookshelf_136)
Robot find: book_2091, Robot is close to the bookshelf_136. 
##############################
From agent.py
exp(book_2091, bookshelf_136)
Find book_2091. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2091)grab_executor(book_2091)walk_executor(table_193)put_executor(book_2091, table_193)
##############################
From agent.py
walk_executor(book_2091)
Robot find: Robot is close to the bookshelf_136. Robot is close to the book_2091. 
##############################
From agent.py
grab_executor(book_2091)
Robot find: Robot is close to the bookshelf_136. Robot is close to the book_2091. Grabbing book_2091 by right hand. 
##############################
From agent.py
walk_executor(table_193)
Robot find: dvd_player_2000, pillow_195, laser_pointer_2025, mat_201, mouse_2112, chair_2119, oil_2005, keyboard_2111, drawing_196, Robot is close to the book_2091. Robot is close to the table_193. 
##############################
From agent.py
put_executor(book_2091, table_193)
Robot find: Robot is close to the book_2091. Robot is close to the table_193. book_2091 is on table_193. table_193 is close book_2091. book_2091 is close table_193. book_2091 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation

behavior open_window(window:item):
    body:
        achieve open(window)

behavior __goal__():
    body:
        bind office: item where:
            is_home_office(office)
        bind window: item where:
            is_window(window) and inside(window, office)
        open_window(window)

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior open_window(window:item):
    body:
        achieve open(window)

behavior __goal__():
    body:
        bind office: item where:
            is_home_office(office)
        bind window: item where:
            is_window(window) and inside(window, office)
        open_window(window)

##############################
From agent.py-> find a plan in act()
walk_executor(window_181)open_executor(window_181)
##############################
From agent.py
walk_executor(window_181)
Robot find: Robot is close to the window_181. 
##############################
From agent.py
open_executor(window_181)
Robot find: Robot is close to the window_181. window_181 is opened. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Find a book and put it on the coffe table in home office. Then open the window in the home office.
Action History:
['walk_executor(bookshelf_372)', 'open_executor(bookshelf_372)', 'walk_executor(bookshelf_136)', 'walk_executor(book_2091)', 'grab_executor(book_2091)', 'walk_executor(table_193)', 'put_executor(book_2091, table_193)', 'walk_executor(window_181)', 'open_executor(window_181)']
Time info:
Time consume: 54 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 2
goal correct times: 0
action_num: 9

Task complete rate:
1
Scene_id: 2
##############################
