From agent.py
Reset goals: The sub-goals are: 
['Boil egg.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_pot_2093_around_kitchen_counter_128(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(pot,kitchen_counter_instance)
        else:
            exp(pot,kitchen_counter_instance)
    eff:
        unknown[pot]=False
        close[pot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,pot]=True
    

behavior find_food_cheese_2049_around_fridge_140(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_cheese,fridge_instance)
        else:
            exp(food_cheese,fridge_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,fridge_instance]=True
        close[fridge_instance,food_cheese]=True
    

#exp_behavior_end

#goal_representation

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot for boiling the egg
        
        bind egg: item where:
            is_food_egg(egg)
        # Select an egg for boiling
        
        bind stove: item where:
            is_stove(stove)
        # Select a stove for heating the pot
        
        achieve has_water(pot)
        # Fill the pot with water
        
        achieve_once inside(egg, pot)
        # Place the egg inside the pot
        
        achieve is_on(stove)
        # Turn on the stove to start boiling the egg

#goal_representation_end

##############################
From agent.py->reset_goal

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot for boiling the egg
        
        bind egg: item where:
            is_food_egg(egg)
        # Select an egg for boiling
        
        bind stove: item where:
            is_stove(stove)
        # Select a stove for heating the pot
        
        achieve has_water(pot)
        # Fill the pot with water
        
        achieve_once inside(egg, pot)
        # Place the egg inside the pot
        
        achieve is_on(stove)
        # Turn on the stove to start boiling the egg

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(pot_2093, kitchen_counter_128)walk_executor(pot_2093)open_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_2093)putin_executor(food_egg_2053, pot_2093)walk_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(pot_2093, kitchen_counter_128)
Fail to find pot_2093 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(stove_2090)open_executor(stove_2090)exp(pot_2093, stove_2090)walk_executor(pot_2093)open_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(kitchen_counter_129)exp(food_egg_2053, kitchen_counter_129)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_2093)putin_executor(food_egg_2053, pot_2093)walk_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_54, pot_2093, Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
open_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is opened. 
##############################
From agent.py
exp(pot_2093, stove_2090)
Find pot_2093. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_2093)open_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(kitchen_counter_129)exp(food_egg_2053, kitchen_counter_129)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_2093)putin_executor(food_egg_2053, pot_2093)walk_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(pot_2093)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the pot_2093. 
##############################
From agent.py
open_executor(pot_2093)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the pot_2093. pot_2093 is opened. 
##############################
From agent.py
grab_executor(pot_2093)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the pot_2093. Grabbing pot_2093 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(kitchen_counter_129)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_129. 
##############################
From agent.py
exp(food_egg_2053, kitchen_counter_129)
Fail to find food_egg_2053 around kitchen_counter_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(cupboard_130)exp(food_egg_2053, cupboard_130)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_2093)putin_executor(food_egg_2053, pot_2093)walk_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(faucet_308)
Robot find: drawing_296, towel_rack_298, Robot is close to the pot_2093. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. 
##############################
From agent.py
switchoff_executor(faucet_308)
Robot find: Robot is close to the pot_2093. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. faucet_308 is turned off. 
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the pot_2093. Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(food_egg_2053, cupboard_130)
Fail to find food_egg_2053 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)switchon_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(cupboard_131)open_executor(cupboard_131)exp(food_egg_2053, cupboard_131)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_2093)putin_executor(food_egg_2053, pot_2093)walk_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the pot_2093. Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the pot_2093. Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(food_egg_2053, cupboard_131)
Fail to find food_egg_2053 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(pot_2093)putin_executor(food_egg_2053, pot_2093)walk_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the pot_2093. Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the pot_2093. Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the pot_2093. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_egg_2053, fridge_140)
Find food_egg_2053. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_egg_2053)putin_executor(food_egg_2053, pot_2093)walk_executor(stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the pot_2093. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. Grabbing food_egg_2053 by left hand. 
##############################
From agent.py
putin_executor(food_egg_2053, pot_2093)
Robot find: Robot is close to the pot_2093. Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_egg_2053 is close pot_2093. pot_2093 is close food_egg_2053. food_egg_2053 is inside pot_2093. food_egg_2053 released by left hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The pot has not been filled with water. You need to ensure that the pot is filled with water before the egg can be boiled.
##############################
From agent.py
Human Instruction: The pot has not been filled with water. You need to ensure that the pot is filled with water before the egg can be boiled.

The actions you have taken:
Action 1: Walk to kitchen_counter_128.
Action 2: look for pot_2093 around kitchen_counter_128.
Action 3: Walk to stove_2090.
Action 4: Open stove_2090.
Action 5: look for pot_2093 around stove_2090.
Action 6: Walk to pot_2093.
Action 7: Open pot_2093.
Action 8: Grab pot_2093.
Action 9: Walk to faucet_134.
Action 10: Switch off faucet_134.
Action 11: Walk to kitchen_counter_129.
Action 12: look for food_egg_2053 around kitchen_counter_129.
Action 13: Walk to faucet_308.
Action 14: Switch off faucet_308.
Action 15: Walk to cupboard_130.
Action 16: look for food_egg_2053 around cupboard_130.
Action 17: Walk to faucet_134.
Action 18: Switch on faucet_134.
Action 19: Switch off faucet_134.
Action 20: Walk to cupboard_131.
Action 21: Open cupboard_131.
Action 22: look for food_egg_2053 around cupboard_131.
Action 23: Walk to fridge_140.
Action 24: Switch off fridge_140.
Action 25: Open fridge_140.
Action 26: look for food_egg_2053 around fridge_140.
Action 27: Grab food_egg_2053.
Action 28: Put food_egg_2053 into pot_2093.
Action 29: Walk to stove_2090.
Action 30: Switch on stove_2090.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_gloves_2077_around_ironing_board_2099(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(clothes_gloves,ironing_board_instance)
        else:
            exp(clothes_gloves,ironing_board_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,ironing_board_instance]=True
        close[ironing_board_instance,clothes_gloves]=True
    

behavior find_detergent_2108_around_washing_machine_2041(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_clothes_skirt_2116_around_dresser_377(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_skirt,dresser_instance)
        else:
            exp(clothes_skirt,dresser_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,dresser_instance]=True
        close[dresser_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_egg_in_pot(egg:item, pot:item):
    body:
        achieve_once inside(egg, pot)

behavior heat_pot(stove:item, pot:item):
    body:
        achieve_once is_on(stove)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        bind stove: item where:
            is_stove(stove)
        bind egg: item where:
            is_food_egg(egg)
        
        fill_pot_with_water(pot)
        place_egg_in_pot(egg, pot)
        heat_pot(stove, pot)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_gloves_2077_around_basket_for_clothes_2040(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_gloves,basket_for_clothes_instance)
        else:
            exp(clothes_gloves,basket_for_clothes_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_gloves]=True
    

behavior find_detergent_2108_around_washing_machine_2041(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_food_onion_2026_around_cutting_board_2080(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind cutting_board_instance:item where:
            is_cutting_board(cutting_board_instance) and id[cutting_board_instance]==2080
        achieve close_char(char,cutting_board_instance)
        if can_open(cutting_board_instance):
            achieve_once open(cutting_board_instance)
            exp(food_onion,cutting_board_instance)
        else:
            exp(food_onion,cutting_board_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,cutting_board_instance]=True
        close[cutting_board_instance,food_onion]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve has_water(pot)

behavior place_egg_in_pot(egg:item, pot:item):
    body:
        achieve_once inside(egg, pot)

behavior start_boiling(stove:item, pot:item):
    body:
        achieve once is_on(stove)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        
        bind egg: item where:
            is_food_egg(egg)

        bind faucet: item where:
            is_faucet(faucet)

        bind stove: item where:
            is_stove(stove)

        fill_pot_with_water(pot, faucet)
        place_egg_in_pot(egg, pot)
        start_boiling(stove, pot)
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_washing_machine_2041(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_food_onion_2026_around_oven_141(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_onion,oven_instance)
        else:
            exp(food_onion,oven_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,oven_instance]=True
        close[oven_instance,food_onion]=True
    

behavior find_food_bread_2016_around_oven_141(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==141
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(food_bread,oven_instance)
        else:
            exp(food_bread,oven_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,oven_instance]=True
        close[oven_instance,food_bread]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot(pot:item, faucet:item):
    body:
        achieve_once open(pot)
        achieve_once has_water(pot)
        achieve_once closed(pot)

behavior place_egg_in_pot(egg:item, pot:item):
    body:
        achieve_once inside(egg, pot)

behavior boil_water_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)
        achieve_once is_on(stove)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select the pot

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        bind egg: item where:
            is_food_egg(egg)
        # Select an egg

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        fill_pot(pot, faucet)
        place_egg_in_pot(egg, pot)
        boil_water_on_stove(pot, stove)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_pot(pot:item, faucet:item):
    body:
        achieve_once open(pot)
        achieve_once has_water(pot)
        achieve_once closed(pot)

behavior place_egg_in_pot(egg:item, pot:item):
    body:
        achieve_once inside(egg, pot)

behavior boil_water_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)
        achieve_once is_on(stove)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select the pot

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        bind egg: item where:
            is_food_egg(egg)
        # Select an egg

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        fill_pot(pot, faucet)
        place_egg_in_pot(egg, pot)
        boil_water_on_stove(pot, stove)

##############################
From agent.py-> find a plan in act()
close_executor(pot_2093)put_executor(pot_2093, stove_2090)
##############################
From agent.py
close_executor(pot_2093)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. pot_2093 is closed. 
##############################
From agent.py
put_executor(pot_2093, stove_2090)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is close pot_2093. pot_2093 is close stove_2090. pot_2093 is on stove_2090. pot_2093 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to fill the pot with water before the egg can be boiled.
##############################
From agent.py
Human Instruction: You need to fill the pot with water before the egg can be boiled.

The actions you have taken:
Action 1: Walk to kitchen_counter_128.
Action 2: look for pot_2093 around kitchen_counter_128.
Action 3: Walk to stove_2090.
Action 4: Open stove_2090.
Action 5: look for pot_2093 around stove_2090.
Action 6: Walk to pot_2093.
Action 7: Open pot_2093.
Action 8: Grab pot_2093.
Action 9: Walk to faucet_134.
Action 10: Switch off faucet_134.
Action 11: Walk to kitchen_counter_129.
Action 12: look for food_egg_2053 around kitchen_counter_129.
Action 13: Walk to faucet_308.
Action 14: Switch off faucet_308.
Action 15: Walk to cupboard_130.
Action 16: look for food_egg_2053 around cupboard_130.
Action 17: Walk to faucet_134.
Action 18: Switch on faucet_134.
Action 19: Switch off faucet_134.
Action 20: Walk to cupboard_131.
Action 21: Open cupboard_131.
Action 22: look for food_egg_2053 around cupboard_131.
Action 23: Walk to fridge_140.
Action 24: Switch off fridge_140.
Action 25: Open fridge_140.
Action 26: look for food_egg_2053 around fridge_140.
Action 27: Grab food_egg_2053.
Action 28: Put food_egg_2053 into pot_2093.
Action 29: Walk to stove_2090.
Action 30: Switch on stove_2090.
Action 31: Close pot_2093.
Action 32: Put pot_2093 on stove_2090.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve open(pot)
        # Open the pot to fill it with water
        achieve_once has_water(pot)
        # Temporarily fill the pot with water
        achieve closed(pot)
        # Ensure the pot is closed after filling

behavior boil_egg(stove:item, pot:item, egg:item):
    body:
        achieve inside(egg, pot)
        # Place the egg inside the pot
        achieve on(pot, stove)
        # Place the pot on the stove
        achieve is_on(stove)
        # Turn on the stove to boil the egg

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot
        
        bind faucet: item where:
            is_faucet(faucet) and id[faucet]==134
        # Select a faucet

        fill_pot_with_water(pot, faucet)

        bind stove: item where:
            is_stove(stove) and id[stove]==2090
        # Select a stove

        bind egg: item where:
            is_food_egg(egg)
        # Select an egg

        boil_egg(stove, pot, egg)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_gloves_2077_around_basket_for_clothes_2040(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_gloves,basket_for_clothes_instance)
        else:
            exp(clothes_gloves,basket_for_clothes_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_gloves]=True
    

behavior find_detergent_2108_around_washing_machine_2041(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot: item, faucet: item):
    body:
        achieve_once inhand(pot)
        achieve_once has_water(pot)

behavior add_egg_to_pot(egg: item, pot: item):
    body:
        achieve_once inside(egg, pot)

behavior boil_egg(stove: item, pot: item):
    body:
        achieve_once on(pot, stove)
        achieve_once is_on(stove)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot] == 2093
        # Select pot with ID 2093
        
        bind stove: item where:
            is_stove(stove) and id[stove] == 2090
        # Select stove with ID 2090
        
        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 134
        # Select faucet with ID 134

        bind egg: item where:
            is_food_egg(egg) and id[egg] == 2053
        # Select egg with ID 2053

        fill_pot_with_water(pot, faucet)
        add_egg_to_pot(egg, pot)
        boil_egg(stove, pot)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_pot_with_water(pot: item, faucet: item):
    body:
        achieve_once inhand(pot)
        achieve_once has_water(pot)

behavior add_egg_to_pot(egg: item, pot: item):
    body:
        achieve_once inside(egg, pot)

behavior boil_egg(stove: item, pot: item):
    body:
        achieve_once on(pot, stove)
        achieve_once is_on(stove)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and id[pot] == 2093
        # Select pot with ID 2093
        
        bind stove: item where:
            is_stove(stove) and id[stove] == 2090
        # Select stove with ID 2090
        
        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 134
        # Select faucet with ID 134

        bind egg: item where:
            is_food_egg(egg) and id[egg] == 2053
        # Select egg with ID 2053

        fill_pot_with_water(pot, faucet)
        add_egg_to_pot(egg, pot)
        boil_egg(stove, pot)

##############################
From agent.py-> find a plan in act()
grab_executor(pot_2093)put_executor(pot_2093, stove_2090)
##############################
From agent.py
grab_executor(pot_2093)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. Grabbing pot_2093 by right hand. 
##############################
From agent.py
put_executor(pot_2093, stove_2090)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. pot_2093 is close stove_2090. pot_2093 is on stove_2090. pot_2093 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The pot needs to be filled with water before boiling the egg. Ensure that you place the pot under the faucet, switch on the faucet to fill the pot with water, and then proceed to boil the egg.
##############################
Task Summary:
Task Goal:
Boil egg.
Action History:
['walk_executor(kitchen_counter_128)', 'walk_executor(stove_2090)', 'open_executor(stove_2090)', 'walk_executor(pot_2093)', 'open_executor(pot_2093)', 'grab_executor(pot_2093)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(kitchen_counter_129)', 'walk_executor(faucet_308)', 'switchoff_executor(faucet_308)', 'walk_executor(cupboard_130)', 'walk_executor(faucet_134)', 'switchon_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'grab_executor(food_egg_2053)', 'putin_executor(food_egg_2053, pot_2093)', 'walk_executor(stove_2090)', 'switchon_executor(stove_2090)', 'close_executor(pot_2093)', 'put_executor(pot_2093, stove_2090)', 'grab_executor(pot_2093)', 'put_executor(pot_2093, stove_2090)']
Time info:
Time consume: 192 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 6
goal correct times: 0
action_num: 28

Task complete rate:
1
Scene_id: 2
##############################
