From agent.py
Reset goals: The sub-goals are: 
['Turn on the lights in the bedroom. Then turn on the lights in the bathroom.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_light(light:item):
    body:
        achieve is_on(light) 

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)
        turn_on_light(bedroom_light)
        
        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)
        turn_on_light(bathroom_light)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_bedroom_light(light:item):
    body:
        achieve is_on(light)
        # Turn on the bedroom light

behavior turn_on_bathroom_light(light:item):
    body:
        achieve is_on(light)
        # Turn on the bathroom light

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, room) and is_bedroom(room)
        # Select a light in the bedroom

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, room) and is_bathroom(room)
        # Select a light in the bathroom

        turn_on_bedroom_light(bedroom_light)
        # Turn on the bedroom light

        turn_on_bathroom_light(bathroom_light)
        # Turn on the bathroom light

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_light(light:item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, room) and is_bedroom(room) 
        turn_on_light(bedroom_light)

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, room) and is_bathroom(room)
        turn_on_light(bathroom_light)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_light(light:item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)
        # Select the light in the bedroom
        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)
        # Select the light in the bathroom
        turn_on_light(bedroom_light)
        turn_on_light(bathroom_light)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_light(item:item):
    body:
        achieve is_on(item)

behavior find_and_turn_on_lights_in_bedroom():
    body:
        bind light: item where:
            is_light(light) and inside(light, room) and is_bedroom(room)
        turn_on_light(light)

behavior find_and_turn_on_lights_in_bathroom():
    body:
        bind light: item where:
            is_light(light) and inside(light, room) and is_bathroom(room)
        turn_on_light(light)

behavior __goal__():
    body:
        find_and_turn_on_lights_in_bedroom()
        find_and_turn_on_lights_in_bathroom()

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_light(light:item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)
        # Select the light inside the bedroom

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)
        # Select the light inside the bathroom

        turn_on_light(bedroom_light)
        turn_on_light(bathroom_light)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "turn on the lights in the bedroom. then turn on the lights in the bathroom." ?
Answer: Turn on the lights in the bedroom. Then turn on the lights in the bathroom.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_bedroom_light(light:item):
    body:
        achieve is_on(light)

behavior turn_on_bathroom_light(light:item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, room) and is_bedroom(room)
        # Select a light in the bedroom

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, room) and is_bathroom(room)
        # Select a light in the bathroom

        turn_on_bedroom_light(bedroom_light)
        # Turn on the bedroom light
        
        turn_on_bathroom_light(bathroom_light)
        # Turn on the bathroom light

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation

 Function to check if a light is in the bedroom
def is_light_in_bedroom(light: item):
    symbol in_bedroom = exists room: item : (is_bedroom(room) and inside(light, room))
    return in_bedroom

 Function to check if a light is in the bathroom
def is_light_in_bathroom(light: item):
    symbol in_bathroom = exists room: item : (is_bathroom(room) and inside(light, room))
    return in_bathroom

behavior turn_on_light(light: item):
    body:
        achieve_once is_on(light)
         Turn on the specified light

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and is_light_in_bedroom(bedroom_light)
         Identify a light in the bedroom

        bind bathroom_light: item where:
            is_light(bathroom_light) and is_light_in_bathroom(bathroom_light)
         Identify a light in the bathroom

        turn_on_light(bedroom_light)
         Turn on the light in the bedroom

        turn_on_light(bathroom_light)
         Turn on the light in the bathroom

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_bedroom_lights(bedroom_light: item):
    body:
        achieve is_on(bedroom_light)

behavior turn_on_bathroom_lights(bathroom_light: item):
    body:
        achieve is_on(bathroom_light)

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, Bedroom)
        turn_on_bedroom_lights(bedroom_light)

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, Bathroom)
        turn_on_bathroom_lights(bathroom_light)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_light_in_bedroom(light:item):
    body:
        achieve is_on(light)

behavior turn_on_light_in_bathroom(light:item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)
        turn_on_light_in_bedroom(bedroom_light)

        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)
        turn_on_light_in_bathroom(bathroom_light)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_light(item:item):
    body:
        achieve is_on(item)

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and exists bedroom: item : (is_bedroom(bedroom) and inside(bedroom_light, bedroom))
        # Select the light in the bedroom

        bind bathroom_light: item where:
            is_light(bathroom_light) and exists bathroom: item : (is_bathroom(bathroom) and inside(bathroom_light, bathroom))
        # Select the light in the bathroom

        turn_on_light(bedroom_light)
        turn_on_light(bathroom_light)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_lights_in_room(room: item, light: item):
    body:
        achieve is_on(light) # Turn on the lights in the room

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        # Select the bedroom

        bind bathroom: item where:
            is_bathroom(bathroom)
        # Select the bathroom

        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)
        # Select the light in the bedroom
        
        bind bathroom_light: item where:
            is_light(bathroom_light) and inside(bathroom_light, bathroom)
        # Select the light in the bathroom

        turn_on_lights_in_room(bedroom, bedroom_light)
        turn_on_lights_in_room(bathroom, bathroom_light)

#goal_representation_end

##############################
From agent.py-> find a plan in act()
walk_executor(light_258)switchon_executor(light_258)walk_executor(light_325)switchon_executor(light_325)
##############################
From agent.py
walk_executor(light_258)
Robot find: drawing_238, Robot is close to the light_258. 
##############################
From agent.py
switchon_executor(light_258)
Robot find: Robot is close to the light_258. light_258 is turned on. 
##############################
From agent.py
walk_executor(light_325)
Robot find: drawing_296, mat_292, Robot is close to the light_325. 
##############################
From agent.py
switchon_executor(light_325)
Robot find: Robot is close to the light_325. light_325 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Turn on the lights in the bedroom. Then turn on the lights in the bathroom.
Action History:
['walk_executor(light_258)', 'switchon_executor(light_258)', 'walk_executor(light_325)', 'switchon_executor(light_325)']
Time info:
Time consume: 106 seconds
Exp_helper query times: 0
Guidance query times: 1
library scale: 0
goal generate times: 12
goal correct times: 0
action_num: 4

Task complete rate:
1
Scene_id: 2
##############################
