From agent.py
Reset goals: The sub-goals are: 
['Hand wash the jacket, then wash it by washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2098_around_bathroom_counter_306(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(cleaning_solution,bathroom_counter_instance)
        else:
            exp(cleaning_solution,bathroom_counter_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_counter_instance]=True
        close[bathroom_counter_instance,cleaning_solution]=True
    

behavior find_soap_2037_around_bathroom_counter_306(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_detergent_2108_around_bathroom_counter_306(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(detergent,bathroom_counter_instance)
        else:
            exp(detergent,bathroom_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_counter_instance]=True
        close[bathroom_counter_instance,detergent]=True
    

behavior find_clothes_jacket_2078_around_basket_for_clothes_2040(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_jacket,basket_for_clothes_instance)
        else:
            exp(clothes_jacket,basket_for_clothes_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_jacket(jacket:item):
    body:
        achieve_once dirty(jacket) # Start with the jacket being dirty
        wash(jacket) # Hand wash the jacket
        achieve clean(jacket) # Achieve the jacket being clean

behavior machine_wash_jacket(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine) # Place the jacket inside the washing machine
        achieve_once closed(washing_machine) # Close the washing machine door
        achieve is_on(washing_machine) # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select a jacket to wash
        
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine
        
        hand_wash_jacket(jacket) # Perform the hand washing part
        machine_wash_jacket(jacket, washing_machine) # Perform the machine washing part

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2037_around_bathroom_cabinet_305(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_detergent_2108_around_kitchen_counter_128(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(detergent,kitchen_counter_instance)
        else:
            exp(detergent,kitchen_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,kitchen_counter_instance]=True
        close[kitchen_counter_instance,detergent]=True
    

behavior find_clothes_jacket_2078_around_basket_for_clothes_2040(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2040
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_jacket,basket_for_clothes_instance)
        else:
            exp(clothes_jacket,basket_for_clothes_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_by_hand(jacket:item):
    body:
        achieve clean(jacket)
        achieve has_water(jacket)

behavior wash_by_machine(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)
        achieve_once clean(jacket)

behavior start_washing_machine(washing_machine:item):
    body:
        achieve_once closed(washing_machine)
        achieve_once is_on(washing_machine)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        wash_by_hand(jacket) # Handwash the jacket first
        wash_by_machine(jacket, washing_machine) # Then put in the washing machine
        start_washing_machine(washing_machine) # Start the washing machine

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior wash_by_hand(jacket:item):
    body:
        achieve clean(jacket)
        achieve has_water(jacket)

behavior wash_by_machine(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)
        achieve_once clean(jacket)

behavior start_washing_machine(washing_machine:item):
    body:
        achieve_once closed(washing_machine)
        achieve_once is_on(washing_machine)

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        wash_by_hand(jacket) # Handwash the jacket first
        wash_by_machine(jacket, washing_machine) # Then put in the washing machine
        start_washing_machine(washing_machine) # Start the washing machine

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)exp(clothes_jacket_2078, basket_for_clothes_2040)walk_executor(clothes_jacket_2078)grab_executor(clothes_jacket_2078)wash_executor(clothes_jacket_2078)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(washing_machine_2041)open_executor(washing_machine_2041)putin_executor(clothes_jacket_2078, washing_machine_2041)close_executor(washing_machine_2041)plugin_executor(washing_machine_2041)switchon_executor(washing_machine_2041)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Robot find: clothes_pants_2113, clothes_shirt_2114, clothes_socks_2115, clothes_skirt_2116, Robot is close to the clothes_pants_2113. Robot is close to the clothes_shirt_2114. Robot is close to the clothes_socks_2115. Robot is close to the clothes_skirt_2116. Robot is close to the basket_for_clothes_2040. 
##############################
From agent.py
exp(clothes_jacket_2078, basket_for_clothes_2040)
Fail to find clothes_jacket_2078 around basket_for_clothes_2040. 
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2041)open_executor(washing_machine_2041)exp(clothes_jacket_2078, washing_machine_2041)walk_executor(clothes_jacket_2078)grab_executor(clothes_jacket_2078)wash_executor(clothes_jacket_2078)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(washing_machine_2041)putin_executor(clothes_jacket_2078, washing_machine_2041)close_executor(washing_machine_2041)plugin_executor(washing_machine_2041)switchon_executor(washing_machine_2041)
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. 
##############################
From agent.py
open_executor(washing_machine_2041)
Robot find: Robot is close to the washing_machine_2041. washing_machine_2041 is opened. 
##############################
From agent.py
exp(clothes_jacket_2078, washing_machine_2041)
Fail to find clothes_jacket_2078 around washing_machine_2041. 
##############################
From agent.py-> find a plan in act()
walk_executor(television_216)exp(clothes_jacket_2078, television_216)walk_executor(clothes_jacket_2078)grab_executor(clothes_jacket_2078)wash_executor(clothes_jacket_2078)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(washing_machine_2041)putin_executor(clothes_jacket_2078, washing_machine_2041)close_executor(washing_machine_2041)plugin_executor(washing_machine_2041)switchon_executor(washing_machine_2041)
##############################
From agent.py
walk_executor(television_216)
Robot find: mat_201, cd_2100, Robot is close to the television_216. Robot is close to the tvstand_186. 
##############################
From agent.py
exp(clothes_jacket_2078, television_216)
Fail to find clothes_jacket_2078 around television_216. 
##############################
Error record: object of type 'NoneType' has no len()
##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
['walk_executor(basket_for_clothes_2040)', 'walk_executor(washing_machine_2041)', 'open_executor(washing_machine_2041)', 'walk_executor(television_216)']
Time info:
Time consume: 70 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 2
goal correct times: 0
action_num: 4

Task complete rate:
Keystate: k1 - Requires: 7 steps
Action Completion Rate: 0.0
Scene_id: 2
##############################
