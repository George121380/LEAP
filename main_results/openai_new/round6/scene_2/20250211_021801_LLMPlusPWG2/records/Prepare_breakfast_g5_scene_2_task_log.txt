From agent.py
Reset goals: The sub-goals are: 
['Prepare a cup of hot milk with cereal inside.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2097_around_kitchen_counter_129(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

behavior find_cup_2087_around_kitchen_counter_128(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

behavior find_milk_2074_around_fridge_140(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_pot_54_around_cupboard_130(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(pot,cupboard_instance)
        else:
            exp(pot,cupboard_instance)
    eff:
        unknown[pot]=False
        close[pot,cupboard_instance]=True
        close[cupboard_instance,pot]=True
    

behavior find_food_cereal_2048_around_cupboard_130(food_cereal:item):
    goal: not unknown(food_cereal)
    body:
        assert is_food_cereal(food_cereal)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_cereal,cupboard_instance)
        else:
            exp(food_cereal,cupboard_instance)
    eff:
        unknown[food_cereal]=False
        close[food_cereal,cupboard_instance]=True
        close[cupboard_instance,food_cereal]=True
    

#exp_behavior_end

#goal_representation
 
behavior heat_milk(milk:item, stove:item, pot:item):
    body:
        achieve_once is_on(stove)
        # Turn on the stove to heat the milk
        achieve_once inside(milk, pot)
        # Pour milk inside the pot
        achieve has_water(pot)
        # Achieving heating by ensuring milk (considered similar to water) is actively being heated

behavior add_cereal_to_milk(cereal:item, bowl:item, pot:item):
    body:
        achieve_once inside(cereal, bowl)
        # Place cereal in an intermediate bowl
        achieve_once inside(cereal, pot)
        # Add cereal into the pot with heated milk

behavior pour_hot_milk_with_cereal_into_cup(milk:item, cereal:item, cup:item, pot:item):
    body:
        achieve_once inside(milk, cup)
        # Pour the hot milk from pot into the cup
        achieve_once inside(cereal, cup)
        # Ensure cereal is also in the cup alongside milk

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select milk for the task

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind cereal: item where:
            is_food_cereal(cereal)
        # Select cereal

        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl for the cereal

        bind cup: item where:
            is_cup(cup)
        # Select a cup for the final mixture

        heat_milk(milk, stove, pot)
        add_cereal_to_milk(cereal, bowl, pot)
        pour_hot_milk_with_cereal_into_cup(milk, cereal, cup, pot)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior heat_milk(milk:item, stove:item, pot:item):
    body:
        achieve_once is_on(stove)
        # Turn on the stove to heat the milk
        achieve_once inside(milk, pot)
        # Pour milk inside the pot
        achieve has_water(pot)
        # Achieving heating by ensuring milk (considered similar to water) is actively being heated

behavior add_cereal_to_milk(cereal:item, bowl:item, pot:item):
    body:
        achieve_once inside(cereal, bowl)
        # Place cereal in an intermediate bowl
        achieve_once inside(cereal, pot)
        # Add cereal into the pot with heated milk

behavior pour_hot_milk_with_cereal_into_cup(milk:item, cereal:item, cup:item, pot:item):
    body:
        achieve_once inside(milk, cup)
        # Pour the hot milk from pot into the cup
        achieve_once inside(cereal, cup)
        # Ensure cereal is also in the cup alongside milk

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select milk for the task

        bind pot: item where:
            is_pot(pot)
        # Select a pot

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        bind cereal: item where:
            is_food_cereal(cereal)
        # Select cereal

        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl for the cereal

        bind cup: item where:
            is_cup(cup)
        # Select a cup for the final mixture

        heat_milk(milk, stove, pot)
        add_cereal_to_milk(cereal, bowl, pot)
        pour_hot_milk_with_cereal_into_cup(milk, cereal, cup, pot)

##############################
From agent.py-> find a plan in act()
walk_executor(stove_2090)switchon_executor(stove_2090)walk_executor(cupboard_130)exp(pot_2093, cupboard_130)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(milk_2074, fridge_140)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(pot_2093)putin_executor(milk_2074, pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(kitchen_counter_129)exp(bowl_2095, kitchen_counter_129)walk_executor(cupboard_130)exp(food_cereal_2048, cupboard_130)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(bowl_2095)putin_executor(food_cereal_2048, bowl_2095)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(pot_2093)putin_executor(food_cereal_2048, pot_2093)walk_executor(kitchen_counter_128)exp(cup_2087, kitchen_counter_128)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(cup_2087)putin_executor(food_cereal_2048, cup_2087)
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_54, pot_2093, Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(pot_2093, cupboard_130)
Find pot_2093. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(milk_2074, fridge_140)walk_executor(pot_2093)open_executor(pot_2093)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(pot_2093)putin_executor(milk_2074, pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(kitchen_counter_129)exp(bowl_2095, kitchen_counter_129)walk_executor(cupboard_130)exp(food_cereal_2048, cupboard_130)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(bowl_2095)putin_executor(food_cereal_2048, bowl_2095)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(pot_2093)putin_executor(food_cereal_2048, pot_2093)walk_executor(kitchen_counter_128)exp(cup_2087, kitchen_counter_128)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(cup_2087)putin_executor(food_cereal_2048, cup_2087)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(milk_2074, fridge_140)
Find milk_2074. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_2093)open_executor(pot_2093)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(pot_2093)putin_executor(milk_2074, pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(kitchen_counter_129)exp(bowl_2095, kitchen_counter_129)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(bowl_2095)putin_executor(food_cereal_2048, bowl_2095)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(pot_2093)putin_executor(food_cereal_2048, pot_2093)walk_executor(kitchen_counter_128)exp(cup_2087, kitchen_counter_128)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(cup_2087)putin_executor(food_cereal_2048, cup_2087)
##############################
From agent.py
walk_executor(pot_2093)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the pot_2093. 
##############################
From agent.py
open_executor(pot_2093)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the pot_2093. pot_2093 is opened. 
##############################
From agent.py
walk_executor(milk_2074)
Robot find: Robot is close to the milk_2074. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(milk_2074)
Robot find: Robot is close to the milk_2074. Robot is close to the fridge_140. Grabbing milk_2074 by right hand. 
##############################
From agent.py
walk_executor(pot_2093)
Robot find: Robot is close to the milk_2074. Robot is close to the kitchen_counter_129. Robot is close to the pot_2093. 
##############################
From agent.py
putin_executor(milk_2074, pot_2093)
Robot find: Robot is close to the milk_2074. Robot is close to the kitchen_counter_129. Robot is close to the pot_2093. milk_2074 is close pot_2093. milk_2074 is inside pot_2093. pot_2093 is close milk_2074. milk_2074 released by right hand. 
##############################
From agent.py
grab_executor(pot_2093)
Robot find: Robot is close to the milk_2074. Robot is close to the kitchen_counter_129. Robot is close to the pot_2093. Grabbing pot_2093 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(kitchen_counter_129)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_129. 
##############################
From agent.py
exp(bowl_2095, kitchen_counter_129)
Fail to find bowl_2095 around kitchen_counter_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(cupboard_131)open_executor(cupboard_131)exp(bowl_2095, cupboard_131)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(bowl_2095)putin_executor(food_cereal_2048, bowl_2095)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(pot_2093)putin_executor(food_cereal_2048, pot_2093)walk_executor(cupboard_131)exp(cup_2087, cupboard_131)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(cup_2087)putin_executor(food_cereal_2048, cup_2087)
##############################
From agent.py
walk_executor(faucet_308)
Robot find: drawing_296, towel_rack_298, Robot is close to the pot_2093. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. 
##############################
From agent.py
switchoff_executor(faucet_308)
Robot find: Robot is close to the pot_2093. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. faucet_308 is turned off. 
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the pot_2093. Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the pot_2093. Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(bowl_2095, cupboard_131)
Fail to find bowl_2095 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)switchon_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(kitchen_counter_128)exp(bowl_2095, kitchen_counter_128)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(bowl_2095)putin_executor(food_cereal_2048, bowl_2095)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(pot_2093)putin_executor(food_cereal_2048, pot_2093)walk_executor(kitchen_counter_128)exp(cup_2087, kitchen_counter_128)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(cup_2087)putin_executor(food_cereal_2048, cup_2087)
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the pot_2093. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(bowl_2095, kitchen_counter_128)
Fail to find bowl_2095 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(drawing_296)exp(bowl_2095, drawing_296)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(bowl_2095)putin_executor(food_cereal_2048, bowl_2095)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(pot_2093)putin_executor(food_cereal_2048, pot_2093)walk_executor(table_127)exp(cup_2087, table_127)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(cup_2087)putin_executor(food_cereal_2048, cup_2087)
##############################
From agent.py
walk_executor(drawing_296)
Robot find: towel_rack_299, towel_rack_300, mat_292, Robot is close to the pot_2093. Robot is close to the drawing_296. 
##############################
From agent.py
exp(bowl_2095, drawing_296)
Fail to find bowl_2095 around drawing_296. 
##############################
From agent.py-> find a plan in act()
walk_executor(light_217)exp(bowl_2095, light_217)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(bowl_2095)putin_executor(food_cereal_2048, bowl_2095)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(pot_2093)putin_executor(food_cereal_2048, pot_2093)walk_executor(sink_133)exp(cup_2087, sink_133)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(cup_2087)putin_executor(food_cereal_2048, cup_2087)
##############################
From agent.py
walk_executor(light_217)
Robot find: Robot is close to the pot_2093. Robot is close to the light_217. 
##############################
From agent.py
exp(bowl_2095, light_217)
Fail to find bowl_2095 around light_217. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_301)exp(bowl_2095, wallshelf_301)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(bowl_2095)putin_executor(food_cereal_2048, bowl_2095)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(pot_2093)putin_executor(food_cereal_2048, pot_2093)walk_executor(microwave_149)open_executor(microwave_149)exp(cup_2087, microwave_149)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(cup_2087)putin_executor(food_cereal_2048, cup_2087)
##############################
From agent.py
walk_executor(wallshelf_301)
Robot find: Robot is close to the pot_2093. Robot is close to the wallshelf_301. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2095 ?
Answer: Go to dining_room_1. Locate table_123 and you will find bowl_2095 placed on it.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_1. Locate table_123 and you will find bowl_2095 placed on it.

The actions you have taken:
Action 1: Walk to stove_2090.
Action 2: Switch on stove_2090.
Action 3: Walk to cupboard_130.
Action 4: look for pot_2093 around cupboard_130.
Action 5: Walk to fridge_140.
Action 6: Switch off fridge_140.
Action 7: Open fridge_140.
Action 8: look for milk_2074 around fridge_140.
Action 9: Walk to pot_2093.
Action 10: Open pot_2093.
Action 11: Walk to milk_2074.
Action 12: Grab milk_2074.
Action 13: Walk to pot_2093.
Action 14: Put milk_2074 into pot_2093.
Action 15: Grab pot_2093.
Action 16: Walk to faucet_134.
Action 17: Switch off faucet_134.
Action 18: Walk to kitchen_counter_129.
Action 19: look for bowl_2095 around kitchen_counter_129.
Action 20: Walk to faucet_308.
Action 21: Switch off faucet_308.
Action 22: Walk to cupboard_131.
Action 23: Open cupboard_131.
Action 24: look for bowl_2095 around cupboard_131.
Action 25: Walk to faucet_134.
Action 26: Switch on faucet_134.
Action 27: Switch off faucet_134.
Action 28: Walk to kitchen_counter_128.
Action 29: look for bowl_2095 around kitchen_counter_128.
Action 30: Walk to drawing_296.
Action 31: look for bowl_2095 around drawing_296.
Action 32: Walk to light_217.
Action 33: look for bowl_2095 around light_217.
Action 34: Walk to wallshelf_301.

##############################
From agent.py
exp(bowl_2095, wallshelf_301)
Fail to find bowl_2095 around wallshelf_301. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(bowl_2095, table_123)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(bowl_2095)putin_executor(food_cereal_2048, bowl_2095)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(pot_2093)putin_executor(food_cereal_2048, pot_2093)walk_executor(table_123)exp(cup_2087, table_123)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(cup_2087)putin_executor(food_cereal_2048, cup_2087)
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, laptop_2015, fork_2103, cup_2087, bowl_2095, drawing_118, Robot is close to the pot_2093. Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
exp(bowl_2095, table_123)
Find bowl_2095. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(bowl_2095)putin_executor(food_cereal_2048, bowl_2095)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(pot_2093)putin_executor(food_cereal_2048, pot_2093)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)walk_executor(food_cereal_2048)grab_executor(food_cereal_2048)walk_executor(cup_2087)putin_executor(food_cereal_2048, cup_2087)
##############################
From agent.py
walk_executor(food_cereal_2048)
Robot find: Robot is close to the pot_2093. Robot is close to the food_cereal_2048. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_cereal_2048)
Robot find: Robot is close to the pot_2093. Robot is close to the food_cereal_2048. Robot is close to the fridge_140. Grabbing food_cereal_2048 by left hand. 
##############################
From agent.py
walk_executor(bowl_2095)
Robot find: Robot is close to the pot_2093. Robot is close to the food_cereal_2048. Robot is close to the table_123. Robot is close to the bowl_2095. 
##############################
From agent.py
putin_executor(food_cereal_2048, bowl_2095)
Robot find: Robot is close to the pot_2093. Robot is close to the food_cereal_2048. Robot is close to the table_123. Robot is close to the bowl_2095. food_cereal_2048 is close bowl_2095. bowl_2095 is close food_cereal_2048. food_cereal_2048 is inside bowl_2095. food_cereal_2048 released by left hand. 
##############################
From agent.py
walk_executor(food_cereal_2048)
Robot find: Robot is close to the pot_2093. Robot is close to the food_cereal_2048. Robot is close to the bowl_2095. 
##############################
From agent.py
grab_executor(food_cereal_2048)
Robot find: Robot is close to the pot_2093. Robot is close to the food_cereal_2048. Robot is close to the bowl_2095. Grabbing food_cereal_2048 by left hand. 
##############################
From agent.py
walk_executor(pot_2093)
Robot find: Robot is close to the pot_2093. Robot is close to the food_cereal_2048. Robot is close to the milk_2074. 
##############################
From agent.py
putin_executor(food_cereal_2048, pot_2093)
Robot find: Robot is close to the pot_2093. Robot is close to the food_cereal_2048. Robot is close to the milk_2074. food_cereal_2048 is close pot_2093. pot_2093 is close food_cereal_2048. food_cereal_2048 is inside pot_2093. food_cereal_2048 released by left hand. 
##############################
From agent.py
walk_executor(milk_2074)
Robot find: Robot is close to the pot_2093. Robot is close to the milk_2074. 
##############################
From agent.py
grab_executor(milk_2074)
Robot find: Robot is close to the pot_2093. Robot is close to the milk_2074. Grabbing milk_2074 by left hand. 
##############################
From agent.py
walk_executor(cup_2087)
Robot find: Robot is close to the pot_2093. Robot is close to the milk_2074. Robot is close to the table_123. Robot is close to the cup_2087. 
##############################
From agent.py
putin_executor(milk_2074, cup_2087)
Robot find: Robot is close to the pot_2093. Robot is close to the milk_2074. Robot is close to the table_123. Robot is close to the cup_2087. milk_2074 is close cup_2087. milk_2074 is inside cup_2087. cup_2087 is close milk_2074. milk_2074 released by left hand. 
##############################
From agent.py
walk_executor(food_cereal_2048)
Robot find: Robot is close to the pot_2093. Robot is close to the food_cereal_2048. 
##############################
From agent.py
grab_executor(food_cereal_2048)
Robot find: Robot is close to the pot_2093. Robot is close to the food_cereal_2048. Grabbing food_cereal_2048 by left hand. 
##############################
From agent.py
walk_executor(cup_2087)
Robot find: Robot is close to the pot_2093. Robot is close to the food_cereal_2048. Robot is close to the table_123. Robot is close to the cup_2087. 
##############################
From agent.py
putin_executor(food_cereal_2048, cup_2087)
Robot find: Robot is close to the pot_2093. Robot is close to the food_cereal_2048. Robot is close to the table_123. Robot is close to the cup_2087. food_cereal_2048 is close cup_2087. cup_2087 is close food_cereal_2048. food_cereal_2048 is inside cup_2087. food_cereal_2048 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: Pour the milk from pot_2093 into a cup along with the cereal to finish preparing the cup of hot milk with cereal inside. Ensure the milk is hot by heating it on the stove. The actions did not include pouring the contents of pot_2093 (hot milk and cereal) directly into the cup_2087.
##############################
From agent.py
Human Instruction: Pour the milk from pot_2093 into a cup along with the cereal to finish preparing the cup of hot milk with cereal inside. Ensure the milk is hot by heating it on the stove. The actions did not include pouring the contents of pot_2093 (hot milk and cereal) directly into the cup_2087.

The actions you have taken:
Action 1: Walk to stove_2090.
Action 2: Switch on stove_2090.
Action 3: Walk to cupboard_130.
Action 4: look for pot_2093 around cupboard_130.
Action 5: Walk to fridge_140.
Action 6: Switch off fridge_140.
Action 7: Open fridge_140.
Action 8: look for milk_2074 around fridge_140.
Action 9: Walk to pot_2093.
Action 10: Open pot_2093.
Action 11: Walk to milk_2074.
Action 12: Grab milk_2074.
Action 13: Walk to pot_2093.
Action 14: Put milk_2074 into pot_2093.
Action 15: Grab pot_2093.
Action 16: Walk to faucet_134.
Action 17: Switch off faucet_134.
Action 18: Walk to kitchen_counter_129.
Action 19: look for bowl_2095 around kitchen_counter_129.
Action 20: Walk to faucet_308.
Action 21: Switch off faucet_308.
Action 22: Walk to cupboard_131.
Action 23: Open cupboard_131.
Action 24: look for bowl_2095 around cupboard_131.
Action 25: Walk to faucet_134.
Action 26: Switch on faucet_134.
Action 27: Switch off faucet_134.
Action 28: Walk to kitchen_counter_128.
Action 29: look for bowl_2095 around kitchen_counter_128.
Action 30: Walk to drawing_296.
Action 31: look for bowl_2095 around drawing_296.
Action 32: Walk to light_217.
Action 33: look for bowl_2095 around light_217.
Action 34: Walk to wallshelf_301.
Action 35: look for bowl_2095 around wallshelf_301.
Action 36: Walk to table_123.
Action 37: look for bowl_2095 around table_123.
Action 38: Walk to food_cereal_2048.
Action 39: Grab food_cereal_2048.
Action 40: Walk to bowl_2095.
Action 41: Put food_cereal_2048 into bowl_2095.
Action 42: Walk to food_cereal_2048.
Action 43: Grab food_cereal_2048.
Action 44: Walk to pot_2093.
Action 45: Put food_cereal_2048 into pot_2093.
Action 46: Walk to milk_2074.
Action 47: Grab milk_2074.
Action 48: Walk to cup_2087.
Action 49: Put milk_2074 into cup_2087.
Action 50: Walk to food_cereal_2048.
Action 51: Grab food_cereal_2048.
Action 52: Walk to cup_2087.
Action 53: Put food_cereal_2048 into cup_2087.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2097_around_towel_rack_299(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==299
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(bowl,towel_rack_instance)
        else:
            exp(bowl,towel_rack_instance)
    eff:
        unknown[bowl]=False
        close[bowl,towel_rack_instance]=True
        close[towel_rack_instance,bowl]=True
    

behavior find_cup_2089_around_cup_2088(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2088
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(cup,cup_instance)
        else:
            exp(cup,cup_instance)
    eff:
        unknown[cup]=False
        close[cup,cup_instance]=True
        close[cup_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
def is_hot_pot_with_milk_and_cereal(pot: item):
    # Checks if the pot is hot and contains milk and cereal
    symbol has_contents= exists o: item : ((is_milk(o) or is_food_cereal(o)) and inside(o, pot))
    return has_contents

behavior pour_contents_into_cup(pot: item, cup: item):
    body:
        achieve_once inside(pot, cup) # Pour the contents of the pot into the cup

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot) and is_hot_pot_with_milk_and_cereal(pot) # Select the pot with milk and cereal
        bind cup: item where:
            is_cup(cup) and id[cup] == 2087 # Select the cup with ID 2087
        pour_contents_into_cup(pot, cup) # Pour the contents from pot to cup

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2006_around_cup_2088(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2088
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(cup,cup_instance)
        else:
            exp(cup,cup_instance)
    eff:
        unknown[cup]=False
        close[cup,cup_instance]=True
        close[cup_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior heat_milk_on_stove(milk:item, pot:item, stove:item):
    body:
        achieve_once inside(milk, pot) 
        achieve_once is_on(stove)

behavior pour_milk_into_cup(milk:item, pot:item, cup:item):
    body:
        achieve_once inside(milk, cup)

behavior add_cereal_to_cup(cereal:item, cup:item):
    body:
        achieve_once inside(cereal, cup)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        bind pot: item where:
            is_pot(pot) and id[pot] == 2093
        # Select the pot with ID 2093

        bind cereal: item where:
            is_food_cereal(cereal)
        # Select the cereal

        bind cup: item where:
            is_cup(cup) and id[cup] == 2087
        # Select the cup with ID 2087

        heat_milk_on_stove(milk, pot, stove)
        pour_milk_into_cup(milk, pot, cup)
        add_cereal_to_cup(cereal, cup)
 
#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior heat_milk_on_stove(milk:item, pot:item, stove:item):
    body:
        achieve_once inside(milk, pot) 
        achieve_once is_on(stove)

behavior pour_milk_into_cup(milk:item, pot:item, cup:item):
    body:
        achieve_once inside(milk, cup)

behavior add_cereal_to_cup(cereal:item, cup:item):
    body:
        achieve_once inside(cereal, cup)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        bind pot: item where:
            is_pot(pot) and id[pot] == 2093
        # Select the pot with ID 2093

        bind cereal: item where:
            is_food_cereal(cereal)
        # Select the cereal

        bind cup: item where:
            is_cup(cup) and id[cup] == 2087
        # Select the cup with ID 2087

        heat_milk_on_stove(milk, pot, stove)
        pour_milk_into_cup(milk, pot, cup)
        add_cereal_to_cup(cereal, cup)
 
##############################
From agent.py-> find a plan in act()
walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(pot_2093)putin_executor(milk_2074, pot_2093)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(cup_2087)putin_executor(milk_2074, cup_2087)
##############################
From agent.py
walk_executor(milk_2074)
Robot find: Robot is close to the pot_2093. Robot is close to the cup_2087. Robot is close to the milk_2074. 
##############################
From agent.py
grab_executor(milk_2074)
Robot find: Robot is close to the pot_2093. Robot is close to the cup_2087. Robot is close to the milk_2074. Grabbing milk_2074 by left hand. 
##############################
From agent.py
walk_executor(pot_2093)
Robot find: Robot is close to the pot_2093. Robot is close to the milk_2074. 
##############################
From agent.py
putin_executor(milk_2074, pot_2093)
Robot find: Robot is close to the pot_2093. Robot is close to the milk_2074. milk_2074 is close pot_2093. milk_2074 is inside pot_2093. pot_2093 is close milk_2074. milk_2074 released by left hand. 
##############################
From agent.py
walk_executor(milk_2074)
Robot find: Robot is close to the pot_2093. Robot is close to the milk_2074. 
##############################
From agent.py
grab_executor(milk_2074)
Robot find: Robot is close to the pot_2093. Robot is close to the milk_2074. Grabbing milk_2074 by left hand. 
##############################
From agent.py
walk_executor(cup_2087)
Robot find: Robot is close to the pot_2093. Robot is close to the milk_2074. Robot is close to the table_123. Robot is close to the cup_2087. 
##############################
From agent.py
putin_executor(milk_2074, cup_2087)
Robot find: Robot is close to the pot_2093. Robot is close to the milk_2074. Robot is close to the table_123. Robot is close to the cup_2087. milk_2074 is close cup_2087. milk_2074 is inside cup_2087. milk_2074 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure that the hot milk from pot_2093 is poured into cup_2087, which already contains the cereal, to finish preparing the cup of hot milk with cereal inside.
##############################
From agent.py
Human Instruction: You need to ensure that the hot milk from pot_2093 is poured into cup_2087, which already contains the cereal, to finish preparing the cup of hot milk with cereal inside.

The actions you have taken:
Action 1: Walk to stove_2090.
Action 2: Switch on stove_2090.
Action 3: Walk to cupboard_130.
Action 4: look for pot_2093 around cupboard_130.
Action 5: Walk to fridge_140.
Action 6: Switch off fridge_140.
Action 7: Open fridge_140.
Action 8: look for milk_2074 around fridge_140.
Action 9: Walk to pot_2093.
Action 10: Open pot_2093.
Action 11: Walk to milk_2074.
Action 12: Grab milk_2074.
Action 13: Walk to pot_2093.
Action 14: Put milk_2074 into pot_2093.
Action 15: Grab pot_2093.
Action 16: Walk to faucet_134.
Action 17: Switch off faucet_134.
Action 18: Walk to kitchen_counter_129.
Action 19: look for bowl_2095 around kitchen_counter_129.
Action 20: Walk to faucet_308.
Action 21: Switch off faucet_308.
Action 22: Walk to cupboard_131.
Action 23: Open cupboard_131.
Action 24: look for bowl_2095 around cupboard_131.
Action 25: Walk to faucet_134.
Action 26: Switch on faucet_134.
Action 27: Switch off faucet_134.
Action 28: Walk to kitchen_counter_128.
Action 29: look for bowl_2095 around kitchen_counter_128.
Action 30: Walk to drawing_296.
Action 31: look for bowl_2095 around drawing_296.
Action 32: Walk to light_217.
Action 33: look for bowl_2095 around light_217.
Action 34: Walk to wallshelf_301.
Action 35: look for bowl_2095 around wallshelf_301.
Action 36: Walk to table_123.
Action 37: look for bowl_2095 around table_123.
Action 38: Walk to food_cereal_2048.
Action 39: Grab food_cereal_2048.
Action 40: Walk to bowl_2095.
Action 41: Put food_cereal_2048 into bowl_2095.
Action 42: Walk to food_cereal_2048.
Action 43: Grab food_cereal_2048.
Action 44: Walk to pot_2093.
Action 45: Put food_cereal_2048 into pot_2093.
Action 46: Walk to milk_2074.
Action 47: Grab milk_2074.
Action 48: Walk to cup_2087.
Action 49: Put milk_2074 into cup_2087.
Action 50: Walk to food_cereal_2048.
Action 51: Grab food_cereal_2048.
Action 52: Walk to cup_2087.
Action 53: Put food_cereal_2048 into cup_2087.
Action 54: Walk to milk_2074.
Action 55: Grab milk_2074.
Action 56: Walk to pot_2093.
Action 57: Put milk_2074 into pot_2093.
Action 58: Walk to milk_2074.
Action 59: Grab milk_2074.
Action 60: Walk to cup_2087.
Action 61: Put milk_2074 into cup_2087.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2089_around_cup_2088(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2088
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(cup,cup_instance)
        else:
            exp(cup,cup_instance)
    eff:
        unknown[cup]=False
        close[cup,cup_instance]=True
        close[cup_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior pour_milk_into_cup(hot_milk:item, cup:item):
    body:
        achieve_once inside(hot_milk, cup)
        # Pour the hot milk into the cup containing cereal

behavior __goal__():
    body:
        bind hot_milk: item where:
            is_pot(hot_milk) and id[hot_milk]==2093
        # Select the pot with ID 2093 containing hot milk
        
        bind cereal_cup: item where:
            is_cup(cereal_cup) and id[cereal_cup]==2087
        # Select the cup with ID 2087 that already contains cereal
        
        pour_milk_into_cup(hot_milk, cereal_cup)
        # Pour the hot milk into the cereal cup

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior pour_milk_into_cup(hot_milk:item, cup:item):
    body:
        achieve_once inside(hot_milk, cup)
        # Pour the hot milk into the cup containing cereal

behavior __goal__():
    body:
        bind hot_milk: item where:
            is_pot(hot_milk) and id[hot_milk]==2093
        # Select the pot with ID 2093 containing hot milk
        
        bind cereal_cup: item where:
            is_cup(cereal_cup) and id[cereal_cup]==2087
        # Select the cup with ID 2087 that already contains cereal
        
        pour_milk_into_cup(hot_milk, cereal_cup)
        # Pour the hot milk into the cereal cup

##############################
From agent.py-> find a plan in act()
putin_executor(pot_2093, cup_2087)
##############################
From agent.py
putin_executor(pot_2093, cup_2087)
Robot find: Robot is close to the pot_2093. Robot is close to the milk_2074. Robot is close to the table_123. Robot is close to the cup_2087. pot_2093 is inside cup_2087. cup_2087 is close pot_2093. pot_2093 is close cup_2087. pot_2093 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure that the hot milk from pot_2093 is poured into cup_2087, as the placing or transferring action of hot milk into the designated cereal cup was not successfully completed according to the provided information.
##############################
Task Summary:
Task Goal:
Prepare a cup of hot milk with cereal inside.
Action History:
['walk_executor(stove_2090)', 'switchon_executor(stove_2090)', 'walk_executor(cupboard_130)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'walk_executor(pot_2093)', 'open_executor(pot_2093)', 'walk_executor(milk_2074)', 'grab_executor(milk_2074)', 'walk_executor(pot_2093)', 'putin_executor(milk_2074, pot_2093)', 'grab_executor(pot_2093)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(kitchen_counter_129)', 'walk_executor(faucet_308)', 'switchoff_executor(faucet_308)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(faucet_134)', 'switchon_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(kitchen_counter_128)', 'walk_executor(drawing_296)', 'walk_executor(light_217)', 'walk_executor(wallshelf_301)', 'walk_executor(table_123)', 'walk_executor(food_cereal_2048)', 'grab_executor(food_cereal_2048)', 'walk_executor(bowl_2095)', 'putin_executor(food_cereal_2048, bowl_2095)', 'walk_executor(food_cereal_2048)', 'grab_executor(food_cereal_2048)', 'walk_executor(pot_2093)', 'putin_executor(food_cereal_2048, pot_2093)', 'walk_executor(milk_2074)', 'grab_executor(milk_2074)', 'walk_executor(cup_2087)', 'putin_executor(milk_2074, cup_2087)', 'walk_executor(food_cereal_2048)', 'grab_executor(food_cereal_2048)', 'walk_executor(cup_2087)', 'putin_executor(food_cereal_2048, cup_2087)', 'walk_executor(milk_2074)', 'grab_executor(milk_2074)', 'walk_executor(pot_2093)', 'putin_executor(milk_2074, pot_2093)', 'walk_executor(milk_2074)', 'grab_executor(milk_2074)', 'walk_executor(cup_2087)', 'putin_executor(milk_2074, cup_2087)', 'putin_executor(pot_2093, cup_2087)']
Time info:
Time consume: 306 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 4
goal correct times: 0
action_num: 53

Task complete rate:
Keystate: k1 - Requires: 8 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
