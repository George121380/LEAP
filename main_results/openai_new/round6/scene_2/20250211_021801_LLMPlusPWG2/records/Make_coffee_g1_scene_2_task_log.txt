From agent.py
Reset goals: The sub-goals are: 
['Make a cup of coffee using the coffee maker.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2006_around_cupboard_130(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

behavior find_coffee_filter_2035_around_cupboard_130(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(coffee_filter,cupboard_instance)
        else:
            exp(coffee_filter,cupboard_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,cupboard_instance]=True
        close[cupboard_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
behavior make_coffee_using_coffee_maker(coffee_maker:item, cup:item):
    body:
        achieve plugged(coffee_maker) # Ensure the coffee maker is plugged in
        achieve is_on(coffee_maker) # Turn on the coffee maker
        achieve has_water(coffee_maker) # Ensure there is water in the coffee maker
        achieve clean(cup) # Ensure the cup is clean
        achieve_once on(cup, coffee_maker) # Place the cup under the coffee dispenser

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker) 
        # Bind an available coffee maker instance
        
        bind cup: item where:
            is_cup(cup)
        # Bind an available cup instance

        make_coffee_using_coffee_maker(coffee_maker, cup)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior make_coffee_using_coffee_maker(coffee_maker:item, cup:item):
    body:
        achieve plugged(coffee_maker) # Ensure the coffee maker is plugged in
        achieve is_on(coffee_maker) # Turn on the coffee maker
        achieve has_water(coffee_maker) # Ensure there is water in the coffee maker
        achieve clean(cup) # Ensure the cup is clean
        achieve_once on(cup, coffee_maker) # Place the cup under the coffee dispenser

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker) 
        # Bind an available coffee maker instance
        
        bind cup: item where:
            is_cup(cup)
        # Bind an available cup instance

        make_coffee_using_coffee_maker(coffee_maker, cup)

##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_147)switchon_executor(coffe_maker_147)walk_executor(cupboard_130)exp(cup_2087, cupboard_130)walk_executor(cup_2087)grab_executor(cup_2087)wash_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(coffe_maker_147)put_executor(cup_2087, coffe_maker_147)
##############################
From agent.py
walk_executor(coffe_maker_147)
Robot find: fryingpan_2107, oil_2102, pot_54, pot_2093, Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. 
##############################
From agent.py
switchon_executor(coffe_maker_147)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. coffe_maker_147 is turned on. 
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(cup_2087, cupboard_130)
Fail to find cup_2087 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(cup_2087, cupboard_131)walk_executor(cup_2087)grab_executor(cup_2087)wash_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(coffe_maker_147)put_executor(cup_2087, coffe_maker_147)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(cup_2087, cupboard_131)
Fail to find cup_2087 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(cup_2087, kitchen_counter_128)walk_executor(cup_2087)grab_executor(cup_2087)wash_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(coffe_maker_147)put_executor(cup_2087, coffe_maker_147)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(cup_2087, kitchen_counter_128)
Fail to find cup_2087 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_133)exp(cup_2087, sink_133)walk_executor(cup_2087)grab_executor(cup_2087)wash_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(coffe_maker_147)put_executor(cup_2087, coffe_maker_147)
##############################
From agent.py
walk_executor(sink_133)
Robot find: after_shave_2029, cleaning_solution_2098, juice_2034, Robot is close to the kitchen_counter_132. Robot is close to the sink_133. 
##############################
From agent.py
exp(cup_2087, sink_133)
Fail to find cup_2087 around sink_133. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_127)exp(cup_2087, table_127)walk_executor(cup_2087)grab_executor(cup_2087)wash_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(coffe_maker_147)put_executor(cup_2087, coffe_maker_147)
##############################
From agent.py
walk_executor(table_127)
Robot find: mat_115, fork_2104, console_2027, crayon_2030, bowl_2096, bowl_2097, napkin_2014, plate_2105, drawing_118, Robot is close to the mat_115. Robot is close to the table_127. 
##############################
From agent.py
exp(cup_2087, table_127)
Fail to find cup_2087 around table_127. 
##############################
From agent.py-> find a plan in act()
walk_executor(bench_125)exp(cup_2087, bench_125)walk_executor(cup_2087)grab_executor(cup_2087)wash_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(coffe_maker_147)put_executor(cup_2087, coffe_maker_147)
##############################
From agent.py
walk_executor(bench_125)
Robot find: Robot is close to the bench_125. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2087 ?
Answer: Go to dining_room_1 and locate table_123. You will find cup_2087 sitting on top of table_123.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_1 and locate table_123. You will find cup_2087 sitting on top of table_123.

The actions you have taken:
Action 1: Walk to coffe_maker_147.
Action 2: Switch on coffe_maker_147.
Action 3: Walk to cupboard_130.
Action 4: look for cup_2087 around cupboard_130.
Action 5: Walk to cupboard_131.
Action 6: Open cupboard_131.
Action 7: look for cup_2087 around cupboard_131.
Action 8: Walk to kitchen_counter_128.
Action 9: look for cup_2087 around kitchen_counter_128.
Action 10: Walk to sink_133.
Action 11: look for cup_2087 around sink_133.
Action 12: Walk to table_127.
Action 13: look for cup_2087 around table_127.
Action 14: Walk to bench_125.

##############################
From agent.py
exp(cup_2087, bench_125)
Fail to find cup_2087 around bench_125. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(cup_2087, table_123)walk_executor(cup_2087)grab_executor(cup_2087)wash_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(coffe_maker_147)put_executor(cup_2087, coffe_maker_147)
##############################
From agent.py
walk_executor(table_123)
Robot find: mat_114, homework_2011, shoes_2001, mouse_2003, cup_2088, laptop_2015, fork_2103, cup_2087, bowl_2095, Robot is close to the mat_114. Robot is close to the table_123. 
##############################
From agent.py
exp(cup_2087, table_123)
Find cup_2087. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2087)grab_executor(cup_2087)wash_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(coffe_maker_147)put_executor(cup_2087, coffe_maker_147)
##############################
From agent.py
walk_executor(cup_2087)
Robot find: Robot is close to the table_123. Robot is close to the cup_2087. 
##############################
From agent.py
grab_executor(cup_2087)
Robot find: Robot is close to the table_123. Robot is close to the cup_2087. Grabbing cup_2087 by right hand. 
##############################
From agent.py
wash_executor(cup_2087)
Robot find: Robot is close to the table_123. Robot is close to the cup_2087. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the cup_2087. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the cup_2087. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(coffe_maker_147)
Robot find: Robot is close to the cup_2087. Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. 
##############################
From agent.py
put_executor(cup_2087, coffe_maker_147)
Robot find: Robot is close to the cup_2087. Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. coffe_maker_147 is close cup_2087. cup_2087 is close coffe_maker_147. cup_2087 is on coffe_maker_147. cup_2087 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure that the coffee maker is plugged in and that it has water.
##############################
From agent.py
Human Instruction: You need to ensure that the coffee maker is plugged in and that it has water.

The actions you have taken:
Action 1: Walk to coffe_maker_147.
Action 2: Switch on coffe_maker_147.
Action 3: Walk to cupboard_130.
Action 4: look for cup_2087 around cupboard_130.
Action 5: Walk to cupboard_131.
Action 6: Open cupboard_131.
Action 7: look for cup_2087 around cupboard_131.
Action 8: Walk to kitchen_counter_128.
Action 9: look for cup_2087 around kitchen_counter_128.
Action 10: Walk to sink_133.
Action 11: look for cup_2087 around sink_133.
Action 12: Walk to table_127.
Action 13: look for cup_2087 around table_127.
Action 14: Walk to bench_125.
Action 15: look for cup_2087 around bench_125.
Action 16: Walk to table_123.
Action 17: look for cup_2087 around table_123.
Action 18: Walk to cup_2087.
Action 19: Grab cup_2087.
Action 20: Wash cup_2087.
Action 21: Walk to faucet_134.
Action 22: Switch off faucet_134.
Action 23: Walk to coffe_maker_147.
Action 24: Put cup_2087 on coffe_maker_147.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2006_around_microwave_149(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind microwave_instance:item where:
            is_microwave(microwave_instance) and id[microwave_instance]==149
        achieve close_char(char,microwave_instance)
        if can_open(microwave_instance):
            achieve_once open(microwave_instance)
            exp(cup,microwave_instance)
        else:
            exp(cup,microwave_instance)
    eff:
        unknown[cup]=False
        close[cup,microwave_instance]=True
        close[microwave_instance,cup]=True
    

behavior find_coffee_filter_2035_around_wallshelf_301(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==301
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(coffee_filter,wallshelf_instance)
        else:
            exp(coffee_filter,wallshelf_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,wallshelf_instance]=True
        close[wallshelf_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
behavior ensure_coffee_maker_setup(coffee_maker:item, table:item):
    body:
        achieve plugged(coffee_maker)
        # Ensure the coffee maker is plugged in
        achieve is_on(coffee_maker)
        # Ensure the coffee maker is turned on
        achieve on(cup, table)
        # Ensure the cup is on the table

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker
        
        bind cup: item where:
            is_cup(cup)
        # Select the cup to use for coffee
        
        bind table: item where:
            is_table(table)
        # Select a table for placing the cup

        ensure_coffee_maker_setup(coffee_maker, table)
        # Ensure that the coffee maker is correctly set up and the cup is ready

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_video_game_controller_2019_around_console_2027(video_game_controller:item):
    goal: not unknown(video_game_controller)
    body:
        assert is_video_game_controller(video_game_controller)
        bind console_instance:item where:
            is_console(console_instance) and id[console_instance]==2027
        achieve close_char(char,console_instance)
        if can_open(console_instance):
            achieve_once open(console_instance)
            exp(video_game_controller,console_instance)
        else:
            exp(video_game_controller,console_instance)
    eff:
        unknown[video_game_controller]=False
        close[video_game_controller,console_instance]=True
        close[console_instance,video_game_controller]=True
    

behavior find_coffee_filter_2035_around_wallshelf_301(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==301
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(coffee_filter,wallshelf_instance)
        else:
            exp(coffee_filter,wallshelf_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,wallshelf_instance]=True
        close[wallshelf_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation

behavior ensure_coffee_maker_prepared(coffee_maker:item):
    body:
        achieve plugged(coffee_maker)
        achieve has_water(coffee_maker)

behavior make_coffee(coffee_maker:item, cup:item):
    body:
        achieve on(cup, coffee_maker)
        achieve is_on(coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        bind cup: item where:
            is_cup(cup)
        ensure_coffee_maker_prepared(coffee_maker)
        make_coffee(coffee_maker, cup)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_coffee_filter_2035_around_wallshelf_301(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==301
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(coffee_filter,wallshelf_instance)
        else:
            exp(coffee_filter,wallshelf_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,wallshelf_instance]=True
        close[wallshelf_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
behavior ensure_coffee_maker_ready(coffee_maker:item):
    body:
        if not plugged(coffee_maker) or not has_water(coffee_maker):
            observe(coffee_maker, "Ensure that it is plugged in and has water")

behavior place_cup(coffee_maker:item, cup:item):
    body:
        achieve_once on(cup, coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        bind cup: item where:
            is_cup(cup) and id[cup] == 2087
        ensure_coffee_maker_ready(coffee_maker)
        place_cup(coffee_maker, cup)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior ensure_coffee_maker_ready(coffee_maker:item):
    body:
        if not plugged(coffee_maker) or not has_water(coffee_maker):
            observe(coffee_maker, "Ensure that it is plugged in and has water")

behavior place_cup(coffee_maker:item, cup:item):
    body:
        achieve_once on(cup, coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        bind cup: item where:
            is_cup(cup) and id[cup] == 2087
        ensure_coffee_maker_ready(coffee_maker)
        place_cup(coffee_maker, cup)

##############################
From agent.py-> find a plan in act()
switchoff_executor(coffe_maker_147)open_executor(coffe_maker_147)obs(coffe_maker_147, Ensure that it is plugged in and has water)
##############################
From agent.py
switchoff_executor(coffe_maker_147)
Robot find: Robot is close to the cup_2087. Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. coffe_maker_147 is turned off. 
##############################
From agent.py
open_executor(coffe_maker_147)
Robot find: Robot is close to the cup_2087. Robot is close to the kitchen_counter_129. Robot is close to the coffe_maker_147. coffe_maker_147 is opened. 
##############################
From agent.py
obs(coffe_maker_147, Ensure that it is plugged in and has water)
Get this information:  coffe_maker_147 is on kitchen_counter_129. coffe_maker_147 is close to kitchen_counter_129. coffe_maker_147 is close to ceiling_34. coffe_maker_147 is close to cupboard_131. coffe_maker_147 is close to ceiling_33. coffe_maker_147 is close to wall_7. coffe_maker_147 is close to wall_8. coffe_maker_147 is close to walllamp_44. coffe_maker_147 is close to dishwasher_143. coffe_maker_147 is close to toaster_144. coffe_maker_147 is close to floor_21. coffe_maker_147 is close to character_219. coffe_maker_147 is close to cup_2087. cup_2087 is on coffe_maker_147. coffe_maker_147 is inside dining_room_1. coffe_maker_147 is OPEN. coffe_maker_147 is OFF. coffe_maker_147 is PLUGGED_IN. coffe_maker_147 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make a cup of coffee using the coffee maker.
Action History:
['walk_executor(coffe_maker_147)', 'switchon_executor(coffe_maker_147)', 'walk_executor(cupboard_130)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(kitchen_counter_128)', 'walk_executor(sink_133)', 'walk_executor(table_127)', 'walk_executor(bench_125)', 'walk_executor(table_123)', 'walk_executor(cup_2087)', 'grab_executor(cup_2087)', 'wash_executor(cup_2087)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(coffe_maker_147)', 'put_executor(cup_2087, coffe_maker_147)', 'switchoff_executor(coffe_maker_147)', 'open_executor(coffe_maker_147)']
Time info:
Time consume: 131 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 4
goal correct times: 0
action_num: 19

Task complete rate:
Keystate: k1 - Requires: 4 steps
Action Completion Rate: No actions required
Scene_id: 2
##############################
