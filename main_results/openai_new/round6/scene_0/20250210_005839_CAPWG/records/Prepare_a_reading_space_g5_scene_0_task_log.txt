From agent.py
Reset goals: The sub-goals are: 
['1. Find the spectacles and put them on the coffee table in the home office.', '2. Find the book and put it on the coffee table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_spectacles_2082_around_desk_357(spectacles:item):
    goal: not unknown(spectacles)
    body:
        assert is_spectacles(spectacles)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==357
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(spectacles,desk_instance)
        else:
            exp(spectacles,desk_instance)
    eff:
        unknown[spectacles]=False
        close[spectacles,desk_instance]=True
        close[desk_instance,spectacles]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_place_spectacles(spectacles:item, coffee_table:item, home_office:item):
    body:
        if not on(spectacles, coffee_table):
            if not close_char(char, spectacles):
                walk_to(spectacles)
            if grabbable(spectacles) and has_a_free_hand(char):
                grab(spectacles)
            if not close_char(char, coffee_table):
                walk_to(coffee_table)
            if surfaces(coffee_table):
                put_on(spectacles, coffee_table)

behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles)
        bind coffee_table: item where:
            is_coffee_table(coffee_table) 
        bind home_office: item where:
            is_home_office(home_office)
        find_and_place_spectacles(spectacles, coffee_table, home_office)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_and_place_spectacles(spectacles:item, coffee_table:item, home_office:item):
    body:
        if not on(spectacles, coffee_table):
            if not close_char(char, spectacles):
                walk_to(spectacles)
            if grabbable(spectacles) and has_a_free_hand(char):
                grab(spectacles)
            if not close_char(char, coffee_table):
                walk_to(coffee_table)
            if surfaces(coffee_table):
                put_on(spectacles, coffee_table)

behavior __goal__():
    body:
        bind spectacles: item where:
            is_spectacles(spectacles)
        bind coffee_table: item where:
            is_coffee_table(coffee_table) 
        bind home_office: item where:
            is_home_office(home_office)
        find_and_place_spectacles(spectacles, coffee_table, home_office)

##############################
From agent.py-> find a plan in act()
walk_executor(desk_357)exp(spectacles_2082, desk_357)walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(coffee_table_2068)put_executor(spectacles_2082, coffee_table_2068)
##############################
From agent.py
walk_executor(desk_357)
Robot find: keyboard_415, headset_2076, chair_356, phone_2077, mouse_413, pencil_2001, Robot is close to the desk_357. 
##############################
From agent.py
exp(spectacles_2082, desk_357)
Fail to find spectacles_2082 around desk_357. 
##############################
From agent.py-> find a plan in act()
walk_executor(desk_104)exp(spectacles_2082, desk_104)walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(coffee_table_2068)put_executor(spectacles_2082, coffee_table_2068)
##############################
From agent.py
walk_executor(desk_104)
Robot find: mouse_166, keyboard_168, drawing_175, chair_103, Robot is close to the desk_104. 
##############################
From agent.py
exp(spectacles_2082, desk_104)
Fail to find spectacles_2082 around desk_104. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_107)exp(spectacles_2082, table_107)walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(coffee_table_2068)put_executor(spectacles_2082, coffee_table_2068)
##############################
From agent.py
walk_executor(table_107)
Robot find: mat_173, clothes_hat_2045, clothes_gloves_2046, drawing_176, drawing_174, Robot is close to the table_107. 
##############################
From agent.py
exp(spectacles_2082, table_107)
Fail to find spectacles_2082 around table_107. 
##############################
From agent.py-> find a plan in act()
walk_executor(phone_2077)exp(spectacles_2082, phone_2077)walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(coffee_table_2068)put_executor(spectacles_2082, coffee_table_2068)
##############################
From agent.py
walk_executor(phone_2077)
Robot find: Robot is close to the desk_357. Robot is close to the phone_2077. 
##############################
From agent.py
exp(spectacles_2082, phone_2077)
Fail to find spectacles_2082 around phone_2077. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_355)exp(spectacles_2082, table_355)walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(coffee_table_2068)put_executor(spectacles_2082, coffee_table_2068)
##############################
From agent.py
walk_executor(table_355)
Robot find: mat_401, headset_2062, spectacles_2082, pillow_406, remote_control_2052, clothes_jacket_2047, pillow_405, cat_2055, drawing_400, drawing_404, hairbrush_2002, vacuum_cleaner_2070, Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. 
##############################
From agent.py
exp(spectacles_2082, table_355)
Find spectacles_2082. 
##############################
From agent.py-> find a plan in act()
walk_executor(spectacles_2082)grab_executor(spectacles_2082)walk_executor(coffee_table_2068)put_executor(spectacles_2082, coffee_table_2068)
##############################
From agent.py
walk_executor(spectacles_2082)
Robot find: Robot is close to the table_355. Robot is close to the spectacles_2082. 
##############################
From agent.py
grab_executor(spectacles_2082)
Robot find: Robot is close to the table_355. Robot is close to the spectacles_2082. Grabbing spectacles_2082 by right hand. 
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot find: Robot is close to the spectacles_2082. Robot is close to the coffee_table_2068. 
##############################
From agent.py
put_executor(spectacles_2082, coffee_table_2068)
Robot find: Robot is close to the spectacles_2082. Robot is close to the coffee_table_2068. coffee_table_2068 is close spectacles_2082. spectacles_2082 is close coffee_table_2068. spectacles_2082 is on coffee_table_2068. spectacles_2082 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2066_around_bookshelf_101(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==101
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_book(book:item):
    body:
        if not close_char(char, book):
            walk_to(book)
            grab(book)

behavior place_on_coffee_table(book:item, coffee_table:item):
    body:
        if inhand(book):
            put_on(book, coffee_table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        bind coffee_table: item where:
            is_coffee_table(coffee_table) and inside(coffee_table, home_office)
        find_book(book)
        place_on_coffee_table(book, coffee_table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2066_around_bookshelf_101(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==101
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
def is_in_home_office(item: item):
    # Function to check if an item is in the home office
    symbol in_home_office = exists room: item : (is_home_office(room) and inside(item, room))
    return in_home_office

def is_on_coffee_table(item: item):
    # Function to check if an item is on the coffee table
    symbol on_coffee_table = exists coffee_table: item : (is_coffee_table(coffee_table) and on(item, coffee_table))
    return on_coffee_table

behavior find_and_place_book(book: item, coffee_table: item):
    body:
        if not inhand(book):
            grab(book)
            # Grab the book
        if not is_on_coffee_table(book):
            put_on(book, coffee_table)
            # Place the book on the coffee table

behavior __goal__():
    body:
        bind coffee_table: item where:
            is_coffee_table(coffee_table) and is_in_home_office(coffee_table)
        # Select the coffee table in the home office
        
        bind book: item where:
            is_book(book) and not visited(book)
        # Select the unvisited book
        
        find_and_place_book(book, coffee_table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_in_home_office(item: item):
    # Function to check if an item is in the home office
    symbol in_home_office = exists room: item : (is_home_office(room) and inside(item, room))
    return in_home_office

def is_on_coffee_table(item: item):
    # Function to check if an item is on the coffee table
    symbol on_coffee_table = exists coffee_table: item : (is_coffee_table(coffee_table) and on(item, coffee_table))
    return on_coffee_table

behavior find_and_place_book(book: item, coffee_table: item):
    body:
        if not inhand(book):
            grab(book)
            # Grab the book
        if not is_on_coffee_table(book):
            put_on(book, coffee_table)
            # Place the book on the coffee table

behavior __goal__():
    body:
        bind coffee_table: item where:
            is_coffee_table(coffee_table) and is_in_home_office(coffee_table)
        # Select the coffee table in the home office
        
        bind book: item where:
            is_book(book) and not visited(book)
        # Select the unvisited book
        
        find_and_place_book(book, coffee_table)

##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_101)open_executor(bookshelf_101)exp(book_2066, bookshelf_101)walk_executor(book_2066)grab_executor(book_2066)walk_executor(coffee_table_2068)put_executor(book_2066, coffee_table_2068)
##############################
From agent.py
walk_executor(bookshelf_101)
Robot find: Robot is close to the bookshelf_101. 
##############################
From agent.py
open_executor(bookshelf_101)
Robot find: Robot is close to the photoframe_185. Robot is close to the bookshelf_101. bookshelf_101 is opened. 
##############################
From agent.py
exp(book_2066, bookshelf_101)
Fail to find book_2066 around bookshelf_101. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_354)open_executor(bookshelf_354)exp(book_2066, bookshelf_354)walk_executor(book_2066)grab_executor(book_2066)walk_executor(coffee_table_2068)put_executor(book_2066, coffee_table_2068)
##############################
From agent.py
walk_executor(bookshelf_354)
Robot find: drawing_402, drawing_403, book_2066, book_2067, Robot is close to the bookshelf_354. 
##############################
From agent.py
open_executor(bookshelf_354)
Robot find: Robot is close to the bookshelf_354. Robot is close to the photoframe_430. bookshelf_354 is opened. 
##############################
From agent.py
exp(book_2066, bookshelf_354)
Find book_2066. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2066)grab_executor(book_2066)walk_executor(coffee_table_2068)put_executor(book_2066, coffee_table_2068)
##############################
From agent.py
walk_executor(book_2066)
Robot find: Robot is close to the bookshelf_354. Robot is close to the book_2066. 
##############################
From agent.py
grab_executor(book_2066)
Robot find: Robot is close to the bookshelf_354. Robot is close to the book_2066. Grabbing book_2066 by right hand. 
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot find: Robot is close to the book_2066. Robot is close to the coffee_table_2068. 
##############################
From agent.py
put_executor(book_2066, coffee_table_2068)
Robot find: Robot is close to the book_2066. Robot is close to the coffee_table_2068. coffee_table_2068 is close book_2066. book_2066 is close coffee_table_2068. book_2066 is on coffee_table_2068. book_2066 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Find my spectacles and put it on the coffe table in home office. Then find the book and put it on the coffe table in home office.
Action History:
['walk_executor(desk_357)', 'walk_executor(desk_104)', 'walk_executor(table_107)', 'walk_executor(phone_2077)', 'walk_executor(table_355)', 'walk_executor(spectacles_2082)', 'grab_executor(spectacles_2082)', 'walk_executor(coffee_table_2068)', 'put_executor(spectacles_2082, coffee_table_2068)', 'walk_executor(bookshelf_101)', 'open_executor(bookshelf_101)', 'walk_executor(bookshelf_354)', 'open_executor(bookshelf_354)', 'walk_executor(book_2066)', 'grab_executor(book_2066)', 'walk_executor(coffee_table_2068)', 'put_executor(book_2066, coffee_table_2068)']
Time info:
Time consume: 102 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 3
goal correct times: 0
action_num: 17

Task complete rate:
Keystate: k1 - Requires: 8 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
