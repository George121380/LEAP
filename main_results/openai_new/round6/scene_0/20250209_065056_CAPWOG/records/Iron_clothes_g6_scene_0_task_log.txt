From agent.py
Reset goals: The sub-goals are: 
['1. Find the shirt and the skirt that need to be ironed.', '2. Iron the shirt and the skirt.', '3. Place the ironed shirt and skirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_skirt_2088_around_basket_for_clothes_2006(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

behavior find_clothes_shirt_2086_around_closetdrawer_146(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==146
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothing_item(item:item):
    # Function to check if an item is clothing, specifically a shirt or a skirt
    return is_clothes_shirt(item) or is_clothes_skirt(item)

def find_needed_clothes(item:item):
    # Check if the item is clothing and needs to be ironed
    return is_clothing_item(item) and not visited(item)

behavior search_clothes():
    body:
        foreach item: item:
            if find_needed_clothes(item):
                observe(item, "Is this the shirt or skirt that needs to be ironed")
                # Observe each unvisited clothing item to find the shirt and skirt

behavior __goal__():
    body:
        search_clothes()

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_clothing_item(item:item):
    # Function to check if an item is clothing, specifically a shirt or a skirt
    return is_clothes_shirt(item) or is_clothes_skirt(item)

def find_needed_clothes(item:item):
    # Check if the item is clothing and needs to be ironed
    return is_clothing_item(item) and not visited(item)

behavior search_clothes():
    body:
        foreach item: item:
            if find_needed_clothes(item):
                observe(item, "Is this the shirt or skirt that needs to be ironed")
                # Observe each unvisited clothing item to find the shirt and skirt

behavior __goal__():
    body:
        search_clothes()

##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_146)exp(clothes_shirt_2086, closetdrawer_146)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Is this the shirt or skirt that needs to be ironed)walk_executor(basket_for_clothes_2006)exp(clothes_skirt_2088, basket_for_clothes_2006)walk_executor(clothes_skirt_2088)obs(clothes_skirt_2088, Is this the shirt or skirt that needs to be ironed)
##############################
From agent.py
walk_executor(closetdrawer_146)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_146)
Fail to find clothes_shirt_2086 around closetdrawer_146. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_146)exp(clothes_shirt_2086, closetdrawer_146)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Is this the shirt or skirt that needs to be ironed)walk_executor(closetdrawer_146)exp(clothes_skirt_2088, closetdrawer_146)walk_executor(clothes_skirt_2088)obs(clothes_skirt_2088, Is this the shirt or skirt that needs to be ironed)
##############################
From agent.py
walk_executor(closetdrawer_146)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_146)
Fail to find clothes_shirt_2086 around closetdrawer_146. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_146)exp(clothes_shirt_2086, closetdrawer_146)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Is this the shirt or skirt that needs to be ironed)walk_executor(closetdrawer_146)exp(clothes_skirt_2088, closetdrawer_146)walk_executor(clothes_skirt_2088)obs(clothes_skirt_2088, Is this the shirt or skirt that needs to be ironed)
##############################
From agent.py
walk_executor(closetdrawer_146)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_146)
Fail to find clothes_shirt_2086 around closetdrawer_146. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_146)exp(clothes_shirt_2086, closetdrawer_146)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Is this the shirt or skirt that needs to be ironed)walk_executor(closetdrawer_146)exp(clothes_skirt_2088, closetdrawer_146)walk_executor(clothes_skirt_2088)obs(clothes_skirt_2088, Is this the shirt or skirt that needs to be ironed)
##############################
From agent.py
walk_executor(closetdrawer_146)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_146)
Fail to find clothes_shirt_2086 around closetdrawer_146. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_146)exp(clothes_shirt_2086, closetdrawer_146)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Is this the shirt or skirt that needs to be ironed)walk_executor(closetdrawer_146)exp(clothes_skirt_2088, closetdrawer_146)walk_executor(clothes_skirt_2088)obs(clothes_skirt_2088, Is this the shirt or skirt that needs to be ironed)
##############################
From agent.py
walk_executor(closetdrawer_146)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_146)
Fail to find clothes_shirt_2086 around closetdrawer_146. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_146)exp(clothes_shirt_2086, closetdrawer_146)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Is this the shirt or skirt that needs to be ironed)walk_executor(closetdrawer_146)exp(clothes_skirt_2088, closetdrawer_146)walk_executor(clothes_skirt_2088)obs(clothes_skirt_2088, Is this the shirt or skirt that needs to be ironed)
##############################
From agent.py
walk_executor(closetdrawer_146)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2086 ?
Answer: Robot, go to bathroom_1. Look for basket_for_clothes_2006; the target object, clothes_shirt_2086, is inside this basket.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, go to bathroom_1. Look for basket_for_clothes_2006; the target object, clothes_shirt_2086, is inside this basket.

The actions you have taken:
Action 1: Walk to closetdrawer_146.
Action 2: look for clothes_shirt_2086 around closetdrawer_146.
Action 3: Walk to closetdrawer_146.
Action 4: look for clothes_shirt_2086 around closetdrawer_146.
Action 5: Walk to closetdrawer_146.
Action 6: look for clothes_shirt_2086 around closetdrawer_146.
Action 7: Walk to closetdrawer_146.
Action 8: look for clothes_shirt_2086 around closetdrawer_146.
Action 9: Walk to closetdrawer_146.
Action 10: look for clothes_shirt_2086 around closetdrawer_146.
Action 11: Walk to closetdrawer_146.

##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_146)
Fail to find clothes_shirt_2086 around closetdrawer_146. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)exp(clothes_shirt_2086, basket_for_clothes_2006)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Is this the shirt or skirt that needs to be ironed)walk_executor(basket_for_clothes_2006)exp(clothes_skirt_2088, basket_for_clothes_2006)walk_executor(clothes_skirt_2088)obs(clothes_skirt_2088, Is this the shirt or skirt that needs to be ironed)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Robot find: clothes_pants_2085, clothes_shirt_2086, clothes_socks_2087, clothes_skirt_2088, towel_rack_31, towel_rack_33, towel_rack_32, towel_rack_34, mat_22, Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
exp(clothes_shirt_2086, basket_for_clothes_2006)
Find clothes_shirt_2086. 
##############################
From agent.py-> find a plan in act()
obs(clothes_shirt_2086, Is this the shirt or skirt that needs to be ironed)obs(clothes_skirt_2088, Is this the shirt or skirt that needs to be ironed)
##############################
From agent.py
obs(clothes_shirt_2086, Is this the shirt or skirt that needs to be ironed)
Get this information:  clothes_shirt_2086 is close to basket_for_clothes_2006. clothes_shirt_2086 is close to character_65. clothes_shirt_2086 is inside bathroom_1. clothes_shirt_2086 is inside basket_for_clothes_2006. clothes_shirt_2086 is DIRTY.
##############################
From agent.py
obs(clothes_skirt_2088, Is this the shirt or skirt that needs to be ironed)
Get this information:  clothes_skirt_2088 is close to basket_for_clothes_2006. clothes_skirt_2088 is close to character_65. clothes_skirt_2088 is inside bathroom_1. clothes_skirt_2088 is inside basket_for_clothes_2006. clothes_skirt_2088 is DIRTY.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior switch_on_if_off(iron:item):
    body:
        if is_off(iron):
            switch_on(iron)

behavior plug_in_if_unplugged(iron:item):
    body:
        if unplugged(iron):
            plugin(iron)

behavior iron_clothes_with_iron(shirt:item, skirt:item, iron:item):
    body:
        plug_in_if_unplugged(iron)
        switch_on_if_off(iron)
        if not clean(shirt):
            observe(shirt, "Check if shirt is clean before ironing")
            touch(shirt)
        if not clean(skirt):
            observe(skirt, "Check if skirt is clean before ironing")
            touch(skirt)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind iron: item where:
            is_iron(iron)
        iron_clothes_with_iron(shirt, skirt, iron)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior switch_on_if_off(iron:item):
    body:
        if is_off(iron):
            switch_on(iron)

behavior plug_in_if_unplugged(iron:item):
    body:
        if unplugged(iron):
            plugin(iron)

behavior iron_clothes_with_iron(shirt:item, skirt:item, iron:item):
    body:
        plug_in_if_unplugged(iron)
        switch_on_if_off(iron)
        if not clean(shirt):
            observe(shirt, "Check if shirt is clean before ironing")
            touch(shirt)
        if not clean(skirt):
            observe(skirt, "Check if skirt is clean before ironing")
            touch(skirt)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind iron: item where:
            is_iron(iron)
        iron_clothes_with_iron(shirt, skirt, iron)

##############################
From agent.py-> find a plan in act()
obs(clothes_shirt_2086, Check if shirt is clean before ironing)touch_executor(clothes_shirt_2086)obs(clothes_skirt_2088, Check if skirt is clean before ironing)touch_executor(clothes_skirt_2088)
##############################
From agent.py
obs(clothes_shirt_2086, Check if shirt is clean before ironing)
Get this information:  clothes_shirt_2086 is close to basket_for_clothes_2006. clothes_shirt_2086 is close to character_65. clothes_shirt_2086 is inside bathroom_1. clothes_shirt_2086 is inside basket_for_clothes_2006. clothes_shirt_2086 is DIRTY.
##############################
From agent.py
touch_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
obs(clothes_skirt_2088, Check if skirt is clean before ironing)
Get this information:  clothes_skirt_2088 is close to basket_for_clothes_2006. clothes_skirt_2088 is close to character_65. clothes_skirt_2088 is inside bathroom_1. clothes_skirt_2088 is inside basket_for_clothes_2006. clothes_skirt_2088 is DIRTY.
##############################
From agent.py
touch_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to actually perform the ironing of the shirt and the skirt. The actions required include plugging in and switching on the iron, and possibly cleaning the clothes if they are dirty before ironing.
##############################
From agent.py
Human Instruction: The robot needs to actually perform the ironing of the shirt and the skirt. The actions required include plugging in and switching on the iron, and possibly cleaning the clothes if they are dirty before ironing.

The actions you have taken:
Action 1: Walk to closetdrawer_146.
Action 2: look for clothes_shirt_2086 around closetdrawer_146.
Action 3: Walk to closetdrawer_146.
Action 4: look for clothes_shirt_2086 around closetdrawer_146.
Action 5: Walk to closetdrawer_146.
Action 6: look for clothes_shirt_2086 around closetdrawer_146.
Action 7: Walk to closetdrawer_146.
Action 8: look for clothes_shirt_2086 around closetdrawer_146.
Action 9: Walk to closetdrawer_146.
Action 10: look for clothes_shirt_2086 around closetdrawer_146.
Action 11: Walk to closetdrawer_146.
Action 12: look for clothes_shirt_2086 around closetdrawer_146.
Action 13: Walk to basket_for_clothes_2006.
Action 14: look for clothes_shirt_2086 around basket_for_clothes_2006.
Action 15: Observe around clothes_shirt_2086 with the question of Is this the shirt or skirt that needs to be ironed.
Action 16: Observe around clothes_skirt_2088 with the question of Is this the shirt or skirt that needs to be ironed.
Action 17: Observe around clothes_shirt_2086 with the question of Check if shirt is clean before ironing.
Action 18: Touch clothes_shirt_2086.
Action 19: Observe around clothes_skirt_2088 with the question of Check if skirt is clean before ironing.
Action 20: Touch clothes_skirt_2088.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2073_around_bathtub_30(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathtub_instance:item where:
            is_bathtub(bathtub_instance) and id[bathtub_instance]==30
        achieve close_char(char,bathtub_instance)
        if can_open(bathtub_instance):
            achieve_once open(bathtub_instance)
            exp(cleaning_solution,bathtub_instance)
        else:
            exp(cleaning_solution,bathtub_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathtub_instance]=True
        close[bathtub_instance,cleaning_solution]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
def is_clean_and_grabbable(x: item):
    # Function to check if an item is clean and grabbable
    return clean(x) and grabbable(x)

behavior clean_clothes(clothes:item): 
    body:
        if dirty(clothes):
            wash(clothes)
            # Wash the clothes if they are dirty

behavior prepare_iron(iron:item): 
    body:
        if unplugged(iron):
            plugin(iron)
            # Plug in the iron if it is unplugged
        if is_off(iron):
            switch_on(iron)
            # Switch on the iron if it is off

behavior iron_clothes(clothes:item, iron:item): 
    body:
        if is_clean_and_grabbable(clothes):
            grab(clothes)
            if has_a_free_hand(char):
                grab(iron)
            if close(iron, clothes):
                touch(iron)
                empty_a_hand()
                empty_a_hand()

behavior __goal__(): 
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt for ironing
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt for ironing
        foreach clothes: item:
            if clothes == shirt or clothes == skirt:
                clean_clothes(clothes)
                # Clean clothes if necessary
        bind iron: item where:
            is_iron(iron)
        # Select the iron for ironing clothes
        prepare_iron(iron)
        # Prepare the iron for use
        foreach clothes: item:
            if clothes == shirt or clothes == skirt:
                iron_clothes(clothes, iron)
                # Iron the shirt and skirt

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_clean_and_grabbable(x: item):
    # Function to check if an item is clean and grabbable
    return clean(x) and grabbable(x)

behavior clean_clothes(clothes:item): 
    body:
        if dirty(clothes):
            wash(clothes)
            # Wash the clothes if they are dirty

behavior prepare_iron(iron:item): 
    body:
        if unplugged(iron):
            plugin(iron)
            # Plug in the iron if it is unplugged
        if is_off(iron):
            switch_on(iron)
            # Switch on the iron if it is off

behavior iron_clothes(clothes:item, iron:item): 
    body:
        if is_clean_and_grabbable(clothes):
            grab(clothes)
            if has_a_free_hand(char):
                grab(iron)
            if close(iron, clothes):
                touch(iron)
                empty_a_hand()
                empty_a_hand()

behavior __goal__(): 
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt for ironing
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt for ironing
        foreach clothes: item:
            if clothes == shirt or clothes == skirt:
                clean_clothes(clothes)
                # Clean clothes if necessary
        bind iron: item where:
            is_iron(iron)
        # Select the iron for ironing clothes
        prepare_iron(iron)
        # Prepare the iron for use
        foreach clothes: item:
            if clothes == shirt or clothes == skirt:
                iron_clothes(clothes, iron)
                # Iron the shirt and skirt

##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2086)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_shirt_2086)switchoff_executor(faucet_43)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(kitchen_counter_230)put_executor(clothes_shirt_2086, kitchen_counter_230)switchon_executor(faucet_232)wash_executor(clothes_skirt_2088)switchoff_executor(faucet_232)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)grab_executor(iron_2089)walk_executor(kitchen_counter_230)put_executor(clothes_skirt_2088, kitchen_counter_230)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
wash_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. clothes_shirt_2086 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py
walk_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
grab_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. Grabbing clothes_skirt_2088 by left hand. 
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the clothes_shirt_2086. Robot is close to the clothes_skirt_2088. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
put_executor(clothes_shirt_2086, kitchen_counter_230)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the clothes_skirt_2088. Robot is close to the kitchen_counter_230. kitchen_counter_230 is close clothes_shirt_2086. clothes_shirt_2086 is close kitchen_counter_230. clothes_shirt_2086 is on kitchen_counter_230. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
switchon_executor(faucet_232)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the clothes_skirt_2088. Robot is close to the kitchen_counter_230. faucet_232 is turned on. 
##############################
From agent.py
wash_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the clothes_skirt_2088. Robot is close to the kitchen_counter_230. clothes_skirt_2088 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_232)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the clothes_skirt_2088. Robot is close to the kitchen_counter_230. faucet_232 is turned off. 
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the clothes_skirt_2088. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the clothes_skirt_2088. Robot is close to the kitchen_counter_230. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: iron_2089, Robot is close to the clothes_shirt_2086. Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. 
##############################
From agent.py
exp(iron_2089, ironing_board_2074)
Find iron_2089. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)put_executor(clothes_shirt_2086, kitchen_counter_230)walk_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(kitchen_counter_230)put_executor(clothes_shirt_2086, kitchen_counter_230)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the clothes_skirt_2088. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
put_executor(clothes_shirt_2086, kitchen_counter_230)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the clothes_skirt_2088. Robot is close to the kitchen_counter_230. clothes_shirt_2086 is close kitchen_counter_230. clothes_shirt_2086 is on kitchen_counter_230. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
walk_executor(iron_2089)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the iron_2089. Robot is close to the ironing_board_2074. 
##############################
From agent.py
plugin_executor(iron_2089)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the iron_2089. Robot is close to the ironing_board_2074. iron_2089 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2089)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the iron_2089. Robot is close to the ironing_board_2074. iron_2089 is turned on. 
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the clothes_shirt_2086. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the clothes_shirt_2086. Robot is close to the kitchen_counter_230. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the clothes_shirt_2086. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
put_executor(clothes_shirt_2086, kitchen_counter_230)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the clothes_shirt_2086. Robot is close to the kitchen_counter_230. clothes_shirt_2086 is close kitchen_counter_230. clothes_shirt_2086 is on kitchen_counter_230. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. 
##############################
From agent.py
grab_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Grabbing clothes_skirt_2088 by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to iron the shirt and the skirt. Although you cleaned both garments and prepared the iron by plugging it in and switching it on, you have not performed the actual ironing of the shirt or the skirt.
##############################
From agent.py
Human Instruction: You need to iron the shirt and the skirt. Although you cleaned both garments and prepared the iron by plugging it in and switching it on, you have not performed the actual ironing of the shirt or the skirt.

The actions you have taken:
Action 1: Walk to closetdrawer_146.
Action 2: look for clothes_shirt_2086 around closetdrawer_146.
Action 3: Walk to closetdrawer_146.
Action 4: look for clothes_shirt_2086 around closetdrawer_146.
Action 5: Walk to closetdrawer_146.
Action 6: look for clothes_shirt_2086 around closetdrawer_146.
Action 7: Walk to closetdrawer_146.
Action 8: look for clothes_shirt_2086 around closetdrawer_146.
Action 9: Walk to closetdrawer_146.
Action 10: look for clothes_shirt_2086 around closetdrawer_146.
Action 11: Walk to closetdrawer_146.
Action 12: look for clothes_shirt_2086 around closetdrawer_146.
Action 13: Walk to basket_for_clothes_2006.
Action 14: look for clothes_shirt_2086 around basket_for_clothes_2006.
Action 15: Observe around clothes_shirt_2086 with the question of Is this the shirt or skirt that needs to be ironed.
Action 16: Observe around clothes_skirt_2088 with the question of Is this the shirt or skirt that needs to be ironed.
Action 17: Observe around clothes_shirt_2086 with the question of Check if shirt is clean before ironing.
Action 18: Touch clothes_shirt_2086.
Action 19: Observe around clothes_skirt_2088 with the question of Check if skirt is clean before ironing.
Action 20: Touch clothes_skirt_2088.
Action 21: Grab clothes_shirt_2086.
Action 22: Walk to faucet_43.
Action 23: Switch on faucet_43.
Action 24: Wash clothes_shirt_2086.
Action 25: Switch off faucet_43.
Action 26: Walk to clothes_skirt_2088.
Action 27: Grab clothes_skirt_2088.
Action 28: Walk to kitchen_counter_230.
Action 29: Put clothes_shirt_2086 on kitchen_counter_230.
Action 30: Switch on faucet_232.
Action 31: Wash clothes_skirt_2088.
Action 32: Switch off faucet_232.
Action 33: Walk to clothes_shirt_2086.
Action 34: Grab clothes_shirt_2086.
Action 35: Walk to ironing_board_2074.
Action 36: look for iron_2089 around ironing_board_2074.
Action 37: Walk to kitchen_counter_230.
Action 38: Put clothes_shirt_2086 on kitchen_counter_230.
Action 39: Walk to iron_2089.
Action 40: Plug in iron_2089.
Action 41: Switch on iron_2089.
Action 42: Walk to clothes_shirt_2086.
Action 43: Grab clothes_shirt_2086.
Action 44: Walk to kitchen_counter_230.
Action 45: Put clothes_shirt_2086 on kitchen_counter_230.
Action 46: Walk to clothes_skirt_2088.
Action 47: Grab clothes_skirt_2088.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2047_around_closetdrawer_146(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==146
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

behavior find_clothes_scarf_2048_around_closetdrawer_146(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==146
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_scarf,closetdrawer_instance)
        else:
            exp(clothes_scarf,closetdrawer_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_scarf]=True
    

behavior find_clothes_gloves_2046_around_closetdrawer_146(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==146
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_gloves,closetdrawer_instance)
        else:
            exp(clothes_gloves,closetdrawer_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(clothes:item, iron:item, ironing_board:item):
    body:
        if not inhand(clothes):
            grab(clothes)
            walk_to(ironing_board)
            put_on(clothes, ironing_board)
        if not is_on(iron):
            switch_on(iron)
        # Ironing process itself is assumed to take place successfully here

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt
        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron, ensure it is plugged in and on
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        iron_clothes(shirt, iron, ironing_board)
        iron_clothes(skirt, iron, ironing_board)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_clothes(clothes:item, iron:item, ironing_board:item):
    body:
        if not inhand(clothes):
            grab(clothes)
            walk_to(ironing_board)
            put_on(clothes, ironing_board)
        if not is_on(iron):
            switch_on(iron)
        # Ironing process itself is assumed to take place successfully here

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt
        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron, ensure it is plugged in and on
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        iron_clothes(shirt, iron, ironing_board)
        iron_clothes(skirt, iron, ironing_board)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)put_executor(clothes_skirt_2088, kitchen_counter_230)grab_executor(clothes_shirt_2086)walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(ironing_board_2074)put_executor(clothes_skirt_2088, ironing_board_2074)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
put_executor(clothes_skirt_2088, kitchen_counter_230)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the kitchen_counter_230. kitchen_counter_230 is close clothes_skirt_2088. clothes_skirt_2088 is close kitchen_counter_230. clothes_skirt_2088 is on kitchen_counter_230. clothes_skirt_2088 released by left hand. clothes_skirt_2088 released by right hand. 
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the kitchen_counter_230. Robot is close to the clothes_shirt_2086. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the ironing_board_2074. 
##############################
From agent.py
put_executor(clothes_shirt_2086, ironing_board_2074)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the ironing_board_2074. ironing_board_2074 is close clothes_shirt_2086. clothes_shirt_2086 is close ironing_board_2074. clothes_shirt_2086 is on ironing_board_2074. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
grab_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the kitchen_counter_230. Grabbing clothes_skirt_2088 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. 
##############################
From agent.py
put_executor(clothes_skirt_2088, ironing_board_2074)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. ironing_board_2074 is close clothes_skirt_2088. clothes_skirt_2088 is close ironing_board_2074. clothes_skirt_2088 is on ironing_board_2074. clothes_skirt_2088 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to perform the actual ironing of both the shirt and the skirt. Although the garments are placed on the ironing board and the iron is plugged in and switched on, the ironing process itself has not been executed.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_405_around_coffee_table_2068(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind coffee_table_instance:item where:
            is_coffee_table(coffee_table_instance) and id[coffee_table_instance]==2068
        achieve close_char(char,coffee_table_instance)
        if can_open(coffee_table_instance):
            achieve_once open(coffee_table_instance)
            exp(pillow,coffee_table_instance)
        else:
            exp(pillow,coffee_table_instance)
    eff:
        unknown[pillow]=False
        close[pillow,coffee_table_instance]=True
        close[coffee_table_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior grab_ironed_clothes_and_place_on_bed(clothes_shirt:item, clothes_skirt:item, bed:item):
    body:
        if not inhand(clothes_shirt):
            grab(clothes_shirt)
        if not on(clothes_shirt, bed):
            walk_to(bed)
            put_on(clothes_shirt, bed)
        if not inhand(clothes_skirt):
            grab(clothes_skirt)
        if not on(clothes_skirt, bed):
            walk_to(bed)
            put_on(clothes_skirt, bed)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and clean(clothes_shirt)

        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt) and clean(clothes_skirt)

        bind bed: item where:
            is_bed(bed)

        grab_ironed_clothes_and_place_on_bed(clothes_shirt, clothes_skirt, bed)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior grab_ironed_clothes_and_place_on_bed(clothes_shirt:item, clothes_skirt:item, bed:item):
    body:
        if not inhand(clothes_shirt):
            grab(clothes_shirt)
        if not on(clothes_shirt, bed):
            walk_to(bed)
            put_on(clothes_shirt, bed)
        if not inhand(clothes_skirt):
            grab(clothes_skirt)
        if not on(clothes_skirt, bed):
            walk_to(bed)
            put_on(clothes_skirt, bed)

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and clean(clothes_shirt)

        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt) and clean(clothes_skirt)

        bind bed: item where:
            is_bed(bed)

        grab_ironed_clothes_and_place_on_bed(clothes_shirt, clothes_skirt, bed)

##############################
From agent.py-> find a plan in act()
walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(bed_105)put_executor(clothes_shirt_2086, bed_105)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(bed_105)put_executor(clothes_skirt_2088, bed_105)
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the clothes_shirt_2086. 
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the clothes_shirt_2086. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(bed_105)
Robot find: mat_173, drawing_176, pillow_183, clothes_underwear_2049, clothes_dress_2044, pillow_182, chair_106, clothes_scarf_2048, Robot is close to the clothes_shirt_2086. Robot is close to the bed_105. Robot is close to the mat_173. 
##############################
From agent.py
put_executor(clothes_shirt_2086, bed_105)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the bed_105. Robot is close to the mat_173. bed_105 is close clothes_shirt_2086. clothes_shirt_2086 is close bed_105. clothes_shirt_2086 is on bed_105. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. 
##############################
From agent.py
grab_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. Grabbing clothes_skirt_2088 by right hand. 
##############################
From agent.py
walk_executor(bed_105)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the bed_105. Robot is close to the mat_173. 
##############################
From agent.py
put_executor(clothes_skirt_2088, bed_105)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the bed_105. Robot is close to the mat_173. bed_105 is close clothes_skirt_2088. clothes_skirt_2088 is close bed_105. clothes_skirt_2088 is on bed_105. clothes_skirt_2088 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to iron the shirt and the skirt. Although you cleaned both garments and prepared the iron by plugging it in and switching it on, you have not performed the actual ironing of the shirt or the skirt. After ironing, place the ironed shirt and skirt on the bed.
##############################
From agent.py
Human Instruction: You need to iron the shirt and the skirt. Although you cleaned both garments and prepared the iron by plugging it in and switching it on, you have not performed the actual ironing of the shirt or the skirt. After ironing, place the ironed shirt and skirt on the bed.

The actions you have taken:
Action 1: Walk to closetdrawer_146.
Action 2: look for clothes_shirt_2086 around closetdrawer_146.
Action 3: Walk to closetdrawer_146.
Action 4: look for clothes_shirt_2086 around closetdrawer_146.
Action 5: Walk to closetdrawer_146.
Action 6: look for clothes_shirt_2086 around closetdrawer_146.
Action 7: Walk to closetdrawer_146.
Action 8: look for clothes_shirt_2086 around closetdrawer_146.
Action 9: Walk to closetdrawer_146.
Action 10: look for clothes_shirt_2086 around closetdrawer_146.
Action 11: Walk to closetdrawer_146.
Action 12: look for clothes_shirt_2086 around closetdrawer_146.
Action 13: Walk to basket_for_clothes_2006.
Action 14: look for clothes_shirt_2086 around basket_for_clothes_2006.
Action 15: Observe around clothes_shirt_2086 with the question of Is this the shirt or skirt that needs to be ironed.
Action 16: Observe around clothes_skirt_2088 with the question of Is this the shirt or skirt that needs to be ironed.
Action 17: Observe around clothes_shirt_2086 with the question of Check if shirt is clean before ironing.
Action 18: Touch clothes_shirt_2086.
Action 19: Observe around clothes_skirt_2088 with the question of Check if skirt is clean before ironing.
Action 20: Touch clothes_skirt_2088.
Action 21: Grab clothes_shirt_2086.
Action 22: Walk to faucet_43.
Action 23: Switch on faucet_43.
Action 24: Wash clothes_shirt_2086.
Action 25: Switch off faucet_43.
Action 26: Walk to clothes_skirt_2088.
Action 27: Grab clothes_skirt_2088.
Action 28: Walk to kitchen_counter_230.
Action 29: Put clothes_shirt_2086 on kitchen_counter_230.
Action 30: Switch on faucet_232.
Action 31: Wash clothes_skirt_2088.
Action 32: Switch off faucet_232.
Action 33: Walk to clothes_shirt_2086.
Action 34: Grab clothes_shirt_2086.
Action 35: Walk to ironing_board_2074.
Action 36: look for iron_2089 around ironing_board_2074.
Action 37: Walk to kitchen_counter_230.
Action 38: Put clothes_shirt_2086 on kitchen_counter_230.
Action 39: Walk to iron_2089.
Action 40: Plug in iron_2089.
Action 41: Switch on iron_2089.
Action 42: Walk to clothes_shirt_2086.
Action 43: Grab clothes_shirt_2086.
Action 44: Walk to kitchen_counter_230.
Action 45: Put clothes_shirt_2086 on kitchen_counter_230.
Action 46: Walk to clothes_skirt_2088.
Action 47: Grab clothes_skirt_2088.
Action 48: Walk to kitchen_counter_230.
Action 49: Put clothes_skirt_2088 on kitchen_counter_230.
Action 50: Grab clothes_shirt_2086.
Action 51: Walk to ironing_board_2074.
Action 52: Put clothes_shirt_2086 on ironing_board_2074.
Action 53: Walk to clothes_skirt_2088.
Action 54: Grab clothes_skirt_2088.
Action 55: Walk to ironing_board_2074.
Action 56: Put clothes_skirt_2088 on ironing_board_2074.
Action 57: Walk to clothes_shirt_2086.
Action 58: Grab clothes_shirt_2086.
Action 59: Walk to bed_105.
Action 60: Put clothes_shirt_2086 on bed_105.
Action 61: Walk to clothes_skirt_2088.
Action 62: Grab clothes_skirt_2088.
Action 63: Walk to bed_105.
Action 64: Put clothes_skirt_2088 on bed_105.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_hanger_130_around_closetdrawer_146(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==146
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(hanger,closetdrawer_instance)
        else:
            exp(hanger,closetdrawer_instance)
    eff:
        unknown[hanger]=False
        close[hanger,closetdrawer_instance]=True
        close[closetdrawer_instance,hanger]=True
    

#exp_behavior_end

#goal_representation
 
def is_currently_ironed(clothes: item):
    symbol ironed=exists state1: bool : (is_clean(clothes) and not dirty(clothes))
    return ironed

behavior place_on_bed(clothes: item, bed: item):
    body:
        if not on(clothes, bed):
            put_on(clothes, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and is_currently_ironed(shirt)
        bind skirt: item where:
            is_clothes_skirt(skirt) and is_currently_ironed(skirt)
        bind bed: item where:
            is_bed(bed)
        place_on_bed(shirt, bed)
        place_on_bed(skirt, bed)
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_hanger_115_around_closetdrawer_146(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==146
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(hanger,closetdrawer_instance)
        else:
            exp(hanger,closetdrawer_instance)
    eff:
        unknown[hanger]=False
        close[hanger,closetdrawer_instance]=True
        close[closetdrawer_instance,hanger]=True
    

#exp_behavior_end

#goal_representation
behavior place_on_bed(clothing: item, bed: item):
    body:
        if not on(clothing, bed):
            put_on(clothing, bed)

behavior __goal__():
    body:
        bind bed: item where:
            is_bed(bed)
        # Select the bed in the scene
        
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the cleaned shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the cleaned skirt

        place_on_bed(shirt, bed)
        place_on_bed(skirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2056_around_towel_rack_34(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==34
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_hanger_128_around_closetdrawer_146(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==146
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(hanger,closetdrawer_instance)
        else:
            exp(hanger,closetdrawer_instance)
    eff:
        unknown[hanger]=False
        close[hanger,closetdrawer_instance]=True
        close[closetdrawer_instance,hanger]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_on_bed(clothes:item, bed:item):
    body:
        if not on(clothes, bed):
            put_on(clothes, bed)
            # Place the clothes on the bed
            
behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed
        
        place_on_bed(shirt, bed)
        place_on_bed(skirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt)
        # Select the shirt to place on the bed
        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt)
        # Select the skirt to place on the bed
        bind bed: item where:
            is_bed(bed)
        # Identify the bed to place the clothes on

        walk_to(clothes_shirt)
        grab(clothes_shirt)
        walk_to(bed)
        put_on(clothes_shirt, bed)
        # Place the ironed shirt on the bed

        walk_to(clothes_skirt)
        grab(clothes_skirt)
        walk_to(bed)
        put_on(clothes_skirt, bed)
        # Place the ironed skirt on the bed

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt)
        # Select the shirt to place on the bed
        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt)
        # Select the skirt to place on the bed
        bind bed: item where:
            is_bed(bed)
        # Identify the bed to place the clothes on

        walk_to(clothes_shirt)
        grab(clothes_shirt)
        walk_to(bed)
        put_on(clothes_shirt, bed)
        # Place the ironed shirt on the bed

        walk_to(clothes_skirt)
        grab(clothes_skirt)
        walk_to(bed)
        put_on(clothes_skirt, bed)
        # Place the ironed skirt on the bed

##############################
From agent.py-> find a plan in act()
walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(bed_105)put_executor(clothes_shirt_2086, bed_105)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(bed_105)put_executor(clothes_skirt_2088, bed_105)
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot find: Robot is close to the bed_105. Robot is close to the clothes_shirt_2086. 
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot find: Robot is close to the bed_105. Robot is close to the clothes_shirt_2086. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(bed_105)
Robot find: Robot is close to the bed_105. Robot is close to the clothes_shirt_2086. Robot is close to the mat_173. 
##############################
From agent.py
put_executor(clothes_shirt_2086, bed_105)
Robot find: Robot is close to the bed_105. Robot is close to the clothes_shirt_2086. Robot is close to the mat_173. clothes_shirt_2086 is close bed_105. clothes_shirt_2086 is on bed_105. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2088)
Robot find: Robot is close to the bed_105. Robot is close to the clothes_skirt_2088. 
##############################
From agent.py
grab_executor(clothes_skirt_2088)
Robot find: Robot is close to the bed_105. Robot is close to the clothes_skirt_2088. Grabbing clothes_skirt_2088 by right hand. 
##############################
From agent.py
walk_executor(bed_105)
Robot find: Robot is close to the bed_105. Robot is close to the clothes_skirt_2088. Robot is close to the mat_173. 
##############################
From agent.py
put_executor(clothes_skirt_2088, bed_105)
Robot find: Robot is close to the bed_105. Robot is close to the clothes_skirt_2088. Robot is close to the mat_173. clothes_skirt_2088 is close bed_105. clothes_skirt_2088 is on bed_105. clothes_skirt_2088 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to iron the shirt and the skirt, placing the ironed garments on the bed. Currently, although the clothes are on the bed, they were not ironed before being placed there.
##############################
From agent.py
Human Instruction: You need to iron the shirt and the skirt, placing the ironed garments on the bed. Currently, although the clothes are on the bed, they were not ironed before being placed there.

The actions you have taken:
Action 1: Walk to closetdrawer_146.
Action 2: look for clothes_shirt_2086 around closetdrawer_146.
Action 3: Walk to closetdrawer_146.
Action 4: look for clothes_shirt_2086 around closetdrawer_146.
Action 5: Walk to closetdrawer_146.
Action 6: look for clothes_shirt_2086 around closetdrawer_146.
Action 7: Walk to closetdrawer_146.
Action 8: look for clothes_shirt_2086 around closetdrawer_146.
Action 9: Walk to closetdrawer_146.
Action 10: look for clothes_shirt_2086 around closetdrawer_146.
Action 11: Walk to closetdrawer_146.
Action 12: look for clothes_shirt_2086 around closetdrawer_146.
Action 13: Walk to basket_for_clothes_2006.
Action 14: look for clothes_shirt_2086 around basket_for_clothes_2006.
Action 15: Observe around clothes_shirt_2086 with the question of Is this the shirt or skirt that needs to be ironed.
Action 16: Observe around clothes_skirt_2088 with the question of Is this the shirt or skirt that needs to be ironed.
Action 17: Observe around clothes_shirt_2086 with the question of Check if shirt is clean before ironing.
Action 18: Touch clothes_shirt_2086.
Action 19: Observe around clothes_skirt_2088 with the question of Check if skirt is clean before ironing.
Action 20: Touch clothes_skirt_2088.
Action 21: Grab clothes_shirt_2086.
Action 22: Walk to faucet_43.
Action 23: Switch on faucet_43.
Action 24: Wash clothes_shirt_2086.
Action 25: Switch off faucet_43.
Action 26: Walk to clothes_skirt_2088.
Action 27: Grab clothes_skirt_2088.
Action 28: Walk to kitchen_counter_230.
Action 29: Put clothes_shirt_2086 on kitchen_counter_230.
Action 30: Switch on faucet_232.
Action 31: Wash clothes_skirt_2088.
Action 32: Switch off faucet_232.
Action 33: Walk to clothes_shirt_2086.
Action 34: Grab clothes_shirt_2086.
Action 35: Walk to ironing_board_2074.
Action 36: look for iron_2089 around ironing_board_2074.
Action 37: Walk to kitchen_counter_230.
Action 38: Put clothes_shirt_2086 on kitchen_counter_230.
Action 39: Walk to iron_2089.
Action 40: Plug in iron_2089.
Action 41: Switch on iron_2089.
Action 42: Walk to clothes_shirt_2086.
Action 43: Grab clothes_shirt_2086.
Action 44: Walk to kitchen_counter_230.
Action 45: Put clothes_shirt_2086 on kitchen_counter_230.
Action 46: Walk to clothes_skirt_2088.
Action 47: Grab clothes_skirt_2088.
Action 48: Walk to kitchen_counter_230.
Action 49: Put clothes_skirt_2088 on kitchen_counter_230.
Action 50: Grab clothes_shirt_2086.
Action 51: Walk to ironing_board_2074.
Action 52: Put clothes_shirt_2086 on ironing_board_2074.
Action 53: Walk to clothes_skirt_2088.
Action 54: Grab clothes_skirt_2088.
Action 55: Walk to ironing_board_2074.
Action 56: Put clothes_skirt_2088 on ironing_board_2074.
Action 57: Walk to clothes_shirt_2086.
Action 58: Grab clothes_shirt_2086.
Action 59: Walk to bed_105.
Action 60: Put clothes_shirt_2086 on bed_105.
Action 61: Walk to clothes_skirt_2088.
Action 62: Grab clothes_skirt_2088.
Action 63: Walk to bed_105.
Action 64: Put clothes_skirt_2088 on bed_105.
Action 65: Walk to clothes_shirt_2086.
Action 66: Grab clothes_shirt_2086.
Action 67: Walk to bed_105.
Action 68: Put clothes_shirt_2086 on bed_105.
Action 69: Walk to clothes_skirt_2088.
Action 70: Grab clothes_skirt_2088.
Action 71: Walk to bed_105.
Action 72: Put clothes_skirt_2088 on bed_105.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_on_bed(cloth:item, bed:item):
    body:
        if not on(cloth, bed):
            put_on(cloth, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Find the shirt
        
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Find the skirt
        
        bind bed: item where:
            is_bed(bed)
        # Select a bed to place the clothing items on
        
        place_on_bed(shirt, bed)
        place_on_bed(skirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_183_around_pillow_183(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==183
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_clothes_on_bed(shirt:item, skirt:item, bed:item):
    body:
        if not on(shirt, bed):
            put_on(shirt, bed)
        if not on(skirt, bed):
            put_on(skirt, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind bed: item where:
            is_bed(bed)
        place_clothes_on_bed(shirt, skirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2047_around_closetdrawer_146(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==146
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

behavior find_clothes_gloves_2046_around_orchid_178(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind orchid_instance:item where:
            is_orchid(orchid_instance) and id[orchid_instance]==178
        achieve close_char(char,orchid_instance)
        if can_open(orchid_instance):
            achieve_once open(orchid_instance)
            exp(clothes_gloves,orchid_instance)
        else:
            exp(clothes_gloves,orchid_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,orchid_instance]=True
        close[orchid_instance,clothes_gloves]=True
    

behavior find_hanger_130_around_closetdrawer_146(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==146
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(hanger,closetdrawer_instance)
        else:
            exp(hanger,closetdrawer_instance)
    eff:
        unknown[hanger]=False
        close[hanger,closetdrawer_instance]=True
        close[closetdrawer_instance,hanger]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_on_bed(obj:item, bed:item):
    body:
        if not on(obj, bed):
            put_on(obj, bed) # Place the item on the bed

behavior __goal__():
    body:
        bind bed: item where:
            is_bed(bed)
        # Select a bed to place the clothes
        
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt
        
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt
        
        put_on_bed(shirt, bed)
        put_on_bed(skirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior place_on_bed(c:item, bed:item):
    body:
        if not on(c, bed):
            put_on(c, bed) # Place the clothing item on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Bind the ironed shirt that is clean

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Bind the ironed skirt that is clean

        bind bed: item where:
            is_bed(bed)
        # Bind the bed

        place_on_bed(shirt, bed)
        place_on_bed(skirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_182_around_pillow_182(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind pillow_instance:item where:
            is_pillow(pillow_instance) and id[pillow_instance]==182
        achieve close_char(char,pillow_instance)
        if can_open(pillow_instance):
            achieve_once open(pillow_instance)
            exp(pillow,pillow_instance)
        else:
            exp(pillow,pillow_instance)
    eff:
        unknown[pillow]=False
        close[pillow,pillow_instance]=True
        close[pillow_instance,pillow]=True
    

behavior find_hanger_376_around_closetdrawer_146(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==146
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(hanger,closetdrawer_instance)
        else:
            exp(hanger,closetdrawer_instance)
    eff:
        unknown[hanger]=False
        close[hanger,closetdrawer_instance]=True
        close[closetdrawer_instance,hanger]=True
    

#exp_behavior_end

#goal_representation
 
behavior grab_clothes(clothes:item):
    body:
        if not inhand(clothes):
            grab(clothes)

behavior place_on_bed(clothes:item, bed:item):
    body:
        if not on(clothes, bed):
            put_on(clothes, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind skirt: item where:
            is_clothes_skirt(skirt)
        bind bed: item where:
            is_bed(bed)

        grab_clothes(shirt)
        place_on_bed(shirt, bed)
        empty_a_hand()

        grab_clothes(skirt)
        place_on_bed(skirt, bed)
        empty_a_hand()

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2073_around_bathroom_cabinet_40(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

behavior find_dvd_player_2061_around_tvstand_225(dvd_player:item):
    goal: not unknown(dvd_player)
    body:
        assert is_dvd_player(dvd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==225
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(dvd_player,tvstand_instance)
        else:
            exp(dvd_player,tvstand_instance)
    eff:
        unknown[dvd_player]=False
        close[dvd_player,tvstand_instance]=True
        close[tvstand_instance,dvd_player]=True
    

#exp_behavior_end

#goal_representation
 
def is_bed(item:item):
    return is_bed(item)

def is_cleaned_and_on_bed(item:item):
    return is_clothes(item) and clean(item) and on(item, bed)

behavior place_clothes_on_bed(clothes:item, bed:item):
    body:
        if not on(clothes, bed):
            put_on(clothes, bed)

behavior __goal__():
    body:
        bind bed: item where:
            is_bed(bed)
        
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        
        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        
        place_clothes_on_bed(shirt, bed)
        place_clothes_on_bed(skirt, bed)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
Error record: Error during problem transformation
##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
['walk_executor(closetdrawer_146)', 'walk_executor(closetdrawer_146)', 'walk_executor(closetdrawer_146)', 'walk_executor(closetdrawer_146)', 'walk_executor(closetdrawer_146)', 'walk_executor(closetdrawer_146)', 'walk_executor(basket_for_clothes_2006)', 'touch_executor(clothes_shirt_2086)', 'touch_executor(clothes_skirt_2088)', 'grab_executor(clothes_shirt_2086)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'wash_executor(clothes_shirt_2086)', 'switchoff_executor(faucet_43)', 'walk_executor(clothes_skirt_2088)', 'grab_executor(clothes_skirt_2088)', 'walk_executor(kitchen_counter_230)', 'put_executor(clothes_shirt_2086, kitchen_counter_230)', 'switchon_executor(faucet_232)', 'wash_executor(clothes_skirt_2088)', 'switchoff_executor(faucet_232)', 'walk_executor(clothes_shirt_2086)', 'grab_executor(clothes_shirt_2086)', 'walk_executor(ironing_board_2074)', 'walk_executor(kitchen_counter_230)', 'put_executor(clothes_shirt_2086, kitchen_counter_230)', 'walk_executor(iron_2089)', 'plugin_executor(iron_2089)', 'switchon_executor(iron_2089)', 'walk_executor(clothes_shirt_2086)', 'grab_executor(clothes_shirt_2086)', 'walk_executor(kitchen_counter_230)', 'put_executor(clothes_shirt_2086, kitchen_counter_230)', 'walk_executor(clothes_skirt_2088)', 'grab_executor(clothes_skirt_2088)', 'walk_executor(kitchen_counter_230)', 'put_executor(clothes_skirt_2088, kitchen_counter_230)', 'grab_executor(clothes_shirt_2086)', 'walk_executor(ironing_board_2074)', 'put_executor(clothes_shirt_2086, ironing_board_2074)', 'walk_executor(clothes_skirt_2088)', 'grab_executor(clothes_skirt_2088)', 'walk_executor(ironing_board_2074)', 'put_executor(clothes_skirt_2088, ironing_board_2074)', 'walk_executor(clothes_shirt_2086)', 'grab_executor(clothes_shirt_2086)', 'walk_executor(bed_105)', 'put_executor(clothes_shirt_2086, bed_105)', 'walk_executor(clothes_skirt_2088)', 'grab_executor(clothes_skirt_2088)', 'walk_executor(bed_105)', 'put_executor(clothes_skirt_2088, bed_105)', 'walk_executor(clothes_shirt_2086)', 'grab_executor(clothes_shirt_2086)', 'walk_executor(bed_105)', 'put_executor(clothes_shirt_2086, bed_105)', 'walk_executor(clothes_skirt_2088)', 'grab_executor(clothes_skirt_2088)', 'walk_executor(bed_105)', 'put_executor(clothes_skirt_2088, bed_105)']
Time info:
Time consume: 502 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 15
goal correct times: 0
action_num: 60

Task complete rate:
Keystate: k1 - Requires: 7 steps
Keystate: k2 - Requires: 6 steps
Keystate: k3 - Requires: 0 steps
Keystate: k4 - Requires: 0 steps
Action Completion Rate: 0.0
Scene_id: 0
##############################
