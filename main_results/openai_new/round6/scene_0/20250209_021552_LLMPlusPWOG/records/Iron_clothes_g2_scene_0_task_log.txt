From agent.py
Reset goals: The sub-goals are: 
['Hand wash a shirt and iron this shirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_bathroom_cabinet_40(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_shirt_2086_around_closetdrawer_158(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==158
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_shirt(shirt:item):
    body:
        wash(shirt)
        # Wash the shirt by hand
        scrub(shirt)
        # Scrub the shirt to remove stains
        rinse(shirt)
        # Rinse the shirt to remove soap

behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve_once plugged(iron)
        # Plug the iron into the power socket
        achieve_once is_on(iron)
        # Turn on the iron
        achieve_once on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve clean(shirt)
        # Ensure the shirt is clean before ironing
        make_flat(shirt)
        # Iron the shirt to remove wrinkles
        achieve_once is_off(iron)
        # Turn off the iron after use
        achieve_once unplugged(iron)
        # Unplug the iron from the power socket

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select a shirt
        bind iron: item where:
            is_iron(iron)
        # Select an iron
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board
        hand_wash_shirt(shirt)
        iron_shirt(shirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_shirt_2086_around_closetdrawer_158(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==158
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_shirt(shirt:item):
    body:
        achieve_once clean(shirt) # Ensure the shirt is clean

behavior prepare_iron(iron:item):
    body:
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Turn on the iron for use

behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(shirt, ironing_board) # Lay the shirt on the ironing board
        achieve_once clean(shirt) # Shirt must be clean before ironing
        prepare_iron(iron) # Ensure the iron is ready
        achieve_once closed(ironing_board) # Secure ironing board by closing any movable parts after use
        achieve_once is_off(iron) # Turn off the iron when finished
        achieve_once unplugged(iron) # Unplug the iron after use

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select a shirt to wash and iron
        
        bind iron: item where:
            is_iron(iron)
        # Select the iron
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        wash_shirt(shirt) # Wash the shirt
        iron_shirt(shirt, ironing_board, iron) # Iron the shirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_shirt_2086_around_closetdrawer_158(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==158
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_shirt(shirt: item):
    body:
        achieve_once clean(shirt)
        # Wash the shirt to achieve its clean state

behavior iron_shirt(shirt: item, iron: item):
    body:
        achieve_once is_on(iron)
        # Turn on the iron
        achieve_once plugged(iron)
        # Ensure the iron is plugged in
        achieve_once inhand(shirt)
        # Hold the shirt to iron
        achieve clean(shirt)
        # Iron the shirt for wrinklefree state

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to wash and iron
        
        bind iron: item where:
            is_iron(iron)
        # Select the iron for use

        wash_shirt(shirt)
        iron_shirt(shirt, iron)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior wash_shirt(shirt: item):
    body:
        achieve_once clean(shirt)
        # Wash the shirt to achieve its clean state

behavior iron_shirt(shirt: item, iron: item):
    body:
        achieve_once is_on(iron)
        # Turn on the iron
        achieve_once plugged(iron)
        # Ensure the iron is plugged in
        achieve_once inhand(shirt)
        # Hold the shirt to iron
        achieve clean(shirt)
        # Iron the shirt for wrinklefree state

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to wash and iron
        
        bind iron: item where:
            is_iron(iron)
        # Select the iron for use

        wash_shirt(shirt)
        iron_shirt(shirt, iron)

##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_158)exp(clothes_shirt_2086, closetdrawer_158)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_shirt_2086)switchoff_executor(faucet_43)walk_executor(ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)
##############################
From agent.py
walk_executor(closetdrawer_158)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_158)
Fail to find clothes_shirt_2086 around closetdrawer_158. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_158)exp(clothes_shirt_2086, closetdrawer_158)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_shirt_2086)switchoff_executor(faucet_43)walk_executor(ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)
##############################
From agent.py
walk_executor(closetdrawer_158)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_158)
Fail to find clothes_shirt_2086 around closetdrawer_158. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['Hand wash a shirt and iron this shirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_shirt(shirt:item):
    body:
        wash(shirt)
        scrub(shirt)
        rinse(shirt)

behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve_once plugged(iron)
        achieve_once is_on(iron)
        achieve_once on(shirt, ironing_board)
        achieve_once inhand(shirt)
        # Iron the shirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select a shirt
        
        bind iron: item where:
            is_iron(iron)
        # Select an iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        wash_shirt(shirt)
        iron_shirt(shirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_shirt(shirt:item):
    body:
        achieve clean(shirt)
        # Wash the shirt until it is clean

behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve plugged(iron)
        # Ensure the iron is plugged in
        achieve is_on(iron)
        # Turn on the iron
        achieve clean(shirt)
        # Ensure the shirt remains clean while ironing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and dirty(shirt)
        # Select the dirty shirt

        bind iron: item where:
            is_iron(iron)
        # Select the iron for use

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        wash_shirt(shirt)
        iron_shirt(shirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2058_around_washing_machine_2007(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(towel,washing_machine_instance)
        else:
            exp(towel,washing_machine_instance)
    eff:
        unknown[towel]=False
        close[towel,washing_machine_instance]=True
        close[washing_machine_instance,towel]=True
    

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation

behavior wash_shirt(shirt:item):
    body:
        wash(shirt)
        # Wash the shirt

behavior dry_shirt():
    body:
        bind towel: item where:
            is_towel(towel)
        # Select a towel to dry the shirt
        achive_once inhand(towel)
        wipe(shirt)
        # Use the towel to wipe the shirt dry
        achieve_once dirty(towel)
        # The towel becomes dirty after drying the shirt, so its state reflects that

behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve_once plugged(iron) # Ensure the iron is plugged in
        achieve_once is_on(iron) # Turn on the iron
        achieve_once on(shirt, ironing_board) # Place the shirt on the ironing board
    
behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[shoes_shirt] == 2086
        # Select the shirt to work on

        wash_shirt(clothes_shirt)
        dry_shirt()
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron
        iron_shirt(clothes_shirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_shirt(shirt:item):
    body:
        achieve clean(shirt) # Wash the shirt

behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve plugged(iron) # Ensure the iron is plugged in for operation
        achieve is_on(iron) # Turn the iron on
        achieve_once on(shirt, ironing_board) # Place shirt on ironing board
        # Continue to iron the shirt until it is ready

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be washed and ironed
        
        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        wash_shirt(shirt) # Wash the shirt
        iron_shirt(shirt, iron, ironing_board) # Iron the shirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_soap_2054_around_bathroom_cabinet_40(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind drawer: item where:
            is_closetdrawer(drawer) and id[drawer] == 158
        # Select closetdrawer with ID 158

        bind shirt: item where:
            is_clothes_shirt(shirt) and close(shirt, drawer)
        # Select the shirt close to the closet drawer

        wash(shirt)
        scrub(shirt)
        rinse(shirt)

        # Assume there is an ironing board and iron available

        bind iron: item where:
            is_iron(iron)

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        achieve_once inside(shirt, ironing_board)
        achieve plugged(iron)
        achieve is_on(iron)
        
        # Iron the shirt
        achieve_once clean(shirt)


#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_sink_42(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==42
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_shirt_2086_around_closetdrawer_158(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==158
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation

behavior hand_wash_shirt(shirt:item):
    body:
        wash(shirt)
        scrub(shirt)
        rinse(shirt)
        achieve clean(shirt)

behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve unplugged(iron)
        achieve close_char(char, ironing_board)
        achieve_once inhand(shirt)
        achieve_once plugged(iron)
        achieve is_on(iron)
        achieve_once on(shirt, ironing_board)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind iron: item where:
            is_iron(iron)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        
        hand_wash_shirt(shirt)
        iron_shirt(shirt, iron, ironing_board)


#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['Hand wash a shirt and iron this shirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_shirt(shirt:item):
    body:
        wash(shirt)
        scrub(shirt)
        rinse(shirt)

behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve plugged(iron)
        achieve_once on(iron, ironing_board)
        achieve_once is_on(iron)
        achieve_once clean(shirt)
        achieve_once on(shirt, ironing_board)
        achieve_once unplugged(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        bind iron: item where:
            is_iron(iron)
        wash_shirt(shirt)
        iron_shirt(shirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_shirt(clothes:item):
    body:
        wash(clothes)
        # Wash the shirt by hand

behavior iron_clothes(clothes:item, iron:item, ironing_board:item):
    body:
        achieve_once plugged(iron)
        achieve_once on(clothes, ironing_board)
        achieve_once is_on(iron)
        # Plug the iron, place the clothes on the ironing board, and turn on the iron

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Find the shirt
        bind iron: item where:
            is_iron(iron)
        # Find the iron
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Find the ironing board
        wash_shirt(shirt) # First, wash the shirt by hand
        iron_clothes(shirt, iron, ironing_board) # Then, iron it

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_shirt(shirt:item):
    body:
        achieve_once clean(shirt)
        # Hand wash the shirt until it is clean

behavior iron_shirt(ironing_board:item, iron:item, shirt:item):
    body:
        achieve_once plugged(iron) # Ensure the iron is plugged in
        achieve_once is_on(iron) # Turn on the iron
        achieve_once on(shirt, ironing_board) # Place the shirt on the ironing board
        # Iron the shirt which requires it to be on the ironing board

behavior reset_iron(iron:item):
    body:
        achieve_once is_off(iron) # Turn off the iron
        achieve_once unplugged(iron) # Ensure the iron is unplugged

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select a shirt to wash and iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        wash_shirt(shirt)
        iron_shirt(ironing_board, iron, shirt)
        reset_iron(iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_shirt(shirt:item):
    body:
        achieve clean(shirt)
        # Ensure the shirt is clean

behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve plugged(iron)
        # Plug in the iron before using it
        achieve is_on(iron)
        # Turn on the iron
        achieve on(shirt, ironing_board)
        # Place the shirt onto the ironing board
        # Assume ironing happens automatically after placing the shirt on the board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select an item classified as a shirt
        
        wash_shirt(shirt)
        
        bind iron: item where:
            is_iron(iron)
        # Select an item classified as an iron
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an item classified as an ironing board
        
        iron_shirt(shirt, iron, ironing_board)


#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_ironing_board_and_iron():
    body:
        # Look for ironing board
        foreach board: item:
            if is_ironing_board(board) and not visited(board):
                observe(board, "Check if ironing board is suitable for use")
        
        # Look for iron
        foreach iron: item:
            if is_iron(iron) and not visited(iron):
                observe(iron, "Check if the iron is suitable for use")

behavior prepare_washing_area(bucket:item):
    body:
        # Ensure the bucket can contain water
        achieve_once has_water(bucket)

behavior wash_and_iron_shirt(shirt:item, board:item, iron:item):
    body:
        achieve clean(shirt)  # Wash the shirt
        achieve_once inside(shirt, board)  # Place shirt on ironing board
        achieve plugged(iron)  # Ensure iron is plugged in
        achieve_once is_on(iron)  # Turn on the iron
        achieve clean(shirt)  # Iron the shirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and dirty(shirt)
        # Select the dirty shirt to be washed and ironed

        bind bucket: item where:
            recipient(bucket)
        # Select a suitable bucket or container for washing
        
        find_ironing_board_and_iron()
        
        # Prepare washing area
        prepare_washing_area(bucket)
        
        bind board: item where:
            is_ironing_board(board) and visited(board)
        
        bind iron: item where:
            is_iron(iron) and visited(iron)
        
        # Wash and iron the shirt
        wash_and_iron_shirt(shirt, board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_shirt(shirt:item):
    body:
        wash(shirt)
        achieve clean(shirt)

behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve_once plugged(iron)
        achieve_once is_on(iron)
        achieve_once on(shirt, ironing_board)
        # Iron the shirt
        achieve_once unplugged(iron)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select a shirt to wash and iron
        bind iron: item where:
            is_iron(iron)
        # Select an iron
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board
        wash_shirt(shirt)
        iron_shirt(shirt, iron, ironing_board)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
Task Summary:
Task Goal:
Hand wash a shirt and iron this shirt.
Action History:
['walk_executor(closetdrawer_158)', 'walk_executor(closetdrawer_158)']
Time info:
Time consume: 251 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 15
goal correct times: 0
action_num: 2

Task complete rate:
Keystate: k1 - Requires: 6 steps
Keystate: k2 - Requires: 10 steps
Action Completion Rate: 0.0
Scene_id: 0
##############################
