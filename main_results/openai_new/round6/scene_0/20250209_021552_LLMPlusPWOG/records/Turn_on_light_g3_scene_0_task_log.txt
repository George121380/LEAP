From agent.py
Reset goals: The sub-goals are: 
['Make sure there is at least one light on in every room.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_single_light_on(room:item):
    # Function to check if there is at least one light on in the room
    symbol light_on= exists light: item : (is_light(light) and is_on(light) and inside(light, room))
    return light_on

behavior turn_on_light(light:item):
    body:
        achieve_once is_on(light)

behavior check_and_turn_on_lights_room(room:item):
    body:
        if not is_single_light_on(room):
            foreach light: item:
                if is_light(light) and inside(light, room) and not is_on(light):
                    turn_on_light(light)

behavior __goal__():
    body:
        foreach room: item:
            if not visited(room):
                observe(room, "Check lights in the room")
            check_and_turn_on_lights_room(room)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior ensure_light_in_room(room: item):
    body:
        bind light: item where:
            is_light(light) and inside(light, room)
        # Ensure there is a light inside the room
        achieve is_on(light)
        # Ensure the light inside the room is turned on

behavior __goal__():
    body:
        foreach room: item:
            if is_kitchen(room) or is_bedroom(room) or is_bathroom(room) or is_dining_room(room) or is_home_office(room):
                ensure_light_in_room(room)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior ensure_light_in_room(room: item):
    body:
        bind light: item where:
            is_light(light) and inside(light, room)
        # Ensure there is a light inside the room
        achieve is_on(light)
        # Ensure the light inside the room is turned on

behavior __goal__():
    body:
        foreach room: item:
            if is_kitchen(room) or is_bedroom(room) or is_bathroom(room) or is_dining_room(room) or is_home_office(room):
                ensure_light_in_room(room)

##############################
From agent.py-> find a plan in act()
walk_executor(light_64)switchon_executor(light_64)walk_executor(light_169)switchon_executor(light_169)walk_executor(light_245)switchon_executor(light_245)walk_executor(light_411)switchon_executor(light_411)
##############################
From agent.py
walk_executor(light_64)
Robot find: towel_rack_32, mat_22, Robot is close to the light_64. 
##############################
From agent.py
switchon_executor(light_64)
Robot find: Robot is close to the light_64. light_64 is turned on. 
##############################
From agent.py
walk_executor(light_169)
Robot find: keyboard_168, drawing_175, chair_103, drawing_174, Robot is close to the light_169. 
##############################
From agent.py
switchon_executor(light_169)
Robot find: Robot is close to the light_169. light_169 is turned on. 
##############################
From agent.py
walk_executor(light_245)
Robot find: drawing_240, drawing_238, wall_clock_249, drawing_241, drawing_242, drawing_243, drawing_239, phone_247, Robot is close to the light_245. 
##############################
From agent.py
switchon_executor(light_245)
Robot find: Robot is close to the light_245. light_245 is turned on. 
##############################
From agent.py
walk_executor(light_411)
Robot find: drawing_404, drawing_402, Robot is close to the light_411. 
##############################
From agent.py
switchon_executor(light_411)
Robot find: Robot is close to the light_411. light_411 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make sure there is at least one light on in every room.
Action History:
['walk_executor(light_64)', 'switchon_executor(light_64)', 'walk_executor(light_169)', 'switchon_executor(light_169)', 'walk_executor(light_245)', 'switchon_executor(light_245)', 'walk_executor(light_411)', 'switchon_executor(light_411)']
Time info:
Time consume: 29 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 2
goal correct times: 0
action_num: 8

Task complete rate:
1
Scene_id: 0
##############################
