From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the jacket.', '2. Wash the jacket using the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2047_around_closetdrawer_143(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==143
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_soap_2053_around_sink_231(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_jacket(jacket:item):
    body:
        achieve clean(jacket) 
        # Ensure the jacket is clean after hand washing

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket to be hand washed

        hand_wash_jacket(jacket)
        # Hand wash the jacket

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior hand_wash_jacket(jacket:item):
    body:
        achieve clean(jacket) 
        # Ensure the jacket is clean after hand washing

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket to be hand washed

        hand_wash_jacket(jacket)
        # Hand wash the jacket

##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_143)exp(clothes_jacket_2047, closetdrawer_143)walk_executor(clothes_jacket_2047)grab_executor(clothes_jacket_2047)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_jacket_2047)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_143)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_jacket_2047, closetdrawer_143)
Fail to find clothes_jacket_2047 around closetdrawer_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_143)exp(clothes_jacket_2047, closetdrawer_143)walk_executor(clothes_jacket_2047)grab_executor(clothes_jacket_2047)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_jacket_2047)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_143)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_jacket_2047, closetdrawer_143)
Fail to find clothes_jacket_2047 around closetdrawer_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_143)exp(clothes_jacket_2047, closetdrawer_143)walk_executor(clothes_jacket_2047)grab_executor(clothes_jacket_2047)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_jacket_2047)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_143)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_jacket_2047, closetdrawer_143)
Fail to find clothes_jacket_2047 around closetdrawer_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_143)exp(clothes_jacket_2047, closetdrawer_143)walk_executor(clothes_jacket_2047)grab_executor(clothes_jacket_2047)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_jacket_2047)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_143)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_jacket_2047, closetdrawer_143)
Fail to find clothes_jacket_2047 around closetdrawer_143. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the jacket.', '2. Wash the jacket using the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_soap_2054_around_shower_36(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==36
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(soap,shower_instance)
        else:
            exp(soap,shower_instance)
    eff:
        unknown[soap]=False
        close[soap,shower_instance]=True
        close[shower_instance,soap]=True
    

#exp_behavior_end

#goal_representation
behavior hand_wash_jacket(jacket:item):
    body:
        wash(jacket) # Hand wash the jacket

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket to be hand washed

        hand_wash_jacket(jacket) # Perform hand washing on the jacket
#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2053_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_clothes_jacket_2047_around_closetdrawer_143(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==143
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothes_jacket(x: item):
    return True # Assume it is a clothes jacket when is_clothes_jacket(x) is called

behavior hand_wash_jacket(jacket: item):
    body:
        achieve_once clean(jacket) # Ensure the jacket is hand washed and becomes clean

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and dirty(jacket)
        # Select a dirty clothes jacket
        
        hand_wash_jacket(jacket)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_sink_231(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash(jacket: item):
    body:
        achieve clean(jacket) # Ensure the jacket is clean after hand washing

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket to be hand washed

        hand_wash(jacket) # Perform hand washing on the jacket

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the jacket.', '2. Wash the jacket by washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2047_around_closetdrawer_143(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==143
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_handwash_jacket(jacket: item):
    body:
        achieve_once visited(jacket)  # Ensure the jacket is found and checked
        achieve is_clothes(jacket)  # Ensure the item identified is a piece of clothing
        achieve_once dirty(jacket)  # Ensure the jacket is marked as dirty to be washed
        wash(jacket)  # Wash the jacket by hand

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket

        find_and_handwash_jacket(jacket)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2047_around_closetdrawer_143(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==143
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior observe_jacket(jacket: item):
    body:
        observe(jacket, "Check if it is the clothes jacket we are looking for")

behavior hand_wash_jacket(jacket: item):
    body:
        wash(jacket) # Hand wash the jacket

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        observe_jacket(jacket)
        hand_wash_jacket(jacket)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior observe_jacket(jacket: item):
    body:
        observe(jacket, "Check if it is the clothes jacket we are looking for")

behavior hand_wash_jacket(jacket: item):
    body:
        wash(jacket) # Hand wash the jacket

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        observe_jacket(jacket)
        hand_wash_jacket(jacket)

##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_143)exp(clothes_jacket_2047, closetdrawer_143)walk_executor(clothes_jacket_2047)obs(clothes_jacket_2047, Check if it is the clothes jacket we are looking for)grab_executor(clothes_jacket_2047)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_jacket_2047)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_143)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py
exp(clothes_jacket_2047, closetdrawer_143)
Fail to find clothes_jacket_2047 around closetdrawer_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_143)exp(clothes_jacket_2047, closetdrawer_143)walk_executor(clothes_jacket_2047)obs(clothes_jacket_2047, Check if it is the clothes jacket we are looking for)grab_executor(clothes_jacket_2047)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_jacket_2047)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_143)
Robot find: Robot is close to the dresser_123. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_jacket_2047 ?
Answer: Go to the home office labeled as "home_office_319." Once inside, locate the couch identified as "couch_352." The target item, "clothes_jacket_2047," is on this couch. Look for a jacket resting on the surface of the couch to find the target item.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to the home office labeled as "home_office_319." Once inside, locate the couch identified as "couch_352." The target item, "clothes_jacket_2047," is on this couch. Look for a jacket resting on the surface of the couch to find the target item.

The actions you have taken:
Action 1: Walk to closetdrawer_143.
Action 2: look for clothes_jacket_2047 around closetdrawer_143.
Action 3: Walk to closetdrawer_143.
Action 4: look for clothes_jacket_2047 around closetdrawer_143.
Action 5: Walk to closetdrawer_143.
Action 6: look for clothes_jacket_2047 around closetdrawer_143.
Action 7: Walk to closetdrawer_143.
Action 8: look for clothes_jacket_2047 around closetdrawer_143.
Action 9: Walk to closetdrawer_143.
Action 10: look for clothes_jacket_2047 around closetdrawer_143.
Action 11: Walk to closetdrawer_143.

##############################
From agent.py
exp(clothes_jacket_2047, closetdrawer_143)
Fail to find clothes_jacket_2047 around closetdrawer_143. 
##############################
From agent.py-> find a plan in act()
walk_executor(couch_352)exp(clothes_jacket_2047, couch_352)walk_executor(clothes_jacket_2047)obs(clothes_jacket_2047, Check if it is the clothes jacket we are looking for)grab_executor(clothes_jacket_2047)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_jacket_2047)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(couch_352)
Robot find: mat_401, remote_control_2052, clothes_jacket_2047, pillow_405, cat_2055, drawing_400, pillow_406, hairbrush_2002, vacuum_cleaner_2070, Robot is close to the couch_352. Robot is close to the mat_401. 
##############################
From agent.py
exp(clothes_jacket_2047, couch_352)
Find clothes_jacket_2047. 
##############################
From agent.py-> find a plan in act()
walk_executor(clothes_jacket_2047)obs(clothes_jacket_2047, Check if it is the clothes jacket we are looking for)grab_executor(clothes_jacket_2047)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_jacket_2047)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(clothes_jacket_2047)
Robot find: Robot is close to the couch_352. Robot is close to the clothes_jacket_2047. 
##############################
From agent.py
obs(clothes_jacket_2047, Check if it is the clothes jacket we are looking for)
Get this information:  clothes_jacket_2047 is close to couch_352. clothes_jacket_2047 is close to character_65. clothes_jacket_2047 is on couch_352. clothes_jacket_2047 is inside home_office_319. clothes_jacket_2047 is DIRTY.
##############################
From agent.py
grab_executor(clothes_jacket_2047)
Robot find: Robot is close to the couch_352. Robot is close to the clothes_jacket_2047. Grabbing clothes_jacket_2047 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: towel_rack_31, towel_rack_32, towel_rack_34, Robot is close to the clothes_jacket_2047. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the clothes_jacket_2047. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
wash_executor(clothes_jacket_2047)
Robot find: Robot is close to the clothes_jacket_2047. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. clothes_jacket_2047 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the clothes_jacket_2047. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_jacket_into_washing_machine(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)
        # Place the jacket inside the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve_once closed(washing_machine)
        # Close the washing machine door
        achieve_once is_on(washing_machine) 
        # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2047 
        # Select the jacket with ID 2047

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine

        load_jacket_into_washing_machine(jacket, washing_machine)
        start_washing_machine(washing_machine)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_jacket_into_washing_machine(jacket:item, washing_machine:item):
    body:
        achieve_once inside(jacket, washing_machine)
        # Place the jacket inside the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve_once closed(washing_machine)
        # Close the washing machine door
        achieve_once is_on(washing_machine) 
        # Turn on the washing machine

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket) and id[jacket] == 2047 
        # Select the jacket with ID 2047

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine

        load_jacket_into_washing_machine(jacket, washing_machine)
        start_washing_machine(washing_machine)

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2007)open_executor(washing_machine_2007)putin_executor(clothes_jacket_2047, washing_machine_2007)close_executor(washing_machine_2007)plugin_executor(washing_machine_2007)switchon_executor(washing_machine_2007)
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_jacket_2047. Robot is close to the washing_machine_2007. 
##############################
From agent.py
open_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_jacket_2047. Robot is close to the washing_machine_2007. washing_machine_2007 is opened. 
##############################
From agent.py
putin_executor(clothes_jacket_2047, washing_machine_2007)
Robot find: Robot is close to the clothes_jacket_2047. Robot is close to the washing_machine_2007. clothes_jacket_2047 is close washing_machine_2007. clothes_jacket_2047 is inside washing_machine_2007. washing_machine_2007 is close clothes_jacket_2047. clothes_jacket_2047 released by right hand. 
##############################
From agent.py
close_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is closed. 
##############################
From agent.py
plugin_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is plugged in. 
##############################
From agent.py
switchon_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Hand wash the jacket, then wash it by washing machine.
Action History:
['walk_executor(closetdrawer_143)', 'walk_executor(closetdrawer_143)', 'walk_executor(closetdrawer_143)', 'walk_executor(closetdrawer_143)', 'walk_executor(closetdrawer_143)', 'walk_executor(closetdrawer_143)', 'walk_executor(couch_352)', 'walk_executor(clothes_jacket_2047)', 'grab_executor(clothes_jacket_2047)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'wash_executor(clothes_jacket_2047)', 'switchoff_executor(faucet_43)', 'walk_executor(washing_machine_2007)', 'open_executor(washing_machine_2007)', 'putin_executor(clothes_jacket_2047, washing_machine_2007)', 'close_executor(washing_machine_2007)', 'plugin_executor(washing_machine_2007)', 'switchon_executor(washing_machine_2007)']
Time info:
Time consume: 171 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 51
goal generate times: 7
goal correct times: 0
action_num: 19

Task complete rate:
1
Scene_id: 0
##############################
