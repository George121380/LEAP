From agent.py
Reset goals: The sub-goals are: 
['Iron the pair of skirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_skirt_2088_around_basket_for_clothes_2006(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_skirt,basket_for_clothes_instance)
        else:
            exp(clothes_skirt,basket_for_clothes_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior prepare_skirt_for_ironing(skirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(skirt, ironing_board) # Place the skirt on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Turn on the iron

behavior iron_skirt(skirt:item, iron:item):
    body:
        achieve clean(skirt) # Iron the skirt

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        prepare_skirt_for_ironing(skirt, ironing_board, iron)
        iron_skirt(skirt, iron)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior prepare_skirt_for_ironing(skirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(skirt, ironing_board) # Place the skirt on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Turn on the iron

behavior iron_skirt(skirt:item, iron:item):
    body:
        achieve clean(skirt) # Iron the skirt

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        prepare_skirt_for_ironing(skirt, ironing_board, iron)
        iron_skirt(skirt, iron)

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)exp(clothes_skirt_2088, basket_for_clothes_2006)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(ironing_board_2074)put_executor(clothes_skirt_2088, ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_skirt_2088)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Robot find: clothes_pants_2085, clothes_shirt_2086, clothes_socks_2087, clothes_skirt_2088, towel_rack_31, towel_rack_33, towel_rack_32, towel_rack_34, mat_22, Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
exp(clothes_skirt_2088, basket_for_clothes_2006)
Find clothes_skirt_2088. 
##############################
From agent.py-> find a plan in act()
grab_executor(clothes_skirt_2088)walk_executor(ironing_board_2074)put_executor(clothes_skirt_2088, ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_skirt_2088)switchoff_executor(faucet_43)
##############################
From agent.py
grab_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. Grabbing clothes_skirt_2088 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: iron_2089, Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. 
##############################
From agent.py
put_executor(clothes_skirt_2088, ironing_board_2074)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. ironing_board_2074 is close clothes_skirt_2088. clothes_skirt_2088 is close ironing_board_2074. clothes_skirt_2088 is on ironing_board_2074. clothes_skirt_2088 released by right hand. 
##############################
From agent.py
exp(iron_2089, ironing_board_2074)
Find iron_2089. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_skirt_2088)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. 
##############################
From agent.py
plugin_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. iron_2089 is plugged in. 
##############################
From agent.py
switchon_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. iron_2089 is turned on. 
##############################
From agent.py
walk_executor(clothes_skirt_2088)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the clothes_skirt_2088. 
##############################
From agent.py
grab_executor(clothes_skirt_2088)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the clothes_skirt_2088. Grabbing clothes_skirt_2088 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
wash_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. clothes_skirt_2088 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to iron the skirt after preparing it by washing it and plugging in the iron. Make sure to perform the action of ironing the skirt.
##############################
From agent.py
Human Instruction: You need to iron the skirt after preparing it by washing it and plugging in the iron. Make sure to perform the action of ironing the skirt.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2006.
Action 2: look for clothes_skirt_2088 around basket_for_clothes_2006.
Action 3: Grab clothes_skirt_2088.
Action 4: Walk to ironing_board_2074.
Action 5: Put clothes_skirt_2088 on ironing_board_2074.
Action 6: look for iron_2089 around ironing_board_2074.
Action 7: Walk to iron_2089.
Action 8: Plug in iron_2089.
Action 9: Switch on iron_2089.
Action 10: Walk to clothes_skirt_2088.
Action 11: Grab clothes_skirt_2088.
Action 12: Walk to faucet_43.
Action 13: Switch on faucet_43.
Action 14: Wash clothes_skirt_2088.
Action 15: Switch off faucet_43.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior plug_in_iron(iron:item):
    body:
        achieve plugged(iron)

behavior switch_on_iron(iron:item):
    body:
        achieve is_on(iron)

behavior wash_skirt(skirt:item, faucet:item):
    body:
        achieve_once inhand(skirt)
        achieve is_on(faucet)
        achieve clean(skirt)
        achieve has_water(skirt)

behavior iron_skirt(skirt:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board) # Place the skirt on the ironing board
        achieve_once clean(skirt) # Ensure the skirt is clean

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2088
        # Select the skirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2074
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and id[iron] == 2089
        # Select the iron

        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 43
        # Select the faucet

        plug_in_iron(iron)
        switch_on_iron(iron)
        wash_skirt(skirt, faucet)
        iron_skirt(skirt, ironing_board)
 
#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior plug_in_iron(iron:item):
    body:
        achieve plugged(iron)

behavior switch_on_iron(iron:item):
    body:
        achieve is_on(iron)

behavior wash_skirt(skirt:item, faucet:item):
    body:
        achieve_once inhand(skirt)
        achieve is_on(faucet)
        achieve clean(skirt)
        achieve has_water(skirt)

behavior iron_skirt(skirt:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board) # Place the skirt on the ironing board
        achieve_once clean(skirt) # Ensure the skirt is clean

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2088
        # Select the skirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2074
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and id[iron] == 2089
        # Select the iron

        bind faucet: item where:
            is_faucet(faucet) and id[faucet] == 43
        # Select the faucet

        plug_in_iron(iron)
        switch_on_iron(iron)
        wash_skirt(skirt, faucet)
        iron_skirt(skirt, ironing_board)
 
##############################
From agent.py-> find a plan in act()
switchon_executor(faucet_43)walk_executor(ironing_board_2074)put_executor(clothes_skirt_2088, ironing_board_2074)
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. 
##############################
From agent.py
put_executor(clothes_skirt_2088, ironing_board_2074)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the ironing_board_2074. clothes_skirt_2088 is close ironing_board_2074. clothes_skirt_2088 is on ironing_board_2074. clothes_skirt_2088 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to perform the action of ironing the skirt. The skirt has been washed and placed on the ironing board, and the iron is plugged in and turned on, but the action of ironing the skirt has not been completed.
##############################
From agent.py
Human Instruction: You need to perform the action of ironing the skirt. The skirt has been washed and placed on the ironing board, and the iron is plugged in and turned on, but the action of ironing the skirt has not been completed.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2006.
Action 2: look for clothes_skirt_2088 around basket_for_clothes_2006.
Action 3: Grab clothes_skirt_2088.
Action 4: Walk to ironing_board_2074.
Action 5: Put clothes_skirt_2088 on ironing_board_2074.
Action 6: look for iron_2089 around ironing_board_2074.
Action 7: Walk to iron_2089.
Action 8: Plug in iron_2089.
Action 9: Switch on iron_2089.
Action 10: Walk to clothes_skirt_2088.
Action 11: Grab clothes_skirt_2088.
Action 12: Walk to faucet_43.
Action 13: Switch on faucet_43.
Action 14: Wash clothes_skirt_2088.
Action 15: Switch off faucet_43.
Action 16: Switch on faucet_43.
Action 17: Walk to ironing_board_2074.
Action 18: Put clothes_skirt_2088 on ironing_board_2074.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_the_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)
        # Ensure the skirt is on the ironing board
        achieve_once is_on(iron)
        # Ensure the iron is turned on

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_the_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation

behavior iron_skirt(skirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(skirt, ironing_board) # Ensure the skirt is on the ironing board
        achieve is_on(iron) # Make sure the iron is on
        # Perform ironing action

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt, assumed to be skirt_2088

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2074
        # Select the ironing board with ID 2074

        bind iron: item where:
            is_iron(iron) and id[iron] == 2089
        # Select the iron with ID 2089

        iron_skirt(skirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_mouse_166_around_kitchen_counter_230(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(mouse,kitchen_counter_instance)
        else:
            exp(mouse,kitchen_counter_instance)
    eff:
        unknown[mouse]=False
        close[mouse,kitchen_counter_instance]=True
        close[kitchen_counter_instance,mouse]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt: item, iron: item, ironing_board: item):
    body:
        achieve_once on(skirt, ironing_board)
        achieve is_on(iron)
        # Ensure the iron is on while the skirt is on the ironing board

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the pluggedin iron that is on

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py
Reset goals: The sub-goals are: 
['Iron a pair of skirt.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2088
        # Select the skirt with ID 2088

        bind ironing_board : item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2074
        # Select the ironing board with ID 2074

        bind iron: item where:
            is_iron(iron) and id[iron] == 2089
        # Select the iron with ID 2089

        achieve on(skirt, ironing_board)
        # Ensure the skirt is on the ironing board

        achieve plugged(iron)
        # Ensure the iron is plugged in

        achieve is_on(iron)
        # Ensure the iron is turned on

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt: item, iron: item, ironing_board: item):
    body:
        achieve_once on(skirt, ironing_board)
        # Place the skirt on the ironing board
        achieve plugged(iron)
        # Ensure the iron is plugged
        achieve is_on(iron)
        # Ensure the iron is turned on
        achieve clean(skirt)
        # Ensure the skirt is ironed and not wrinkled

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2088
        # Select the skirt with ID 2088

        bind iron: item where:
            is_iron(iron) and id[iron] == 2089
        # Select the iron with ID 2089

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2074
        # Select the ironing board with ID 2074

        iron_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_cheese_2016_around_fridge_289(food_cheese:item):
    goal: not unknown(food_cheese)
    body:
        assert is_food_cheese(food_cheese)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_cheese,fridge_instance)
        else:
            exp(food_cheese,fridge_instance)
    eff:
        unknown[food_cheese]=False
        close[food_cheese,fridge_instance]=True
        close[fridge_instance,food_cheese]=True
    

behavior find_clothes_dress_2044_around_closetdrawer_150(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==150
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_dress,closetdrawer_instance)
        else:
            exp(clothes_dress,closetdrawer_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_dress]=True
    

behavior find_hanger_142_around_closetdrawer_150(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==150
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(hanger,closetdrawer_instance)
        else:
            exp(hanger,closetdrawer_instance)
    eff:
        unknown[hanger]=False
        close[hanger,closetdrawer_instance]=True
        close[closetdrawer_instance,hanger]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board) # Ensure the skirt is on the ironing board
        achieve is_on(iron) # Ensure the iron is on
        # Proceed to iron the skirt

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_skirt(skirt, iron, ironing_board)
        # Iron the skirt

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['Iron the pair of skirt.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(skirt, ironing_board) # Place the skirt on the ironing board
        achieve is_on(iron) # Ensure the iron is on
        achieve close_char(char, iron) # Ensure the character is close to the iron, indicating readiness to iron the skirt

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_skirt(skirt, ironing_board, iron)
        # Iron the skirt placed on the ironing board
 
#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior iron_skirt(skirt:item, ironing_board:item, iron:item):
    body:
        achieve_once on(skirt, ironing_board) # Place the skirt on the ironing board
        achieve is_on(iron) # Ensure the iron is on
        achieve close_char(char, iron) # Ensure the character is close to the iron, indicating readiness to iron the skirt

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_skirt(skirt, ironing_board, iron)
        # Iron the skirt placed on the ironing board
 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2089)
##############################
From agent.py
walk_executor(iron_2089)
Robot find: Robot is close to the ironing_board_2074. Robot is close to the iron_2089. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to perform the actual action of ironing the skirt, as it has not been done yet. The skirt is placed on the ironing board, and the iron is plugged in and turned on, but you need to ensure you execute the action of ironing the skirt itself.
##############################
From agent.py
Human Instruction: You need to perform the actual action of ironing the skirt, as it has not been done yet. The skirt is placed on the ironing board, and the iron is plugged in and turned on, but you need to ensure you execute the action of ironing the skirt itself.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2006.
Action 2: look for clothes_skirt_2088 around basket_for_clothes_2006.
Action 3: Grab clothes_skirt_2088.
Action 4: Walk to ironing_board_2074.
Action 5: Put clothes_skirt_2088 on ironing_board_2074.
Action 6: look for iron_2089 around ironing_board_2074.
Action 7: Walk to iron_2089.
Action 8: Plug in iron_2089.
Action 9: Switch on iron_2089.
Action 10: Walk to clothes_skirt_2088.
Action 11: Grab clothes_skirt_2088.
Action 12: Walk to faucet_43.
Action 13: Switch on faucet_43.
Action 14: Wash clothes_skirt_2088.
Action 15: Switch off faucet_43.
Action 16: Switch on faucet_43.
Action 17: Walk to ironing_board_2074.
Action 18: Put clothes_skirt_2088 on ironing_board_2074.
Action 19: Walk to iron_2089.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2083_around_kitchen_counter_230(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

behavior find_towel_2059_around_towel_rack_34(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==34
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#exp_behavior_end

#goal_representation

behavior iron_clothes(clothes_skirt: item, ironing_board: item, iron: item):
    body:
        achieve_once on(clothes_skirt, ironing_board) # Place the skirt on the ironing board
        achieve_once is_on(iron) # Ensure the iron is turned on
        achieve_once plugged(iron) # Ensure the iron is plugged in

behavior __goal__():
    body:
        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt)
        # Select the clothes skirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_clothes(clothes_skirt, ironing_board, iron) # Iron the clothes skirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_dress_2044_around_closetdrawer_150(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==150
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_dress,closetdrawer_instance)
        else:
            exp(clothes_dress,closetdrawer_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_dress]=True
    

behavior find_clothes_gloves_2046_around_closetdrawer_150(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==150
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_gloves,closetdrawer_instance)
        else:
            exp(clothes_gloves,closetdrawer_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_gloves]=True
    

behavior find_clothes_scarf_2048_around_closetdrawer_150(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==150
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_scarf,closetdrawer_instance)
        else:
            exp(clothes_scarf,closetdrawer_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_scarf]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board)
        achieve_once is_on(iron)
        achieve_once plugged(iron) # Ensure the iron is plugged in and turned on

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron that is plugged in and turned on

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_skirt(skirt:item, iron:item, ironing_board:item):
    body:
        achieve_once on(skirt, ironing_board) # Ensure the skirt is on the ironing board
        achieve_once plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is turned on

behavior __goal__():
    body:
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt that needs to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_skirt(skirt, iron, ironing_board)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
Task Summary:
Task Goal:
Directly iron a pair of skirt.
Action History:
['walk_executor(basket_for_clothes_2006)', 'grab_executor(clothes_skirt_2088)', 'walk_executor(ironing_board_2074)', 'put_executor(clothes_skirt_2088, ironing_board_2074)', 'walk_executor(iron_2089)', 'plugin_executor(iron_2089)', 'switchon_executor(iron_2089)', 'walk_executor(clothes_skirt_2088)', 'grab_executor(clothes_skirt_2088)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'wash_executor(clothes_skirt_2088)', 'switchoff_executor(faucet_43)', 'switchon_executor(faucet_43)', 'walk_executor(ironing_board_2074)', 'put_executor(clothes_skirt_2088, ironing_board_2074)', 'walk_executor(iron_2089)']
Time info:
Time consume: 175 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 47
goal generate times: 12
goal correct times: 0
action_num: 17

Task complete rate:
Keystate: k1 - Requires: 3 steps
Action Completion Rate: 0.0
Scene_id: 0
##############################
