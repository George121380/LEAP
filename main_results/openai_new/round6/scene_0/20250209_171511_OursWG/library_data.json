[
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "1. Find a table in the dining room.",
        "cdl": " \ndef is_table_in_dining_room(table:item):\n    # Function to check if a table is in the dining room\n    symbol is_in_dining_room=exists room: item : (is_dining_room(room) and inside(table, room))\n    return is_in_dining_room\n\nbehavior __goal__():\n    body:\n        if exists table: item : (is_table(table) and is_table_in_dining_room(table)):\n            # If we have already found the table in the dining room, we can directly approach it\n            bind table: item where:\n                is_table(table) and is_table_in_dining_room(table)\n            achieve close_char(char, table)\n\n        else:\n            # Check all tables in the scene that have not been visited\n            foreach table: item:\n                if is_table(table) and not visited(table):\n                    observe(table,\"Check if the table is in the dining room and is empty for placement\")\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "2. Place the milk, turkey, egg, fish, and chicken on the table.",
        "cdl": "\nbehavior place_on_table(item:item, table:item):\n    body:\n        achieve_once on(item, table)\n\nbehavior __goal__():\n    body:\n        bind table: item where:\n            is_table(table) and id[table]==226\n        # Select table with ID 226\n\n        bind milk: item where:\n            is_milk(milk)\n        # Select milk\n\n        bind turkey: item where:\n            is_food_turkey(turkey)\n        # Select turkey\n\n        bind egg: item where:\n            is_food_egg(egg)\n        # Select egg\n\n        bind fish: item where:\n            is_food_fish(fish)\n        # Select fish\n\n        bind chicken: item where:\n            is_food_chicken(chicken)\n        # Select chicken\n\n        place_on_table(milk, table)\n        place_on_table(turkey, table)\n        place_on_table(egg, table)\n        place_on_table(fish, table)\n        place_on_table(chicken, table)\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "1. Find the basket with clothes.",
        "cdl": "\nbehavior find_basket_for_clothes():\n    body:\n        foreach basket: item:\n            if is_basket_for_clothes(basket) and not visited(basket):\n                observe(basket, \"Determine if this is the basket for clothes\") \n\nbehavior __goal__():\n    body:\n        find_basket_for_clothes()\n "
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "2. Load the clothes into the washing machine and start the wash cycle.",
        "cdl": " \nbehavior load_clothes(clothes:item, washing_machine:item):\n    body:\n        achieve_once inside(clothes, washing_machine)\n        # Load the clothes into the washing machine\n\nbehavior start_wash_cycle(washing_machine:item):\n    body:\n        achieve_once plugged(washing_machine)\n        achieve_once closed(washing_machine)\n        achieve_once is_on(washing_machine)\n        # Ensure the washing machine is plugged in, closed, and turned on to start the wash cycle\n\nbehavior __goal__():\n    body:\n        bind basket_for_clothes: item where:\n            is_basket_for_clothes(basket_for_clothes)\n        # Select the basket for clothes\n\n        bind washing_machine: item where:\n            is_washing_machine(washing_machine)\n        # Select a washing machine\n\n        foreach c: item:\n            if is_clothes(c) and inside(c, basket_for_clothes):\n                load_clothes(c, washing_machine)\n                # Load each clothing item from the basket into the washing machine\n\n        start_wash_cycle(washing_machine)\n        # Start the wash cycle of the washing machine\n"
    },
    {
        "task_name": "Change TV channel",
        "source_sub_task": "Turn on the TV by touching the remote control.",
        "cdl": " \nbehavior turn_on_tv(remote_control:item, television:item):\n    body:\n        achieve_once close_char(char, remote_control)\n        # Move character close to the remote control\n        touch(remote_control)\n        # Touch the remote control to turn on the TV\n\nbehavior __goal__():\n    body:\n        bind remote_control: item where:\n            is_remote_control(remote_control)\n        # Select a remote control\n\n        bind television: item where:\n            is_television(television)\n        # Select a television\n\n        turn_on_tv(remote_control, television)\n        # Turn on the television using the remote control\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "1. Locate the basket containing the clothes.",
        "cdl": "\nbehavior locate_basket_for_clothes():\n    body:\n        foreach basket: item:\n            if is_basket_for_clothes(basket) and not visited(basket):\n                observe(basket, \"Determine if this is the basket for clothes\")\n\nbehavior __goal__():\n    body:\n        locate_basket_for_clothes()\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "2. Put the clothes from the basket into the washing machine.",
        "cdl": "\nbehavior put_clothes_in_washing_machine(clothes:item, washing_machine:item):\n    body:\n        achieve_once inside(clothes, washing_machine)\n        # Place clothes inside the washing machine\n\nbehavior __goal__():\n    body:\n        bind basket_for_clothes: item where:\n            is_basket_for_clothes(basket_for_clothes)\n        # Select the basket containing clothes\n\n        bind washing_machine: item where:\n            is_washing_machine(washing_machine)\n        # Select a washing machine\n\n        foreach c: item:\n            if is_clothes(c) and inside(c, basket_for_clothes):\n                put_clothes_in_washing_machine(c, washing_machine)\n                # Place each clothing item from the basket into the washing machine\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "3. Add soap to the washing machine.",
        "cdl": " \nbehavior add_soap_to_washing_machine(soap:item, washing_machine:item):\n    body:\n        achieve_once inside(soap, washing_machine)\n\nbehavior __goal__():\n    body:\n        bind soap: item where:\n            is_soap(soap)\n        # Select soap\n\n        bind washing_machine: item where:\n            is_washing_machine(washing_machine)\n        # Select a washing machine\n\n        add_soap_to_washing_machine(soap, washing_machine)\n        # Add soap to the washing machine\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "4. Run the washing machine to wash the clothes.",
        "cdl": "\nbehavior start_washing_machine(washing_machine:item):\n    body:\n        achieve_once plugged(washing_machine)\n        # Ensure the washing machine is plugged in\n        achieve_once closed(washing_machine)\n        # Ensure that the washing machine door is closed\n        achieve_once is_on(washing_machine)\n        # Turn on the washing machine to start the wash cycle\n\nbehavior __goal__():\n    body:\n        bind washing_machine: item where:\n            is_washing_machine(washing_machine)\n        # Select the washing machine\n        \n        start_washing_machine(washing_machine)\n        # Perform actions to run the washing machine\n"
    },
    {
        "task_name": "Clean the bathroom",
        "source_sub_task": "Clean the bathroom sink directly.",
        "cdl": " \nbehavior scrub_sink(sink:item):\n    body:\n        scrub(sink)\n\nbehavior rinse_sink(sink:item):\n    body:\n        rinse(sink)\n\nbehavior __goal__():\n    body:\n        bind sink: item where:\n            is_sink(sink) and id[sink]==42\n        # Select sink with ID 42\n\n        scrub_sink(sink) # Scrub the sink\n\n        rinse_sink(sink) # Rinse the sink\n"
    },
    {
        "task_name": "Turn on light",
        "source_sub_task": "1. Identify all rooms in the household.",
        "cdl": " \nbehavior identify_rooms():\n    body:\n        foreach room: item:\n            if is_bathroom(room) or is_bedroom(room) or is_dining_room(room) or is_home_office(room):\n                if not visited(room):\n                    observe(room, \"Identify the room and record its type\")\n\nbehavior __goal__():\n    body:\n        identify_rooms()\n"
    },
    {
        "task_name": "Turn on light",
        "source_sub_task": "2. Ensure at least one light is on in each identified room.",
        "cdl": " \ndef is_light_on_in_room(room:item):\n    # Function to check if there is at least one light on in the specified room\n    symbol light_on=exists light: item : (is_light(light) and inside(light, room) and is_on(light))\n    return light_on\n\nbehavior ensure_light_in_room(room:item):\n    body:\n        foreach light: item:\n            if is_light(light) and inside(light, room) and not is_on(light):\n                achieve_once is_on(light)\n\nbehavior __goal__():\n    body:\n        foreach room: item:\n            if not is_light_on_in_room(room):\n                ensure_light_in_room(room)\n"
    },
    {
        "task_name": "Wash windows",
        "source_sub_task": "1. Identify all the windows in the house.",
        "cdl": " \ndef is_a_window(x:item):\n    # Function to determine if an item is a window\n    return is_window(x)\n\nbehavior identify_windows():\n    body:\n        foreach window: item:\n            if is_a_window(window) and not visited(window):\n                observe(window, \"Identify and confirm this is a window\")\n\nbehavior __goal__():\n    body:\n        identify_windows()\n"
    },
    {
        "task_name": "Wash windows",
        "source_sub_task": "2. Wipe each window with a towel.",
        "cdl": "\nbehavior wipe_window(window:item, towel:item):\n    body:\n        achieve_once inhand(towel) # Hold the towel to wipe the window\n        achieve clean(window) # Ensure the window is clean\n\nbehavior __goal__():\n    body:\n        bind towel: item where:\n            is_towel(towel)\n        # Select the towel\n\n        foreach window: item:\n            if is_window(window):\n                achieve open(window) # Ensure each window is open\n                wipe_window(window, towel) # Wipe each window with the towel\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "1. Fry the steak.",
        "cdl": " \nbehavior fry_steak(stove:item, fryingpan:item, steak:item, oil:item):\n    body:\n        achieve_once on(fryingpan, stove)\n        # Place the frying pan on the stove\n        achieve_once inside(oil, fryingpan)\n        # Add oil to the frying pan\n        achieve_once inside(steak, fryingpan)\n        # Place the steak inside the frying pan\n        achieve is_on(stove) \n        # Ensure the stove is on for frying\n\nbehavior __goal__():\n    body:\n        bind stove: item where:\n            is_stove(stove)\n        # Select the stove\n\n        bind fryingpan: item where:\n            is_fryingpan(fryingpan)\n        # Select the frying pan\n\n        bind steak: item where:\n            is_food_steak(steak)\n        # Select the steak\n\n        bind oil: item where:\n            is_oil(oil)\n        # Select the oil\n\n        fry_steak(stove, fryingpan, steak, oil)\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "2. Cut the steak.",
        "cdl": "\nbehavior cut_steak(steak:item, knife:item, cutting_board:item):\n    body:\n        achieve_once on(steak, cutting_board) \n        # Place the steak on the cutting board\n        achieve_once inhand(knife)\n        # Hold the knife to cut the steak\n        achieve cut(steak)\n        # Cut the steak\n\nbehavior __goal__():\n    body:\n        bind food_steak: item where:\n            is_food_steak(food_steak)\n        # Select the steak\n\n        bind knife: item where:\n            is_knife(knife)\n        # Select a knife\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select a cutting board\n\n        cut_steak(food_steak, knife, cutting_board)\n        # Cut the steak using the knife on the cutting board\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "3. Put the steak on a plate.",
        "cdl": " \nbehavior place_steak_on_plate(steak:item, plate:item):\n    body:\n        achieve_once on(steak, plate)\n\nbehavior __goal__():\n    body:\n        bind steak: item where:\n            is_food_steak(steak) and cut(steak)\n        # Select the cut steak\n\n        bind plate: item where:\n            is_plate(plate)\n        # Select a plate to put the steak onto\n\n        place_steak_on_plate(steak, plate)\n"
    },
    {
        "task_name": "Clean the bathroom",
        "source_sub_task": "Wipe the toilet with toilet paper, then throw the toilet paper into the toilet.",
        "cdl": " \nbehavior clean_toilet_with_paper(toilet:item, toilet_paper:item):\n    body:\n        achieve_once inhand(toilet_paper) # Hold the toilet paper to wipe the toilet\n        wipe(toilet) # Wipe the toilet\n        achieve_once inside(toilet_paper, toilet) # Throw the toilet paper into the toilet\n\nbehavior __goal__():\n    body:\n        bind toilet: item where:\n            is_toilet(toilet) and id[toilet]==37\n        # Select toilet with ID 37\n\n        bind toilet_paper: item where:\n            is_toilet_paper(toilet_paper) and id[toilet_paper]==2090\n        # Select toilet paper with ID 2090\n\n        clean_toilet_with_paper(toilet, toilet_paper)\n        # Clean the toilet with toilet paper and then throw the toilet paper into the toilet\n"
    },
    {
        "task_name": "Listen to music",
        "source_sub_task": "Insert the CD into the CD player and play music.",
        "cdl": " \nbehavior insert_cd_and_play_music(cd:item, cd_player:item):\n    body:\n        achieve_once inside(cd, cd_player)\n        # Insert the CD into the CD player\n        achieve_once is_on(cd_player)\n        # Ensure the CD player is on for playing music\n\nbehavior __goal__():\n    body:\n        bind cd: item where:\n            is_cd(cd)\n        # Select a CD\n\n        bind cd_player: item where:\n            is_cd_player(cd_player)\n        # Select a CD player\n\n        insert_cd_and_play_music(cd, cd_player)\n"
    },
    {
        "task_name": "Prepare breakfast",
        "source_sub_task": "Slice the bread and toast it.",
        "cdl": " \nbehavior slice_bread(bread:item, knife:item, cutting_board:item):\n    body:\n        achieve_once on(bread, cutting_board) # Place the bread on the cutting board\n        achieve_once inhand(knife) # Hold the knife to slice the bread\n        achieve cut(bread) # Slice the bread\n\nbehavior toast_bread(bread:item, toaster:item):\n    body:\n        achieve_once inside(bread, toaster) # Place the sliced bread inside the toaster\n        achieve_once is_on(toaster) # Turn on the toaster to toast the bread\n\nbehavior __goal__():\n    body:\n        bind bread: item where:\n            is_food_bread(bread)\n        # Select the bread\n\n        bind knife: item where:\n            is_knife(knife)\n        # Select a knife\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select a cutting board\n\n        bind toaster: item where:\n            is_toaster(toaster)\n        # Select a toaster\n\n        slice_bread(bread, knife, cutting_board) # Slice the bread using the knife on the cutting board\n        toast_bread(bread, toaster) # Toast the sliced bread in the toaster\n"
    },
    {
        "task_name": "Listen to music",
        "source_sub_task": "Turn on the dvd player.",
        "cdl": " \nbehavior turn_on_dvd_player(dvd_player:item):\n    body:\n        achieve_once is_on(dvd_player)\n\nbehavior __goal__():\n    body:\n        bind dvd_player: item where:\n            is_dvd_player(dvd_player)\n\n        turn_on_dvd_player(dvd_player)\n"
    },
    {
        "task_name": "Turn on light",
        "source_sub_task": "Turn on the lights in the bedroom, then turn on the lights in the bathroom.",
        "cdl": " \nbehavior turn_on_lights_in_room(light:item):\n    body:\n        achieve_once is_on(light) # Turn on the light\n\nbehavior __goal__():\n    body:\n        bind bedroom: item where:\n            is_bedroom(bedroom)\n        # Select the bedroom\n\n        bind bathroom: item where:\n            is_bathroom(bathroom)\n        # Select the bathroom\n\n        bind bedroom_light: item where:\n            is_light(bedroom_light) and inside(bedroom_light, bedroom)\n        # Select light in the bedroom\n\n        bind bathroom_light: item where:\n            is_light(bathroom_light) and inside(bathroom_light, bathroom)\n        # Select light in the bathroom\n\n        turn_on_lights_in_room(bedroom_light)\n        # Turn on the lights in the bedroom\n\n        turn_on_lights_in_room(bathroom_light)\n        # Turn on the lights in the bathroom\n"
    },
    {
        "task_name": "Prepare breakfast",
        "source_sub_task": "Boil the egg.",
        "cdl": " \nbehavior boil_egg(pot:item, stove:item, egg:item):\n    body:\n        achieve_once inside(egg, pot) \n        # Put the egg inside the pot\n        achieve_once has_water(pot) \n        # Ensure the pot has water\n        achieve_once on(pot, stove) \n        # Place the pot on the stove\n        achieve is_on(stove)\n        # Turn on the stove to boil the egg\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot)\n        # Select a pot\n\n        bind stove: item where:\n            is_stove(stove)\n        # Select the stove\n\n        bind egg: item where:\n            is_food_egg(egg)\n        # Select the egg\n\n        boil_egg(pot, stove, egg)\n        # Execute the boiling process for the egg\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "Get a cup of water.",
        "cdl": " \nbehavior fill_cup_with_water(cup:item, faucet:item):\n    body:\n        achieve close_char(char, faucet) # Ensure character is close to the faucet\n        achieve_once is_on(faucet) # Turn on the faucet\n        achieve has_water(cup) # Fill the cup with water\n        achieve_once is_off(faucet) # Turn off the faucet\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup)\n        # Select the cup\n\n        bind faucet: item where:\n            is_faucet(faucet)\n        # Select the faucet\n\n        fill_cup_with_water(cup, faucet)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "1. Find a cup and some milk.",
        "cdl": " \nbehavior locate_cup_and_milk(): \n    body:\n        foreach item: item:\n            if (is_cup(item) or is_milk(item)) and not visited(item):\n                observe(item, \"Determine if this is the cup or milk\") \n\nbehavior __goal__():\n    body:\n        locate_cup_and_milk()\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "2. Pour the milk into the cup.",
        "cdl": " \nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup)\n        # Select a cup\n\n        bind milk: item where:\n            is_milk(milk)\n        # Select milk\n\n        achieve_once inside(milk, cup)\n        # Pour the milk into the cup\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "3. Heat the cup of milk using the microwave.",
        "cdl": " \nbehavior heat_milk_in_microwave(cup:item, microwave:item):\n    body:\n        achieve_once inside(cup, microwave) # Put the cup of milk inside the microwave\n        achieve_once closed(microwave) # Close the microwave door\n        achieve_once is_on(microwave) # Turn on the microwave to heat the milk\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup) and id[cup]==2063\n        # Select the cup with milk\n\n        bind microwave: item where:\n            is_microwave(microwave) and id[microwave]==297\n        # Select the microwave\n\n        heat_milk_in_microwave(cup, microwave)\n        # Heat the milk in the microwave\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "1. Clean the fish and any additional ingredients for the soup.",
        "cdl": " \nbehavior wash_item(item:item):\n    body:\n        wash(item)\n        # Wash the item to clean it\n\nbehavior clean_items():\n    body:\n        foreach item: item:\n            if is_food_fish(item) or is_food_vegetable(item) and dirty(item):\n                wash_item(item)\n\nbehavior __goal__():\n    body:\n        clean_items()\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "2. Prepare the ingredients by cutting them if necessary.",
        "cdl": " \nbehavior prepare_ingredients(knife:item, cutting_board:item, fish:item, veggies:item):\n    body:\n        achieve_once on(fish, cutting_board)\n        # Place the fish on the cutting board\n        achieve_once inhand(knife)\n        # Hold the knife\n        achieve cut(fish)\n        # Cut the fish\n        \n        achieve_once on(veggies, cutting_board)\n        # Place the vegetables on the cutting board\n        achieve cut(veggies)\n        # Cut the vegetables\n\nbehavior __goal__():\n    body:\n        bind knife: item where:\n            is_knife(knife)\n        # Select a knife\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select a cutting board\n\n        bind fish: item where:\n            is_food_fish(fish)\n        # Select fish\n\n        bind veggies: item where:\n            is_food_vegetable(veggies)\n        # Select vegetables\n\n        prepare_ingredients(knife, cutting_board, fish, veggies)\n        # Prepare the ingredients by cutting them\n"
    },
    {
        "task_name": "Pet cat",
        "source_sub_task": "Find your cat and touch it.",
        "cdl": " \nbehavior find_and_touch_cat(cat:item):\n    body:\n        achieve close_char(char, cat) # Move the character to the cats location\n        touch(cat) # Touch the cat\n\nbehavior __goal__():\n    body:\n        foreach item: item:\n            if is_cat(item) and not visited(item):\n                observe(item, \"Find the cat and determine its location\")\n        bind cat: item where:\n            is_cat(cat) and visited(cat)\n        # Select the cat that has been found\n        find_and_touch_cat(cat)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "1. Find a cup and fill it with water.",
        "cdl": " \nbehavior fill_cup_with_water(cup:item, faucet:item):\n    body:\n        achieve_once inhand(cup) # Hold the cup\n        achieve close_char(char, faucet) # Move close to the faucet\n        achieve_once is_on(faucet) # Turn on the faucet\n        achieve_once has_water(cup) # Fill the cup with water\n        achieve_once is_off(faucet) # Turn off the faucet\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup)\n        # Select a cup\n\n        bind faucet: item where:\n            is_faucet(faucet)\n        # Select a faucet\n\n        fill_cup_with_water(cup, faucet)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "2. Slice a kiwi and add the slices to the cup.",
        "cdl": " \nbehavior slice_kiwi_and_add_to_cup(food_kiwi:item, cup:item, knife:item, cutting_board:item):\n    body:\n        achieve_once on(food_kiwi, cutting_board) # Place the kiwi on the cutting board\n        achieve_once inhand(knife) # Hold the knife to slice the kiwi\n        achieve cut(food_kiwi) # Slice the kiwi\n        achieve_once inside(food_kiwi, cup) # Add the sliced kiwi to the cup\n\nbehavior __goal__():\n    body:\n        bind food_kiwi: item where:\n            is_food_kiwi(food_kiwi)\n        # Select the kiwi\n\n        bind cup: item where:\n            is_cup(cup)\n        # Select the cup with water already in it\n\n        bind knife: item where:\n            is_knife(knife)\n        # Select a knife\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select a cutting board\n\n        slice_kiwi_and_add_to_cup(food_kiwi, cup, knife, cutting_board)\n        # Slice the kiwi and add the slices to the cup\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "1. Put the pizza and hamburger on a plate.  ",
        "cdl": " \nbehavior place_food_on_plate(pizza:item, hamburger:item, plate:item):\n    body:\n        achieve_once on(pizza, plate)\n        achieve_once on(hamburger, plate)\n\nbehavior __goal__():\n    body:\n        bind pizza: item where:\n            is_food_pizza(pizza)\n        # Select a pizza\n\n        bind hamburger: item where:\n            is_food_hamburger(hamburger)\n        # Select a hamburger\n\n        bind plate: item where:\n            is_plate(plate)\n        # Select a plate\n\n        place_food_on_plate(pizza, hamburger, plate)\n        # Place the pizza and hamburger on the plate\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "2. Heat the plate in the microwave.  ",
        "cdl": " \nbehavior heat_plate_in_microwave(plate:item, microwave:item):\n    body:\n        achieve_once inside(plate, microwave)\n        # Place the plate inside the microwave\n        achieve_once closed(microwave)\n        # Close the microwave door\n        achieve_once is_on(microwave)\n        # Turn on the microwave to heat the plate\n\nbehavior __goal__():\n    body:\n        bind plate: item where:\n            is_plate(plate) and id[plate]==1000\n        # Select the plate with ID 1000\n\n        bind microwave: item where:\n            is_microwave(microwave) and id[microwave]==297\n        # Select the microwave\n\n        heat_plate_in_microwave(plate, microwave)\n        # Heat the plate in the microwave\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "3. Put the plate on a table in the dining room.",
        "cdl": " \ndef is_dining_room(room:item):\n    # Function to check if an item is a dining room\n    return is_dining_room(room)\n\ndef is_table_in_dining_room(table:item):\n    # Function to check if a table is in the dining room\n    symbol is_in_dining_room=exists room: item : (is_dining_room(room) and inside(table, room))\n    return is_in_dining_room\n\nbehavior put_on_table(item:item, table:item):\n    body:\n        achieve_once on(item, table)\n        # Place the item on the table\n\nbehavior __goal__():\n    body:\n        bind table: item where:\n            is_table(table) and is_table_in_dining_room(table)\n        # Select a table in the dining room\n\n        bind plate: item where:\n            is_plate(plate) and id[plate]==1000\n        # Select plate with ID 1000\n\n        put_on_table(plate, table)\n        # Put the plate on the dining room table\n"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "1. Load the bowls and plates into the dishwasher and start the washing cycle.",
        "cdl": " \nbehavior load_dishwasher(o:item, dishwasher:item):\n    body:\n        achieve_once inside(o, dishwasher)\n        # Place the item inside the dishwasher\n\nbehavior start_dishwasher(dishwasher:item):\n    body:\n        achieve_once closed(dishwasher) # Close the dishwasher door\n        achieve_once is_on(dishwasher) # Turn on the dishwasher\n\nbehavior __goal__():\n    body:\n        bind dishwasher: item where:\n            is_dishwasher(dishwasher)\n        # Select a dishwasher\n\n        foreach o: item:\n        # Load all bowls and plates into the dishwasher\n            if is_plate(o) or is_bowl(o):\n                load_dishwasher(o, dishwasher)\n                \n        start_dishwasher(dishwasher) # Start the dishwasher\n"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "2. Wash the forks by hand.",
        "cdl": "\nbehavior wash_forks():\n    body:\n        foreach fork: item:\n            if is_fork(fork):\n                wash(fork)\n                # Wash each fork by hand\n\nbehavior __goal__():\n    body:\n        wash_forks()\n"
    },
    {
        "task_name": "Prepare breakfast",
        "source_sub_task": "Scramble the egg using the frying pan.",
        "cdl": " \nbehavior scramble_egg(fryingpan:item, egg:item, stove:item, oil:item):\n    body:\n        achieve_once on(fryingpan, stove)\n        # Place the frying pan on the stove\n        achieve_once inside(oil, fryingpan)\n        # Add oil to the frying pan\n        achieve_once inside(egg, fryingpan)\n        # Place the egg inside the frying pan\n        achieve is_on(stove) \n        # Ensure the stove is on for cooking\n\nbehavior __goal__():\n    body:\n        bind fryingpan: item where:\n            is_fryingpan(fryingpan)\n        # Select a frying pan\n\n        bind egg: item where:\n            is_food_egg(egg)\n        # Select the egg\n\n        bind stove: item where:\n            is_stove(stove)\n        # Select the stove\n\n        bind oil: item where:\n            is_oil(oil)\n        # Select the oil\n\n        scramble_egg(fryingpan, egg, stove, oil)\n"
    },
    {
        "task_name": "Pet cat",
        "source_sub_task": "Slice the chicken and give it to the cat.",
        "cdl": " \nbehavior slice_chicken(chicken:item, knife:item, cutting_board:item):\n    body:\n        achieve_once on(chicken, cutting_board) # Place the chicken on the cutting board\n        achieve_once inhand(knife) # Hold the knife to slice the chicken\n        achieve cut(chicken) # Slice the chicken\n\nbehavior place_chicken_near_cat(chicken:item, cat:item):\n    body:\n        achieve_once close(chicken, cat) # Place the sliced chicken close to the cat\n\nbehavior __goal__():\n    body:\n        bind chicken: item where:\n            is_food_chicken(chicken)\n        # Select the chicken\n\n        bind knife: item where:\n            is_knife(knife)\n        # Select a knife\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select a cutting board\n\n        bind cat: item where:\n            is_cat(cat)\n        # Select the cat\n\n        slice_chicken(chicken, knife, cutting_board)\n        # Slice the chicken using the knife on the cutting board\n\n        place_chicken_near_cat(chicken, cat)\n        # Place the sliced chicken close to the cat\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "1. Find the book and put it on the table in the home office.",
        "cdl": " \nbehavior place_book_on_table(book:item, table:item):\n    body:\n        achieve_once on(book, table)\n        # Place the book on the table\n\nbehavior __goal__():\n    body:\n        bind bookshelf: item where:\n            is_bookshelf(bookshelf)\n        # Select the bookshelf\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Select the home office\n\n        bind table: item where:\n            is_table(table) and inside(table, home_office)\n        # Select the table within the home office\n\n        bind book: item where:\n            is_book(book)\n        # Select a book\n\n        place_book_on_table(book, table)\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "2. Turn on the light in the home office.",
        "cdl": " \nbehavior turn_on_light_in_room(light:item):\n    body:\n        achieve_once is_on(light)\n\nbehavior __goal__():\n    body:\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Select the home office\n\n        bind light: item where:\n            is_light(light) and inside(light, home_office)\n        # Select the light in the home office\n\n        turn_on_light_in_room(light)\n        # Turn on the light in the home office\n "
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "Cut the chicken into pieces, then put it back in the fridge.",
        "cdl": " \nbehavior cut_chicken(chicken:item, knife:item, cutting_board:item):\n    body:\n        achieve_once on(chicken, cutting_board)\n        # Place the chicken on the cutting board\n        achieve_once inhand(knife)\n        # Hold the knife to cut the chicken\n        achieve cut(chicken)\n        # Cut the chicken into pieces\n\nbehavior store_in_fridge(chicken:item, fridge:item):\n    body:\n        achieve_once inside(chicken, fridge)\n        # Place the cut chicken inside the fridge\n\nbehavior close_the_fridge_door(fridge:item):\n    body:\n        achieve_once closed(fridge)\n        # Ensure the fridge door is closed\n\nbehavior __goal__():\n    body:\n        bind chicken: item where:\n            is_food_chicken(chicken)\n        # Select the chicken\n\n        bind knife: item where:\n            is_knife(knife)\n        # Select a knife\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select a cutting board\n\n        bind fridge: item where:\n            is_fridge(fridge)\n        # Select a fridge\n\n        cut_chicken(chicken, knife, cutting_board)\n        # Cut the chicken using the knife on the cutting board\n\n        store_in_fridge(chicken, fridge)\n        # Store the cut chicken in the fridge\n\n        close_the_fridge_door(fridge)\n        # Close the fridge door\n"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "1. Find all the bowls and plates.",
        "cdl": " \ndef has_bowls_and_plates(obj:item):\n    # Function to check if the specified item is either a bowl or a plate\n    symbol has_bowls_and_plates= exists o: item : (is_bowl(o) or is_plate(o))\n    return has_bowls_and_plates\n\nbehavior __goal__():\n    body:\n        foreach obj: item:\n            if (is_bowl(obj) or is_plate(obj)) and not visited(obj):\n                observe(obj, \"Find all bowls and plates\")\n"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "2. Wash the bowls and plates using the dishwasher.",
        "cdl": " \nbehavior load_dishwasher(o:item, dishwasher:item):\n    body:\n        achieve_once inside(o, dishwasher)\n        # Place the item inside the dishwasher\n\nbehavior start_dishwasher(dishwasher:item):\n    body:\n        achieve_once closed(dishwasher) # Close the dishwasher door\n        achieve_once is_on(dishwasher) # Turn on the dishwasher\n\nbehavior __goal__():\n    body:\n        bind dishwasher: item where:\n            is_dishwasher(dishwasher) and id[dishwasher]==1001\n        # Select dishwasher with ID 1001\n        \n        bind bowl_2071: item where:\n            id[bowl_2071]==2071\n        # Select bowl with ID 2071\n\n        bind bowl_2072: item where:\n            id[bowl_2072]==2072\n        # Select bowl with ID 2072\n\n        load_dishwasher(bowl_2071, dishwasher)\n        load_dishwasher(bowl_2072, dishwasher)\n        \n        start_dishwasher(dishwasher)\n"
    },
    {
        "task_name": "Turn on light",
        "source_sub_task": "Turn on the lights in the bathroom.",
        "cdl": " \nbehavior turn_on_light_in_bathroom(light:item):\n    body:\n        achieve_once is_on(light) # Turn on the light\n\nbehavior __goal__():\n    body:\n        bind bathroom: item where:\n            is_bathroom(bathroom)\n        # Select the bathroom\n\n        bind light: item where:\n            is_light(light) and inside(light, bathroom)\n        # Select the light in the bathroom\n\n        turn_on_light_in_bathroom(light)\n        # Turn on the light in the bathroom\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "1. Find milk and eggs, and place them on a table in the dining room.",
        "cdl": " \nbehavior place_on_table(item:item, table:item):\n    body:\n        achieve_once on(item, table)\n\nbehavior __goal__():\n    body:\n        bind milk: item where:\n            is_milk(milk)\n        # Select milk\n\n        bind eggs: item where:\n            is_food_egg(eggs)\n        # Select eggs\n\n        bind dining_room: item where:\n            is_dining_room(dining_room)\n        # Select the dining room\n\n        foreach table: item:\n            if is_table(table) and inside(table, dining_room):\n                place_on_table(milk, table)\n                place_on_table(eggs, table)\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "2. Throw all the items in the fridge into the trashcan.",
        "cdl": " \nbehavior throw_items_in_trash(fridge:item, trashcan:item):\n    body:\n        foreach item: item:\n            if inside(item, fridge):\n                achieve_once inside(item, trashcan)\n\nbehavior close_fidge_door(fridge:item):\n    body:\n        achieve_once closed(fridge)\n\nbehavior __goal__():\n    body:\n        bind fridge: item where:\n            is_fridge(fridge) and id[fridge]==289\n\n        bind trashcan: item where:\n            is_trashcan(trashcan)\n        \n        throw_items_in_trash(fridge, trashcan)\n        close_fidge_door(fridge)\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "3. Put milk and eggs back in the fridge.",
        "cdl": " \nbehavior place_items_back_in_fridge(milk:item, egg:item, fridge:item):\n    body:\n        achieve_once inside(milk, fridge)\n        achieve_once inside(egg, fridge)\n\nbehavior close_the_fridge(fridge:item):\n    body:\n        achieve_once closed(fridge)\n\nbehavior __goal__():\n    body:\n        bind milk: item where:\n            is_milk(milk) and id[milk]==2043\n        # Select milk with ID 2043\n\n        bind egg: item where:\n            is_food_egg(egg) and id[egg]==2020\n        # Select egg with ID 2020\n\n        bind fridge: item where:\n            is_fridge(fridge) and id[fridge]==289\n        # Select fridge with ID 289\n\n        place_items_back_in_fridge(milk, egg, fridge)\n        close_the_fridge(fridge)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "Slice the chicken.",
        "cdl": " \nbehavior slice_chicken(chicken:item, knife:item, cutting_board:item):\n    body:\n        achieve_once on(chicken, cutting_board)\n        # Place the chicken on the cutting board\n        achieve_once inhand(knife)\n        # Hold the knife to slice the chicken\n        achieve cut(chicken)\n        # Slice the chicken\n\nbehavior __goal__():\n    body:\n        bind chicken: item where:\n            is_food_chicken(chicken)\n        # Select the chicken\n\n        bind knife: item where:\n            is_knife(knife)\n        # Select a knife\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select a cutting board\n\n        slice_chicken(chicken, knife, cutting_board)\n        # Slice the chicken using the knife on the cutting board\n"
    },
    {
        "task_name": "Wash windows",
        "source_sub_task": "Open the windows in the bathroom.",
        "cdl": "\nbehavior open_windows_in_bathroom(window:item):\n    body:\n        achieve open(window)\n\nbehavior __goal__():\n    body:\n        bind bathroom: item where:\n            is_bathroom(bathroom)\n        # Select the bathroom\n\n        foreach window: item:\n            if is_window(window) and inside(window, bathroom):\n                open_windows_in_bathroom(window)\n                # Open each window in the bathroom\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "1. Find a lemon and sugar.",
        "cdl": " \nbehavior find_lemon_and_sugar():\n    body:\n        foreach item: item:\n            if (is_food_lemon(item) or is_food_sugar(item)) and not visited(item):\n                observe(item, \"Check if this is the lemon or sugar you need\")\n\nbehavior __goal__():\n    body:\n        find_lemon_and_sugar()\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "2. Cut the lemon and squeeze it into a cup.",
        "cdl": " \nbehavior cut_and_squeeze_lemon(lemon:item, cup:item, knife:item, cutting_board:item):\n    body:\n        achieve_once on(lemon, cutting_board) # Place the lemon on the cutting board\n        achieve_once inhand(knife) # Hold the knife to cut the lemon\n        achieve cut(lemon) # Cut the lemon\n        achieve_once inside(lemon, cup) # Squeeze the lemon juice into the cup\n\nbehavior __goal__():\n    body:\n        bind lemon: item where:\n            is_food_lemon(lemon)\n        # Select the lemon\n\n        bind cup: item where:\n            is_cup(cup)\n        # Select a cup\n\n        bind knife: item where:\n            is_knife(knife)\n        # Select a knife\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select a cutting board\n\n        cut_and_squeeze_lemon(lemon, cup, knife, cutting_board)\n        # Cut the lemon and squeeze it into the cup\n"
    },
    {
        "task_name": "Clean the bathroom",
        "source_sub_task": "1. Find the sink in the bathroom.",
        "cdl": " \ndef is_bathroom_sink(sink:item):\n    # Function to check if the specified item is a sink in the bathroom\n    symbol is_in_bathroom=exists room: item : (is_bathroom(room) and inside(sink, room))\n    return is_in_bathroom\n\nbehavior __goal__():\n    body:\n        if exists sink: item : (is_sink(sink) and is_bathroom_sink(sink)):\n            # If we have already found the sink in the bathroom, we can directly approach it\n            bind sink: item where:\n                is_sink(sink) and is_bathroom_sink(sink)\n            achieve close_char(char, sink)\n\n        else:\n            # Check all sinks in the scene that have not been visited\n            foreach sink: item:\n                if is_sink(sink) and not visited(sink):\n                    observe(sink, \"Locate the sink in the bathroom\")\n"
    },
    {
        "task_name": "Clean the bathroom",
        "source_sub_task": "2. Fill the sink with water.",
        "cdl": "\nbehavior fill_sink_with_water(sink:item, faucet:item):\n    body:\n        achieve close_char(char, faucet)\n        # Move close to the faucet\n        achieve_once is_on(faucet)\n        # Turn on the faucet\n        achieve has_water(sink)\n        # Fill the sink with water\n        achieve_once is_off(faucet)\n        # Turn off the faucet\n\nbehavior __goal__():\n    body:\n        bind sink: item where:\n            is_sink(sink) and id[sink]==42\n        # Select sink with ID 42\n\n        bind faucet: item where:\n            is_faucet(faucet) and close_char(char, sink)\n        # Select the faucet close to the sink\n\n        fill_sink_with_water(sink, faucet)\n"
    },
    {
        "task_name": "Clean the bathroom",
        "source_sub_task": "3. Add soap to the water to make it soapy.",
        "cdl": " \nbehavior add_soap_to_sink(soap:item, sink:item):\n    body:\n        achieve_once inside(soap, sink)\n        # Add soap to the water in the sink to make it soapy\n\nbehavior __goal__():\n    body:\n        bind soap: item where:\n            is_soap(soap)\n        # Select soap\n\n        bind sink: item where:\n            is_sink(sink) and has_water(sink)\n        # Select sink that has water\n\n        add_soap_to_sink(soap, sink)\n"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "1. Put cleaning solution in the dishwasher.",
        "cdl": "behavior add_cleaning_solution(dishwasher:item, cleaning_solution:item): \n    body:\n        achieve_once inside(cleaning_solution, dishwasher)\n\nbehavior __goal__():\n    body:\n        bind dishwasher: item where:\n            is_dishwasher(dishwasher)\n\n        bind cleaning_solution: item where:\n            is_cleaning_solution(cleaning_solution)\n\n        add_cleaning_solution(dishwasher, cleaning_solution)"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "2. Wash the bowls and plates using the dishwasher.",
        "cdl": " \nbehavior load_dishwasher(o:item, dishwasher:item):\n    body:\n        achieve_once inside(o, dishwasher)\n        # Place the item inside the dishwasher\n\nbehavior start_dishwasher(dishwasher:item):\n    body:\n        achieve_once closed(dishwasher) # Close the dishwasher door\n        achieve_once is_on(dishwasher) # Turn on the dishwasher\n\nbehavior __goal__():\n    body:\n        bind dishwasher: item where:\n            is_dishwasher(dishwasher) and id[dishwasher]==1001\n        # Select dishwasher with ID 1001\n        \n        foreach o: item:\n        # Load all bowls and plates into the dishwasher\n            if is_plate(o) or is_bowl(o):\n                load_dishwasher(o, dishwasher)\n                \n        start_dishwasher(dishwasher) # Start the dishwasher\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "1. Find the fridge containing items.",
        "cdl": " \ndef has_items(fridge:item):\n    # Function to check if there are items inside the specified fridge\n    symbol has_items=exists o: item : (inside(o, fridge))\n    return has_items\n\nbehavior __goal__():\n    body:\n        if exists fridge: item : (is_fridge(fridge) and has_items(fridge)):\n            # Check if there is a fridge with items based on available information\n            bind fridge: item where:\n                is_fridge(fridge) and has_items(fridge)\n            achieve close_char(char, fridge)\n\n        else: \n           # If no fridge with items is found, initiate exploration to locate one\n            foreach fridge: item:\n                if is_fridge(fridge) and not visited(fridge):\n                    observe(fridge, \"Check if there are any items in the fridge\")\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "2. Throw all the items from the fridge into the trashcan.",
        "cdl": "behavior throw_items_in_trash(fridge:item, trashcan:item):\n    body:\n        foreach item: item:\n            if inside(item, fridge):\n                achieve_once inside(item, trashcan)\n\nbehavior close_fridge_door(fridge:item):\n    body:\n        achieve_once closed(fridge)\n\nbehavior __goal__():\n    body:\n        bind fridge: item where:\n            is_fridge(fridge) and id[fridge]==289\n\n        bind trashcan: item where:\n            is_trashcan(trashcan)\n        \n        throw_items_in_trash(fridge, trashcan)\n        close_fridge_door(fridge)"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "Use the pot to boil some water.",
        "cdl": " \nbehavior boil_water(pot:item, stove:item):\n    body:\n        achieve_once has_water(pot)\n        # Ensure the pot has water\n        achieve_once on(pot, stove)\n        # Place the pot on the stove\n        achieve is_on(stove)\n        # Turn on the stove to boil the water\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot)\n        # Select a pot\n\n        bind stove: item where:\n            is_stove(stove)\n        # Select a stove\n\n        boil_water(pot, stove)\n        # Execute the process to boil water with the pot on the stove\n"
    },
    {
        "task_name": "Make coffee",
        "source_sub_task": "Make a cup of coffee using the coffee maker.",
        "cdl": "behavior make_coffee_with_coffee_maker(coffee_maker:item, cup:item, coffee_filter:item):\n    body:\n        achieve_once inside(coffee_filter, coffee_maker)\n        # Put the coffee filter into the coffee maker\n        achieve_once inside(cup, coffee_maker)\n        # Place the cup in the coffee makers designated area\n        achieve_once is_on(coffee_maker)\n        # Turn on the coffee maker to brew coffee into the cup\n\nbehavior __goal__():\n    body:\n        bind coffee_maker: item where:\n            is_coffe_maker(coffee_maker)\n        # Select the coffee maker\n\n        bind cup: item where:\n            is_cup(cup)\n        # Select a cup\n\n        bind coffee_filter: item where:\n            is_coffee_filter(coffee_filter)\n        # Select a coffee filter\n\n        make_coffee_with_coffee_maker(coffee_maker, cup, coffee_filter)"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "Boil some rice in a pot.",
        "cdl": " \nbehavior boil_rice_in_pot(pot:item, stove:item, rice:item):\n    body:\n        achieve_once inside(rice, pot)\n        # Place the rice inside the pot\n        achieve_once has_water(pot)\n        # Ensure the pot has water\n        achieve_once on(pot, stove)\n        # Place the pot on the stove\n        achieve is_on(stove)\n        # Turn on the stove to boil the rice\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot)\n        # Select a pot\n\n        bind stove: item where:\n            is_stove(stove)\n        # Select the stove\n\n        bind rice: item where:\n            is_food_rice(rice)\n        # Select the rice\n\n        boil_rice_in_pot(pot, stove, rice)\n        # Execute the boiling process for the rice in the pot\n"
    }
]