From agent.py
Reset goals: The sub-goals are: 
['1. Find a book and put it on the coffee table in the home office.', '2. Open the window in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2066_around_bookshelf_354(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==354
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
behavior place_book_on_coffee_table(book:item, coffee_table:item):
    body:
        achieve_once on(book, coffee_table)

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select a book

        bind coffee_table: item where:
            is_coffee_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table within the home office

        place_book_on_coffee_table(book, coffee_table)
        # Place the book on the coffee table in the home office
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: home_office; available variables: [Variable<coffee_table: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_book_2066_around_bookshelf_354(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==354
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#goal_representation
 
behavior place_book_on_coffee_table(book:item, coffee_table:item):
    body:
        achieve_once on(book, coffee_table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Define the home office

        bind book: item where:
            is_book(book)
        # Select a book

        bind coffee_table: item where:
            is_coffee_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table within the home office

        place_book_on_coffee_table(book, coffee_table)
        # Place the book on the coffee table in the home office


#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior place_book_on_coffee_table(book:item, coffee_table:item):
    body:
        achieve_once on(book, coffee_table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Define the home office

        bind book: item where:
            is_book(book)
        # Select a book

        bind coffee_table: item where:
            is_coffee_table(coffee_table) and inside(coffee_table, home_office)
        # Select the coffee table within the home office

        place_book_on_coffee_table(book, coffee_table)
        # Place the book on the coffee table in the home office


##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_354)open_executor(bookshelf_354)exp(book_2066, bookshelf_354)walk_executor(book_2066)grab_executor(book_2066)walk_executor(coffee_table_2068)put_executor(book_2066, coffee_table_2068)
##############################
From agent.py
walk_executor(bookshelf_354)
Robot find: drawing_402, drawing_403, drawing_404, book_2066, book_2067, Robot is close to the bookshelf_354. 
##############################
From agent.py
open_executor(bookshelf_354)
Robot find: Robot is close to the bookshelf_354. Robot is close to the photoframe_430. bookshelf_354 is opened. 
##############################
From agent.py
exp(book_2066, bookshelf_354)
Find book_2066. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2066)grab_executor(book_2066)walk_executor(coffee_table_2068)put_executor(book_2066, coffee_table_2068)
##############################
From agent.py
walk_executor(book_2066)
Robot find: Robot is close to the bookshelf_354. Robot is close to the book_2066. 
##############################
From agent.py
grab_executor(book_2066)
Robot find: Robot is close to the bookshelf_354. Robot is close to the book_2066. Grabbing book_2066 by right hand. 
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot find: Robot is close to the book_2066. Robot is close to the coffee_table_2068. 
##############################
From agent.py
put_executor(book_2066, coffee_table_2068)
Robot find: Robot is close to the book_2066. Robot is close to the coffee_table_2068. coffee_table_2068 is close book_2066. book_2066 is close coffee_table_2068. book_2066 is on coffee_table_2068. book_2066 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior open_window(window:item):
    body:
        achieve open(window)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select home office

        bind window: item where:
            is_window(window) and inside(window, home_office)
        # Select a window inside the home office

        open_window(window)
        # Open the window in the home office

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior open_window(window:item):
    body:
        achieve open(window)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Select home office

        bind window: item where:
            is_window(window) and inside(window, home_office)
        # Select a window inside the home office

        open_window(window)
        # Open the window in the home office

##############################
From agent.py-> find a plan in act()
walk_executor(window_348)open_executor(window_348)
##############################
From agent.py
walk_executor(window_348)
Robot find: drawing_400, mat_401, pillow_405, Robot is close to the window_348. 
##############################
From agent.py
open_executor(window_348)
Robot find: Robot is close to the window_348. window_348 is opened. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Find a book and put it on the coffe table in home office. Then open the window in the home office.
Action History:
['walk_executor(bookshelf_354)', 'open_executor(bookshelf_354)', 'walk_executor(book_2066)', 'grab_executor(book_2066)', 'walk_executor(coffee_table_2068)', 'put_executor(book_2066, coffee_table_2068)', 'walk_executor(window_348)', 'open_executor(window_348)']
Time info:
Time consume: 57 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 29
goal generate times: 2
goal correct times: 1
action_num: 8

Task complete rate:
Keystate: k1 - Requires: 4 steps
Keystate: k2 - Requires: 0 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
