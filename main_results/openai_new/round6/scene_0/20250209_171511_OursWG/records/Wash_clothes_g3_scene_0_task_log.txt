From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the jacket.', '2. Wash the jacket using the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2073_around_closetdrawer_382(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==382
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(cleaning_solution,closetdrawer_instance)
        else:
            exp(cleaning_solution,closetdrawer_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,closetdrawer_instance]=True
        close[closetdrawer_instance,cleaning_solution]=True
    

behavior find_soap_2054_around_bathroom_counter_41(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(soap,bathroom_counter_instance)
        else:
            exp(soap,bathroom_counter_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_counter_instance]=True
        close[bathroom_counter_instance,soap]=True
    

behavior find_clothes_jacket_2047_around_closetdrawer_382(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==382
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_jacket(jacket:item):
    body:
        achieve_once dirty(jacket)
        # Ensure the jacket is initially dirty
        wash(jacket)
        # Wash the jacket by hand

behavior __goal__():
    body:
        bind jacket: item where:
            is_clothes_jacket(jacket)
        # Select the jacket

        hand_wash_jacket(jacket)
        # Execute the hand wash procedure for the jacket

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_bathroom_counter_41(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==41
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(detergent,bathroom_counter_instance)
        else:
            exp(detergent,bathroom_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_counter_instance]=True
        close[bathroom_counter_instance,detergent]=True
    

behavior find_clothes_jacket_2047_around_closetdrawer_382(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==382
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
def is_bathroom_sink(sink:item):
    # Function to check if the specified item is a sink in the bathroom
    symbol is_in_bathroom=exists room: item : (is_bathroom(room) and inside(sink, room))
    return is_in_bathroom

behavior hand_wash_jacket_in_sink(jacket:item, sink:item):
    body:
        achieve clean(jacket)
        # Wash the jacket by hand until its clean

behavior __goal__():
    body:
        if exists jacket: item : (is_clothes_jacket(jacket) and dirty(jacket)):
            bind jacket: item where:
                is_clothes_jacket(jacket) and dirty(jacket)
            # Select the dirty jacket

            if exists sink: item : (is_sink(sink) and is_bathroom_sink(sink)):
                # If a bathroom sink is found, proceed to wash the jacket
                bind sink: item where:
                    is_sink(sink) and is_bathroom_sink(sink)
                hand_wash_jacket_in_sink(jacket, sink)
            else:
                # Explore to locate the bathroom sink if its not found
                foreach sink: item:
                    if is_sink(sink) and not visited(sink):
                        observe(sink, "Locate the sink in the bathroom")

        else:
           # Explore to locate the dirty jacket if its not found
            foreach jacket: item:
                if is_clothes_jacket(jacket) and not visited(jacket):
                    observe(jacket, "Locate the dirty jacket")

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_bathroom_sink(sink:item):
    # Function to check if the specified item is a sink in the bathroom
    symbol is_in_bathroom=exists room: item : (is_bathroom(room) and inside(sink, room))
    return is_in_bathroom

behavior hand_wash_jacket_in_sink(jacket:item, sink:item):
    body:
        achieve clean(jacket)
        # Wash the jacket by hand until its clean

behavior __goal__():
    body:
        if exists jacket: item : (is_clothes_jacket(jacket) and dirty(jacket)):
            bind jacket: item where:
                is_clothes_jacket(jacket) and dirty(jacket)
            # Select the dirty jacket

            if exists sink: item : (is_sink(sink) and is_bathroom_sink(sink)):
                # If a bathroom sink is found, proceed to wash the jacket
                bind sink: item where:
                    is_sink(sink) and is_bathroom_sink(sink)
                hand_wash_jacket_in_sink(jacket, sink)
            else:
                # Explore to locate the bathroom sink if its not found
                foreach sink: item:
                    if is_sink(sink) and not visited(sink):
                        observe(sink, "Locate the sink in the bathroom")

        else:
           # Explore to locate the dirty jacket if its not found
            foreach jacket: item:
                if is_clothes_jacket(jacket) and not visited(jacket):
                    observe(jacket, "Locate the dirty jacket")

##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_382)exp(clothes_jacket_2047, closetdrawer_382)walk_executor(clothes_jacket_2047)obs(clothes_jacket_2047, Locate the dirty jacket)
##############################
From agent.py
walk_executor(closetdrawer_382)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(clothes_jacket_2047, closetdrawer_382)
Fail to find clothes_jacket_2047 around closetdrawer_382. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_382)exp(clothes_jacket_2047, closetdrawer_382)walk_executor(clothes_jacket_2047)obs(clothes_jacket_2047, Locate the dirty jacket)
##############################
From agent.py
walk_executor(closetdrawer_382)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(clothes_jacket_2047, closetdrawer_382)
Fail to find clothes_jacket_2047 around closetdrawer_382. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_382)exp(clothes_jacket_2047, closetdrawer_382)walk_executor(clothes_jacket_2047)obs(clothes_jacket_2047, Locate the dirty jacket)
##############################
From agent.py
walk_executor(closetdrawer_382)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(clothes_jacket_2047, closetdrawer_382)
Fail to find clothes_jacket_2047 around closetdrawer_382. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_382)exp(clothes_jacket_2047, closetdrawer_382)walk_executor(clothes_jacket_2047)obs(clothes_jacket_2047, Locate the dirty jacket)
##############################
From agent.py
walk_executor(closetdrawer_382)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(clothes_jacket_2047, closetdrawer_382)
Fail to find clothes_jacket_2047 around closetdrawer_382. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_382)exp(clothes_jacket_2047, closetdrawer_382)walk_executor(clothes_jacket_2047)obs(clothes_jacket_2047, Locate the dirty jacket)
##############################
From agent.py
walk_executor(closetdrawer_382)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(clothes_jacket_2047, closetdrawer_382)
Fail to find clothes_jacket_2047 around closetdrawer_382. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_382)exp(clothes_jacket_2047, closetdrawer_382)walk_executor(clothes_jacket_2047)obs(clothes_jacket_2047, Locate the dirty jacket)
##############################
From agent.py
walk_executor(closetdrawer_382)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_jacket_2047 ?
Answer: Robot, please proceed to the home office, denoted as home_office_319. Inside, locate couch_352. clothes_jacket_2047 is situated on top of this couch.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, please proceed to the home office, denoted as home_office_319. Inside, locate couch_352. clothes_jacket_2047 is situated on top of this couch.

The actions you have taken:
Action 1: Walk to closetdrawer_382.
Action 2: look for clothes_jacket_2047 around closetdrawer_382.
Action 3: Walk to closetdrawer_382.
Action 4: look for clothes_jacket_2047 around closetdrawer_382.
Action 5: Walk to closetdrawer_382.
Action 6: look for clothes_jacket_2047 around closetdrawer_382.
Action 7: Walk to closetdrawer_382.
Action 8: look for clothes_jacket_2047 around closetdrawer_382.
Action 9: Walk to closetdrawer_382.
Action 10: look for clothes_jacket_2047 around closetdrawer_382.
Action 11: Walk to closetdrawer_382.

##############################
From agent.py
exp(clothes_jacket_2047, closetdrawer_382)
Fail to find clothes_jacket_2047 around closetdrawer_382. 
##############################
Error record: object of type 'NoneType' has no len()
##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
['walk_executor(closetdrawer_382)', 'walk_executor(closetdrawer_382)', 'walk_executor(closetdrawer_382)', 'walk_executor(closetdrawer_382)', 'walk_executor(closetdrawer_382)', 'walk_executor(closetdrawer_382)']
Time info:
Time consume: 83 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 60
goal generate times: 2
goal correct times: 0
action_num: 6

Task complete rate:
Keystate: k1 - Requires: 9 steps
Action Completion Rate: 0.0
Scene_id: 0
##############################
