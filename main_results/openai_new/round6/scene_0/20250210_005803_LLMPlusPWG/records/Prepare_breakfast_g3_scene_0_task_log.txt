From agent.py
Reset goals: The sub-goals are: 
['Boil egg.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_2069_around_dishwasher_1001(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==1001
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(pot,dishwasher_instance)
        else:
            exp(pot,dishwasher_instance)
    eff:
        unknown[pot]=False
        close[pot,dishwasher_instance]=True
        close[dishwasher_instance,pot]=True
    

behavior find_food_egg_2020_around_fridge_289(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
 
behavior boil_water(pot:item):
    body:
        achieve has_water(pot)
        # Ensure the pot has water

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)
        # Turn on the stove

behavior boil_egg_in_pot(egg:item, pot:item):
    body:
        achieve_once inside(egg, pot)
        # Place the egg inside the pot

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove) # Select a stove available in the scene

        bind pot: item where:
            is_pot(pot) # Select a pot available in the scene
        
        bind egg: item where:
            is_food_egg(egg) # Select an egg available in the scene

        boil_water(pot) # Boil water in the pot
        turn_on_stove(stove) # Turn on the stove
        boil_egg_in_pot(egg, pot) # Put egg in pot with boiling water

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior boil_water(pot:item):
    body:
        achieve has_water(pot)
        # Ensure the pot has water

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)
        # Turn on the stove

behavior boil_egg_in_pot(egg:item, pot:item):
    body:
        achieve_once inside(egg, pot)
        # Place the egg inside the pot

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove) # Select a stove available in the scene

        bind pot: item where:
            is_pot(pot) # Select a pot available in the scene
        
        bind egg: item where:
            is_food_egg(egg) # Select an egg available in the scene

        boil_water(pot) # Boil water in the pot
        turn_on_stove(stove) # Turn on the stove
        boil_egg_in_pot(egg, pot) # Put egg in pot with boiling water

##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_1001)open_executor(dishwasher_1001)exp(pot_2069, dishwasher_1001)walk_executor(pot_2069)open_executor(pot_2069)grab_executor(pot_2069)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(stove_2065)switchon_executor(stove_2065)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_egg_2020, fridge_289)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(pot_2069)putin_executor(food_egg_2020, pot_2069)
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. 
##############################
From agent.py
open_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is opened. 
##############################
From agent.py
exp(pot_2069, dishwasher_1001)
Fail to find pot_2069 around dishwasher_1001. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_229)open_executor(cupboard_229)exp(pot_2069, cupboard_229)walk_executor(pot_2069)open_executor(pot_2069)grab_executor(pot_2069)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(stove_2065)switchon_executor(stove_2065)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_egg_2020, fridge_289)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(pot_2069)putin_executor(food_egg_2020, pot_2069)
##############################
From agent.py
walk_executor(cupboard_229)
Robot find: Robot is close to the cupboard_229. 
##############################
From agent.py
open_executor(cupboard_229)
Robot find: Robot is close to the cupboard_229. cupboard_229 is opened. 
##############################
From agent.py
exp(pot_2069, cupboard_229)
Fail to find pot_2069 around cupboard_229. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)exp(pot_2069, kitchen_counter_230)walk_executor(pot_2069)open_executor(pot_2069)grab_executor(pot_2069)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(stove_2065)switchon_executor(stove_2065)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_egg_2020, fridge_289)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(pot_2069)putin_executor(food_egg_2020, pot_2069)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the kitchen_counter_230. 
##############################
From agent.py
exp(pot_2069, kitchen_counter_230)
Find pot_2069. 
##############################
From agent.py-> find a plan in act()
walk_executor(pot_2069)open_executor(pot_2069)grab_executor(pot_2069)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(stove_2065)switchon_executor(stove_2065)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_egg_2020, fridge_289)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(pot_2069)putin_executor(food_egg_2020, pot_2069)
##############################
From agent.py
walk_executor(pot_2069)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. 
##############################
From agent.py
open_executor(pot_2069)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. pot_2069 is opened. 
##############################
From agent.py
grab_executor(pot_2069)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the pot_2069. Grabbing pot_2069 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: towel_rack_31, towel_rack_32, towel_rack_34, Robot is close to the pot_2069. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the pot_2069. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the pot_2069. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py
walk_executor(stove_2065)
Robot find: Robot is close to the pot_2069. Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
switchon_executor(stove_2065)
Robot find: Robot is close to the pot_2069. Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. stove_2065 is turned on. 
##############################
From agent.py
walk_executor(fridge_289)
Robot find: Robot is close to the pot_2069. Robot is close to the fridge_289. 
##############################
From agent.py
switchoff_executor(fridge_289)
Robot find: Robot is close to the pot_2069. Robot is close to the fridge_289. fridge_289 is turned off. 
##############################
From agent.py
open_executor(fridge_289)
Robot find: sauce_2078, food_steak_2008, food_apple_2009, food_bacon_2010, food_banana_2011, food_bread_2012, food_cake_2013, food_carrot_2014, food_cereal_2015, food_cheese_2016, food_chicken_2017, food_dessert_2018, food_donut_2019, food_egg_2020, food_fish_2021, food_food_2022, food_fruit_2023, food_hamburger_2024, food_ice_cream_2025, food_jam_2026, food_kiwi_2027, food_lemon_2028, food_noodles_2029, food_oatmeal_2030, food_orange_2031, food_onion_2032, food_peanut_butter_2033, food_pizza_2034, food_potato_2035, food_rice_2036, food_salt_2037, food_snack_2038, food_sugar_2039, food_turkey_2040, food_vegetable_2041, dry_pasta_2042, milk_2043, Robot is close to the pot_2069. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. fridge_289 is opened. 
##############################
From agent.py
exp(food_egg_2020, fridge_289)
Find food_egg_2020. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_egg_2020)putin_executor(food_egg_2020, pot_2069)
##############################
From agent.py
grab_executor(food_egg_2020)
Robot find: Robot is close to the pot_2069. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. Grabbing food_egg_2020 by left hand. 
##############################
From agent.py
putin_executor(food_egg_2020, pot_2069)
Robot find: Robot is close to the pot_2069. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. pot_2069 is close food_egg_2020. food_egg_2020 is inside pot_2069. food_egg_2020 is close pot_2069. food_egg_2020 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure that water is added to the pot. Currently, you have grabbed the pot, turned off the faucet after turning it on, and put the egg into the pot, but there is no indication that the pot contains water. Also, confirm that the pot is on the stove and the stove is on for boiling the egg.
##############################
From agent.py
Human Instruction: You need to ensure that water is added to the pot. Currently, you have grabbed the pot, turned off the faucet after turning it on, and put the egg into the pot, but there is no indication that the pot contains water. Also, confirm that the pot is on the stove and the stove is on for boiling the egg.

The actions you have taken:
Action 1: Walk to dishwasher_1001.
Action 2: Open dishwasher_1001.
Action 3: look for pot_2069 around dishwasher_1001.
Action 4: Walk to cupboard_229.
Action 5: Open cupboard_229.
Action 6: look for pot_2069 around cupboard_229.
Action 7: Walk to kitchen_counter_230.
Action 8: look for pot_2069 around kitchen_counter_230.
Action 9: Walk to pot_2069.
Action 10: Open pot_2069.
Action 11: Grab pot_2069.
Action 12: Walk to faucet_43.
Action 13: Switch on faucet_43.
Action 14: Switch off faucet_43.
Action 15: Walk to stove_2065.
Action 16: Switch on stove_2065.
Action 17: Walk to fridge_289.
Action 18: Switch off fridge_289.
Action 19: Open fridge_289.
Action 20: look for food_egg_2020 around fridge_289.
Action 21: Grab food_egg_2020.
Action 22: Put food_egg_2020 into pot_2069.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_gloves_2046_around_basket_for_clothes_2006(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_gloves,basket_for_clothes_instance)
        else:
            exp(clothes_gloves,basket_for_clothes_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_gloves]=True
    

behavior find_wall_clock_249_around_wallshelf_235(wall_clock:item):
    goal: not unknown(wall_clock)
    body:
        assert is_wall_clock(wall_clock)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==235
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(wall_clock,wallshelf_instance)
        else:
            exp(wall_clock,wallshelf_instance)
    eff:
        unknown[wall_clock]=False
        close[wall_clock,wallshelf_instance]=True
        close[wallshelf_instance,wall_clock]=True
    

#exp_behavior_end

#goal_representation
 
behavior ensure_water_in_pot(pot:item, faucet:item):
    body:
        achieve has_water(pot)
        # Fill the pot with water using the faucet

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)
        # Ensure the stove is turned on

behavior boil_egg(pot:item, stove:item):
    body:
        achieve on(pot, stove)
        # Place the pot on the stove

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select the pot
        
        bind faucet: item where:
            is_faucet(faucet)
        # Select the faucet

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        ensure_water_in_pot(pot, faucet)
        turn_on_stove(stove)
        boil_egg(pot, stove)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior ensure_water_in_pot(pot:item, faucet:item):
    body:
        achieve has_water(pot)
        # Fill the pot with water using the faucet

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)
        # Ensure the stove is turned on

behavior boil_egg(pot:item, stove:item):
    body:
        achieve on(pot, stove)
        # Place the pot on the stove

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select the pot
        
        bind faucet: item where:
            is_faucet(faucet)
        # Select the faucet

        bind stove: item where:
            is_stove(stove)
        # Select the stove

        ensure_water_in_pot(pot, faucet)
        turn_on_stove(stove)
        boil_egg(pot, stove)

##############################
From agent.py-> find a plan in act()
walk_executor(stove_2065)put_executor(pot_2069, stove_2065)
##############################
From agent.py
walk_executor(stove_2065)
Robot find: Robot is close to the pot_2069. Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
put_executor(pot_2069, stove_2065)
Robot find: Robot is close to the pot_2069. Robot is close to the stove_2065. Robot is close to the kitchen_counter_230. pot_2069 is close stove_2065. pot_2069 is on stove_2065. stove_2065 is close pot_2069. pot_2069 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure that water is added to the pot. Currently, you have turned off the faucet after turning it on, indicating you were at the faucet but have not confirmed that the pot actually contains water. Fill the pot with water using the faucet, as it is necessary for boiling the egg.
##############################
From agent.py
Human Instruction: You need to ensure that water is added to the pot. Currently, you have turned off the faucet after turning it on, indicating you were at the faucet but have not confirmed that the pot actually contains water. Fill the pot with water using the faucet, as it is necessary for boiling the egg.

The actions you have taken:
Action 1: Walk to dishwasher_1001.
Action 2: Open dishwasher_1001.
Action 3: look for pot_2069 around dishwasher_1001.
Action 4: Walk to cupboard_229.
Action 5: Open cupboard_229.
Action 6: look for pot_2069 around cupboard_229.
Action 7: Walk to kitchen_counter_230.
Action 8: look for pot_2069 around kitchen_counter_230.
Action 9: Walk to pot_2069.
Action 10: Open pot_2069.
Action 11: Grab pot_2069.
Action 12: Walk to faucet_43.
Action 13: Switch on faucet_43.
Action 14: Switch off faucet_43.
Action 15: Walk to stove_2065.
Action 16: Switch on stove_2065.
Action 17: Walk to fridge_289.
Action 18: Switch off fridge_289.
Action 19: Open fridge_289.
Action 20: look for food_egg_2020 around fridge_289.
Action 21: Grab food_egg_2020.
Action 22: Put food_egg_2020 into pot_2069.
Action 23: Walk to stove_2065.
Action 24: Put pot_2069 on stove_2065.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_wall_clock_249_around_wallshelf_235(wall_clock:item):
    goal: not unknown(wall_clock)
    body:
        assert is_wall_clock(wall_clock)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==235
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(wall_clock,wallshelf_instance)
        else:
            exp(wall_clock,wallshelf_instance)
    eff:
        unknown[wall_clock]=False
        close[wall_clock,wallshelf_instance]=True
        close[wallshelf_instance,wall_clock]=True
    

#exp_behavior_end

#goal_representation

behavior add_water_to_pot(pot:item, faucet:item):
    body:
        achieve has_water(pot) # It is necessary for boiling the egg

behavior ensure_stove_on(stove:item):
    body:
        achieve is_on(stove) # Ensure the stove is on to boil the egg

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select the pot to be used

        bind faucet: item where:
            is_faucet(faucet)
        # Select the faucet to fill the pot with water

        bind stove: item where:
            is_stove(stove)
        # Select the stove to boil the egg

        # Add water to the pot
        add_water_to_pot(pot, faucet)

        # Ensure the stove is on
        ensure_stove_on(stove)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once open(faucet) # Ensure the faucet is open to fill the pot with water
        achieve_once has_water(pot) # The pot must have water in it

behavior boil_egg(pot:item, egg:item, stove:item):
    body:
        achieve_once inside(egg, pot) # Place the egg inside the pot
        achieve_once on(pot, stove) # Place the pot on the stove
        achieve_once is_on(stove) # Turn on the stove to boil the egg

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot
        
        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        bind stove: item where:
            is_stove(stove)
        # Select a stove
        
        bind egg: item where:
            is_food_egg(egg)
        # Select an egg

        fill_pot_with_water(pot, faucet) # Fill the pot with water using the faucet
        boil_egg(pot, egg, stove) # Boil the egg in the pot on the stove

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_gloves_2046_around_washing_machine_2007(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

behavior find_wall_clock_249_around_wallshelf_235(wall_clock:item):
    goal: not unknown(wall_clock)
    body:
        assert is_wall_clock(wall_clock)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==235
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(wall_clock,wallshelf_instance)
        else:
            exp(wall_clock,wallshelf_instance)
    eff:
        unknown[wall_clock]=False
        close[wall_clock,wallshelf_instance]=True
        close[wallshelf_instance,wall_clock]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve_once has_water(pot)
        # Fill the pot with water using the faucet

behavior boil_egg(pot:item, stove:item, egg:item):
    body:
        achieve_once inside(egg, pot)
        # Place the egg inside the pot
        achieve on(pot, stove)
        # Place the pot on the stove to boil the egg

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        # Select a pot
        bind faucet: item where:
            is_faucet(faucet) and close_char(char, faucet)
        # Select a faucet close to char
        bind stove: item where:
            is_stove(stove) and close_char(char, stove)
        # Select a stove close to char
        bind egg: item where:
            is_food_egg(egg)
        # Select a food egg
        fill_pot_with_water(pot, faucet)
        boil_egg(pot, stove, egg)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_gloves_2046_around_closetdrawer_158(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==158
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_gloves,closetdrawer_instance)
        else:
            exp(clothes_gloves,closetdrawer_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_gloves]=True
    

behavior find_wall_clock_249_around_drawing_242(wall_clock:item):
    goal: not unknown(wall_clock)
    body:
        assert is_wall_clock(wall_clock)
        bind drawing_instance:item where:
            is_drawing(drawing_instance) and id[drawing_instance]==242
        achieve close_char(char,drawing_instance)
        if can_open(drawing_instance):
            achieve_once open(drawing_instance)
            exp(wall_clock,drawing_instance)
        else:
            exp(wall_clock,drawing_instance)
    eff:
        unknown[wall_clock]=False
        close[wall_clock,drawing_instance]=True
        close[drawing_instance,wall_clock]=True
    

behavior find_bowl_2071_around_table_107(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==107
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(bowl,table_instance)
        else:
            exp(bowl,table_instance)
    eff:
        unknown[bowl]=False
        close[bowl,table_instance]=True
        close[table_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve is_on(faucet)
        achieve has_water(pot)

behavior boil_egg(pot:item, stove:item, egg:item):
    body:
        achieve inside(egg, pot)
        achieve on(pot, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        bind faucet: item where:
            is_faucet(faucet)
        bind stove: item where:
            is_stove(stove)
        bind egg: item where:
            is_food_egg(egg)
        
        fill_pot_with_water(pot, faucet)
        boil_egg(pot, stove, egg)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_pot_with_water(pot:item, faucet:item):
    body:
        achieve is_on(faucet)
        achieve has_water(pot)

behavior boil_egg(pot:item, stove:item, egg:item):
    body:
        achieve inside(egg, pot)
        achieve on(pot, stove)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind pot: item where:
            is_pot(pot)
        bind faucet: item where:
            is_faucet(faucet)
        bind stove: item where:
            is_stove(stove)
        bind egg: item where:
            is_food_egg(egg)
        
        fill_pot_with_water(pot, faucet)
        boil_egg(pot, stove, egg)

##############################
From agent.py-> find a plan in act()
walk_executor(faucet_43)switchon_executor(faucet_43)
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to fill the pot with water. Although you turned the faucet on and off, there is no confirmation that the pot actually contains water. Ensure the pot is filled with water before proceeding to boil the egg.
##############################
Task Summary:
Task Goal:
Boil egg.
Action History:
['walk_executor(dishwasher_1001)', 'open_executor(dishwasher_1001)', 'walk_executor(cupboard_229)', 'open_executor(cupboard_229)', 'walk_executor(kitchen_counter_230)', 'walk_executor(pot_2069)', 'open_executor(pot_2069)', 'grab_executor(pot_2069)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'switchoff_executor(faucet_43)', 'walk_executor(stove_2065)', 'switchon_executor(stove_2065)', 'walk_executor(fridge_289)', 'switchoff_executor(fridge_289)', 'open_executor(fridge_289)', 'grab_executor(food_egg_2020)', 'putin_executor(food_egg_2020, pot_2069)', 'walk_executor(stove_2065)', 'put_executor(pot_2069, stove_2065)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)']
Time info:
Time consume: 136 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 6
goal correct times: 0
action_num: 22

Task complete rate:
1
Scene_id: 0
##############################
