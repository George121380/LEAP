From agent.py
Reset goals: The sub-goals are: 
['Find the book and put it on the coffee table in home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2067_around_bookshelf_233(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==233
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_book(book:item):
    body:
        foreach b: item:
            if is_book(b) and not visited(b):
                observe(b, "Check if it is a book you are looking for")

behavior put_on_coffee_table(obj:item, table:item):
    body:
        achieve_once on(obj, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Ensure home office is specified as a space in the scene
        
        bind coffee_table: item where:
            is_coffee_table(coffee_table) and inside(coffee_table, home_office)
        # Ensure the coffee table is within the home office

        bind book: item where:
            is_book(book)
        # Identify the book instance
        
        find_book(book)
        # Find the book

        put_on_coffee_table(book, coffee_table)
        # Put the book on the coffee table

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_book(book:item):
    body:
        foreach b: item:
            if is_book(b) and not visited(b):
                observe(b, "Check if it is a book you are looking for")

behavior put_on_coffee_table(obj:item, table:item):
    body:
        achieve_once on(obj, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        # Ensure home office is specified as a space in the scene
        
        bind coffee_table: item where:
            is_coffee_table(coffee_table) and inside(coffee_table, home_office)
        # Ensure the coffee table is within the home office

        bind book: item where:
            is_book(book)
        # Identify the book instance
        
        find_book(book)
        # Find the book

        put_on_coffee_table(book, coffee_table)
        # Put the book on the coffee table

##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_233)open_executor(bookshelf_233)exp(book_2066, bookshelf_233)walk_executor(book_2066)open_executor(book_2066)obs(book_2066, Check if it is a book you are looking for)walk_executor(bookshelf_233)exp(book_2067, bookshelf_233)walk_executor(book_2067)open_executor(book_2067)obs(book_2067, Check if it is a book you are looking for)grab_executor(book_2067)walk_executor(coffee_table_2068)put_executor(book_2067, coffee_table_2068)
##############################
From agent.py
walk_executor(bookshelf_233)
Robot find: Robot is close to the bookshelf_233. 
##############################
From agent.py
open_executor(bookshelf_233)
Robot find: Robot is close to the bookshelf_233. bookshelf_233 is opened. 
##############################
From agent.py
exp(book_2066, bookshelf_233)
Fail to find book_2066 around bookshelf_233. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_101)open_executor(bookshelf_101)exp(book_2066, bookshelf_101)walk_executor(book_2066)open_executor(book_2066)obs(book_2066, Check if it is a book you are looking for)walk_executor(bookshelf_101)exp(book_2067, bookshelf_101)walk_executor(book_2067)open_executor(book_2067)obs(book_2067, Check if it is a book you are looking for)grab_executor(book_2067)walk_executor(coffee_table_2068)put_executor(book_2067, coffee_table_2068)
##############################
From agent.py
walk_executor(bookshelf_101)
Robot find: drawing_174, drawing_176, Robot is close to the bookshelf_101. 
##############################
From agent.py
open_executor(bookshelf_101)
Robot find: Robot is close to the photoframe_185. Robot is close to the bookshelf_101. bookshelf_101 is opened. 
##############################
From agent.py
exp(book_2066, bookshelf_101)
Fail to find book_2066 around bookshelf_101. 
##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_354)open_executor(bookshelf_354)exp(book_2066, bookshelf_354)walk_executor(book_2066)open_executor(book_2066)obs(book_2066, Check if it is a book you are looking for)walk_executor(bookshelf_354)exp(book_2067, bookshelf_354)walk_executor(book_2067)open_executor(book_2067)obs(book_2067, Check if it is a book you are looking for)grab_executor(book_2067)walk_executor(coffee_table_2068)put_executor(book_2067, coffee_table_2068)
##############################
From agent.py
walk_executor(bookshelf_354)
Robot find: drawing_402, drawing_403, drawing_404, book_2066, book_2067, Robot is close to the bookshelf_354. 
##############################
From agent.py
open_executor(bookshelf_354)
Robot find: Robot is close to the bookshelf_354. Robot is close to the photoframe_430. bookshelf_354 is opened. 
##############################
From agent.py
exp(book_2066, bookshelf_354)
Find book_2066. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2066)open_executor(book_2066)obs(book_2066, Check if it is a book you are looking for)walk_executor(book_2067)open_executor(book_2067)obs(book_2067, Check if it is a book you are looking for)grab_executor(book_2067)walk_executor(coffee_table_2068)put_executor(book_2067, coffee_table_2068)
##############################
From agent.py
walk_executor(book_2066)
Robot find: Robot is close to the bookshelf_354. Robot is close to the book_2066. 
##############################
From agent.py
open_executor(book_2066)
Robot find: Robot is close to the bookshelf_354. Robot is close to the book_2066. book_2066 is opened. 
##############################
From agent.py
obs(book_2066, Check if it is a book you are looking for)
Get this information:  book_2066 is close to bookshelf_354. book_2066 is close to character_65. book_2066 is on bookshelf_354. book_2066 is inside home_office_319. book_2066 is OPEN.
##############################
From agent.py
walk_executor(book_2067)
Robot find: Robot is close to the bookshelf_354. Robot is close to the book_2067. 
##############################
From agent.py
open_executor(book_2067)
Robot find: Robot is close to the bookshelf_354. Robot is close to the book_2067. book_2067 is opened. 
##############################
From agent.py
obs(book_2067, Check if it is a book you are looking for)
Get this information:  book_2067 is close to bookshelf_354. book_2067 is close to character_65. book_2067 is on bookshelf_354. book_2067 is inside home_office_319. book_2067 is OPEN.
##############################
From agent.py
grab_executor(book_2067)
Robot find: Robot is close to the bookshelf_354. Robot is close to the book_2067. Grabbing book_2067 by right hand. 
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot find: Robot is close to the book_2067. Robot is close to the coffee_table_2068. 
##############################
From agent.py
put_executor(book_2067, coffee_table_2068)
Robot find: Robot is close to the book_2067. Robot is close to the coffee_table_2068. coffee_table_2068 is close book_2067. book_2067 is close coffee_table_2068. book_2067 is on coffee_table_2068. book_2067 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to find book_2066 and put it on the coffee table in the home office. Currently, you placed book_2067 on the coffee table instead.
##############################
From agent.py
Human Instruction: You need to find book_2066 and put it on the coffee table in the home office. Currently, you placed book_2067 on the coffee table instead.

The actions you have taken:
Action 1: Walk to bookshelf_233.
Action 2: Open bookshelf_233.
Action 3: look for book_2066 around bookshelf_233.
Action 4: Walk to bookshelf_101.
Action 5: Open bookshelf_101.
Action 6: look for book_2066 around bookshelf_101.
Action 7: Walk to bookshelf_354.
Action 8: Open bookshelf_354.
Action 9: look for book_2066 around bookshelf_354.
Action 10: Walk to book_2066.
Action 11: Open book_2066.
Action 12: Observe around book_2066 with the question of Check if it is a book you are looking for.
Action 13: Walk to book_2067.
Action 14: Open book_2067.
Action 15: Observe around book_2067 with the question of Check if it is a book you are looking for.
Action 16: Grab book_2067.
Action 17: Walk to coffee_table_2068.
Action 18: Put book_2067 on coffee_table_2068.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_peanut_butter_2033_around_fridge_289(food_peanut_butter:item):
    goal: not unknown(food_peanut_butter)
    body:
        assert is_food_peanut_butter(food_peanut_butter)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_peanut_butter,fridge_instance)
        else:
            exp(food_peanut_butter,fridge_instance)
    eff:
        unknown[food_peanut_butter]=False
        close[food_peanut_butter,fridge_instance]=True
        close[fridge_instance,food_peanut_butter]=True
    

#exp_behavior_end

#goal_representation
 
behavior pick_up_book(book:item):
    body:
        achieve_once inhand(book)
        # Pick up the book

behavior place_on_coffee_table(book:item, coffee_table:item):
    body:
        achieve_once on(book, coffee_table)
        # Place the book on the coffee table

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book]==2066
        # Select the target book with ID 2066
        bind coffee_table: item where:
            is_coffee_table(coffee_table)
        # Select a coffee table
        pick_up_book(book)
        place_on_coffee_table(book, coffee_table)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior pick_up_book(book:item):
    body:
        achieve_once inhand(book)
        # Pick up the book

behavior place_on_coffee_table(book:item, coffee_table:item):
    body:
        achieve_once on(book, coffee_table)
        # Place the book on the coffee table

behavior __goal__():
    body:
        bind book: item where:
            is_book(book) and id[book]==2066
        # Select the target book with ID 2066
        bind coffee_table: item where:
            is_coffee_table(coffee_table)
        # Select a coffee table
        pick_up_book(book)
        place_on_coffee_table(book, coffee_table)

##############################
From agent.py-> find a plan in act()
walk_executor(book_2066)grab_executor(book_2066)walk_executor(coffee_table_2068)put_executor(book_2066, coffee_table_2068)
##############################
From agent.py
walk_executor(book_2066)
Robot find: Robot is close to the book_2066. Robot is close to the bookshelf_354. 
##############################
From agent.py
grab_executor(book_2066)
Robot find: Robot is close to the book_2066. Robot is close to the bookshelf_354. Grabbing book_2066 by right hand. 
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot find: Robot is close to the book_2066. Robot is close to the coffee_table_2068. 
##############################
From agent.py
put_executor(book_2066, coffee_table_2068)
Robot find: Robot is close to the book_2066. Robot is close to the coffee_table_2068. coffee_table_2068 is close book_2066. book_2066 is close coffee_table_2068. book_2066 is on coffee_table_2068. book_2066 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Find the book and put it on the coffee table in home office.
Action History:
['walk_executor(bookshelf_233)', 'open_executor(bookshelf_233)', 'walk_executor(bookshelf_101)', 'open_executor(bookshelf_101)', 'walk_executor(bookshelf_354)', 'open_executor(bookshelf_354)', 'walk_executor(book_2066)', 'open_executor(book_2066)', 'walk_executor(book_2067)', 'open_executor(book_2067)', 'grab_executor(book_2067)', 'walk_executor(coffee_table_2068)', 'put_executor(book_2067, coffee_table_2068)', 'walk_executor(book_2066)', 'grab_executor(book_2066)', 'walk_executor(coffee_table_2068)', 'put_executor(book_2066, coffee_table_2068)']
Time info:
Time consume: 62 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 2
goal correct times: 0
action_num: 17

Task complete rate:
Keystate: k1 - Requires: 3 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
