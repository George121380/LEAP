From agent.py
Reset goals: The sub-goals are: 
['1. Load the bowls and plates into the dishwasher and start the wash cycle.', '2. Wash the forks by hand.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2072_around_kitchen_counter_230(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

behavior find_plate_1000_around_kitchen_counter_230(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(plate,kitchen_counter_instance)
        else:
            exp(plate,kitchen_counter_instance)
    eff:
        unknown[plate]=False
        close[plate,kitchen_counter_instance]=True
        close[kitchen_counter_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(o: item, dishwasher: item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher: item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher
        
        foreach o: item:
        # Load all bowls and plates into the dishwasher
            if is_bowl(o) or is_plate(o):
                load_dishwasher(o, dishwasher)
        start_dishwasher(dishwasher) # Start the dishwasher

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior load_dishwasher(o: item, dishwasher: item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher: item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher
        
        foreach o: item:
        # Load all bowls and plates into the dishwasher
            if is_bowl(o) or is_plate(o):
                load_dishwasher(o, dishwasher)
        start_dishwasher(dishwasher) # Start the dishwasher

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)exp(bowl_2071, kitchen_counter_230)walk_executor(dishwasher_1001)open_executor(dishwasher_1001)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(kitchen_counter_230)exp(bowl_2072, kitchen_counter_230)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(kitchen_counter_230)exp(plate_1000, kitchen_counter_230)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the kitchen_counter_230. 
##############################
From agent.py
exp(bowl_2071, kitchen_counter_230)
Fail to find bowl_2071 around kitchen_counter_230. 
##############################
From agent.py-> find a plan in act()
walk_executor(cutting_board_2051)exp(bowl_2071, cutting_board_2051)walk_executor(dishwasher_1001)open_executor(dishwasher_1001)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(cutting_board_2051)exp(bowl_2072, cutting_board_2051)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)exp(plate_1000, dishwasher_1001)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(cutting_board_2051)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the cutting_board_2051. 
##############################
From agent.py
exp(bowl_2071, cutting_board_2051)
Fail to find bowl_2071 around cutting_board_2051. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_1001)open_executor(dishwasher_1001)exp(bowl_2071, dishwasher_1001)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)exp(bowl_2072, dishwasher_1001)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)exp(plate_1000, dishwasher_1001)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. 
##############################
From agent.py
open_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is opened. 
##############################
From agent.py
exp(bowl_2071, dishwasher_1001)
Fail to find bowl_2071 around dishwasher_1001. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_119)exp(bowl_2071, closetdrawer_119)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(closetdrawer_119)exp(bowl_2072, closetdrawer_119)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(closetdrawer_119)exp(plate_1000, closetdrawer_119)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(closetdrawer_119)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(bowl_2071, closetdrawer_119)
Fail to find bowl_2071 around closetdrawer_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_119)exp(bowl_2071, closetdrawer_119)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(closetdrawer_119)exp(bowl_2072, closetdrawer_119)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(closetdrawer_119)exp(plate_1000, closetdrawer_119)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(closetdrawer_119)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(bowl_2071, closetdrawer_119)
Fail to find bowl_2071 around closetdrawer_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_119)exp(bowl_2071, closetdrawer_119)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(closetdrawer_119)exp(bowl_2072, closetdrawer_119)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(closetdrawer_119)exp(plate_1000, closetdrawer_119)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(closetdrawer_119)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2071 ?
Answer: To find bowl_2071, go to the dining_room_201. Look for table_226; bowl_2071 is on top of this table. The table and the bowl are close to each other.
Re-decompose: None

##############################
From agent.py
Human Instruction: To find bowl_2071, go to the dining_room_201. Look for table_226; bowl_2071 is on top of this table. The table and the bowl are close to each other.

The actions you have taken:
Action 1: Walk to kitchen_counter_230.
Action 2: look for bowl_2071 around kitchen_counter_230.
Action 3: Walk to cutting_board_2051.
Action 4: look for bowl_2071 around cutting_board_2051.
Action 5: Walk to dishwasher_1001.
Action 6: Open dishwasher_1001.
Action 7: look for bowl_2071 around dishwasher_1001.
Action 8: Walk to closetdrawer_119.
Action 9: look for bowl_2071 around closetdrawer_119.
Action 10: Walk to closetdrawer_119.
Action 11: look for bowl_2071 around closetdrawer_119.
Action 12: Walk to closetdrawer_119.

##############################
From agent.py
exp(bowl_2071, closetdrawer_119)
Fail to find bowl_2071 around closetdrawer_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_226)exp(bowl_2071, table_226)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(table_226)exp(bowl_2072, table_226)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(closetdrawer_119)exp(plate_1000, closetdrawer_119)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(table_226)
Robot find: bowl_2071, coffee_filter_2000, drawing_2003, bowl_2072, mat_236, fork_2080, fork_2081, mat_237, Robot is close to the table_226. 
##############################
From agent.py
exp(bowl_2071, table_226)
Find bowl_2071. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(closetdrawer_119)exp(plate_1000, closetdrawer_119)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(bowl_2071)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2071. 
##############################
From agent.py
grab_executor(bowl_2071)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2071. Grabbing bowl_2071 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the bowl_2071. Robot is close to the dishwasher_1001. 
##############################
From agent.py
putin_executor(bowl_2071, dishwasher_1001)
Robot find: Robot is close to the bowl_2071. Robot is close to the dishwasher_1001. bowl_2071 is close dishwasher_1001. bowl_2071 is inside dishwasher_1001. dishwasher_1001 is close bowl_2071. bowl_2071 released by right hand. 
##############################
From agent.py
walk_executor(bowl_2072)
Robot find: Robot is close to the bowl_2072. Robot is close to the table_226. 
##############################
From agent.py
grab_executor(bowl_2072)
Robot find: Robot is close to the bowl_2072. Robot is close to the table_226. Grabbing bowl_2072 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the bowl_2072. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. 
##############################
From agent.py
putin_executor(bowl_2072, dishwasher_1001)
Robot find: Robot is close to the bowl_2072. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. bowl_2072 is close dishwasher_1001. bowl_2072 is inside dishwasher_1001. dishwasher_1001 is close bowl_2072. bowl_2072 released by right hand. 
##############################
From agent.py
walk_executor(closetdrawer_119)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(plate_1000, closetdrawer_119)
Fail to find plate_1000 around closetdrawer_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_119)exp(plate_1000, closetdrawer_119)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(closetdrawer_119)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(plate_1000, closetdrawer_119)
Fail to find plate_1000 around closetdrawer_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_119)exp(plate_1000, closetdrawer_119)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(closetdrawer_119)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(plate_1000, closetdrawer_119)
Fail to find plate_1000 around closetdrawer_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_119)exp(plate_1000, closetdrawer_119)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(closetdrawer_119)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(plate_1000, closetdrawer_119)
Fail to find plate_1000 around closetdrawer_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_119)exp(plate_1000, closetdrawer_119)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(closetdrawer_119)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find plate_1000 ?
Answer: Go to dining_room_201. Locate sink_231, and you will find plate_1000 on top of it.
Re-decompose: None

##############################
From agent.py
Human Instruction: To find bowl_2071, go to the dining_room_201. Look for table_226; bowl_2071 is on top of this table. The table and the bowl are close to each other.
Go to dining_room_201. Locate sink_231, and you will find plate_1000 on top of it.

The actions you have taken:
Action 1: Walk to kitchen_counter_230.
Action 2: look for bowl_2071 around kitchen_counter_230.
Action 3: Walk to cutting_board_2051.
Action 4: look for bowl_2071 around cutting_board_2051.
Action 5: Walk to dishwasher_1001.
Action 6: Open dishwasher_1001.
Action 7: look for bowl_2071 around dishwasher_1001.
Action 8: Walk to closetdrawer_119.
Action 9: look for bowl_2071 around closetdrawer_119.
Action 10: Walk to closetdrawer_119.
Action 11: look for bowl_2071 around closetdrawer_119.
Action 12: Walk to closetdrawer_119.
Action 13: look for bowl_2071 around closetdrawer_119.
Action 14: Walk to table_226.
Action 15: look for bowl_2071 around table_226.
Action 16: Walk to bowl_2071.
Action 17: Grab bowl_2071.
Action 18: Walk to dishwasher_1001.
Action 19: Put bowl_2071 into dishwasher_1001.
Action 20: Walk to bowl_2072.
Action 21: Grab bowl_2072.
Action 22: Walk to dishwasher_1001.
Action 23: Put bowl_2072 into dishwasher_1001.
Action 24: Walk to closetdrawer_119.
Action 25: look for plate_1000 around closetdrawer_119.
Action 26: Walk to closetdrawer_119.
Action 27: look for plate_1000 around closetdrawer_119.
Action 28: Walk to closetdrawer_119.
Action 29: look for plate_1000 around closetdrawer_119.
Action 30: Walk to closetdrawer_119.
Action 31: look for plate_1000 around closetdrawer_119.
Action 32: Walk to closetdrawer_119.

##############################
From agent.py
exp(plate_1000, closetdrawer_119)
Fail to find plate_1000 around closetdrawer_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_231)exp(plate_1000, sink_231)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(sink_231)
Robot find: soap_2054, plate_1000, Robot is close to the kitchen_counter_230. Robot is close to the sink_231. 
##############################
From agent.py
exp(plate_1000, sink_231)
Find plate_1000. 
##############################
From agent.py-> find a plan in act()
walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(plate_1000)
Robot find: Robot is close to the sink_231. Robot is close to the plate_1000. 
##############################
From agent.py
grab_executor(plate_1000)
Robot find: Robot is close to the sink_231. Robot is close to the plate_1000. Grabbing plate_1000 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the plate_1000. Robot is close to the bowl_2072. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. 
##############################
From agent.py
putin_executor(plate_1000, dishwasher_1001)
Robot find: Robot is close to the plate_1000. Robot is close to the bowl_2072. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. plate_1000 is inside dishwasher_1001. plate_1000 is close dishwasher_1001. dishwasher_1001 is close plate_1000. plate_1000 released by right hand. 
##############################
From agent.py
close_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is closed. 
##############################
From agent.py
switchon_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation

behavior wash_fork_by_hand(fork:item):
    body:
        wash(fork)
        # Wash the fork by hand

behavior __goal__():
    body:
        foreach fork: item:
           if is_fork(fork) and dirty(fork):
               wash_fork_by_hand(fork)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_hand_washing_needed(fork:item):
    # Function to determine if a fork needs to be handwashed
    symbol wash_by_hand = exists o: item : (is_fork(o) and dirty(o))
    return wash_by_hand

behavior hand_wash_fork(fork:item):
    body:
        achieve clean(fork)
        # Perform action to clean the fork

behavior __goal__():
    body:
        foreach fork: item:
            if is_fork(fork) and is_hand_washing_needed(fork):
                hand_wash_fork(fork)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior wash_fork(fork:item):
    body:
        wash(fork)
        # Wash the fork

behavior __goal__():
    body:
        foreach fork: item:
            if is_fork(fork) and dirty(fork):
                wash_fork(fork)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "2. wash the forks by hand." ?
Answer: Wash the forks by hand.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2053_around_sink_42(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==42
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

#exp_behavior_end

#goal_representation
behavior wash_forks_by_hand(fork:item):
    body:
        wash(fork) # Wash the fork by hand

behavior __goal__():
    body:
        foreach fork: item:
            # Wash all forks that are in a dirty state
            if is_fork(fork) and dirty(fork):
                wash_forks_by_hand(fork)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior wash_forks(fork:item):
    body:
        wash(fork) 
        # Wash the fork by hand

behavior __goal__():
    body:
        bind fork: item where:
            is_fork(fork)
        # Select a fork to wash
        wash_forks(fork)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior wash_forks(fork:item):
    body:
        wash(fork) 
        # Wash the fork by hand

behavior __goal__():
    body:
        bind fork: item where:
            is_fork(fork)
        # Select a fork to wash
        wash_forks(fork)

##############################
From agent.py-> find a plan in act()
walk_executor(fork_2080)grab_executor(fork_2080)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(fork_2080)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(fork_2080)
Robot find: Robot is close to the fork_2080. Robot is close to the table_226. 
##############################
From agent.py
grab_executor(fork_2080)
Robot find: Robot is close to the fork_2080. Robot is close to the table_226. Grabbing fork_2080 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: towel_rack_31, towel_rack_32, towel_rack_34, Robot is close to the fork_2080. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the fork_2080. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
wash_executor(fork_2080)
Robot find: Robot is close to the fork_2080. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the fork_2080. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Wash the bowls and plates with dishwasher. And wash forks by hand.
Action History:
['walk_executor(kitchen_counter_230)', 'walk_executor(cutting_board_2051)', 'walk_executor(dishwasher_1001)', 'open_executor(dishwasher_1001)', 'walk_executor(closetdrawer_119)', 'walk_executor(closetdrawer_119)', 'walk_executor(closetdrawer_119)', 'walk_executor(table_226)', 'walk_executor(bowl_2071)', 'grab_executor(bowl_2071)', 'walk_executor(dishwasher_1001)', 'putin_executor(bowl_2071, dishwasher_1001)', 'walk_executor(bowl_2072)', 'grab_executor(bowl_2072)', 'walk_executor(dishwasher_1001)', 'putin_executor(bowl_2072, dishwasher_1001)', 'walk_executor(closetdrawer_119)', 'walk_executor(closetdrawer_119)', 'walk_executor(closetdrawer_119)', 'walk_executor(closetdrawer_119)', 'walk_executor(closetdrawer_119)', 'walk_executor(sink_231)', 'walk_executor(plate_1000)', 'grab_executor(plate_1000)', 'walk_executor(dishwasher_1001)', 'putin_executor(plate_1000, dishwasher_1001)', 'close_executor(dishwasher_1001)', 'switchon_executor(dishwasher_1001)', 'walk_executor(fork_2080)', 'grab_executor(fork_2080)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'wash_executor(fork_2080)', 'switchoff_executor(faucet_43)']
Time info:
Time consume: 193 seconds
Exp_helper query times: 2
Guidance query times: 1
library scale: 0
goal generate times: 6
goal correct times: 0
action_num: 34

Task complete rate:
1
Scene_id: 0
##############################
