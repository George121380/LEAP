From agent.py
Reset goals: The sub-goals are: 
['Wipe the toilet with toilet paper, then throw the toilet paper into the toilet.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_toilet_paper_2090_around_bathroom_cabinet_40(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(toilet_paper,bathroom_cabinet_instance)
        else:
            exp(toilet_paper,bathroom_cabinet_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,toilet_paper]=True
    

#exp_behavior_end

#goal_representation
 
behavior wipe_toilet(toilet:item, toilet_paper:item):
    body:
        wipe(toilet)
        # Wipe the toilet using toilet paper

behavior discard_toilet_paper(toilet_paper:item, toilet:item):
    body:
        achieve_once inside(toilet_paper, toilet)
        # Throw the used toilet paper into the toilet

behavior __goal__():
    body:
        bind toilet: item where:
            is_toilet(toilet)
        # Select a toilet
        
        bind toilet_paper: item where:
            is_toilet_paper(toilet_paper)
        # Select toilet paper
        
        wipe_toilet(toilet, toilet_paper)
        discard_toilet_paper(toilet_paper, toilet)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior wipe_toilet(toilet:item, toilet_paper:item):
    body:
        wipe(toilet)
        # Wipe the toilet using toilet paper

behavior discard_toilet_paper(toilet_paper:item, toilet:item):
    body:
        achieve_once inside(toilet_paper, toilet)
        # Throw the used toilet paper into the toilet

behavior __goal__():
    body:
        bind toilet: item where:
            is_toilet(toilet)
        # Select a toilet
        
        bind toilet_paper: item where:
            is_toilet_paper(toilet_paper)
        # Select toilet paper
        
        wipe_toilet(toilet, toilet_paper)
        discard_toilet_paper(toilet_paper, toilet)

##############################
From agent.py-> find a plan in act()
walk_executor(toilet_37)wipe_executor(toilet_37)walk_executor(bathroom_cabinet_40)open_executor(bathroom_cabinet_40)exp(toilet_paper_2090, bathroom_cabinet_40)walk_executor(toilet_37)open_executor(toilet_37)walk_executor(toilet_paper_2090)grab_executor(toilet_paper_2090)walk_executor(toilet_37)putin_executor(toilet_paper_2090, toilet_37)
##############################
From agent.py
walk_executor(toilet_37)
Robot find: toilet_paper_2090, Robot is close to the toilet_37. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2073_around_bathroom_cabinet_40(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior wipe_toilet_and_dispose(toilet:item, toilet_paper:item):
    body:
        achieve_once inhand(toilet_paper) # Temporarily hold the toilet paper to wipe the toilet
        wipe(toilet) # Wipe the toilet with the toilet paper
        achieve_once inside(toilet_paper, toilet) # Dispose of the toilet paper by placing it inside the toilet

behavior __goal__():
    body:
        bind toilet: item where:
            is_toilet(toilet) and id[toilet]==37
        # Select the toilet with ID 37

        bind toilet_paper: item where:
            is_toilet_paper(toilet_paper)
        # Select a piece of toilet paper

        if not dirty(toilet):
            wipe_toilet_and_dispose(toilet, toilet_paper)
        # Wipe the toilet with toilet paper and dispose of it

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior wipe_toilet_and_dispose(toilet:item, toilet_paper:item):
    body:
        achieve_once inhand(toilet_paper) # Temporarily hold the toilet paper to wipe the toilet
        wipe(toilet) # Wipe the toilet with the toilet paper
        achieve_once inside(toilet_paper, toilet) # Dispose of the toilet paper by placing it inside the toilet

behavior __goal__():
    body:
        bind toilet: item where:
            is_toilet(toilet) and id[toilet]==37
        # Select the toilet with ID 37

        bind toilet_paper: item where:
            is_toilet_paper(toilet_paper)
        # Select a piece of toilet paper

        if not dirty(toilet):
            wipe_toilet_and_dispose(toilet, toilet_paper)
        # Wipe the toilet with toilet paper and dispose of it

##############################
From agent.py-> find a plan in act()
walk_executor(toilet_paper_2090)grab_executor(toilet_paper_2090)walk_executor(toilet_37)wipe_executor(toilet_37)open_executor(toilet_37)putin_executor(toilet_paper_2090, toilet_37)
##############################
From agent.py
walk_executor(toilet_paper_2090)
Robot find: Robot is close to the toilet_paper_2090. 
##############################
From agent.py
grab_executor(toilet_paper_2090)
Robot find: Robot is close to the toilet_paper_2090. Grabbing toilet_paper_2090 by right hand. 
##############################
From agent.py
walk_executor(toilet_37)
Robot find: Robot is close to the toilet_paper_2090. Robot is close to the toilet_37. 
##############################
From agent.py
wipe_executor(toilet_37)
Robot find: Robot is close to the toilet_paper_2090. Robot is close to the toilet_37. 
##############################
From agent.py
open_executor(toilet_37)
Robot find: Robot is close to the toilet_paper_2090. Robot is close to the toilet_37. toilet_37 is opened. 
##############################
From agent.py
putin_executor(toilet_paper_2090, toilet_37)
Robot find: Robot is close to the toilet_paper_2090. Robot is close to the toilet_37. toilet_paper_2090 is inside toilet_37. toilet_paper_2090 is close toilet_37. toilet_paper_2090 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Wipe the toilet with toilet paper. Then throw it into the toilet.
Action History:
['walk_executor(toilet_37)', 'wipe_executor(toilet_37) (Failed)', 'walk_executor(toilet_paper_2090)', 'grab_executor(toilet_paper_2090)', 'walk_executor(toilet_37)', 'wipe_executor(toilet_37)', 'open_executor(toilet_37)', 'putin_executor(toilet_paper_2090, toilet_37)']
Time info:
Time consume: 57 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 2
goal correct times: 0
action_num: 8

Task complete rate:
1
Scene_id: 0
##############################
