From agent.py
Reset goals: The sub-goals are: 
['1. Hand wash the underwear with soap in the sink in the bathroom.', '2. Put the underwear in the washing machine and add some detergent for a thorough clean.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2053_around_bathroom_cabinet_40(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_clothes_underwear_2049_around_closetdrawer_122(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==122
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_underwear,closetdrawer_instance)
        else:
            exp(clothes_underwear,closetdrawer_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_underwear]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_underwear(underwear:item, soap:item, sink:item):
    body:
        achieve_once has_water(sink)
        # Ensure that the sink contains water
        achieve_once inside(underwear, sink)
        # Place the underwear into the sink
        achieve_once clean(underwear)
        # Wash the underwear using the soap

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select underwear
        bind soap: item where:
            is_soap(soap)
        # Select soap
        bind sink: item where:
            is_sink(sink) and is_bathroom(sink)
        # Select a sink in the bathroom
        hand_wash_underwear(underwear, soap, sink)


#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_sink_42(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==42
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(soap,sink_instance)
        else:
            exp(soap,sink_instance)
    eff:
        unknown[soap]=False
        close[soap,sink_instance]=True
        close[sink_instance,soap]=True
    

behavior find_clothes_underwear_2049_around_basket_for_clothes_2006(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_underwear,basket_for_clothes_instance)
        else:
            exp(clothes_underwear,basket_for_clothes_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_underwear]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_underwear(underwear:item, soap:item, sink:item):
    body:
        achieve_once has_water(sink)
        # Ensure there is water in the sink
        achieve_once inside(underwear, sink)
        # Place the underwear inside the sink
        achieve_once dirty(underwear)
        # Underwear is dirty before washing
        achieve clean(underwear)
        # The goal is to clean the underwear

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select underwear
        bind soap: item where:
            is_soap(soap)
        # Select soap
        bind sink: item where:
            is_sink(sink) and is_bathroom(sink)
        # Select a sink in the bathroom
        wash_underwear(underwear, soap, sink)


#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_bathroom_cabinet_40(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_clothes_underwear_2049_around_basket_for_clothes_2006(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_underwear,basket_for_clothes_instance)
        else:
            exp(clothes_underwear,basket_for_clothes_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_underwear]=True
    

#exp_behavior_end

#goal_representation
 
behavior hand_wash_underwear(underwear:item, soap:item, sink:item):
    body:
        achieve_once inside(underwear, sink)
        achieve_once has_water(sink)
        # Make sure the underwear is inside the sink with water
        achieve_once clean(underwear)
        # Ensure that the underwear is cleaned using soap by hand

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select an item classified as clothes_underwear
        bind soap: item where:
            is_soap(soap)
        # Select an item classified as soap
        bind sink: item where:
            is_sink(sink)
        # Select an item classified as a sink inside the bathroom
        hand_wash_underwear(underwear, soap, sink)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior hand_wash_underwear(underwear:item, soap:item, sink:item):
    body:
        achieve_once inside(underwear, sink)
        achieve_once has_water(sink)
        # Make sure the underwear is inside the sink with water
        achieve_once clean(underwear)
        # Ensure that the underwear is cleaned using soap by hand

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select an item classified as clothes_underwear
        bind soap: item where:
            is_soap(soap)
        # Select an item classified as soap
        bind sink: item where:
            is_sink(sink)
        # Select an item classified as a sink inside the bathroom
        hand_wash_underwear(underwear, soap, sink)

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)exp(clothes_underwear_2049, basket_for_clothes_2006)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(sink_42)putin_executor(clothes_underwear_2049, sink_42)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_underwear_2049)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Robot find: clothes_pants_2085, clothes_shirt_2086, clothes_socks_2087, clothes_skirt_2088, towel_rack_31, towel_rack_33, towel_rack_32, towel_rack_34, mat_22, Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
exp(clothes_underwear_2049, basket_for_clothes_2006)
Fail to find clothes_underwear_2049 around basket_for_clothes_2006. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_122)exp(clothes_underwear_2049, closetdrawer_122)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(sink_42)putin_executor(clothes_underwear_2049, sink_42)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_underwear_2049)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_122)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(clothes_underwear_2049, closetdrawer_122)
Fail to find clothes_underwear_2049 around closetdrawer_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_122)exp(clothes_underwear_2049, closetdrawer_122)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(sink_42)putin_executor(clothes_underwear_2049, sink_42)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_underwear_2049)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_122)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(clothes_underwear_2049, closetdrawer_122)
Fail to find clothes_underwear_2049 around closetdrawer_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_122)exp(clothes_underwear_2049, closetdrawer_122)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(sink_42)putin_executor(clothes_underwear_2049, sink_42)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_underwear_2049)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_122)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(clothes_underwear_2049, closetdrawer_122)
Fail to find clothes_underwear_2049 around closetdrawer_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_122)exp(clothes_underwear_2049, closetdrawer_122)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(sink_42)putin_executor(clothes_underwear_2049, sink_42)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_underwear_2049)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_122)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(clothes_underwear_2049, closetdrawer_122)
Fail to find clothes_underwear_2049 around closetdrawer_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_122)exp(clothes_underwear_2049, closetdrawer_122)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(sink_42)putin_executor(clothes_underwear_2049, sink_42)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_underwear_2049)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_122)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_underwear_2049 ?
Answer: The target item, clothes_underwear_2049, is located on bed_105 inside bedroom_67. To find it, go to bedroom_67 and locate bed_105; the underwear should be on top of the bed. Look carefully on the bed surface to identify the exact location of clothes_underwear_2049.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item, clothes_underwear_2049, is located on bed_105 inside bedroom_67. To find it, go to bedroom_67 and locate bed_105; the underwear should be on top of the bed. Look carefully on the bed surface to identify the exact location of clothes_underwear_2049.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2006.
Action 2: look for clothes_underwear_2049 around basket_for_clothes_2006.
Action 3: Walk to closetdrawer_122.
Action 4: look for clothes_underwear_2049 around closetdrawer_122.
Action 5: Walk to closetdrawer_122.
Action 6: look for clothes_underwear_2049 around closetdrawer_122.
Action 7: Walk to closetdrawer_122.
Action 8: look for clothes_underwear_2049 around closetdrawer_122.
Action 9: Walk to closetdrawer_122.
Action 10: look for clothes_underwear_2049 around closetdrawer_122.
Action 11: Walk to closetdrawer_122.

##############################
From agent.py
exp(clothes_underwear_2049, closetdrawer_122)
Fail to find clothes_underwear_2049 around closetdrawer_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(bed_105)exp(clothes_underwear_2049, bed_105)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(sink_42)putin_executor(clothes_underwear_2049, sink_42)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_underwear_2049)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(bed_105)
Robot find: mat_173, drawing_176, pillow_183, clothes_underwear_2049, clothes_dress_2044, pillow_182, chair_106, clothes_scarf_2048, Robot is close to the bed_105. Robot is close to the mat_173. 
##############################
From agent.py
exp(clothes_underwear_2049, bed_105)
Find clothes_underwear_2049. 
##############################
From agent.py-> find a plan in act()
walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(sink_42)putin_executor(clothes_underwear_2049, sink_42)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(clothes_underwear_2049)grab_executor(clothes_underwear_2049)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_underwear_2049)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(clothes_underwear_2049)
Robot find: Robot is close to the bed_105. Robot is close to the clothes_underwear_2049. 
##############################
From agent.py
grab_executor(clothes_underwear_2049)
Robot find: Robot is close to the bed_105. Robot is close to the clothes_underwear_2049. Grabbing clothes_underwear_2049 by right hand. 
##############################
From agent.py
walk_executor(sink_42)
Robot find: detergent_2084, cleaning_solution_2073, soap_2053, Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the sink_42. 
##############################
From agent.py
putin_executor(clothes_underwear_2049, sink_42)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the sink_42. clothes_underwear_2049 is close sink_42. clothes_underwear_2049 is inside sink_42. sink_42 is close clothes_underwear_2049. clothes_underwear_2049 released by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py
walk_executor(clothes_underwear_2049)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the sink_42. 
##############################
From agent.py
grab_executor(clothes_underwear_2049)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the sink_42. Grabbing clothes_underwear_2049 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
wash_executor(clothes_underwear_2049)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. clothes_underwear_2049 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to ensure that the underwear is hand washed with soap. The actions taken so far have only involved washing the underwear with water. Locate the soap (item code: soap_2053) and use it to wash the underwear in the sink.
##############################
From agent.py
Human Instruction: You need to ensure that the underwear is hand washed with soap. The actions taken so far have only involved washing the underwear with water. Locate the soap (item code: soap_2053) and use it to wash the underwear in the sink.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2006.
Action 2: look for clothes_underwear_2049 around basket_for_clothes_2006.
Action 3: Walk to closetdrawer_122.
Action 4: look for clothes_underwear_2049 around closetdrawer_122.
Action 5: Walk to closetdrawer_122.
Action 6: look for clothes_underwear_2049 around closetdrawer_122.
Action 7: Walk to closetdrawer_122.
Action 8: look for clothes_underwear_2049 around closetdrawer_122.
Action 9: Walk to closetdrawer_122.
Action 10: look for clothes_underwear_2049 around closetdrawer_122.
Action 11: Walk to closetdrawer_122.
Action 12: look for clothes_underwear_2049 around closetdrawer_122.
Action 13: Walk to bed_105.
Action 14: look for clothes_underwear_2049 around bed_105.
Action 15: Walk to clothes_underwear_2049.
Action 16: Grab clothes_underwear_2049.
Action 17: Walk to sink_42.
Action 18: Put clothes_underwear_2049 into sink_42.
Action 19: Walk to faucet_43.
Action 20: Switch on faucet_43.
Action 21: Switch off faucet_43.
Action 22: Walk to clothes_underwear_2049.
Action 23: Grab clothes_underwear_2049.
Action 24: Walk to faucet_43.
Action 25: Switch on faucet_43.
Action 26: Wash clothes_underwear_2049.
Action 27: Switch off faucet_43.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2053_around_bathroom_cabinet_40(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_underwear(underwear:item):
    body:
        achieve clean(underwear)
        # Ensure the underwear is washed and clean

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear) and id[underwear] == 2049
        # Select the underwear with ID 2049

        bind soap: item where:
            is_soap(soap) and id[soap] == 2053
        # Select the soap with ID 2053

        bind sink: item where:
            is_sink(sink) and id[sink] == 42
        # Select the sink with ID 42

        wash_underwear(underwear)
        # Wash the underwear using soap in the sink

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_bathroom_cabinet_40(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_soap(soap:item):
    body:
        achieve_once close_char(char, soap)
        # Move the character close to the soap

behavior wash_underwear_with_soap(underwear:item, soap:item, sink:item):
    body:
        achieve close_char(char, sink)
        # Ensure the character is close to the sink for the washing process
        achieve_once inside(underwear, sink)
        # Place the underwear inside the sink
        wash(underwear)
        # Wash the underwear in the sink

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear) and id[underwear]==2049
        # Select underwear with ID 2049

        bind soap: item where:
            is_soap(soap) and id[soap]==2053
        # Select soap with ID 2053

        bind sink: item where:
            is_sink(sink) and id[sink]==42
        # Select sink with ID 42

        find_soap(soap)
        wash_underwear_with_soap(underwear, soap, sink)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_bathroom_cabinet_40(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation

def is_in_sink(underwear:item, sink:item):
    symbol is_in_sink = exists s: item : (is_sink(s) and inside(underwear, s))
    return is_in_sink

def has_soap_nearby(sink:item, soap:item):
    symbol has_soap = exists s: item : (close(soap, s) and is_sink(s))
    return has_soap

behavior wash_with_soap(underwear:item, soap:item):
    body:
        achieve clean(underwear)

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        bind sink: item where:
            is_sink(sink) and id[sink] == 42
        bind soap: item where:
            is_soap(soap) and id[soap] == 2053
 
        if is_in_sink(underwear, sink) and has_soap_nearby(sink, soap):
            wash_with_soap(underwear, soap)

        else:
            foreach s: item:
                if is_sink(s) and not visited(s):
                    observe(s, "Check if the underwear is in this sink and if soap is close by")

#goal_representation_end

##############################
From agent.py->reset_sub_goal

def is_in_sink(underwear:item, sink:item):
    symbol is_in_sink = exists s: item : (is_sink(s) and inside(underwear, s))
    return is_in_sink

def has_soap_nearby(sink:item, soap:item):
    symbol has_soap = exists s: item : (close(soap, s) and is_sink(s))
    return has_soap

behavior wash_with_soap(underwear:item, soap:item):
    body:
        achieve clean(underwear)

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        bind sink: item where:
            is_sink(sink) and id[sink] == 42
        bind soap: item where:
            is_soap(soap) and id[soap] == 2053
 
        if is_in_sink(underwear, sink) and has_soap_nearby(sink, soap):
            wash_with_soap(underwear, soap)

        else:
            foreach s: item:
                if is_sink(s) and not visited(s):
                    observe(s, "Check if the underwear is in this sink and if soap is close by")

##############################
From agent.py-> find a plan in act()
walk_executor(sink_42)obs(sink_42, Check if the underwear is in this sink and if soap is close by)walk_executor(sink_231)obs(sink_231, Check if the underwear is in this sink and if soap is close by)
##############################
From agent.py
walk_executor(sink_42)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the sink_42. 
##############################
From agent.py
obs(sink_42, Check if the underwear is in this sink and if soap is close by)
Get this information:  cleaning_solution_2073 is on sink_42. detergent_2084 is on sink_42. sink_42 is inside bathroom_1. sink_42 is inside bathroom_counter_41. sink_42 is close to floor_2. sink_42 is close to floor_3. sink_42 is close to detergent_2084. sink_42 is close to soap_2053. sink_42 is close to floor_4. sink_42 is close to bathroom_cabinet_40. sink_42 is close to bathroom_counter_41. sink_42 is close to wall_9. sink_42 is close to faucet_43. sink_42 is close to wall_12. sink_42 is close to basket_for_clothes_2006. sink_42 is close to washing_machine_2007. sink_42 is close to cleaning_solution_2073. sink_42 is close to clothes_underwear_2049. sink_42 is close to character_65. soap_2053 is on sink_42. sink_42 is DIRTY.
##############################
From agent.py
walk_executor(sink_231)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, soap_2054, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, plate_1000, Robot is close to the clothes_underwear_2049. Robot is close to the kitchen_counter_230. Robot is close to the sink_231. 
##############################
From agent.py
obs(sink_231, Check if the underwear is in this sink and if soap is close by)
Get this information:  soap_2054 is on sink_231. sink_231 is inside dining_room_201. sink_231 is inside kitchen_counter_230. plate_1000 is on sink_231. sink_231 is close to soap_2054. sink_231 is close to floor_7. sink_231 is close to wall_11. sink_231 is close to wall_15. sink_231 is close to coffe_maker_290. sink_231 is close to toaster_292. sink_231 is close to toilet_37. sink_231 is close to shower_36. sink_231 is close to microwave_297. sink_231 is close to floor_202. sink_231 is close to floor_203. sink_231 is close to floor_204. sink_231 is close to wall_211. sink_231 is close to wall_212. sink_231 is close to cupboard_229. sink_231 is close to kitchen_counter_230. sink_231 is close to faucet_232. sink_231 is close to plate_1000. sink_231 is close to dishwasher_1001. sink_231 is close to character_65. sink_231 is DIRTY.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to use the soap (soap_2053) to wash the underwear while it is in the sink. Make sure the underwear is washed with this soap before considering the task complete.
##############################
From agent.py
Human Instruction: The robot needs to use the soap (soap_2053) to wash the underwear while it is in the sink. Make sure the underwear is washed with this soap before considering the task complete.

The actions you have taken:
Action 1: Walk to basket_for_clothes_2006.
Action 2: look for clothes_underwear_2049 around basket_for_clothes_2006.
Action 3: Walk to closetdrawer_122.
Action 4: look for clothes_underwear_2049 around closetdrawer_122.
Action 5: Walk to closetdrawer_122.
Action 6: look for clothes_underwear_2049 around closetdrawer_122.
Action 7: Walk to closetdrawer_122.
Action 8: look for clothes_underwear_2049 around closetdrawer_122.
Action 9: Walk to closetdrawer_122.
Action 10: look for clothes_underwear_2049 around closetdrawer_122.
Action 11: Walk to closetdrawer_122.
Action 12: look for clothes_underwear_2049 around closetdrawer_122.
Action 13: Walk to bed_105.
Action 14: look for clothes_underwear_2049 around bed_105.
Action 15: Walk to clothes_underwear_2049.
Action 16: Grab clothes_underwear_2049.
Action 17: Walk to sink_42.
Action 18: Put clothes_underwear_2049 into sink_42.
Action 19: Walk to faucet_43.
Action 20: Switch on faucet_43.
Action 21: Switch off faucet_43.
Action 22: Walk to clothes_underwear_2049.
Action 23: Grab clothes_underwear_2049.
Action 24: Walk to faucet_43.
Action 25: Switch on faucet_43.
Action 26: Wash clothes_underwear_2049.
Action 27: Switch off faucet_43.
Action 28: Walk to sink_42.
Action 29: Observe around sink_42 with the question of Check if the underwear is in this sink and if soap is close by.
Action 30: Walk to sink_231.
Action 31: Observe around sink_231 with the question of Check if the underwear is in this sink and if soap is close by.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_apple_2009_around_plate_1000(food_apple:item):
    goal: not unknown(food_apple)
    body:
        assert is_food_apple(food_apple)
        bind plate_instance:item where:
            is_plate(plate_instance) and id[plate_instance]==1000
        achieve close_char(char,plate_instance)
        if can_open(plate_instance):
            achieve_once open(plate_instance)
            exp(food_apple,plate_instance)
        else:
            exp(food_apple,plate_instance)
    eff:
        unknown[food_apple]=False
        close[food_apple,plate_instance]=True
        close[plate_instance,food_apple]=True
    

#exp_behavior_end

#goal_representation
 
def is_soap_nearby(sink:item):
    # Function to check if soap is near the sink
    symbol has_soap=exists soap: item : (is_soap(soap) and close(soap, sink))
    return has_soap

behavior wash_underwear_with_soap(sink:item, soap:item, underwear:item):
    body:
        achieve_once close_char(char, sink)
        # Move to the sink
        achieve_once clean(underwear)
        # Clean the underwear using soap and water The state clean indicates that the washing process is complete

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear) and inside(underwear, sink_42)
        # Select the specific underwear in sink_42
        
        bind soap: item where:
            is_soap(soap) and id[soap]==2053
        # Select the specific soap with ID 2053

        if is_sink(sink_42) and is_soap_nearby(sink_42):
            wash_underwear_with_soap(sink_42, soap, underwear)
        else:
            observe(sink_42, "Check if the underwear is in this sink and if soap is close by")

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: sink_42; available variables: [Variable<underwear: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_gloves_2046_around_closetdrawer_122(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==122
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_gloves,closetdrawer_instance)
        else:
            exp(clothes_gloves,closetdrawer_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_gloves]=True
    

behavior find_towel_2057_around_towel_rack_31(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==31
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#goal_representation
 
def is_soap_nearby(sink:item):
    # Function to check if soap is near the sink
    symbol has_soap=exists soap: item : (is_soap(soap) and close(soap, sink))
    return has_soap

behavior wash_underwear_with_soap(sink:item, soap:item, underwear:item):
    body:
        achieve_once close_char(char, sink)
        # Move to the sink
        achieve_once clean(underwear)
        # Clean the underwear using soap and water The state clean indicates that the washing process is complete

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and id[sink] == 42
        
        bind underwear: item where:
            is_clothes_underwear(underwear) and inside(underwear, sink)
        # Select the specific underwear in sink
        
        bind soap: item where:
            is_soap(soap) and id[soap]==2053
        # Select the specific soap with ID 2053

        if is_soap_nearby(sink):
            wash_underwear_with_soap(sink, soap, underwear)
        else:
            observe(sink, "Check if the underwear is in this sink and if soap is close by")

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_mat_236_around_mat_22(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind mat_instance:item where:
            is_mat(mat_instance) and id[mat_instance]==22
        achieve close_char(char,mat_instance)
        if can_open(mat_instance):
            achieve_once open(mat_instance)
            exp(mat,mat_instance)
        else:
            exp(mat,mat_instance)
    eff:
        unknown[mat]=False
        close[mat,mat_instance]=True
        close[mat_instance,mat]=True
    

behavior find_towel_2058_around_towel_rack_31(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==31
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        # Bind the clothes_underwear item
        bind underwear: item where:
            is_clothes_underwear(underwear)

        # Bind the soap item
        bind soap: item where:
            is_soap(soap) and id[soap]==2053
        
        # Bind the sink item
        bind sink: item where:
            is_sink(sink) and inside(sink, bathroom)

        # Achieve the condition of washing the underwear with soap in the sink
        achieve has_water(sink)
        achieve_once close_char(char, sink)
        achieve_once close_char(char, soap)
        achieve_once inhand(soap)
        wash(underwear)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: bathroom; available variables: [Variable<sink: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_mat_236_around_mat_22(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind mat_instance:item where:
            is_mat(mat_instance) and id[mat_instance]==22
        achieve close_char(char,mat_instance)
        if can_open(mat_instance):
            achieve_once open(mat_instance)
            exp(mat,mat_instance)
        else:
            exp(mat,mat_instance)
    eff:
        unknown[mat]=False
        close[mat,mat_instance]=True
        close[mat_instance,mat]=True
    

#goal_representation
 
behavior __goal__():
    body:
        # Bind the bathroom item
        bind bathroom: item where:
            is_bathroom(bathroom)

        # Bind the clothes_underwear item
        bind underwear: item where:
            is_clothes_underwear(underwear)

        # Bind the soap item
        bind soap: item where:
            is_soap(soap) and id[soap]==2053
        
        # Bind the sink item
        bind sink: item where:
            is_sink(sink) and inside(sink, bathroom)

        # Achieve the condition of washing the underwear with soap in the sink
        achieve has_water(sink)
        achieve_once close_char(char, sink)
        achieve_once close_char(char, soap)
        achieve_once inhand(soap)
        wash(underwear)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior __goal__():
    body:
        # Bind the bathroom item
        bind bathroom: item where:
            is_bathroom(bathroom)

        # Bind the clothes_underwear item
        bind underwear: item where:
            is_clothes_underwear(underwear)

        # Bind the soap item
        bind soap: item where:
            is_soap(soap) and id[soap]==2053
        
        # Bind the sink item
        bind sink: item where:
            is_sink(sink) and inside(sink, bathroom)

        # Achieve the condition of washing the underwear with soap in the sink
        achieve has_water(sink)
        achieve_once close_char(char, sink)
        achieve_once close_char(char, soap)
        achieve_once inhand(soap)
        wash(underwear)

##############################
From agent.py-> find a plan in act()
walk_executor(sink_42)grab_executor(soap_2053)walk_executor(faucet_43)switchon_executor(faucet_43)wash_executor(clothes_underwear_2049)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(sink_42)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the sink_42. 
##############################
From agent.py
grab_executor(soap_2053)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the sink_42. Robot is close to the soap_2053. Grabbing soap_2053 by left hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the soap_2053. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the soap_2053. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
wash_executor(clothes_underwear_2049)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the soap_2053. Robot is close to the faucet_43. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the bathroom_counter_41. Robot is close to the soap_2053. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2070_around_bathroom_cabinet_40(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(vacuum_cleaner,bathroom_cabinet_instance)
        else:
            exp(vacuum_cleaner,bathroom_cabinet_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,vacuum_cleaner]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_in_washing_machine(item:item, washing_machine:item):
    body:
        achieve_once inside(item, washing_machine)
        # Place the item inside the washing machine

behavior add_detergent_to_machine(detergent:item, washing_machine:item):
    body:
        achieve_once inside(detergent, washing_machine)
        # Add detergent to the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve_once closed(washing_machine)
        # Close the washing machine door
        achieve_once is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select the underwear as clothes_underwear category
        
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine
        
        bind detergent: item where:
            is_detergent(detergent)
        # Select detergent
        
        put_in_washing_machine(underwear, washing_machine) 
        # Place the underwear into the washing machine
        
        add_detergent_to_machine(detergent, washing_machine)
        # Add detergent to the washing machine
        
        start_washing_machine(washing_machine)
        # Start the washing machine

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior put_in_washing_machine(item:item, washing_machine:item):
    body:
        achieve_once inside(item, washing_machine)
        # Place the item inside the washing machine

behavior add_detergent_to_machine(detergent:item, washing_machine:item):
    body:
        achieve_once inside(detergent, washing_machine)
        # Add detergent to the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve_once closed(washing_machine)
        # Close the washing machine door
        achieve_once is_on(washing_machine)
        # Turn on the washing machine

behavior __goal__():
    body:
        bind underwear: item where:
            is_clothes_underwear(underwear)
        # Select the underwear as clothes_underwear category
        
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select a washing machine
        
        bind detergent: item where:
            is_detergent(detergent)
        # Select detergent
        
        put_in_washing_machine(underwear, washing_machine) 
        # Place the underwear into the washing machine
        
        add_detergent_to_machine(detergent, washing_machine)
        # Add detergent to the washing machine
        
        start_washing_machine(washing_machine)
        # Start the washing machine

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)put_executor(soap_2053, kitchen_counter_230)walk_executor(washing_machine_2007)open_executor(washing_machine_2007)putin_executor(clothes_underwear_2049, washing_machine_2007)walk_executor(detergent_2084)grab_executor(detergent_2084)walk_executor(washing_machine_2007)putin_executor(detergent_2084, washing_machine_2007)close_executor(washing_machine_2007)plugin_executor(washing_machine_2007)switchon_executor(washing_machine_2007)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the soap_2053. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
put_executor(soap_2053, kitchen_counter_230)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the soap_2053. Robot is close to the kitchen_counter_230. kitchen_counter_230 is close soap_2053. soap_2053 is close kitchen_counter_230. soap_2053 is on kitchen_counter_230. soap_2053 released by left hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the washing_machine_2007. 
##############################
From agent.py
open_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the washing_machine_2007. washing_machine_2007 is opened. 
##############################
From agent.py
putin_executor(clothes_underwear_2049, washing_machine_2007)
Robot find: Robot is close to the clothes_underwear_2049. Robot is close to the washing_machine_2007. clothes_underwear_2049 is close washing_machine_2007. clothes_underwear_2049 is inside washing_machine_2007. washing_machine_2007 is close clothes_underwear_2049. clothes_underwear_2049 released by right hand. 
##############################
From agent.py
walk_executor(detergent_2084)
Robot find: Robot is close to the sink_42. Robot is close to the detergent_2084. 
##############################
From agent.py
grab_executor(detergent_2084)
Robot find: Robot is close to the sink_42. Robot is close to the detergent_2084. Grabbing detergent_2084 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the detergent_2084. Robot is close to the clothes_underwear_2049. Robot is close to the washing_machine_2007. 
##############################
From agent.py
putin_executor(detergent_2084, washing_machine_2007)
Robot find: Robot is close to the detergent_2084. Robot is close to the clothes_underwear_2049. Robot is close to the washing_machine_2007. detergent_2084 is close washing_machine_2007. detergent_2084 is inside washing_machine_2007. washing_machine_2007 is close detergent_2084. detergent_2084 released by right hand. 
##############################
From agent.py
close_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is closed. 
##############################
From agent.py
plugin_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is plugged in. 
##############################
From agent.py
switchon_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
First, hand wash the underwear with soap in the sink in the bathroom, then put it in the washing machine, add some detergent for a thorough clean.
Action History:
['walk_executor(basket_for_clothes_2006)', 'walk_executor(closetdrawer_122)', 'walk_executor(closetdrawer_122)', 'walk_executor(closetdrawer_122)', 'walk_executor(closetdrawer_122)', 'walk_executor(closetdrawer_122)', 'walk_executor(bed_105)', 'walk_executor(clothes_underwear_2049)', 'grab_executor(clothes_underwear_2049)', 'walk_executor(sink_42)', 'putin_executor(clothes_underwear_2049, sink_42)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'switchoff_executor(faucet_43)', 'walk_executor(clothes_underwear_2049)', 'grab_executor(clothes_underwear_2049)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'wash_executor(clothes_underwear_2049)', 'switchoff_executor(faucet_43)', 'walk_executor(sink_42)', 'walk_executor(sink_231)', 'walk_executor(sink_42)', 'grab_executor(soap_2053)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'wash_executor(clothes_underwear_2049)', 'switchoff_executor(faucet_43)', 'walk_executor(kitchen_counter_230)', 'put_executor(soap_2053, kitchen_counter_230)', 'walk_executor(washing_machine_2007)', 'open_executor(washing_machine_2007)', 'putin_executor(clothes_underwear_2049, washing_machine_2007)', 'walk_executor(detergent_2084)', 'grab_executor(detergent_2084)', 'walk_executor(washing_machine_2007)', 'putin_executor(detergent_2084, washing_machine_2007)', 'close_executor(washing_machine_2007)', 'plugin_executor(washing_machine_2007)', 'switchon_executor(washing_machine_2007)']
Time info:
Time consume: 257 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 9
goal correct times: 1
action_num: 40

Task complete rate:
Keystate: k1 - Requires: 9 steps
Keystate: k2 - Requires: 0 steps
Action Completion Rate: 1.0
Scene_id: 0
##############################
