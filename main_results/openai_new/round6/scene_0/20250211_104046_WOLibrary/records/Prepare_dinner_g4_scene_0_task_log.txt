From agent.py
Reset goals: The sub-goals are: 
['1. Find rice and eggs in the kitchen.', '2. Cook the rice and eggs together to make fried rice.', '3. Serve the fried rice on a plate.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_rice_2036_around_kitchen_counter_230(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_rice,kitchen_counter_instance)
        else:
            exp(food_rice,kitchen_counter_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_rice]=True
    

behavior find_food_egg_2020_around_fridge_289(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_rice_and_eggs(rice:item, eggs:item):
    body:
        achieve_once visited(rice)
        achieve_once visited(eggs)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select a rice item

        bind eggs: item where:
            is_food_egg(eggs)
        # Select an egg item
        
        find_rice_and_eggs(rice, eggs)


#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_rice_and_eggs(rice:item, eggs:item):
    body:
        achieve_once visited(rice)
        achieve_once visited(eggs)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Select a rice item

        bind eggs: item where:
            is_food_egg(eggs)
        # Select an egg item
        
        find_rice_and_eggs(rice, eggs)


##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)exp(food_rice_2036, kitchen_counter_230)walk_executor(food_rice_2036)obs(food_rice_2036, look around this place)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_egg_2020, fridge_289)walk_executor(food_egg_2020)obs(food_egg_2020, look around this place)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the kitchen_counter_230. 
##############################
From agent.py
exp(food_rice_2036, kitchen_counter_230)
Fail to find food_rice_2036 around kitchen_counter_230. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_rice_2036, fridge_289)walk_executor(food_rice_2036)obs(food_rice_2036, look around this place)walk_executor(fridge_289)exp(food_egg_2020, fridge_289)walk_executor(food_egg_2020)obs(food_egg_2020, look around this place)
##############################
From agent.py
walk_executor(fridge_289)
Robot find: Robot is close to the fridge_289. 
##############################
From agent.py
switchoff_executor(fridge_289)
Robot find: Robot is close to the fridge_289. fridge_289 is turned off. 
##############################
From agent.py
open_executor(fridge_289)
Robot find: sauce_2078, food_steak_2008, food_apple_2009, food_bacon_2010, food_banana_2011, food_bread_2012, food_cake_2013, food_carrot_2014, food_cereal_2015, food_cheese_2016, food_chicken_2017, food_dessert_2018, food_donut_2019, food_egg_2020, food_fish_2021, food_food_2022, food_fruit_2023, food_hamburger_2024, food_ice_cream_2025, food_jam_2026, food_kiwi_2027, food_lemon_2028, food_noodles_2029, food_oatmeal_2030, food_orange_2031, food_onion_2032, food_peanut_butter_2033, food_pizza_2034, food_potato_2035, food_rice_2036, food_salt_2037, food_snack_2038, food_sugar_2039, food_turkey_2040, food_vegetable_2041, dry_pasta_2042, milk_2043, Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. fridge_289 is opened. 
##############################
From agent.py
exp(food_rice_2036, fridge_289)
Find food_rice_2036. 
##############################
From agent.py-> find a plan in act()
obs(food_rice_2036, look around this place)obs(food_egg_2020, look around this place)
##############################
From agent.py
obs(food_rice_2036, look around this place)
Get this information:  food_rice_2036 is inside fridge_289. food_rice_2036 is inside dining_room_201. food_rice_2036 is close to fridge_289. food_rice_2036 is close to character_65. food_rice_2036 is CLEAN.
##############################
From agent.py
obs(food_egg_2020, look around this place)
Get this information:  food_egg_2020 is inside fridge_289. food_egg_2020 is inside dining_room_201. food_egg_2020 is close to fridge_289. food_egg_2020 is close to character_65. food_egg_2020 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_underwear_2049_around_closetdrawer_119(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==119
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_underwear,closetdrawer_instance)
        else:
            exp(clothes_underwear,closetdrawer_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_underwear]=True
    

behavior find_pillow_406_around_bed_105(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==105
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior cook_fried_rice(rice:item, egg:item, pan:item, stove:item):
    body:
        achieve_once inside(rice, pan)
        achieve_once inside(egg, pan)
        achieve_once on(pan, stove)
        achieve_once is_on(stove)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        bind egg: item where:
            is_food_egg(egg)
        bind pan: item where:
            is_fryingpan(pan)
        bind stove: item where:
            is_stove(stove)
        cook_fried_rice(rice, egg, pan, stove)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior cook_fried_rice(rice:item, egg:item, pan:item, stove:item):
    body:
        achieve_once inside(rice, pan)
        achieve_once inside(egg, pan)
        achieve_once on(pan, stove)
        achieve_once is_on(stove)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        bind egg: item where:
            is_food_egg(egg)
        bind pan: item where:
            is_fryingpan(pan)
        bind stove: item where:
            is_stove(stove)
        cook_fried_rice(rice, egg, pan, stove)

##############################
From agent.py-> find a plan in act()
grab_executor(food_rice_2036)walk_executor(fryingpan_2083)putin_executor(food_rice_2036, fryingpan_2083)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(fryingpan_2083)putin_executor(food_egg_2020, fryingpan_2083)grab_executor(fryingpan_2083)walk_executor(stove_2065)put_executor(fryingpan_2083, stove_2065)switchon_executor(stove_2065)
##############################
From agent.py
grab_executor(food_rice_2036)
Robot find: Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. Grabbing food_rice_2036 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2083)
Robot find: Robot is close to the food_rice_2036. Robot is close to the fryingpan_2083. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
putin_executor(food_rice_2036, fryingpan_2083)
Robot find: Robot is close to the food_rice_2036. Robot is close to the fryingpan_2083. Robot is close to the kitchen_counter_230. food_rice_2036 is inside fryingpan_2083. food_rice_2036 is close fryingpan_2083. fryingpan_2083 is close food_rice_2036. food_rice_2036 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2020)
Robot find: Robot is close to the fridge_289. Robot is close to the food_egg_2020. 
##############################
From agent.py
grab_executor(food_egg_2020)
Robot find: Robot is close to the fridge_289. Robot is close to the food_egg_2020. Grabbing food_egg_2020 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2083)
Robot find: Robot is close to the food_egg_2020. Robot is close to the fryingpan_2083. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
putin_executor(food_egg_2020, fryingpan_2083)
Robot find: Robot is close to the food_egg_2020. Robot is close to the fryingpan_2083. Robot is close to the kitchen_counter_230. food_egg_2020 is inside fryingpan_2083. fryingpan_2083 is close food_egg_2020. food_egg_2020 is close fryingpan_2083. food_egg_2020 released by right hand. 
##############################
From agent.py
grab_executor(fryingpan_2083)
Robot find: Robot is close to the food_egg_2020. Robot is close to the fryingpan_2083. Robot is close to the kitchen_counter_230. Grabbing fryingpan_2083 by right hand. 
##############################
From agent.py
walk_executor(stove_2065)
Robot find: Robot is close to the fryingpan_2083. Robot is close to the kitchen_counter_230. Robot is close to the stove_2065. 
##############################
From agent.py
put_executor(fryingpan_2083, stove_2065)
Robot find: Robot is close to the fryingpan_2083. Robot is close to the kitchen_counter_230. Robot is close to the stove_2065. fryingpan_2083 is close stove_2065. fryingpan_2083 is on stove_2065. stove_2065 is close fryingpan_2083. fryingpan_2083 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2065)
Robot find: Robot is close to the fryingpan_2083. Robot is close to the kitchen_counter_230. Robot is close to the stove_2065. stove_2065 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_1000_around_cupboard_229(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==229
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(plate,cupboard_instance)
        else:
            exp(plate,cupboard_instance)
    eff:
        unknown[plate]=False
        close[plate,cupboard_instance]=True
        close[cupboard_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior serve_fried_rice(fried_rice:item, plate:item):
    body:
        achieve_once on(fried_rice, plate)
        # Place the fried rice on the plate

behavior __goal__():
    body:
        bind plate: item where:
            is_plate(plate)
        # Select a plate
        
        bind fried_rice: item where:
            is_food_rice(fried_rice) and is_food(fried_rice)
        # Select the cooked fried rice
        
        serve_fried_rice(fried_rice, plate)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior serve_fried_rice(fried_rice:item, plate:item):
    body:
        achieve_once on(fried_rice, plate)
        # Place the fried rice on the plate

behavior __goal__():
    body:
        bind plate: item where:
            is_plate(plate)
        # Select a plate
        
        bind fried_rice: item where:
            is_food_rice(fried_rice) and is_food(fried_rice)
        # Select the cooked fried rice
        
        serve_fried_rice(fried_rice, plate)

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_229)open_executor(cupboard_229)exp(plate_1000, cupboard_229)walk_executor(food_rice_2036)grab_executor(food_rice_2036)walk_executor(plate_1000)put_executor(food_rice_2036, plate_1000)
##############################
From agent.py
walk_executor(cupboard_229)
Robot find: Robot is close to the cupboard_229. 
##############################
From agent.py
open_executor(cupboard_229)
Robot find: Robot is close to the cupboard_229. cupboard_229 is opened. 
##############################
From agent.py
exp(plate_1000, cupboard_229)
Fail to find plate_1000 around cupboard_229. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_1001)open_executor(dishwasher_1001)exp(plate_1000, dishwasher_1001)walk_executor(food_rice_2036)grab_executor(food_rice_2036)walk_executor(plate_1000)put_executor(food_rice_2036, plate_1000)
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. 
##############################
From agent.py
open_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is opened. 
##############################
From agent.py
exp(plate_1000, dishwasher_1001)
Fail to find plate_1000 around dishwasher_1001. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_116)exp(plate_1000, closetdrawer_116)walk_executor(food_rice_2036)grab_executor(food_rice_2036)walk_executor(plate_1000)put_executor(food_rice_2036, plate_1000)
##############################
From agent.py
walk_executor(closetdrawer_116)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(plate_1000, closetdrawer_116)
Fail to find plate_1000 around closetdrawer_116. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_119)exp(plate_1000, closetdrawer_119)walk_executor(food_rice_2036)grab_executor(food_rice_2036)walk_executor(plate_1000)put_executor(food_rice_2036, plate_1000)
##############################
From agent.py
walk_executor(closetdrawer_119)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py
exp(plate_1000, closetdrawer_119)
Fail to find plate_1000 around closetdrawer_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_119)exp(plate_1000, closetdrawer_119)walk_executor(food_rice_2036)grab_executor(food_rice_2036)walk_executor(plate_1000)put_executor(food_rice_2036, plate_1000)
##############################
From agent.py
walk_executor(closetdrawer_119)
Robot find: Robot is close to the dresser_108. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find plate_1000 ?
Answer: Go to dining_room_201. Find sink_231, and you will see plate_1000 on top of it.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_201. Find sink_231, and you will see plate_1000 on top of it.

The actions you have taken:
Action 1: Walk to kitchen_counter_230.
Action 2: look for food_rice_2036 around kitchen_counter_230.
Action 3: Walk to fridge_289.
Action 4: Switch off fridge_289.
Action 5: Open fridge_289.
Action 6: look for food_rice_2036 around fridge_289.
Action 7: Observe around food_rice_2036 with the question of look around this place.
Action 8: Observe around food_egg_2020 with the question of look around this place.
Action 9: Grab food_rice_2036.
Action 10: Walk to fryingpan_2083.
Action 11: Put food_rice_2036 into fryingpan_2083.
Action 12: Walk to food_egg_2020.
Action 13: Grab food_egg_2020.
Action 14: Walk to fryingpan_2083.
Action 15: Put food_egg_2020 into fryingpan_2083.
Action 16: Grab fryingpan_2083.
Action 17: Walk to stove_2065.
Action 18: Put fryingpan_2083 on stove_2065.
Action 19: Switch on stove_2065.
Action 20: Walk to cupboard_229.
Action 21: Open cupboard_229.
Action 22: look for plate_1000 around cupboard_229.
Action 23: Walk to dishwasher_1001.
Action 24: Open dishwasher_1001.
Action 25: look for plate_1000 around dishwasher_1001.
Action 26: Walk to closetdrawer_116.
Action 27: look for plate_1000 around closetdrawer_116.
Action 28: Walk to closetdrawer_119.
Action 29: look for plate_1000 around closetdrawer_119.
Action 30: Walk to closetdrawer_119.

##############################
From agent.py
exp(plate_1000, closetdrawer_119)
Fail to find plate_1000 around closetdrawer_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_231)exp(plate_1000, sink_231)walk_executor(food_rice_2036)grab_executor(food_rice_2036)walk_executor(plate_1000)put_executor(food_rice_2036, plate_1000)
##############################
From agent.py
walk_executor(sink_231)
Robot find: soap_2054, plate_1000, Robot is close to the kitchen_counter_230. Robot is close to the sink_231. 
##############################
From agent.py
exp(plate_1000, sink_231)
Find plate_1000. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_rice_2036)grab_executor(food_rice_2036)walk_executor(plate_1000)put_executor(food_rice_2036, plate_1000)
##############################
From agent.py
walk_executor(food_rice_2036)
Robot find: Robot is close to the fryingpan_2083. Robot is close to the food_rice_2036. 
##############################
From agent.py
grab_executor(food_rice_2036)
Robot find: Robot is close to the fryingpan_2083. Robot is close to the food_rice_2036. Grabbing food_rice_2036 by right hand. 
##############################
From agent.py
walk_executor(plate_1000)
Robot find: Robot is close to the food_rice_2036. Robot is close to the plate_1000. Robot is close to the sink_231. 
##############################
From agent.py
put_executor(food_rice_2036, plate_1000)
Robot find: Robot is close to the food_rice_2036. Robot is close to the plate_1000. Robot is close to the sink_231. plate_1000 is close food_rice_2036. food_rice_2036 is close plate_1000. food_rice_2036 is on plate_1000. food_rice_2036 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Fried rice with egg.
Action History:
['walk_executor(kitchen_counter_230)', 'walk_executor(fridge_289)', 'switchoff_executor(fridge_289)', 'open_executor(fridge_289)', 'grab_executor(food_rice_2036)', 'walk_executor(fryingpan_2083)', 'putin_executor(food_rice_2036, fryingpan_2083)', 'walk_executor(food_egg_2020)', 'grab_executor(food_egg_2020)', 'walk_executor(fryingpan_2083)', 'putin_executor(food_egg_2020, fryingpan_2083)', 'grab_executor(fryingpan_2083)', 'walk_executor(stove_2065)', 'put_executor(fryingpan_2083, stove_2065)', 'switchon_executor(stove_2065)', 'walk_executor(cupboard_229)', 'open_executor(cupboard_229)', 'walk_executor(dishwasher_1001)', 'open_executor(dishwasher_1001)', 'walk_executor(closetdrawer_116)', 'walk_executor(closetdrawer_119)', 'walk_executor(closetdrawer_119)', 'walk_executor(sink_231)', 'walk_executor(food_rice_2036)', 'grab_executor(food_rice_2036)', 'walk_executor(plate_1000)', 'put_executor(food_rice_2036, plate_1000)']
Time info:
Time consume: 182 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 3
goal correct times: 0
action_num: 27

Task complete rate:
Keystate: k1 - Requires: 12 steps
Keystate: k2 - Requires: 8 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
