From agent.py
Reset goals: The sub-goals are: 
['wash all the bowls and the plates with dishwasher']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2071_around_dishwasher_1001(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==1001
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(bowl,dishwasher_instance)
        else:
            exp(bowl,dishwasher_instance)
    eff:
        unknown[bowl]=False
        close[bowl,dishwasher_instance]=True
        close[dishwasher_instance,bowl]=True
    

behavior find_plate_1000_around_dishwasher_1001(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==1001
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(plate,dishwasher_instance)
        else:
            exp(plate,dishwasher_instance)
    eff:
        unknown[plate]=False
        close[plate,dishwasher_instance]=True
        close[dishwasher_instance,plate]=True
    

behavior find_detergent_2084_around_dishwasher_1001(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==1001
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(detergent,dishwasher_instance)
        else:
            exp(detergent,dishwasher_instance)
    eff:
        unknown[detergent]=False
        close[detergent,dishwasher_instance]=True
        close[dishwasher_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(o: item, dishwasher: item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher: item):
    body:
        achieve_once closed(dishwasher)
        # Close the dishwasher door
        achieve_once is_on(dishwasher)
        # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Bind a dishwasher
        foreach o: item:
            if (is_bowl(o) or is_plate(o)) and dirty(o):
                load_dishwasher(o, dishwasher)
        start_dishwasher(dishwasher)
        # Start washing all the dirty bowls and plates in the dishwasher

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior load_dishwasher(o: item, dishwasher: item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher: item):
    body:
        achieve_once closed(dishwasher)
        # Close the dishwasher door
        achieve_once is_on(dishwasher)
        # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Bind a dishwasher
        foreach o: item:
            if (is_bowl(o) or is_plate(o)) and dirty(o):
                load_dishwasher(o, dishwasher)
        start_dishwasher(dishwasher)
        # Start washing all the dirty bowls and plates in the dishwasher

##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. 
##############################
From agent.py
switchon_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to load all the bowls and plates into the dishwasher, ensuring they are placed inside, then close the dishwasher door before turning it on.
##############################
From agent.py
Human Instruction: You need to load all the bowls and plates into the dishwasher, ensuring they are placed inside, then close the dishwasher door before turning it on.

The actions you have taken:
Action 1: Walk to dishwasher_1001.
Action 2: Switch on dishwasher_1001.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2072_around_kitchen_counter_230(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(bowl,kitchen_counter_instance)
        else:
            exp(bowl,kitchen_counter_instance)
    eff:
        unknown[bowl]=False
        close[bowl,kitchen_counter_instance]=True
        close[kitchen_counter_instance,bowl]=True
    

behavior find_plate_1000_around_kitchen_counter_230(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(plate,kitchen_counter_instance)
        else:
            exp(plate,kitchen_counter_instance)
    eff:
        unknown[plate]=False
        close[plate,kitchen_counter_instance]=True
        close[kitchen_counter_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(o: item, dishwasher: item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the bowl or plate inside the dishwasher

behavior start_dishwasher(dishwasher: item):
    body:
        achieve_once closed(dishwasher)  # Close the dishwasher door
        achieve_once is_on(dishwasher)  # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher
        
        foreach o: item:
            # Load all bowls and plates into the dishwasher
            if is_plate(o) or is_bowl(o):
                load_dishwasher(o, dishwasher)
        
        start_dishwasher(dishwasher)  # Start the dishwasher

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior load_dishwasher(o: item, dishwasher: item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the bowl or plate inside the dishwasher

behavior start_dishwasher(dishwasher: item):
    body:
        achieve_once closed(dishwasher)  # Close the dishwasher door
        achieve_once is_on(dishwasher)  # Turn on the dishwasher

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher
        
        foreach o: item:
            # Load all bowls and plates into the dishwasher
            if is_plate(o) or is_bowl(o):
                load_dishwasher(o, dishwasher)
        
        start_dishwasher(dishwasher)  # Start the dishwasher

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)exp(bowl_2071, kitchen_counter_230)walk_executor(dishwasher_1001)switchoff_executor(dishwasher_1001)open_executor(dishwasher_1001)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(kitchen_counter_230)exp(bowl_2072, kitchen_counter_230)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(kitchen_counter_230)exp(plate_1000, kitchen_counter_230)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the kitchen_counter_230. 
##############################
From agent.py
exp(bowl_2071, kitchen_counter_230)
Fail to find bowl_2071 around kitchen_counter_230. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffee_table_2068)exp(bowl_2071, coffee_table_2068)walk_executor(dishwasher_1001)switchoff_executor(dishwasher_1001)open_executor(dishwasher_1001)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(coffee_table_2068)exp(bowl_2072, coffee_table_2068)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(table_226)exp(plate_1000, table_226)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(coffee_table_2068)
Robot find: Robot is close to the coffee_table_2068. 
##############################
From agent.py
exp(bowl_2071, coffee_table_2068)
Fail to find bowl_2071 around coffee_table_2068. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_107)exp(bowl_2071, table_107)walk_executor(dishwasher_1001)switchoff_executor(dishwasher_1001)open_executor(dishwasher_1001)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(table_107)exp(bowl_2072, table_107)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(table_107)exp(plate_1000, table_107)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(table_107)
Robot find: mat_173, clothes_hat_2045, clothes_gloves_2046, drawing_176, drawing_174, drawing_175, Robot is close to the table_107. 
##############################
From agent.py
exp(bowl_2071, table_107)
Fail to find bowl_2071 around table_107. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_355)exp(bowl_2071, table_355)walk_executor(dishwasher_1001)switchoff_executor(dishwasher_1001)open_executor(dishwasher_1001)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(table_355)exp(bowl_2072, table_355)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(table_355)exp(plate_1000, table_355)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(table_355)
Robot find: mat_401, headset_2062, spectacles_2082, pillow_406, remote_control_2052, clothes_jacket_2047, pillow_405, cat_2055, drawing_400, drawing_404, hairbrush_2002, vacuum_cleaner_2070, Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. 
##############################
From agent.py
exp(bowl_2071, table_355)
Fail to find bowl_2071 around table_355. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_226)exp(bowl_2071, table_226)walk_executor(dishwasher_1001)switchoff_executor(dishwasher_1001)open_executor(dishwasher_1001)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(table_226)exp(bowl_2072, table_226)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(table_226)exp(plate_1000, table_226)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(table_226)
Robot find: bowl_2071, coffee_filter_2000, drawing_2003, bowl_2072, mat_236, fork_2080, fork_2081, mat_237, Robot is close to the table_226. 
##############################
From agent.py
exp(bowl_2071, table_226)
Find bowl_2071. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_1001)switchoff_executor(dishwasher_1001)open_executor(dishwasher_1001)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(dishwasher_1001)putin_executor(bowl_2071, dishwasher_1001)walk_executor(bowl_2072)grab_executor(bowl_2072)walk_executor(dishwasher_1001)putin_executor(bowl_2072, dishwasher_1001)walk_executor(table_226)exp(plate_1000, table_226)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. 
##############################
From agent.py
switchoff_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is turned off. 
##############################
From agent.py
open_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is opened. 
##############################
From agent.py
walk_executor(bowl_2071)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2071. 
##############################
From agent.py
grab_executor(bowl_2071)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2071. Grabbing bowl_2071 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the bowl_2071. Robot is close to the dishwasher_1001. 
##############################
From agent.py
putin_executor(bowl_2071, dishwasher_1001)
Robot find: Robot is close to the bowl_2071. Robot is close to the dishwasher_1001. bowl_2071 is close dishwasher_1001. bowl_2071 is inside dishwasher_1001. dishwasher_1001 is close bowl_2071. bowl_2071 released by right hand. 
##############################
From agent.py
walk_executor(bowl_2072)
Robot find: Robot is close to the bowl_2072. Robot is close to the table_226. 
##############################
From agent.py
grab_executor(bowl_2072)
Robot find: Robot is close to the bowl_2072. Robot is close to the table_226. Grabbing bowl_2072 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the bowl_2072. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. 
##############################
From agent.py
putin_executor(bowl_2072, dishwasher_1001)
Robot find: Robot is close to the bowl_2072. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. bowl_2072 is close dishwasher_1001. bowl_2072 is inside dishwasher_1001. dishwasher_1001 is close bowl_2072. bowl_2072 released by right hand. 
##############################
From agent.py
walk_executor(table_226)
Robot find: Robot is close to the table_226. 
##############################
From agent.py
exp(plate_1000, table_226)
Fail to find plate_1000 around table_226. 
##############################
From agent.py-> find a plan in act()
walk_executor(fork_2081)exp(plate_1000, fork_2081)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(fork_2081)
Robot find: Robot is close to the table_226. Robot is close to the fork_2081. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find plate_1000 ?
Answer: The target item, plate_1000, is located in the dining_room_201. You can find plate_1000 on top of sink_231. Please retrieve it from there.
Re-decompose: None

##############################
From agent.py
Human Instruction: You need to load all the bowls and plates into the dishwasher, ensuring they are placed inside, then close the dishwasher door before turning it on.
The target item, plate_1000, is located in the dining_room_201. You can find plate_1000 on top of sink_231. Please retrieve it from there.

The actions you have taken:
Action 1: Walk to dishwasher_1001.
Action 2: Switch on dishwasher_1001.
Action 3: Walk to kitchen_counter_230.
Action 4: look for bowl_2071 around kitchen_counter_230.
Action 5: Walk to coffee_table_2068.
Action 6: look for bowl_2071 around coffee_table_2068.
Action 7: Walk to table_107.
Action 8: look for bowl_2071 around table_107.
Action 9: Walk to table_355.
Action 10: look for bowl_2071 around table_355.
Action 11: Walk to table_226.
Action 12: look for bowl_2071 around table_226.
Action 13: Walk to dishwasher_1001.
Action 14: Switch off dishwasher_1001.
Action 15: Open dishwasher_1001.
Action 16: Walk to bowl_2071.
Action 17: Grab bowl_2071.
Action 18: Walk to dishwasher_1001.
Action 19: Put bowl_2071 into dishwasher_1001.
Action 20: Walk to bowl_2072.
Action 21: Grab bowl_2072.
Action 22: Walk to dishwasher_1001.
Action 23: Put bowl_2072 into dishwasher_1001.
Action 24: Walk to table_226.
Action 25: look for plate_1000 around table_226.
Action 26: Walk to fork_2081.

##############################
From agent.py
exp(plate_1000, fork_2081)
Fail to find plate_1000 around fork_2081. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['wash all the bowls and the plates with dishwasher']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_sink_231(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(detergent,sink_instance)
        else:
            exp(detergent,sink_instance)
    eff:
        unknown[detergent]=False
        close[detergent,sink_instance]=True
        close[sink_instance,detergent]=True
    

behavior find_plate_1000_around_sink_231(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(plate,sink_instance)
        else:
            exp(plate,sink_instance)
    eff:
        unknown[plate]=False
        close[plate,sink_instance]=True
        close[sink_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

def has_plate_or_bowl(sink:item):
    # Function to check if there are plates or bowls in the sink
    symbol has_plate_or_bowl= exists o: item : ((is_plate(o) or is_bowl(o)) and inside(o, sink))
    return has_plate_or_bowl

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and id[sink]==231
        # Select sink with ID 231
        
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher
        
        # First, ensure we have the specific plate_1000 item
        bind plate_1000: item where:
            is_plate(plate_1000) and id[plate_1000]==1000
        
        # If plate_1000 is inside the sink, put it into the dishwasher
        if inside(plate_1000, sink):
            load_dishwasher(plate_1000, dishwasher)
        
        foreach o: item:
        # Load all bowls and any other plates from the sink into the dishwasher
            if (is_plate(o) or is_bowl(o)) and inside(o, sink) and o = plate_1000:
                load_dishwasher(o, dishwasher)
        
        start_dishwasher(dishwasher) # Start the dishwasher


#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2073_around_faucet_232(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind faucet_instance:item where:
            is_faucet(faucet_instance) and id[faucet_instance]==232
        achieve close_char(char,faucet_instance)
        if can_open(faucet_instance):
            achieve_once open(faucet_instance)
            exp(cleaning_solution,faucet_instance)
        else:
            exp(cleaning_solution,faucet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,faucet_instance]=True
        close[faucet_instance,cleaning_solution]=True
    

behavior find_detergent_2084_around_closetdrawer_158(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==158
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(detergent,closetdrawer_instance)
        else:
            exp(detergent,closetdrawer_instance)
    eff:
        unknown[detergent]=False
        close[detergent,closetdrawer_instance]=True
        close[closetdrawer_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)
        # Place the item inside the dishwasher

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher) # Close the dishwasher door
        achieve_once is_on(dishwasher) # Turn on the dishwasher

def has_plates_inside_dishwasher(dishwasher:item):
    # Function to check if there are plates inside the dishwasher
    symbol has_plates= exists o: item : (is_plate(o) and inside(o, dishwasher))
    return has_plates

behavior __goal__():
    body:
        bind dishwasher: item where:
            is_dishwasher(dishwasher)
        # Select a dishwasher
        bind plate_1000: item where:
            is_plate(plate_1000) and id[plate_1000]==1000
        # Select the plate with ID 1000

        achieve_once inside(plate_1000, dining_room_201)
        # Ensure plate_1000 is in the dining room 201
        
        foreach o: item:
            if is_bowl(o) and inside(o, dining_room_201):
                load_dishwasher(o, dishwasher)

        if not visited(plate_1000):
            observe(plate_1000, "Retrieve plate_1000 from top of sink_231")

        if is_plate(plate_1000) and not has_plates_inside_dishwasher(dishwasher):
            load_dishwasher(plate_1000, dishwasher)

        start_dishwasher(dishwasher) # Start the dishwasher


#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_1000_around_sink_231(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(plate,sink_instance)
        else:
            exp(plate,sink_instance)
    eff:
        unknown[plate]=False
        close[plate,sink_instance]=True
        close[sink_instance,plate]=True
    

behavior find_detergent_2084_around_sink_231(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(detergent,sink_instance)
        else:
            exp(detergent,sink_instance)
    eff:
        unknown[detergent]=False
        close[detergent,sink_instance]=True
        close[sink_instance,detergent]=True
    

behavior find_cleaning_solution_2073_around_closetdrawer_158(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==158
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(cleaning_solution,closetdrawer_instance)
        else:
            exp(cleaning_solution,closetdrawer_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,closetdrawer_instance]=True
        close[closetdrawer_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher)
        achieve_once is_on(dishwasher)

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and id[sink]==231
        bind dishwasher: item where:
            is_dishwasher(dishwasher) and id[dishwasher]==1001
        bind plate_1000: item where:
            is_plate(plate_1000) and id[plate_1000]==1000
        foreach o: item:
            if is_plate(o) or is_bowl(o) and inside(o, sink):
                load_dishwasher(o, dishwasher)
        start_dishwasher(dishwasher)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior load_dishwasher(o:item, dishwasher:item):
    body:
        achieve_once inside(o, dishwasher)

behavior start_dishwasher(dishwasher:item):
    body:
        achieve_once closed(dishwasher)
        achieve_once is_on(dishwasher)

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and id[sink]==231
        bind dishwasher: item where:
            is_dishwasher(dishwasher) and id[dishwasher]==1001
        bind plate_1000: item where:
            is_plate(plate_1000) and id[plate_1000]==1000
        foreach o: item:
            if is_plate(o) or is_bowl(o) and inside(o, sink):
                load_dishwasher(o, dishwasher)
        start_dishwasher(dishwasher)

##############################
From agent.py-> find a plan in act()
walk_executor(sink_231)exp(plate_1000, sink_231)walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(sink_231)
Robot find: soap_2054, plate_1000, Robot is close to the kitchen_counter_230. Robot is close to the sink_231. 
##############################
From agent.py
exp(plate_1000, sink_231)
Find plate_1000. 
##############################
From agent.py-> find a plan in act()
walk_executor(plate_1000)grab_executor(plate_1000)walk_executor(dishwasher_1001)putin_executor(plate_1000, dishwasher_1001)close_executor(dishwasher_1001)switchon_executor(dishwasher_1001)
##############################
From agent.py
walk_executor(plate_1000)
Robot find: Robot is close to the sink_231. Robot is close to the plate_1000. 
##############################
From agent.py
grab_executor(plate_1000)
Robot find: Robot is close to the sink_231. Robot is close to the plate_1000. Grabbing plate_1000 by right hand. 
##############################
From agent.py
walk_executor(dishwasher_1001)
Robot find: Robot is close to the plate_1000. Robot is close to the bowl_2072. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. 
##############################
From agent.py
putin_executor(plate_1000, dishwasher_1001)
Robot find: Robot is close to the plate_1000. Robot is close to the bowl_2072. Robot is close to the dishwasher_1001. Robot is close to the bowl_2071. plate_1000 is inside dishwasher_1001. plate_1000 is close dishwasher_1001. dishwasher_1001 is close plate_1000. plate_1000 released by right hand. 
##############################
From agent.py
close_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is closed. 
##############################
From agent.py
switchon_executor(dishwasher_1001)
Robot find: Robot is close to the dishwasher_1001. dishwasher_1001 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
wash all the bowls and the plates with dishwasher
Action History:
['walk_executor(dishwasher_1001)', 'switchon_executor(dishwasher_1001)', 'walk_executor(kitchen_counter_230)', 'walk_executor(coffee_table_2068)', 'walk_executor(table_107)', 'walk_executor(table_355)', 'walk_executor(table_226)', 'walk_executor(dishwasher_1001)', 'switchoff_executor(dishwasher_1001)', 'open_executor(dishwasher_1001)', 'walk_executor(bowl_2071)', 'grab_executor(bowl_2071)', 'walk_executor(dishwasher_1001)', 'putin_executor(bowl_2071, dishwasher_1001)', 'walk_executor(bowl_2072)', 'grab_executor(bowl_2072)', 'walk_executor(dishwasher_1001)', 'putin_executor(bowl_2072, dishwasher_1001)', 'walk_executor(table_226)', 'walk_executor(fork_2081)', 'walk_executor(sink_231)', 'walk_executor(plate_1000)', 'grab_executor(plate_1000)', 'walk_executor(dishwasher_1001)', 'putin_executor(plate_1000, dishwasher_1001)', 'close_executor(dishwasher_1001)', 'switchon_executor(dishwasher_1001)']
Time info:
Time consume: 181 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 5
goal correct times: 0
action_num: 27

Task complete rate:
1
Scene_id: 0
##############################
