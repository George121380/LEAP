[
    {
        "task_name": "Turn on light",
        "source_sub_task": "Turn on the lights in the bedroom and the bathroom.",
        "cdl": " \nbehavior __goal__():\n    body:\n        bind bedroom: item where:\n            is_bedroom(bedroom)\n        # Find the bedroom\n\n        bind bathroom: item where:\n            is_bathroom(bathroom)\n        # Find the bathroom\n\n        bind bedroom_light: item where:\n            is_light(bedroom_light) and inside(bedroom_light, bedroom)\n        # Select a light in the bedroom\n\n        bind bathroom_light: item where:\n            is_light(bathroom_light) and inside(bathroom_light, bathroom)\n        # Select a light in the bathroom\n\n        achieve is_on(bedroom_light)\n        # Turn on the bedroom light\n\n        achieve is_on(bathroom_light)\n        # Turn on the bathroom light\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "Slice the chicken.",
        "cdl": " \nbehavior slice_chicken(chicken:item, cutting_board:item, knife:item):\n    body:\n        achieve_once inhand(knife)\n        # Ensure the knife is held in hand to slice the chicken\n\n        achieve on(chicken, cutting_board)\n        # Ensure the chicken is placed on the cutting board for slicing\n\n        achieve cut(chicken)\n        # Slice the chicken\n\nbehavior __goal__():\n    body:\n        bind chicken: item where:\n            is_food_chicken(chicken)\n        # Select the chicken to be sliced\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select a cutting board\n\n        bind knife: item where:\n            is_knife(knife)\n        # Select a knife\n\n        slice_chicken(chicken, cutting_board, knife)\n        # Perform the slicing operation on the chicken\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "1. Identify a table in the dining room and put the milk and egg on it.",
        "cdl": " \ndef is_in_dining_room(o:item):\n    # Function to check if an item is inside the dining room\n    symbol in_dining_room = exists room: item : (is_dining_room(room) and inside(o, room))\n    return in_dining_room\n\nbehavior put_on_table(item:item, table:item):\n    body:\n        achieve on(item, table)\n        # Place the item on the table\n\nbehavior __goal__():\n    body:\n        bind milk: item where:\n            is_milk(milk)\n        # Select the milk\n\n        bind egg: item where:\n            is_food_egg(egg)\n        # Select the egg\n\n        bind dining_table: item where:\n            is_table(dining_table) and is_in_dining_room(dining_table)\n        # Select a table inside the dining room\n\n        put_on_table(milk, dining_table)\n        # Put milk on the table\n\n        put_on_table(egg, dining_table)\n        # Put egg on the table\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "2. Remove all items from the fridge and throw them into the trashcan.",
        "cdl": " \nbehavior throw_items_in_trash(fridge:item, trashcan:item):\n    body:\n        foreach item: item:\n            if inside(item, fridge):\n                achieve inside(item, trashcan)\n                # Throw each item in the fridge into the trashcan\n\nbehavior __goal__():\n    body:\n        bind fridge: item where:\n            is_fridge(fridge)\n        # Select the fridge\n\n        bind trashcan: item where:\n            is_trashcan(trashcan)\n        # Select a trashcan\n\n        throw_items_in_trash(fridge, trashcan)\n        # Throw all items in the fridge to the trashcan\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "3. Place the milk and eggs back in the fridge.",
        "cdl": " \nbehavior put_food_back_in_fridge(food:item, fridge:item):\n    body:\n        achieve inside(food, fridge)\n\nbehavior close_the_fridge_door(fridge:item):\n    body:\n        achieve closed(fridge)\n\nbehavior __goal__():\n    body:\n        bind table: item where:\n            is_table(table) and id[table]==226\n        # Select the table with ID 226 where the milk and eggs are placed\n\n        bind milk: item where:\n            is_milk(milk)\n        # Select the milk\n\n        bind eggs: item where:\n            is_food_egg(eggs)\n        # Select the eggs\n\n        bind fridge: item where:\n            is_fridge(fridge)\n        # Select the fridge\n\n        put_food_back_in_fridge(milk, fridge)\n        put_food_back_in_fridge(eggs, fridge)\n        close_the_fridge_door(fridge)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "Use a pot to boil water.",
        "cdl": " \nbehavior fill_pot_with_water(pot:item):\n    body:\n        achieve has_water(pot)\n\nbehavior place_pot_on_stove(pot:item, stove:item):\n    body:\n        achieve on(pot, stove)\n\nbehavior turn_on_stove(stove:item):\n    body:\n        achieve is_on(stove)\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot)\n        # Select a pot\n\n        bind stove: item where:\n            is_stove(stove)\n        # Select a stove\n\n        fill_pot_with_water(pot)\n        place_pot_on_stove(pot, stove)\n        turn_on_stove(stove)\n"
    },
    {
        "task_name": "Wash windows",
        "source_sub_task": "Open the windows in the bathroom.",
        "cdl": " \nbehavior open_window(window:item):\n    body:\n        achieve open(window)\n\nbehavior __goal__():\n    body:\n        bind bathroom: item where:\n            is_bathroom(bathroom)\n        # Select the bathroom\n\n        bind window: item where:\n            is_window(window) and inside(window, bathroom)\n        # Select a window inside the bathroom\n\n        open_window(window)\n        # Open the window in the bathroom\n "
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "1. Find the book and put it on the table in the home office.",
        "cdl": " \ndef on_home_office_table(book:item, table:item):\n    # Function to check if a book is on the home office table\n    symbol is_on_table = exists o: item : (o == book and on(o, table))\n    return is_on_table\n\nbehavior __goal__():\n    body:\n        bind book: item where:\n            is_book(book)\n        # Select the book\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Select the home office\n\n        bind table: item where:\n            is_table(table) and inside(table, home_office)\n        # Select the table inside the home office\n\n        if not on_home_office_table(book, table):\n            # If the book is not on the home office table, put it there\n            achieve on(book, table)\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "2. Turn on the light in the home office.",
        "cdl": " \nbehavior __goal__():\n    body:\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Select the home office\n\n        bind home_office_light: item where:\n            is_light(home_office_light) and inside(home_office_light, home_office)\n        # Select a light in the home office\n\n        achieve is_on(home_office_light)\n        # Turn on the home office light\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "1. Fry the steak.",
        "cdl": " \nbehavior fry_steak(steak:item, fryingpan:item, oil:item, stove:item):\n    body:\n        achieve inside(oil, fryingpan)\n        # Add oil into the frying pan\n\n        achieve on(fryingpan, stove)\n        # Place the frying pan on the stove\n\n        achieve is_on(stove)\n        # Turn on the stove\n\n        achieve inside(steak, fryingpan)\n        # Place the steak in the frying pan\n\n        achieve close_char(char, fryingpan)\n        # Stay close to the frying pan to monitor the steak\n\nbehavior __goal__():\n    body:\n        bind steak: item where:\n            is_food_steak(steak)\n        # Select the steak to be fried\n\n        bind fryingpan: item where:\n            is_fryingpan(fryingpan)\n        # Select a frying pan\n\n        bind oil: item where:\n            is_oil(oil)\n        # Select the oil\n\n        bind stove: item where:\n            is_stove(stove)\n        # Select a stove\n\n        fry_steak(steak, fryingpan, oil, stove)\n        # Execute the frying of the steak\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "2. Cut the steak.",
        "cdl": " \nbehavior cut_the_steak(steak:item, cutting_board:item, knife:item):\n    body:\n        achieve_once inhand(knife)\n        # Ensure the knife is held in hand to cut the steak\n\n        achieve on(steak, cutting_board)\n        # Ensure the steak is placed on the cutting board for cutting\n\n        achieve cut(steak)\n        # Cut the steak\n\nbehavior __goal__():\n    body:\n        bind steak: item where:\n            is_food_steak(steak)\n        # Select the steak to be cut\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select a cutting board\n\n        bind knife: item where:\n            is_knife(knife)\n        # Select a knife\n\n        cut_the_steak(steak, cutting_board, knife)\n        # Perform the cutting operation on the steak\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "3. Put the steak on a plate.",
        "cdl": " \nbehavior put_steak_on_plate(steak:item, plate:item):\n    body:\n        achieve on(steak, plate)\n        # Place the steak on the plate\n\nbehavior __goal__():\n    body:\n        bind steak: item where:\n            is_food_steak(steak)\n        # Select the steak, which is already cut\n\n        bind plate: item where:\n            is_plate(plate)\n        # Select a plate to place the steak\n\n        put_steak_on_plate(steak, plate)\n        # Perform the action of putting the steak on the plate\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "1. Find a pizza and a hamburger.",
        "cdl": " \ndef is_pizza_or_hamburger(o: item):\n    # Function to check if an item is pizza or hamburger\n    return is_food_pizza(o) or is_food_hamburger(o)\n\nbehavior find_food_item(o: item):\n    body:\n        observe(o, \"Check if the item is pizza or hamburger\") \n\nbehavior __goal__():\n    body:\n        foreach o: item:\n            if is_pizza_or_hamburger(o) and not visited(o):\n                find_food_item(o)\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "2. Put the pizza and the hamburger on a plate.",
        "cdl": "behavior place_on_plate(item:item, plate:item):\n    body:\n        achieve on(item, plate)\n\nbehavior __goal__():\n    body:\n        bind pizza: item where:\n            is_food_pizza(pizza)\n        # Select the pizza\n\n        bind hamburger: item where:\n            is_food_hamburger(hamburger)\n        # Select the hamburger\n\n        bind plate: item where:\n            is_plate(plate)\n        # Select a plate\n\n        place_on_plate(pizza, plate)\n        # Put the pizza on the plate\n\n        place_on_plate(hamburger, plate)\n        # Put the hamburger on the plate"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "3. Heat the plate with pizza and hamburger in the microwave.",
        "cdl": " \nbehavior heat_plate_in_microwave(plate:item, microwave:item):\n    body:\n        achieve inside(plate, microwave) \n        # Place the plate inside the microwave\n\n        achieve closed(microwave)\n        # Close the microwave door\n\n        achieve is_on(microwave)\n        # Turn on the microwave to heat the plate\n\nbehavior __goal__():\n    body:\n        bind plate: item where:\n            is_plate(plate) and id[plate] == 1000\n        # Select plate with ID 1000\n\n        bind microwave: item where:\n            is_microwave(microwave)\n        # Select a microwave\n\n        heat_plate_in_microwave(plate, microwave)\n        # Execute the heating operation of the plate in the microwave\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "4. Place the heated plate on a table in the dining room.",
        "cdl": " \ndef is_in_dining_room(o:item):\n    # Function to check if an item is inside the dining room\n    symbol in_dining_room = exists room: item : (is_dining_room(room) and inside(o, room))\n    return in_dining_room\n\nbehavior place_heated_plate_on_table(plate:item, table:item):\n    body:\n        achieve on(plate, table)\n        # Place the heated plate on the table\n\nbehavior __goal__():\n    body:\n        bind plate: item where:\n            is_plate(plate) and id[plate] == 1000\n        # Select the plate with ID 1000\n\n        bind dining_table: item where:\n            is_table(dining_table) and is_in_dining_room(dining_table)\n        # Select a table inside the dining room\n\n        place_heated_plate_on_table(plate, dining_table)\n        # Place the heated plate on the dining table\n"
    },
    {
        "task_name": "Listen to music",
        "source_sub_task": "1. Find the CD player.",
        "cdl": "behavior __goal__():\n    body:\n        foreach player: item:\n            if is_cd_player(player) and not visited(player):\n                observe(player, \"Check if the item is a CD player\")"
    },
    {
        "task_name": "Listen to music",
        "source_sub_task": "2. Insert the CD into the CD player.",
        "cdl": " \nbehavior insert_cd(cd:item, cd_player:item):\n    body:\n        achieve inside(cd, cd_player)\n        # Insert the CD into the CD player\n\nbehavior __goal__():\n    body:\n        bind cd: item where:\n            is_cd(cd)\n        # Select the CD\n\n        bind cd_player: item where:\n            is_cd_player(cd_player) and id[cd_player] == 2060\n        # Select the CD player with ID 2060\n\n        insert_cd(cd, cd_player)\n"
    },
    {
        "task_name": "Listen to music",
        "source_sub_task": "3. Play music using the CD player.",
        "cdl": " \nbehavior play_music(cd_player:item):\n    body:\n        achieve is_on(cd_player)\n\nbehavior __goal__():\n    body:\n        bind cd_player: item where:\n            is_cd_player(cd_player)\n        play_music(cd_player)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "1. Boil the egg.",
        "cdl": " \nbehavior fill_pot_with_water(pot:item):\n    body:\n        achieve has_water(pot)\n\nbehavior place_egg_in_pot(egg:item, pot:item):\n    body:\n        achieve inside(egg, pot)\n\nbehavior place_pot_on_stove(pot:item, stove:item):\n    body:\n        achieve on(pot, stove)\n\nbehavior turn_on_stove(stove:item):\n    body:\n        achieve is_on(stove)\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot)\n        # Select a pot\n\n        bind egg: item where:\n            is_food_egg(egg)\n        # Select an egg\n\n        bind stove: item where:\n            is_stove(stove)\n        # Select a stove\n\n        fill_pot_with_water(pot)\n        place_egg_in_pot(egg, pot)\n        place_pot_on_stove(pot, stove)\n        turn_on_stove(stove)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "2. Wash and cut the vegetables.",
        "cdl": " \nbehavior wash_and_cut_vegetables(vegetable:item, cutting_board:item, knife:item):\n    body:\n        achieve clean(vegetable)\n        # Ensure the vegetables are clean\n\n        achieve_once inhand(knife)\n        # Ensure the knife is held in hand to cut the vegetables\n\n        achieve on(vegetable, cutting_board)\n        # Ensure the vegetables are placed on the cutting board for cutting\n\n        achieve cut(vegetable)\n        # Cut the vegetables\n\nbehavior __goal__():\n    body:\n        bind vegetable: item where:\n            is_food_vegetable(vegetable)\n        # Select the vegetable to be washed and cut\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select a cutting board\n\n        bind knife: item where:\n            is_knife(knife)\n        # Select a knife\n\n        wash_and_cut_vegetables(vegetable, cutting_board, knife)\n        # Perform the operations of washing and cutting the vegetables\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "3. Cut the boiled egg and lemon.",
        "cdl": "\nbehavior cut_item(item:item, knife:item, cutting_board:item):\n    body:\n        achieve_once inhand(knife)\n        # Ensure the knife is held in hand to cut the item\n\n        achieve on(item, cutting_board)\n        # Ensure the item is placed on the cutting board for cutting\n\n        achieve cut(item)\n        # Cut the item\n\nbehavior __goal__():\n    body:\n        bind boiled_egg: item where:\n            is_food_egg(boiled_egg)\n        # Select the boiled egg\n\n        bind lemon: item where:\n            is_food_lemon(lemon)\n        # Select the lemon\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select a cutting board\n\n        bind knife: item where:\n            is_knife(knife)\n        # Select a knife\n\n        cut_item(boiled_egg, knife, cutting_board)\n        cut_item(lemon, knife, cutting_board)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "4. Mix the boiled egg, vegetables, and lemon in a bowl.",
        "cdl": " \nbehavior mix_ingredients(egg:item, vegetables:item, lemon:item, bowl:item):\n    body:\n        achieve inside(egg, bowl)\n        # Place the boiled egg pieces in the bowl\n\n        achieve inside(vegetables, bowl)\n        # Place the cut vegetables into the bowl\n\n        achieve inside(lemon, bowl)\n        # Add the cut lemon into the bowl\n\nbehavior __goal__():\n    body:\n        bind egg: item where:\n            is_food_egg(egg) and cut(egg)\n        # Select the boiled and cut egg\n\n        bind vegetables: item where:\n            is_food_vegetable(vegetables) and cut(vegetables)\n        # Select the washed and cut vegetables\n\n        bind lemon: item where:\n            is_food_lemon(lemon) and cut(lemon)\n        # Select the cut lemon\n\n        bind bowl: item where:\n            is_bowl(bowl)\n        # Select a bowl to mix the ingredients\n\n        mix_ingredients(egg, vegetables, lemon, bowl)\n        # Mix the boiled egg, vegetables, and lemon in the bowl\n"
    },
    {
        "task_name": "Change TV channel",
        "source_sub_task": "Turn on the TV by touching the remote control.",
        "cdl": "\nbehavior touch_remote_control(remote_control:item):\n    body:\n        achieve visited(remote_control)\n        # Ensure the remote control has been located and visited\n\n        achieve_once inhand(remote_control)\n        # Pick up the remote control to perform the action\n\nbehavior __goal__():\n    body:\n        bind remote_control: item where:\n            is_remote_control(remote_control)\n        # Select a remote control\n\n        bind television: item where:\n            is_television(television)\n        # Select a television\n\n        achieve close_char(char, remote_control)\n        # Move character close to the remote control\n\n        touch(remote_control)\n        # Execute the action to touch the remote control for turning on the television\n\n        achieve is_on(television)\n        # Ensure the television is turned on\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "1. Find a table in the dining room.",
        "cdl": "behavior find_table_in_dining_room():\n    body:\n        foreach table: item:\n            if is_table(table) and not visited(table):\n                observe(table, \"Check if there is a table in the dining room\")\n\nbehavior __goal__():\n    body:\n        find_table_in_dining_room()"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "2. Place milk, turkey, egg, fish, and chicken on the table.",
        "cdl": " \ndef is_in_dining_room(o:item):\n    # Function to check if an item is inside the dining room\n    symbol in_dining_room = exists room: item : (is_dining_room(room) and inside(o, room))\n    return in_dining_room\n\nbehavior place_on_table(item:item, table:item):\n    body:\n        achieve on(item, table)\n        # Place the item on the table\n\nbehavior __goal__():\n    body:\n        bind milk: item where:\n            is_milk(milk)\n        # Select the milk\n\n        bind turkey: item where:\n            is_food_turkey(turkey)\n        # Select the turkey\n\n        bind egg: item where:\n            is_food_egg(egg)\n        # Select the egg\n\n        bind fish: item where:\n            is_food_fish(fish)\n        # Select the fish\n\n        bind chicken: item where:\n            is_food_chicken(chicken)\n        # Select the chicken\n\n        bind dining_table: item where:\n            is_table(dining_table) and is_in_dining_room(dining_table)\n        # Select a table inside the dining room\n\n        place_on_table(milk, dining_table)\n        # Put milk on the table\n\n        place_on_table(turkey, dining_table)\n        # Put turkey on the table\n\n        place_on_table(egg, dining_table)\n        # Put egg on the table\n\n        place_on_table(fish, dining_table)\n        # Put fish on the table\n\n        place_on_table(chicken, dining_table)\n        # Put chicken on the table\n"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "1. Place the bowls and plates in the dishwasher and start it.",
        "cdl": " \nbehavior load_dishwasher(o:item, dishwasher:item):\n    body:\n        achieve inside(o, dishwasher)\n        # Place the item inside the dishwasher\n\nbehavior start_dishwasher(dishwasher:item):\n    body:\n        achieve closed(dishwasher) # Close the dishwasher door\n        achieve is_on(dishwasher) # Turn on the dishwasher\n\nbehavior __goal__():\n    body:\n        bind dishwasher: item where:\n            is_dishwasher(dishwasher)\n        # Select a dishwasher\n        foreach o: item:\n        # Load all bowls and plates into the dishwasher\n            if is_bowl(o) or is_plate(o):\n                load_dishwasher(o, dishwasher)\n        start_dishwasher(dishwasher) # Start the dishwasher\n"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "2. Wash the forks by hand.",
        "cdl": " \ndef has_forks(table:item):\n    # Function to check if there are forks on a specified table\n    symbol has_fork= exists o: item : (is_fork(o) and on(o, table))\n    return has_fork\n\nbehavior observe_forks_on_table(table:item):\n    body:\n        observe(table, \"Check if there are forks on the table\")\n\nbehavior wash_forks(fork:item):\n    body:\n        wash(fork) \n        # Wash the fork by hand\n\nbehavior __goal__():\n    body:\n        bind table: item where:\n            is_table(table) and id[table] == 226\n        # Select the table with ID 226\n\n        foreach o: item:\n            if is_fork(o) and on(o, table):\n                wash_forks(o)\n        # Wash each fork that is on the table\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "1. Identify the basket containing clothes.",
        "cdl": "behavior identify_basket_for_clothes(basket:item):\n    body:\n        observe(basket, \"Check if this is the basket containing clothes\")\n\nbehavior __goal__():\n    body:\n        bind basket: item where:\n            is_basket_for_clothes(basket)\n        identify_basket_for_clothes(basket)"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "2. Add the clothes and soap to the washing machine.",
        "cdl": "\nbehavior add_clothes_and_soap_to_washing_machine(clothes:item, soap:item, washing_machine:item):\n    body:\n        achieve inside(clothes, washing_machine)\n        # Place the clothes inside the washing machine\n\n        achieve inside(soap, washing_machine)\n        # Add the soap into the washing machine\n\nbehavior __goal__():\n    body:\n        bind basket: item where:\n            is_basket_for_clothes(basket)\n        # Identify the basket containing clothes\n\n        bind washing_machine: item where:\n            is_washing_machine(washing_machine)\n        # Identify the washing machine\n\n        bind soap: item where:\n            is_soap(soap)\n        # Identify the soap\n\n        foreach clothes: item:\n            if is_clothes(clothes) and inside(clothes, basket):\n                add_clothes_and_soap_to_washing_machine(clothes, soap, washing_machine)\n        # Add all clothes from the basket to the washing machine\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "3. Run the washing machine.",
        "cdl": " \nbehavior turn_on_washing_machine(washing_machine:item):\n    body:\n        achieve is_on(washing_machine)\n        # Turn on the washing machine\n\nbehavior __goal__():\n    body:\n        bind washing_machine: item where:\n            is_washing_machine(washing_machine) and id[washing_machine] == 2007\n        # Select the washing machine with ID 2007\n\n        turn_on_washing_machine(washing_machine)\n        # Execute the action to turn on the washing machine\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "1. Peel and slice the bananas.",
        "cdl": "\nbehavior peel_and_slice_bananas(banana:item, cutting_board:item, knife:item):\n    body:\n        achieve_once inhand(knife)\n        # Ensure the knife is held in hand to slice the banana\n\n        achieve on(banana, cutting_board)\n        # Ensure the banana is placed on the cutting board for slicing\n\n        achieve cut(banana)\n        # Slice the banana\n\nbehavior __goal__():\n    body:\n        bind banana: item where:\n            is_food_banana(banana)\n        # Select the banana to be peeled and sliced\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select a cutting board\n\n        bind knife: item where:\n            is_knife(knife)\n        # Select a knife\n\n        peel_and_slice_bananas(banana, cutting_board, knife)\n        # Perform the operations of peeling and slicing the banana\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "2. Heat oil in a frying pan.",
        "cdl": " \nbehavior heat_oil_in_pan(oil:item, frying_pan:item, stove:item):\n    body:\n        achieve inside(oil, frying_pan)\n        # Pour the oil into the frying pan\n\n        achieve on(frying_pan, stove)\n        # Place the frying pan on the stove\n\n        achieve is_on(stove)\n        # Turn on the stove to heat the oil\n\nbehavior __goal__():\n    body:\n        bind oil: item where:\n            is_oil(oil)\n        # Select the oil\n\n        bind frying_pan: item where:\n            is_fryingpan(frying_pan)\n        # Select a frying pan\n\n        bind stove: item where:\n            is_stove(stove)\n        # Select a stove\n\n        heat_oil_in_pan(oil, frying_pan, stove)\n        # Execute the procedure to heat the oil in the frying pan\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "1. Find a cup and fill it with milk.",
        "cdl": "behavior fill_cup_with_milk(cup:item, milk:item):\n    body:\n        achieve inside(milk, cup)\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup) and id[cup] == 2063\n        # Select the cup with ID 2063\n\n        bind milk: item where:\n            is_milk(milk) and id[milk] == 2043\n        # Select the milk with ID 2043\n\n        fill_cup_with_milk(cup, milk)\n        # Fill the selected cup with milk"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "2. Heat the cup of milk in the microwave.",
        "cdl": " \nbehavior heat_milk_in_microwave(cup_of_milk:item, microwave:item):\n    body:\n        achieve inside(cup_of_milk, microwave)\n        # Place the cup of milk inside the microwave\n\n        achieve closed(microwave)\n        # Close the microwave door\n\n        achieve is_on(microwave)\n        # Turn on the microwave to heat the milk\n\nbehavior __goal__():\n    body:\n        bind cup_of_milk: item where:\n            is_cup(cup_of_milk) and id[cup_of_milk] == 2063\n        # Select the cup with ID 2063 filled with milk\n\n        bind microwave: item where:\n            is_microwave(microwave)\n        # Select a microwave\n\n        heat_milk_in_microwave(cup_of_milk, microwave)\n        # Execute the heating operation of the cup of milk in the microwave\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "Boil some rice in a pot.",
        "cdl": " \nbehavior add_rice_to_pot(rice:item, pot:item):\n    body:\n        achieve inside(rice, pot)\n\nbehavior fill_pot_with_water(pot:item):\n    body:\n        achieve has_water(pot)\n\nbehavior place_pot_on_stove(pot:item, stove:item):\n    body:\n        achieve on(pot, stove)\n\nbehavior turn_on_stove(stove:item):\n    body:\n        achieve is_on(stove)\n\nbehavior __goal__():\n    body:\n        bind rice: item where:\n            is_food_rice(rice)\n        # Select the rice to be boiled\n\n        bind pot: item where:\n            is_pot(pot)\n        # Select a pot\n\n        bind stove: item where:\n            is_stove(stove)\n        # Select a stove\n\n        add_rice_to_pot(rice, pot)\n        fill_pot_with_water(pot)\n        place_pot_on_stove(pot, stove)\n        turn_on_stove(stove)\n"
    },
    {
        "task_name": "Pet cat",
        "source_sub_task": "Slice the chicken and give it to the cat.",
        "cdl": " \nbehavior give_sliced_chicken_to_cat(chicken:item, cat:item):\n    body:\n        achieve close(chicken, cat)\n        # Ensure the sliced chicken is close to the cat\n\nbehavior __goal__():\n    body:\n        bind chicken: item where:\n            is_food_chicken(chicken) and cut(chicken)\n        # Select the sliced chicken\n\n        bind cat: item where:\n            is_cat(cat) and id[cat] == 2055\n        # Select the cat with ID 2055\n\n        give_sliced_chicken_to_cat(chicken, cat)\n        # Perform the action of giving the sliced chicken to the cat\n"
    },
    {
        "task_name": "Turn on light",
        "source_sub_task": "Turn on the lights in the bathroom.",
        "cdl": "\nbehavior __goal__():\n    body:\n        bind bathroom: item where:\n            is_bathroom(bathroom)\n        # Find the bathroom\n        \n        bind bathroom_light: item where:\n            is_light(bathroom_light) and inside(bathroom_light, bathroom)\n        # Select a light in the bathroom\n\n        achieve is_on(bathroom_light)\n        # Turn on the bathroom light\n"
    },
    {
        "task_name": "Clean the bathroom",
        "source_sub_task": "Wipe the toilet with toilet paper, then throw it into the toilet.",
        "cdl": " \nbehavior wipe_toilet_with_toilet_paper(toilet:item, toilet_paper:item):\n    body:\n        achieve_once inhand(toilet_paper)\n        # Ensure the toilet paper is held in hand to wipe the toilet\n\n        wipe(toilet)\n        # Wipe the toilet\n\nbehavior throw_toilet_paper_in_toilet(toilet:item, toilet_paper:item):\n    body:\n        achieve inside(toilet_paper, toilet)\n        # Dispose of the used toilet paper into the toilet\n\nbehavior __goal__():\n    body:\n        bind toilet: item where:\n            is_toilet(toilet)\n        # Select the toilet\n\n        bind toilet_paper: item where:\n            is_toilet_paper(toilet_paper)\n        # Select the toilet paper\n\n        wipe_toilet_with_toilet_paper(toilet, toilet_paper)\n        throw_toilet_paper_in_toilet(toilet, toilet_paper)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "Get a cup of water.",
        "cdl": " \nbehavior fill_cup_with_water(cup:item):\n    body:\n        achieve has_water(cup)\n\nbehavior pick_cup(cup:item):\n    body:\n        achieve_once inhand(cup)\n\nbehavior __goal__():\n    body:\n        bind cup_2063: item where:\n            is_cup(cup_2063) and id[cup_2063] == 2063\n        # Select the cup with id 2063\n\n        bind cup_2064: item where:\n            is_cup(cup_2064) and id[cup_2064] == 2064\n        # Select the cup with id 2064\n\n        if exists cup:item : (is_cup(cup) and not has_water(cup)):\n            if not has_water(cup_2063):\n                fill_cup_with_water(cup_2063)\n            else:\n                fill_cup_with_water(cup_2064)\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "1. Identify the fridge with items in it.",
        "cdl": " \nbehavior identify_fridge_with_items(fridge:item):\n    body:\n        observe(fridge, \"Check if there are any items inside the fridge\")\n\nbehavior __goal__():\n    body:\n        bind fridge: item where:\n            is_fridge(fridge)\n        identify_fridge_with_items(fridge)\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "2. Transfer all the items from the fridge to the trashcan.",
        "cdl": " \nbehavior transfer_items_from_fridge_to_trash(fridge:item, trashcan:item):\n    body:\n        foreach item: item:\n            if inside(item, fridge):\n                achieve inside(item, trashcan)\n                # Transfer each item in the fridge to the trashcan\n\nbehavior __goal__():\n    body:\n        bind fridge: item where:\n            is_fridge(fridge)\n        # Select the fridge with items\n\n        bind trashcan: item where:\n            is_trashcan(trashcan)\n        # Select the trashcan\n\n        transfer_items_from_fridge_to_trash(fridge, trashcan)\n        # Transfer all items from the fridge to the trashcan\n"
    },
    {
        "task_name": "Prepare breakfast",
        "source_sub_task": "Boil the egg.",
        "cdl": "behavior fill_pot_with_water(pot:item):\n    body:\n        achieve has_water(pot)\n\nbehavior place_egg_in_pot(egg:item, pot:item):\n    body:\n        achieve inside(egg, pot)\n\nbehavior place_pot_on_stove(pot:item, stove:item):\n    body:\n        achieve on(pot, stove)\n\nbehavior turn_on_stove(stove:item):\n    body:\n        achieve is_on(stove)\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot)\n        # Select a pot\n\n        bind egg: item where:\n            is_food_egg(egg)\n        # Select an egg\n\n        bind stove: item where:\n            is_stove(stove)\n        # Select a stove\n\n        fill_pot_with_water(pot)\n        place_egg_in_pot(egg, pot)\n        place_pot_on_stove(pot, stove)\n        turn_on_stove(stove)"
    }
]