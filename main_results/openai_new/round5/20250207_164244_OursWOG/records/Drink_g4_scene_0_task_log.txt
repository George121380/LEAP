From agent.py
Reset goals: The sub-goals are: 
['1. Find a cup and fill it with milk.', '2. Heat the cup of milk in the microwave.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2043_around_fridge_289(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_cup_2063_around_cupboard_229(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==229
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_fill_cup():
    body:
        foreach o: item:
            if is_cup(o) and not visited(o):
                observe(o, "Check if the item is a cup and whether it is empty")
                if grabbable(o) and recipient(o):
                    achieve_once inhand(o)
                    foreach milk: item:
                        if is_milk(milk) and not visited(milk):
                            observe(milk, "Check if the item is milk and if it is pourable")
                            if pourable(milk):
                                achieve has_water(o) # Achieve filling the cup with milk

behavior __goal__():
    body:
        find_and_fill_cup()

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_and_fill_cup():
    body:
        foreach o: item:
            if is_cup(o) and not visited(o):
                observe(o, "Check if the item is a cup and whether it is empty")
                if grabbable(o) and recipient(o):
                    achieve_once inhand(o)
                    foreach milk: item:
                        if is_milk(milk) and not visited(milk):
                            observe(milk, "Check if the item is milk and if it is pourable")
                            if pourable(milk):
                                achieve has_water(o) # Achieve filling the cup with milk

behavior __goal__():
    body:
        find_and_fill_cup()

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_229)open_executor(cupboard_229)exp(cup_2063, cupboard_229)walk_executor(cup_2063)obs(cup_2063, Check if the item is a cup and whether it is empty)grab_executor(cup_2063)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(milk_2043, fridge_289)walk_executor(milk_2043)obs(milk_2043, Check if the item is milk and if it is pourable)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(cupboard_229)exp(cup_2064, cupboard_229)walk_executor(cup_2064)obs(cup_2064, Check if the item is a cup and whether it is empty)grab_executor(cup_2064)
##############################
From agent.py
walk_executor(cupboard_229)
Robot find: Robot is close to the cupboard_229. 
##############################
From agent.py
open_executor(cupboard_229)
Robot find: Robot is close to the cupboard_229. cupboard_229 is opened. 
##############################
From agent.py
exp(cup_2063, cupboard_229)
Fail to find cup_2063 around cupboard_229. 
##############################
From agent.py-> find a plan in act()
walk_executor(bench_228)exp(cup_2063, bench_228)walk_executor(cup_2063)obs(cup_2063, Check if the item is a cup and whether it is empty)grab_executor(cup_2063)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(milk_2043, fridge_289)walk_executor(milk_2043)obs(milk_2043, Check if the item is milk and if it is pourable)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(bench_228)exp(cup_2064, bench_228)walk_executor(cup_2064)obs(cup_2064, Check if the item is a cup and whether it is empty)grab_executor(cup_2064)
##############################
From agent.py
walk_executor(bench_228)
Robot find: drawing_238, drawing_239, drawing_240, drawing_241, drawing_242, drawing_243, mat_236, mat_237, Robot is close to the bench_228. 
##############################
From agent.py
exp(cup_2063, bench_228)
Fail to find cup_2063 around bench_228. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_226)exp(cup_2063, table_226)walk_executor(cup_2063)obs(cup_2063, Check if the item is a cup and whether it is empty)grab_executor(cup_2063)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(milk_2043, fridge_289)walk_executor(milk_2043)obs(milk_2043, Check if the item is milk and if it is pourable)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(table_226)exp(cup_2064, table_226)walk_executor(cup_2064)obs(cup_2064, Check if the item is a cup and whether it is empty)grab_executor(cup_2064)
##############################
From agent.py
walk_executor(table_226)
Robot find: bowl_2071, coffee_filter_2000, drawing_2003, bowl_2072, fork_2080, fork_2081, Robot is close to the table_226. 
##############################
From agent.py
exp(cup_2063, table_226)
Fail to find cup_2063 around table_226. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)exp(cup_2063, kitchen_counter_230)walk_executor(cup_2063)obs(cup_2063, Check if the item is a cup and whether it is empty)grab_executor(cup_2063)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(milk_2043, fridge_289)walk_executor(milk_2043)obs(milk_2043, Check if the item is milk and if it is pourable)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(kitchen_counter_230)exp(cup_2064, kitchen_counter_230)walk_executor(cup_2064)obs(cup_2064, Check if the item is a cup and whether it is empty)grab_executor(cup_2064)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: napkin_2005, oil_2079, cup_2063, knife_2050, cup_2064, pot_2069, fryingpan_2083, Robot is close to the kitchen_counter_230. 
##############################
From agent.py
exp(cup_2063, kitchen_counter_230)
Find cup_2063. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2063)obs(cup_2063, Check if the item is a cup and whether it is empty)grab_executor(cup_2063)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(milk_2043, fridge_289)walk_executor(milk_2043)obs(milk_2043, Check if the item is milk and if it is pourable)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)walk_executor(cup_2064)obs(cup_2064, Check if the item is a cup and whether it is empty)grab_executor(cup_2064)
##############################
From agent.py
walk_executor(cup_2063)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the cup_2063. 
##############################
From agent.py
obs(cup_2063, Check if the item is a cup and whether it is empty)
Get this information:  cup_2063 is close to kitchen_counter_230. cup_2063 is close to character_65. cup_2063 is on kitchen_counter_230. cup_2063 is inside dining_room_201.
##############################
From agent.py
grab_executor(cup_2063)
Robot find: Robot is close to the kitchen_counter_230. Robot is close to the cup_2063. Grabbing cup_2063 by right hand. 
##############################
From agent.py
walk_executor(fridge_289)
Robot find: Robot is close to the cup_2063. Robot is close to the fridge_289. 
##############################
From agent.py
switchoff_executor(fridge_289)
Robot find: Robot is close to the cup_2063. Robot is close to the fridge_289. fridge_289 is turned off. 
##############################
From agent.py
open_executor(fridge_289)
Robot find: sauce_2078, food_steak_2008, food_apple_2009, food_bacon_2010, food_banana_2011, food_bread_2012, food_cake_2013, food_carrot_2014, food_cereal_2015, food_cheese_2016, food_chicken_2017, food_dessert_2018, food_donut_2019, food_egg_2020, food_fish_2021, food_food_2022, food_fruit_2023, food_hamburger_2024, food_ice_cream_2025, food_jam_2026, food_kiwi_2027, food_lemon_2028, food_noodles_2029, food_oatmeal_2030, food_orange_2031, food_onion_2032, food_peanut_butter_2033, food_pizza_2034, food_potato_2035, food_rice_2036, food_salt_2037, food_snack_2038, food_sugar_2039, food_turkey_2040, food_vegetable_2041, dry_pasta_2042, milk_2043, Robot is close to the cup_2063. Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. fridge_289 is opened. 
##############################
From agent.py
exp(milk_2043, fridge_289)
Find milk_2043. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2064)obs(cup_2064, Check if the item is a cup and whether it is empty)grab_executor(cup_2064)walk_executor(milk_2043)obs(milk_2043, Check if the item is milk and if it is pourable)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(cup_2064)
Robot find: Robot is close to the cup_2063. Robot is close to the cup_2064. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
obs(cup_2064, Check if the item is a cup and whether it is empty)
Get this information:  cup_2064 is inside dining_room_201. cup_2064 is close to kitchen_counter_230. cup_2064 is close to character_65. cup_2064 is on kitchen_counter_230.
##############################
From agent.py
grab_executor(cup_2064)
Robot find: Robot is close to the cup_2063. Robot is close to the cup_2064. Robot is close to the kitchen_counter_230. Grabbing cup_2064 by left hand. 
##############################
From agent.py
walk_executor(milk_2043)
Robot find: Robot is close to the cup_2063. Robot is close to the cup_2064. Robot is close to the fridge_289. Robot is close to the milk_2043. 
##############################
From agent.py
obs(milk_2043, Check if the item is milk and if it is pourable)
Get this information:  milk_2043 is inside fridge_289. milk_2043 is inside dining_room_201. milk_2043 is close to fridge_289. milk_2043 is close to character_65.
##############################
From agent.py
walk_executor(faucet_43)
Robot find: towel_rack_31, towel_rack_32, towel_rack_34, Robot is close to the cup_2063. Robot is close to the cup_2064. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the cup_2063. Robot is close to the cup_2064. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the cup_2063. Robot is close to the cup_2064. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to pour the milk into the grabbed cup (cup_2063) to fill it with milk.
##############################
From agent.py
Human Instruction: The robot needs to pour the milk into the grabbed cup (cup_2063) to fill it with milk.

The actions you have taken:
Action 1: Walk to cupboard_229.
Action 2: Open cupboard_229.
Action 3: look for cup_2063 around cupboard_229.
Action 4: Walk to bench_228.
Action 5: look for cup_2063 around bench_228.
Action 6: Walk to table_226.
Action 7: look for cup_2063 around table_226.
Action 8: Walk to kitchen_counter_230.
Action 9: look for cup_2063 around kitchen_counter_230.
Action 10: Walk to cup_2063.
Action 11: Observe around cup_2063 with the question of Check if the item is a cup and whether it is empty.
Action 12: Grab cup_2063.
Action 13: Walk to fridge_289.
Action 14: Switch off fridge_289.
Action 15: Open fridge_289.
Action 16: look for milk_2043 around fridge_289.
Action 17: Walk to cup_2064.
Action 18: Observe around cup_2064 with the question of Check if the item is a cup and whether it is empty.
Action 19: Grab cup_2064.
Action 20: Walk to milk_2043.
Action 21: Observe around milk_2043 with the question of Check if the item is milk and if it is pourable.
Action 22: Walk to faucet_43.
Action 23: Switch on faucet_43.
Action 24: Switch off faucet_43.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_gloves_2046_around_basket_for_clothes_2006(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(clothes_gloves,basket_for_clothes_instance)
        else:
            exp(clothes_gloves,basket_for_clothes_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
behavior fill_cup_with_milk(cup:item, milk:item):
    body:
        achieve inside(milk, cup)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup] == 2063
        # Select the cup with ID 2063

        bind milk: item where:
            is_milk(milk) and id[milk] == 2043
        # Select the milk with ID 2043

        fill_cup_with_milk(cup, milk)
        # Fill the selected cup with milk
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior fill_cup_with_milk(cup:item, milk:item):
    body:
        achieve inside(milk, cup)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup] == 2063
        # Select the cup with ID 2063

        bind milk: item where:
            is_milk(milk) and id[milk] == 2043
        # Select the milk with ID 2043

        fill_cup_with_milk(cup, milk)
        # Fill the selected cup with milk
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)put_executor(cup_2063, kitchen_counter_230)walk_executor(milk_2043)grab_executor(milk_2043)walk_executor(cup_2063)putin_executor(milk_2043, cup_2063)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Robot find: Robot is close to the cup_2063. Robot is close to the cup_2064. Robot is close to the kitchen_counter_230. 
##############################
From agent.py
put_executor(cup_2063, kitchen_counter_230)
Robot find: Robot is close to the cup_2063. Robot is close to the cup_2064. Robot is close to the kitchen_counter_230. cup_2063 is close kitchen_counter_230. cup_2063 is on kitchen_counter_230. cup_2063 released by right hand. 
##############################
From agent.py
walk_executor(milk_2043)
Robot find: Robot is close to the cup_2064. Robot is close to the fridge_289. Robot is close to the milk_2043. 
##############################
From agent.py
grab_executor(milk_2043)
Robot find: Robot is close to the cup_2064. Robot is close to the fridge_289. Robot is close to the milk_2043. Grabbing milk_2043 by right hand. 
##############################
From agent.py
walk_executor(cup_2063)
Robot find: Robot is close to the cup_2064. Robot is close to the milk_2043. Robot is close to the kitchen_counter_230. Robot is close to the cup_2063. 
##############################
From agent.py
putin_executor(milk_2043, cup_2063)
Robot find: Robot is close to the cup_2064. Robot is close to the milk_2043. Robot is close to the kitchen_counter_230. Robot is close to the cup_2063. milk_2043 is inside cup_2063. cup_2063 is close milk_2043. milk_2043 is close cup_2063. milk_2043 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_103_around_table_355(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==355
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(chair,table_instance)
        else:
            exp(chair,table_instance)
    eff:
        unknown[chair]=False
        close[chair,table_instance]=True
        close[table_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior heat_milk_in_microwave(cup_of_milk:item, microwave:item):
    body:
        achieve inside(cup_of_milk, microwave)
        # Place the cup of milk inside the microwave

        achieve closed(microwave)
        # Close the microwave door

        achieve is_on(microwave)
        # Turn on the microwave to heat the milk

behavior __goal__():
    body:
        bind cup_of_milk: item where:
            is_cup(cup_of_milk) and id[cup_of_milk] == 2063
        # Select the cup with ID 2063 filled with milk

        bind microwave: item where:
            is_microwave(microwave)
        # Select a microwave

        heat_milk_in_microwave(cup_of_milk, microwave)
        # Execute the heating operation of the cup of milk in the microwave

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior heat_milk_in_microwave(cup_of_milk:item, microwave:item):
    body:
        achieve inside(cup_of_milk, microwave)
        # Place the cup of milk inside the microwave

        achieve closed(microwave)
        # Close the microwave door

        achieve is_on(microwave)
        # Turn on the microwave to heat the milk

behavior __goal__():
    body:
        bind cup_of_milk: item where:
            is_cup(cup_of_milk) and id[cup_of_milk] == 2063
        # Select the cup with ID 2063 filled with milk

        bind microwave: item where:
            is_microwave(microwave)
        # Select a microwave

        heat_milk_in_microwave(cup_of_milk, microwave)
        # Execute the heating operation of the cup of milk in the microwave

##############################
From agent.py-> find a plan in act()
walk_executor(microwave_297)open_executor(microwave_297)walk_executor(cup_2063)grab_executor(cup_2063)walk_executor(microwave_297)putin_executor(cup_2063, microwave_297)close_executor(microwave_297)switchon_executor(microwave_297)
##############################
From agent.py
walk_executor(microwave_297)
Robot find: Robot is close to the cup_2064. Robot is close to the kitchen_counter_230. Robot is close to the microwave_297. 
##############################
From agent.py
open_executor(microwave_297)
Robot find: Robot is close to the cup_2064. Robot is close to the kitchen_counter_230. Robot is close to the microwave_297. microwave_297 is opened. 
##############################
From agent.py
walk_executor(cup_2063)
Robot find: Robot is close to the cup_2064. Robot is close to the kitchen_counter_230. Robot is close to the cup_2063. 
##############################
From agent.py
grab_executor(cup_2063)
Robot find: Robot is close to the cup_2064. Robot is close to the kitchen_counter_230. Robot is close to the cup_2063. Grabbing cup_2063 by right hand. 
##############################
From agent.py
walk_executor(microwave_297)
Robot find: Robot is close to the cup_2064. Robot is close to the kitchen_counter_230. Robot is close to the cup_2063. Robot is close to the microwave_297. 
##############################
From agent.py
putin_executor(cup_2063, microwave_297)
Robot find: Robot is close to the cup_2064. Robot is close to the kitchen_counter_230. Robot is close to the cup_2063. Robot is close to the microwave_297. microwave_297 is close cup_2063. cup_2063 is close microwave_297. cup_2063 is inside microwave_297. cup_2063 released by right hand. 
##############################
From agent.py
close_executor(microwave_297)
Robot find: Robot is close to the cup_2064. Robot is close to the kitchen_counter_230. Robot is close to the microwave_297. microwave_297 is closed. 
##############################
From agent.py
switchon_executor(microwave_297)
Robot find: Robot is close to the cup_2064. Robot is close to the kitchen_counter_230. Robot is close to the microwave_297. microwave_297 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Get a cup of milk and heat it by microwave.
Action History:
['walk_executor(cupboard_229)', 'open_executor(cupboard_229)', 'walk_executor(bench_228)', 'walk_executor(table_226)', 'walk_executor(kitchen_counter_230)', 'walk_executor(cup_2063)', 'grab_executor(cup_2063)', 'walk_executor(fridge_289)', 'switchoff_executor(fridge_289)', 'open_executor(fridge_289)', 'walk_executor(cup_2064)', 'grab_executor(cup_2064)', 'walk_executor(milk_2043)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'switchoff_executor(faucet_43)', 'walk_executor(kitchen_counter_230)', 'put_executor(cup_2063, kitchen_counter_230)', 'walk_executor(milk_2043)', 'grab_executor(milk_2043)', 'walk_executor(cup_2063)', 'putin_executor(milk_2043, cup_2063)', 'walk_executor(microwave_297)', 'open_executor(microwave_297)', 'walk_executor(cup_2063)', 'grab_executor(cup_2063)', 'walk_executor(microwave_297)', 'putin_executor(cup_2063, microwave_297)', 'close_executor(microwave_297)', 'switchon_executor(microwave_297)']
Time info:
Time consume: 131 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 35
goal generate times: 3
goal correct times: 0
action_num: 30

Task complete rate:
1
Scene_id: 0
##############################
