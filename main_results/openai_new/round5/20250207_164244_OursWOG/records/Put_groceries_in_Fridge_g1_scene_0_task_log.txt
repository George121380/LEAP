From agent.py
Reset goals: The sub-goals are: 
['1. Find a table in the dining room.', '2. Place milk, turkey, egg, fish, and chicken on the table.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_356_around_table_355(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==355
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(chair,table_instance)
        else:
            exp(chair,table_instance)
    eff:
        unknown[chair]=False
        close[chair,table_instance]=True
        close[table_instance,chair]=True
    

#exp_behavior_end

#goal_representation
behavior find_table_in_dining_room():
    body:
        foreach table: item:
            if is_table(table) and not visited(table):
                observe(table, "Check if there is a table in the dining room")

behavior __goal__():
    body:
        find_table_in_dining_room()
#goal_representation_end

##############################
From agent.py->reset_goal
behavior find_table_in_dining_room():
    body:
        foreach table: item:
            if is_table(table) and not visited(table):
                observe(table, "Check if there is a table in the dining room")

behavior __goal__():
    body:
        find_table_in_dining_room()
##############################
From agent.py-> find a plan in act()
walk_executor(table_107)obs(table_107, Check if there is a table in the dining room)walk_executor(table_226)obs(table_226, Check if there is a table in the dining room)walk_executor(table_355)obs(table_355, Check if there is a table in the dining room)
##############################
From agent.py
walk_executor(table_107)
Robot find: mat_173, clothes_hat_2045, clothes_gloves_2046, drawing_176, drawing_174, drawing_175, Robot is close to the table_107. 
##############################
From agent.py
obs(table_107, Check if there is a table in the dining room)
Get this information:  table_107 is inside bedroom_67. table_107 is close to floor_72. table_107 is close to floor_73. table_107 is close to floor_74. table_107 is close to floor_76. table_107 is close to mat_173. table_107 is close to orchid_178. table_107 is close to clothes_hat_2045. table_107 is close to clothes_gloves_2046. table_107 is close to character_65. clothes_gloves_2046 is on table_107. table_107 is on floor_73. orchid_178 is on table_107. clothes_hat_2045 is on table_107. table_107 is facing drawing_176. table_107 is facing computer_170. table_107 is facing drawing_174. table_107 is facing drawing_175. table_107 is CLEAN.
##############################
From agent.py
walk_executor(table_226)
Robot find: drawing_243, bowl_2071, coffee_filter_2000, drawing_2003, drawing_241, bowl_2072, mat_236, fork_2080, drawing_238, drawing_239, drawing_240, drawing_242, fork_2081, mat_237, Robot is close to the table_226. 
##############################
From agent.py
obs(table_226, Check if there is a table in the dining room)
Get this information:  coffee_filter_2000 is on table_226. drawing_2003 is on table_226. bowl_2071 is on table_226. table_226 is facing drawing_238. table_226 is facing drawing_239. table_226 is facing drawing_240. table_226 is facing drawing_241. table_226 is facing drawing_242. table_226 is facing drawing_243. table_226 is facing television_248. bowl_2072 is on table_226. mat_236 is on table_226. fork_2080 is on table_226. table_226 is inside dining_room_201. table_226 is close to drawing_402. table_226 is close to drawing_403. table_226 is close to bowl_2071. table_226 is close to bowl_2072. table_226 is close to fork_2080. table_226 is close to fork_2081. table_226 is close to floor_202. table_226 is close to floor_203. table_226 is close to floor_204. table_226 is close to floor_205. table_226 is close to floor_206. table_226 is close to floor_207. table_226 is close to floor_208. table_226 is close to coffee_filter_2000. table_226 is close to wall_210. table_226 is close to wall_211. table_226 is close to wall_212. table_226 is close to wall_213. table_226 is close to wall_214. table_226 is close to drawing_2003. table_226 is close to ceilinglamp_224. table_226 is close to bench_227. table_226 is close to bench_228. table_226 is close to wallshelf_235. table_226 is close to mat_236. table_226 is close to mat_237. table_226 is close to drawing_241. table_226 is close to drawing_242. table_226 is close to drawing_243. table_226 is close to character_65. fork_2081 is on table_226. table_226 is DIRTY.
##############################
From agent.py
walk_executor(table_355)
Robot find: mat_401, headset_2062, spectacles_2082, pillow_406, remote_control_2052, clothes_jacket_2047, pillow_405, cat_2055, drawing_400, drawing_404, hairbrush_2002, vacuum_cleaner_2070, Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. 
##############################
From agent.py
obs(table_355, Check if there is a table in the dining room)
Get this information:  headset_2062 is on table_355. table_355 is close to couch_352. table_355 is close to tvstand_353. table_355 is close to spectacles_2082. table_355 is close to floor_321. table_355 is close to floor_323. table_355 is close to floor_324. table_355 is close to floor_322. table_355 is close to wall_333. table_355 is close to headset_2062. table_355 is close to mat_401. table_355 is close to pillow_406. table_355 is close to television_410. table_355 is close to character_65. table_355 is on mat_401. table_355 is inside couch_352. table_355 is inside home_office_319. spectacles_2082 is on table_355. table_355 is facing drawing_400. table_355 is facing computer_417. table_355 is facing television_410. table_355 is facing drawing_404. table_355 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_turkey_2040_around_fridge_289(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_turkey,fridge_instance)
        else:
            exp(food_turkey,fridge_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,fridge_instance]=True
        close[fridge_instance,food_turkey]=True
    

behavior find_food_chicken_2017_around_kitchen_counter_230(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_chicken,kitchen_counter_instance)
        else:
            exp(food_chicken,kitchen_counter_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_chicken]=True
    

behavior find_food_fish_2021_around_fridge_289(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_fish,fridge_instance)
        else:
            exp(food_fish,fridge_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,fridge_instance]=True
        close[fridge_instance,food_fish]=True
    

behavior find_food_egg_2020_around_fridge_289(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_milk_2043_around_fridge_289(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

#exp_behavior_end

#goal_representation
 
def is_in_dining_room(o:item):
    # Function to check if an item is inside the dining room
    symbol in_dining_room = exists room: item : (is_dining_room(room) and inside(o, room))
    return in_dining_room

behavior place_on_table(item:item, table:item):
    body:
        achieve on(item, table)
        # Place the item on the table

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind turkey: item where:
            is_food_turkey(turkey)
        # Select the turkey

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg

        bind fish: item where:
            is_food_fish(fish)
        # Select the fish

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken

        bind dining_table: item where:
            is_table(dining_table) and is_in_dining_room(dining_table)
        # Select a table inside the dining room

        place_on_table(milk, dining_table)
        # Put milk on the table

        place_on_table(turkey, dining_table)
        # Put turkey on the table

        place_on_table(egg, dining_table)
        # Put egg on the table

        place_on_table(fish, dining_table)
        # Put fish on the table

        place_on_table(chicken, dining_table)
        # Put chicken on the table

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_in_dining_room(o:item):
    # Function to check if an item is inside the dining room
    symbol in_dining_room = exists room: item : (is_dining_room(room) and inside(o, room))
    return in_dining_room

behavior place_on_table(item:item, table:item):
    body:
        achieve on(item, table)
        # Place the item on the table

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind turkey: item where:
            is_food_turkey(turkey)
        # Select the turkey

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg

        bind fish: item where:
            is_food_fish(fish)
        # Select the fish

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken

        bind dining_table: item where:
            is_table(dining_table) and is_in_dining_room(dining_table)
        # Select a table inside the dining room

        place_on_table(milk, dining_table)
        # Put milk on the table

        place_on_table(turkey, dining_table)
        # Put turkey on the table

        place_on_table(egg, dining_table)
        # Put egg on the table

        place_on_table(fish, dining_table)
        # Put fish on the table

        place_on_table(chicken, dining_table)
        # Put chicken on the table

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(milk_2043, fridge_289)walk_executor(milk_2043)grab_executor(milk_2043)walk_executor(table_226)put_executor(milk_2043, table_226)walk_executor(fridge_289)exp(food_turkey_2040, fridge_289)walk_executor(food_turkey_2040)grab_executor(food_turkey_2040)walk_executor(table_226)put_executor(food_turkey_2040, table_226)walk_executor(fridge_289)exp(food_egg_2020, fridge_289)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(table_226)put_executor(food_egg_2020, table_226)walk_executor(fridge_289)exp(food_fish_2021, fridge_289)walk_executor(food_fish_2021)grab_executor(food_fish_2021)walk_executor(table_226)put_executor(food_fish_2021, table_226)walk_executor(kitchen_counter_230)exp(food_chicken_2017, kitchen_counter_230)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(table_226)put_executor(food_chicken_2017, table_226)
##############################
From agent.py
walk_executor(fridge_289)
Robot find: Robot is close to the fridge_289. 
##############################
From agent.py
switchoff_executor(fridge_289)
Robot find: Robot is close to the fridge_289. fridge_289 is turned off. 
##############################
From agent.py
open_executor(fridge_289)
Robot find: sauce_2078, food_steak_2008, food_apple_2009, food_bacon_2010, food_banana_2011, food_bread_2012, food_cake_2013, food_carrot_2014, food_cereal_2015, food_cheese_2016, food_chicken_2017, food_dessert_2018, food_donut_2019, food_egg_2020, food_fish_2021, food_food_2022, food_fruit_2023, food_hamburger_2024, food_ice_cream_2025, food_jam_2026, food_kiwi_2027, food_lemon_2028, food_noodles_2029, food_oatmeal_2030, food_orange_2031, food_onion_2032, food_peanut_butter_2033, food_pizza_2034, food_potato_2035, food_rice_2036, food_salt_2037, food_snack_2038, food_sugar_2039, food_turkey_2040, food_vegetable_2041, dry_pasta_2042, milk_2043, Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. fridge_289 is opened. 
##############################
From agent.py
exp(milk_2043, fridge_289)
Find milk_2043. 
##############################
From agent.py-> find a plan in act()
grab_executor(milk_2043)walk_executor(table_226)put_executor(milk_2043, table_226)walk_executor(food_turkey_2040)grab_executor(food_turkey_2040)walk_executor(table_226)put_executor(food_turkey_2040, table_226)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(table_226)put_executor(food_egg_2020, table_226)walk_executor(food_fish_2021)grab_executor(food_fish_2021)walk_executor(table_226)put_executor(food_fish_2021, table_226)walk_executor(food_chicken_2017)grab_executor(food_chicken_2017)walk_executor(table_226)put_executor(food_chicken_2017, table_226)
##############################
From agent.py
grab_executor(milk_2043)
Robot find: Robot is close to the sauce_2078. Robot is close to the fridge_289. Robot is close to the food_steak_2008. Robot is close to the food_apple_2009. Robot is close to the food_bacon_2010. Robot is close to the food_banana_2011. Robot is close to the food_bread_2012. Robot is close to the food_cake_2013. Robot is close to the food_carrot_2014. Robot is close to the food_cereal_2015. Robot is close to the food_cheese_2016. Robot is close to the food_chicken_2017. Robot is close to the food_dessert_2018. Robot is close to the food_donut_2019. Robot is close to the food_egg_2020. Robot is close to the food_fish_2021. Robot is close to the food_food_2022. Robot is close to the food_fruit_2023. Robot is close to the food_hamburger_2024. Robot is close to the food_ice_cream_2025. Robot is close to the food_jam_2026. Robot is close to the food_kiwi_2027. Robot is close to the food_lemon_2028. Robot is close to the food_noodles_2029. Robot is close to the food_oatmeal_2030. Robot is close to the food_orange_2031. Robot is close to the food_onion_2032. Robot is close to the food_peanut_butter_2033. Robot is close to the food_pizza_2034. Robot is close to the food_potato_2035. Robot is close to the food_rice_2036. Robot is close to the food_salt_2037. Robot is close to the food_snack_2038. Robot is close to the food_sugar_2039. Robot is close to the food_turkey_2040. Robot is close to the food_vegetable_2041. Robot is close to the dry_pasta_2042. Robot is close to the milk_2043. Grabbing milk_2043 by right hand. 
##############################
From agent.py
walk_executor(table_226)
Robot find: Robot is close to the milk_2043. Robot is close to the table_226. 
##############################
From agent.py
put_executor(milk_2043, table_226)
Robot find: Robot is close to the milk_2043. Robot is close to the table_226. milk_2043 is close table_226. table_226 is close milk_2043. milk_2043 is on table_226. milk_2043 released by right hand. 
##############################
From agent.py
walk_executor(food_turkey_2040)
Robot find: Robot is close to the food_turkey_2040. Robot is close to the fridge_289. 
##############################
From agent.py
grab_executor(food_turkey_2040)
Robot find: Robot is close to the food_turkey_2040. Robot is close to the fridge_289. Grabbing food_turkey_2040 by right hand. 
##############################
From agent.py
walk_executor(table_226)
Robot find: Robot is close to the food_turkey_2040. Robot is close to the table_226. 
##############################
From agent.py
put_executor(food_turkey_2040, table_226)
Robot find: Robot is close to the food_turkey_2040. Robot is close to the table_226. food_turkey_2040 is close table_226. table_226 is close food_turkey_2040. food_turkey_2040 is on table_226. food_turkey_2040 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2020)
Robot find: Robot is close to the fridge_289. Robot is close to the food_egg_2020. 
##############################
From agent.py
grab_executor(food_egg_2020)
Robot find: Robot is close to the fridge_289. Robot is close to the food_egg_2020. Grabbing food_egg_2020 by right hand. 
##############################
From agent.py
walk_executor(table_226)
Robot find: Robot is close to the food_egg_2020. Robot is close to the table_226. 
##############################
From agent.py
put_executor(food_egg_2020, table_226)
Robot find: Robot is close to the food_egg_2020. Robot is close to the table_226. food_egg_2020 is close table_226. table_226 is close food_egg_2020. food_egg_2020 is on table_226. food_egg_2020 released by right hand. 
##############################
From agent.py
walk_executor(food_fish_2021)
Robot find: Robot is close to the fridge_289. Robot is close to the food_fish_2021. 
##############################
From agent.py
grab_executor(food_fish_2021)
Robot find: Robot is close to the fridge_289. Robot is close to the food_fish_2021. Grabbing food_fish_2021 by right hand. 
##############################
From agent.py
walk_executor(table_226)
Robot find: Robot is close to the food_fish_2021. Robot is close to the table_226. 
##############################
From agent.py
put_executor(food_fish_2021, table_226)
Robot find: Robot is close to the food_fish_2021. Robot is close to the table_226. food_fish_2021 is close table_226. table_226 is close food_fish_2021. food_fish_2021 is on table_226. food_fish_2021 released by right hand. 
##############################
From agent.py
walk_executor(food_chicken_2017)
Robot find: Robot is close to the fridge_289. Robot is close to the food_chicken_2017. 
##############################
From agent.py
grab_executor(food_chicken_2017)
Robot find: Robot is close to the fridge_289. Robot is close to the food_chicken_2017. Grabbing food_chicken_2017 by right hand. 
##############################
From agent.py
walk_executor(table_226)
Robot find: Robot is close to the food_chicken_2017. Robot is close to the table_226. 
##############################
From agent.py
put_executor(food_chicken_2017, table_226)
Robot find: Robot is close to the food_chicken_2017. Robot is close to the table_226. food_chicken_2017 is close table_226. table_226 is close food_chicken_2017. food_chicken_2017 is on table_226. food_chicken_2017 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Put milk, turkey, egg, fish and chicken on one of the table in dining room.
Action History:
['walk_executor(table_107)', 'walk_executor(table_226)', 'walk_executor(table_355)', 'walk_executor(fridge_289)', 'switchoff_executor(fridge_289)', 'open_executor(fridge_289)', 'grab_executor(milk_2043)', 'walk_executor(table_226)', 'put_executor(milk_2043, table_226)', 'walk_executor(food_turkey_2040)', 'grab_executor(food_turkey_2040)', 'walk_executor(table_226)', 'put_executor(food_turkey_2040, table_226)', 'walk_executor(food_egg_2020)', 'grab_executor(food_egg_2020)', 'walk_executor(table_226)', 'put_executor(food_egg_2020, table_226)', 'walk_executor(food_fish_2021)', 'grab_executor(food_fish_2021)', 'walk_executor(table_226)', 'put_executor(food_fish_2021, table_226)', 'walk_executor(food_chicken_2017)', 'grab_executor(food_chicken_2017)', 'walk_executor(table_226)', 'put_executor(food_chicken_2017, table_226)']
Time info:
Time consume: 86 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 26
goal generate times: 2
goal correct times: 0
action_num: 25

Task complete rate:
1
Scene_id: 0
##############################
