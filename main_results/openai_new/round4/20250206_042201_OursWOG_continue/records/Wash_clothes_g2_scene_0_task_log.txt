From agent.py
Reset goals: The sub-goals are: 
['1. Find the basket containing clothes.', '2. Add soap to the washing machine.', '3. Wash the clothes using the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2048_around_closetdrawer_121(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==121
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_scarf,closetdrawer_instance)
        else:
            exp(clothes_scarf,closetdrawer_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_scarf]=True
    

behavior find_clothes_skirt_2088_around_closetdrawer_377(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==377
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_skirt,closetdrawer_instance)
        else:
            exp(clothes_skirt,closetdrawer_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_skirt]=True
    

behavior find_clothes_socks_2087_around_closetdrawer_382(clothes_socks:item):
    goal: not unknown(clothes_socks)
    body:
        assert is_clothes_socks(clothes_socks)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==382
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_socks,closetdrawer_instance)
        else:
            exp(clothes_socks,closetdrawer_instance)
    eff:
        unknown[clothes_socks]=False
        close[clothes_socks,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_socks]=True
    

behavior find_clothes_gloves_2046_around_dresser_123(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==123
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_gloves,dresser_instance)
        else:
            exp(clothes_gloves,dresser_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,dresser_instance]=True
        close[dresser_instance,clothes_gloves]=True
    

behavior find_clothes_shirt_2086_around_closetdrawer_394(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==394
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

behavior find_clothes_underwear_2049_around_closetdrawer_394(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==394
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_underwear,closetdrawer_instance)
        else:
            exp(clothes_underwear,closetdrawer_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_underwear]=True
    

behavior find_clothes_hat_2045_around_closetdrawer_394(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==394
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_hat,closetdrawer_instance)
        else:
            exp(clothes_hat,closetdrawer_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_hat]=True
    

behavior find_clothes_jacket_2047_around_closetdrawer_117(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==117
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

behavior find_clothes_pants_2085_around_closetdrawer_394(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==394
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_pants,closetdrawer_instance)
        else:
            exp(clothes_pants,closetdrawer_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_pants]=True
    

behavior find_clothes_dress_2044_around_closetdrawer_382(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==382
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_dress,closetdrawer_instance)
        else:
            exp(clothes_dress,closetdrawer_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_dress]=True
    

behavior find_basket_for_clothes_2006_around_closetdrawer_382(basket_for_clothes:item):
    goal: not unknown(basket_for_clothes)
    body:
        assert is_basket_for_clothes(basket_for_clothes)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==382
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(basket_for_clothes,closetdrawer_instance)
        else:
            exp(basket_for_clothes,closetdrawer_instance)
    eff:
        unknown[basket_for_clothes]=False
        close[basket_for_clothes,closetdrawer_instance]=True
        close[closetdrawer_instance,basket_for_clothes]=True
    

#exp_behavior_end

#goal_representation
 
def is_clothes_in_basket(basket:item):
    # Function to check if there are clothes in a specified basket
    symbol has_clothes=exists o: item : is_clothes(o) and inside(o, basket)
    return has_clothes

behavior __goal__():
    body:
        if exists basket: item : is_basket_for_clothes(basket) and is_clothes_in_basket(basket):
            # If we have already found the basket with clothes, we can directly approach it
            bind basket: item where:
                is_basket_for_clothes(basket) and is_clothes_in_basket(basket)
            achieve close_char(char, basket)

        else:
            # Check all baskets in the scene that have not been visited
            foreach basket: item:
                if is_basket_for_clothes(basket) and not visited(basket):
                    observe(basket, "Check is there any clothes in the basket")

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_clothes_in_basket(basket:item):
    # Function to check if there are clothes in a specified basket
    symbol has_clothes=exists o: item : is_clothes(o) and inside(o, basket)
    return has_clothes

behavior __goal__():
    body:
        if exists basket: item : is_basket_for_clothes(basket) and is_clothes_in_basket(basket):
            # If we have already found the basket with clothes, we can directly approach it
            bind basket: item where:
                is_basket_for_clothes(basket) and is_clothes_in_basket(basket)
            achieve close_char(char, basket)

        else:
            # Check all baskets in the scene that have not been visited
            foreach basket: item:
                if is_basket_for_clothes(basket) and not visited(basket):
                    observe(basket, "Check is there any clothes in the basket")

##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_382)exp(basket_for_clothes_2006, closetdrawer_382)walk_executor(basket_for_clothes_2006)open_executor(basket_for_clothes_2006)obs(basket_for_clothes_2006, Check is there any clothes in the basket)
##############################
From agent.py
walk_executor(closetdrawer_382)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(basket_for_clothes_2006, closetdrawer_382)
Fail to find basket_for_clothes_2006 around closetdrawer_382. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_382)exp(basket_for_clothes_2006, closetdrawer_382)walk_executor(basket_for_clothes_2006)open_executor(basket_for_clothes_2006)obs(basket_for_clothes_2006, Check is there any clothes in the basket)
##############################
From agent.py
walk_executor(closetdrawer_382)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(basket_for_clothes_2006, closetdrawer_382)
Fail to find basket_for_clothes_2006 around closetdrawer_382. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_382)exp(basket_for_clothes_2006, closetdrawer_382)walk_executor(basket_for_clothes_2006)open_executor(basket_for_clothes_2006)obs(basket_for_clothes_2006, Check is there any clothes in the basket)
##############################
From agent.py
walk_executor(closetdrawer_382)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(basket_for_clothes_2006, closetdrawer_382)
Fail to find basket_for_clothes_2006 around closetdrawer_382. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_382)exp(basket_for_clothes_2006, closetdrawer_382)walk_executor(basket_for_clothes_2006)open_executor(basket_for_clothes_2006)obs(basket_for_clothes_2006, Check is there any clothes in the basket)
##############################
From agent.py
walk_executor(closetdrawer_382)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(basket_for_clothes_2006, closetdrawer_382)
Fail to find basket_for_clothes_2006 around closetdrawer_382. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_382)exp(basket_for_clothes_2006, closetdrawer_382)walk_executor(basket_for_clothes_2006)open_executor(basket_for_clothes_2006)obs(basket_for_clothes_2006, Check is there any clothes in the basket)
##############################
From agent.py
walk_executor(closetdrawer_382)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(basket_for_clothes_2006, closetdrawer_382)
Fail to find basket_for_clothes_2006 around closetdrawer_382. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_382)exp(basket_for_clothes_2006, closetdrawer_382)walk_executor(basket_for_clothes_2006)open_executor(basket_for_clothes_2006)obs(basket_for_clothes_2006, Check is there any clothes in the basket)
##############################
From agent.py
walk_executor(closetdrawer_382)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find basket_for_clothes_2006 ?
Answer: Robot, go to bathroom_1 to find the target item, basket_for_clothes_2006. It is likely positioned near the shower_36, toilet_37, and sink_42. Look for a collection of clothes such as clothes_pants_2085, clothes_socks_2087, clothes_skirt_2088, and clothes_shirt_2086, as these are inside or near the basket. Additionally, locate towel racks—towel_rack_31, towel_rack_32, towel_rack_33, and towel_rack_34—as the basket is situated close to them. You should also be near the bathtub_30 and mat_22.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, go to bathroom_1 to find the target item, basket_for_clothes_2006. It is likely positioned near the shower_36, toilet_37, and sink_42. Look for a collection of clothes such as clothes_pants_2085, clothes_socks_2087, clothes_skirt_2088, and clothes_shirt_2086, as these are inside or near the basket. Additionally, locate towel racks—towel_rack_31, towel_rack_32, towel_rack_33, and towel_rack_34—as the basket is situated close to them. You should also be near the bathtub_30 and mat_22.

The actions you have taken:
Action 1: Walk to closetdrawer_382.
Action 2: look for basket_for_clothes_2006 around closetdrawer_382.
Action 3: Walk to closetdrawer_382.
Action 4: look for basket_for_clothes_2006 around closetdrawer_382.
Action 5: Walk to closetdrawer_382.
Action 6: look for basket_for_clothes_2006 around closetdrawer_382.
Action 7: Walk to closetdrawer_382.
Action 8: look for basket_for_clothes_2006 around closetdrawer_382.
Action 9: Walk to closetdrawer_382.
Action 10: look for basket_for_clothes_2006 around closetdrawer_382.
Action 11: Walk to closetdrawer_382.

##############################
From agent.py
exp(basket_for_clothes_2006, closetdrawer_382)
Fail to find basket_for_clothes_2006 around closetdrawer_382. 
##############################
From agent.py-> find a plan in act()
walk_executor(shower_36)exp(basket_for_clothes_2006, shower_36)walk_executor(basket_for_clothes_2006)open_executor(basket_for_clothes_2006)obs(basket_for_clothes_2006, Check is there any clothes in the basket)
##############################
From agent.py
walk_executor(shower_36)
Robot find: basket_for_clothes_2006, Robot is close to the shower_36. 
##############################
From agent.py
exp(basket_for_clothes_2006, shower_36)
Find basket_for_clothes_2006. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)obs(basket_for_clothes_2006, Check is there any clothes in the basket)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Robot find: clothes_pants_2085, clothes_shirt_2086, clothes_socks_2087, clothes_skirt_2088, towel_rack_31, towel_rack_33, towel_rack_32, towel_rack_34, mat_22, Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the clothes_socks_2087. Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
obs(basket_for_clothes_2006, Check is there any clothes in the basket)
Get this information:  clothes_pants_2085 is inside basket_for_clothes_2006. clothes_socks_2087 is inside basket_for_clothes_2006. basket_for_clothes_2006 is inside bathroom_1. basket_for_clothes_2006 is close to towel_rack_32. basket_for_clothes_2006 is close to towel_rack_33. basket_for_clothes_2006 is close to towel_rack_34. basket_for_clothes_2006 is close to shower_36. basket_for_clothes_2006 is close to clothes_pants_2085. basket_for_clothes_2006 is close to clothes_shirt_2086. basket_for_clothes_2006 is close to clothes_socks_2087. basket_for_clothes_2006 is close to clothes_skirt_2088. basket_for_clothes_2006 is close to toilet_37. basket_for_clothes_2006 is close to sink_42. basket_for_clothes_2006 is close to faucet_43. basket_for_clothes_2006 is close to mat_22. basket_for_clothes_2006 is close to bathtub_30. basket_for_clothes_2006 is close to towel_rack_31. basket_for_clothes_2006 is close to character_65. clothes_skirt_2088 is inside basket_for_clothes_2006. clothes_shirt_2086 is inside basket_for_clothes_2006. basket_for_clothes_2006 is OPEN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2054_around_bathroom_cabinet_40(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_detergent_2084_around_bathroom_cabinet_40(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior add_soap_to_washing_machine():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Bind the washing machine to manipulate it

        bind soap: item where:
            is_soap(soap)
        # Bind the soap to use in washing machine

        achieve inside(soap, washing_machine)
        # Ensure the soap is added to the washing machine

behavior __goal__():
    body:
        add_soap_to_washing_machine()

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior add_soap_to_washing_machine():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Bind the washing machine to manipulate it

        bind soap: item where:
            is_soap(soap)
        # Bind the soap to use in washing machine

        achieve inside(soap, washing_machine)
        # Ensure the soap is added to the washing machine

behavior __goal__():
    body:
        add_soap_to_washing_machine()

##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_cabinet_40)open_executor(bathroom_cabinet_40)exp(soap_2053, bathroom_cabinet_40)walk_executor(washing_machine_2007)open_executor(washing_machine_2007)walk_executor(soap_2053)grab_executor(soap_2053)walk_executor(washing_machine_2007)putin_executor(soap_2053, washing_machine_2007)
##############################
From agent.py
walk_executor(bathroom_cabinet_40)
Robot find: Robot is close to the bathroom_cabinet_40. 
##############################
From agent.py
open_executor(bathroom_cabinet_40)
Robot find: Robot is close to the bathroom_cabinet_40. bathroom_cabinet_40 is opened. 
##############################
From agent.py
exp(soap_2053, bathroom_cabinet_40)
Fail to find soap_2053 around bathroom_cabinet_40. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_42)exp(soap_2053, sink_42)walk_executor(washing_machine_2007)open_executor(washing_machine_2007)walk_executor(soap_2053)grab_executor(soap_2053)walk_executor(washing_machine_2007)putin_executor(soap_2053, washing_machine_2007)
##############################
From agent.py
walk_executor(sink_42)
Robot find: detergent_2084, cleaning_solution_2073, soap_2053, Robot is close to the bathroom_counter_41. Robot is close to the sink_42. 
##############################
From agent.py
exp(soap_2053, sink_42)
Find soap_2053. 
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2007)open_executor(washing_machine_2007)walk_executor(soap_2053)grab_executor(soap_2053)walk_executor(washing_machine_2007)putin_executor(soap_2053, washing_machine_2007)
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. 
##############################
From agent.py
open_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is opened. 
##############################
From agent.py
walk_executor(soap_2053)
Robot find: Robot is close to the sink_42. Robot is close to the soap_2053. 
##############################
From agent.py
grab_executor(soap_2053)
Robot find: Robot is close to the sink_42. Robot is close to the soap_2053. Grabbing soap_2053 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the soap_2053. Robot is close to the washing_machine_2007. 
##############################
From agent.py
putin_executor(soap_2053, washing_machine_2007)
Robot find: Robot is close to the soap_2053. Robot is close to the washing_machine_2007. soap_2053 is close washing_machine_2007. washing_machine_2007 is close soap_2053. soap_2053 is inside washing_machine_2007. soap_2053 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2048_around_closetdrawer_382(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==382
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_scarf,closetdrawer_instance)
        else:
            exp(clothes_scarf,closetdrawer_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_scarf]=True
    

behavior find_clothes_underwear_2049_around_closetdrawer_382(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==382
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_underwear,closetdrawer_instance)
        else:
            exp(clothes_underwear,closetdrawer_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_underwear]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)
        # Ensure the washing machine is closed before starting
        achieve is_on(washing_machine)
        # Start the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        
        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket_for_clothes_2006):
                achieve inside(clothes, washing_machine)
                # Transfer each piece of clothing from the basket to the washing machine
        
        start_washing_machine(washing_machine)
        # Initiate washing of clothes in the washing machine

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: basket_for_clothes_2006; available variables: [Variable<clothes: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_soap_2053_around_photoframe_185(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind photoframe_instance:item where:
            is_photoframe(photoframe_instance) and id[photoframe_instance]==185
        achieve close_char(char,photoframe_instance)
        if can_open(photoframe_instance):
            achieve_once open(photoframe_instance)
            exp(soap,photoframe_instance)
        else:
            exp(soap,photoframe_instance)
    eff:
        unknown[soap]=False
        close[soap,photoframe_instance]=True
        close[photoframe_instance,soap]=True
    

behavior find_mat_401_around_towel_rack_32(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==32
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(mat,towel_rack_instance)
        else:
            exp(mat,towel_rack_instance)
    eff:
        unknown[mat]=False
        close[mat,towel_rack_instance]=True
        close[towel_rack_instance,mat]=True
    

behavior find_towel_2058_around_towel_rack_31(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==31
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#goal_representation
behavior start_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)
        # Ensure the washing machine is closed before starting
        achieve is_on(washing_machine)
        # Start the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        
        bind basket_for_clothes: item where:
            is_basket_for_clothes(basket_for_clothes) and id[basket_for_clothes]==2006
        # Select the basket for clothes with a specific ID
        
        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket_for_clothes):
                achieve inside(clothes, washing_machine)
                # Transfer each piece of clothing from the basket to the washing machine
        
        start_washing_machine(washing_machine)
        # Initiate washing of clothes in the washing machine
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior start_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)
        # Ensure the washing machine is closed before starting
        achieve is_on(washing_machine)
        # Start the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine
        
        bind basket_for_clothes: item where:
            is_basket_for_clothes(basket_for_clothes) and id[basket_for_clothes]==2006
        # Select the basket for clothes with a specific ID
        
        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket_for_clothes):
                achieve inside(clothes, washing_machine)
                # Transfer each piece of clothing from the basket to the washing machine
        
        start_washing_machine(washing_machine)
        # Initiate washing of clothes in the washing machine
##############################
From agent.py-> find a plan in act()
walk_executor(clothes_pants_2085)grab_executor(clothes_pants_2085)walk_executor(washing_machine_2007)putin_executor(clothes_pants_2085, washing_machine_2007)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(washing_machine_2007)putin_executor(clothes_shirt_2086, washing_machine_2007)walk_executor(clothes_socks_2087)grab_executor(clothes_socks_2087)walk_executor(washing_machine_2007)putin_executor(clothes_socks_2087, washing_machine_2007)walk_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(washing_machine_2007)putin_executor(clothes_skirt_2088, washing_machine_2007)close_executor(washing_machine_2007)plugin_executor(washing_machine_2007)switchon_executor(washing_machine_2007)
##############################
From agent.py
walk_executor(clothes_pants_2085)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
grab_executor(clothes_pants_2085)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the basket_for_clothes_2006. Grabbing clothes_pants_2085 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the soap_2053. Robot is close to the washing_machine_2007. 
##############################
From agent.py
putin_executor(clothes_pants_2085, washing_machine_2007)
Robot find: Robot is close to the clothes_pants_2085. Robot is close to the soap_2053. Robot is close to the washing_machine_2007. clothes_pants_2085 is inside washing_machine_2007. clothes_pants_2085 is close washing_machine_2007. washing_machine_2007 is close clothes_pants_2085. clothes_pants_2085 released by right hand. 
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the basket_for_clothes_2006. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the soap_2053. Robot is close to the clothes_pants_2085. Robot is close to the washing_machine_2007. 
##############################
From agent.py
putin_executor(clothes_shirt_2086, washing_machine_2007)
Robot find: Robot is close to the clothes_shirt_2086. Robot is close to the soap_2053. Robot is close to the clothes_pants_2085. Robot is close to the washing_machine_2007. washing_machine_2007 is close clothes_shirt_2086. clothes_shirt_2086 is close washing_machine_2007. clothes_shirt_2086 is inside washing_machine_2007. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
walk_executor(clothes_socks_2087)
Robot find: Robot is close to the basket_for_clothes_2006. Robot is close to the clothes_socks_2087. 
##############################
From agent.py
grab_executor(clothes_socks_2087)
Robot find: Robot is close to the basket_for_clothes_2006. Robot is close to the clothes_socks_2087. Grabbing clothes_socks_2087 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_socks_2087. Robot is close to the soap_2053. Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the washing_machine_2007. 
##############################
From agent.py
putin_executor(clothes_socks_2087, washing_machine_2007)
Robot find: Robot is close to the clothes_socks_2087. Robot is close to the soap_2053. Robot is close to the clothes_pants_2085. Robot is close to the clothes_shirt_2086. Robot is close to the washing_machine_2007. clothes_socks_2087 is close washing_machine_2007. clothes_socks_2087 is inside washing_machine_2007. washing_machine_2007 is close clothes_socks_2087. clothes_socks_2087 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. 
##############################
From agent.py
grab_executor(clothes_skirt_2088)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the basket_for_clothes_2006. Grabbing clothes_skirt_2088 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the soap_2053. Robot is close to the clothes_pants_2085. Robot is close to the clothes_socks_2087. Robot is close to the clothes_shirt_2086. Robot is close to the washing_machine_2007. 
##############################
From agent.py
putin_executor(clothes_skirt_2088, washing_machine_2007)
Robot find: Robot is close to the clothes_skirt_2088. Robot is close to the soap_2053. Robot is close to the clothes_pants_2085. Robot is close to the clothes_socks_2087. Robot is close to the clothes_shirt_2086. Robot is close to the washing_machine_2007. clothes_skirt_2088 is close washing_machine_2007. clothes_skirt_2088 is inside washing_machine_2007. washing_machine_2007 is close clothes_skirt_2088. clothes_skirt_2088 released by right hand. 
##############################
From agent.py
close_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is closed. 
##############################
From agent.py
plugin_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is plugged in. 
##############################
From agent.py
switchon_executor(washing_machine_2007)
Robot find: Robot is close to the washing_machine_2007. washing_machine_2007 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Wash all the clothes in the basket for clothes by adding soap to the washing machine and running it.
Action History:
['walk_executor(closetdrawer_382)', 'walk_executor(closetdrawer_382)', 'walk_executor(closetdrawer_382)', 'walk_executor(closetdrawer_382)', 'walk_executor(closetdrawer_382)', 'walk_executor(closetdrawer_382)', 'walk_executor(shower_36)', 'walk_executor(basket_for_clothes_2006)', 'walk_executor(bathroom_cabinet_40)', 'open_executor(bathroom_cabinet_40)', 'walk_executor(sink_42)', 'walk_executor(washing_machine_2007)', 'open_executor(washing_machine_2007)', 'walk_executor(soap_2053)', 'grab_executor(soap_2053)', 'walk_executor(washing_machine_2007)', 'putin_executor(soap_2053, washing_machine_2007)', 'walk_executor(clothes_pants_2085)', 'grab_executor(clothes_pants_2085)', 'walk_executor(washing_machine_2007)', 'putin_executor(clothes_pants_2085, washing_machine_2007)', 'walk_executor(clothes_shirt_2086)', 'grab_executor(clothes_shirt_2086)', 'walk_executor(washing_machine_2007)', 'putin_executor(clothes_shirt_2086, washing_machine_2007)', 'walk_executor(clothes_socks_2087)', 'grab_executor(clothes_socks_2087)', 'walk_executor(washing_machine_2007)', 'putin_executor(clothes_socks_2087, washing_machine_2007)', 'walk_executor(clothes_skirt_2088)', 'grab_executor(clothes_skirt_2088)', 'walk_executor(washing_machine_2007)', 'putin_executor(clothes_skirt_2088, washing_machine_2007)', 'close_executor(washing_machine_2007)', 'plugin_executor(washing_machine_2007)', 'switchon_executor(washing_machine_2007)']
Time info:
Time consume: 195 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 18
goal generate times: 3
goal correct times: 1

Task complete rate:
1
Scene_id: 0
##############################
