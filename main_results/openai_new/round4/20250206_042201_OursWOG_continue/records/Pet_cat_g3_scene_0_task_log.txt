From agent.py
Reset goals: The sub-goals are: 
['1. Prepare a bowl of water.', '2. Put the bowl of water on the table in the home office.', '3. Find the cat and put it on the table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2072_around_cupboard_229(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==229
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_bowl_with_water(bowl:item):
    body:
        achieve has_water(bowl)
        # Fill the bowl with water

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl
        fill_bowl_with_water(bowl)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior fill_bowl_with_water(bowl:item):
    body:
        achieve has_water(bowl)
        # Fill the bowl with water

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select a bowl
        fill_bowl_with_water(bowl)

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_229)open_executor(cupboard_229)exp(bowl_2071, cupboard_229)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(cupboard_229)
Robot find: Robot is close to the cupboard_229. 
##############################
From agent.py
open_executor(cupboard_229)
Robot find: Robot is close to the cupboard_229. cupboard_229 is opened. 
##############################
From agent.py
exp(bowl_2071, cupboard_229)
Fail to find bowl_2071 around cupboard_229. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_394)exp(bowl_2071, closetdrawer_394)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_394)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(bowl_2071, closetdrawer_394)
Fail to find bowl_2071 around closetdrawer_394. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_394)exp(bowl_2071, closetdrawer_394)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_394)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(bowl_2071, closetdrawer_394)
Fail to find bowl_2071 around closetdrawer_394. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_394)exp(bowl_2071, closetdrawer_394)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_394)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(bowl_2071, closetdrawer_394)
Fail to find bowl_2071 around closetdrawer_394. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_382)exp(bowl_2071, closetdrawer_382)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_382)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py
exp(bowl_2071, closetdrawer_382)
Fail to find bowl_2071 around closetdrawer_382. 
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_394)exp(bowl_2071, closetdrawer_394)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(closetdrawer_394)
Robot find: Robot is close to the dresser_358. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find bowl_2071 ?
Answer: The target item, bowl_2071, can be found inside dining_room_201. It is located on table_226. Look for bowl_2071 on this particular table, as it is positioned there.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item, bowl_2071, can be found inside dining_room_201. It is located on table_226. Look for bowl_2071 on this particular table, as it is positioned there.

The actions you have taken:
Action 1: Walk to cupboard_229.
Action 2: Open cupboard_229.
Action 3: look for bowl_2071 around cupboard_229.
Action 4: Walk to closetdrawer_394.
Action 5: look for bowl_2071 around closetdrawer_394.
Action 6: Walk to closetdrawer_394.
Action 7: look for bowl_2071 around closetdrawer_394.
Action 8: Walk to closetdrawer_394.
Action 9: look for bowl_2071 around closetdrawer_394.
Action 10: Walk to closetdrawer_382.
Action 11: look for bowl_2071 around closetdrawer_382.
Action 12: Walk to closetdrawer_394.

##############################
From agent.py
exp(bowl_2071, closetdrawer_394)
Fail to find bowl_2071 around closetdrawer_394. 
##############################
From agent.py-> find a plan in act()
walk_executor(home_office_319)exp(bowl_2071, home_office_319)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(home_office_319)

##############################
From agent.py
exp(bowl_2071, home_office_319)
Fail to find bowl_2071 around home_office_319. 
##############################
From agent.py-> find a plan in act()
walk_executor(toilet_37)open_executor(toilet_37)exp(bowl_2071, toilet_37)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(toilet_37)
Robot find: toilet_paper_2090, basket_for_clothes_2006, Robot is close to the toilet_37. 
##############################
From agent.py
open_executor(toilet_37)
Robot find: Robot is close to the toilet_37. toilet_37 is opened. 
##############################
From agent.py
exp(bowl_2071, toilet_37)
Fail to find bowl_2071 around toilet_37. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_226)exp(bowl_2071, table_226)walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(table_226)
Robot find: drawing_243, bowl_2071, coffee_filter_2000, drawing_2003, drawing_241, bowl_2072, mat_236, fork_2080, drawing_238, drawing_239, drawing_240, drawing_242, fork_2081, mat_237, Robot is close to the table_226. 
##############################
From agent.py
exp(bowl_2071, table_226)
Find bowl_2071. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2071)grab_executor(bowl_2071)walk_executor(faucet_43)switchon_executor(faucet_43)switchoff_executor(faucet_43)
##############################
From agent.py
walk_executor(bowl_2071)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2071. 
##############################
From agent.py
grab_executor(bowl_2071)
Robot find: Robot is close to the table_226. Robot is close to the bowl_2071. Grabbing bowl_2071 by right hand. 
##############################
From agent.py
walk_executor(faucet_43)
Robot find: towel_rack_31, towel_rack_32, towel_rack_34, Robot is close to the bowl_2071. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. 
##############################
From agent.py
switchon_executor(faucet_43)
Robot find: Robot is close to the bowl_2071. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_43)
Robot find: Robot is close to the bowl_2071. Robot is close to the bathroom_counter_41. Robot is close to the faucet_43. faucet_43 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2063_around_home_office_319(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==319
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(cup,home_office_instance)
        else:
            exp(cup,home_office_instance)
    eff:
        unknown[cup]=False
        close[cup,home_office_instance]=True
        close[home_office_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_bowl_in_home_office(bowl:item, table:item):
    body:
        achieve on(bowl, table)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and has_water(bowl)
        # Select the bowl with water

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind table: item where:
            is_table(table) and inside(table, dining_room) and id[table]==226
        # Select table in the dining room with ID 226
        
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office
        
        bind target_table: item where:
            is_table(target_table) and inside(target_table, home_office)
        # Select a table in the home office

        place_bowl_in_home_office(bowl, target_table)
        # Place the bowl of water on the target table in the home office

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior place_bowl_in_home_office(bowl:item, table:item):
    body:
        achieve on(bowl, table)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and has_water(bowl)
        # Select the bowl with water

        bind dining_room: item where:
            is_dining_room(dining_room)
        # Select the dining room

        bind table: item where:
            is_table(table) and inside(table, dining_room) and id[table]==226
        # Select table in the dining room with ID 226
        
        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office
        
        bind target_table: item where:
            is_table(target_table) and inside(target_table, home_office)
        # Select a table in the home office

        place_bowl_in_home_office(bowl, target_table)
        # Place the bowl of water on the target table in the home office

##############################
From agent.py-> find a plan in act()
walk_executor(table_355)put_executor(bowl_2071, table_355)
##############################
From agent.py
walk_executor(table_355)
Robot find: mat_401, headset_2062, spectacles_2082, pillow_406, remote_control_2052, clothes_jacket_2047, pillow_405, cat_2055, drawing_400, drawing_404, hairbrush_2002, vacuum_cleaner_2070, Robot is close to the bowl_2071. Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. 
##############################
From agent.py
put_executor(bowl_2071, table_355)
Robot find: Robot is close to the bowl_2071. Robot is close to the couch_352. Robot is close to the mat_401. Robot is close to the table_355. table_355 is close bowl_2071. bowl_2071 is close table_355. bowl_2071 is on table_355. bowl_2071 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to move the bowl of water from table_355 to the table in the home office, as it is currently on a different table.
##############################
From agent.py
Human Instruction: You need to move the bowl of water from table_355 to the table in the home office, as it is currently on a different table.

The actions you have taken:
Action 1: Walk to cupboard_229.
Action 2: Open cupboard_229.
Action 3: look for bowl_2071 around cupboard_229.
Action 4: Walk to closetdrawer_394.
Action 5: look for bowl_2071 around closetdrawer_394.
Action 6: Walk to closetdrawer_394.
Action 7: look for bowl_2071 around closetdrawer_394.
Action 8: Walk to closetdrawer_394.
Action 9: look for bowl_2071 around closetdrawer_394.
Action 10: Walk to closetdrawer_382.
Action 11: look for bowl_2071 around closetdrawer_382.
Action 12: Walk to closetdrawer_394.
Action 13: look for bowl_2071 around closetdrawer_394.
Action 14: Walk to home_office_319.
Action 15: look for bowl_2071 around home_office_319.
Action 16: Walk to toilet_37.
Action 17: Open toilet_37.
Action 18: look for bowl_2071 around toilet_37.
Action 19: Walk to table_226.
Action 20: look for bowl_2071 around table_226.
Action 21: Walk to bowl_2071.
Action 22: Grab bowl_2071.
Action 23: Walk to faucet_43.
Action 24: Switch on faucet_43.
Action 25: Switch off faucet_43.
Action 26: Walk to table_355.
Action 27: Put bowl_2071 on table_355.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_2069_around_basket_for_clothes_2006(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind basket_for_clothes_instance:item where:
            is_basket_for_clothes(basket_for_clothes_instance) and id[basket_for_clothes_instance]==2006
        achieve close_char(char,basket_for_clothes_instance)
        if can_open(basket_for_clothes_instance):
            achieve_once open(basket_for_clothes_instance)
            exp(pot,basket_for_clothes_instance)
        else:
            exp(pot,basket_for_clothes_instance)
    eff:
        unknown[pot]=False
        close[pot,basket_for_clothes_instance]=True
        close[basket_for_clothes_instance,pot]=True
    

behavior find_cup_2064_around_home_office_319(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==319
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(cup,home_office_instance)
        else:
            exp(cup,home_office_instance)
    eff:
        unknown[cup]=False
        close[cup,home_office_instance]=True
        close[home_office_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind table_home_office: item where:
            is_table(table_home_office) and inside(table_home_office, home_office_319)
        # Select the table in the home office with ID 319

        bind bowl: item where:
            is_bowl(bowl) and on(bowl, table_355)
        # Select the bowl that is on table 355

        achieve on(bowl, table_home_office)
        # Place the bowl on the table in the home office

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: home_office_319; available variables: [Variable<table_home_office: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_pot_2069_around_closetdrawer_394(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==394
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(pot,closetdrawer_instance)
        else:
            exp(pot,closetdrawer_instance)
    eff:
        unknown[pot]=False
        close[pot,closetdrawer_instance]=True
        close[closetdrawer_instance,pot]=True
    

behavior find_cup_2064_around_closetdrawer_382(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==382
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(cup,closetdrawer_instance)
        else:
            exp(cup,closetdrawer_instance)
    eff:
        unknown[cup]=False
        close[cup,closetdrawer_instance]=True
        close[closetdrawer_instance,cup]=True
    

#goal_representation

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office) and id[home_office] == 319
        # Bind room home_office with ID 319

        bind table_home_office: item where:
            is_table(table_home_office) and inside(table_home_office, home_office)
        # Select the table within the home office

        bind bowl: item where:
            is_bowl(bowl) and on(bowl, table_355)
        # Select the bowl that is on table 355

        achieve on(bowl, table_home_office)
        # Place the bowl on the table in the home office

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: table_355; available variables: [Variable<bowl: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office) and id[home_office] == 319
        # Bind room home_office with ID 319

        bind table_home_office: item where:
            is_table(table_home_office) and inside(table_home_office, home_office)
        # Select the table within the home office

        bind bowl: item where:
            is_bowl(bowl) and exists source_table: item : is_table(source_table) and id[source_table] == 355 and on(bowl, source_table)
        # Select the bowl that is on table 355

        achieve on(bowl, table_home_office)
        # Place the bowl on the table in the home office

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_mouse_413_around_closetdrawer_394(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==394
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(mouse,closetdrawer_instance)
        else:
            exp(mouse,closetdrawer_instance)
    eff:
        unknown[mouse]=False
        close[mouse,closetdrawer_instance]=True
        close[closetdrawer_instance,mouse]=True
    

#exp_behavior_end

#goal_representation
 
behavior move_bowl_to_table(bowl:item, table:item):
    body:
        achieve on(bowl, table)
        # Place the bowl on the table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and on(bowl, table_355)
        # Select the bowl on table_355

        bind table: item where:
            is_table(table) and inside(table, home_office_319)
        # Select the table in the home office

        move_bowl_to_table(bowl, table)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: table_355; available variables: [Variable<bowl: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_cup_2064_around_home_office_319(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==319
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(cup,home_office_instance)
        else:
            exp(cup,home_office_instance)
    eff:
        unknown[cup]=False
        close[cup,home_office_instance]=True
        close[home_office_instance,cup]=True
    

#goal_representation

behavior move_bowl_to_table(bowl:item, table:item):
    body:
        achieve on(bowl, table)
        # Place the bowl on the table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and on(bowl, table_355)
        # Select the bowl on table_355

        bind table_355: item where:
            is_table(table_355) and surfaces(table_355)
        # Define the current table where the bowl is

        bind table: item where:
            is_table(table) and inside(table, home_office_319)
        # Select the table in the home office

        move_bowl_to_table(bowl, table)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: table_355; available variables: [Variable<bowl: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_dry_pasta_2042_around_closetdrawer_394(dry_pasta:item):
    goal: not unknown(dry_pasta)
    body:
        assert is_dry_pasta(dry_pasta)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==394
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(dry_pasta,closetdrawer_instance)
        else:
            exp(dry_pasta,closetdrawer_instance)
    eff:
        unknown[dry_pasta]=False
        close[dry_pasta,closetdrawer_instance]=True
        close[closetdrawer_instance,dry_pasta]=True
    

behavior find_pot_2069_around_closetdrawer_380(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==380
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(pot,closetdrawer_instance)
        else:
            exp(pot,closetdrawer_instance)
    eff:
        unknown[pot]=False
        close[pot,closetdrawer_instance]=True
        close[closetdrawer_instance,pot]=True
    

#goal_representation
 
behavior move_bowl_to_table(bowl:item, table:item):
    body:
        achieve on(bowl, table)
        # Place the bowl on the table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and on(bowl, table_355)
        # Select the bowl on table_355

        bind table_355: item where:
            is_table(table_355) and surfaces(table_355)
        # Define the current table where the bowl is

        bind table: item where:
            is_table(table) and inside(table, home_office_319)
        # Select the table in the home office

        move_bowl_to_table(bowl, table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2064_around_home_office_319(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==319
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(cup,home_office_instance)
        else:
            exp(cup,home_office_instance)
    eff:
        unknown[cup]=False
        close[cup,home_office_instance]=True
        close[home_office_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior move_bowl_to_home_office(bowl:item, table:item):
    body:
        achieve on(bowl, table)

behavior __goal__():
    body:
        bind home_office_table: item where:
            is_table(home_office_table) and inside(home_office_table, home_office_319)
        # Select the table in the home office

        bind bowl: item where:
            is_bowl(bowl) and on(bowl, table_355)
        # Select the bowl on table_355

        move_bowl_to_home_office(bowl, home_office_table)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: home_office_319; available variables: [Variable<home_office_table: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation

behavior move_bowl_to_home_office(bowl:item, table:item):
    body:
        achieve on(bowl, table)

behavior __goal__():
    body:
        bind home_office: item where:
            is_home_office(home_office)
        bind home_office_table: item where:
            is_table(home_office_table) and inside(home_office_table, home_office)
        # Select the table in the home office

        bind bowl: item where:
            is_bowl(bowl) and on(bowl, table_355)
        # Select the bowl on table_355

        move_bowl_to_home_office(bowl, home_office_table)

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_2069_around_closetdrawer_382(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==382
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(pot,closetdrawer_instance)
        else:
            exp(pot,closetdrawer_instance)
    eff:
        unknown[pot]=False
        close[pot,closetdrawer_instance]=True
        close[closetdrawer_instance,pot]=True
    

behavior find_cup_2064_around_closetdrawer_382(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==382
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(cup,closetdrawer_instance)
        else:
            exp(cup,closetdrawer_instance)
    eff:
        unknown[cup]=False
        close[cup,closetdrawer_instance]=True
        close[closetdrawer_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior move_bowl_to_office(bowl:item, table_home_office:item):
    body:
        achieve on(bowl, table_home_office)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and on(bowl, table_355)
        # Assume table_355 is the table where the bowl currently is
        
        bind table_home_office: item where:
            is_table(table_home_office) and inside(table_home_office, home_office_319)
        # You need the table identified in the home office
        
        move_bowl_to_office(bowl, table_home_office)
        # Move the bowl from current location to the home office table

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: table_355; available variables: [Variable<bowl: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_cup_2064_around_closetdrawer_394(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==394
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(cup,closetdrawer_instance)
        else:
            exp(cup,closetdrawer_instance)
    eff:
        unknown[cup]=False
        close[cup,closetdrawer_instance]=True
        close[closetdrawer_instance,cup]=True
    

#goal_representation
 
behavior move_bowl_to_office(bowl:item, table_home_office:item):
    body:
        achieve on(bowl, table_home_office)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and exists table_355: item : is_table(table_355) and on(bowl, table_355)
        # Ensure table_355 is defined with the bowl

        bind table_home_office: item where:
            is_table(table_home_office) and inside(table_home_office, home_office_319)
        # Identify the table in the home office

        move_bowl_to_office(bowl, table_home_office)
        # Move the bowl from current location to the home office table

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'table_355') at line 5777, column 38.
Expected one of: 
	* _NEWLINE
	* SEMICOLON
	* COMMA

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_cup_2063_around_home_office_319(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==319
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(cup,home_office_instance)
        else:
            exp(cup,home_office_instance)
    eff:
        unknown[cup]=False
        close[cup,home_office_instance]=True
        close[home_office_instance,cup]=True
    

#goal_representation

behavior move_bowl_to_office(bowl:item, table_home_office:item):
    body:
        achieve on(bowl, table_home_office)

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and exists t: item : is_table(t) and on(bowl, t) and id[t]==355
        # Ensure table_355 is defined with the bowl

        bind table_home_office: item where:
            is_table(table_home_office) and inside(table_home_office, home_office_319)
        # Identify the table in the home office

        move_bowl_to_office(bowl, table_home_office)
        # Move the bowl from current location to the home office table

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2083_around_oven_295(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==295
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(fryingpan,oven_instance)
        else:
            exp(fryingpan,oven_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,oven_instance]=True
        close[oven_instance,fryingpan]=True
    

behavior find_pot_2069_around_closetdrawer_382(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==382
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(pot,closetdrawer_instance)
        else:
            exp(pot,closetdrawer_instance)
    eff:
        unknown[pot]=False
        close[pot,closetdrawer_instance]=True
        close[closetdrawer_instance,pot]=True
    

behavior find_cup_2064_around_closetdrawer_394(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==394
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(cup,closetdrawer_instance)
        else:
            exp(cup,closetdrawer_instance)
    eff:
        unknown[cup]=False
        close[cup,closetdrawer_instance]=True
        close[closetdrawer_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior move_bowl_of_water(bowl:item, table_home_office:item):
    body:
        achieve close_char(char, bowl)
        # Ensure the character approaches the bowl
        achieve on(bowl, table_home_office)
        # Ensure the bowl is placed on the table in the home office

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and has_water(bowl)
        # Select the bowl with water
        
        bind table_home_office: item where:
            is_table(table_home_office) and inside(table_home_office, home_office_319)
        # Select the table located inside the home office
        
        move_bowl_of_water(bowl, table_home_office)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: home_office_319; available variables: [Variable<table_home_office: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_mouse_413_around_closetdrawer_394(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==394
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(mouse,closetdrawer_instance)
        else:
            exp(mouse,closetdrawer_instance)
    eff:
        unknown[mouse]=False
        close[mouse,closetdrawer_instance]=True
        close[closetdrawer_instance,mouse]=True
    

behavior find_phone_2077_around_home_office_319(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==319
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(phone,home_office_instance)
        else:
            exp(phone,home_office_instance)
    eff:
        unknown[phone]=False
        close[phone,home_office_instance]=True
        close[home_office_instance,phone]=True
    

#goal_representation

behavior move_bowl_of_water(bowl:item, table_home_office:item, home_office:item):
    body:
        achieve close_char(char, bowl)
        # Ensure the character approaches the bowl
        achieve on(bowl, table_home_office)
        # Ensure the bowl is placed on the table in the home office

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and has_water(bowl)
        # Select the bowl with water

        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office room

        bind table_home_office: item where:
            is_table(table_home_office) and inside(table_home_office, home_office)
        # Select the table located inside the home office

        move_bowl_of_water(bowl, table_home_office, home_office)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
behavior move_bowl_to_table(bowl:item, target_table:item):
    body:
        achieve on(bowl, target_table)
        # Move the bowl to the target table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and has_water(bowl)
        # Select the bowl with water
        bind home_office_table: item where:
            is_table(home_office_table) and inside(home_office_table, room) and is_home_office(room)
        # Select the table in the home office
        move_bowl_to_table(bowl, home_office_table) 
        # Move the bowl to the table in the home office
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: room; available variables: [Variable<home_office_table: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_chair_103_around_home_office_319(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==319
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(chair,home_office_instance)
        else:
            exp(chair,home_office_instance)
    eff:
        unknown[chair]=False
        close[chair,home_office_instance]=True
        close[home_office_instance,chair]=True
    

#goal_representation
 
behavior move_bowl_to_table(bowl:item, target_table:item):
    body:
        achieve on(bowl, target_table)
        # Move the bowl to the target table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and has_water(bowl)
        # Select the bowl with water
        bind room: item where:
            is_home_office(room)
        # Select the home office room
        bind home_office_table: item where:
            is_table(home_office_table) and inside(home_office_table, room)
        # Select the table in the home office
        move_bowl_to_table(bowl, home_office_table) 
        # Move the bowl to the table in the home office

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2083_around_oven_295(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==295
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(fryingpan,oven_instance)
        else:
            exp(fryingpan,oven_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,oven_instance]=True
        close[oven_instance,fryingpan]=True
    

#exp_behavior_end

#goal_representation
behavior move_bowl_to_home_office_table(bowl:item, home_office_table:item):
    body:
        achieve on(bowl, home_office_table)
        # Place the bowl on the table in the home office

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and on(bowl, table_355)
        # Select the bowl currently on table_355

        bind home_office_table: item where:
            is_table(home_office_table) and inside(home_office_table, home_office_319)
        # Select the table in the home office

        move_bowl_to_home_office_table(bowl, home_office_table)
        # Move the bowl from table_355 to the table in the home office
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: table_355; available variables: [Variable<bowl: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_fryingpan_2083_around_oven_295(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==295
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(fryingpan,oven_instance)
        else:
            exp(fryingpan,oven_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,oven_instance]=True
        close[oven_instance,fryingpan]=True
    

#goal_representation
 
behavior move_bowl_to_home_office_table(bowl:item, home_office_table:item):
    body:
        achieve on(bowl, home_office_table)
        # Place the bowl on the table in the home office

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and on(bowl, table_355)
        # Select the bowl currently on table_355

        bind table_355: item where:
            is_table(table_355)
        # Ensure table_355 is defined as a table

        bind home_office_table: item where:
            is_table(home_office_table) and inside(home_office_table, home_office_319)
        # Select the table in the home office

        move_bowl_to_home_office_table(bowl, home_office_table)
        # Move the bowl from table_355 to the table in the home office

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: table_355; available variables: [Variable<bowl: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_cup_2064_around_closetdrawer_394(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==394
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(cup,closetdrawer_instance)
        else:
            exp(cup,closetdrawer_instance)
    eff:
        unknown[cup]=False
        close[cup,closetdrawer_instance]=True
        close[closetdrawer_instance,cup]=True
    

#goal_representation
 
behavior move_bowl_to_home_office_table(bowl:item, home_office_table:item):
    body:
        achieve on(bowl, home_office_table)
        # Place the bowl on the table in the home office

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and on(bowl, table_355)
        # Select the bowl currently on table_355

        bind table_355: item where:
            is_table(table_355)
        # Ensure table_355 is defined as a table

        bind home_office_table: item where:
            is_table(home_office_table) and inside(home_office_table, home_office_319)
        # Select the table in the home office

        move_bowl_to_home_office_table(bowl, home_office_table)
        # Move the bowl from table_355 to the table in the home office

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_pot_2069_around_coffee_table_2068(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind coffee_table_instance:item where:
            is_coffee_table(coffee_table_instance) and id[coffee_table_instance]==2068
        achieve close_char(char,coffee_table_instance)
        if can_open(coffee_table_instance):
            achieve_once open(coffee_table_instance)
            exp(pot,coffee_table_instance)
        else:
            exp(pot,coffee_table_instance)
    eff:
        unknown[pot]=False
        close[pot,coffee_table_instance]=True
        close[coffee_table_instance,pot]=True
    

behavior find_cup_2064_around_closetdrawer_394(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==394
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(cup,closetdrawer_instance)
        else:
            exp(cup,closetdrawer_instance)
    eff:
        unknown[cup]=False
        close[cup,closetdrawer_instance]=True
        close[closetdrawer_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior move_bowl_to_table(bowl:item, target_table:item):
    body:
        achieve on(bowl, target_table)
        # Move bowl to the specified table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and on(bowl, table_355) and has_water(bowl)
        bind home_office_table: item where:
            is_table(home_office_table) and inside(home_office_table, home_office_319)
        move_bowl_to_table(bowl, home_office_table)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: table_355; available variables: [Variable<bowl: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_fryingpan_2083_around_oven_295(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==295
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(fryingpan,oven_instance)
        else:
            exp(fryingpan,oven_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,oven_instance]=True
        close[oven_instance,fryingpan]=True
    

behavior find_food_bacon_2010_around_fridge_289(food_bacon:item):
    goal: not unknown(food_bacon)
    body:
        assert is_food_bacon(food_bacon)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_bacon,fridge_instance)
        else:
            exp(food_bacon,fridge_instance)
    eff:
        unknown[food_bacon]=False
        close[food_bacon,fridge_instance]=True
        close[fridge_instance,food_bacon]=True
    

behavior find_headset_2076_around_home_office_319(headset:item):
    goal: not unknown(headset)
    body:
        assert is_headset(headset)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==319
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(headset,home_office_instance)
        else:
            exp(headset,home_office_instance)
    eff:
        unknown[headset]=False
        close[headset,home_office_instance]=True
        close[home_office_instance,headset]=True
    

#goal_representation
 
behavior move_bowl_to_table(bowl:item, target_table:item):
    body:
        achieve on(bowl, target_table)
        # Move bowl to the specified table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and on(bowl, table) and has_water(bowl)
        bind table_355: item where:
            is_table(table_355) and on(bowl, table_355)
        bind home_office_table: item where:
            is_table(home_office_table) and inside(home_office_table, home_office_319)
        move_bowl_to_table(bowl, home_office_table)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: table; available variables: [Variable<bowl: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_mouse_166_around_closetdrawer_382(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==382
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(mouse,closetdrawer_instance)
        else:
            exp(mouse,closetdrawer_instance)
    eff:
        unknown[mouse]=False
        close[mouse,closetdrawer_instance]=True
        close[closetdrawer_instance,mouse]=True
    

#goal_representation
 
behavior move_bowl_to_table(bowl:item, target_table:item):
    body:
        achieve on(bowl, target_table)
        # Move bowl to the specified table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl) and has_water(bowl)
        bind table_355: item where:
            is_table(table_355) and on(bowl, table_355)
        bind home_office_table: item where:
            is_table(home_office_table) and inside(home_office_table, home_office_319)
        move_bowl_to_table(bowl, home_office_table)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_mouse_413_around_closetdrawer_394(mouse:item):
    goal: not unknown(mouse)
    body:
        assert is_mouse(mouse)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==394
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(mouse,closetdrawer_instance)
        else:
            exp(mouse,closetdrawer_instance)
    eff:
        unknown[mouse]=False
        close[mouse,closetdrawer_instance]=True
        close[closetdrawer_instance,mouse]=True
    

behavior find_keyboard_415_around_mousepad_414(keyboard:item):
    goal: not unknown(keyboard)
    body:
        assert is_keyboard(keyboard)
        bind mousepad_instance:item where:
            is_mousepad(mousepad_instance) and id[mousepad_instance]==414
        achieve close_char(char,mousepad_instance)
        if can_open(mousepad_instance):
            achieve_once open(mousepad_instance)
            exp(keyboard,mousepad_instance)
        else:
            exp(keyboard,mousepad_instance)
    eff:
        unknown[keyboard]=False
        close[keyboard,mousepad_instance]=True
        close[mousepad_instance,keyboard]=True
    

behavior find_chair_106_around_home_office_319(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==319
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(chair,home_office_instance)
        else:
            exp(chair,home_office_instance)
    eff:
        unknown[chair]=False
        close[chair,home_office_instance]=True
        close[home_office_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior move_bowl_to_office_table(bowl:item, office_table:item):
    body:
        achieve on(bowl, office_table)

behavior __goal__():
    body:
        bind table: item where:
            is_table(table) and id[table] == 355
        # Select the table with ID 355, which currently has the bowl
        bind bowl: item where:
            is_bowl(bowl) and on(bowl, table)
        # Select the bowl currently on the table with ID 355
        bind office_table: item where:
            is_table(office_table) and inside(office_table, home_office_319)
        # Select the table that is inside the home office
        move_bowl_to_office_table(bowl, office_table)
        # Move the bowl from the current table to the home office table

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: home_office_319; available variables: [Variable<office_table: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation
 
behavior move_bowl_to_office_table(bowl:item, office_table:item):
    body:
        achieve on(bowl, office_table)

behavior __goal__():
    body:
        bind table: item where:
            is_table(table) and id[table] == 355
        # Select the table with ID 355, which currently has the bowl
        bind bowl: item where:
            is_bowl(bowl) and on(bowl, table)
        # Select the bowl currently on the table with ID 355
        bind home_office: item where:
            is_home_office(home_office) and id[home_office] == 319
        # Select the home office with ID 319
        bind office_table: item where:
            is_table(office_table) and inside(office_table, home_office)
        # Select the table that is inside the home office
        move_bowl_to_office_table(bowl, office_table)
        # Move the bowl from the current table to the home office table

#goal_representation_end

##############################
VH_pipeline: Fail to generate a valid plan
##############################
Task Summary:
Task Goal:
Prepare a bowl of water and put the bowl on the table in home office. Then find my cat put it on the table.
Action History:
['walk_executor(cupboard_229)', 'open_executor(cupboard_229)', 'walk_executor(closetdrawer_394)', 'walk_executor(closetdrawer_394)', 'walk_executor(closetdrawer_394)', 'walk_executor(closetdrawer_382)', 'walk_executor(closetdrawer_394)', 'walk_executor(home_office_319)', 'walk_executor(toilet_37)', 'open_executor(toilet_37)', 'walk_executor(table_226)', 'walk_executor(bowl_2071)', 'grab_executor(bowl_2071)', 'walk_executor(faucet_43)', 'switchon_executor(faucet_43)', 'switchoff_executor(faucet_43)', 'walk_executor(table_355)', 'put_executor(bowl_2071, table_355)']
Time info:
Time consume: 424 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 0
goal generate times: 11
goal correct times: 3

Task complete rate:
Keystate: k1 - Requires: 0 steps
Keystate: k2 - Requires: 4 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
