From agent.py
Reset goals: The sub-goals are: 
['Turn on the lights in the bedroom, then turn on the lights in the bathroom.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def has_switch_and_plugbedroom(light:item):
    # Determine whether the light in the bedroom has a switch
    symbol has_switch_and_plug = has_switch(light) or has_plug(light)
    return has_switch_and_plug

def has_switch_and_plugbathroom(light:item):
    # Determine whether the light in the bathroom has a switch
    symbol has_switch_and_plug = has_switch(light) or has_plug(light)
    return has_switch_and_plug

behavior turn_on_light_bedroom(light:item):
    body:
        walk_to(light) 
        if has_switch_and_plugbedroom(light):
            switch_on(light)

behavior turn_on_light_bathroom(light:item):
    body:
        walk_to(light)
        if has_switch_and_plugbathroom(light):
            switch_on(light)

behavior __goal__():
    body:
        bind light_bedroom: item where:
            is_light(light_bedroom) and inside(light_bedroom, char) and inside_char(char, room)

        bind light_bathroom: item where:
            is_light(light_bathroom) and inside(light_bathroom, char) and inside_char(char, bathroom)

        turn_on_light_bedroom(light_bedroom)
        turn_on_light_bathroom(light_bathroom)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def is_bedroom_light(light:item):
    # Determine if the light is in the bedroom
    symbol in_bedroom=exists room: item : is_bedroom(room) and inside(light, room) and is_light(light)
    return in_bedroom

def is_bathroom_light(light:item):
    # Determine if the light is in the bathroom
    symbol in_bathroom=exists room: item : is_bathroom(room) and inside(light, room) and is_light(light)
    return in_bathroom

behavior turn_on_light(light: item):
    body:
        if not is_on(light):
            switch_on(light)

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and is_bedroom_light(bedroom_light)
        # Select a bedroom light
        
        bind bathroom_light: item where:
            is_light(bathroom_light) and is_bathroom_light(bathroom_light)
        # Select a bathroom light
        
        turn_on_light(bedroom_light)
        # Turn on the light in the bedroom
        
        turn_on_light(bathroom_light)
        # Turn on the light in the bathroom

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_bedroom_light(light:item):
    # Determine if the light is in the bedroom
    symbol in_bedroom=exists room: item : is_bedroom(room) and inside(light, room) and is_light(light)
    return in_bedroom

def is_bathroom_light(light:item):
    # Determine if the light is in the bathroom
    symbol in_bathroom=exists room: item : is_bathroom(room) and inside(light, room) and is_light(light)
    return in_bathroom

behavior turn_on_light(light: item):
    body:
        if not is_on(light):
            switch_on(light)

behavior __goal__():
    body:
        bind bedroom_light: item where:
            is_light(bedroom_light) and is_bedroom_light(bedroom_light)
        # Select a bedroom light
        
        bind bathroom_light: item where:
            is_light(bathroom_light) and is_bathroom_light(bathroom_light)
        # Select a bathroom light
        
        turn_on_light(bedroom_light)
        # Turn on the light in the bedroom
        
        turn_on_light(bathroom_light)
        # Turn on the light in the bathroom

##############################
From agent.py-> find a plan in act()
walk_executor(light_169)switchon_executor(light_169)walk_executor(light_64)switchon_executor(light_64)
##############################
From agent.py
walk_executor(light_169)
Robot find: keyboard_168, drawing_175, chair_103, drawing_174, Robot is close to the light_169. 
##############################
From agent.py
switchon_executor(light_169)
Robot find: Robot is close to the light_169. light_169 is turned on. 
##############################
From agent.py
walk_executor(light_64)
Robot find: towel_rack_32, mat_22, Robot is close to the light_64. 
##############################
From agent.py
switchon_executor(light_64)
Robot find: Robot is close to the light_64. light_64 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Error record: 'str' object has no attribute 'name'
##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
['walk_executor(light_169)', 'switchon_executor(light_169)', 'walk_executor(light_64)', 'switchon_executor(light_64)']
Time info:
Time consume: 40 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 2
goal correct times: 0

Task complete rate:
Keystate: k1 - Requires: 0 steps
Action Completion Rate: No actions required
Scene_id: 0
##############################
