From agent.py
Reset goals: The sub-goals are: 
['Wipe the toilet with toilet paper, then throw it into the toilet.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_toilet_paper_2090_around_toilet_37(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind toilet_instance:item where:
            is_toilet(toilet_instance) and id[toilet_instance]==37
        achieve close_char(char,toilet_instance)
        if can_open(toilet_instance):
            achieve_once open(toilet_instance)
            exp(toilet_paper,toilet_instance)
        else:
            exp(toilet_paper,toilet_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,toilet_instance]=True
        close[toilet_instance,toilet_paper]=True
    

#exp_behavior_end

#goal_representation
 
def in_bathroom(toilet:item):
    # Function to check if the toilet is in the bathroom
    symbol in_bathroom = exists room: item : is_bathroom(room) and inside(toilet, room)
    return in_bathroom

behavior wipe_then_dispose(toilet:item, toilet_paper:item):
    body:
        grab(toilet_paper) # Grab the toilet paper
        wipe(toilet) # Wipe the toilet
        put_inside(toilet_paper, toilet) # Dispose of the used toilet paper by throwing it inside the toilet
        
behavior __goal__():
    body:
        bind toilet: item where:
            is_toilet(toilet) and in_bathroom(toilet)
        # Select a toilet in the bathroom
        bind toilet_paper: item where:
            is_toilet_paper(toilet_paper)
        # Select some toilet paper
        wipe_then_dispose(toilet, toilet_paper) # Execute the wipe and dispose behavior

#goal_representation_end

##############################
From agent.py->reset_goal
 
def in_bathroom(toilet:item):
    # Function to check if the toilet is in the bathroom
    symbol in_bathroom = exists room: item : is_bathroom(room) and inside(toilet, room)
    return in_bathroom

behavior wipe_then_dispose(toilet:item, toilet_paper:item):
    body:
        grab(toilet_paper) # Grab the toilet paper
        wipe(toilet) # Wipe the toilet
        put_inside(toilet_paper, toilet) # Dispose of the used toilet paper by throwing it inside the toilet
        
behavior __goal__():
    body:
        bind toilet: item where:
            is_toilet(toilet) and in_bathroom(toilet)
        # Select a toilet in the bathroom
        bind toilet_paper: item where:
            is_toilet_paper(toilet_paper)
        # Select some toilet paper
        wipe_then_dispose(toilet, toilet_paper) # Execute the wipe and dispose behavior

##############################
From agent.py-> find a plan in act()
walk_executor(toilet_37)open_executor(toilet_37)exp(toilet_paper_2090, toilet_37)walk_executor(toilet_paper_2090)grab_executor(toilet_paper_2090)walk_executor(toilet_37)wipe_executor(toilet_37)putin_executor(toilet_paper_2090, toilet_37)
##############################
From agent.py
walk_executor(toilet_37)
Robot find: toilet_paper_2090, basket_for_clothes_2006, Robot is close to the toilet_37. 
##############################
From agent.py
open_executor(toilet_37)
Robot find: Robot is close to the toilet_37. toilet_37 is opened. 
##############################
From agent.py
exp(toilet_paper_2090, toilet_37)
Find toilet_paper_2090. 
##############################
From agent.py-> find a plan in act()
walk_executor(toilet_paper_2090)grab_executor(toilet_paper_2090)walk_executor(toilet_37)wipe_executor(toilet_37)putin_executor(toilet_paper_2090, toilet_37)
##############################
From agent.py
walk_executor(toilet_paper_2090)
Robot find: Robot is close to the toilet_paper_2090. 
##############################
From agent.py
grab_executor(toilet_paper_2090)
Robot find: Robot is close to the toilet_paper_2090. Grabbing toilet_paper_2090 by right hand. 
##############################
From agent.py
walk_executor(toilet_37)
Robot find: Robot is close to the toilet_paper_2090. Robot is close to the toilet_37. 
##############################
From agent.py
wipe_executor(toilet_37)
Robot find: Robot is close to the toilet_paper_2090. Robot is close to the toilet_37. 
##############################
From agent.py
putin_executor(toilet_paper_2090, toilet_37)
Robot find: Robot is close to the toilet_paper_2090. Robot is close to the toilet_37. toilet_paper_2090 is inside toilet_37. toilet_paper_2090 is close toilet_37. toilet_paper_2090 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Error record: 'str' object has no attribute 'name'
##############################
Task Summary:
Task Goal:
Syntax Error
Action History:
['walk_executor(toilet_37)', 'open_executor(toilet_37)', 'walk_executor(toilet_paper_2090)', 'grab_executor(toilet_paper_2090)', 'walk_executor(toilet_37)', 'wipe_executor(toilet_37)', 'putin_executor(toilet_paper_2090, toilet_37)']
Time info:
Time consume: 38 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 0
goal generate times: 1
goal correct times: 0

Task complete rate:
Keystate: k1 - Requires: 0 steps
Keystate: k2 - Requires: 0 steps
Action Completion Rate: 1.0
Scene_id: 0
##############################
