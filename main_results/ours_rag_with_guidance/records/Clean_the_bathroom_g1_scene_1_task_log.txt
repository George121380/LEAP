From agent.py
Reset goals: The sub-goals are: 
['Clean the bathroom sink directly.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_brush_2002_around_bathroom_counter_18(brush:item):
    goal: not unknown(brush)
    body:
        assert is_brush(brush)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(brush,bathroom_counter_instance)
        else:
            exp(brush,bathroom_counter_instance)
    eff:
        unknown[brush]=False
        close[brush,bathroom_counter_instance]=True
        close[bathroom_counter_instance,brush]=True
    

behavior find_cleaning_solution_2143_around_bathroom_cabinet_17(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

behavior find_detergent_2155_around_bathroom_counter_18(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==18
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(detergent,bathroom_counter_instance)
        else:
            exp(detergent,bathroom_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_counter_instance]=True
        close[bathroom_counter_instance,detergent]=True
    

behavior find_soap_2125_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior scrub_sink(sink:item):
    body:
        scrub(sink)

behavior rinse_sink(sink:item):
    body:
        rinse(sink)

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and dirty(sink)
        # Select the dirty sink

        scrub_sink(sink)
        # Scrub the sink to clean it

        rinse_sink(sink)
        # Rinse the sink after scrubbing to ensure cleanliness

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior scrub_sink(sink:item):
    body:
        scrub(sink)

behavior rinse_sink(sink:item):
    body:
        rinse(sink)

behavior __goal__():
    body:
        bind sink: item where:
            is_sink(sink) and dirty(sink)
        # Select the dirty sink

        scrub_sink(sink)
        # Scrub the sink to clean it

        rinse_sink(sink)
        # Rinse the sink after scrubbing to ensure cleanliness

##############################
From agent.py-> find a plan in act()
walk_executor(sink_19)scrub_executor(sink_19)rinse_executor(sink_19)
##############################
From agent.py
walk_executor(sink_19)
Find mat_32. Find detergent_2155. Find soap_2125. Find after_shave_2063. Find cleaning_solution_2143. Find drawing_33. Find phone_2029. Robot is inside bathroom_1. Robot is close bathroom_counter_18. Robot is close sink_19. Robot is no longer inside dining_room_41.
##############################
From agent.py
scrub_executor(sink_19)
Robot is inside bathroom_1. Robot is close bathroom_counter_18. Robot is close sink_19. 
##############################
From agent.py
rinse_executor(sink_19)
Robot is inside bathroom_1. Robot is close bathroom_counter_18. Robot is close sink_19. 
##############################
