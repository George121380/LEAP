From agent.py
Reset goals: The sub-goals are: 
['1. Find the basket with clothes.', '2. Add clothes and soap to the washing machine.', '3. Start the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_basket_for_clothes_2040_around_dresser_377(basket_for_clothes:item):
    goal: not unknown(basket_for_clothes)
    body:
        assert is_basket_for_clothes(basket_for_clothes)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(basket_for_clothes,dresser_instance)
        else:
            exp(basket_for_clothes,dresser_instance)
    eff:
        unknown[basket_for_clothes]=False
        close[basket_for_clothes,dresser_instance]=True
        close[dresser_instance,basket_for_clothes]=True
    

#exp_behavior_end

#goal_representation
 
behavior locate_basket(basket: item):
    body:
        achieve close_char(char, basket)
        # Move close to the basket to locate it

behavior __goal__():
    body:
        if exists basket: item : is_basket_for_clothes(basket):
            # Check if there is any known basket for clothes
            bind basket: item where:
                is_basket_for_clothes(basket)
            locate_basket(basket)
        else:
            # If no known basket, explore the area to locate one
            foreach basket: item:
                if is_basket_for_clothes(basket) and not visited(basket):
                    observe(basket, "Locate the basket for clothes")

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior locate_basket(basket: item):
    body:
        achieve close_char(char, basket)
        # Move close to the basket to locate it

behavior __goal__():
    body:
        if exists basket: item : is_basket_for_clothes(basket):
            # Check if there is any known basket for clothes
            bind basket: item where:
                is_basket_for_clothes(basket)
            locate_basket(basket)
        else:
            # If no known basket, explore the area to locate one
            foreach basket: item:
                if is_basket_for_clothes(basket) and not visited(basket):
                    observe(basket, "Locate the basket for clothes")

##############################
From agent.py-> find a plan in act()
walk_executor(dresser_377)exp(basket_for_clothes_2040, dresser_377)walk_executor(basket_for_clothes_2040)
##############################
From agent.py
walk_executor(dresser_377)
Find novel_2010. Find pajamas_2039. Find drawing_387. Find drawing_388. Robot is inside bedroom_327. Robot is close dresser_377. Robot is close novel_2010. Robot is close pajamas_2039. Robot is no longer inside home_office_161.
##############################
From agent.py
exp(basket_for_clothes_2040, dresser_377)
Fail to find basket_for_clothes_2040 around dresser_377. 
##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_counter_306)exp(basket_for_clothes_2040, bathroom_counter_306)walk_executor(basket_for_clothes_2040)
##############################
From agent.py
walk_executor(bathroom_counter_306)
Find drawing_296. Find towel_rack_298. Robot is inside bathroom_265. Robot is close bathroom_counter_306. Robot is no longer inside bedroom_327.Robot is no longer close dresser_377.Robot is no longer close novel_2010.Robot is no longer close pajamas_2039.
##############################
From agent.py
exp(basket_for_clothes_2040, bathroom_counter_306)
Fail to find basket_for_clothes_2040 around bathroom_counter_306. 
##############################
From agent.py-> find a plan in act()
walk_executor(toilet_302)open_executor(toilet_302)exp(basket_for_clothes_2040, toilet_302)walk_executor(basket_for_clothes_2040)
##############################
From agent.py
walk_executor(toilet_302)
Robot is inside bathroom_265. Robot is close toilet_302. Robot is no longer close bathroom_counter_306.
##############################
From agent.py
open_executor(toilet_302)
Robot is inside bathroom_265. Robot is close toilet_302. 
##############################
From agent.py
exp(basket_for_clothes_2040, toilet_302)
Fail to find basket_for_clothes_2040 around toilet_302. 
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2041)open_executor(washing_machine_2041)exp(basket_for_clothes_2040, washing_machine_2041)walk_executor(basket_for_clothes_2040)
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot is inside bathroom_265. Robot is close washing_machine_2041. Robot is no longer close toilet_302.
##############################
From agent.py
open_executor(washing_machine_2041)
Robot is inside bathroom_265. Robot is close washing_machine_2041. 
##############################
From agent.py
exp(basket_for_clothes_2040, washing_machine_2041)
Fail to find basket_for_clothes_2040 around washing_machine_2041. 
##############################
From agent.py-> find a plan in act()
walk_executor(bed_376)exp(basket_for_clothes_2040, bed_376)walk_executor(basket_for_clothes_2040)
##############################
From agent.py
walk_executor(bed_376)
Find mat_386. Find drawing_389. Find pillow_368. Find pillow_370. Robot is inside bedroom_327. Robot is close bed_376. Robot is close floor_330. Robot is close mat_386. Robot is no longer inside bathroom_265.Robot is no longer close washing_machine_2041.
##############################
From agent.py
exp(basket_for_clothes_2040, bed_376)
Fail to find basket_for_clothes_2040 around bed_376. 
##############################
From agent.py-> find a plan in act()
walk_executor(bench_122)exp(basket_for_clothes_2040, bench_122)walk_executor(basket_for_clothes_2040)
##############################
From agent.py
walk_executor(bench_122)
Find mat_114. Robot is inside dining_room_1. Robot is close bench_122. Robot is no longer inside bedroom_327.Robot is no longer close bed_376.Robot is no longer close floor_330.Robot is no longer close mat_386.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find basket_for_clothes_2040 ?
Answer: The target item, basket_for_clothes_2040, is located inside the bathroom_265. You can find it near the bathtub_297 and the window_287. Inside the basket, you will find clothes_skirt_2116, clothes_pants_2113, clothes_shirt_2114, and clothes_socks_2115. The basket is also close to these items outside of it.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item, basket_for_clothes_2040, is located inside the bathroom_265. You can find it near the bathtub_297 and the window_287. Inside the basket, you will find clothes_skirt_2116, clothes_pants_2113, clothes_shirt_2114, and clothes_socks_2115. The basket is also close to these items outside of it.

The actions you have taken:
Action 1: Walk to dresser_377.
Action 2: look for basket_for_clothes_2040 around dresser_377.
Action 3: Walk to bathroom_counter_306.
Action 4: look for basket_for_clothes_2040 around bathroom_counter_306.
Action 5: Walk to toilet_302.
Action 6: Open toilet_302.
Action 7: look for basket_for_clothes_2040 around toilet_302.
Action 8: Walk to washing_machine_2041.
Action 9: Open washing_machine_2041.
Action 10: look for basket_for_clothes_2040 around washing_machine_2041.
Action 11: Walk to bed_376.
Action 12: look for basket_for_clothes_2040 around bed_376.
Action 13: Walk to bench_122.

##############################
From agent.py
exp(basket_for_clothes_2040, bench_122)
Fail to find basket_for_clothes_2040 around bench_122. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Identify the basket that contains clothes.', '2. Transfer the clothes to the washing machine.', '3. Add soap to the washing machine.', '4. Start the washing machine.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_pants_2113_around_window_287(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind window_instance:item where:
            is_window(window_instance) and id[window_instance]==287
        achieve close_char(char,window_instance)
        if can_open(window_instance):
            achieve_once open(window_instance)
            exp(clothes_pants,window_instance)
        else:
            exp(clothes_pants,window_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,window_instance]=True
        close[window_instance,clothes_pants]=True
    

behavior find_clothes_socks_2115_around_window_287(clothes_socks:item):
    goal: not unknown(clothes_socks)
    body:
        assert is_clothes_socks(clothes_socks)
        bind window_instance:item where:
            is_window(window_instance) and id[window_instance]==287
        achieve close_char(char,window_instance)
        if can_open(window_instance):
            achieve_once open(window_instance)
            exp(clothes_socks,window_instance)
        else:
            exp(clothes_socks,window_instance)
    eff:
        unknown[clothes_socks]=False
        close[clothes_socks,window_instance]=True
        close[window_instance,clothes_socks]=True
    

behavior find_clothes_shirt_2114_around_window_287(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind window_instance:item where:
            is_window(window_instance) and id[window_instance]==287
        achieve close_char(char,window_instance)
        if can_open(window_instance):
            achieve_once open(window_instance)
            exp(clothes_shirt,window_instance)
        else:
            exp(clothes_shirt,window_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,window_instance]=True
        close[window_instance,clothes_shirt]=True
    

behavior find_basket_for_clothes_2040_around_window_287(basket_for_clothes:item):
    goal: not unknown(basket_for_clothes)
    body:
        assert is_basket_for_clothes(basket_for_clothes)
        bind window_instance:item where:
            is_window(window_instance) and id[window_instance]==287
        achieve close_char(char,window_instance)
        if can_open(window_instance):
            achieve_once open(window_instance)
            exp(basket_for_clothes,window_instance)
        else:
            exp(basket_for_clothes,window_instance)
    eff:
        unknown[basket_for_clothes]=False
        close[basket_for_clothes,window_instance]=True
        close[window_instance,basket_for_clothes]=True
    

#exp_behavior_end

#goal_representation
 
behavior locate_basket(basket:item):
    body:
        achieve close_char(char, basket)
        # Move close to the basket to locate it

behavior __goal__():
    body:
        if exists basket: item : is_basket_for_clothes(basket):
            # Check if there is any known basket for clothes
            bind basket: item where:
                is_basket_for_clothes(basket)
            locate_basket(basket)
        else:
            # If no known basket, explore the specified bathroom to locate one
            bind bathroom: item where:
                is_bathroom(bathroom)
            foreach basket: item:
                if is_basket_for_clothes(basket) and inside(basket, bathroom) and not visited(basket):
                    observe(basket, "Locate the basket for clothes near the bathtub and window")

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior locate_basket(basket:item):
    body:
        achieve close_char(char, basket)
        # Move close to the basket to locate it

behavior __goal__():
    body:
        if exists basket: item : is_basket_for_clothes(basket):
            # Check if there is any known basket for clothes
            bind basket: item where:
                is_basket_for_clothes(basket)
            locate_basket(basket)
        else:
            # If no known basket, explore the specified bathroom to locate one
            bind bathroom: item where:
                is_bathroom(bathroom)
            foreach basket: item:
                if is_basket_for_clothes(basket) and inside(basket, bathroom) and not visited(basket):
                    observe(basket, "Locate the basket for clothes near the bathtub and window")

##############################
From agent.py-> find a plan in act()
walk_executor(window_287)open_executor(window_287)exp(basket_for_clothes_2040, window_287)walk_executor(basket_for_clothes_2040)
##############################
From agent.py
walk_executor(window_287)
Find basket_for_clothes_2040. Find towel_rack_299. Robot is inside bathroom_265. Robot is close window_287. Robot is no longer inside dining_room_1.Robot is no longer close bench_122.
##############################
From agent.py
open_executor(window_287)
Robot is inside bathroom_265. Robot is close window_287. 
##############################
From agent.py
exp(basket_for_clothes_2040, window_287)
Find basket_for_clothes_2040. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Find clothes_pants_2113. Find clothes_shirt_2114. Find clothes_socks_2115. Find clothes_skirt_2116. Robot is inside bathroom_265. Robot is close clothes_pants_2113. Robot is close clothes_shirt_2114. Robot is close clothes_socks_2115. Robot is close clothes_skirt_2116. Robot is close basket_for_clothes_2040. Robot is no longer close window_287.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_needle_2024_around_bathroom_cabinet_305(needle:item):
    goal: not unknown(needle)
    body:
        assert is_needle(needle)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(needle,bathroom_cabinet_instance)
        else:
            exp(needle,bathroom_cabinet_instance)
    eff:
        unknown[needle]=False
        close[needle,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,needle]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_clothes_in_washing_machine(clothes: item, washing_machine: item):
    body:
        achieve inside(clothes, washing_machine)
        # Place the clothes inside the washing machine

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2040
        # Select the basket containing clothes with a specific ID

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket):
                put_clothes_in_washing_machine(clothes, washing_machine)
                # Place all clothes from the basket into the washing machine

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior put_clothes_in_washing_machine(clothes: item, washing_machine: item):
    body:
        achieve inside(clothes, washing_machine)
        # Place the clothes inside the washing machine

behavior __goal__():
    body:
        bind basket: item where:
            is_basket_for_clothes(basket) and id[basket] == 2040
        # Select the basket containing clothes with a specific ID

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        foreach clothes: item:
            if is_clothes(clothes) and inside(clothes, basket):
                put_clothes_in_washing_machine(clothes, washing_machine)
                # Place all clothes from the basket into the washing machine

##############################
From agent.py-> find a plan in act()
grab_executor(clothes_pants_2113)walk_executor(washing_machine_2041)putin_executor(clothes_pants_2113, washing_machine_2041)walk_executor(clothes_shirt_2114)grab_executor(clothes_shirt_2114)walk_executor(washing_machine_2041)putin_executor(clothes_shirt_2114, washing_machine_2041)walk_executor(clothes_socks_2115)grab_executor(clothes_socks_2115)walk_executor(washing_machine_2041)putin_executor(clothes_socks_2115, washing_machine_2041)walk_executor(clothes_skirt_2116)grab_executor(clothes_skirt_2116)walk_executor(washing_machine_2041)putin_executor(clothes_skirt_2116, washing_machine_2041)
##############################
From agent.py
grab_executor(clothes_pants_2113)
Robot is inside bathroom_265. Robot is close clothes_pants_2113. Robot is close clothes_shirt_2114. Robot is close clothes_socks_2115. Robot is close clothes_skirt_2116. Robot is close basket_for_clothes_2040. Grabbing clothes_pants_2113 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot is inside bathroom_265. Robot is close clothes_pants_2113. Robot is close washing_machine_2041. Robot is no longer close clothes_shirt_2114.Robot is no longer close clothes_socks_2115.Robot is no longer close clothes_skirt_2116.Robot is no longer close basket_for_clothes_2040.
##############################
From agent.py
putin_executor(clothes_pants_2113, washing_machine_2041)
Robot is inside bathroom_265. Robot is close clothes_pants_2113. Robot is close washing_machine_2041. clothes_pants_2113 released by right hand. 
##############################
From agent.py
walk_executor(clothes_shirt_2114)
Robot is inside bathroom_265. Robot is close basket_for_clothes_2040. Robot is close clothes_shirt_2114. Robot is no longer close clothes_pants_2113.Robot is no longer close washing_machine_2041.
##############################
From agent.py
grab_executor(clothes_shirt_2114)
Robot is inside bathroom_265. Robot is close basket_for_clothes_2040. Robot is close clothes_shirt_2114. Grabbing clothes_shirt_2114 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot is inside bathroom_265. Robot is close clothes_shirt_2114. Robot is close clothes_pants_2113. Robot is close washing_machine_2041. Robot is no longer close basket_for_clothes_2040.
##############################
From agent.py
putin_executor(clothes_shirt_2114, washing_machine_2041)
Robot is inside bathroom_265. Robot is close clothes_shirt_2114. Robot is close clothes_pants_2113. Robot is close washing_machine_2041. clothes_shirt_2114 released by right hand. 
##############################
From agent.py
walk_executor(clothes_socks_2115)
Robot is inside bathroom_265. Robot is close basket_for_clothes_2040. Robot is close clothes_socks_2115. Robot is no longer close clothes_pants_2113.Robot is no longer close clothes_shirt_2114.Robot is no longer close washing_machine_2041.
##############################
From agent.py
grab_executor(clothes_socks_2115)
Robot is inside bathroom_265. Robot is close basket_for_clothes_2040. Robot is close clothes_socks_2115. Grabbing clothes_socks_2115 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot is inside bathroom_265. Robot is close clothes_socks_2115. Robot is close clothes_pants_2113. Robot is close washing_machine_2041. Robot is close clothes_shirt_2114. Robot is no longer close basket_for_clothes_2040.
##############################
From agent.py
putin_executor(clothes_socks_2115, washing_machine_2041)
Robot is inside bathroom_265. Robot is close clothes_socks_2115. Robot is close clothes_pants_2113. Robot is close washing_machine_2041. Robot is close clothes_shirt_2114. clothes_socks_2115 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2116)
Robot is inside bathroom_265. Robot is close basket_for_clothes_2040. Robot is close clothes_skirt_2116. Robot is no longer close clothes_pants_2113.Robot is no longer close clothes_shirt_2114.Robot is no longer close clothes_socks_2115.Robot is no longer close washing_machine_2041.
##############################
From agent.py
grab_executor(clothes_skirt_2116)
Robot is inside bathroom_265. Robot is close basket_for_clothes_2040. Robot is close clothes_skirt_2116. Grabbing clothes_skirt_2116 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot is inside bathroom_265. Robot is close clothes_skirt_2116. Robot is close clothes_pants_2113. Robot is close washing_machine_2041. Robot is close clothes_shirt_2114. Robot is close clothes_socks_2115. Robot is no longer close basket_for_clothes_2040.
##############################
From agent.py
putin_executor(clothes_skirt_2116, washing_machine_2041)
Robot is inside bathroom_265. Robot is close clothes_skirt_2116. Robot is close clothes_pants_2113. Robot is close washing_machine_2041. Robot is close clothes_shirt_2114. Robot is close clothes_socks_2115. clothes_skirt_2116 released by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_bathroom_cabinet_305(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

behavior find_soap_2038_around_bathroom_cabinet_305(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior add_soap_to_washing_machine_and_run(soap:item, washing_machine:item):
    body:
        achieve inside(soap, washing_machine)
        # Place the soap inside the washing machine

        achieve is_on(washing_machine)
        # Turn on the washing machine to start washing

behavior __goal__():
    body:
        bind soap: item where:
            is_soap(soap)
        # Select the soap to be used

        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2041
        # Select the washing machine

        add_soap_to_washing_machine_and_run(soap, washing_machine)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior add_soap_to_washing_machine_and_run(soap:item, washing_machine:item):
    body:
        achieve inside(soap, washing_machine)
        # Place the soap inside the washing machine

        achieve is_on(washing_machine)
        # Turn on the washing machine to start washing

behavior __goal__():
    body:
        bind soap: item where:
            is_soap(soap)
        # Select the soap to be used

        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2041
        # Select the washing machine

        add_soap_to_washing_machine_and_run(soap, washing_machine)

##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_cabinet_305)open_executor(bathroom_cabinet_305)exp(soap_2037, bathroom_cabinet_305)walk_executor(soap_2037)grab_executor(soap_2037)walk_executor(washing_machine_2041)putin_executor(soap_2037, washing_machine_2041)plugin_executor(washing_machine_2041)close_executor(washing_machine_2041)switchon_executor(washing_machine_2041)
##############################
From agent.py
walk_executor(bathroom_cabinet_305)
Find soap_2038. Robot is inside bathroom_265. Robot is close bathroom_cabinet_305. Robot is close wall_269. Robot is close soap_2038. Robot is no longer close clothes_pants_2113.Robot is no longer close clothes_shirt_2114.Robot is no longer close clothes_socks_2115.Robot is no longer close clothes_skirt_2116.Robot is no longer close washing_machine_2041.
##############################
From agent.py
open_executor(bathroom_cabinet_305)
Robot is inside bathroom_265. Robot is close bathroom_cabinet_305. Robot is close wall_269. Robot is close soap_2038. 
##############################
From agent.py
exp(soap_2037, bathroom_cabinet_305)
Fail to find soap_2037 around bathroom_cabinet_305. 
##############################
From agent.py-> find a plan in act()
walk_executor(towel_rack_299)exp(soap_2037, towel_rack_299)walk_executor(soap_2037)grab_executor(soap_2037)walk_executor(washing_machine_2041)putin_executor(soap_2037, washing_machine_2041)plugin_executor(washing_machine_2041)close_executor(washing_machine_2041)switchon_executor(washing_machine_2041)
##############################
From agent.py
walk_executor(towel_rack_299)
Find towel_rack_300. Robot is inside bathroom_265. Robot is close towel_rack_299. Robot is no longer close bathroom_cabinet_305.Robot is no longer close wall_269.Robot is no longer close soap_2038.
##############################
From agent.py
exp(soap_2037, towel_rack_299)
Fail to find soap_2037 around towel_rack_299. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_301)exp(soap_2037, wallshelf_301)walk_executor(soap_2037)grab_executor(soap_2037)walk_executor(washing_machine_2041)putin_executor(soap_2037, washing_machine_2041)plugin_executor(washing_machine_2041)close_executor(washing_machine_2041)switchon_executor(washing_machine_2041)
##############################
From agent.py
walk_executor(wallshelf_301)
Robot is inside bathroom_265. Robot is close wallshelf_301. Robot is no longer close towel_rack_299.
##############################
From agent.py
exp(soap_2037, wallshelf_301)
Fail to find soap_2037 around wallshelf_301. 
##############################
From agent.py-> find a plan in act()
walk_executor(door_286)exp(soap_2037, door_286)walk_executor(soap_2037)grab_executor(soap_2037)walk_executor(washing_machine_2041)putin_executor(soap_2037, washing_machine_2041)plugin_executor(washing_machine_2041)close_executor(washing_machine_2041)switchon_executor(washing_machine_2041)
##############################
From agent.py
walk_executor(door_286)
Find mat_292. Robot is inside bathroom_265. Robot is close floor_337. Robot is close door_286. Robot is no longer close wallshelf_301.
##############################
From agent.py
exp(soap_2037, door_286)
Fail to find soap_2037 around door_286. 
##############################
From agent.py-> find a plan in act()
walk_executor(towel_rack_298)exp(soap_2037, towel_rack_298)walk_executor(soap_2037)grab_executor(soap_2037)walk_executor(washing_machine_2041)putin_executor(soap_2037, washing_machine_2041)plugin_executor(washing_machine_2041)close_executor(washing_machine_2041)switchon_executor(washing_machine_2041)
##############################
From agent.py
walk_executor(towel_rack_298)
Find towel_2083. Robot is inside bathroom_265. Robot is close towel_rack_298. Robot is no longer close floor_337.Robot is no longer close door_286.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find soap_2037 ?
Answer: Robot, locate soap_2037 by going into bedroom_327. Inside the room, find filing_cabinet_378. Open the filing cabinet, and you will find soap_2037 inside it.
Re-decompose: None

##############################
From agent.py
Human Instruction: The target item, basket_for_clothes_2040, is located inside the bathroom_265. You can find it near the bathtub_297 and the window_287. Inside the basket, you will find clothes_skirt_2116, clothes_pants_2113, clothes_shirt_2114, and clothes_socks_2115. The basket is also close to these items outside of it.
Robot, locate soap_2037 by going into bedroom_327. Inside the room, find filing_cabinet_378. Open the filing cabinet, and you will find soap_2037 inside it.

The actions you have taken:
Action 1: Walk to dresser_377.
Action 2: look for basket_for_clothes_2040 around dresser_377.
Action 3: Walk to bathroom_counter_306.
Action 4: look for basket_for_clothes_2040 around bathroom_counter_306.
Action 5: Walk to toilet_302.
Action 6: Open toilet_302.
Action 7: look for basket_for_clothes_2040 around toilet_302.
Action 8: Walk to washing_machine_2041.
Action 9: Open washing_machine_2041.
Action 10: look for basket_for_clothes_2040 around washing_machine_2041.
Action 11: Walk to bed_376.
Action 12: look for basket_for_clothes_2040 around bed_376.
Action 13: Walk to bench_122.
Action 14: look for basket_for_clothes_2040 around bench_122.
Action 15: Walk to window_287.
Action 16: Open window_287.
Action 17: look for basket_for_clothes_2040 around window_287.
Action 18: Walk to basket_for_clothes_2040.
Action 19: Grab clothes_pants_2113.
Action 20: Walk to washing_machine_2041.
Action 21: Put clothes_pants_2113 into washing_machine_2041.
Action 22: Walk to clothes_shirt_2114.
Action 23: Grab clothes_shirt_2114.
Action 24: Walk to washing_machine_2041.
Action 25: Put clothes_shirt_2114 into washing_machine_2041.
Action 26: Walk to clothes_socks_2115.
Action 27: Grab clothes_socks_2115.
Action 28: Walk to washing_machine_2041.
Action 29: Put clothes_socks_2115 into washing_machine_2041.
Action 30: Walk to clothes_skirt_2116.
Action 31: Grab clothes_skirt_2116.
Action 32: Walk to washing_machine_2041.
Action 33: Put clothes_skirt_2116 into washing_machine_2041.
Action 34: Walk to bathroom_cabinet_305.
Action 35: Open bathroom_cabinet_305.
Action 36: look for soap_2037 around bathroom_cabinet_305.
Action 37: Walk to towel_rack_299.
Action 38: look for soap_2037 around towel_rack_299.
Action 39: Walk to wallshelf_301.
Action 40: look for soap_2037 around wallshelf_301.
Action 41: Walk to door_286.
Action 42: look for soap_2037 around door_286.
Action 43: Walk to towel_rack_298.

##############################
From agent.py
exp(soap_2037, towel_rack_298)
Fail to find soap_2037 around towel_rack_298. 
##############################
From agent.py-> find a plan in act()
walk_executor(filing_cabinet_378)exp(soap_2037, filing_cabinet_378)walk_executor(soap_2037)grab_executor(soap_2037)walk_executor(washing_machine_2041)putin_executor(soap_2037, washing_machine_2041)plugin_executor(washing_machine_2041)close_executor(washing_machine_2041)switchon_executor(washing_machine_2041)
##############################
From agent.py
walk_executor(filing_cabinet_378)
Find food_bread_2016. Find crayon_2020. Find needle_2024. Find check_2033. Find alcohol_2002. Find coffee_filter_2035. Find soap_2037. Find bills_2009. Robot is inside bedroom_327. Robot is close food_bread_2016. Robot is close crayon_2020. Robot is close needle_2024. Robot is close floor_335. Robot is close check_2033. Robot is close alcohol_2002. Robot is close coffee_filter_2035. Robot is close soap_2037. Robot is close bills_2009. Robot is close filing_cabinet_378. Robot is no longer inside bathroom_265.Robot is no longer close towel_rack_298.
##############################
From agent.py
exp(soap_2037, filing_cabinet_378)
Find soap_2037. 
##############################
From agent.py-> find a plan in act()
grab_executor(soap_2037)walk_executor(washing_machine_2041)putin_executor(soap_2037, washing_machine_2041)plugin_executor(washing_machine_2041)close_executor(washing_machine_2041)switchon_executor(washing_machine_2041)
##############################
From agent.py
grab_executor(soap_2037)
Robot is inside bedroom_327. Robot is close food_bread_2016. Robot is close crayon_2020. Robot is close needle_2024. Robot is close floor_335. Robot is close check_2033. Robot is close alcohol_2002. Robot is close coffee_filter_2035. Robot is close soap_2037. Robot is close bills_2009. Robot is close filing_cabinet_378. Grabbing soap_2037 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot is inside bathroom_265. Robot is close soap_2037. Robot is close clothes_pants_2113. Robot is close clothes_shirt_2114. Robot is close clothes_socks_2115. Robot is close clothes_skirt_2116. Robot is close washing_machine_2041. Robot is no longer inside bedroom_327.Robot is no longer close food_bread_2016.Robot is no longer close crayon_2020.Robot is no longer close needle_2024.Robot is no longer close floor_335.Robot is no longer close check_2033.Robot is no longer close alcohol_2002.Robot is no longer close coffee_filter_2035.Robot is no longer close bills_2009.Robot is no longer close filing_cabinet_378.
##############################
From agent.py
putin_executor(soap_2037, washing_machine_2041)
Robot is inside bathroom_265. Robot is close soap_2037. Robot is close clothes_pants_2113. Robot is close clothes_shirt_2114. Robot is close clothes_socks_2115. Robot is close clothes_skirt_2116. Robot is close washing_machine_2041. soap_2037 released by right hand. 
##############################
From agent.py
plugin_executor(washing_machine_2041)
Robot is inside bathroom_265. Robot is close soap_2037. Robot is close clothes_pants_2113. Robot is close clothes_shirt_2114. Robot is close clothes_socks_2115. Robot is close clothes_skirt_2116. Robot is close washing_machine_2041. 
##############################
From agent.py
close_executor(washing_machine_2041)
Robot is inside bathroom_265. Robot is close soap_2037. Robot is close clothes_pants_2113. Robot is close clothes_shirt_2114. Robot is close clothes_socks_2115. Robot is close clothes_skirt_2116. Robot is close washing_machine_2041. 
##############################
From agent.py
switchon_executor(washing_machine_2041)
Robot is inside bathroom_265. Robot is close soap_2037. Robot is close clothes_pants_2113. Robot is close clothes_shirt_2114. Robot is close clothes_socks_2115. Robot is close clothes_skirt_2116. Robot is close washing_machine_2041. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_towel_rack_300(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==300
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(detergent,towel_rack_instance)
        else:
            exp(detergent,towel_rack_instance)
    eff:
        unknown[detergent]=False
        close[detergent,towel_rack_instance]=True
        close[towel_rack_instance,detergent]=True
    

behavior find_cleaning_solution_2098_around_towel_rack_300(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==300
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(cleaning_solution,towel_rack_instance)
        else:
            exp(cleaning_solution,towel_rack_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,towel_rack_instance]=True
        close[towel_rack_instance,cleaning_solution]=True
    

behavior find_after_shave_2029_around_towel_rack_300(after_shave:item):
    goal: not unknown(after_shave)
    body:
        assert is_after_shave(after_shave)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==300
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(after_shave,towel_rack_instance)
        else:
            exp(after_shave,towel_rack_instance)
    eff:
        unknown[after_shave]=False
        close[after_shave,towel_rack_instance]=True
        close[towel_rack_instance,after_shave]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine)
        # Ensure the washing machine is plugged in
        achieve closed(washing_machine)
        # Ensure the washing machine is closed
        achieve is_on(washing_machine)
        # Start the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2041
        # Select the washing machine with ID 2041

        start_washing_machine(washing_machine)
        # Start the washing machine to wash the clothes

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_kitchen_counter_128(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(detergent,kitchen_counter_instance)
        else:
            exp(detergent,kitchen_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,kitchen_counter_instance]=True
        close[kitchen_counter_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        start_washing_machine(washing_machine)

#goal_representation_end

##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "4. start the washing machine." ?
Answer: Turn on the washing machine.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_towel_rack_300(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==300
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(detergent,towel_rack_instance)
        else:
            exp(detergent,towel_rack_instance)
    eff:
        unknown[detergent]=False
        close[detergent,towel_rack_instance]=True
        close[towel_rack_instance,detergent]=True
    

behavior find_cleaning_solution_2098_around_towel_rack_300(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==300
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(cleaning_solution,towel_rack_instance)
        else:
            exp(cleaning_solution,towel_rack_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,towel_rack_instance]=True
        close[towel_rack_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)
        # Start the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2041
        # Select the washing machine with ID 2041

        start_washing_machine(washing_machine)
        # Execute the behavior to turn on the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_bathtub_297(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathtub_instance:item where:
            is_bathtub(bathtub_instance) and id[bathtub_instance]==297
        achieve close_char(char,bathtub_instance)
        if can_open(bathtub_instance):
            achieve_once open(bathtub_instance)
            exp(detergent,bathtub_instance)
        else:
            exp(detergent,bathtub_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathtub_instance]=True
        close[bathtub_instance,detergent]=True
    

behavior find_cleaning_solution_2098_around_towel_rack_300(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==300
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(cleaning_solution,towel_rack_instance)
        else:
            exp(cleaning_solution,towel_rack_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,towel_rack_instance]=True
        close[towel_rack_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2041
        # Select the washing machine with ID 2041 to start

        start_washing_machine(washing_machine)
        # Execute starting the washing machine to wash the clothes

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_towel_rack_300(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==300
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(detergent,towel_rack_instance)
        else:
            exp(detergent,towel_rack_instance)
    eff:
        unknown[detergent]=False
        close[detergent,towel_rack_instance]=True
        close[towel_rack_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2041
        # Bind to the specific washing machine with ID 2041

        start_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_kitchen_counter_128(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(detergent,kitchen_counter_instance)
        else:
            exp(detergent,kitchen_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,kitchen_counter_instance]=True
        close[kitchen_counter_instance,detergent]=True
    

behavior find_cleaning_solution_2098_around_towel_rack_300(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==300
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(cleaning_solution,towel_rack_instance)
        else:
            exp(cleaning_solution,towel_rack_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,towel_rack_instance]=True
        close[towel_rack_instance,cleaning_solution]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2041
        # Select the washing machine with ID 2041

        start_washing_machine(washing_machine)
        # Start the washing machine
 
#goal_representation_end

##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "4. start the washing machine." ?
Answer: Turn on the washing machine.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_towel_rack_300(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==300
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(detergent,towel_rack_instance)
        else:
            exp(detergent,towel_rack_instance)
    eff:
        unknown[detergent]=False
        close[detergent,towel_rack_instance]=True
        close[towel_rack_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2041
        # Select the washing machine with ID 2041

        start_washing_machine(washing_machine)
        # Start the washing machine

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_kitchen_counter_128(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(detergent,kitchen_counter_instance)
        else:
            exp(detergent,kitchen_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,kitchen_counter_instance]=True
        close[kitchen_counter_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2041
        # Bind to the specific washing machine with ID 2041

        start_washing_machine(washing_machine)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_ironing_board_2099(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(detergent,ironing_board_instance)
        else:
            exp(detergent,ironing_board_instance)
    eff:
        unknown[detergent]=False
        close[detergent,ironing_board_instance]=True
        close[ironing_board_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine] == 2041
        # Bind to the specific washing machine with ID 2041

        start_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_sink_307(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(detergent,sink_instance)
        else:
            exp(detergent,sink_instance)
    eff:
        unknown[detergent]=False
        close[detergent,sink_instance]=True
        close[sink_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2041
        # Select the washing machine with ID 2041

        start_washing_machine(washing_machine)

#goal_representation_end

##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "4. start the washing machine." ?
Answer: Turn on the washing machine.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_toaster_144(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind toaster_instance:item where:
            is_toaster(toaster_instance) and id[toaster_instance]==144
        achieve close_char(char,toaster_instance)
        if can_open(toaster_instance):
            achieve_once open(toaster_instance)
            exp(detergent,toaster_instance)
        else:
            exp(detergent,toaster_instance)
    eff:
        unknown[detergent]=False
        close[detergent,toaster_instance]=True
        close[toaster_instance,detergent]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2041
        # Bind to the specific washing machine with ID 2041

        start_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_bathtub_297(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathtub_instance:item where:
            is_bathtub(bathtub_instance) and id[bathtub_instance]==297
        achieve close_char(char,bathtub_instance)
        if can_open(bathtub_instance):
            achieve_once open(bathtub_instance)
            exp(detergent,bathtub_instance)
        else:
            exp(detergent,bathtub_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathtub_instance]=True
        close[bathtub_instance,detergent]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve plugged(washing_machine) 
        # Ensure washing machine is plugged in
        achieve closed(washing_machine) 
        # Ensure washing machine is closed
        achieve is_on(washing_machine) 
        # Turn on the washing machine

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2041
        # Select the washing machine with ID 2041
        
        start_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_sink_307(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(detergent,sink_instance)
        else:
            exp(detergent,sink_instance)
    eff:
        unknown[detergent]=False
        close[detergent,sink_instance]=True
        close[sink_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)
        
behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2041
        # Select the washing machine with ID 2041
        
        start_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_fridge_140(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(detergent,fridge_instance)
        else:
            exp(detergent,fridge_instance)
    eff:
        unknown[detergent]=False
        close[detergent,fridge_instance]=True
        close[fridge_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2041
        # Bind to the specific washing machine with ID 2041

        start_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_faucet_308(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind faucet_instance:item where:
            is_faucet(faucet_instance) and id[faucet_instance]==308
        achieve close_char(char,faucet_instance)
        if can_open(faucet_instance):
            achieve_once open(faucet_instance)
            exp(detergent,faucet_instance)
        else:
            exp(detergent,faucet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,faucet_instance]=True
        close[faucet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)
        # Turn on the washing machine to start washing the clothes

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2041
        # Bind to the specific washing machine with ID 2041

        start_washing_machine(washing_machine)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2108_around_kitchen_counter_129(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(detergent,kitchen_counter_instance)
        else:
            exp(detergent,kitchen_counter_instance)
    eff:
        unknown[detergent]=False
        close[detergent,kitchen_counter_instance]=True
        close[kitchen_counter_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior start_washing_machine(washing_machine:item):
    body:
        achieve is_on(washing_machine)

behavior __goal__():
    body:
        bind washing_machine: item where:
            is_washing_machine(washing_machine) and id[washing_machine]==2041
        # Bind to the specific washing machine with ID 2041

        start_washing_machine(washing_machine)

#goal_representation_end

##############################
