From agent.py
Reset goals: The sub-goals are: 
['1. Locate the cat in the house.', '2. Gently touch the cat.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cat_2069_around_couch_198(cat:item):
    goal: not unknown(cat)
    body:
        assert is_cat(cat)
        bind couch_instance:item where:
            is_couch(couch_instance) and id[couch_instance]==198
        achieve close_char(char,couch_instance)
        if can_open(couch_instance):
            achieve_once open(couch_instance)
            exp(cat,couch_instance)
        else:
            exp(cat,couch_instance)
    eff:
        unknown[cat]=False
        close[cat,couch_instance]=True
        close[couch_instance,cat]=True
    

#exp_behavior_end

#goal_representation
 
behavior locate_cat(cat: item):
    body:
        achieve close_char(char, cat)
        # Move close to the cat to locate it

behavior __goal__():
    body:
        if exists cat: item : is_cat(cat):
            # Check if there is any known cat
            bind cat: item where:
                is_cat(cat)
            locate_cat(cat)
        else:
            # If no known cat, explore the area to locate one
            foreach cat: item:
                if is_cat(cat) and not visited(cat):
                    observe(cat, "Check if this is the cat you are looking for")

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior locate_cat(cat: item):
    body:
        achieve close_char(char, cat)
        # Move close to the cat to locate it

behavior __goal__():
    body:
        if exists cat: item : is_cat(cat):
            # Check if there is any known cat
            bind cat: item where:
                is_cat(cat)
            locate_cat(cat)
        else:
            # If no known cat, explore the area to locate one
            foreach cat: item:
                if is_cat(cat) and not visited(cat):
                    observe(cat, "Check if this is the cat you are looking for")

##############################
From agent.py-> find a plan in act()
walk_executor(couch_198)exp(cat_2069, couch_198)walk_executor(cat_2069)
##############################
From agent.py
walk_executor(couch_198)
Find clothes_jacket_2119. Find phone_2016. Find mat_203. Find chair_2003. Find rag_2052. Find instrument_guitar_2028. Robot is inside bedroom_162. Robot is close couch_198. Robot is no longer inside dining_room_41.
##############################
From agent.py
exp(cat_2069, couch_198)
Fail to find cat_2069 around couch_198. 
##############################
From agent.py-> find a plan in act()
walk_executor(couch_269)exp(cat_2069, couch_269)walk_executor(cat_2069)
##############################
From agent.py
walk_executor(couch_269)
Find brush_2002. Find drawing_288. Find pillow_287. Find shoes_2033. Find phone_2017. Find pillow_286. Robot is inside home_office_241. Robot is close couch_269. Robot is no longer inside bedroom_162.Robot is no longer close couch_198.
##############################
From agent.py
exp(cat_2069, couch_269)
Find cat_2069. 
##############################
From agent.py-> find a plan in act()
walk_executor(cat_2069)
##############################
From agent.py
walk_executor(cat_2069)
Robot is inside home_office_241. Robot is close dresser_274. Robot is close cat_2069. Robot is no longer close couch_269.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_toy_2056_around_table_114(toy:item):
    goal: not unknown(toy)
    body:
        assert is_toy(toy)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==114
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(toy,table_instance)
        else:
            exp(toy,table_instance)
    eff:
        unknown[toy]=False
        close[toy,table_instance]=True
        close[table_instance,toy]=True
    

#exp_behavior_end

#goal_representation
 
behavior touch_cat(cat:item):
    body:
        touch(cat)
        # Touch the cat

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat) and id[cat]==2069
        # Select the cat with ID 2069

        achieve close_char(char, cat)
        # Ensure the character is close to the cat

        touch_cat(cat)
        # Touch the cat

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior touch_cat(cat:item):
    body:
        touch(cat)
        # Touch the cat

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat) and id[cat]==2069
        # Select the cat with ID 2069

        achieve close_char(char, cat)
        # Ensure the character is close to the cat

        touch_cat(cat)
        # Touch the cat

##############################
From agent.py-> find a plan in act()
open_executor(dresser_274)touch_executor(cat_2069)
##############################
From agent.py
open_executor(dresser_274)
Robot is inside home_office_241. Robot is close dresser_274. Robot is close cat_2069. 
##############################
From agent.py
touch_executor(cat_2069)
Robot is inside home_office_241. Robot is close dresser_274. Robot is close cat_2069. 
##############################
