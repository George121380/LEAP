From agent.py
Reset goals: The sub-goals are: 
['1. Use the coffee maker to make a cup of coffee.', '2. Add milk and sugar to the coffee.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_food_2094_around_fridge_126(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_food,fridge_instance)
        else:
            exp(food_food,fridge_instance)
    eff:
        unknown[food_food]=False
        close[food_food,fridge_instance]=True
        close[fridge_instance,food_food]=True
    

behavior find_coffee_filter_2065_around_coffe_maker_130(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind coffe_maker_instance:item where:
            is_coffe_maker(coffe_maker_instance) and id[coffe_maker_instance]==130
        achieve close_char(char,coffe_maker_instance)
        if can_open(coffe_maker_instance):
            achieve_once open(coffe_maker_instance)
            exp(coffee_filter,coffe_maker_instance)
        else:
            exp(coffee_filter,coffe_maker_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,coffe_maker_instance]=True
        close[coffe_maker_instance,coffee_filter]=True
    

behavior find_cup_2133_around_kitchen_counter_119(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_coffee_maker(coffee_maker:item):
    body:
        achieve_once visited(coffee_maker)

behavior ensure_coffee_maker_ready(coffee_maker:item):
    body:
        achieve plugged(coffee_maker)
        achieve once is_on(coffee_maker)

behavior fill_coffee_filter_with_coffee(coffee_filter:item, coffee_granules:item):
    body:
        achieve_once inside(coffee_granules, coffee_filter)

behavior place_filter_in_coffee_maker(coffee_filter:item, coffee_maker:item):
    body:
        achieve_once inside(coffee_filter, coffee_maker)

behavior start_coffee_maker(coffee_maker:item, cup:item):
    body:
        achieve_once close_char(char, coffee_maker)
        achieve_once inside(cup, coffee_maker) # Assuming coffee dispenses directly into the cup

behavior __goal__():
    body:
        foreach coffee_maker: item:
            if is_coffe_maker(coffee_maker) and not visited(coffee_maker):
                find_coffee_maker(coffee_maker)

        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        
        ensure_coffee_maker_ready(coffee_maker)

        bind coffee_filter: item where:
            is_coffee_filter(coffee_filter)
        
        bind coffee_granules: item where:
            is_food_food(coffee_granules) # Assuming granules classified as a general food category

        fill_coffee_filter_with_coffee(coffee_filter, coffee_granules)
        place_filter_in_coffee_maker(coffee_filter, coffee_maker)

        bind cup: item where:
            is_cup(cup)
        
        start_coffee_maker(coffee_maker, cup)

#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'is_on') at line 5231, column 22.
Expected one of: 
	* SEMICOLON
	* _NEWLINE

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_food_2094_around_fridge_126(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_food,fridge_instance)
        else:
            exp(food_food,fridge_instance)
    eff:
        unknown[food_food]=False
        close[food_food,fridge_instance]=True
        close[fridge_instance,food_food]=True
    

behavior find_coffee_filter_2065_around_kitchen_counter_122(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(coffee_filter,kitchen_counter_instance)
        else:
            exp(coffee_filter,kitchen_counter_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,kitchen_counter_instance]=True
        close[kitchen_counter_instance,coffee_filter]=True
    

behavior find_cup_2132_around_kitchen_counter_122(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

#goal_representation
 
behavior find_coffee_maker(coffee_maker:item):
    body:
        achieve_once visited(coffee_maker)

behavior ensure_coffee_maker_ready(coffee_maker:item):
    body:
        achieve plugged(coffee_maker)
        achieve_once is_on(coffee_maker)

behavior fill_coffee_filter_with_coffee(coffee_filter:item, coffee_granules:item):
    body:
        achieve_once inside(coffee_granules, coffee_filter)

behavior place_filter_in_coffee_maker(coffee_filter:item, coffee_maker:item):
    body:
        achieve_once inside(coffee_filter, coffee_maker)

behavior start_coffee_maker(coffee_maker:item, cup:item):
    body:
        achieve_once close_char(char, coffee_maker)
        achieve_once inside(cup, coffee_maker) # Assuming coffee dispenses directly into the cup

behavior __goal__():
    body:
        foreach coffee_maker: item:
            if is_coffe_maker(coffee_maker) and not visited(coffee_maker):
                find_coffee_maker(coffee_maker)

        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        
        ensure_coffee_maker_ready(coffee_maker)

        bind coffee_filter: item where:
            is_coffee_filter(coffee_filter)
        
        bind coffee_granules: item where:
            is_food_food(coffee_granules) # Assuming granules classified as a general food category

        fill_coffee_filter_with_coffee(coffee_filter, coffee_granules)
        place_filter_in_coffee_maker(coffee_filter, coffee_maker)

        bind cup: item where:
            is_cup(cup)
        
        start_coffee_maker(coffee_maker, cup)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_coffee_filter_2065_around_kitchen_counter_122(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(coffee_filter,kitchen_counter_instance)
        else:
            exp(coffee_filter,kitchen_counter_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,kitchen_counter_instance]=True
        close[kitchen_counter_instance,coffee_filter]=True
    

behavior find_cup_2134_around_kitchen_counter_119(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior make_coffee_with_coffee_maker(coffee_maker:item, water:item):
    body:
        achieve_once inside(water, coffee_maker)
        achieve_once is_on(coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)

        bind water: item where:
            has_water(water)

        make_coffee_with_coffee_maker(coffee_maker, water)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
Goal representation from planning.py

#exp_behavior

behavior find_coffee_filter_2053_around_kitchen_counter_122(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(coffee_filter,kitchen_counter_instance)
        else:
            exp(coffee_filter,kitchen_counter_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,kitchen_counter_instance]=True
        close[kitchen_counter_instance,coffee_filter]=True
    

behavior find_cup_2134_around_kitchen_counter_122(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior ensure_coffee_maker_operational(coffee_maker:item):
    body:
        achieve plugged(coffee_maker)
        achieve is_on(coffee_maker)

behavior brew_coffee(coffee_maker:item, cup:item):
    body:
        achieve_once inside(cup, coffee_maker)

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)

        bind cup: item where:
            is_cup(cup)

        ensure_coffee_maker_operational(coffee_maker)
        brew_coffee(coffee_maker, cup)

#goal_representation_end

##############################
Error is:
'NoneType' object is not iterable
##############################
VH_pipeline: Fail to generate a valid plan
##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Make a cup of coffee using the coffee maker.', '2. Add milk and sugar to the coffee.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_coffee_filter_2053_around_kitchen_counter_122(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(coffee_filter,kitchen_counter_instance)
        else:
            exp(coffee_filter,kitchen_counter_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,kitchen_counter_instance]=True
        close[kitchen_counter_instance,coffee_filter]=True
    

behavior find_cup_2133_around_kitchen_counter_119(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

behavior find_milk_2115_around_fridge_126(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

#exp_behavior_end

#goal_representation

behavior make_coffee(coffee_maker:item, cup:item):
    body:
        achieve_once on(cup, coffee_maker)
        achieve is_on(coffee_maker)
        # Make coffee using the coffee maker

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)

        bind cup: item where:
            is_cup(cup)

        make_coffee(coffee_maker, cup)

#goal_representation_end

##############################
From agent.py->reset_goal

behavior make_coffee(coffee_maker:item, cup:item):
    body:
        achieve_once on(cup, coffee_maker)
        achieve is_on(coffee_maker)
        # Make coffee using the coffee maker

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)

        bind cup: item where:
            is_cup(cup)

        make_coffee(coffee_maker, cup)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(cup_2132, kitchen_counter_119)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_78, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(cup_2132, kitchen_counter_119)
Fail to find cup_2132 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(cup_2132, cupboard_117)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(cup_2132, cupboard_117)
Fail to find cup_2132 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(cup_2132, cupboard_118)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(cup_2132, cupboard_118)
Fail to find cup_2132 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(cup_2132, kitchen_counter_123)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Robot find: tray_2068, oil_2149, knife_2035, food_kiwi_2054, food_orange_2027, Robot is close to the kitchen_counter_123. 
##############################
From agent.py
exp(cup_2132, kitchen_counter_123)
Fail to find cup_2132 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(cup_2132, kitchen_counter_122)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, fryingpan_2154, Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(cup_2132, kitchen_counter_122)
Fail to find cup_2132 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)open_executor(coffe_maker_130)exp(cup_2132, coffe_maker_130)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot find: Robot is close to the kitchen_counter_122. Robot is close to the coffe_maker_130. 
##############################
From agent.py
open_executor(coffe_maker_130)
Robot find: coffee_filter_2065, Robot is close to the kitchen_counter_122. Robot is close to the coffee_filter_2065. Robot is close to the coffe_maker_130. coffe_maker_130 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2132 ?
Answer: Go to dining_room_41. In the room, look for table_114. The target item, cup_2132, is on top of table_114.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_41. In the room, look for table_114. The target item, cup_2132, is on top of table_114.

The actions you have taken:
Action 1: Walk to kitchen_counter_119.
Action 2: look for cup_2132 around kitchen_counter_119.
Action 3: Walk to cupboard_117.
Action 4: look for cup_2132 around cupboard_117.
Action 5: Walk to cupboard_118.
Action 6: Open cupboard_118.
Action 7: look for cup_2132 around cupboard_118.
Action 8: Walk to kitchen_counter_123.
Action 9: look for cup_2132 around kitchen_counter_123.
Action 10: Walk to kitchen_counter_122.
Action 11: look for cup_2132 around kitchen_counter_122.
Action 12: Walk to coffe_maker_130.
Action 13: Open coffe_maker_130.

##############################
From agent.py
exp(cup_2132, coffe_maker_130)
Fail to find cup_2132 around coffe_maker_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_129)open_executor(dishwasher_129)exp(cup_2132, dishwasher_129)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
walk_executor(dishwasher_129)
Robot find: Robot is close to the dishwasher_129. 
##############################
From agent.py
open_executor(dishwasher_129)
Robot find: detergent_2011, measuring_cup_2012, Robot is close to the dishwasher_129. Robot is close to the detergent_2011. Robot is close to the measuring_cup_2012. dishwasher_129 is opened. 
##############################
From agent.py
exp(cup_2132, dishwasher_129)
Fail to find cup_2132 around dishwasher_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(cup_2132, table_114)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
walk_executor(table_114)
Robot find: mat_102, cup_2049, pillow_103, pillow_104, pillow_105, pillow_106, lighter_2004, lighter_2039, box_2038, clothes_hat_2117, milk_2115, cup_2134, check_2058, drawing_110, drawing_111, clothes_gloves_2118, cup_2132, food_bread_2084, dry_pasta_2114, knife_2122, cup_2133, table_cloth_2005, food_food_2021, Robot is close to the table_114. Robot is close to the mat_102. 
##############################
From agent.py
exp(cup_2132, table_114)
Find cup_2132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
walk_executor(cup_2132)
Robot find: Robot is close to the table_114. Robot is close to the cup_2132. 
##############################
From agent.py
grab_executor(cup_2132)
Robot find: Robot is close to the table_114. Robot is close to the cup_2132. Grabbing cup_2132 by right hand. 
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot find: Robot is close to the cup_2132. Robot is close to the coffee_filter_2065. Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. 
##############################
From agent.py
put_executor(cup_2132, coffe_maker_130)
Robot find: Robot is close to the cup_2132. Robot is close to the coffee_filter_2065. Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. coffe_maker_130 is close cup_2132. cup_2132 is close coffe_maker_130. cup_2132 is on coffe_maker_130. cup_2132 released by right hand. 
##############################
From agent.py
close_executor(coffe_maker_130)
Robot find: Robot is close to the cup_2132. Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. coffe_maker_130 is closed. 
##############################
From agent.py
switchon_executor(coffe_maker_130)
Robot find: Robot is close to the cup_2132. Robot is close to the coffe_maker_130. Robot is close to the kitchen_counter_122. coffe_maker_130 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_sugar_2111_around_fridge_126(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_sugar,fridge_instance)
        else:
            exp(food_sugar,fridge_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,fridge_instance]=True
        close[fridge_instance,food_sugar]=True
    

#exp_behavior_end

#goal_representation

behavior add_milk_and_sugar_to_coffee(milk:item, sugar:item, coffee:item):
    body:
        achieve_once inside(milk, coffee)
        achieve_once inside(sugar, coffee)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        
        bind sugar: item where:
            is_food_sugar(sugar)
        
        bind cup: item where:
            is_cup(cup) and on(cup, coffe_maker_130)
        
        add_milk_and_sugar_to_coffee(milk, sugar, cup)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: coffe_maker_130; available variables: [Variable<cup: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_sugar_2111_around_fridge_126(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_sugar,fridge_instance)
        else:
            exp(food_sugar,fridge_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,fridge_instance]=True
        close[fridge_instance,food_sugar]=True
    

#goal_representation
 
behavior add_milk_and_sugar_to_coffee(milk:item, sugar:item, coffee:item):
    body:
        achieve_once inside(milk, coffee)
        achieve_once inside(sugar, coffee)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        
        bind sugar: item where:
            is_food_sugar(sugar)
        
        bind cup: item where:
            is_cup(cup) and on(cup, coffe_maker_130)
        
        bind coffe_maker_130: item where:
            is_coffe_maker(coffe_maker_130)
        
        add_milk_and_sugar_to_coffee(milk, sugar, cup)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: coffe_maker_130; available variables: [Variable<cup: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_sugar_2111_around_fridge_126(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_sugar,fridge_instance)
        else:
            exp(food_sugar,fridge_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,fridge_instance]=True
        close[fridge_instance,food_sugar]=True
    

#goal_representation

behavior add_milk_and_sugar_to_coffee(milk:item, sugar:item, coffee:item):
    body:
        achieve_once inside(milk, coffee)
        achieve_once inside(sugar, coffee)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        
        bind sugar: item where:
            is_food_sugar(sugar)
        
        bind cup: item where:
            is_cup(cup) and on(cup, coffe_maker_130)
        
        bind coffe_maker_130: item where:
            is_coffe_maker(coffe_maker_130)
        
        add_milk_and_sugar_to_coffee(milk, sugar, cup)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_sugar_2111_around_fridge_126(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_sugar,fridge_instance)
        else:
            exp(food_sugar,fridge_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,fridge_instance]=True
        close[fridge_instance,food_sugar]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_milk_and_sugar(milk:item, sugar:item):
    body:
        achieve_once visited(milk)
        achieve_once visited(sugar)

behavior add_milk_and_sugar_to_coffee(cup:item, milk:item, sugar:item):
    body:
        achieve_once inside(milk, cup)
        achieve_once inside(sugar, cup)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup]==2132

        bind milk: item where:
            is_milk(milk)

        bind sugar: item where:
            is_food_sugar(sugar)

        find_milk_and_sugar(milk, sugar)
        add_milk_and_sugar_to_coffee(cup, milk, sugar)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior find_milk_and_sugar(milk:item, sugar:item):
    body:
        achieve_once visited(milk)
        achieve_once visited(sugar)

behavior add_milk_and_sugar_to_coffee(cup:item, milk:item, sugar:item):
    body:
        achieve_once inside(milk, cup)
        achieve_once inside(sugar, cup)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup]==2132

        bind milk: item where:
            is_milk(milk)

        bind sugar: item where:
            is_food_sugar(sugar)

        find_milk_and_sugar(milk, sugar)
        add_milk_and_sugar_to_coffee(cup, milk, sugar)

##############################
From agent.py-> find a plan in act()
walk_executor(milk_2115)obs(milk_2115, look around this place)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_sugar_2111, fridge_126)walk_executor(food_sugar_2111)obs(food_sugar_2111, look around this place)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(milk_2115)
Robot find: Robot is close to the table_114. Robot is close to the milk_2115. 
##############################
From agent.py
obs(milk_2115, look around this place)
Get this information:  milk_2115 is close to table_114. milk_2115 is close to character_240. milk_2115 is on table_114. milk_2115 is inside dining_room_41.
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_sugar_2111, fridge_126)
Find food_sugar_2111. 
##############################
From agent.py-> find a plan in act()
obs(food_sugar_2111, look around this place)walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
obs(food_sugar_2111, look around this place)
Get this information:  food_sugar_2111 is inside dining_room_41. food_sugar_2111 is inside fridge_126. food_sugar_2111 is close to fridge_126. food_sugar_2111 is close to character_240. food_sugar_2111 is CLEAN.
##############################
From agent.py
walk_executor(milk_2115)
Robot find: Robot is close to the table_114. Robot is close to the milk_2115. 
##############################
From agent.py
grab_executor(milk_2115)
Robot find: Robot is close to the table_114. Robot is close to the milk_2115. Grabbing milk_2115 by right hand. 
##############################
From agent.py
walk_executor(cup_2132)
Robot find: Robot is close to the milk_2115. Robot is close to the coffe_maker_130. Robot is close to the cup_2132. 
##############################
From agent.py
putin_executor(milk_2115, cup_2132)
Robot find: Robot is close to the milk_2115. Robot is close to the coffe_maker_130. Robot is close to the cup_2132. milk_2115 is close cup_2132. cup_2132 is close milk_2115. milk_2115 is inside cup_2132. milk_2115 released by right hand. 
##############################
From agent.py
walk_executor(food_sugar_2111)
Robot find: Robot is close to the fridge_126. Robot is close to the food_sugar_2111. 
##############################
From agent.py
grab_executor(food_sugar_2111)
Robot find: Robot is close to the fridge_126. Robot is close to the food_sugar_2111. Grabbing food_sugar_2111 by right hand. 
##############################
From agent.py
walk_executor(cup_2132)
Robot find: Robot is close to the food_sugar_2111. Robot is close to the coffe_maker_130. Robot is close to the cup_2132. 
##############################
From agent.py
putin_executor(food_sugar_2111, cup_2132)
Robot find: Robot is close to the food_sugar_2111. Robot is close to the coffe_maker_130. Robot is close to the cup_2132. cup_2132 is close food_sugar_2111. food_sugar_2111 is inside cup_2132. food_sugar_2111 is close cup_2132. food_sugar_2111 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
make a cup of coffee using the coffee maker, then add milk and sugar.
Action History:
['walk_executor(kitchen_counter_119)', 'walk_executor(cupboard_117)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'walk_executor(kitchen_counter_123)', 'walk_executor(kitchen_counter_122)', 'walk_executor(coffe_maker_130)', 'open_executor(coffe_maker_130)', 'walk_executor(dishwasher_129)', 'open_executor(dishwasher_129)', 'walk_executor(table_114)', 'walk_executor(cup_2132)', 'grab_executor(cup_2132)', 'walk_executor(coffe_maker_130)', 'put_executor(cup_2132, coffe_maker_130)', 'close_executor(coffe_maker_130)', 'switchon_executor(coffe_maker_130)', 'walk_executor(milk_2115)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'walk_executor(milk_2115)', 'grab_executor(milk_2115)', 'walk_executor(cup_2132)', 'putin_executor(milk_2115, cup_2132)', 'walk_executor(food_sugar_2111)', 'grab_executor(food_sugar_2111)', 'walk_executor(cup_2132)', 'putin_executor(food_sugar_2111, cup_2132)']
Time info:
Time consume: 236 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 71
goal generate times: 6
goal correct times: 0
action_num: 29

Task complete rate:
Keystate: k1 - Requires: 16 steps
Action Completion Rate: No actions required
Scene_id: 1
##############################
