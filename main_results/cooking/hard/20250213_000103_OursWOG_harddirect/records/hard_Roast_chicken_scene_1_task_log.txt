From agent.py
Reset goals: The sub-goals are: 
['1. Clean the chicken and onion.', '2. Put the chicken and onion into the oven to roast.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2048_around_kitchen_counter_122(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_onion,kitchen_counter_instance)
        else:
            exp(food_onion,kitchen_counter_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_onion]=True
    

behavior find_food_chicken_2089_around_kitchen_counter_119(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_chicken,kitchen_counter_instance)
        else:
            exp(food_chicken,kitchen_counter_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_chicken]=True
    

#exp_behavior_end

#goal_representation
behavior find_chicken(chicken:item):
    body:
        achieve_once visited(chicken)

behavior clean_chicken(chicken:item):
    body:
        achieve clean(chicken)

behavior find_onion(onion:item):
    body:
        achieve_once visited(onion)

behavior clean_onion(onion:item):
    body:
        achieve clean(onion)

behavior __goal__():
    body:
        foreach chicken: item:
            if is_food_chicken(chicken) and (not visited(chicken) or dirty(chicken)):
                find_chicken(chicken)
                clean_chicken(chicken)

        foreach onion: item:
            if is_food_onion(onion) and (not visited(onion) or dirty(onion)):
                find_onion(onion)
                clean_onion(onion)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior find_chicken(chicken:item):
    body:
        achieve_once visited(chicken)

behavior clean_chicken(chicken:item):
    body:
        achieve clean(chicken)

behavior find_onion(onion:item):
    body:
        achieve_once visited(onion)

behavior clean_onion(onion:item):
    body:
        achieve clean(onion)

behavior __goal__():
    body:
        foreach chicken: item:
            if is_food_chicken(chicken) and (not visited(chicken) or dirty(chicken)):
                find_chicken(chicken)
                clean_chicken(chicken)

        foreach onion: item:
            if is_food_onion(onion) and (not visited(onion) or dirty(onion)):
                find_onion(onion)
                clean_onion(onion)
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(food_chicken_2089, kitchen_counter_119)walk_executor(food_chicken_2089)obs(food_chicken_2089, look around this place)grab_executor(food_chicken_2089)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_chicken_2089)switchoff_executor(faucet_20)walk_executor(kitchen_counter_122)exp(food_onion_2104, kitchen_counter_122)walk_executor(food_onion_2104)obs(food_onion_2104, look around this place)grab_executor(food_onion_2104)walk_executor(kitchen_counter_119)put_executor(food_chicken_2089, kitchen_counter_119)switchon_executor(faucet_121)wash_executor(food_onion_2104)switchoff_executor(faucet_121)walk_executor(kitchen_counter_122)exp(food_onion_2009, kitchen_counter_122)walk_executor(food_onion_2009)obs(food_onion_2009, look around this place)grab_executor(food_onion_2009)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_onion_2009)switchoff_executor(faucet_20)walk_executor(kitchen_counter_122)exp(food_onion_2048, kitchen_counter_122)walk_executor(food_onion_2048)obs(food_onion_2048, look around this place)grab_executor(food_onion_2048)walk_executor(kitchen_counter_119)put_executor(food_onion_2104, kitchen_counter_119)switchon_executor(faucet_121)wash_executor(food_onion_2048)switchoff_executor(faucet_121)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_78, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(food_chicken_2089, kitchen_counter_119)
Fail to find food_chicken_2089 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_chicken_2089, fridge_126)walk_executor(food_chicken_2089)obs(food_chicken_2089, look around this place)grab_executor(food_chicken_2089)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_chicken_2089)switchoff_executor(faucet_20)walk_executor(fridge_126)exp(food_onion_2104, fridge_126)walk_executor(food_onion_2104)obs(food_onion_2104, look around this place)grab_executor(food_onion_2104)walk_executor(kitchen_counter_119)put_executor(food_chicken_2089, kitchen_counter_119)switchon_executor(faucet_121)wash_executor(food_onion_2104)switchoff_executor(faucet_121)walk_executor(fridge_126)exp(food_onion_2009, fridge_126)walk_executor(food_onion_2009)obs(food_onion_2009, look around this place)grab_executor(food_onion_2009)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_onion_2009)switchoff_executor(faucet_20)walk_executor(fridge_126)exp(food_onion_2048, fridge_126)walk_executor(food_onion_2048)obs(food_onion_2048, look around this place)grab_executor(food_onion_2048)walk_executor(kitchen_counter_119)put_executor(food_onion_2104, kitchen_counter_119)switchon_executor(faucet_121)wash_executor(food_onion_2048)switchoff_executor(faucet_121)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_chicken_2089, fridge_126)
Find food_chicken_2089. 
##############################
From agent.py-> find a plan in act()
obs(food_chicken_2089, look around this place)obs(food_onion_2104, look around this place)exp(food_onion_2009, fridge_126)walk_executor(food_onion_2009)obs(food_onion_2009, look around this place)grab_executor(food_onion_2009)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_onion_2009)switchoff_executor(faucet_20)walk_executor(food_onion_2048)obs(food_onion_2048, look around this place)
##############################
From agent.py
obs(food_chicken_2089, look around this place)
Get this information:  food_chicken_2089 is inside dining_room_41. food_chicken_2089 is inside fridge_126. food_chicken_2089 is close to fridge_126. food_chicken_2089 is close to character_240. food_chicken_2089 is CLEAN.
##############################
From agent.py
obs(food_onion_2104, look around this place)
Get this information:  food_onion_2104 is close to fridge_126. food_onion_2104 is close to character_240. food_onion_2104 is inside dining_room_41. food_onion_2104 is inside fridge_126. food_onion_2104 is CLEAN.
##############################
From agent.py
exp(food_onion_2009, fridge_126)
Fail to find food_onion_2009 around fridge_126. 
##############################
From agent.py-> find a plan in act()
walk_executor(curtain_290)exp(food_onion_2009, curtain_290)walk_executor(food_onion_2009)obs(food_onion_2009, look around this place)grab_executor(food_onion_2009)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_onion_2009)switchoff_executor(faucet_20)walk_executor(food_onion_2048)obs(food_onion_2048, look around this place)
##############################
From agent.py
walk_executor(curtain_290)
Robot find: pillow_287, Robot is close to the curtain_289. Robot is close to the curtain_290. 
##############################
From agent.py
exp(food_onion_2009, curtain_290)
Fail to find food_onion_2009 around curtain_290. 
##############################
From agent.py-> find a plan in act()
walk_executor(oven_127)open_executor(oven_127)exp(food_onion_2009, oven_127)walk_executor(food_onion_2009)obs(food_onion_2009, look around this place)grab_executor(food_onion_2009)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_onion_2009)switchoff_executor(faucet_20)walk_executor(food_onion_2048)obs(food_onion_2048, look around this place)
##############################
From agent.py
walk_executor(oven_127)
Robot find: food_food_2064, Robot is close to the oven_127. 
##############################
From agent.py
open_executor(oven_127)
Robot find: tray_128, food_cheese_2072, oil_2013, food_carrot_2015, Robot is close to the tray_128. Robot is close to the food_cheese_2072. Robot is close to the oven_127. Robot is close to the oil_2013. Robot is close to the food_carrot_2015. oven_127 is opened. 
##############################
From agent.py
exp(food_onion_2009, oven_127)
Fail to find food_onion_2009 around oven_127. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Clean the chicken and onion.', '2. Put the chicken and onion into the oven to roast.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2104_around_kitchen_counter_122(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==122
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_onion,kitchen_counter_instance)
        else:
            exp(food_onion,kitchen_counter_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_onion]=True
    

behavior find_knife_2035_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
behavior find_chicken(chicken:item):
    body:
        achieve_once visited(chicken)

behavior clean_chicken(chicken:item):
    body:
        achieve clean(chicken)

behavior find_onion(onion:item):
    body:
        achieve_once visited(onion)

behavior clean_onion(onion:item):
    body:
        achieve clean(onion)

behavior __goal__():
    body:
        foreach chicken: item:
            if is_food_chicken(chicken) and (not visited(chicken) or dirty(chicken)):
                find_chicken(chicken)
                clean_chicken(chicken)

        foreach onion: item:
            if is_food_onion(onion) and (not visited(onion) or dirty(onion)):
                find_onion(onion)
                clean_onion(onion)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior find_chicken(chicken:item):
    body:
        achieve_once visited(chicken)

behavior clean_chicken(chicken:item):
    body:
        achieve clean(chicken)

behavior find_onion(onion:item):
    body:
        achieve_once visited(onion)

behavior clean_onion(onion:item):
    body:
        achieve clean(onion)

behavior __goal__():
    body:
        foreach chicken: item:
            if is_food_chicken(chicken) and (not visited(chicken) or dirty(chicken)):
                find_chicken(chicken)
                clean_chicken(chicken)

        foreach onion: item:
            if is_food_onion(onion) and (not visited(onion) or dirty(onion)):
                find_onion(onion)
                clean_onion(onion)
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(food_onion_2009, kitchen_counter_122)walk_executor(food_onion_2009)obs(food_onion_2009, look around this place)grab_executor(food_onion_2009)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_onion_2009)switchoff_executor(faucet_20)walk_executor(food_onion_2048)obs(food_onion_2048, look around this place)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, fryingpan_2154, Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(food_onion_2009, kitchen_counter_122)
Fail to find food_onion_2009 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(food_onion_2009, cupboard_117)walk_executor(food_onion_2009)obs(food_onion_2009, look around this place)grab_executor(food_onion_2009)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_onion_2009)switchoff_executor(faucet_20)walk_executor(food_onion_2048)obs(food_onion_2048, look around this place)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find food_onion_2009 ?
Answer: Locate the dining room labeled dining_room_41. Inside this room, find the trashcan labeled trashcan_99. The item food_onion_2009 is inside this trashcan.
Re-decompose: None

##############################
From agent.py
Human Instruction: Locate the dining room labeled dining_room_41. Inside this room, find the trashcan labeled trashcan_99. The item food_onion_2009 is inside this trashcan.

The actions you have taken:
Action 1: Walk to kitchen_counter_119.
Action 2: look for food_chicken_2089 around kitchen_counter_119.
Action 3: Walk to fridge_126.
Action 4: Switch off fridge_126.
Action 5: Open fridge_126.
Action 6: look for food_chicken_2089 around fridge_126.
Action 7: Observe around food_chicken_2089 with the question of look around this place.
Action 8: Observe around food_onion_2104 with the question of look around this place.
Action 9: look for food_onion_2009 around fridge_126.
Action 10: Walk to curtain_290.
Action 11: look for food_onion_2009 around curtain_290.
Action 12: Walk to oven_127.
Action 13: Open oven_127.
Action 14: look for food_onion_2009 around oven_127.
Action 15: Walk to kitchen_counter_122.
Action 16: look for food_onion_2009 around kitchen_counter_122.
Action 17: Walk to cupboard_117.

##############################
From agent.py
exp(food_onion_2009, cupboard_117)
Fail to find food_onion_2009 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(fork_2150)exp(food_onion_2009, fork_2150)walk_executor(food_onion_2009)obs(food_onion_2009, look around this place)grab_executor(food_onion_2009)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_onion_2009)switchoff_executor(faucet_20)walk_executor(food_onion_2048)obs(food_onion_2048, look around this place)
##############################
From agent.py
walk_executor(fork_2150)
Robot find: Robot is close to the fork_2150. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
exp(food_onion_2009, fork_2150)
Fail to find food_onion_2009 around fork_2150. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Clean the chicken and onion.', '2. Place the chicken and onion in the oven to roast.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2048_around_trashcan_99(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind trashcan_instance:item where:
            is_trashcan(trashcan_instance) and id[trashcan_instance]==99
        achieve close_char(char,trashcan_instance)
        if can_open(trashcan_instance):
            achieve_once open(trashcan_instance)
            exp(food_onion,trashcan_instance)
        else:
            exp(food_onion,trashcan_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,trashcan_instance]=True
        close[trashcan_instance,food_onion]=True
    

behavior find_knife_2122_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_chicken(chicken:item):
    body:
        achieve_once visited(chicken)

behavior clean_chicken(chicken:item):
    body:
        achieve clean(chicken)

behavior find_onion(onion:item):
    body:
        achieve_once visited(onion)

behavior clean_onion(onion:item):
    body:
        achieve clean(onion)

behavior __goal__():
    body:
        foreach chicken: item:
            if is_food_chicken(chicken) and (not visited(chicken) or dirty(chicken)):
                find_chicken(chicken)
                clean_chicken(chicken)

        foreach onion: item:
            if is_food_onion(onion) and (not visited(onion) or dirty(onion)):
                find_onion(onion)
                clean_onion(onion)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_chicken(chicken:item):
    body:
        achieve_once visited(chicken)

behavior clean_chicken(chicken:item):
    body:
        achieve clean(chicken)

behavior find_onion(onion:item):
    body:
        achieve_once visited(onion)

behavior clean_onion(onion:item):
    body:
        achieve clean(onion)

behavior __goal__():
    body:
        foreach chicken: item:
            if is_food_chicken(chicken) and (not visited(chicken) or dirty(chicken)):
                find_chicken(chicken)
                clean_chicken(chicken)

        foreach onion: item:
            if is_food_onion(onion) and (not visited(onion) or dirty(onion)):
                find_onion(onion)
                clean_onion(onion)

##############################
From agent.py-> find a plan in act()
walk_executor(trashcan_99)exp(food_onion_2009, trashcan_99)walk_executor(food_onion_2009)obs(food_onion_2009, look around this place)grab_executor(food_onion_2009)walk_executor(faucet_20)switchon_executor(faucet_20)wash_executor(food_onion_2009)switchoff_executor(faucet_20)walk_executor(food_onion_2048)obs(food_onion_2048, look around this place)
##############################
From agent.py
walk_executor(trashcan_99)
Robot find: food_orange_2061, food_onion_2009, glue_2045, vacuum_cleaner_2139, Robot is close to the trashcan_99. Robot is close to the food_orange_2061. Robot is close to the food_onion_2009. Robot is close to the glue_2045. 
##############################
From agent.py
exp(food_onion_2009, trashcan_99)
Find food_onion_2009. 
##############################
From agent.py-> find a plan in act()
obs(food_onion_2009, look around this place)walk_executor(food_onion_2048)obs(food_onion_2048, look around this place)
##############################
From agent.py
obs(food_onion_2009, look around this place)
Get this information:  food_onion_2009 is close to trashcan_99. food_onion_2009 is close to character_240. food_onion_2009 is inside dining_room_41. food_onion_2009 is inside trashcan_99. food_onion_2009 is CLEAN.
##############################
From agent.py
walk_executor(food_onion_2048)
Robot find: Robot is close to the food_onion_2048. Robot is close to the fridge_126. 
##############################
From agent.py
obs(food_onion_2048, look around this place)
Get this information:  food_onion_2048 is inside dining_room_41. food_onion_2048 is inside fridge_126. food_onion_2048 is close to fridge_126. food_onion_2048 is close to character_240. food_onion_2048 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_78_around_pot_78(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==78
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(pot,pot_instance)
        else:
            exp(pot,pot_instance)
    eff:
        unknown[pot]=False
        close[pot,pot_instance]=True
        close[pot_instance,pot]=True
    

behavior find_oil_2013_around_toaster_132(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind toaster_instance:item where:
            is_toaster(toaster_instance) and id[toaster_instance]==132
        achieve close_char(char,toaster_instance)
        if can_open(toaster_instance):
            achieve_once open(toaster_instance)
            exp(oil,toaster_instance)
        else:
            exp(oil,toaster_instance)
    eff:
        unknown[oil]=False
        close[oil,toaster_instance]=True
        close[toaster_instance,oil]=True
    

#exp_behavior_end

#goal_representation
behavior place_chicken_in_oven(chicken:item, oven:item):
    body:
        achieve_once inside(chicken, oven)

behavior place_onion_in_oven(onion:item, oven:item):
    body:
        achieve_once inside(onion, oven)

behavior ensure_oven_heating(oven:item):
    body:
        achieve is_on(oven)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind onion: item where:
            is_food_onion(onion)

        bind oven: item where:
            is_oven(oven)

        place_chicken_in_oven(chicken, oven)
        place_onion_in_oven(onion, oven)
        ensure_oven_heating(oven)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior place_chicken_in_oven(chicken:item, oven:item):
    body:
        achieve_once inside(chicken, oven)

behavior place_onion_in_oven(onion:item, oven:item):
    body:
        achieve_once inside(onion, oven)

behavior ensure_oven_heating(oven:item):
    body:
        achieve is_on(oven)

behavior __goal__():
    body:
        bind chicken: item where:
            is_food_chicken(chicken)

        bind onion: item where:
            is_food_onion(onion)

        bind oven: item where:
            is_oven(oven)

        place_chicken_in_oven(chicken, oven)
        place_onion_in_oven(onion, oven)
        ensure_oven_heating(oven)
##############################
From agent.py-> find a plan in act()
walk_executor(food_chicken_2089)grab_executor(food_chicken_2089)walk_executor(oven_127)putin_executor(food_chicken_2089, oven_127)walk_executor(food_onion_2104)grab_executor(food_onion_2104)walk_executor(oven_127)putin_executor(food_onion_2104, oven_127)close_executor(oven_127)switchon_executor(oven_127)
##############################
From agent.py
walk_executor(food_chicken_2089)
Robot find: Robot is close to the fridge_126. Robot is close to the food_chicken_2089. 
##############################
From agent.py
grab_executor(food_chicken_2089)
Robot find: Robot is close to the fridge_126. Robot is close to the food_chicken_2089. Grabbing food_chicken_2089 by right hand. 
##############################
From agent.py
walk_executor(oven_127)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the tray_128. Robot is close to the food_cheese_2072. Robot is close to the oven_127. Robot is close to the oil_2013. Robot is close to the food_carrot_2015. 
##############################
From agent.py
putin_executor(food_chicken_2089, oven_127)
Robot find: Robot is close to the food_chicken_2089. Robot is close to the tray_128. Robot is close to the food_cheese_2072. Robot is close to the oven_127. Robot is close to the oil_2013. Robot is close to the food_carrot_2015. oven_127 is close food_chicken_2089. food_chicken_2089 is inside oven_127. food_chicken_2089 is close oven_127. food_chicken_2089 released by right hand. 
##############################
From agent.py
walk_executor(food_onion_2104)
Robot find: Robot is close to the food_onion_2104. Robot is close to the fridge_126. 
##############################
From agent.py
grab_executor(food_onion_2104)
Robot find: Robot is close to the food_onion_2104. Robot is close to the fridge_126. Grabbing food_onion_2104 by right hand. 
##############################
From agent.py
walk_executor(oven_127)
Robot find: Robot is close to the food_onion_2104. Robot is close to the tray_128. Robot is close to the food_chicken_2089. Robot is close to the food_cheese_2072. Robot is close to the oven_127. Robot is close to the oil_2013. Robot is close to the food_carrot_2015. 
##############################
From agent.py
putin_executor(food_onion_2104, oven_127)
Robot find: Robot is close to the food_onion_2104. Robot is close to the tray_128. Robot is close to the food_chicken_2089. Robot is close to the food_cheese_2072. Robot is close to the oven_127. Robot is close to the oil_2013. Robot is close to the food_carrot_2015. food_onion_2104 is close oven_127. oven_127 is close food_onion_2104. food_onion_2104 is inside oven_127. food_onion_2104 released by right hand. 
##############################
From agent.py
close_executor(oven_127)
Robot find: Robot is close to the oven_127. oven_127 is closed. 
##############################
From agent.py
switchon_executor(oven_127)
Robot find: Robot is close to the oven_127. oven_127 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Roast chicken with onion in the oven.
Action History:
['walk_executor(kitchen_counter_119)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'walk_executor(curtain_290)', 'walk_executor(oven_127)', 'open_executor(oven_127)', 'walk_executor(kitchen_counter_122)', 'walk_executor(cupboard_117)', 'walk_executor(fork_2150)', 'walk_executor(trashcan_99)', 'walk_executor(food_onion_2048)', 'walk_executor(food_chicken_2089)', 'grab_executor(food_chicken_2089)', 'walk_executor(oven_127)', 'putin_executor(food_chicken_2089, oven_127)', 'walk_executor(food_onion_2104)', 'grab_executor(food_onion_2104)', 'walk_executor(oven_127)', 'putin_executor(food_onion_2104, oven_127)', 'close_executor(oven_127)', 'switchon_executor(oven_127)']
Time info:
Time consume: 279 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 82
goal generate times: 4
goal correct times: 0
action_num: 22

Task complete rate:
1
Scene_id: 1
##############################
