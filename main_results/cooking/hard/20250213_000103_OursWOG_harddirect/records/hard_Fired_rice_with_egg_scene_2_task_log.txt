From agent.py
Reset goals: The sub-goals are: 
['1. Find and prepare the ingredients for fried rice with egg, including rice and eggs.', '2. Cook the rice and scramble the eggs.', '3. Combine the cooked rice with the scrambled eggs and fry together.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_rice_2067_around_cupboard_130(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_rice,cupboard_instance)
        else:
            exp(food_rice,cupboard_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,cupboard_instance]=True
        close[cupboard_instance,food_rice]=True
    

behavior find_food_egg_2053_around_cupboard_130(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_egg,cupboard_instance)
        else:
            exp(food_egg,cupboard_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,cupboard_instance]=True
        close[cupboard_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_prepare_ingredients(rice:item, egg:item):
    body:
        achieve_once visited(rice)
        # Visit the rice to locate it
        achieve clean(rice)
        # Clean the rice
        achieve_once visited(egg)
        # Visit the egg to locate it
        achieve clean(egg)
        # Clean the egg

behavior __goal__():
    body:
        foreach rice: item:
            if is_food_rice(rice) and not visited(rice):
                # Check if the rice item has not been visited
                bind egg: item where:
                    is_food_egg(egg) and not visited(egg)
                # Bind an egg that has not been visited
                find_and_prepare_ingredients(rice, egg)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_and_prepare_ingredients(rice:item, egg:item):
    body:
        achieve_once visited(rice)
        # Visit the rice to locate it
        achieve clean(rice)
        # Clean the rice
        achieve_once visited(egg)
        # Visit the egg to locate it
        achieve clean(egg)
        # Clean the egg

behavior __goal__():
    body:
        foreach rice: item:
            if is_food_rice(rice) and not visited(rice):
                # Check if the rice item has not been visited
                bind egg: item where:
                    is_food_egg(egg) and not visited(egg)
                # Bind an egg that has not been visited
                find_and_prepare_ingredients(rice, egg)

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(food_rice_2067, cupboard_130)walk_executor(food_rice_2067)obs(food_rice_2067, look around this place)grab_executor(food_rice_2067)wash_executor(food_rice_2067)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(cupboard_130)exp(food_egg_2053, cupboard_130)walk_executor(food_egg_2053)obs(food_egg_2053, look around this place)grab_executor(food_egg_2053)wash_executor(food_egg_2053)walk_executor(kitchen_counter_132)put_executor(food_rice_2067, kitchen_counter_132)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, pot_54, Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(food_rice_2067, cupboard_130)
Fail to find food_rice_2067 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_129)exp(food_rice_2067, kitchen_counter_129)walk_executor(food_rice_2067)obs(food_rice_2067, look around this place)grab_executor(food_rice_2067)wash_executor(food_rice_2067)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)obs(food_egg_2053, look around this place)grab_executor(food_egg_2053)wash_executor(food_egg_2053)walk_executor(kitchen_counter_132)put_executor(food_rice_2067, kitchen_counter_132)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(kitchen_counter_129)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the kitchen_counter_129. 
##############################
From agent.py
exp(food_rice_2067, kitchen_counter_129)
Fail to find food_rice_2067 around kitchen_counter_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(food_rice_2067, kitchen_counter_132)walk_executor(food_rice_2067)obs(food_rice_2067, look around this place)grab_executor(food_rice_2067)wash_executor(food_rice_2067)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)obs(food_egg_2053, look around this place)grab_executor(food_egg_2053)wash_executor(food_egg_2053)walk_executor(kitchen_counter_132)put_executor(food_rice_2067, kitchen_counter_132)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the kitchen_counter_132. 
##############################
From agent.py
exp(food_rice_2067, kitchen_counter_132)
Fail to find food_rice_2067 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(stove_2090)open_executor(stove_2090)exp(food_rice_2067, stove_2090)walk_executor(food_rice_2067)obs(food_rice_2067, look around this place)grab_executor(food_rice_2067)wash_executor(food_rice_2067)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)obs(food_egg_2053, look around this place)grab_executor(food_egg_2053)wash_executor(food_egg_2053)walk_executor(kitchen_counter_132)put_executor(food_rice_2067, kitchen_counter_132)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
open_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is opened. 
##############################
From agent.py
exp(food_rice_2067, stove_2090)
Fail to find food_rice_2067 around stove_2090. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(food_rice_2067, kitchen_counter_128)walk_executor(food_rice_2067)obs(food_rice_2067, look around this place)grab_executor(food_rice_2067)wash_executor(food_rice_2067)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)obs(food_egg_2053, look around this place)grab_executor(food_egg_2053)wash_executor(food_egg_2053)walk_executor(kitchen_counter_132)put_executor(food_rice_2067, kitchen_counter_132)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the kitchen_counter_128. 
##############################
From agent.py
exp(food_rice_2067, kitchen_counter_128)
Fail to find food_rice_2067 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_rice_2067, fridge_140)walk_executor(food_rice_2067)obs(food_rice_2067, look around this place)grab_executor(food_rice_2067)wash_executor(food_rice_2067)walk_executor(faucet_308)switchoff_executor(faucet_308)walk_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)obs(food_egg_2053, look around this place)grab_executor(food_egg_2053)wash_executor(food_egg_2053)walk_executor(kitchen_counter_132)put_executor(food_rice_2067, kitchen_counter_132)switchoff_executor(faucet_134)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_rice_2067, fridge_140)
Find food_rice_2067. 
##############################
From agent.py-> find a plan in act()
obs(food_rice_2067, look around this place)obs(food_egg_2053, look around this place)
##############################
From agent.py
obs(food_rice_2067, look around this place)
Get this information:  food_rice_2067 is inside dining_room_1. food_rice_2067 is inside fridge_140. food_rice_2067 is close to fridge_140. food_rice_2067 is close to character_219. food_rice_2067 is CLEAN.
##############################
From agent.py
obs(food_egg_2053, look around this place)
Get this information:  food_egg_2053 is close to fridge_140. food_egg_2053 is close to character_219. food_egg_2053 is inside dining_room_1. food_egg_2053 is inside fridge_140. food_egg_2053 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2102_around_oil_2102(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind oil_instance:item where:
            is_oil(oil_instance) and id[oil_instance]==2102
        achieve close_char(char,oil_instance)
        if can_open(oil_instance):
            achieve_once open(oil_instance)
            exp(oil,oil_instance)
        else:
            exp(oil,oil_instance)
    eff:
        unknown[oil]=False
        close[oil,oil_instance]=True
        close[oil_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_rice_in_pot(rice:item, pot:item):
    body:
        achieve_once inside(rice, pot)

behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior scramble_eggs_in_pan(egg:item, fryingpan:item):
    body:
        achieve_once inside(egg, fryingpan)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)

        bind egg: item where:
            is_food_egg(egg)

        bind pot: item where:
            is_pot(pot)

        bind pan: item where:
            is_fryingpan(pan)

        bind stove: item where:
            is_stove(stove)

        bind oil: item where:
            is_oil(oil)

        place_rice_in_pot(rice, pot)
        fill_pot_with_water(pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

        place_pan_on_stove(pan, stove)
        add_oil_to_pan(oil, pan)
        scramble_eggs_in_pan(egg, pan)


#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

'Function place_pan_on_stove not found. Note that recursive function calls are not supported in the current version.'
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_oil_2005_around_fryingpan_2107(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind fryingpan_instance:item where:
            is_fryingpan(fryingpan_instance) and id[fryingpan_instance]==2107
        achieve close_char(char,fryingpan_instance)
        if can_open(fryingpan_instance):
            achieve_once open(fryingpan_instance)
            exp(oil,fryingpan_instance)
        else:
            exp(oil,fryingpan_instance)
    eff:
        unknown[oil]=False
        close[oil,fryingpan_instance]=True
        close[fryingpan_instance,oil]=True
    

#goal_representation

behavior place_rice_in_pot(rice:item, pot:item):
    body:
        achieve_once inside(rice, pot)

behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior add_oil_to_pan(oil:item, pan:item):
    body:
        achieve_once inside(oil, pan)

behavior scramble_eggs_in_pan(egg:item, fryingpan:item):
    body:
        achieve_once inside(egg, fryingpan)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)

        bind egg: item where:
            is_food_egg(egg)

        bind pot: item where:
            is_pot(pot)

        bind pan: item where:
            is_fryingpan(pan)

        bind stove: item where:
            is_stove(stove)

        bind oil: item where:
            is_oil(oil)

        place_rice_in_pot(rice, pot)
        fill_pot_with_water(pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

        achieve_once on(pan, stove)
        add_oil_to_pan(oil, pan)
        scramble_eggs_in_pan(egg, pan)

#goal_representation_end

##############################
From agent.py->reset_sub_goal

behavior place_rice_in_pot(rice:item, pot:item):
    body:
        achieve_once inside(rice, pot)

behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior add_oil_to_pan(oil:item, pan:item):
    body:
        achieve_once inside(oil, pan)

behavior scramble_eggs_in_pan(egg:item, fryingpan:item):
    body:
        achieve_once inside(egg, fryingpan)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)

        bind egg: item where:
            is_food_egg(egg)

        bind pot: item where:
            is_pot(pot)

        bind pan: item where:
            is_fryingpan(pan)

        bind stove: item where:
            is_stove(stove)

        bind oil: item where:
            is_oil(oil)

        place_rice_in_pot(rice, pot)
        fill_pot_with_water(pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

        achieve_once on(pan, stove)
        add_oil_to_pan(oil, pan)
        scramble_eggs_in_pan(egg, pan)

##############################
From agent.py-> find a plan in act()
walk_executor(pot_2093)open_executor(pot_2093)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(pot_2093)putin_executor(food_rice_2067, pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)switchon_executor(stove_2090)walk_executor(fryingpan_2107)grab_executor(fryingpan_2107)walk_executor(stove_2090)put_executor(fryingpan_2107, stove_2090)walk_executor(oil_2102)grab_executor(oil_2102)walk_executor(fryingpan_2107)putin_executor(oil_2102, fryingpan_2107)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(pot_2093)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the pot_2093. 
##############################
From agent.py
open_executor(pot_2093)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the pot_2093. pot_2093 is opened. 
##############################
From agent.py
walk_executor(food_rice_2067)
Robot find: Robot is close to the food_rice_2067. Robot is close to the fridge_140. 
##############################
From agent.py
grab_executor(food_rice_2067)
Robot find: Robot is close to the food_rice_2067. Robot is close to the fridge_140. Grabbing food_rice_2067 by right hand. 
##############################
From agent.py
walk_executor(pot_2093)
Robot find: Robot is close to the food_rice_2067. Robot is close to the kitchen_counter_129. Robot is close to the pot_2093. 
##############################
From agent.py
putin_executor(food_rice_2067, pot_2093)
Robot find: Robot is close to the food_rice_2067. Robot is close to the kitchen_counter_129. Robot is close to the pot_2093. food_rice_2067 is inside pot_2093. food_rice_2067 is close pot_2093. pot_2093 is close food_rice_2067. food_rice_2067 released by right hand. 
##############################
From agent.py
grab_executor(pot_2093)
Robot find: Robot is close to the food_rice_2067. Robot is close to the kitchen_counter_129. Robot is close to the pot_2093. Grabbing pot_2093 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(pot_2093, stove_2090)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is close pot_2093. pot_2093 is close stove_2090. pot_2093 is on stove_2090. pot_2093 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. 
##############################
From agent.py
grab_executor(fryingpan_2107)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Grabbing fryingpan_2107 by right hand. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(fryingpan_2107, stove_2090)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the fryingpan_2107. Robot is close to the stove_2090. fryingpan_2107 is on stove_2090. stove_2090 is close fryingpan_2107. fryingpan_2107 is close stove_2090. fryingpan_2107 released by right hand. 
##############################
From agent.py
walk_executor(oil_2102)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the oil_2102. 
##############################
From agent.py
grab_executor(oil_2102)
Robot find: Robot is close to the kitchen_counter_129. Robot is close to the oil_2102. Grabbing oil_2102 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the oil_2102. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(oil_2102, fryingpan_2107)
Robot find: Robot is close to the oil_2102. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. oil_2102 is close fryingpan_2107. oil_2102 is inside fryingpan_2107. fryingpan_2107 is close oil_2102. oil_2102 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot find: Robot is close to the fridge_140. Robot is close to the food_egg_2053. 
##############################
From agent.py
grab_executor(food_egg_2053)
Robot find: Robot is close to the fridge_140. Robot is close to the food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the food_egg_2053. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_egg_2053, fryingpan_2107)
Robot find: Robot is close to the food_egg_2053. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. food_egg_2053 is close fryingpan_2107. food_egg_2053 is inside fryingpan_2107. fryingpan_2107 is close food_egg_2053. food_egg_2053 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: You need to fill the pot with water to complete the cooking process for the rice.
##############################
From agent.py
Human Instruction: You need to fill the pot with water to complete the cooking process for the rice.

The actions you have taken:
Action 1: Walk to cupboard_130.
Action 2: look for food_rice_2067 around cupboard_130.
Action 3: Walk to kitchen_counter_129.
Action 4: look for food_rice_2067 around kitchen_counter_129.
Action 5: Walk to kitchen_counter_132.
Action 6: look for food_rice_2067 around kitchen_counter_132.
Action 7: Walk to stove_2090.
Action 8: Open stove_2090.
Action 9: look for food_rice_2067 around stove_2090.
Action 10: Walk to kitchen_counter_128.
Action 11: look for food_rice_2067 around kitchen_counter_128.
Action 12: Walk to fridge_140.
Action 13: Switch off fridge_140.
Action 14: Open fridge_140.
Action 15: look for food_rice_2067 around fridge_140.
Action 16: Observe around food_rice_2067 with the question of look around this place.
Action 17: Observe around food_egg_2053 with the question of look around this place.
Action 18: Walk to pot_2093.
Action 19: Open pot_2093.
Action 20: Walk to food_rice_2067.
Action 21: Grab food_rice_2067.
Action 22: Walk to pot_2093.
Action 23: Put food_rice_2067 into pot_2093.
Action 24: Grab pot_2093.
Action 25: Walk to faucet_134.
Action 26: Switch off faucet_134.
Action 27: Walk to stove_2090.
Action 28: Put pot_2093 on stove_2090.
Action 29: Switch on stove_2090.
Action 30: Walk to fryingpan_2107.
Action 31: Grab fryingpan_2107.
Action 32: Walk to stove_2090.
Action 33: Put fryingpan_2107 on stove_2090.
Action 34: Walk to oil_2102.
Action 35: Grab oil_2102.
Action 36: Walk to fryingpan_2107.
Action 37: Put oil_2102 into fryingpan_2107.
Action 38: Walk to food_egg_2053.
Action 39: Grab food_egg_2053.
Action 40: Walk to fryingpan_2107.
Action 41: Put food_egg_2053 into fryingpan_2107.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2005_around_cupboard_131(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(oil,cupboard_instance)
        else:
            exp(oil,cupboard_instance)
    eff:
        unknown[oil]=False
        close[oil,cupboard_instance]=True
        close[cupboard_instance,oil]=True
    

#exp_behavior_end

#goal_representation
behavior cook_rice(rice:item, pot:item, stove:item, faucet:item):
    body:
        achieve_once inside(rice, pot)
        achieve_once close_char(char, faucet)
        achieve is_on(faucet)
        achieve has_water(pot)
        achieve_once on(pot, stove)
        achieve is_on(stove)

behavior scramble_egg(egg:item, fryingpan:item, stove:item, oil:item):
    body:
        achieve_once on(fryingpan, stove)
        achieve_once inside(oil, fryingpan)
        achieve_once inside(egg, fryingpan)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)

        bind egg: item where:
            is_food_egg(egg)

        bind pot: item where:
            is_pot(pot)

        bind faucet: item where:
            is_faucet(faucet)

        bind stove: item where:
            is_stove(stove) and id[stove] == 2090

        bind fryingpan: item where:
            is_fryingpan(fryingpan)

        bind oil: item where:
            is_oil(oil)

        cook_rice(rice, pot, stove, faucet)
        scramble_egg(egg, fryingpan, stove, oil)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior cook_rice(rice:item, pot:item, stove:item, faucet:item):
    body:
        achieve_once inside(rice, pot)
        achieve_once close_char(char, faucet)
        achieve is_on(faucet)
        achieve has_water(pot)
        achieve_once on(pot, stove)
        achieve is_on(stove)

behavior scramble_egg(egg:item, fryingpan:item, stove:item, oil:item):
    body:
        achieve_once on(fryingpan, stove)
        achieve_once inside(oil, fryingpan)
        achieve_once inside(egg, fryingpan)
        achieve is_on(stove)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)

        bind egg: item where:
            is_food_egg(egg)

        bind pot: item where:
            is_pot(pot)

        bind faucet: item where:
            is_faucet(faucet)

        bind stove: item where:
            is_stove(stove) and id[stove] == 2090

        bind fryingpan: item where:
            is_fryingpan(fryingpan)

        bind oil: item where:
            is_oil(oil)

        cook_rice(rice, pot, stove, faucet)
        scramble_egg(egg, fryingpan, stove, oil)
##############################
From agent.py-> find a plan in act()
walk_executor(faucet_308)walk_executor(pot_2093)grab_executor(pot_2093)walk_executor(faucet_134)switchon_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_2093, stove_2090)
##############################
From agent.py
walk_executor(faucet_308)
Robot find: drawing_296, towel_rack_298, Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. 
##############################
From agent.py
walk_executor(pot_2093)
Robot find: Robot is close to the stove_2090. Robot is close to the food_rice_2067. Robot is close to the pot_2093. 
##############################
From agent.py
grab_executor(pot_2093)
Robot find: Robot is close to the stove_2090. Robot is close to the food_rice_2067. Robot is close to the pot_2093. Grabbing pot_2093 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(pot_2093, stove_2090)
Robot find: Robot is close to the pot_2093. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. pot_2093 is close stove_2090. pot_2093 is on stove_2090. pot_2093 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to fill the pot with water to complete the cooking process for the rice. The rice should be inside a pot with water while the pot is on the stove, and the stove should be turned on.
##############################
From agent.py
Human Instruction: The robot needs to fill the pot with water to complete the cooking process for the rice. The rice should be inside a pot with water while the pot is on the stove, and the stove should be turned on.

The actions you have taken:
Action 1: Walk to cupboard_130.
Action 2: look for food_rice_2067 around cupboard_130.
Action 3: Walk to kitchen_counter_129.
Action 4: look for food_rice_2067 around kitchen_counter_129.
Action 5: Walk to kitchen_counter_132.
Action 6: look for food_rice_2067 around kitchen_counter_132.
Action 7: Walk to stove_2090.
Action 8: Open stove_2090.
Action 9: look for food_rice_2067 around stove_2090.
Action 10: Walk to kitchen_counter_128.
Action 11: look for food_rice_2067 around kitchen_counter_128.
Action 12: Walk to fridge_140.
Action 13: Switch off fridge_140.
Action 14: Open fridge_140.
Action 15: look for food_rice_2067 around fridge_140.
Action 16: Observe around food_rice_2067 with the question of look around this place.
Action 17: Observe around food_egg_2053 with the question of look around this place.
Action 18: Walk to pot_2093.
Action 19: Open pot_2093.
Action 20: Walk to food_rice_2067.
Action 21: Grab food_rice_2067.
Action 22: Walk to pot_2093.
Action 23: Put food_rice_2067 into pot_2093.
Action 24: Grab pot_2093.
Action 25: Walk to faucet_134.
Action 26: Switch off faucet_134.
Action 27: Walk to stove_2090.
Action 28: Put pot_2093 on stove_2090.
Action 29: Switch on stove_2090.
Action 30: Walk to fryingpan_2107.
Action 31: Grab fryingpan_2107.
Action 32: Walk to stove_2090.
Action 33: Put fryingpan_2107 on stove_2090.
Action 34: Walk to oil_2102.
Action 35: Grab oil_2102.
Action 36: Walk to fryingpan_2107.
Action 37: Put oil_2102 into fryingpan_2107.
Action 38: Walk to food_egg_2053.
Action 39: Grab food_egg_2053.
Action 40: Walk to fryingpan_2107.
Action 41: Put food_egg_2053 into fryingpan_2107.
Action 42: Walk to faucet_308.
Action 43: Walk to pot_2093.
Action 44: Grab pot_2093.
Action 45: Walk to faucet_134.
Action 46: Switch on faucet_134.
Action 47: Switch off faucet_134.
Action 48: Walk to stove_2090.
Action 49: Put pot_2093 on stove_2090.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2005_around_cupboard_131(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(oil,cupboard_instance)
        else:
            exp(oil,cupboard_instance)
    eff:
        unknown[oil]=False
        close[oil,cupboard_instance]=True
        close[cupboard_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_rice_in_pot(rice:item, pot:item):
    body:
        achieve_once inside(rice, pot)

behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior scramble_egg_in_pan(egg:item, fryingpan:item):
    body:
        achieve_once inside(egg, fryingpan)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)

        bind pot: item where:
            is_pot(pot)

        bind stove: item where:
            is_stove(stove)

        bind egg: item where:
            is_food_egg(egg)

        bind fryingpan: item where:
            is_fryingpan(fryingpan)

        place_rice_in_pot(rice, pot)
        fill_pot_with_water(pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)
        scramble_egg_in_pan(egg, fryingpan)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_oil_2005_around_cupboard_131(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(oil,cupboard_instance)
        else:
            exp(oil,cupboard_instance)
    eff:
        unknown[oil]=False
        close[oil,cupboard_instance]=True
        close[cupboard_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_rice_in_pot(rice:item, pot:item):
    body:
        achieve_once inside(rice, pot)

behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior find_frying_pan(pan:item):
    body:
        achieve_once visited(pan)

behavior place_pan_on_stove(pan:item, stove:item):
    body:
        achieve_once on(pan, stove)

behavior add_oil_to_pan(oil:item, pan:item):
    body:
        achieve_once inside(oil, pan)

behavior scramble_egg_in_pan(egg:item, pan:item):
    body:
        achieve_once inside(egg, pan)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)

        bind pot: item where:
            is_pot(pot)

        bind stove: item where:
            is_stove(stove)

        place_rice_in_pot(rice, pot)
        fill_pot_with_water(pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

        bind pan: item where:
            is_fryingpan(pan)

        bind oil: item where:
            is_oil(oil)

        bind egg: item where:
            is_food_egg(egg)

        find_frying_pan(pan)
        place_pan_on_stove(pan, stove)
        add_oil_to_pan(oil, pan)
        scramble_egg_in_pan(egg, pan)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior place_rice_in_pot(rice:item, pot:item):
    body:
        achieve_once inside(rice, pot)

behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior find_frying_pan(pan:item):
    body:
        achieve_once visited(pan)

behavior place_pan_on_stove(pan:item, stove:item):
    body:
        achieve_once on(pan, stove)

behavior add_oil_to_pan(oil:item, pan:item):
    body:
        achieve_once inside(oil, pan)

behavior scramble_egg_in_pan(egg:item, pan:item):
    body:
        achieve_once inside(egg, pan)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)

        bind pot: item where:
            is_pot(pot)

        bind stove: item where:
            is_stove(stove)

        place_rice_in_pot(rice, pot)
        fill_pot_with_water(pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

        bind pan: item where:
            is_fryingpan(pan)

        bind oil: item where:
            is_oil(oil)

        bind egg: item where:
            is_food_egg(egg)

        find_frying_pan(pan)
        place_pan_on_stove(pan, stove)
        add_oil_to_pan(oil, pan)
        scramble_egg_in_pan(egg, pan)

##############################
From agent.py-> find a plan in act()
walk_executor(fryingpan_2107)obs(fryingpan_2107, look around this place)
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the stove_2090. Robot is close to the fryingpan_2107. 
##############################
From agent.py
obs(fryingpan_2107, look around this place)
Get this information:  fryingpan_2107 is on stove_2090. oil_2102 is inside fryingpan_2107. fryingpan_2107 is inside dining_room_1. food_egg_2053 is inside fryingpan_2107. fryingpan_2107 is close to stove_2090. fryingpan_2107 is close to oil_2102. fryingpan_2107 is close to food_egg_2053. fryingpan_2107 is close to character_219. fryingpan_2107 is CLEAN.
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: No
The feedback instruction: The robot needs to ensure that the pot with rice is filled with water while on the stove and the stove is turned on. Currently, the water filling process appears to be missing as the faucet was turned off while holding the pot, and there is no explicit action showing water was added to the pot. Make sure to fill the pot with water before placing it back on the stove.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_fork_2103_around_knifeblock_52(fork:item):
    goal: not unknown(fork)
    body:
        assert is_fork(fork)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(fork,knifeblock_instance)
        else:
            exp(fork,knifeblock_instance)
    eff:
        unknown[fork]=False
        close[fork,knifeblock_instance]=True
        close[knifeblock_instance,fork]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_plate_2105_around_table_123(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==123
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(plate,table_instance)
        else:
            exp(plate,table_instance)
    eff:
        unknown[plate]=False
        close[plate,table_instance]=True
        close[table_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior combine_rice_and_egg(rice:item, egg:item, fryingpan:item):
    body:
        achieve_once inside(rice, fryingpan)
        achieve_once inside(egg, fryingpan)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)

        bind egg: item where:
            is_food_egg(egg)

        bind fryingpan: item where:
            is_fryingpan(fryingpan)

        combine_rice_and_egg(rice, egg, fryingpan)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior combine_rice_and_egg(rice:item, egg:item, fryingpan:item):
    body:
        achieve_once inside(rice, fryingpan)
        achieve_once inside(egg, fryingpan)

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)

        bind egg: item where:
            is_food_egg(egg)

        bind fryingpan: item where:
            is_fryingpan(fryingpan)

        combine_rice_and_egg(rice, egg, fryingpan)

##############################
From agent.py-> find a plan in act()
walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(fryingpan_2107)putin_executor(food_rice_2067, fryingpan_2107)
##############################
From agent.py
walk_executor(food_rice_2067)
Robot find: Robot is close to the food_rice_2067. Robot is close to the pot_2093. 
##############################
From agent.py
grab_executor(food_rice_2067)
Robot find: Robot is close to the food_rice_2067. Robot is close to the pot_2093. Grabbing food_rice_2067 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot find: Robot is close to the food_rice_2067. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. 
##############################
From agent.py
putin_executor(food_rice_2067, fryingpan_2107)
Robot find: Robot is close to the food_rice_2067. Robot is close to the stove_2090. Robot is close to the fryingpan_2107. food_rice_2067 is inside fryingpan_2107. food_rice_2067 is close fryingpan_2107. fryingpan_2107 is close food_rice_2067. food_rice_2067 released by right hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Fried rice with egg.
Action History:
['walk_executor(cupboard_130)', 'walk_executor(kitchen_counter_129)', 'walk_executor(kitchen_counter_132)', 'walk_executor(stove_2090)', 'open_executor(stove_2090)', 'walk_executor(kitchen_counter_128)', 'walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'walk_executor(pot_2093)', 'open_executor(pot_2093)', 'walk_executor(food_rice_2067)', 'grab_executor(food_rice_2067)', 'walk_executor(pot_2093)', 'putin_executor(food_rice_2067, pot_2093)', 'grab_executor(pot_2093)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(stove_2090)', 'put_executor(pot_2093, stove_2090)', 'switchon_executor(stove_2090)', 'walk_executor(fryingpan_2107)', 'grab_executor(fryingpan_2107)', 'walk_executor(stove_2090)', 'put_executor(fryingpan_2107, stove_2090)', 'walk_executor(oil_2102)', 'grab_executor(oil_2102)', 'walk_executor(fryingpan_2107)', 'putin_executor(oil_2102, fryingpan_2107)', 'walk_executor(food_egg_2053)', 'grab_executor(food_egg_2053)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_egg_2053, fryingpan_2107)', 'walk_executor(faucet_308)', 'walk_executor(pot_2093)', 'grab_executor(pot_2093)', 'walk_executor(faucet_134)', 'switchon_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(stove_2090)', 'put_executor(pot_2093, stove_2090)', 'walk_executor(fryingpan_2107)', 'walk_executor(food_rice_2067)', 'grab_executor(food_rice_2067)', 'walk_executor(fryingpan_2107)', 'putin_executor(food_rice_2067, fryingpan_2107)']
Time info:
Time consume: 388 seconds
Exp_helper query times: 0
Guidance query times: 0
library scale: 71
goal generate times: 6
goal correct times: 1
action_num: 46

Task complete rate:
1
Scene_id: 2
##############################
