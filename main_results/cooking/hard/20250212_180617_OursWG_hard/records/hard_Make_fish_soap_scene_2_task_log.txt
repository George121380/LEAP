From agent.py
Reset goals: The sub-goals are: 
['1. Gather the necessary fish and ingredients for the soup, and wash them.', '2. Prepare the ingredients by cutting them as needed.', '3. Cook the fish and ingredients in a pot to make the soup.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_fish_2054_around_fridge_140(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_fish,fridge_instance)
        else:
            exp(food_fish,fridge_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,fridge_instance]=True
        close[fridge_instance,food_fish]=True
    

behavior find_food_vegetable_2072_around_fridge_140(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_vegetable,fridge_instance)
        else:
            exp(food_vegetable,fridge_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,fridge_instance]=True
        close[fridge_instance,food_vegetable]=True
    

behavior find_food_carrot_2047_around_fridge_140(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_carrot,fridge_instance)
        else:
            exp(food_carrot,fridge_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,fridge_instance]=True
        close[fridge_instance,food_carrot]=True
    

#exp_behavior_end

#goal_representation
 
def is_ingredient_observed(ingredient:item):
    # Function to check if the ingredient item for fish soup has been observed
    symbol observed=visited(ingredient)
    return observed

behavior wash_ingredient(ingredient:item):
    body:
        achieve clean(ingredient)
        # Wash the ingredient to ensure it is clean

behavior __goal__():
    body:
        foreach ingredient: item:
            if (is_food_fish(ingredient) or is_food_carrot(ingredient) or is_food_vegetable(ingredient)) and (not visited(ingredient) or dirty(ingredient)):
                # Check for all unobserved or dirty ingredients required for fish soup
                if not is_ingredient_observed(ingredient):
                    observe(ingredient, "Check if the ingredient is needed for fish soup")
                if is_ingredient_observed(ingredient) and dirty(ingredient):
                    wash_ingredient(ingredient)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_ingredient_observed(ingredient:item):
    # Function to check if the ingredient item for fish soup has been observed
    symbol observed=visited(ingredient)
    return observed

behavior wash_ingredient(ingredient:item):
    body:
        achieve clean(ingredient)
        # Wash the ingredient to ensure it is clean

behavior __goal__():
    body:
        foreach ingredient: item:
            if (is_food_fish(ingredient) or is_food_carrot(ingredient) or is_food_vegetable(ingredient)) and (not visited(ingredient) or dirty(ingredient)):
                # Check for all unobserved or dirty ingredients required for fish soup
                if not is_ingredient_observed(ingredient):
                    observe(ingredient, "Check if the ingredient is needed for fish soup")
                if is_ingredient_observed(ingredient) and dirty(ingredient):
                    wash_ingredient(ingredient)

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_carrot_2047, fridge_140)walk_executor(food_carrot_2047)obs(food_carrot_2047, Check if the ingredient is needed for fish soup)walk_executor(fridge_140)exp(food_fish_2054, fridge_140)walk_executor(food_fish_2054)obs(food_fish_2054, Check if the ingredient is needed for fish soup)walk_executor(fridge_140)exp(food_vegetable_2072, fridge_140)walk_executor(food_vegetable_2072)obs(food_vegetable_2072, Check if the ingredient is needed for fish soup)
##############################
From agent.py
walk_executor(fridge_140)
Robot find: chair_138, milk_2074, dry_pasta_2073, Robot is close to the fridge_140. 
##############################
From agent.py
switchoff_executor(fridge_140)
Robot find: Robot is close to the fridge_140. fridge_140 is turned off. 
##############################
From agent.py
open_executor(fridge_140)
Robot find: food_cereal_2048, food_cheese_2049, food_chicken_2050, food_dessert_2051, food_donut_2052, food_egg_2053, food_fish_2054, food_food_2055, food_fruit_2056, food_hamburger_2057, food_ice_cream_2058, food_jam_2059, food_kiwi_2060, food_lemon_2061, food_noodles_2062, food_oatmeal_2063, food_peanut_butter_2064, food_pizza_2065, food_potato_2066, food_rice_2067, food_salt_2068, food_snack_2069, food_sugar_2070, food_turkey_2071, food_vegetable_2072, sauce_2101, food_steak_2042, food_apple_2043, food_bacon_2044, food_banana_2045, food_cake_2046, food_carrot_2047, Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. fridge_140 is opened. 
##############################
From agent.py
exp(food_carrot_2047, fridge_140)
Find food_carrot_2047. 
##############################
From agent.py-> find a plan in act()
obs(food_carrot_2047, Check if the ingredient is needed for fish soup)grab_executor(food_carrot_2047)wash_executor(food_carrot_2047)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(food_fish_2054)obs(food_fish_2054, Check if the ingredient is needed for fish soup)grab_executor(food_fish_2054)walk_executor(kitchen_counter_132)put_executor(food_carrot_2047, kitchen_counter_132)switchon_executor(faucet_134)wash_executor(food_fish_2054)switchoff_executor(faucet_134)walk_executor(food_vegetable_2072)obs(food_vegetable_2072, Check if the ingredient is needed for fish soup)grab_executor(food_vegetable_2072)wash_executor(food_vegetable_2072)walk_executor(faucet_308)switchoff_executor(faucet_308)
##############################
From agent.py
obs(food_carrot_2047, Check if the ingredient is needed for fish soup)
Get this information:  food_carrot_2047 is inside dining_room_1. food_carrot_2047 is inside fridge_140. food_carrot_2047 is close to fridge_140. food_carrot_2047 is close to character_219. food_carrot_2047 is DIRTY.
##############################
From agent.py
grab_executor(food_carrot_2047)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. Grabbing food_carrot_2047 by right hand. 
##############################
From agent.py
wash_executor(food_carrot_2047)
Robot find: Robot is close to the food_cereal_2048. Robot is close to the food_cheese_2049. Robot is close to the food_chicken_2050. Robot is close to the food_dessert_2051. Robot is close to the food_donut_2052. Robot is close to the food_egg_2053. Robot is close to the food_fish_2054. Robot is close to the food_food_2055. Robot is close to the food_fruit_2056. Robot is close to the food_hamburger_2057. Robot is close to the food_ice_cream_2058. Robot is close to the food_jam_2059. Robot is close to the fridge_140. Robot is close to the food_kiwi_2060. Robot is close to the food_lemon_2061. Robot is close to the food_noodles_2062. Robot is close to the food_oatmeal_2063. Robot is close to the food_peanut_butter_2064. Robot is close to the food_pizza_2065. Robot is close to the food_potato_2066. Robot is close to the food_rice_2067. Robot is close to the food_salt_2068. Robot is close to the food_snack_2069. Robot is close to the food_sugar_2070. Robot is close to the food_turkey_2071. Robot is close to the food_vegetable_2072. Robot is close to the sauce_2101. Robot is close to the food_steak_2042. Robot is close to the food_apple_2043. Robot is close to the food_bacon_2044. Robot is close to the food_banana_2045. Robot is close to the food_cake_2046. Robot is close to the food_carrot_2047. food_carrot_2047 is cleaned. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: pot_54, Robot is close to the food_carrot_2047. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(food_fish_2054)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the fridge_140. Robot is close to the food_fish_2054. 
##############################
From agent.py
obs(food_fish_2054, Check if the ingredient is needed for fish soup)
Get this information:  food_fish_2054 is inside dining_room_1. food_fish_2054 is inside fridge_140. food_fish_2054 is close to fridge_140. food_fish_2054 is close to character_219. food_fish_2054 is DIRTY.
##############################
From agent.py
grab_executor(food_fish_2054)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the fridge_140. Robot is close to the food_fish_2054. Grabbing food_fish_2054 by left hand. 
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the food_fish_2054. Robot is close to the kitchen_counter_132. 
##############################
From agent.py
put_executor(food_carrot_2047, kitchen_counter_132)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the food_fish_2054. Robot is close to the kitchen_counter_132. kitchen_counter_132 is close food_carrot_2047. food_carrot_2047 is close kitchen_counter_132. food_carrot_2047 is on kitchen_counter_132. food_carrot_2047 released by right hand. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the food_fish_2054. Robot is close to the kitchen_counter_132. faucet_134 is turned on. 
##############################
From agent.py
wash_executor(food_fish_2054)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the food_fish_2054. Robot is close to the kitchen_counter_132. food_fish_2054 is cleaned. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the food_carrot_2047. Robot is close to the food_fish_2054. Robot is close to the kitchen_counter_132. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(food_vegetable_2072)
Robot find: Robot is close to the food_fish_2054. Robot is close to the food_vegetable_2072. Robot is close to the fridge_140. 
##############################
From agent.py
obs(food_vegetable_2072, Check if the ingredient is needed for fish soup)
Get this information:  food_vegetable_2072 is close to fridge_140. food_vegetable_2072 is close to character_219. food_vegetable_2072 is inside dining_room_1. food_vegetable_2072 is inside fridge_140. food_vegetable_2072 is DIRTY.
##############################
From agent.py
grab_executor(food_vegetable_2072)
Robot find: Robot is close to the food_fish_2054. Robot is close to the food_vegetable_2072. Robot is close to the fridge_140. Grabbing food_vegetable_2072 by right hand. 
##############################
From agent.py
wash_executor(food_vegetable_2072)
Robot find: Robot is close to the food_fish_2054. Robot is close to the food_vegetable_2072. Robot is close to the fridge_140. food_vegetable_2072 is cleaned. 
##############################
From agent.py
walk_executor(faucet_308)
Robot find: drawing_296, towel_rack_298, Robot is close to the food_fish_2054. Robot is close to the food_vegetable_2072. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. 
##############################
From agent.py
switchoff_executor(faucet_308)
Robot find: Robot is close to the food_fish_2054. Robot is close to the food_vegetable_2072. Robot is close to the bathroom_counter_306. Robot is close to the faucet_308. faucet_308 is turned off. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
behavior place_ingredients_on_board(ingredient:item, board:item):
    body:
        achieve_once on(ingredient, board)

behavior cut_ingredient(ingredient:item, knife:item):
    body:
        achieve_once cut(ingredient)

behavior __goal__():
    body:
        bind carrot: item where:
            is_food_carrot(carrot) and clean(carrot)

        bind fish: item where:
            is_food_fish(fish) and clean(fish)

        bind vegetable: item where:
            is_food_vegetable(vegetable) and clean(vegetable)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        place_ingredients_on_board(carrot, cutting_board)
        cut_ingredient(carrot, knife)

        place_ingredients_on_board(fish, cutting_board)
        cut_ingredient(fish, knife)

        place_ingredients_on_board(vegetable, cutting_board)
        cut_ingredient(vegetable, knife)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior place_ingredients_on_board(ingredient:item, board:item):
    body:
        achieve_once on(ingredient, board)

behavior cut_ingredient(ingredient:item, knife:item):
    body:
        achieve_once cut(ingredient)

behavior __goal__():
    body:
        bind carrot: item where:
            is_food_carrot(carrot) and clean(carrot)

        bind fish: item where:
            is_food_fish(fish) and clean(fish)

        bind vegetable: item where:
            is_food_vegetable(vegetable) and clean(vegetable)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        place_ingredients_on_board(carrot, cutting_board)
        cut_ingredient(carrot, knife)

        place_ingredients_on_board(fish, cutting_board)
        cut_ingredient(fish, knife)

        place_ingredients_on_board(vegetable, cutting_board)
        cut_ingredient(vegetable, knife)
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)put_executor(food_fish_2054, kitchen_counter_132)grab_executor(food_carrot_2047)walk_executor(cutting_board_2080)put_executor(food_carrot_2047, cutting_board_2080)walk_executor(knifeblock_52)exp(knife_2036, knifeblock_52)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_carrot_2047)cut_executor(food_carrot_2047)walk_executor(food_fish_2054)grab_executor(food_fish_2054)walk_executor(cutting_board_2080)put_executor(food_fish_2054, cutting_board_2080)walk_executor(food_fish_2054)cut_executor(food_fish_2054)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the food_fish_2054. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. 
##############################
From agent.py
put_executor(food_fish_2054, kitchen_counter_132)
Robot find: Robot is close to the food_fish_2054. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. food_fish_2054 is close kitchen_counter_132. kitchen_counter_132 is close food_fish_2054. food_fish_2054 is on kitchen_counter_132. food_fish_2054 released by left hand. 
##############################
From agent.py
grab_executor(food_carrot_2047)
Robot find: Robot is close to the food_fish_2054. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. Robot is close to the food_carrot_2047. Grabbing food_carrot_2047 by left hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: food_orange_2008, spectacles_2106, Robot is close to the food_vegetable_2072. Robot is close to the food_carrot_2047. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_carrot_2047, cutting_board_2080)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the food_carrot_2047. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. cutting_board_2080 is close food_carrot_2047. food_carrot_2047 is close cutting_board_2080. food_carrot_2047 is on cutting_board_2080. food_carrot_2047 released by left hand. 
##############################
From agent.py
walk_executor(knifeblock_52)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the knifeblock_52. 
##############################
From agent.py
exp(knife_2036, knifeblock_52)
Fail to find knife_2036 around knifeblock_52. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(knife_2036, cupboard_131)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_carrot_2047)cut_executor(food_carrot_2047)walk_executor(food_fish_2054)grab_executor(food_fish_2054)walk_executor(cutting_board_2080)put_executor(food_fish_2054, cutting_board_2080)walk_executor(food_fish_2054)cut_executor(food_fish_2054)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)
##############################
From agent.py
walk_executor(cupboard_131)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the cupboard_131. 
##############################
From agent.py
open_executor(cupboard_131)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the cupboard_131. cupboard_131 is opened. 
##############################
From agent.py
exp(knife_2036, cupboard_131)
Fail to find knife_2036 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(knife_2036, cupboard_130)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_carrot_2047)cut_executor(food_carrot_2047)walk_executor(food_fish_2054)grab_executor(food_fish_2054)walk_executor(cutting_board_2080)put_executor(food_fish_2054, cutting_board_2080)walk_executor(food_fish_2054)cut_executor(food_fish_2054)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)
##############################
From agent.py
walk_executor(cupboard_130)
Robot find: blender_2032, tea_bag_2017, Robot is close to the food_vegetable_2072. Robot is close to the blender_2032. Robot is close to the tea_bag_2017. Robot is close to the cupboard_130. 
##############################
From agent.py
exp(knife_2036, cupboard_130)
Fail to find knife_2036 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(stove_2090)open_executor(stove_2090)exp(knife_2036, stove_2090)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_carrot_2047)cut_executor(food_carrot_2047)walk_executor(food_fish_2054)grab_executor(food_fish_2054)walk_executor(cutting_board_2080)put_executor(food_fish_2054, cutting_board_2080)walk_executor(food_fish_2054)cut_executor(food_fish_2054)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)
##############################
From agent.py
walk_executor(stove_2090)
Robot find: fryingpan_2107, oil_2102, pot_2093, Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
open_executor(stove_2090)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is opened. 
##############################
From agent.py
exp(knife_2036, stove_2090)
Fail to find knife_2036 around stove_2090. 
##############################
From agent.py-> find a plan in act()
walk_executor(microwave_149)open_executor(microwave_149)exp(knife_2036, microwave_149)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_carrot_2047)cut_executor(food_carrot_2047)walk_executor(food_fish_2054)grab_executor(food_fish_2054)walk_executor(cutting_board_2080)put_executor(food_fish_2054, cutting_board_2080)walk_executor(food_fish_2054)cut_executor(food_fish_2054)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)
##############################
From agent.py
walk_executor(microwave_149)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. 
##############################
From agent.py
open_executor(microwave_149)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. Robot is close to the microwave_149. microwave_149 is opened. 
##############################
From agent.py
exp(knife_2036, microwave_149)
Fail to find knife_2036 around microwave_149. 
##############################
From agent.py-> find a plan in act()
walk_executor(toaster_144)open_executor(toaster_144)exp(knife_2036, toaster_144)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_carrot_2047)cut_executor(food_carrot_2047)walk_executor(food_fish_2054)grab_executor(food_fish_2054)walk_executor(cutting_board_2080)put_executor(food_fish_2054, cutting_board_2080)walk_executor(food_fish_2054)cut_executor(food_fish_2054)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)
##############################
From agent.py
walk_executor(toaster_144)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. 
##############################
From agent.py
open_executor(toaster_144)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the toaster_144. Robot is close to the kitchen_counter_129. toaster_144 is opened. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find knife_2036 ?
Answer: Locate dining_room_1 and find dishwasher_143. Knife_2036 is inside dishwasher_143.
Re-decompose: None

##############################
From agent.py
Human Instruction: Locate dining_room_1 and find dishwasher_143. Knife_2036 is inside dishwasher_143.

The actions you have taken:
Action 1: Walk to fridge_140.
Action 2: Switch off fridge_140.
Action 3: Open fridge_140.
Action 4: look for food_carrot_2047 around fridge_140.
Action 5: Observe around food_carrot_2047 with the question of Check if the ingredient is needed for fish soup.
Action 6: Grab food_carrot_2047.
Action 7: Wash food_carrot_2047.
Action 8: Walk to faucet_134.
Action 9: Switch off faucet_134.
Action 10: Walk to food_fish_2054.
Action 11: Observe around food_fish_2054 with the question of Check if the ingredient is needed for fish soup.
Action 12: Grab food_fish_2054.
Action 13: Walk to kitchen_counter_132.
Action 14: Put food_carrot_2047 on kitchen_counter_132.
Action 15: Switch on faucet_134.
Action 16: Wash food_fish_2054.
Action 17: Switch off faucet_134.
Action 18: Walk to food_vegetable_2072.
Action 19: Observe around food_vegetable_2072 with the question of Check if the ingredient is needed for fish soup.
Action 20: Grab food_vegetable_2072.
Action 21: Wash food_vegetable_2072.
Action 22: Walk to faucet_308.
Action 23: Switch off faucet_308.
Action 24: Walk to kitchen_counter_132.
Action 25: Put food_fish_2054 on kitchen_counter_132.
Action 26: Grab food_carrot_2047.
Action 27: Walk to cutting_board_2080.
Action 28: Put food_carrot_2047 on cutting_board_2080.
Action 29: Walk to knifeblock_52.
Action 30: look for knife_2036 around knifeblock_52.
Action 31: Walk to cupboard_131.
Action 32: Open cupboard_131.
Action 33: look for knife_2036 around cupboard_131.
Action 34: Walk to cupboard_130.
Action 35: look for knife_2036 around cupboard_130.
Action 36: Walk to stove_2090.
Action 37: Open stove_2090.
Action 38: look for knife_2036 around stove_2090.
Action 39: Walk to microwave_149.
Action 40: Open microwave_149.
Action 41: look for knife_2036 around microwave_149.
Action 42: Walk to toaster_144.
Action 43: Open toaster_144.

##############################
From agent.py
exp(knife_2036, toaster_144)
Fail to find knife_2036 around toaster_144. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_143)open_executor(dishwasher_143)exp(knife_2036, dishwasher_143)walk_executor(knife_2036)grab_executor(knife_2036)walk_executor(food_carrot_2047)cut_executor(food_carrot_2047)walk_executor(food_fish_2054)grab_executor(food_fish_2054)walk_executor(cutting_board_2080)put_executor(food_fish_2054, cutting_board_2080)walk_executor(food_fish_2054)cut_executor(food_fish_2054)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)
##############################
From agent.py
walk_executor(dishwasher_143)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the dishwasher_143. 
##############################
From agent.py
open_executor(dishwasher_143)
Robot find: knife_2036, Robot is close to the food_vegetable_2072. Robot is close to the knife_2036. Robot is close to the dishwasher_143. dishwasher_143 is opened. 
##############################
From agent.py
exp(knife_2036, dishwasher_143)
Find knife_2036. 
##############################
From agent.py-> find a plan in act()
grab_executor(knife_2036)walk_executor(food_carrot_2047)cut_executor(food_carrot_2047)walk_executor(food_fish_2054)grab_executor(food_fish_2054)walk_executor(cutting_board_2080)put_executor(food_fish_2054, cutting_board_2080)walk_executor(food_fish_2054)cut_executor(food_fish_2054)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)
##############################
From agent.py
grab_executor(knife_2036)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the knife_2036. Robot is close to the dishwasher_143. Grabbing knife_2036 by left hand. 
##############################
From agent.py
walk_executor(food_carrot_2047)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_carrot_2047. 
##############################
From agent.py
cut_executor(food_carrot_2047)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_carrot_2047. 
##############################
From agent.py
walk_executor(food_fish_2054)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the knife_2036. Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2026_around_bench_126(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==126
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(food_onion,bench_instance)
        else:
            exp(food_onion,bench_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,bench_instance]=True
        close[bench_instance,food_onion]=True
    

#exp_behavior_end

#goal_representation
behavior place_ingredients_on_board(ingredient:item, board:item):
    body:
        achieve_once on(ingredient, board)

behavior cut_ingredient(ingredient:item, knife:item):
    body:
        achieve_once cut(ingredient)

behavior __goal__():
    body:
        bind carrot: item where:
            is_food_carrot(carrot) and clean(carrot)

        bind fish: item where:
            is_food_fish(fish) and clean(fish)

        bind vegetable: item where:
            is_food_vegetable(vegetable) and clean(vegetable)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        place_ingredients_on_board(carrot, cutting_board)
        cut_ingredient(carrot, knife)

        place_ingredients_on_board(fish, cutting_board)
        cut_ingredient(fish, knife)

        place_ingredients_on_board(vegetable, cutting_board)
        cut_ingredient(vegetable, knife)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior place_ingredients_on_board(ingredient:item, board:item):
    body:
        achieve_once on(ingredient, board)

behavior cut_ingredient(ingredient:item, knife:item):
    body:
        achieve_once cut(ingredient)

behavior __goal__():
    body:
        bind carrot: item where:
            is_food_carrot(carrot) and clean(carrot)

        bind fish: item where:
            is_food_fish(fish) and clean(fish)

        bind vegetable: item where:
            is_food_vegetable(vegetable) and clean(vegetable)

        bind knife: item where:
            is_knife(knife)

        bind cutting_board: item where:
            is_cutting_board(cutting_board)

        place_ingredients_on_board(carrot, cutting_board)
        cut_ingredient(carrot, knife)

        place_ingredients_on_board(fish, cutting_board)
        cut_ingredient(fish, knife)

        place_ingredients_on_board(vegetable, cutting_board)
        cut_ingredient(vegetable, knife)
##############################
From agent.py-> find a plan in act()
put_executor(food_vegetable_2072, kitchen_counter_132)grab_executor(food_fish_2054)walk_executor(cutting_board_2080)put_executor(food_fish_2054, cutting_board_2080)walk_executor(food_fish_2054)cut_executor(food_fish_2054)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(cutting_board_2080)put_executor(food_vegetable_2072, cutting_board_2080)walk_executor(food_vegetable_2072)cut_executor(food_vegetable_2072)
##############################
From agent.py
put_executor(food_vegetable_2072, kitchen_counter_132)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the knife_2036. Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. food_vegetable_2072 is close kitchen_counter_132. kitchen_counter_132 is close food_vegetable_2072. food_vegetable_2072 is on kitchen_counter_132. food_vegetable_2072 released by right hand. 
##############################
From agent.py
grab_executor(food_fish_2054)
Robot find: Robot is close to the food_vegetable_2072. Robot is close to the knife_2036. Robot is close to the kitchen_counter_132. Robot is close to the food_fish_2054. Grabbing food_fish_2054 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_fish_2054. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_fish_2054, cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_fish_2054. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. cutting_board_2080 is close food_fish_2054. food_fish_2054 is close cutting_board_2080. food_fish_2054 is on cutting_board_2080. food_fish_2054 released by right hand. 
##############################
From agent.py
walk_executor(food_fish_2054)
Robot find: Robot is close to the knife_2036. Robot is close to the food_fish_2054. Robot is close to the cutting_board_2080. 
##############################
From agent.py
cut_executor(food_fish_2054)
Robot find: Robot is close to the knife_2036. Robot is close to the food_fish_2054. Robot is close to the cutting_board_2080. 
##############################
From agent.py
walk_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. 
##############################
From agent.py
grab_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the kitchen_counter_132. Grabbing food_vegetable_2072 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. 
##############################
From agent.py
put_executor(food_vegetable_2072, cutting_board_2080)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the cutting_board_2080. Robot is close to the kitchen_counter_128. food_vegetable_2072 is close cutting_board_2080. cutting_board_2080 is close food_vegetable_2072. food_vegetable_2072 is on cutting_board_2080. food_vegetable_2072 released by right hand. 
##############################
From agent.py
walk_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the cutting_board_2080. 
##############################
From agent.py
cut_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the cutting_board_2080. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_onion_2026_around_pot_2093(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==2093
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(food_onion,pot_instance)
        else:
            exp(food_onion,pot_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,pot_instance]=True
        close[pot_instance,food_onion]=True
    

behavior find_oil_2005_around_pot_2093(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==2093
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(oil,pot_instance)
        else:
            exp(oil,pot_instance)
    eff:
        unknown[oil]=False
        close[oil,pot_instance]=True
        close[pot_instance,oil]=True
    

behavior find_food_butter_2018_around_pot_2093(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==2093
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(food_butter,pot_instance)
        else:
            exp(food_butter,pot_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,pot_instance]=True
        close[pot_instance,food_butter]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_ingredients_in_pot(pot:item, carrot:item, fish:item, vegetable:item):
    body:
        achieve_once inside(carrot, pot)
        achieve_once inside(fish, pot)
        achieve_once inside(vegetable, pot)

behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind carrot: item where:
            is_food_carrot(carrot) and cut(carrot)

        bind fish: item where:
            is_food_fish(fish) and cut(fish)

        bind vegetable: item where:
            is_food_vegetable(vegetable) and cut(vegetable)

        bind pot: item where:
            is_pot(pot)

        bind stove: item where:
            is_stove(stove)

        place_ingredients_in_pot(pot, carrot, fish, vegetable)
        fill_pot_with_water(pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior place_ingredients_in_pot(pot:item, carrot:item, fish:item, vegetable:item):
    body:
        achieve_once inside(carrot, pot)
        achieve_once inside(fish, pot)
        achieve_once inside(vegetable, pot)

behavior fill_pot_with_water(pot:item):
    body:
        achieve has_water(pot)

behavior place_pot_on_stove(pot:item, stove:item):
    body:
        achieve_once on(pot, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior __goal__():
    body:
        bind carrot: item where:
            is_food_carrot(carrot) and cut(carrot)

        bind fish: item where:
            is_food_fish(fish) and cut(fish)

        bind vegetable: item where:
            is_food_vegetable(vegetable) and cut(vegetable)

        bind pot: item where:
            is_pot(pot)

        bind stove: item where:
            is_stove(stove)

        place_ingredients_in_pot(pot, carrot, fish, vegetable)
        fill_pot_with_water(pot)
        place_pot_on_stove(pot, stove)
        turn_on_stove(stove)

##############################
From agent.py-> find a plan in act()
walk_executor(pot_54)open_executor(pot_54)walk_executor(food_carrot_2047)grab_executor(food_carrot_2047)walk_executor(pot_54)putin_executor(food_carrot_2047, pot_54)walk_executor(food_fish_2054)grab_executor(food_fish_2054)walk_executor(pot_54)putin_executor(food_fish_2054, pot_54)walk_executor(food_vegetable_2072)grab_executor(food_vegetable_2072)walk_executor(pot_54)putin_executor(food_vegetable_2072, pot_54)grab_executor(pot_54)walk_executor(faucet_134)walk_executor(kitchen_counter_132)put_executor(knife_2036, kitchen_counter_132)switchon_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(stove_2090)put_executor(pot_54, stove_2090)switchon_executor(stove_2090)
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the knife_2036. Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
open_executor(pot_54)
Robot find: Robot is close to the knife_2036. Robot is close to the oven_141. Robot is close to the pot_54. pot_54 is opened. 
##############################
From agent.py
walk_executor(food_carrot_2047)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_carrot_2047. 
##############################
From agent.py
grab_executor(food_carrot_2047)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_carrot_2047. Grabbing food_carrot_2047 by right hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the knife_2036. Robot is close to the food_carrot_2047. Robot is close to the oven_141. Robot is close to the pot_54. 
##############################
From agent.py
putin_executor(food_carrot_2047, pot_54)
Robot find: Robot is close to the knife_2036. Robot is close to the food_carrot_2047. Robot is close to the oven_141. Robot is close to the pot_54. pot_54 is close food_carrot_2047. food_carrot_2047 is inside pot_54. food_carrot_2047 is close pot_54. food_carrot_2047 released by right hand. 
##############################
From agent.py
walk_executor(food_fish_2054)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_fish_2054. 
##############################
From agent.py
grab_executor(food_fish_2054)
Robot find: Robot is close to the knife_2036. Robot is close to the cutting_board_2080. Robot is close to the food_fish_2054. Grabbing food_fish_2054 by right hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the knife_2036. Robot is close to the food_fish_2054. Robot is close to the oven_141. Robot is close to the pot_54. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_fish_2054, pot_54)
Robot find: Robot is close to the knife_2036. Robot is close to the food_fish_2054. Robot is close to the oven_141. Robot is close to the pot_54. Robot is close to the food_carrot_2047. food_fish_2054 is inside pot_54. pot_54 is close food_fish_2054. food_fish_2054 is close pot_54. food_fish_2054 released by right hand. 
##############################
From agent.py
walk_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the cutting_board_2080. 
##############################
From agent.py
grab_executor(food_vegetable_2072)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the cutting_board_2080. Grabbing food_vegetable_2072 by right hand. 
##############################
From agent.py
walk_executor(pot_54)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the food_fish_2054. Robot is close to the oven_141. Robot is close to the pot_54. Robot is close to the food_carrot_2047. 
##############################
From agent.py
putin_executor(food_vegetable_2072, pot_54)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the food_fish_2054. Robot is close to the oven_141. Robot is close to the pot_54. Robot is close to the food_carrot_2047. food_vegetable_2072 is close pot_54. pot_54 is close food_vegetable_2072. food_vegetable_2072 is inside pot_54. food_vegetable_2072 released by right hand. 
##############################
From agent.py
grab_executor(pot_54)
Robot find: Robot is close to the knife_2036. Robot is close to the food_vegetable_2072. Robot is close to the food_fish_2054. Robot is close to the oven_141. Robot is close to the pot_54. Robot is close to the food_carrot_2047. Grabbing pot_54 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot find: Robot is close to the knife_2036. Robot is close to the pot_54. Robot is close to the kitchen_counter_132. Robot is close to the faucet_134. 
##############################
From agent.py
walk_executor(kitchen_counter_132)
Robot find: Robot is close to the knife_2036. Robot is close to the pot_54. Robot is close to the kitchen_counter_132. 
##############################
From agent.py
put_executor(knife_2036, kitchen_counter_132)
Robot find: Robot is close to the knife_2036. Robot is close to the pot_54. Robot is close to the kitchen_counter_132. knife_2036 is close kitchen_counter_132. kitchen_counter_132 is close knife_2036. knife_2036 is on kitchen_counter_132. knife_2036 released by left hand. 
##############################
From agent.py
switchon_executor(faucet_134)
Robot find: Robot is close to the knife_2036. Robot is close to the pot_54. Robot is close to the kitchen_counter_132. faucet_134 is turned on. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot find: Robot is close to the knife_2036. Robot is close to the pot_54. Robot is close to the kitchen_counter_132. faucet_134 is turned off. 
##############################
From agent.py
walk_executor(stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. 
##############################
From agent.py
put_executor(pot_54, stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. pot_54 is on stove_2090. pot_54 is close stove_2090. stove_2090 is close pot_54. pot_54 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2090)
Robot find: Robot is close to the pot_54. Robot is close to the kitchen_counter_129. Robot is close to the stove_2090. stove_2090 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Cook a pot of fish soup.
Action History:
['walk_executor(fridge_140)', 'switchoff_executor(fridge_140)', 'open_executor(fridge_140)', 'grab_executor(food_carrot_2047)', 'wash_executor(food_carrot_2047)', 'walk_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(food_fish_2054)', 'grab_executor(food_fish_2054)', 'walk_executor(kitchen_counter_132)', 'put_executor(food_carrot_2047, kitchen_counter_132)', 'switchon_executor(faucet_134)', 'wash_executor(food_fish_2054)', 'switchoff_executor(faucet_134)', 'walk_executor(food_vegetable_2072)', 'grab_executor(food_vegetable_2072)', 'wash_executor(food_vegetable_2072)', 'walk_executor(faucet_308)', 'switchoff_executor(faucet_308)', 'walk_executor(kitchen_counter_132)', 'put_executor(food_fish_2054, kitchen_counter_132)', 'grab_executor(food_carrot_2047)', 'walk_executor(cutting_board_2080)', 'put_executor(food_carrot_2047, cutting_board_2080)', 'walk_executor(knifeblock_52)', 'walk_executor(cupboard_131)', 'open_executor(cupboard_131)', 'walk_executor(cupboard_130)', 'walk_executor(stove_2090)', 'open_executor(stove_2090)', 'walk_executor(microwave_149)', 'open_executor(microwave_149)', 'walk_executor(toaster_144)', 'open_executor(toaster_144)', 'walk_executor(dishwasher_143)', 'open_executor(dishwasher_143)', 'grab_executor(knife_2036)', 'walk_executor(food_carrot_2047)', 'cut_executor(food_carrot_2047)', 'walk_executor(food_fish_2054)', 'grab_executor(food_fish_2054) (Failed)', 'put_executor(food_vegetable_2072, kitchen_counter_132)', 'grab_executor(food_fish_2054)', 'walk_executor(cutting_board_2080)', 'put_executor(food_fish_2054, cutting_board_2080)', 'walk_executor(food_fish_2054)', 'cut_executor(food_fish_2054)', 'walk_executor(food_vegetable_2072)', 'grab_executor(food_vegetable_2072)', 'walk_executor(cutting_board_2080)', 'put_executor(food_vegetable_2072, cutting_board_2080)', 'walk_executor(food_vegetable_2072)', 'cut_executor(food_vegetable_2072)', 'walk_executor(pot_54)', 'open_executor(pot_54)', 'walk_executor(food_carrot_2047)', 'grab_executor(food_carrot_2047)', 'walk_executor(pot_54)', 'putin_executor(food_carrot_2047, pot_54)', 'walk_executor(food_fish_2054)', 'grab_executor(food_fish_2054)', 'walk_executor(pot_54)', 'putin_executor(food_fish_2054, pot_54)', 'walk_executor(food_vegetable_2072)', 'grab_executor(food_vegetable_2072)', 'walk_executor(pot_54)', 'putin_executor(food_vegetable_2072, pot_54)', 'grab_executor(pot_54)', 'walk_executor(faucet_134)', 'walk_executor(kitchen_counter_132)', 'put_executor(knife_2036, kitchen_counter_132)', 'switchon_executor(faucet_134)', 'switchoff_executor(faucet_134)', 'walk_executor(stove_2090)', 'put_executor(pot_54, stove_2090)', 'switchon_executor(stove_2090)']
Time info:
Time consume: 323 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 83
goal generate times: 4
goal correct times: 0
action_num: 76

Task complete rate:
1
Scene_id: 2
##############################
