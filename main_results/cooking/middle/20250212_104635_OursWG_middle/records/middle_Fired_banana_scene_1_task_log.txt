From agent.py
Reset goals: The sub-goals are: 
['1. Peel and slice the bananas.', '2. Heat oil in a frying pan.', '3. Fry the banana slices in the hot oil until golden brown.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_banana_2083_around_table_114(food_banana:item):
    goal: not unknown(food_banana)
    body:
        assert is_food_banana(food_banana)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==114
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(food_banana,table_instance)
        else:
            exp(food_banana,table_instance)
    eff:
        unknown[food_banana]=False
        close[food_banana,table_instance]=True
        close[table_instance,food_banana]=True
    

behavior find_knife_2035_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
behavior peel_bananas(banana:item):
    body:
        achieve_once visited(banana) # Assume visiting the banana represents peeling

behavior slice_bananas(banana:item, knife:item, cutting_board:item):
    body:
        achieve_once on(banana, cutting_board) # Place the banana on the cutting board
        achieve_once cut(banana) # Slice the banana

behavior __goal__():
    body:
        bind banana: item where:
            is_food_banana(banana)
        # Select a banana to peel and slice

        bind knife: item where:
            is_knife(knife)
        # Select a knife for slicing

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        peel_bananas(banana)
        slice_bananas(banana, knife, cutting_board)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior peel_bananas(banana:item):
    body:
        achieve_once visited(banana) # Assume visiting the banana represents peeling

behavior slice_bananas(banana:item, knife:item, cutting_board:item):
    body:
        achieve_once on(banana, cutting_board) # Place the banana on the cutting board
        achieve_once cut(banana) # Slice the banana

behavior __goal__():
    body:
        bind banana: item where:
            is_food_banana(banana)
        # Select a banana to peel and slice

        bind knife: item where:
            is_knife(knife)
        # Select a knife for slicing

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        peel_bananas(banana)
        slice_bananas(banana, knife, cutting_board)

##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(food_banana_2083, table_114)walk_executor(food_banana_2083)obs(food_banana_2083, look around this place)grab_executor(food_banana_2083)walk_executor(cutting_board_2123)put_executor(food_banana_2083, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_banana_2083)cut_executor(food_banana_2083)
##############################
From agent.py
walk_executor(table_114)
Robot find: mat_102, cup_2049, pillow_103, pillow_104, pillow_105, pillow_106, lighter_2004, lighter_2039, box_2038, clothes_hat_2117, milk_2115, cup_2134, check_2058, drawing_110, drawing_111, clothes_gloves_2118, cup_2132, food_bread_2084, dry_pasta_2114, knife_2122, cup_2133, table_cloth_2005, food_food_2021, Robot is close to the table_114. Robot is close to the mat_102. 
##############################
From agent.py
exp(food_banana_2083, table_114)
Fail to find food_banana_2083 around table_114. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_banana_2083, fridge_126)walk_executor(food_banana_2083)obs(food_banana_2083, look around this place)grab_executor(food_banana_2083)walk_executor(cutting_board_2123)put_executor(food_banana_2083, cutting_board_2123)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_banana_2083)cut_executor(food_banana_2083)
##############################
From agent.py
walk_executor(fridge_126)
Robot find: food_food_1000, Robot is close to the fridge_126. 
##############################
From agent.py
switchoff_executor(fridge_126)
Robot find: Robot is close to the fridge_126. fridge_126 is turned off. 
##############################
From agent.py
open_executor(fridge_126)
Robot find: food_onion_2048, food_food_2046, food_food_2073, food_steak_2080, food_apple_2081, food_bacon_2082, food_banana_2083, food_cake_2085, food_carrot_2086, food_cereal_2087, food_cheese_2088, food_chicken_2089, food_dessert_2090, food_donut_2091, food_egg_2092, food_fish_2093, food_food_2094, food_fruit_2095, food_hamburger_2096, food_ice_cream_2097, food_jam_2098, food_lemon_2100, food_noodles_2101, food_oatmeal_2102, food_orange_2103, food_onion_2104, food_peanut_butter_2105, food_pizza_2106, food_potato_2107, food_rice_2108, food_salt_2109, food_snack_2110, food_sugar_2111, food_turkey_2112, food_vegetable_2113, food_food_2001, sauce_2148, Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. fridge_126 is opened. 
##############################
From agent.py
exp(food_banana_2083, fridge_126)
Find food_banana_2083. 
##############################
From agent.py-> find a plan in act()
obs(food_banana_2083, look around this place)grab_executor(food_banana_2083)walk_executor(cutting_board_2123)put_executor(food_banana_2083, cutting_board_2123)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_banana_2083)cut_executor(food_banana_2083)
##############################
From agent.py
obs(food_banana_2083, look around this place)
Get this information:  food_banana_2083 is inside dining_room_41. food_banana_2083 is inside fridge_126. food_banana_2083 is close to fridge_126. food_banana_2083 is close to character_240. food_banana_2083 is CLEAN.
##############################
From agent.py
grab_executor(food_banana_2083)
Robot find: Robot is close to the food_onion_2048. Robot is close to the food_food_2046. Robot is close to the food_food_2073. Robot is close to the food_steak_2080. Robot is close to the food_apple_2081. Robot is close to the food_bacon_2082. Robot is close to the food_banana_2083. Robot is close to the food_cake_2085. Robot is close to the food_carrot_2086. Robot is close to the food_cereal_2087. Robot is close to the food_cheese_2088. Robot is close to the food_chicken_2089. Robot is close to the food_dessert_2090. Robot is close to the food_donut_2091. Robot is close to the food_egg_2092. Robot is close to the food_fish_2093. Robot is close to the food_food_2094. Robot is close to the food_fruit_2095. Robot is close to the food_hamburger_2096. Robot is close to the food_ice_cream_2097. Robot is close to the food_jam_2098. Robot is close to the food_lemon_2100. Robot is close to the food_noodles_2101. Robot is close to the food_oatmeal_2102. Robot is close to the food_orange_2103. Robot is close to the food_onion_2104. Robot is close to the food_peanut_butter_2105. Robot is close to the food_pizza_2106. Robot is close to the food_potato_2107. Robot is close to the food_rice_2108. Robot is close to the food_salt_2109. Robot is close to the food_snack_2110. Robot is close to the food_sugar_2111. Robot is close to the food_turkey_2112. Robot is close to the food_vegetable_2113. Robot is close to the food_food_2001. Robot is close to the sauce_2148. Robot is close to the fridge_126. Grabbing food_banana_2083 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot find: fork_2150, bowl_2142, food_salt_2041, pot_78, pot_2138, bowl_2140, bowl_2141, fork_2151, plate_2152, Robot is close to the food_banana_2083. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
put_executor(food_banana_2083, cutting_board_2123)
Robot find: Robot is close to the food_banana_2083. Robot is close to the cutting_board_2123. Robot is close to the kitchen_counter_119. cutting_board_2123 is close food_banana_2083. food_banana_2083 is close cutting_board_2123. food_banana_2083 is on cutting_board_2123. food_banana_2083 released by right hand. 
##############################
From agent.py
walk_executor(knife_2122)
Robot find: Robot is close to the knife_2122. Robot is close to the table_114. 
##############################
From agent.py
grab_executor(knife_2122)
Robot find: Robot is close to the knife_2122. Robot is close to the table_114. Grabbing knife_2122 by right hand. 
##############################
From agent.py
walk_executor(food_banana_2083)
Robot find: Robot is close to the knife_2122. Robot is close to the cutting_board_2123. Robot is close to the food_banana_2083. 
##############################
From agent.py
cut_executor(food_banana_2083)
Robot find: Robot is close to the knife_2122. Robot is close to the cutting_board_2123. Robot is close to the food_banana_2083. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2154_around_stove_2135(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2135
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_instrument_guitar_2028_around_dresser_274(instrument_guitar:item):
    goal: not unknown(instrument_guitar)
    body:
        assert is_instrument_guitar(instrument_guitar)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==274
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(instrument_guitar,dresser_instance)
        else:
            exp(instrument_guitar,dresser_instance)
    eff:
        unknown[instrument_guitar]=False
        close[instrument_guitar,dresser_instance]=True
        close[dresser_instance,instrument_guitar]=True
    

behavior find_oil_2013_around_cupboard_118(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(oil,cupboard_instance)
        else:
            exp(oil,cupboard_instance)
    eff:
        unknown[oil]=False
        close[oil,cupboard_instance]=True
        close[cupboard_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_frying_pan(pan:item):
    body:
        achieve_once visited(pan)

behavior place_pan_on_stove(pan:item, stove:item):
    body:
        achieve_once on(pan, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior add_oil_to_pan(oil:item, pan:item):
    body:
        achieve_once inside(oil, pan)

behavior __goal__():
    body:
        bind pan: item where:
            is_fryingpan(pan)

        bind stove: item where:
            is_stove(stove)

        bind oil: item where:
            is_oil(oil)

        find_frying_pan(pan)
        place_pan_on_stove(pan, stove)
        add_oil_to_pan(oil, pan)
        turn_on_stove(stove)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior find_frying_pan(pan:item):
    body:
        achieve_once visited(pan)

behavior place_pan_on_stove(pan:item, stove:item):
    body:
        achieve_once on(pan, stove)

behavior turn_on_stove(stove:item):
    body:
        achieve is_on(stove)

behavior add_oil_to_pan(oil:item, pan:item):
    body:
        achieve_once inside(oil, pan)

behavior __goal__():
    body:
        bind pan: item where:
            is_fryingpan(pan)

        bind stove: item where:
            is_stove(stove)

        bind oil: item where:
            is_oil(oil)

        find_frying_pan(pan)
        place_pan_on_stove(pan, stove)
        add_oil_to_pan(oil, pan)
        turn_on_stove(stove)

##############################
From agent.py-> find a plan in act()
walk_executor(stove_2135)open_executor(stove_2135)exp(fryingpan_2154, stove_2135)walk_executor(fryingpan_2154)obs(fryingpan_2154, look around this place)grab_executor(fryingpan_2154)walk_executor(stove_2135)put_executor(fryingpan_2154, stove_2135)walk_executor(cupboard_118)open_executor(cupboard_118)exp(oil_2149, cupboard_118)walk_executor(oil_2149)grab_executor(oil_2149)walk_executor(fryingpan_2154)putin_executor(oil_2149, fryingpan_2154)walk_executor(stove_2135)switchon_executor(stove_2135)
##############################
From agent.py
walk_executor(stove_2135)
Robot find: Robot is close to the knife_2122. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. 
##############################
From agent.py
open_executor(stove_2135)
Robot find: Robot is close to the knife_2122. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. stove_2135 is opened. 
##############################
From agent.py
exp(fryingpan_2154, stove_2135)
Fail to find fryingpan_2154 around stove_2135. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(fryingpan_2154, kitchen_counter_122)walk_executor(fryingpan_2154)obs(fryingpan_2154, look around this place)grab_executor(fryingpan_2154)walk_executor(stove_2135)put_executor(fryingpan_2154, stove_2135)walk_executor(kitchen_counter_122)exp(oil_2149, kitchen_counter_122)walk_executor(oil_2149)grab_executor(oil_2149)walk_executor(fryingpan_2154)putin_executor(oil_2149, fryingpan_2154)walk_executor(stove_2135)switchon_executor(stove_2135)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: spectacles_2153, fryingpan_2154, Robot is close to the knife_2122. Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(fryingpan_2154, kitchen_counter_122)
Find fryingpan_2154. 
##############################
From agent.py-> find a plan in act()
walk_executor(fryingpan_2154)obs(fryingpan_2154, look around this place)grab_executor(fryingpan_2154)walk_executor(stove_2135)put_executor(fryingpan_2154, stove_2135)walk_executor(kitchen_counter_122)exp(oil_2149, kitchen_counter_122)walk_executor(oil_2149)grab_executor(oil_2149)walk_executor(fryingpan_2154)putin_executor(oil_2149, fryingpan_2154)walk_executor(stove_2135)switchon_executor(stove_2135)
##############################
From agent.py
walk_executor(fryingpan_2154)
Robot find: Robot is close to the knife_2122. Robot is close to the kitchen_counter_122. Robot is close to the fryingpan_2154. 
##############################
From agent.py
obs(fryingpan_2154, look around this place)
Get this information:  fryingpan_2154 is close to kitchen_counter_122. fryingpan_2154 is close to character_240. fryingpan_2154 is on kitchen_counter_122. fryingpan_2154 is inside dining_room_41. fryingpan_2154 is CLEAN.
##############################
From agent.py
grab_executor(fryingpan_2154)
Robot find: Robot is close to the knife_2122. Robot is close to the kitchen_counter_122. Robot is close to the fryingpan_2154. Grabbing fryingpan_2154 by left hand. 
##############################
From agent.py
walk_executor(stove_2135)
Robot find: Robot is close to the knife_2122. Robot is close to the fryingpan_2154. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. 
##############################
From agent.py
put_executor(fryingpan_2154, stove_2135)
Robot find: Robot is close to the knife_2122. Robot is close to the fryingpan_2154. Robot is close to the kitchen_counter_119. Robot is close to the stove_2135. stove_2135 is close fryingpan_2154. fryingpan_2154 is close stove_2135. fryingpan_2154 is on stove_2135. fryingpan_2154 released by left hand. 
##############################
From agent.py
walk_executor(kitchen_counter_122)
Robot find: Robot is close to the knife_2122. Robot is close to the kitchen_counter_122. 
##############################
From agent.py
exp(oil_2149, kitchen_counter_122)
Fail to find oil_2149 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(oil_2149, cupboard_118)walk_executor(oil_2149)grab_executor(oil_2149)walk_executor(fryingpan_2154)putin_executor(oil_2149, fryingpan_2154)walk_executor(stove_2135)switchon_executor(stove_2135)
##############################
From agent.py
walk_executor(cupboard_118)
Robot find: Robot is close to the knife_2122. Robot is close to the cupboard_118. 
##############################
From agent.py
open_executor(cupboard_118)
Robot find: tea_2066, knife_2037, food_peanut_butter_2077, Robot is close to the knife_2122. Robot is close to the tea_2066. Robot is close to the knife_2037. Robot is close to the cupboard_118. Robot is close to the food_peanut_butter_2077. cupboard_118 is opened. 
##############################
From agent.py
exp(oil_2149, cupboard_118)
Fail to find oil_2149 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(oil_2149, cupboard_117)walk_executor(oil_2149)grab_executor(oil_2149)walk_executor(fryingpan_2154)putin_executor(oil_2149, fryingpan_2154)walk_executor(stove_2135)switchon_executor(stove_2135)
##############################
From agent.py
walk_executor(cupboard_117)
Robot find: coffee_filter_2053, Robot is close to the knife_2122. Robot is close to the coffee_filter_2053. Robot is close to the cupboard_117. 
##############################
From agent.py
exp(oil_2149, cupboard_117)
Fail to find oil_2149 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_120)exp(oil_2149, sink_120)walk_executor(oil_2149)grab_executor(oil_2149)walk_executor(fryingpan_2154)putin_executor(oil_2149, fryingpan_2154)walk_executor(stove_2135)switchon_executor(stove_2135)
##############################
From agent.py
walk_executor(sink_120)
Robot find: soap_2126, soap_2010, ice_2024, Robot is close to the knife_2122. Robot is close to the sink_120. Robot is close to the kitchen_counter_119. 
##############################
From agent.py -> query_LLM_human
Record from func query_LLM_human in agent.py
Question: Can you help me to find oil_2149 ?
Answer: Go to dining_room_41. Once there, locate kitchen_counter_123. You will find oil_2149 on top of kitchen_counter_123.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_41. Once there, locate kitchen_counter_123. You will find oil_2149 on top of kitchen_counter_123.

The actions you have taken:
Action 1: Walk to table_114.
Action 2: look for food_banana_2083 around table_114.
Action 3: Walk to fridge_126.
Action 4: Switch off fridge_126.
Action 5: Open fridge_126.
Action 6: look for food_banana_2083 around fridge_126.
Action 7: Observe around food_banana_2083 with the question of look around this place.
Action 8: Grab food_banana_2083.
Action 9: Walk to cutting_board_2123.
Action 10: Put food_banana_2083 on cutting_board_2123.
Action 11: Walk to knife_2122.
Action 12: Grab knife_2122.
Action 13: Walk to food_banana_2083.
Action 14: Cut food_banana_2083.
Action 15: Walk to stove_2135.
Action 16: Open stove_2135.
Action 17: look for fryingpan_2154 around stove_2135.
Action 18: Walk to kitchen_counter_122.
Action 19: look for fryingpan_2154 around kitchen_counter_122.
Action 20: Walk to fryingpan_2154.
Action 21: Observe around fryingpan_2154 with the question of look around this place.
Action 22: Grab fryingpan_2154.
Action 23: Walk to stove_2135.
Action 24: Put fryingpan_2154 on stove_2135.
Action 25: Walk to kitchen_counter_122.
Action 26: look for oil_2149 around kitchen_counter_122.
Action 27: Walk to cupboard_118.
Action 28: Open cupboard_118.
Action 29: look for oil_2149 around cupboard_118.
Action 30: Walk to cupboard_117.
Action 31: look for oil_2149 around cupboard_117.
Action 32: Walk to sink_120.

##############################
From agent.py
exp(oil_2149, sink_120)
Fail to find oil_2149 around sink_120. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(oil_2149, kitchen_counter_123)walk_executor(oil_2149)grab_executor(oil_2149)walk_executor(fryingpan_2154)putin_executor(oil_2149, fryingpan_2154)walk_executor(stove_2135)switchon_executor(stove_2135)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Robot find: tray_2068, oil_2149, knife_2035, food_kiwi_2054, food_orange_2027, Robot is close to the knife_2122. Robot is close to the kitchen_counter_123. 
##############################
From agent.py
exp(oil_2149, kitchen_counter_123)
Find oil_2149. 
##############################
From agent.py-> find a plan in act()
walk_executor(oil_2149)grab_executor(oil_2149)walk_executor(fryingpan_2154)putin_executor(oil_2149, fryingpan_2154)walk_executor(stove_2135)switchon_executor(stove_2135)
##############################
From agent.py
walk_executor(oil_2149)
Robot find: Robot is close to the knife_2122. Robot is close to the kitchen_counter_123. Robot is close to the oil_2149. 
##############################
From agent.py
grab_executor(oil_2149)
Robot find: Robot is close to the knife_2122. Robot is close to the kitchen_counter_123. Robot is close to the oil_2149. Grabbing oil_2149 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2154)
Robot find: Robot is close to the knife_2122. Robot is close to the oil_2149. Robot is close to the fryingpan_2154. Robot is close to the stove_2135. 
##############################
From agent.py
putin_executor(oil_2149, fryingpan_2154)
Robot find: Robot is close to the knife_2122. Robot is close to the oil_2149. Robot is close to the fryingpan_2154. Robot is close to the stove_2135. oil_2149 is inside fryingpan_2154. fryingpan_2154 is close oil_2149. oil_2149 is close fryingpan_2154. oil_2149 released by left hand. 
##############################
From agent.py
walk_executor(stove_2135)
Robot find: Robot is close to the knife_2122. Robot is close to the stove_2135. Robot is close to the kitchen_counter_119. 
##############################
From agent.py
switchon_executor(stove_2135)
Robot find: Robot is close to the knife_2122. Robot is close to the stove_2135. Robot is close to the kitchen_counter_119. stove_2135 is turned on. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_78_around_pot_78(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind pot_instance:item where:
            is_pot(pot_instance) and id[pot_instance]==78
        achieve close_char(char,pot_instance)
        if can_open(pot_instance):
            achieve_once open(pot_instance)
            exp(pot,pot_instance)
        else:
            exp(pot,pot_instance)
    eff:
        unknown[pot]=False
        close[pot,pot_instance]=True
        close[pot_instance,pot]=True
    

behavior find_wooden_spoon_2000_around_oven_127(wooden_spoon:item):
    goal: not unknown(wooden_spoon)
    body:
        assert is_wooden_spoon(wooden_spoon)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==127
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(wooden_spoon,oven_instance)
        else:
            exp(wooden_spoon,oven_instance)
    eff:
        unknown[wooden_spoon]=False
        close[wooden_spoon,oven_instance]=True
        close[oven_instance,wooden_spoon]=True
    

behavior find_measuring_cup_2012_around_cup_2134(measuring_cup:item):
    goal: not unknown(measuring_cup)
    body:
        assert is_measuring_cup(measuring_cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2134
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(measuring_cup,cup_instance)
        else:
            exp(measuring_cup,cup_instance)
    eff:
        unknown[measuring_cup]=False
        close[measuring_cup,cup_instance]=True
        close[cup_instance,measuring_cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior fry_banana_slices(banana:item, fryingpan:item):
    body:
        achieve_once inside(banana, fryingpan) # Place the banana slices inside the frying pan

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove)
        # Select the stove

        bind banana: item where:
            is_food_banana(banana) and cut(banana)
        # Select the cut banana

        bind fryingpan: item where:
            is_fryingpan(fryingpan) and on(fryingpan, stove)
        # Select a frying pan that is on the stove

        bind oil: item where:
            is_oil(oil) and inside(oil, fryingpan)
        # Ensure the frying pan has oil inside using the correct bind for oil

        fry_banana_slices(banana, fryingpan) # Fry the banana slices in the frying pan

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fry_banana_slices(banana:item, fryingpan:item):
    body:
        achieve_once inside(banana, fryingpan) # Place the banana slices inside the frying pan

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove)
        # Select the stove

        bind banana: item where:
            is_food_banana(banana) and cut(banana)
        # Select the cut banana

        bind fryingpan: item where:
            is_fryingpan(fryingpan) and on(fryingpan, stove)
        # Select a frying pan that is on the stove

        bind oil: item where:
            is_oil(oil) and inside(oil, fryingpan)
        # Ensure the frying pan has oil inside using the correct bind for oil

        fry_banana_slices(banana, fryingpan) # Fry the banana slices in the frying pan

##############################
From agent.py-> find a plan in act()
walk_executor(food_banana_2083)grab_executor(food_banana_2083)walk_executor(fryingpan_2154)putin_executor(food_banana_2083, fryingpan_2154)
##############################
From agent.py
walk_executor(food_banana_2083)
Robot find: Robot is close to the knife_2122. Robot is close to the cutting_board_2123. Robot is close to the food_banana_2083. 
##############################
From agent.py
grab_executor(food_banana_2083)
Robot find: Robot is close to the knife_2122. Robot is close to the cutting_board_2123. Robot is close to the food_banana_2083. Grabbing food_banana_2083 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2154)
Robot find: Robot is close to the knife_2122. Robot is close to the food_banana_2083. Robot is close to the fryingpan_2154. Robot is close to the stove_2135. 
##############################
From agent.py
putin_executor(food_banana_2083, fryingpan_2154)
Robot find: Robot is close to the knife_2122. Robot is close to the food_banana_2083. Robot is close to the fryingpan_2154. Robot is close to the stove_2135. food_banana_2083 is inside fryingpan_2154. food_banana_2083 is close fryingpan_2154. fryingpan_2154 is close food_banana_2083. food_banana_2083 released by left hand. 
##############################
From agent.py -> evaluate_current_subgoal()
The evaluation result for current subgoal: Yes
The feedback instruction: None
##############################
Task Summary:
Task Goal:
Make oil fried banana.
Action History:
['walk_executor(table_114)', 'walk_executor(fridge_126)', 'switchoff_executor(fridge_126)', 'open_executor(fridge_126)', 'grab_executor(food_banana_2083)', 'walk_executor(cutting_board_2123)', 'put_executor(food_banana_2083, cutting_board_2123)', 'walk_executor(knife_2122)', 'grab_executor(knife_2122)', 'walk_executor(food_banana_2083)', 'cut_executor(food_banana_2083)', 'walk_executor(stove_2135)', 'open_executor(stove_2135)', 'walk_executor(kitchen_counter_122)', 'walk_executor(fryingpan_2154)', 'grab_executor(fryingpan_2154)', 'walk_executor(stove_2135)', 'put_executor(fryingpan_2154, stove_2135)', 'walk_executor(kitchen_counter_122)', 'walk_executor(cupboard_118)', 'open_executor(cupboard_118)', 'walk_executor(cupboard_117)', 'walk_executor(sink_120)', 'walk_executor(kitchen_counter_123)', 'walk_executor(oil_2149)', 'grab_executor(oil_2149)', 'walk_executor(fryingpan_2154)', 'putin_executor(oil_2149, fryingpan_2154)', 'walk_executor(stove_2135)', 'switchon_executor(stove_2135)', 'walk_executor(food_banana_2083)', 'grab_executor(food_banana_2083)', 'walk_executor(fryingpan_2154)', 'putin_executor(food_banana_2083, fryingpan_2154)']
Time info:
Time consume: 205 seconds
Exp_helper query times: 1
Guidance query times: 0
library scale: 22
goal generate times: 3
goal correct times: 0
action_num: 34

Task complete rate:
1
Scene_id: 1
##############################
