From agent.py
Reset goals: The sub-goals are: 
['Prepare a cup of water on the nightstand.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2089_around_kitchen_counter_132(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

behavior find_oil_2005_around_kitchen_counter_132(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(oil,kitchen_counter_instance)
        else:
            exp(oil,kitchen_counter_instance)
    eff:
        unknown[oil]=False
        close[oil,kitchen_counter_instance]=True
        close[kitchen_counter_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_cup_with_water(cup:item, faucet:item):
    body:
        achieve has_water(cup)
        # Ensure the cup is filled with water

behavior place_cup_on_nightstand(cup:item, nightstand:item):
    body:
        achieve on(cup, nightstand)
        # Place the cup on the nightstand

behavior __goal__():
    body:
        bind nightstand: item where:
            is_nightstand(nightstand)
        # Select the nightstand

        bind cup: item where:
            is_cup(cup) and not has_water(cup)
        # Select a cup without water

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        fill_cup_with_water(cup, faucet)
        place_cup_on_nightstand(cup, nightstand)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior fill_cup_with_water(cup:item, faucet:item):
    body:
        achieve has_water(cup)
        # Ensure the cup is filled with water

behavior place_cup_on_nightstand(cup:item, nightstand:item):
    body:
        achieve on(cup, nightstand)
        # Place the cup on the nightstand

behavior __goal__():
    body:
        bind nightstand: item where:
            is_nightstand(nightstand)
        # Select the nightstand

        bind cup: item where:
            is_cup(cup) and not has_water(cup)
        # Select a cup without water

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        fill_cup_with_water(cup, faucet)
        place_cup_on_nightstand(cup, nightstand)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(cup_2087, kitchen_counter_132)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Find pot_54. Find tray_142. Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is no longer inside home_office_161.
##############################
From agent.py
exp(cup_2087, kitchen_counter_132)
Fail to find cup_2087 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(cup_2087, cupboard_131)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(cupboard_131)
Robot is inside dining_room_1. Robot is close cupboard_131. Robot is no longer close kitchen_counter_132.
##############################
From agent.py
open_executor(cupboard_131)
Robot is inside dining_room_1. Robot is close cupboard_131. 
##############################
From agent.py
exp(cup_2087, cupboard_131)
Fail to find cup_2087 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(cup_2087, cupboard_130)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(cupboard_130)
Find blender_2032. Find tea_bag_2017. Robot is inside dining_room_1. Robot is close blender_2032. Robot is close tea_bag_2017. Robot is close cupboard_130. Robot is no longer close cupboard_131.
##############################
From agent.py
exp(cup_2087, cupboard_130)
Fail to find cup_2087 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(nightstand_262)exp(cup_2087, nightstand_262)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(nightstand_262)
Find mat_237. Find headset_2086. Find pillow_239. Find drawing_238. Robot is inside bedroom_220. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. Robot is no longer inside dining_room_1.Robot is no longer close blender_2032.Robot is no longer close tea_bag_2017.Robot is no longer close cupboard_130.
##############################
From agent.py
exp(cup_2087, nightstand_262)
Fail to find cup_2087 around nightstand_262. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(cup_2087, kitchen_counter_128)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Find spectacles_2106. Find cutting_board_2080. Find food_orange_2008. Robot is inside dining_room_1. Robot is close kitchen_counter_128. Robot is close floor_15. Robot is no longer inside bedroom_220.Robot is no longer close floor_221.Robot is no longer close floor_222.Robot is no longer close nightstand_262.
##############################
From agent.py
exp(cup_2087, kitchen_counter_128)
Fail to find cup_2087 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_129)exp(cup_2087, kitchen_counter_129)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(kitchen_counter_129)
Find pot_2093. Find oil_2102. Find fryingpan_2107. Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is no longer close kitchen_counter_128.Robot is no longer close floor_15.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2087 ?
Answer: Go to dining_room_1. Once inside, find table_123. cup_2087 is on top of table_123.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_1. Once inside, find table_123. cup_2087 is on top of table_123.

The actions you have taken:
Action 1: Walk to kitchen_counter_132.
Action 2: look for cup_2087 around kitchen_counter_132.
Action 3: Walk to cupboard_131.
Action 4: Open cupboard_131.
Action 5: look for cup_2087 around cupboard_131.
Action 6: Walk to cupboard_130.
Action 7: look for cup_2087 around cupboard_130.
Action 8: Walk to nightstand_262.
Action 9: look for cup_2087 around nightstand_262.
Action 10: Walk to kitchen_counter_128.
Action 11: look for cup_2087 around kitchen_counter_128.
Action 12: Walk to kitchen_counter_129.

##############################
From agent.py
exp(cup_2087, kitchen_counter_129)
Fail to find cup_2087 around kitchen_counter_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(cup_2087, table_123)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(table_123)
Find mat_114. Find drawing_118. Find laptop_2015. Find fork_2103. Find bowl_2095. Find cup_2087. Find cup_2088. Find mouse_2003. Find homework_2011. Find shoes_2001. Robot is inside dining_room_1. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer close kitchen_counter_129.
##############################
From agent.py
exp(cup_2087, table_123)
Find cup_2087. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(cup_2087)
Robot is inside dining_room_1. Robot is close table_123. Robot is close cup_2087. Robot is no longer close floor_17.Robot is no longer close mat_114.
##############################
From agent.py
grab_executor(cup_2087)
Robot is inside dining_room_1. Robot is close table_123. Robot is close cup_2087. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close table_123.
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(nightstand_262)
Robot is inside bedroom_220. Robot is close cup_2087. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
put_executor(cup_2087, nightstand_262)
Robot is inside bedroom_220. Robot is close cup_2087. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. cup_2087 released by right hand. 
##############################
From agent.py
Human Instruction: You need to fill the cup with water from the faucet before placing it on the nightstand. Currently, the faucet was only switched off, and the cup has been placed on the nightstand without water in it.

The actions you have taken:
Action 1: Walk to kitchen_counter_132.
Action 2: look for cup_2087 around kitchen_counter_132.
Action 3: Walk to cupboard_131.
Action 4: Open cupboard_131.
Action 5: look for cup_2087 around cupboard_131.
Action 6: Walk to cupboard_130.
Action 7: look for cup_2087 around cupboard_130.
Action 8: Walk to nightstand_262.
Action 9: look for cup_2087 around nightstand_262.
Action 10: Walk to kitchen_counter_128.
Action 11: look for cup_2087 around kitchen_counter_128.
Action 12: Walk to kitchen_counter_129.
Action 13: look for cup_2087 around kitchen_counter_129.
Action 14: Walk to table_123.
Action 15: look for cup_2087 around table_123.
Action 16: Walk to cup_2087.
Action 17: Grab cup_2087.
Action 18: Walk to faucet_134.
Action 19: Switch off faucet_134.
Action 20: Walk to nightstand_262.
Action 21: Put cup_2087 on nightstand_262.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2006_around_nightstand_373(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==373
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(cup,nightstand_instance)
        else:
            exp(cup,nightstand_instance)
    eff:
        unknown[cup]=False
        close[cup,nightstand_instance]=True
        close[nightstand_instance,cup]=True
    

behavior find_oil_2102_around_oil_2102(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind oil_instance:item where:
            is_oil(oil_instance) and id[oil_instance]==2102
        achieve close_char(char,oil_instance)
        if can_open(oil_instance):
            achieve_once open(oil_instance)
            exp(oil,oil_instance)
        else:
            exp(oil,oil_instance)
    eff:
        unknown[oil]=False
        close[oil,oil_instance]=True
        close[oil_instance,oil]=True
    

#exp_behavior_end

#goal_representation
behavior fill_cup_with_water(cup:item, faucet:item):
    body:
        achieve has_water(cup)
        # Ensure the cup is filled with water

behavior place_cup_on_nightstand(cup:item, nightstand:item):
    body:
        achieve on(cup, nightstand)
        # Place the cup on the nightstand 

behavior __goal__():
    body:
        bind nightstand: item where:
            is_nightstand(nightstand)
        # Select the nightstand

        bind cup: item where:
            is_cup(cup) and not has_water(cup)
        # Select a cup without water

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        fill_cup_with_water(cup, faucet)
        place_cup_on_nightstand(cup, nightstand)
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior fill_cup_with_water(cup:item, faucet:item):
    body:
        achieve has_water(cup)
        # Ensure the cup is filled with water

behavior place_cup_on_nightstand(cup:item, nightstand:item):
    body:
        achieve on(cup, nightstand)
        # Place the cup on the nightstand 

behavior __goal__():
    body:
        bind nightstand: item where:
            is_nightstand(nightstand)
        # Select the nightstand

        bind cup: item where:
            is_cup(cup) and not has_water(cup)
        # Select a cup without water

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        fill_cup_with_water(cup, faucet)
        place_cup_on_nightstand(cup, nightstand)
##############################
From agent.py-> find a plan in act()
grab_executor(cup_2087)walk_executor(faucet_134)switchon_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
grab_executor(cup_2087)
Robot is inside bedroom_220. Robot is close cup_2087. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer inside bedroom_220.Robot is no longer close nightstand_262.Robot is no longer close floor_221.Robot is no longer close floor_222.
##############################
From agent.py
switchon_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(nightstand_262)
Robot is inside bedroom_220. Robot is close cup_2087. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
put_executor(cup_2087, nightstand_262)
Robot is inside bedroom_220. Robot is close cup_2087. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. cup_2087 released by right hand. 
##############################
From agent.py
Human Instruction: You need to fill the cup with water from the faucet. Currently, the cup is placed on the nightstand without any water in it.

The actions you have taken:
Action 1: Walk to kitchen_counter_132.
Action 2: look for cup_2087 around kitchen_counter_132.
Action 3: Walk to cupboard_131.
Action 4: Open cupboard_131.
Action 5: look for cup_2087 around cupboard_131.
Action 6: Walk to cupboard_130.
Action 7: look for cup_2087 around cupboard_130.
Action 8: Walk to nightstand_262.
Action 9: look for cup_2087 around nightstand_262.
Action 10: Walk to kitchen_counter_128.
Action 11: look for cup_2087 around kitchen_counter_128.
Action 12: Walk to kitchen_counter_129.
Action 13: look for cup_2087 around kitchen_counter_129.
Action 14: Walk to table_123.
Action 15: look for cup_2087 around table_123.
Action 16: Walk to cup_2087.
Action 17: Grab cup_2087.
Action 18: Walk to faucet_134.
Action 19: Switch off faucet_134.
Action 20: Walk to nightstand_262.
Action 21: Put cup_2087 on nightstand_262.
Action 22: Grab cup_2087.
Action 23: Walk to faucet_134.
Action 24: Switch on faucet_134.
Action 25: Switch off faucet_134.
Action 26: Walk to nightstand_262.
Action 27: Put cup_2087 on nightstand_262.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2088_around_cup_2088(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2088
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(cup,cup_instance)
        else:
            exp(cup,cup_instance)
    eff:
        unknown[cup]=False
        close[cup,cup_instance]=True
        close[cup_instance,cup]=True
    

behavior find_oil_2102_around_oil_2102(oil:item):
    goal: not unknown(oil)
    body:
        assert is_oil(oil)
        bind oil_instance:item where:
            is_oil(oil_instance) and id[oil_instance]==2102
        achieve close_char(char,oil_instance)
        if can_open(oil_instance):
            achieve_once open(oil_instance)
            exp(oil,oil_instance)
        else:
            exp(oil,oil_instance)
    eff:
        unknown[oil]=False
        close[oil,oil_instance]=True
        close[oil_instance,oil]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_cup_with_water(cup:item, faucet:item):
    body:
        achieve has_water(cup)
        # Ensure the cup is filled with water

behavior place_cup_on_nightstand(cup:item, nightstand:item):
    body:
        achieve on(cup, nightstand)
        # Place the cup on the nightstand

behavior __goal__():
    body:
        bind nightstand: item where:
            is_nightstand(nightstand)
        # Select the nightstand

        bind cup: item where:
            is_cup(cup) and not has_water(cup)
        # Select a cup without water

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        fill_cup_with_water(cup, faucet)
        place_cup_on_nightstand(cup, nightstand)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_cup_with_water(cup:item, faucet:item):
    body:
        achieve has_water(cup)
        # Ensure the cup is filled with water

behavior place_cup_on_nightstand(cup:item, nightstand:item):
    body:
        achieve on(cup, nightstand)
        # Place the cup on the nightstand

behavior __goal__():
    body:
        bind nightstand: item where:
            is_nightstand(nightstand)
        # Select the nightstand

        bind cup: item where:
            is_cup(cup) and not has_water(cup)
        # Select a cup without water

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        fill_cup_with_water(cup, faucet)
        place_cup_on_nightstand(cup, nightstand)

##############################
From agent.py-> find a plan in act()
walk_executor(cup_2088)grab_executor(cup_2088)walk_executor(faucet_134)switchon_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2088, nightstand_262)
##############################
From agent.py
walk_executor(cup_2088)
Robot is inside dining_room_1. Robot is close cup_2088. Robot is close table_123. Robot is no longer inside bedroom_220.Robot is no longer close nightstand_262.Robot is no longer close floor_221.Robot is no longer close floor_222.Robot is no longer close cup_2087.
##############################
From agent.py
grab_executor(cup_2088)
Robot is inside dining_room_1. Robot is close cup_2088. Robot is close table_123. Grabbing cup_2088 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2088. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close table_123.
##############################
From agent.py
switchon_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2088. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2088. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(nightstand_262)
Robot is inside bedroom_220. Robot is close cup_2088. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
put_executor(cup_2088, nightstand_262)
Robot is inside bedroom_220. Robot is close cup_2088. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. cup_2088 released by right hand. 
##############################
