From agent.py
Reset goals: The sub-goals are: 
['1. Wash the shirt.', '2. Iron the washed shirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2114_around_washing_machine_2041(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_shirt,washing_machine_instance)
        else:
            exp(clothes_shirt,washing_machine_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,washing_machine_instance]=True
        close[washing_machine_instance,clothes_shirt]=True
    

behavior find_vacuum_cleaner_2094_around_washing_machine_2041(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2041
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(vacuum_cleaner,washing_machine_instance)
        else:
            exp(vacuum_cleaner,washing_machine_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,washing_machine_instance]=True
        close[washing_machine_instance,vacuum_cleaner]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_shirt(shirt:item, washing_machine:item):
    body:
        achieve clean(shirt)
        # Ensure the shirt becomes clean after washing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to wash

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine to use

        wash_shirt(shirt, washing_machine)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior wash_shirt(shirt:item, washing_machine:item):
    body:
        achieve clean(shirt)
        # Ensure the shirt becomes clean after washing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to wash

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine to use

        wash_shirt(shirt, washing_machine)

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2041)open_executor(washing_machine_2041)exp(clothes_shirt_2114, washing_machine_2041)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot is inside bathroom_265. Robot is close washing_machine_2041. Robot is no longer inside home_office_161.
##############################
From agent.py
open_executor(washing_machine_2041)
Robot is inside bathroom_265. Robot is close washing_machine_2041. 
##############################
From agent.py
exp(clothes_shirt_2114, washing_machine_2041)
Fail to find clothes_shirt_2114 around washing_machine_2041. 
##############################
From agent.py-> find a plan in act()
walk_executor(doorjamb_356)exp(clothes_shirt_2114, doorjamb_356)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(doorjamb_356)
Find drawing_387. Find keyboard_382. Find mouse_380. Robot is inside bedroom_327. Robot is close doorjamb_356. Robot is no longer inside bathroom_265.Robot is no longer close washing_machine_2041.
##############################
From agent.py
exp(clothes_shirt_2114, doorjamb_356)
Fail to find clothes_shirt_2114 around doorjamb_356. 
##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2099)exp(clothes_shirt_2114, ironing_board_2099)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(ironing_board_2099)
Find iron_2117. Robot is inside bedroom_220. Robot is close ironing_board_2099. Robot is no longer inside bedroom_327.Robot is no longer close doorjamb_356.
##############################
From agent.py
exp(clothes_shirt_2114, ironing_board_2099)
Fail to find clothes_shirt_2114 around ironing_board_2099. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_301)exp(clothes_shirt_2114, wallshelf_301)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(wallshelf_301)
Find towel_rack_300. Find drawing_296. Find towel_rack_299. Robot is inside bathroom_265. Robot is close wallshelf_301. Robot is no longer inside bedroom_220.Robot is no longer close ironing_board_2099.
##############################
From agent.py
exp(clothes_shirt_2114, wallshelf_301)
Fail to find clothes_shirt_2114 around wallshelf_301. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_190)exp(clothes_shirt_2114, wallshelf_190)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(wallshelf_190)
Robot is inside home_office_161. Robot is close wallshelf_190. Robot is no longer inside bathroom_265.Robot is no longer close wallshelf_301.
##############################
From agent.py
exp(clothes_shirt_2114, wallshelf_190)
Fail to find clothes_shirt_2114 around wallshelf_190. 
##############################
From agent.py-> find a plan in act()
walk_executor(tablelamp_359)exp(clothes_shirt_2114, tablelamp_359)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(tablelamp_359)
Find drawing_389. Find coin_2004. Find pillow_368. Find mat_386. Find drawing_388. Find pillow_370. Robot is inside bedroom_327. Robot is close nightstand_373. Robot is close tablelamp_359. Robot is no longer inside home_office_161.Robot is no longer close wallshelf_190.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2114 ?
Answer: Locate the clothes_shirt_2114 inside the bathroom_265. It is inside basket_for_clothes_2040.
Re-decompose: None

##############################
From agent.py
Human Instruction: Locate the clothes_shirt_2114 inside the bathroom_265. It is inside basket_for_clothes_2040.

The actions you have taken:
Action 1: Walk to washing_machine_2041.
Action 2: Open washing_machine_2041.
Action 3: look for clothes_shirt_2114 around washing_machine_2041.
Action 4: Walk to doorjamb_356.
Action 5: look for clothes_shirt_2114 around doorjamb_356.
Action 6: Walk to ironing_board_2099.
Action 7: look for clothes_shirt_2114 around ironing_board_2099.
Action 8: Walk to wallshelf_301.
Action 9: look for clothes_shirt_2114 around wallshelf_301.
Action 10: Walk to wallshelf_190.
Action 11: look for clothes_shirt_2114 around wallshelf_190.
Action 12: Walk to tablelamp_359.

##############################
From agent.py
exp(clothes_shirt_2114, tablelamp_359)
Fail to find clothes_shirt_2114 around tablelamp_359. 
##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_counter_306)exp(clothes_shirt_2114, bathroom_counter_306)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(bathroom_counter_306)
Find towel_rack_298. Robot is inside bathroom_265. Robot is close bathroom_counter_306. Robot is no longer inside bedroom_327.Robot is no longer close nightstand_373.Robot is no longer close tablelamp_359.
##############################
From agent.py
exp(clothes_shirt_2114, bathroom_counter_306)
Fail to find clothes_shirt_2114 around bathroom_counter_306. 
##############################
From agent.py-> find a plan in act()
walk_executor(curtain_390)open_executor(curtain_390)exp(clothes_shirt_2114, curtain_390)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(curtain_390)
Robot is inside bedroom_327. Robot is close curtain_390. Robot is close curtain_391. Robot is no longer inside bathroom_265.Robot is no longer close bathroom_counter_306.
##############################
From agent.py
open_executor(curtain_390)
Robot is inside bedroom_327. Robot is close curtain_390. Robot is close curtain_391. 
##############################
From agent.py
exp(clothes_shirt_2114, curtain_390)
Fail to find clothes_shirt_2114 around curtain_390. 
##############################
From agent.py-> find a plan in act()
walk_executor(photoframe_102)exp(clothes_shirt_2114, photoframe_102)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(photoframe_102)
Find book_2092. Find cup_2089. Find drawing_118. Robot is inside dining_room_1. Robot is close bookshelf_137. Robot is close photoframe_102. Robot is no longer inside bedroom_327.Robot is no longer close curtain_390.Robot is no longer close curtain_391.
##############################
From agent.py
exp(clothes_shirt_2114, photoframe_102)
Fail to find clothes_shirt_2114 around photoframe_102. 
##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_cabinet_305)open_executor(bathroom_cabinet_305)exp(clothes_shirt_2114, bathroom_cabinet_305)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(bathroom_cabinet_305)
Find soap_2038. Robot is inside bathroom_265. Robot is close bathroom_cabinet_305. Robot is close wall_269. Robot is close soap_2038. Robot is no longer inside dining_room_1.Robot is no longer close bookshelf_137.Robot is no longer close photoframe_102.
##############################
From agent.py
open_executor(bathroom_cabinet_305)
Robot is inside bathroom_265. Robot is close bathroom_cabinet_305. Robot is close wall_269. Robot is close soap_2038. 
##############################
From agent.py
exp(clothes_shirt_2114, bathroom_cabinet_305)
Fail to find clothes_shirt_2114 around bathroom_cabinet_305. 
##############################
From agent.py-> find a plan in act()
walk_executor(toilet_302)open_executor(toilet_302)exp(clothes_shirt_2114, toilet_302)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(toilet_302)
Robot is inside bathroom_265. Robot is close toilet_302. Robot is no longer close bathroom_cabinet_305.Robot is no longer close wall_269.Robot is no longer close soap_2038.
##############################
From agent.py
open_executor(toilet_302)
Robot is inside bathroom_265. Robot is close toilet_302. 
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2114 ?
Answer: Go to bathroom_265. Inside the bathroom, locate basket_for_clothes_2040. The target item, clothes_shirt_2114, is inside this basket.
Re-decompose: None

##############################
From agent.py
Human Instruction: Locate the clothes_shirt_2114 inside the bathroom_265. It is inside basket_for_clothes_2040.
Go to bathroom_265. Inside the bathroom, locate basket_for_clothes_2040. The target item, clothes_shirt_2114, is inside this basket.

The actions you have taken:
Action 1: Walk to washing_machine_2041.
Action 2: Open washing_machine_2041.
Action 3: look for clothes_shirt_2114 around washing_machine_2041.
Action 4: Walk to doorjamb_356.
Action 5: look for clothes_shirt_2114 around doorjamb_356.
Action 6: Walk to ironing_board_2099.
Action 7: look for clothes_shirt_2114 around ironing_board_2099.
Action 8: Walk to wallshelf_301.
Action 9: look for clothes_shirt_2114 around wallshelf_301.
Action 10: Walk to wallshelf_190.
Action 11: look for clothes_shirt_2114 around wallshelf_190.
Action 12: Walk to tablelamp_359.
Action 13: look for clothes_shirt_2114 around tablelamp_359.
Action 14: Walk to bathroom_counter_306.
Action 15: look for clothes_shirt_2114 around bathroom_counter_306.
Action 16: Walk to curtain_390.
Action 17: Open curtain_390.
Action 18: look for clothes_shirt_2114 around curtain_390.
Action 19: Walk to photoframe_102.
Action 20: look for clothes_shirt_2114 around photoframe_102.
Action 21: Walk to bathroom_cabinet_305.
Action 22: Open bathroom_cabinet_305.
Action 23: look for clothes_shirt_2114 around bathroom_cabinet_305.
Action 24: Walk to toilet_302.
Action 25: Open toilet_302.

##############################
From agent.py
exp(clothes_shirt_2114, toilet_302)
Fail to find clothes_shirt_2114 around toilet_302. 
##############################
From agent.py-> find a plan in act()
walk_executor(drawing_118)exp(clothes_shirt_2114, drawing_118)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(drawing_118)
Find mat_114. Find mat_115. Robot is inside dining_room_1. Robot is close drawing_118. Robot is no longer inside bathroom_265.Robot is no longer close toilet_302.
##############################
From agent.py
exp(clothes_shirt_2114, drawing_118)
Fail to find clothes_shirt_2114 around drawing_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(towel_rack_300)exp(clothes_shirt_2114, towel_rack_300)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(towel_rack_300)
Robot is inside bathroom_265. Robot is close towel_rack_300. Robot is no longer inside dining_room_1.Robot is no longer close drawing_118.
##############################
From agent.py
exp(clothes_shirt_2114, towel_rack_300)
Fail to find clothes_shirt_2114 around towel_rack_300. 
##############################
From agent.py-> find a plan in act()
walk_executor(filing_cabinet_378)exp(clothes_shirt_2114, filing_cabinet_378)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(filing_cabinet_378)
Find food_bread_2016. Find crayon_2020. Find needle_2024. Find check_2033. Find alcohol_2002. Find coffee_filter_2035. Find soap_2037. Find bills_2009. Robot is inside bedroom_327. Robot is close food_bread_2016. Robot is close crayon_2020. Robot is close needle_2024. Robot is close floor_335. Robot is close check_2033. Robot is close alcohol_2002. Robot is close coffee_filter_2035. Robot is close soap_2037. Robot is close bills_2009. Robot is close filing_cabinet_378. Robot is no longer inside bathroom_265.Robot is no longer close towel_rack_300.
##############################
From agent.py
exp(clothes_shirt_2114, filing_cabinet_378)
Fail to find clothes_shirt_2114 around filing_cabinet_378. 
##############################
From agent.py-> find a plan in act()
walk_executor(doorjamb_182)exp(clothes_shirt_2114, doorjamb_182)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(doorjamb_182)
Robot is inside home_office_161. Robot is close doorjamb_182. Robot is no longer inside bedroom_327.Robot is no longer close food_bread_2016.Robot is no longer close crayon_2020.Robot is no longer close needle_2024.Robot is no longer close floor_335.Robot is no longer close check_2033.Robot is no longer close alcohol_2002.Robot is no longer close coffee_filter_2035.Robot is no longer close soap_2037.Robot is no longer close bills_2009.Robot is no longer close filing_cabinet_378.
##############################
From agent.py
exp(clothes_shirt_2114, doorjamb_182)
Fail to find clothes_shirt_2114 around doorjamb_182. 
##############################
From agent.py-> find a plan in act()
walk_executor(vacuum_cleaner_2094)exp(clothes_shirt_2114, vacuum_cleaner_2094)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(vacuum_cleaner_2094)
Robot is inside home_office_161. Robot is close vacuum_cleaner_2094. Robot is no longer close doorjamb_182.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2114 ?
Answer: Go to bathroom_265 and locate basket_for_clothes_2040. clothes_shirt_2114 is inside the basket_for_clothes_2040. Retrieve the shirt from the basket.
Re-decompose: None

##############################
From agent.py
Human Instruction: Locate the clothes_shirt_2114 inside the bathroom_265. It is inside basket_for_clothes_2040.
Go to bathroom_265. Inside the bathroom, locate basket_for_clothes_2040. The target item, clothes_shirt_2114, is inside this basket.
Go to bathroom_265 and locate basket_for_clothes_2040. clothes_shirt_2114 is inside the basket_for_clothes_2040. Retrieve the shirt from the basket.

The actions you have taken:
Action 1: Walk to washing_machine_2041.
Action 2: Open washing_machine_2041.
Action 3: look for clothes_shirt_2114 around washing_machine_2041.
Action 4: Walk to doorjamb_356.
Action 5: look for clothes_shirt_2114 around doorjamb_356.
Action 6: Walk to ironing_board_2099.
Action 7: look for clothes_shirt_2114 around ironing_board_2099.
Action 8: Walk to wallshelf_301.
Action 9: look for clothes_shirt_2114 around wallshelf_301.
Action 10: Walk to wallshelf_190.
Action 11: look for clothes_shirt_2114 around wallshelf_190.
Action 12: Walk to tablelamp_359.
Action 13: look for clothes_shirt_2114 around tablelamp_359.
Action 14: Walk to bathroom_counter_306.
Action 15: look for clothes_shirt_2114 around bathroom_counter_306.
Action 16: Walk to curtain_390.
Action 17: Open curtain_390.
Action 18: look for clothes_shirt_2114 around curtain_390.
Action 19: Walk to photoframe_102.
Action 20: look for clothes_shirt_2114 around photoframe_102.
Action 21: Walk to bathroom_cabinet_305.
Action 22: Open bathroom_cabinet_305.
Action 23: look for clothes_shirt_2114 around bathroom_cabinet_305.
Action 24: Walk to toilet_302.
Action 25: Open toilet_302.
Action 26: look for clothes_shirt_2114 around toilet_302.
Action 27: Walk to drawing_118.
Action 28: look for clothes_shirt_2114 around drawing_118.
Action 29: Walk to towel_rack_300.
Action 30: look for clothes_shirt_2114 around towel_rack_300.
Action 31: Walk to filing_cabinet_378.
Action 32: look for clothes_shirt_2114 around filing_cabinet_378.
Action 33: Walk to doorjamb_182.
Action 34: look for clothes_shirt_2114 around doorjamb_182.
Action 35: Walk to vacuum_cleaner_2094.

##############################
From agent.py
exp(clothes_shirt_2114, vacuum_cleaner_2094)
Fail to find clothes_shirt_2114 around vacuum_cleaner_2094. 
##############################
From agent.py-> find a plan in act()
walk_executor(door_38)exp(clothes_shirt_2114, door_38)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(door_38)
Robot is inside dining_room_1. Robot is close floor_336. Robot is close door_38. Robot is no longer inside home_office_161.Robot is no longer close vacuum_cleaner_2094.
##############################
From agent.py
exp(clothes_shirt_2114, door_38)
Fail to find clothes_shirt_2114 around door_38. 
##############################
From agent.py-> find a plan in act()
walk_executor(walllamp_44)exp(clothes_shirt_2114, walllamp_44)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(walllamp_44)
Robot is inside dining_room_1. Robot is close walllamp_44. Robot is no longer close floor_336.Robot is no longer close door_38.
##############################
From agent.py
exp(clothes_shirt_2114, walllamp_44)
Fail to find clothes_shirt_2114 around walllamp_44. 
##############################
From agent.py-> find a plan in act()
walk_executor(cpuscreen_383)exp(clothes_shirt_2114, cpuscreen_383)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(cpuscreen_383)
Find glue_2013. Find chair_374. Robot is inside bedroom_327. Robot is close desk_375. Robot is close cpuscreen_383. Robot is no longer inside dining_room_1.Robot is no longer close walllamp_44.
##############################
From agent.py
exp(clothes_shirt_2114, cpuscreen_383)
Fail to find clothes_shirt_2114 around cpuscreen_383. 
##############################
From agent.py-> find a plan in act()
walk_executor(chair_374)exp(clothes_shirt_2114, chair_374)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(chair_374)
Robot is inside bedroom_327. Robot is close chair_374. Robot is no longer close cpuscreen_383.Robot is no longer close desk_375.
##############################
From agent.py
exp(clothes_shirt_2114, chair_374)
Fail to find clothes_shirt_2114 around chair_374. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2092)open_executor(book_2092)exp(clothes_shirt_2114, book_2092)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(book_2092)
Robot is inside dining_room_1. Robot is close bookshelf_137. Robot is close book_2092. Robot is no longer inside bedroom_327.Robot is no longer close chair_374.
##############################
From agent.py
open_executor(book_2092)
Robot is inside dining_room_1. Robot is close bookshelf_137. Robot is close book_2092. 
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2114 ?
Answer: Go to the bathroom_265. Inside the bathroom, locate the basket_for_clothes_2040. The target item, clothes_shirt_2114, is inside this basket.
Re-decompose: None

##############################
From agent.py
Human Instruction: Locate the clothes_shirt_2114 inside the bathroom_265. It is inside basket_for_clothes_2040.
Go to bathroom_265. Inside the bathroom, locate basket_for_clothes_2040. The target item, clothes_shirt_2114, is inside this basket.
Go to bathroom_265 and locate basket_for_clothes_2040. clothes_shirt_2114 is inside the basket_for_clothes_2040. Retrieve the shirt from the basket.
Go to the bathroom_265. Inside the bathroom, locate the basket_for_clothes_2040. The target item, clothes_shirt_2114, is inside this basket.

The actions you have taken:
Action 1: Walk to washing_machine_2041.
Action 2: Open washing_machine_2041.
Action 3: look for clothes_shirt_2114 around washing_machine_2041.
Action 4: Walk to doorjamb_356.
Action 5: look for clothes_shirt_2114 around doorjamb_356.
Action 6: Walk to ironing_board_2099.
Action 7: look for clothes_shirt_2114 around ironing_board_2099.
Action 8: Walk to wallshelf_301.
Action 9: look for clothes_shirt_2114 around wallshelf_301.
Action 10: Walk to wallshelf_190.
Action 11: look for clothes_shirt_2114 around wallshelf_190.
Action 12: Walk to tablelamp_359.
Action 13: look for clothes_shirt_2114 around tablelamp_359.
Action 14: Walk to bathroom_counter_306.
Action 15: look for clothes_shirt_2114 around bathroom_counter_306.
Action 16: Walk to curtain_390.
Action 17: Open curtain_390.
Action 18: look for clothes_shirt_2114 around curtain_390.
Action 19: Walk to photoframe_102.
Action 20: look for clothes_shirt_2114 around photoframe_102.
Action 21: Walk to bathroom_cabinet_305.
Action 22: Open bathroom_cabinet_305.
Action 23: look for clothes_shirt_2114 around bathroom_cabinet_305.
Action 24: Walk to toilet_302.
Action 25: Open toilet_302.
Action 26: look for clothes_shirt_2114 around toilet_302.
Action 27: Walk to drawing_118.
Action 28: look for clothes_shirt_2114 around drawing_118.
Action 29: Walk to towel_rack_300.
Action 30: look for clothes_shirt_2114 around towel_rack_300.
Action 31: Walk to filing_cabinet_378.
Action 32: look for clothes_shirt_2114 around filing_cabinet_378.
Action 33: Walk to doorjamb_182.
Action 34: look for clothes_shirt_2114 around doorjamb_182.
Action 35: Walk to vacuum_cleaner_2094.
Action 36: look for clothes_shirt_2114 around vacuum_cleaner_2094.
Action 37: Walk to door_38.
Action 38: look for clothes_shirt_2114 around door_38.
Action 39: Walk to walllamp_44.
Action 40: look for clothes_shirt_2114 around walllamp_44.
Action 41: Walk to cpuscreen_383.
Action 42: look for clothes_shirt_2114 around cpuscreen_383.
Action 43: Walk to chair_374.
Action 44: look for clothes_shirt_2114 around chair_374.
Action 45: Walk to book_2092.
Action 46: Open book_2092.

##############################
From agent.py
exp(clothes_shirt_2114, book_2092)
Fail to find clothes_shirt_2114 around book_2092. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(clothes_shirt_2114, table_123)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(table_123)
Find laptop_2015. Find fork_2103. Find bowl_2095. Find cup_2087. Find cup_2088. Find mouse_2003. Find homework_2011. Find shoes_2001. Robot is inside dining_room_1. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer close bookshelf_137.Robot is no longer close book_2092.
##############################
From agent.py
exp(clothes_shirt_2114, table_123)
Fail to find clothes_shirt_2114 around table_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(shower_303)exp(clothes_shirt_2114, shower_303)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(shower_303)
Robot is inside bathroom_265. Robot is close shower_303. Robot is no longer inside dining_room_1.Robot is no longer close floor_17.Robot is no longer close mat_114.Robot is no longer close table_123.
##############################
From agent.py
exp(clothes_shirt_2114, shower_303)
Fail to find clothes_shirt_2114 around shower_303. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2095)exp(clothes_shirt_2114, bowl_2095)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(bowl_2095)
Robot is inside dining_room_1. Robot is close table_123. Robot is close bowl_2095. Robot is no longer inside bathroom_265.Robot is no longer close shower_303.
##############################
From agent.py
exp(clothes_shirt_2114, bowl_2095)
Fail to find clothes_shirt_2114 around bowl_2095. 
##############################
From agent.py-> find a plan in act()
walk_executor(computer_379)exp(clothes_shirt_2114, computer_379)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(computer_379)
Robot is inside bedroom_327. Robot is close computer_379. Robot is no longer inside dining_room_1.Robot is no longer close table_123.Robot is no longer close bowl_2095.
##############################
From agent.py
exp(clothes_shirt_2114, computer_379)
Fail to find clothes_shirt_2114 around computer_379. 
##############################
From agent.py-> find a plan in act()
walk_executor(curtain_294)open_executor(curtain_294)exp(clothes_shirt_2114, curtain_294)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(curtain_294)
Robot is inside bathroom_265. Robot is close curtain_293. Robot is close curtain_294. Robot is no longer inside bedroom_327.Robot is no longer close computer_379.
##############################
From agent.py
open_executor(curtain_294)
Robot is inside bathroom_265. Robot is close curtain_293. Robot is close curtain_294. 
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2114 ?
Answer: Locate the bathroom labeled bathroom_265. Inside bathroom_265, find the basket labeled basket_for_clothes_2040. The target item, clothes_shirt_2114, is inside this basket_for_clothes_2040.
Re-decompose: None

##############################
From agent.py
Human Instruction: Locate the clothes_shirt_2114 inside the bathroom_265. It is inside basket_for_clothes_2040.
Go to bathroom_265. Inside the bathroom, locate basket_for_clothes_2040. The target item, clothes_shirt_2114, is inside this basket.
Go to bathroom_265 and locate basket_for_clothes_2040. clothes_shirt_2114 is inside the basket_for_clothes_2040. Retrieve the shirt from the basket.
Go to the bathroom_265. Inside the bathroom, locate the basket_for_clothes_2040. The target item, clothes_shirt_2114, is inside this basket.
Locate the bathroom labeled bathroom_265. Inside bathroom_265, find the basket labeled basket_for_clothes_2040. The target item, clothes_shirt_2114, is inside this basket_for_clothes_2040.

The actions you have taken:
Action 1: Walk to washing_machine_2041.
Action 2: Open washing_machine_2041.
Action 3: look for clothes_shirt_2114 around washing_machine_2041.
Action 4: Walk to doorjamb_356.
Action 5: look for clothes_shirt_2114 around doorjamb_356.
Action 6: Walk to ironing_board_2099.
Action 7: look for clothes_shirt_2114 around ironing_board_2099.
Action 8: Walk to wallshelf_301.
Action 9: look for clothes_shirt_2114 around wallshelf_301.
Action 10: Walk to wallshelf_190.
Action 11: look for clothes_shirt_2114 around wallshelf_190.
Action 12: Walk to tablelamp_359.
Action 13: look for clothes_shirt_2114 around tablelamp_359.
Action 14: Walk to bathroom_counter_306.
Action 15: look for clothes_shirt_2114 around bathroom_counter_306.
Action 16: Walk to curtain_390.
Action 17: Open curtain_390.
Action 18: look for clothes_shirt_2114 around curtain_390.
Action 19: Walk to photoframe_102.
Action 20: look for clothes_shirt_2114 around photoframe_102.
Action 21: Walk to bathroom_cabinet_305.
Action 22: Open bathroom_cabinet_305.
Action 23: look for clothes_shirt_2114 around bathroom_cabinet_305.
Action 24: Walk to toilet_302.
Action 25: Open toilet_302.
Action 26: look for clothes_shirt_2114 around toilet_302.
Action 27: Walk to drawing_118.
Action 28: look for clothes_shirt_2114 around drawing_118.
Action 29: Walk to towel_rack_300.
Action 30: look for clothes_shirt_2114 around towel_rack_300.
Action 31: Walk to filing_cabinet_378.
Action 32: look for clothes_shirt_2114 around filing_cabinet_378.
Action 33: Walk to doorjamb_182.
Action 34: look for clothes_shirt_2114 around doorjamb_182.
Action 35: Walk to vacuum_cleaner_2094.
Action 36: look for clothes_shirt_2114 around vacuum_cleaner_2094.
Action 37: Walk to door_38.
Action 38: look for clothes_shirt_2114 around door_38.
Action 39: Walk to walllamp_44.
Action 40: look for clothes_shirt_2114 around walllamp_44.
Action 41: Walk to cpuscreen_383.
Action 42: look for clothes_shirt_2114 around cpuscreen_383.
Action 43: Walk to chair_374.
Action 44: look for clothes_shirt_2114 around chair_374.
Action 45: Walk to book_2092.
Action 46: Open book_2092.
Action 47: look for clothes_shirt_2114 around book_2092.
Action 48: Walk to table_123.
Action 49: look for clothes_shirt_2114 around table_123.
Action 50: Walk to shower_303.
Action 51: look for clothes_shirt_2114 around shower_303.
Action 52: Walk to bowl_2095.
Action 53: look for clothes_shirt_2114 around bowl_2095.
Action 54: Walk to computer_379.
Action 55: look for clothes_shirt_2114 around computer_379.
Action 56: Walk to curtain_294.
Action 57: Open curtain_294.

##############################
From agent.py
exp(clothes_shirt_2114, curtain_294)
Fail to find clothes_shirt_2114 around curtain_294. 
##############################
From agent.py-> find a plan in act()
walk_executor(bathtub_297)exp(clothes_shirt_2114, bathtub_297)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(bathtub_297)
Find basket_for_clothes_2040. Robot is inside bathroom_265. Robot is close bathtub_297. Robot is no longer close curtain_293.Robot is no longer close curtain_294.
##############################
From agent.py
exp(clothes_shirt_2114, bathtub_297)
Fail to find clothes_shirt_2114 around bathtub_297. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2040)exp(clothes_shirt_2114, basket_for_clothes_2040)walk_executor(clothes_shirt_2114)wash_executor(clothes_shirt_2114)
##############################
From agent.py
walk_executor(basket_for_clothes_2040)
Find clothes_pants_2113. Find clothes_shirt_2114. Find clothes_socks_2115. Find clothes_skirt_2116. Robot is inside bathroom_265. Robot is close clothes_pants_2113. Robot is close clothes_shirt_2114. Robot is close clothes_socks_2115. Robot is close clothes_skirt_2116. Robot is close basket_for_clothes_2040. Robot is no longer close bathtub_297.
##############################
From agent.py
exp(clothes_shirt_2114, basket_for_clothes_2040)
Find clothes_shirt_2114. 
##############################
From agent.py-> find a plan in act()
wash_executor(clothes_shirt_2114)
##############################
From agent.py
wash_executor(clothes_shirt_2114)
Robot is inside bathroom_265. Robot is close clothes_pants_2113. Robot is close clothes_shirt_2114. Robot is close clothes_socks_2115. Robot is close clothes_skirt_2116. Robot is close basket_for_clothes_2040. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pajamas_2039_around_bed_264(pajamas:item):
    goal: not unknown(pajamas)
    body:
        assert is_pajamas(pajamas)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==264
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pajamas,bed_instance)
        else:
            exp(pajamas,bed_instance)
    eff:
        unknown[pajamas]=False
        close[pajamas,bed_instance]=True
        close[bed_instance,pajamas]=True
    

behavior find_clothes_gloves_2077_around_tablelamp_358(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind tablelamp_instance:item where:
            is_tablelamp(tablelamp_instance) and id[tablelamp_instance]==358
        achieve close_char(char,tablelamp_instance)
        if can_open(tablelamp_instance):
            achieve_once open(tablelamp_instance)
            exp(clothes_gloves,tablelamp_instance)
        else:
            exp(clothes_gloves,tablelamp_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,tablelamp_instance]=True
        close[tablelamp_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board) 
        # Place the shirt on the ironing board
        achieve plugged(iron)
        # Plug in the iron
        achieve is_on(iron)
        # Turn on the iron
        achieve clean(shirt)
        # Iron the shirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the washed shirt

        bind bathroom: item where:
            is_bathroom(bathroom) and id[bathroom]==265
        # Select bathroom with ID 265
        
        bind basket_for_clothes: item where:
            is_basket_for_clothes(basket_for_clothes) and inside(basket_for_clothes, bathroom)
        # Select basket_for_clothes inside the bathroom

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        iron_shirt(shirt, iron, ironing_board)
        # Iron the shirt
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board) 
        # Place the shirt on the ironing board
        achieve plugged(iron)
        # Plug in the iron
        achieve is_on(iron)
        # Turn on the iron
        achieve clean(shirt)
        # Iron the shirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the washed shirt

        bind bathroom: item where:
            is_bathroom(bathroom) and id[bathroom]==265
        # Select bathroom with ID 265
        
        bind basket_for_clothes: item where:
            is_basket_for_clothes(basket_for_clothes) and inside(basket_for_clothes, bathroom)
        # Select basket_for_clothes inside the bathroom

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        iron_shirt(shirt, iron, ironing_board)
        # Iron the shirt
##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2114)walk_executor(ironing_board_2099)put_executor(clothes_shirt_2114, ironing_board_2099)plugin_executor(iron_2117)switchon_executor(iron_2117)
##############################
From agent.py
grab_executor(clothes_shirt_2114)
Robot is inside bathroom_265. Robot is close clothes_pants_2113. Robot is close clothes_shirt_2114. Robot is close clothes_socks_2115. Robot is close clothes_skirt_2116. Robot is close basket_for_clothes_2040. Grabbing clothes_shirt_2114 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2099)
Robot is inside bedroom_220. Robot is close clothes_shirt_2114. Robot is close ironing_board_2099. Robot is no longer inside bathroom_265.Robot is no longer close clothes_pants_2113.Robot is no longer close clothes_socks_2115.Robot is no longer close clothes_skirt_2116.Robot is no longer close basket_for_clothes_2040.
##############################
From agent.py
put_executor(clothes_shirt_2114, ironing_board_2099)
Robot is inside bedroom_220. Robot is close clothes_shirt_2114. Robot is close ironing_board_2099. clothes_shirt_2114 released by right hand. 
##############################
From agent.py
plugin_executor(iron_2117)
Robot is inside bedroom_220. Robot is close clothes_shirt_2114. Robot is close ironing_board_2099. 
##############################
From agent.py
switchon_executor(iron_2117)
Robot is inside bedroom_220. Robot is close clothes_shirt_2114. Robot is close ironing_board_2099. 
##############################
From agent.py
Human Instruction: You need to actually iron the shirt, which involves using the iron on the shirt while it's on the ironing board.

The actions you have taken:
Action 1: Walk to washing_machine_2041.
Action 2: Open washing_machine_2041.
Action 3: look for clothes_shirt_2114 around washing_machine_2041.
Action 4: Walk to doorjamb_356.
Action 5: look for clothes_shirt_2114 around doorjamb_356.
Action 6: Walk to ironing_board_2099.
Action 7: look for clothes_shirt_2114 around ironing_board_2099.
Action 8: Walk to wallshelf_301.
Action 9: look for clothes_shirt_2114 around wallshelf_301.
Action 10: Walk to wallshelf_190.
Action 11: look for clothes_shirt_2114 around wallshelf_190.
Action 12: Walk to tablelamp_359.
Action 13: look for clothes_shirt_2114 around tablelamp_359.
Action 14: Walk to bathroom_counter_306.
Action 15: look for clothes_shirt_2114 around bathroom_counter_306.
Action 16: Walk to curtain_390.
Action 17: Open curtain_390.
Action 18: look for clothes_shirt_2114 around curtain_390.
Action 19: Walk to photoframe_102.
Action 20: look for clothes_shirt_2114 around photoframe_102.
Action 21: Walk to bathroom_cabinet_305.
Action 22: Open bathroom_cabinet_305.
Action 23: look for clothes_shirt_2114 around bathroom_cabinet_305.
Action 24: Walk to toilet_302.
Action 25: Open toilet_302.
Action 26: look for clothes_shirt_2114 around toilet_302.
Action 27: Walk to drawing_118.
Action 28: look for clothes_shirt_2114 around drawing_118.
Action 29: Walk to towel_rack_300.
Action 30: look for clothes_shirt_2114 around towel_rack_300.
Action 31: Walk to filing_cabinet_378.
Action 32: look for clothes_shirt_2114 around filing_cabinet_378.
Action 33: Walk to doorjamb_182.
Action 34: look for clothes_shirt_2114 around doorjamb_182.
Action 35: Walk to vacuum_cleaner_2094.
Action 36: look for clothes_shirt_2114 around vacuum_cleaner_2094.
Action 37: Walk to door_38.
Action 38: look for clothes_shirt_2114 around door_38.
Action 39: Walk to walllamp_44.
Action 40: look for clothes_shirt_2114 around walllamp_44.
Action 41: Walk to cpuscreen_383.
Action 42: look for clothes_shirt_2114 around cpuscreen_383.
Action 43: Walk to chair_374.
Action 44: look for clothes_shirt_2114 around chair_374.
Action 45: Walk to book_2092.
Action 46: Open book_2092.
Action 47: look for clothes_shirt_2114 around book_2092.
Action 48: Walk to table_123.
Action 49: look for clothes_shirt_2114 around table_123.
Action 50: Walk to shower_303.
Action 51: look for clothes_shirt_2114 around shower_303.
Action 52: Walk to bowl_2095.
Action 53: look for clothes_shirt_2114 around bowl_2095.
Action 54: Walk to computer_379.
Action 55: look for clothes_shirt_2114 around computer_379.
Action 56: Walk to curtain_294.
Action 57: Open curtain_294.
Action 58: look for clothes_shirt_2114 around curtain_294.
Action 59: Walk to bathtub_297.
Action 60: look for clothes_shirt_2114 around bathtub_297.
Action 61: Walk to basket_for_clothes_2040.
Action 62: look for clothes_shirt_2114 around basket_for_clothes_2040.
Action 63: Wash clothes_shirt_2114.
Action 64: Grab clothes_shirt_2114.
Action 65: Walk to ironing_board_2099.
Action 66: Put clothes_shirt_2114 on ironing_board_2099.
Action 67: Plug in iron_2117.
Action 68: Switch on iron_2117.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_chair_374_around_bookshelf_372(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==372
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(chair,bookshelf_instance)
        else:
            exp(chair,bookshelf_instance)
    eff:
        unknown[chair]=False
        close[chair,bookshelf_instance]=True
        close[bookshelf_instance,chair]=True
    

#exp_behavior_end

#goal_representation
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board) # Place the shirt on the ironing board
        achieve plugged(iron)           # Ensure the iron is plugged in
        achieve is_on(iron)             # Ensure the iron is turned on
        achieve close_char(char, ironing_board) # Approach the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt]==2114
        # Select the shirt with ID 2114

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board]==2099
        # Select the ironing board with ID 2099

        bind iron: item where:
            is_iron(iron) and id[iron]==2117
        # Select the iron with ID 2117

        iron_shirt(shirt, ironing_board, iron)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_chair_374_around_bookshelf_372(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==372
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(chair,bookshelf_instance)
        else:
            exp(chair,bookshelf_instance)
    eff:
        unknown[chair]=False
        close[chair,bookshelf_instance]=True
        close[bookshelf_instance,chair]=True
    

behavior find_clothes_hat_2076_around_wallshelf_187(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind wallshelf_instance:item where:
            is_wallshelf(wallshelf_instance) and id[wallshelf_instance]==187
        achieve close_char(char,wallshelf_instance)
        if can_open(wallshelf_instance):
            achieve_once open(wallshelf_instance)
            exp(clothes_hat,wallshelf_instance)
        else:
            exp(clothes_hat,wallshelf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,wallshelf_instance]=True
        close[wallshelf_instance,clothes_hat]=True
    

behavior find_clothes_jacket_2078_around_dresser_377(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_jacket,dresser_instance)
        else:
            exp(clothes_jacket,dresser_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,dresser_instance]=True
        close[dresser_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board) # Place the washed shirt on the ironing board
        achieve is_on(iron) # Ensure the iron is turned on and hot
        # Additional behaviors required to iron the shirt can be implemented here

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron that is plugged in and turned on

        iron_shirt(shirt, iron, ironing_board)
        # Execute the behavior to iron the shirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is placed on the ironing board
        achieve is_on(iron)
        # Ensure the iron is switched on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(shirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve is_on(iron) # Ensure the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron)
        # Select the iron that is plugged in

        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_napkin_2014_around_kitchen_counter_128(napkin:item):
    goal: not unknown(napkin)
    body:
        assert is_napkin(napkin)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(napkin,kitchen_counter_instance)
        else:
            exp(napkin,kitchen_counter_instance)
    eff:
        unknown[napkin]=False
        close[napkin,kitchen_counter_instance]=True
        close[kitchen_counter_instance,napkin]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board) # Place the shirt on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and id[iron] == 2117
        # Select the iron with ID 2117

        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_chair_138_around_drawing_389(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind drawing_instance:item where:
            is_drawing(drawing_instance) and id[drawing_instance]==389
        achieve close_char(char,drawing_instance)
        if can_open(drawing_instance):
            achieve_once open(drawing_instance)
            exp(chair,drawing_instance)
        else:
            exp(chair,drawing_instance)
    eff:
        unknown[chair]=False
        close[chair,drawing_instance]=True
        close[drawing_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve is_on(iron)
        # Ensure iron is turned on while ironing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the washed shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron)
        # Select an iron

        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board) # Place the shirt on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Turn on the iron to use it on the shirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(shirt, ironing_board, iron)
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_hat_2076_around_bookshelf_372(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==372
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(clothes_hat,bookshelf_instance)
        else:
            exp(clothes_hat,bookshelf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,bookshelf_instance]=True
        close[bookshelf_instance,clothes_hat]=True
    

behavior find_clothes_gloves_2077_around_cupboard_130(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==130
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(clothes_gloves,cupboard_instance)
        else:
            exp(clothes_gloves,cupboard_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,cupboard_instance]=True
        close[cupboard_instance,clothes_gloves]=True
    

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(shirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_food_snack_2069_around_kitchen_counter_128(food_snack:item):
    goal: not unknown(food_snack)
    body:
        assert is_food_snack(food_snack)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_snack,kitchen_counter_instance)
        else:
            exp(food_snack,kitchen_counter_instance)
    eff:
        unknown[food_snack]=False
        close[food_snack,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_snack]=True
    

behavior find_napkin_2014_around_kitchen_counter_128(napkin:item):
    goal: not unknown(napkin)
    body:
        assert is_napkin(napkin)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(napkin,kitchen_counter_instance)
        else:
            exp(napkin,kitchen_counter_instance)
    eff:
        unknown[napkin]=False
        close[napkin,kitchen_counter_instance]=True
        close[kitchen_counter_instance,napkin]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(iron:item, shirt:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve is_on(iron) # Ensure the iron is on
        achieve plugged(iron) # Ensure the iron is plugged in

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(iron, shirt, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_napkin_2014_around_kitchen_counter_128(napkin:item):
    goal: not unknown(napkin)
    body:
        assert is_napkin(napkin)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(napkin,kitchen_counter_instance)
        else:
            exp(napkin,kitchen_counter_instance)
    eff:
        unknown[napkin]=False
        close[napkin,kitchen_counter_instance]=True
        close[kitchen_counter_instance,napkin]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board) 
        # Ensure the shirt is placed on the ironing board
        achieve plugged(iron)
        # Ensure the iron is plugged in
        achieve is_on(iron)
        # Ensure the iron is switched on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the washed shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(shirt, ironing_board, iron)
        # Iron the washed shirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_dress_2075_around_dresser_377(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_dress,dresser_instance)
        else:
            exp(clothes_dress,dresser_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,dresser_instance]=True
        close[dresser_instance,clothes_dress]=True
    

behavior find_pajamas_2039_around_bed_376(pajamas:item):
    goal: not unknown(pajamas)
    body:
        assert is_pajamas(pajamas)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pajamas,bed_instance)
        else:
            exp(pajamas,bed_instance)
    eff:
        unknown[pajamas]=False
        close[pajamas,bed_instance]=True
        close[bed_instance,pajamas]=True
    

behavior find_clothes_jacket_2078_around_bookshelf_372(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==372
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(clothes_jacket,bookshelf_instance)
        else:
            exp(clothes_jacket,bookshelf_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,bookshelf_instance]=True
        close[bookshelf_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        # Make sure the shirt is on the ironing board

        achieve is_on(iron)
        # Make sure the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron)
        # Select the pluggedin iron

        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_phone_47_around_shoes_2001(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind shoes_instance:item where:
            is_shoes(shoes_instance) and id[shoes_instance]==2001
        achieve close_char(char,shoes_instance)
        if can_open(shoes_instance):
            achieve_once open(shoes_instance)
            exp(phone,shoes_instance)
        else:
            exp(phone,shoes_instance)
    eff:
        unknown[phone]=False
        close[phone,shoes_instance]=True
        close[shoes_instance,phone]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_washed_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve plugged(iron)
        # Ensure the iron is plugged in
        achieve is_on(iron)
        # Ensure the iron is turned on
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the washed shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and on(shirt, ironing_board)
        # Select the ironing board where the shirt is placed

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron which is plugged and turned on

        iron_washed_shirt(shirt, ironing_board, iron)


#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2092_around_bookshelf_372(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==372
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_phone_47_around_computer_2110(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==2110
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(phone,computer_instance)
        else:
            exp(phone,computer_instance)
    eff:
        unknown[phone]=False
        close[phone,computer_instance]=True
        close[computer_instance,phone]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item):
    body:
        achieve close_char(char, shirt) # Ensure the character is close to the shirt for ironing
        achieve_close_char(char, ironing_board) # Ensure the character is close to the ironing board for ironing the shirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron that is plugged in and turned on

        iron_shirt(shirt, iron)
        # Iron the shirt
 
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board; available variables: [Variable<shirt: item>, Variable<iron: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_food_apple_2043_around_kitchen_counter_128(food_apple:item):
    goal: not unknown(food_apple)
    body:
        assert is_food_apple(food_apple)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_apple,kitchen_counter_instance)
        else:
            exp(food_apple,kitchen_counter_instance)
    eff:
        unknown[food_apple]=False
        close[food_apple,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_apple]=True
    

behavior find_clothes_hat_2076_around_bookshelf_372(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==372
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(clothes_hat,bookshelf_instance)
        else:
            exp(clothes_hat,bookshelf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,bookshelf_instance]=True
        close[bookshelf_instance,clothes_hat]=True
    

#goal_representation
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve close_char(char, shirt) # Ensure the character is close to the shirt for ironing
        achieve close_char(char, ironing_board) # Ensure the character is close to the ironing board for ironing the shirt
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve plugged(iron) # Ensure that the iron is plugged in
        achieve is_on(iron) # Ensure that the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron that is plugged in and turned on

        iron_shirt(shirt, ironing_board, iron)
        # Iron the shirt
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_cleaning_solution_2098_around_kitchen_counter_128(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cleaning_solution,kitchen_counter_instance)
        else:
            exp(cleaning_solution,kitchen_counter_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cleaning_solution]=True
    

behavior find_pillow_195_around_bed_376(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

#exp_behavior_end

#goal_representation
 
behavior plug_in_iron(iron:item):
    body:
        achieve plugged(iron)
        # Ensure the iron is plugged in

behavior switch_on_iron(iron:item):
    body:
        achieve is_on(iron)
        # Turn on the iron

behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        plug_in_iron(iron)
        switch_on_iron(iron)
        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_fork_2103_around_fork_2103(fork:item):
    goal: not unknown(fork)
    body:
        assert is_fork(fork)
        bind fork_instance:item where:
            is_fork(fork_instance) and id[fork_instance]==2103
        achieve close_char(char,fork_instance)
        if can_open(fork_instance):
            achieve_once open(fork_instance)
            exp(fork,fork_instance)
        else:
            exp(fork,fork_instance)
    eff:
        unknown[fork]=False
        close[fork,fork_instance]=True
        close[fork_instance,fork]=True
    

behavior find_food_lemon_2061_around_kitchen_counter_128(food_lemon:item):
    goal: not unknown(food_lemon)
    body:
        assert is_food_lemon(food_lemon)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_lemon,kitchen_counter_instance)
        else:
            exp(food_lemon,kitchen_counter_instance)
    eff:
        unknown[food_lemon]=False
        close[food_lemon,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_lemon]=True
    

#exp_behavior_end

#goal_representation
 
def has_plugged_iron(iron:item):
    # Check if the iron is plugged in
    symbol plugged_in=plugged(iron)
    return plugged_in

def is_iron_on(iron:item):
    # Check if the iron is on
    symbol is_on=exists on: item: is_on(iron)
    return is_on

behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board
        
        assert has_plugged_iron(iron)
        # Ensure the iron is plugged in
        
        assert is_iron_on(iron)
        # Ensure the iron is on to iron the shirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the cleaned shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron which is plugged in and on

        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
Error is:
tuple.index(x): x not in tuple
##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_food_carrot_2047_around_kitchen_counter_128(food_carrot:item):
    goal: not unknown(food_carrot)
    body:
        assert is_food_carrot(food_carrot)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_carrot,kitchen_counter_instance)
        else:
            exp(food_carrot,kitchen_counter_instance)
    eff:
        unknown[food_carrot]=False
        close[food_carrot,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_carrot]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board) # Place the shirt on the ironing board
        achieve is_on(iron) # Ensure the iron is switched on
        assert plugged(iron) # Ensure the iron is plugged in
        achieve clean(shirt) # Ensure the shirt is clean after ironing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the shirt that has been washed and is clean

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and is_on(iron) and plugged(iron)
        # Select the iron, ensure it is on and plugged

        iron_shirt(shirt, iron, ironing_board)
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_clothes_dress_2075_around_dresser_377(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_dress,dresser_instance)
        else:
            exp(clothes_dress,dresser_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,dresser_instance]=True
        close[dresser_instance,clothes_dress]=True
    

behavior find_pajamas_2039_around_bed_376(pajamas:item):
    goal: not unknown(pajamas)
    body:
        assert is_pajamas(pajamas)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pajamas,bed_instance)
        else:
            exp(pajamas,bed_instance)
    eff:
        unknown[pajamas]=False
        close[pajamas,bed_instance]=True
        close[bed_instance,pajamas]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item):
    body:
        achieve is_on(iron)
        achieve on(shirt, ironing_board)
        # The shirt is on the ironing board and the iron is on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron
        
        iron_shirt(shirt, iron)
        # Iron the shirt on the ironing board

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board; available variables: [Variable<shirt: item>, Variable<iron: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve is_on(iron)
        achieve on(shirt, ironing_board)
        # The shirt is on the ironing board and the iron is on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron
        
        iron_shirt(shirt, iron, ironing_board)
        # Iron the shirt on the ironing board

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item):
    body:
        achieve is_clothes(shirt) # Ensure the item is a shirt
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is turned on
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and on(shirt, ironing_board_2099)
        # Select the washed shirt on the ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron that is plugged in and turned on

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and surfaces(ironing_board)
        # Select the ironing board

        iron_shirt(shirt, iron)
        # Iron the washed shirt on the ironing board

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board; available variables: [Variable<shirt: item>, Variable<iron: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation

behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve is_clothes(shirt) # Ensure the item is a shirt
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is turned on
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and on(shirt, ironing_board_2099)
        # Select the washed shirt on the ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron that is plugged in and turned on

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and surfaces(ironing_board)
        # Select the ironing board

        iron_shirt(shirt, iron, ironing_board)
        # Iron the washed shirt on the ironing board

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_food_oatmeal_2063_around_kitchen_counter_128(food_oatmeal:item):
    goal: not unknown(food_oatmeal)
    body:
        assert is_food_oatmeal(food_oatmeal)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_oatmeal,kitchen_counter_instance)
        else:
            exp(food_oatmeal,kitchen_counter_instance)
    eff:
        unknown[food_oatmeal]=False
        close[food_oatmeal,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_oatmeal]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item):
    body:
        achieve has_a_free_hand(char)
        achieve is_on(iron) # Ensure the iron is on for use
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt
        
        bind iron: item where:
            is_iron(iron) and is_on(iron) and plugged(iron)
        # Select the iron that is plugged in and turned on

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and surfaces(ironing_board)
        # Select the ironing board with a surface to place the shirt
        
        iron_shirt(shirt, iron)
        # Iron the shirt

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board; available variables: [Variable<shirt: item>, Variable<iron: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve has_a_free_hand(char)
        achieve is_on(iron) # Ensure the iron is on for use
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt
        
        bind iron: item where:
            is_iron(iron) and is_on(iron) and plugged(iron)
        # Select the iron that is plugged in and turned on

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and surfaces(ironing_board)
        # Select the ironing board with a surface to place the shirt
        
        iron_shirt(shirt, ironing_board, iron)
        # Iron the shirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_gloves_2077_around_clothes_underwear_2022(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind clothes_underwear_instance:item where:
            is_clothes_underwear(clothes_underwear_instance) and id[clothes_underwear_instance]==2022
        achieve close_char(char,clothes_underwear_instance)
        if can_open(clothes_underwear_instance):
            achieve_once open(clothes_underwear_instance)
            exp(clothes_gloves,clothes_underwear_instance)
        else:
            exp(clothes_gloves,clothes_underwear_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,clothes_underwear_instance]=True
        close[clothes_underwear_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is on the ironing board
        
        achieve plugged(iron)
        # Ensure the iron is plugged in

        achieve is_on(iron)
        # Ensure the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron to use

        iron_shirt(shirt, iron, ironing_board)
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_chair_2118_around_chair_2118(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==2118
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the shirt is placed on the ironing board
        achieve plugged(iron)
        # Ensure the iron is plugged in
        achieve is_on(iron)
        # Ensure the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the shirt that is clean and washed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(shirt, iron, ironing_board)
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        achieve plugged(iron)
        achieve is_on(iron)
        achieve close_char(char, ironing_board)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(shirt, ironing_board, iron)
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_cutting_board_2080_around_kitchen_counter_128(cutting_board:item):
    goal: not unknown(cutting_board)
    body:
        assert is_cutting_board(cutting_board)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cutting_board,kitchen_counter_instance)
        else:
            exp(cutting_board,kitchen_counter_instance)
    eff:
        unknown[cutting_board]=False
        close[cutting_board,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cutting_board]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(iron:item, shirt:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve is_on(iron) # Ensure the iron is on
        achieve plugged(iron) # Ensure the iron is plugged in

behavior __goal__():
    body:
        bind iron: item where:
            is_iron(iron)
        # Select the iron
        
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        
        iron_shirt(iron, shirt, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_napkin_2014_around_kitchen_counter_128(napkin:item):
    goal: not unknown(napkin)
    body:
        assert is_napkin(napkin)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(napkin,kitchen_counter_instance)
        else:
            exp(napkin,kitchen_counter_instance)
    eff:
        unknown[napkin]=False
        close[napkin,kitchen_counter_instance]=True
        close[kitchen_counter_instance,napkin]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item):
    body:
        achieve is_on(iron) # Ensure the iron is turned on
        achieve on(shirt, ironing_board) # Place the washed shirt on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the washed shirt

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Ensure the iron is plugged in and turned on

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_shirt(shirt, iron)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: ironing_board; available variables: [Variable<shirt: item>, Variable<iron: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

#goal_representation
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve is_on(iron) # Ensure the iron is turned on
        achieve on(shirt, ironing_board) # Place the washed shirt on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the washed shirt

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Ensure the iron is plugged in and turned on

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_shirt(shirt, iron, ironing_board)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_clothes_gloves_2077_around_stereo_2007(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind stereo_instance:item where:
            is_stereo(stereo_instance) and id[stereo_instance]==2007
        achieve close_char(char,stereo_instance)
        if can_open(stereo_instance):
            achieve_once open(stereo_instance)
            exp(clothes_gloves,stereo_instance)
        else:
            exp(clothes_gloves,stereo_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,stereo_instance]=True
        close[stereo_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve plugged(iron)
        # Ensure the iron is plugged in

        achieve is_on(iron)
        # Ensure the iron is turned on

        achieve on(shirt, ironing_board)
        # Ensure the shirt is placed on the ironing board

        # The shirt is ironed using the hot iron on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the washed shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_food_oatmeal_2063_around_kitchen_counter_128(food_oatmeal:item):
    goal: not unknown(food_oatmeal)
    body:
        assert is_food_oatmeal(food_oatmeal)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_oatmeal,kitchen_counter_instance)
        else:
            exp(food_oatmeal,kitchen_counter_instance)
    eff:
        unknown[food_oatmeal]=False
        close[food_oatmeal,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_oatmeal]=True
    

behavior find_napkin_2014_around_kitchen_counter_128(napkin:item):
    goal: not unknown(napkin)
    body:
        assert is_napkin(napkin)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(napkin,kitchen_counter_instance)
        else:
            exp(napkin,kitchen_counter_instance)
    eff:
        unknown[napkin]=False
        close[napkin,kitchen_counter_instance]=True
        close[kitchen_counter_instance,napkin]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        achieve plugged(iron)
        achieve is_on(iron)
        # Iron the shirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the cleaned shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron that is plugged in and on

        iron_shirt(shirt, iron, ironing_board)
        # Iron the cleaned shirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_pajamas_2039_around_bed_376(pajamas:item):
    goal: not unknown(pajamas)
    body:
        assert is_pajamas(pajamas)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pajamas,bed_instance)
        else:
            exp(pajamas,bed_instance)
    eff:
        unknown[pajamas]=False
        close[pajamas,bed_instance]=True
        close[bed_instance,pajamas]=True
    

behavior find_napkin_2014_around_kitchen_counter_128(napkin:item):
    goal: not unknown(napkin)
    body:
        assert is_napkin(napkin)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(napkin,kitchen_counter_instance)
        else:
            exp(napkin,kitchen_counter_instance)
    eff:
        unknown[napkin]=False
        close[napkin,kitchen_counter_instance]=True
        close[kitchen_counter_instance,napkin]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board) # Place the shirt on the ironing board
        achieve is_on(iron) # Ensure the iron is on
        achieve plugged(iron) # Ensure the iron is plugged in

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt]==2114
        # Select the shirt with ID 2114

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board]==2099
        # Select the ironing board with ID 2099
        
        bind iron: item where:
            is_iron(iron) and id[iron]==2117
        # Select the iron with ID 2117
        
        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_chair_2118_around_chair_2118(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==2118
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

behavior find_clothes_gloves_2077_around_stereo_2007(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind stereo_instance:item where:
            is_stereo(stereo_instance) and id[stereo_instance]==2007
        achieve close_char(char,stereo_instance)
        if can_open(stereo_instance):
            achieve_once open(stereo_instance)
            exp(clothes_gloves,stereo_instance)
        else:
            exp(clothes_gloves,stereo_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,stereo_instance]=True
        close[stereo_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board) # Place the shirt on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the washed shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        iron_shirt(shirt, ironing_board, iron)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in
        achieve is_on(iron) # Ensure the iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the iron that is plugged in and turned on

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and surfaces(ironing_board)
        # Select the ironing board with a surface

        iron_shirt(shirt, iron, ironing_board)
        # Iron the shirt

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_napkin_2014_around_kitchen_counter_128(napkin:item):
    goal: not unknown(napkin)
    body:
        assert is_napkin(napkin)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(napkin,kitchen_counter_instance)
        else:
            exp(napkin,kitchen_counter_instance)
    eff:
        unknown[napkin]=False
        close[napkin,kitchen_counter_instance]=True
        close[kitchen_counter_instance,napkin]=True
    

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_pajamas_2039_around_bed_264(pajamas:item):
    goal: not unknown(pajamas)
    body:
        assert is_pajamas(pajamas)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==264
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pajamas,bed_instance)
        else:
            exp(pajamas,bed_instance)
    eff:
        unknown[pajamas]=False
        close[pajamas,bed_instance]=True
        close[bed_instance,pajamas]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board) 
        # Ensure the shirt is on the ironing board
        achieve is_on(iron) 
        # The iron should remain on for ironing the shirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt that needs to be ironed

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron)
        # Select the pluggedin iron

        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve_once is_on(iron)
        achieve on(shirt, ironing_board) # Ensure the shirt is on the ironing board
        achieve plugged(iron) # Ensure the iron is plugged in

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select the already plugged in and turned on iron

        iron_shirt(shirt, ironing_board, iron)
        # Iron the shirt on the ironing board with the iron

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_chair_2118_around_chair_2118(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind chair_instance:item where:
            is_chair(chair_instance) and id[chair_instance]==2118
        achieve close_char(char,chair_instance)
        if can_open(chair_instance):
            achieve_once open(chair_instance)
            exp(chair,chair_instance)
        else:
            exp(chair,chair_instance)
    eff:
        unknown[chair]=False
        close[chair,chair_instance]=True
        close[chair_instance,chair]=True
    

behavior find_food_vegetable_2072_around_kitchen_counter_128(food_vegetable:item):
    goal: not unknown(food_vegetable)
    body:
        assert is_food_vegetable(food_vegetable)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_vegetable,kitchen_counter_instance)
        else:
            exp(food_vegetable,kitchen_counter_instance)
    eff:
        unknown[food_vegetable]=False
        close[food_vegetable,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_vegetable]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, iron:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board) # The shirt is placed on the ironing board
        achieve plugged(iron) # The iron is plugged in
        achieve is_on(iron) # The iron is turned on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt
        
        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_shirt(shirt, iron, ironing_board) 
        # Iron the shirt placed on the ironing board

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_hat_2076_around_bookshelf_189(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==189
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(clothes_hat,bookshelf_instance)
        else:
            exp(clothes_hat,bookshelf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,bookshelf_instance]=True
        close[bookshelf_instance,clothes_hat]=True
    

behavior find_clothes_gloves_2077_around_clothes_underwear_2022(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind clothes_underwear_instance:item where:
            is_clothes_underwear(clothes_underwear_instance) and id[clothes_underwear_instance]==2022
        achieve close_char(char,clothes_underwear_instance)
        if can_open(clothes_underwear_instance):
            achieve_once open(clothes_underwear_instance)
            exp(clothes_gloves,clothes_underwear_instance)
        else:
            exp(clothes_gloves,clothes_underwear_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,clothes_underwear_instance]=True
        close[clothes_underwear_instance,clothes_gloves]=True
    

behavior find_napkin_2014_around_kitchen_counter_128(napkin:item):
    goal: not unknown(napkin)
    body:
        assert is_napkin(napkin)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(napkin,kitchen_counter_instance)
        else:
            exp(napkin,kitchen_counter_instance)
    eff:
        unknown[napkin]=False
        close[napkin,kitchen_counter_instance]=True
        close[kitchen_counter_instance,napkin]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve plugged(iron)
        # Ensure the iron is plugged in
        achieve is_on(iron)
        # Ensure the iron is on

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and surfaces(ironing_board)
        # Select the ironing board with a surface

        bind iron: item where:
            is_iron(iron) and has_switch(iron) and has_plug(iron)
        # Select the iron

        iron_shirt(shirt, ironing_board, iron)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_clothes_dress_2075_around_dresser_377(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_dress,dresser_instance)
        else:
            exp(clothes_dress,dresser_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,dresser_instance]=True
        close[dresser_instance,clothes_dress]=True
    

behavior find_clothes_hat_2076_around_bookshelf_372(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==372
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(clothes_hat,bookshelf_instance)
        else:
            exp(clothes_hat,bookshelf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,bookshelf_instance]=True
        close[bookshelf_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_iron_shirt(shirt:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the washed shirt is on the ironing board
        achieve inhand(shirt)
        # Momentarily achieve inhand with the shirt for the ironing process
        plugged_in_iron = exists iron: item : is_iron(iron) and plugged(iron) and is_on(iron)
        assert plugged_in_iron
        # Ensure the iron is plugged in and turned on for ironing

behavior turn_off_and_unplug_iron(iron:item):
    body:
        achieve is_off(iron) 
        # Turn the iron off after use
        achieve unplugged(iron) 
        # Unplug the iron

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean, washed shirt
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select an iron that is already plugged in and turned on
        
        find_and_iron_shirt(shirt, ironing_board)
        turn_off_and_unplug_iron(iron)


#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Invalid assignment target: it is not a local variable and not a feature with 0 arguments: plugged_in_iron
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_towel_2083_around_towel_rack_298(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==298
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_phone_47_around_computer_2110(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==2110
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(phone,computer_instance)
        else:
            exp(phone,computer_instance)
    eff:
        unknown[phone]=False
        close[phone,computer_instance]=True
        close[computer_instance,phone]=True
    

#goal_representation
 
behavior find_and_iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the washed shirt is on the ironing board
        plugged_in_iron = exists iron: item : is_iron(iron) and plugged(iron) and is_on(iron)
        assert plugged_in_iron
        # Ensure the iron is plugged in and turned on for ironing

behavior turn_off_and_unplug_iron(iron:item):
    body:
        achieve is_off(iron) 
        # Turn the iron off after use
        achieve unplugged(iron) 
        # Unplug the iron

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean, washed shirt
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select an iron that is already plugged in and turned on

        find_and_iron_shirt(shirt, ironing_board, iron)
        turn_off_and_unplug_iron(iron)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Invalid assignment target: it is not a local variable and not a feature with 0 arguments: plugged_in_iron
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_dress_2075_around_dresser_377(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind dresser_instance:item where:
            is_dresser(dresser_instance) and id[dresser_instance]==377
        achieve close_char(char,dresser_instance)
        if can_open(dresser_instance):
            achieve_once open(dresser_instance)
            exp(clothes_dress,dresser_instance)
        else:
            exp(clothes_dress,dresser_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,dresser_instance]=True
        close[dresser_instance,clothes_dress]=True
    

behavior find_clothes_jacket_2078_around_bed_376(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==376
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(clothes_jacket,bed_instance)
        else:
            exp(clothes_jacket,bed_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,bed_instance]=True
        close[bed_instance,clothes_jacket]=True
    

behavior find_clothes_gloves_2077_around_cupboard_131(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(clothes_gloves,cupboard_instance)
        else:
            exp(clothes_gloves,cupboard_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,cupboard_instance]=True
        close[cupboard_instance,clothes_gloves]=True
    

#goal_representation
behavior find_and_iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        # Ensure the washed shirt is on the ironing board
        assert exists iron: item : is_iron(iron) and plugged(iron) and is_on(iron)
        # Ensure the iron is plugged in and turned on for ironing

behavior turn_off_and_unplug_iron(iron:item):
    body:
        achieve is_off(iron) 
        # Turn the iron off after use
        achieve unplugged(iron) 
        # Unplug the iron

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean, washed shirt
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board
        bind iron: item where:
            is_iron(iron) and plugged(iron) and is_on(iron)
        # Select an iron that is already plugged in and turned on

        find_and_iron_shirt(shirt, ironing_board, iron)
        turn_off_and_unplug_iron(iron)
#goal_representation_end

##############################
