From agent.py
Reset goals: The sub-goals are: 
['1. Find the milk, turkey, egg, fish, and chicken.', '2. Place the milk, turkey, egg, fish, and chicken on the table in the dining room.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_fish_2054_around_kitchen_counter_132(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_fish,kitchen_counter_instance)
        else:
            exp(food_fish,kitchen_counter_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_fish]=True
    

behavior find_milk_2074_around_fridge_140(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_food_chicken_2050_around_fridge_140(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_food_turkey_2071_around_kitchen_counter_132(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_turkey,kitchen_counter_instance)
        else:
            exp(food_turkey,kitchen_counter_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_turkey]=True
    

#exp_behavior_end

#goal_representation
 
def is_food_item_on_table(item:item, table:item):
    # Check if a given item is a specific type of food on a specific table
    symbol is_milk_on_table=is_milk(item) and on(item, table)
    symbol is_turkey_on_table=is_food_turkey(item) and on(item, table)
    symbol is_egg_on_table=is_food_egg(item) and on(item, table)
    symbol is_fish_on_table=is_food_fish(item) and on(item, table)
    symbol is_chicken_on_table=is_food_chicken(item) and on(item, table)
    return is_milk_on_table or is_turkey_on_table or is_egg_on_table or is_fish_on_table or is_chicken_on_table

behavior __goal__():
    body:
        foreach item: item:
            if is_milk(item) or is_food_turkey(item) or is_food_egg(item) or is_food_fish(item) or is_food_chicken(item):
                # Look for unvisited food items of interest
                foreach table: item:
                    if is_table(table) and not visited(table) and not is_food_item_on_table(item, table):
                        observe(table, "Locate milk, turkey, egg, fish, or chicken on the table")
                        # Check the table for the presence of any desired food items

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_food_item_on_table(item:item, table:item):
    # Check if a given item is a specific type of food on a specific table
    symbol is_milk_on_table=is_milk(item) and on(item, table)
    symbol is_turkey_on_table=is_food_turkey(item) and on(item, table)
    symbol is_egg_on_table=is_food_egg(item) and on(item, table)
    symbol is_fish_on_table=is_food_fish(item) and on(item, table)
    symbol is_chicken_on_table=is_food_chicken(item) and on(item, table)
    return is_milk_on_table or is_turkey_on_table or is_egg_on_table or is_fish_on_table or is_chicken_on_table

behavior __goal__():
    body:
        foreach item: item:
            if is_milk(item) or is_food_turkey(item) or is_food_egg(item) or is_food_fish(item) or is_food_chicken(item):
                # Look for unvisited food items of interest
                foreach table: item:
                    if is_table(table) and not visited(table) and not is_food_item_on_table(item, table):
                        observe(table, "Locate milk, turkey, egg, fish, or chicken on the table")
                        # Check the table for the presence of any desired food items

##############################
From agent.py-> find a plan in act()
walk_executor(table_123)obs(table_123, Locate milk, turkey, egg, fish, or chicken on the table)walk_executor(table_127)obs(table_127, Locate milk, turkey, egg, fish, or chicken on the table)walk_executor(table_193)obs(table_193, Locate milk, turkey, egg, fish, or chicken on the table)
##############################
From agent.py
walk_executor(table_123)
Find mat_114. Find drawing_118. Find laptop_2015. Find fork_2103. Find bowl_2095. Find cup_2087. Find cup_2088. Find mouse_2003. Find homework_2011. Find shoes_2001. Robot is inside dining_room_1. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer inside home_office_161.
##############################
From agent.py
obs(table_123, Locate milk, turkey, egg, fish, or chicken on the table)
Get this information:  laptop_2015 is on table_123. fork_2103 is on table_123. table_123 is on floor_17. table_123 is on mat_114. bowl_2095 is on table_123. table_123 is inside dining_room_1. cup_2087 is on table_123. table_123 is facing drawing_118. table_123 is close to wall_5. table_123 is close to cup_2087. table_123 is close to cup_2088. table_123 is close to ceilinglamp_41. table_123 is close to floor_12. table_123 is close to floor_13. table_123 is close to floor_14. table_123 is close to bowl_2095. table_123 is close to floor_17. table_123 is close to mat_114. table_123 is close to floor_18. table_123 is close to mouse_2003. table_123 is close to fork_2103. table_123 is close to bench_122. table_123 is close to homework_2011. table_123 is close to bench_124. table_123 is close to laptop_2015. table_123 is close to character_219. homework_2011 is on table_123. mouse_2003 is on table_123. cup_2088 is on table_123. table_123 is CLEAN.
##############################
From agent.py
walk_executor(table_127)
Find mat_115. Find plate_2105. Find bowl_2097. Find console_2027. Find fork_2104. Find bowl_2096. Find crayon_2030. Find napkin_2014. Robot is inside dining_room_1. Robot is close mat_115. Robot is close floor_20. Robot is close table_127. Robot is no longer close floor_17.Robot is no longer close mat_114.Robot is no longer close table_123.
##############################
From agent.py
obs(table_127, Locate milk, turkey, egg, fish, or chicken on the table)
Get this information:  plate_2105 is on table_127. console_2027 is on table_127. fork_2104 is on table_127. bowl_2096 is on table_127. table_127 is on mat_115. table_127 is on floor_20. crayon_2030 is on table_127. napkin_2014 is on table_127. table_127 is inside dining_room_1. table_127 is facing drawing_118. table_127 is close to wall_11. table_127 is close to console_2027. table_127 is close to crayon_2030. table_127 is close to bowl_2096. table_127 is close to bowl_2097. table_127 is close to mat_115. table_127 is close to floor_20. table_127 is close to floor_19. table_127 is close to napkin_2014. table_127 is close to floor_23. table_127 is close to fork_2104. table_127 is close to plate_2105. table_127 is close to bench_126. table_127 is close to bench_125. table_127 is close to floor_24. table_127 is close to character_219. bowl_2097 is on table_127. table_127 is CLEAN.
##############################
From agent.py
walk_executor(table_193)
Find keyboard_2111. Find drawing_196. Find mouse_2112. Find oil_2005. Find dvd_player_2000. Find chair_2118. Find pillow_195. Find laser_pointer_2025. Find mat_201. Robot is inside home_office_161. Robot is close table_193. Robot is no longer inside dining_room_1.Robot is no longer close mat_115.Robot is no longer close floor_20.Robot is no longer close table_127.
##############################
From agent.py
obs(table_193, Locate milk, turkey, egg, fish, or chicken on the table)
Get this information:  keyboard_2111 is on table_193. table_193 is facing drawing_196. mouse_2112 is on table_193. oil_2005 is on table_193. orchid_200 is on table_193. dvd_player_2000 is on table_193. computer_2110 is on table_193. laser_pointer_2025 is on table_193. table_193 is close to mouse_2112. table_193 is close to couch_192. table_193 is close to pillow_195. table_193 is close to floor_164. table_193 is close to floor_165. table_193 is close to chair_2118. table_193 is close to curtain_199. table_193 is close to orchid_200. table_193 is close to floor_168. table_193 is close to wall_170. table_193 is close to floor_167. table_193 is close to mat_201. table_193 is close to laser_pointer_2025. table_193 is close to wall_174. table_193 is close to dvd_player_2000. table_193 is close to oil_2005. table_193 is close to computer_2110. table_193 is close to keyboard_2111. table_193 is close to character_219. table_193 is inside home_office_161. table_193 is CLEAN.
##############################
From agent.py
Human Instruction: You need to locate the milk, turkey, egg, fish, and chicken. None of these items have been found on any of the tables that you visited. Continue searching to locate these specific food items.

The actions you have taken:
Action 1: Walk to table_123.
Action 2: Invalid parameter input.
Action 3: Walk to table_127.
Action 4: Invalid parameter input.
Action 5: Walk to table_193.
Action 6: Invalid parameter input.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_fish_2054_around_kitchen_counter_132(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_fish,kitchen_counter_instance)
        else:
            exp(food_fish,kitchen_counter_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_fish]=True
    

behavior find_milk_2074_around_fridge_140(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_food_egg_2053_around_kitchen_counter_132(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_egg,kitchen_counter_instance)
        else:
            exp(food_egg,kitchen_counter_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_egg]=True
    

behavior find_food_chicken_2050_around_kitchen_counter_132(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_chicken,kitchen_counter_instance)
        else:
            exp(food_chicken,kitchen_counter_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_chicken]=True
    

behavior find_food_turkey_2071_around_kitchen_counter_132(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_turkey,kitchen_counter_instance)
        else:
            exp(food_turkey,kitchen_counter_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_turkey]=True
    

#exp_behavior_end

#goal_representation
 
def is_needed_item_present(table:item):
    # Function to check if any of the needed items are present on a specified table
    symbol is_item_present=exists o: item : (is_food_turkey(o) or is_food_egg(o) or is_food_fish(o) or is_food_chicken(o) or is_milk(o)) and on(o, table)
    return is_item_present

behavior __goal__():
    body:
        # Check if a table has needed items based on the available information
        if exists table: item : is_table(table) and is_needed_item_present(table):
            bind table: item where:
                is_table(table) and is_needed_item_present(table)
            # Ensure the character is close to the found table having needed items
            achieve close_char(char, table)

        else:
            # If no known table with needed items, explore to locate one
            foreach table: item:
                if is_table(table) and not visited(table):
                    observe(table, "Check for milk, turkey, egg, fish, or chicken")

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2074_around_fridge_140(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_food_egg_2053_around_kitchen_counter_132(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_egg,kitchen_counter_instance)
        else:
            exp(food_egg,kitchen_counter_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_egg]=True
    

behavior find_food_chicken_2050_around_kitchen_counter_132(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_chicken,kitchen_counter_instance)
        else:
            exp(food_chicken,kitchen_counter_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_chicken]=True
    

behavior find_food_turkey_2071_around_kitchen_counter_132(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_turkey,kitchen_counter_instance)
        else:
            exp(food_turkey,kitchen_counter_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_turkey]=True
    

#exp_behavior_end

#goal_representation
 
def is_food_item_found(item: item):
    # Function to check if a food item is found anywhere
    symbol item_found=exists location: item : visited(location) and on(item, location)
    return item_found

behavior __goal__():
    body:
        foreach item: item:
            if (is_milk(item) or is_food_turkey(item) or is_food_egg(item) or is_food_fish(item) or is_food_chicken(item)) and not is_food_item_found(item):
                observe(item, "Locate the specific food item")

#goal_representation_end

##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Find the milk, turkey, egg, fish, and chicken.', '2. Put the milk, turkey, egg, fish, and chicken on the table in the dining room.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_fish_2054_around_kitchen_counter_132(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_fish,kitchen_counter_instance)
        else:
            exp(food_fish,kitchen_counter_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_fish]=True
    

behavior find_milk_2074_around_fridge_140(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_food_chicken_2050_around_kitchen_counter_132(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_chicken,kitchen_counter_instance)
        else:
            exp(food_chicken,kitchen_counter_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_chicken]=True
    

behavior find_food_turkey_2071_around_kitchen_counter_132(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_turkey,kitchen_counter_instance)
        else:
            exp(food_turkey,kitchen_counter_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_turkey]=True
    

#exp_behavior_end

#goal_representation
 
def is_specific_food(x:item):
    # Check if the item is one of the desired food items: milk, turkey, egg, fish, or chicken
    return is_milk(x) or is_food_turkey(x) or is_food_egg(x) or is_food_fish(x) or is_food_chicken(x)

behavior find_specific_food_on_table(table:item):
    body:
        observe(table, "Check for milk, turkey, egg, fish, and chicken on the table")

behavior __goal__():
    body:
        foreach table: item:
            # Check all unvisited tables to locate specific food items
            if is_table(table) and not visited(table):
                find_specific_food_on_table(table)
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2074_around_fridge_140(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

behavior find_food_chicken_2050_around_kitchen_counter_132(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_chicken,kitchen_counter_instance)
        else:
            exp(food_chicken,kitchen_counter_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_chicken]=True
    

behavior find_food_turkey_2071_around_kitchen_counter_132(food_turkey:item):
    goal: not unknown(food_turkey)
    body:
        assert is_food_turkey(food_turkey)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_turkey,kitchen_counter_instance)
        else:
            exp(food_turkey,kitchen_counter_instance)
    eff:
        unknown[food_turkey]=False
        close[food_turkey,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_turkey]=True
    

behavior find_food_fish_2054_around_kitchen_counter_132(food_fish:item):
    goal: not unknown(food_fish)
    body:
        assert is_food_fish(food_fish)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_fish,kitchen_counter_instance)
        else:
            exp(food_fish,kitchen_counter_instance)
    eff:
        unknown[food_fish]=False
        close[food_fish,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_fish]=True
    

#exp_behavior_end

#goal_representation
 
def has_correct_food(item: item):
    # Function to check if the item is one of the desired foods
    symbol is_correct_food = is_milk(item) or is_food_turkey(item) or is_food_egg(item) or is_food_fish(item) or is_food_chicken(item)
    return is_correct_food

behavior locate_food(item: item):
    body:
        observe(item, "Determine the type of food")

behavior __goal__():
    body:
        foreach item: item:
            # Iterate over all items to check each one
            if has_correct_food(item) and not visited(item):
                # If the item is one of the desired foods and has not been visited
                locate_food(item)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_correct_food(item: item):
    # Function to check if the item is one of the desired foods
    symbol is_correct_food = is_milk(item) or is_food_turkey(item) or is_food_egg(item) or is_food_fish(item) or is_food_chicken(item)
    return is_correct_food

behavior locate_food(item: item):
    body:
        observe(item, "Determine the type of food")

behavior __goal__():
    body:
        foreach item: item:
            # Iterate over all items to check each one
            if has_correct_food(item) and not visited(item):
                # If the item is one of the desired foods and has not been visited
                locate_food(item)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(food_chicken_2050, kitchen_counter_132)walk_executor(food_chicken_2050)obs(food_chicken_2050, Determine the type of food)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)obs(food_egg_2053, Determine the type of food)walk_executor(kitchen_counter_132)exp(food_fish_2054, kitchen_counter_132)walk_executor(food_fish_2054)obs(food_fish_2054, Determine the type of food)walk_executor(kitchen_counter_132)exp(food_turkey_2071, kitchen_counter_132)walk_executor(food_turkey_2071)obs(food_turkey_2071, Determine the type of food)walk_executor(fridge_140)exp(milk_2074, fridge_140)walk_executor(milk_2074)open_executor(milk_2074)obs(milk_2074, Determine the type of food)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Find pot_54. Find tray_142. Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is no longer inside home_office_161.Robot is no longer close table_193.
##############################
From agent.py
exp(food_chicken_2050, kitchen_counter_132)
Failed to find food_chicken_2050 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_chicken_2050, fridge_140)walk_executor(food_chicken_2050)obs(food_chicken_2050, Determine the type of food)walk_executor(kitchen_counter_128)exp(food_egg_2053, kitchen_counter_128)walk_executor(food_egg_2053)obs(food_egg_2053, Determine the type of food)walk_executor(fridge_140)exp(food_fish_2054, fridge_140)walk_executor(food_fish_2054)obs(food_fish_2054, Determine the type of food)walk_executor(fridge_140)exp(food_turkey_2071, fridge_140)walk_executor(food_turkey_2071)obs(food_turkey_2071, Determine the type of food)walk_executor(fridge_140)exp(milk_2074, fridge_140)walk_executor(milk_2074)open_executor(milk_2074)obs(milk_2074, Determine the type of food)
##############################
From agent.py
walk_executor(fridge_140)
Find food_cereal_2048. Find food_cheese_2049. Find food_chicken_2050. Find food_dessert_2051. Find food_donut_2052. Find food_egg_2053. Find food_fish_2054. Find food_food_2055. Find food_fruit_2056. Find food_hamburger_2057. Find food_ice_cream_2058. Find food_jam_2059. Find food_kiwi_2060. Find food_lemon_2061. Find food_noodles_2062. Find food_oatmeal_2063. Find food_peanut_butter_2064. Find food_pizza_2065. Find food_potato_2066. Find food_rice_2067. Find food_salt_2068. Find food_snack_2069. Find food_sugar_2070. Find food_turkey_2071. Find food_vegetable_2072. Find dry_pasta_2073. Find milk_2074. Find sauce_2101. Find food_steak_2042. Find food_apple_2043. Find food_bacon_2044. Find food_banana_2045. Find food_cake_2046. Find food_carrot_2047. Find chair_138. Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Robot is no longer close kitchen_counter_132.
##############################
From agent.py
switchoff_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
open_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
exp(food_chicken_2050, fridge_140)
Find food_chicken_2050. 
##############################
From agent.py-> find a plan in act()
obs(food_chicken_2050, Determine the type of food)obs(food_egg_2053, Determine the type of food)obs(food_fish_2054, Determine the type of food)obs(food_turkey_2071, Determine the type of food)open_executor(milk_2074)obs(milk_2074, Determine the type of food)
##############################
From agent.py
obs(food_chicken_2050, Determine the type of food)
Get this information:  food_chicken_2050 is inside dining_room_1. food_chicken_2050 is inside fridge_140. food_chicken_2050 is close to fridge_140. food_chicken_2050 is close to character_219. food_chicken_2050 is CLEAN.
##############################
From agent.py
obs(food_egg_2053, Determine the type of food)
Get this information:  food_egg_2053 is close to fridge_140. food_egg_2053 is close to character_219. food_egg_2053 is inside dining_room_1. food_egg_2053 is inside fridge_140. food_egg_2053 is CLEAN.
##############################
From agent.py
obs(food_fish_2054, Determine the type of food)
Get this information:  food_fish_2054 is close to fridge_140. food_fish_2054 is close to character_219. food_fish_2054 is inside dining_room_1. food_fish_2054 is inside fridge_140. food_fish_2054 is CLEAN.
##############################
From agent.py
obs(food_turkey_2071, Determine the type of food)
Get this information:  food_turkey_2071 is inside dining_room_1. food_turkey_2071 is inside fridge_140. food_turkey_2071 is close to fridge_140. food_turkey_2071 is close to character_219. food_turkey_2071 is CLEAN.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_bread_2016_around_cupboard_131(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_bread,cupboard_instance)
        else:
            exp(food_bread,cupboard_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,cupboard_instance]=True
        close[cupboard_instance,food_bread]=True
    

behavior find_food_butter_2018_around_cupboard_131(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_butter,cupboard_instance)
        else:
            exp(food_butter,cupboard_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,cupboard_instance]=True
        close[cupboard_instance,food_butter]=True
    

behavior find_food_orange_2008_around_toaster_144(food_orange:item):
    goal: not unknown(food_orange)
    body:
        assert is_food_orange(food_orange)
        bind toaster_instance:item where:
            is_toaster(toaster_instance) and id[toaster_instance]==144
        achieve close_char(char,toaster_instance)
        if can_open(toaster_instance):
            achieve_once open(toaster_instance)
            exp(food_orange,toaster_instance)
        else:
            exp(food_orange,toaster_instance)
    eff:
        unknown[food_orange]=False
        close[food_orange,toaster_instance]=True
        close[toaster_instance,food_orange]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_food_items(milk:item, turkey:item, egg:item, fish:item, chicken:item):
    body:
        achieve_once visited(milk)
        achieve_once visited(turkey)
        achieve_once visited(egg)
        achieve_once visited(fish)
        achieve_once visited(chicken)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Bind the milk item

        bind turkey: item where:
            is_food_turkey(turkey)
        # Bind the turkey item

        bind egg: item where:
            is_food_egg(egg)
        # Bind the egg item

        bind fish: item where:
            is_food_fish(fish)
        # Bind the fish item

        bind chicken: item where:
            is_food_chicken(chicken)
        # Bind the chicken item

        find_food_items(milk, turkey, egg, fish, chicken)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior find_food_items(milk:item, turkey:item, egg:item, fish:item, chicken:item):
    body:
        achieve_once visited(milk)
        achieve_once visited(turkey)
        achieve_once visited(egg)
        achieve_once visited(fish)
        achieve_once visited(chicken)

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Bind the milk item

        bind turkey: item where:
            is_food_turkey(turkey)
        # Bind the turkey item

        bind egg: item where:
            is_food_egg(egg)
        # Bind the egg item

        bind fish: item where:
            is_food_fish(fish)
        # Bind the fish item

        bind chicken: item where:
            is_food_chicken(chicken)
        # Bind the chicken item

        find_food_items(milk, turkey, egg, fish, chicken)

##############################
From agent.py-> find a plan in act()
open_executor(milk_2074)obs(milk_2074, look around this place)obs(food_turkey_2071, look around this place)obs(food_egg_2053, look around this place)obs(food_fish_2054, look around this place)obs(food_chicken_2050, look around this place)
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_bread_2016_around_kitchen_counter_128(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_bread,kitchen_counter_instance)
        else:
            exp(food_bread,kitchen_counter_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_bread]=True
    

behavior find_food_onion_2026_around_kitchen_counter_128(food_onion:item):
    goal: not unknown(food_onion)
    body:
        assert is_food_onion(food_onion)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==128
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_onion,kitchen_counter_instance)
        else:
            exp(food_onion,kitchen_counter_instance)
    eff:
        unknown[food_onion]=False
        close[food_onion,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_onion]=True
    

#exp_behavior_end

#goal_representation
 
def has_food(milk:item, turkey:item, egg:item, fish:item, chicken:item):
    # Function to check if the specific food items are found
    symbol has_milk=exists x: item : is_milk(x) and id[x]==id[milk]
    symbol has_turkey=exists y: item : is_food_turkey(y) and id[y]==id[turkey]
    symbol has_egg=exists z: item : is_food_egg(z) and id[z]==id[egg]
    symbol has_fish=exists a: item : is_food_fish(a) and id[a]==id[fish]
    symbol has_chicken=exists b: item : is_food_chicken(b) and id[b]==id[chicken]
    return has_milk and has_turkey and has_egg and has_fish and has_chicken

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        bind turkey: item where:
            is_food_turkey(turkey)
        bind egg: item where:
            is_food_egg(egg)
        bind fish: item where:
            is_food_fish(fish)
        bind chicken: item where:
            is_food_chicken(chicken)

        if not has_food(milk, turkey, egg, fish, chicken):
            foreach item: item:
                if is_milk(item) or is_food_turkey(item) or is_food_egg(item) or is_food_fish(item) or is_food_chicken(item):
                    if not visited(item):
                        observe(item, "Determine the type of food")

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_bread_2016_around_kitchen_counter_129(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_bread,kitchen_counter_instance)
        else:
            exp(food_bread,kitchen_counter_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_bread]=True
    

behavior find_towel_rack_299_around_bathroom_cabinet_305(towel_rack:item):
    goal: not unknown(towel_rack)
    body:
        assert is_towel_rack(towel_rack)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(towel_rack,bathroom_cabinet_instance)
        else:
            exp(towel_rack,bathroom_cabinet_instance)
    eff:
        unknown[towel_rack]=False
        close[towel_rack,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,towel_rack]=True
    

behavior find_knife_2036_around_knifeblock_52(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==52
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

#exp_behavior_end

#goal_representation
 
def is_item_found(item:item):
    # Function to check if the specified food item is already found
    symbol item_found=visited(item)
    return item_found

behavior find_food_item(food_item:item):
    body:
        if not is_item_found(food_item):
            # If the item is not found yet
            bind fridge: item where:
                is_fridge(fridge)
            observe(fridge, "Check for the food item inside")
            # Observe inside the fridge if the food item is there

            bind kitchen_counter: item where:
                is_kitchen_counter(kitchen_counter)
            observe(kitchen_counter, "Check for the food item around the kitchen counter")
            # Observe around the kitchen counter if the food item is there

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind turkey: item where:
            is_food_turkey(turkey)
        # Select the turkey

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg

        bind fish: item where:
            is_food_fish(fish)
        # Select the fish

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken

        find_food_item(milk)
        find_food_item(turkey)
        find_food_item(egg)
        find_food_item(fish)
        find_food_item(chicken)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_item_found(item:item):
    # Function to check if the specified food item is already found
    symbol item_found=visited(item)
    return item_found

behavior find_food_item(food_item:item):
    body:
        if not is_item_found(food_item):
            # If the item is not found yet
            bind fridge: item where:
                is_fridge(fridge)
            observe(fridge, "Check for the food item inside")
            # Observe inside the fridge if the food item is there

            bind kitchen_counter: item where:
                is_kitchen_counter(kitchen_counter)
            observe(kitchen_counter, "Check for the food item around the kitchen counter")
            # Observe around the kitchen counter if the food item is there

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind turkey: item where:
            is_food_turkey(turkey)
        # Select the turkey

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg

        bind fish: item where:
            is_food_fish(fish)
        # Select the fish

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select the chicken

        find_food_item(milk)
        find_food_item(turkey)
        find_food_item(egg)
        find_food_item(fish)
        find_food_item(chicken)

##############################
From agent.py-> find a plan in act()
obs(fridge_140, Check for the food item inside)walk_executor(kitchen_counter_128)obs(kitchen_counter_128, Check for the food item around the kitchen counter)walk_executor(fridge_140)obs(fridge_140, Check for the food item inside)walk_executor(kitchen_counter_128)obs(kitchen_counter_128, Check for the food item around the kitchen counter)walk_executor(fridge_140)obs(fridge_140, Check for the food item inside)walk_executor(kitchen_counter_128)obs(kitchen_counter_128, Check for the food item around the kitchen counter)walk_executor(fridge_140)obs(fridge_140, Check for the food item inside)walk_executor(kitchen_counter_128)obs(kitchen_counter_128, Check for the food item around the kitchen counter)walk_executor(fridge_140)obs(fridge_140, Check for the food item inside)walk_executor(kitchen_counter_128)obs(kitchen_counter_128, Check for the food item around the kitchen counter)
##############################
From agent.py
obs(fridge_140, Check for the food item inside)
Get this information:  food_chicken_2050 is inside fridge_140. food_steak_2042 is inside fridge_140. food_egg_2053 is inside fridge_140. dry_pasta_2073 is inside fridge_140. food_banana_2045 is inside fridge_140. food_cereal_2048 is inside fridge_140. food_rice_2067 is inside fridge_140. food_hamburger_2057 is inside fridge_140. food_salt_2068 is inside fridge_140. food_jam_2059 is inside fridge_140. food_sugar_2070 is inside fridge_140. fridge_140 is close to food_cereal_2048. fridge_140 is close to food_cheese_2049. fridge_140 is close to food_chicken_2050. fridge_140 is close to food_dessert_2051. fridge_140 is close to food_donut_2052. fridge_140 is close to food_egg_2053. fridge_140 is close to food_fish_2054. fridge_140 is close to food_food_2055. fridge_140 is close to food_fruit_2056. fridge_140 is close to food_hamburger_2057. fridge_140 is close to food_ice_cream_2058. fridge_140 is close to food_jam_2059. fridge_140 is close to food_kiwi_2060. fridge_140 is close to food_lemon_2061. fridge_140 is close to food_noodles_2062. fridge_140 is close to food_oatmeal_2063. fridge_140 is close to food_peanut_butter_2064. fridge_140 is close to food_pizza_2065. fridge_140 is close to food_potato_2066. fridge_140 is close to food_rice_2067. fridge_140 is close to food_salt_2068. fridge_140 is close to food_snack_2069. fridge_140 is close to food_sugar_2070. fridge_140 is close to food_turkey_2071. fridge_140 is close to food_vegetable_2072. fridge_140 is close to dry_pasta_2073. fridge_140 is close to milk_2074. fridge_140 is close to cupboard_131. fridge_140 is close to floor_22. fridge_140 is close to ceiling_34. fridge_140 is close to wall_7. fridge_140 is close to wall_8. fridge_140 is close to kitchen_counter_129. fridge_140 is close to sauce_2101. fridge_140 is close to chair_138. fridge_140 is close to toaster_144. fridge_140 is close to food_steak_2042. fridge_140 is close to food_apple_2043. fridge_140 is close to food_bacon_2044. fridge_140 is close to food_banana_2045. fridge_140 is close to food_cake_2046. fridge_140 is close to food_carrot_2047. fridge_140 is close to character_219. fridge_140 is on floor_22. food_apple_2043 is inside fridge_140. food_dessert_2051 is inside fridge_140. food_noodles_2062 is inside fridge_140. food_donut_2052 is inside fridge_140. food_turkey_2071 is inside fridge_140. fridge_140 is inside dining_room_1. sauce_2101 is inside fridge_140. food_fish_2054 is inside fridge_140. food_pizza_2065 is inside fridge_140. food_cake_2046 is inside fridge_140. food_carrot_2047 is inside fridge_140. food_potato_2066 is inside fridge_140. food_cheese_2049 is inside fridge_140. food_kiwi_2060 is inside fridge_140. food_snack_2069 is inside fridge_140. food_lemon_2061 is inside fridge_140. food_vegetable_2072 is inside fridge_140. food_bacon_2044 is inside fridge_140. food_oatmeal_2063 is inside fridge_140. milk_2074 is inside fridge_140. food_peanut_butter_2064 is inside fridge_140. food_food_2055 is inside fridge_140. food_fruit_2056 is inside fridge_140. food_ice_cream_2058 is inside fridge_140. fridge_140 is OPEN. fridge_140 is CLEAN. fridge_140 is OFF. fridge_140 is PLUGGED_IN.
##############################
From agent.py
walk_executor(kitchen_counter_128)
Find spectacles_2106. Find cutting_board_2080. Find food_orange_2008. Robot is inside dining_room_1. Robot is close kitchen_counter_128. Robot is close floor_15. Robot is no longer close food_cereal_2048.Robot is no longer close food_cheese_2049.Robot is no longer close food_chicken_2050.Robot is no longer close food_dessert_2051.Robot is no longer close food_donut_2052.Robot is no longer close food_egg_2053.Robot is no longer close food_fish_2054.Robot is no longer close food_food_2055.Robot is no longer close food_fruit_2056.Robot is no longer close food_hamburger_2057.Robot is no longer close food_ice_cream_2058.Robot is no longer close food_jam_2059.Robot is no longer close food_kiwi_2060.Robot is no longer close food_lemon_2061.Robot is no longer close food_noodles_2062.Robot is no longer close food_oatmeal_2063.Robot is no longer close food_peanut_butter_2064.Robot is no longer close food_pizza_2065.Robot is no longer close food_potato_2066.Robot is no longer close food_rice_2067.Robot is no longer close food_salt_2068.Robot is no longer close food_snack_2069.Robot is no longer close food_sugar_2070.Robot is no longer close food_turkey_2071.Robot is no longer close food_vegetable_2072.Robot is no longer close dry_pasta_2073.Robot is no longer close milk_2074.Robot is no longer close floor_22.Robot is no longer close sauce_2101.Robot is no longer close fridge_140.Robot is no longer close food_steak_2042.Robot is no longer close food_apple_2043.Robot is no longer close food_bacon_2044.Robot is no longer close food_banana_2045.Robot is no longer close food_cake_2046.Robot is no longer close food_carrot_2047.
##############################
From agent.py
obs(kitchen_counter_128, Check for the food item around the kitchen counter)
Get this information:  kitchen_counter_128 is inside dining_room_1. spectacles_2106 is on kitchen_counter_128. kitchen_counter_128 is close to cutting_board_2080. kitchen_counter_128 is close to cupboard_130. kitchen_counter_128 is close to kitchen_counter_132. kitchen_counter_128 is close to sink_133. kitchen_counter_128 is close to wall_6. kitchen_counter_128 is close to floor_167. kitchen_counter_128 is close to floor_165. kitchen_counter_128 is close to wall_172. kitchen_counter_128 is close to wall_174. kitchen_counter_128 is close to floor_15. kitchen_counter_128 is close to microwave_149. kitchen_counter_128 is close to food_orange_2008. kitchen_counter_128 is close to spectacles_2106. kitchen_counter_128 is close to ceiling_27. kitchen_counter_128 is close to bookshelf_188. kitchen_counter_128 is close to bookshelf_189. kitchen_counter_128 is close to character_219. food_orange_2008 is on kitchen_counter_128. kitchen_counter_128 is on floor_15. cutting_board_2080 is on kitchen_counter_128. kitchen_counter_128 is CLEAN. kitchen_counter_128 is CLOSED.
##############################
From agent.py
walk_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Robot is no longer close kitchen_counter_128.Robot is no longer close floor_15.
##############################
From agent.py
obs(fridge_140, Check for the food item inside)
Get this information:  food_chicken_2050 is inside fridge_140. food_steak_2042 is inside fridge_140. food_egg_2053 is inside fridge_140. dry_pasta_2073 is inside fridge_140. food_banana_2045 is inside fridge_140. food_cereal_2048 is inside fridge_140. food_rice_2067 is inside fridge_140. food_hamburger_2057 is inside fridge_140. food_salt_2068 is inside fridge_140. food_jam_2059 is inside fridge_140. food_sugar_2070 is inside fridge_140. fridge_140 is close to food_cereal_2048. fridge_140 is close to food_cheese_2049. fridge_140 is close to food_chicken_2050. fridge_140 is close to food_dessert_2051. fridge_140 is close to food_donut_2052. fridge_140 is close to food_egg_2053. fridge_140 is close to food_fish_2054. fridge_140 is close to food_food_2055. fridge_140 is close to food_fruit_2056. fridge_140 is close to food_hamburger_2057. fridge_140 is close to food_ice_cream_2058. fridge_140 is close to food_jam_2059. fridge_140 is close to food_kiwi_2060. fridge_140 is close to food_lemon_2061. fridge_140 is close to food_noodles_2062. fridge_140 is close to food_oatmeal_2063. fridge_140 is close to food_peanut_butter_2064. fridge_140 is close to food_pizza_2065. fridge_140 is close to food_potato_2066. fridge_140 is close to food_rice_2067. fridge_140 is close to food_salt_2068. fridge_140 is close to food_snack_2069. fridge_140 is close to food_sugar_2070. fridge_140 is close to food_turkey_2071. fridge_140 is close to food_vegetable_2072. fridge_140 is close to dry_pasta_2073. fridge_140 is close to milk_2074. fridge_140 is close to cupboard_131. fridge_140 is close to floor_22. fridge_140 is close to ceiling_34. fridge_140 is close to wall_7. fridge_140 is close to wall_8. fridge_140 is close to kitchen_counter_129. fridge_140 is close to sauce_2101. fridge_140 is close to chair_138. fridge_140 is close to toaster_144. fridge_140 is close to food_steak_2042. fridge_140 is close to food_apple_2043. fridge_140 is close to food_bacon_2044. fridge_140 is close to food_banana_2045. fridge_140 is close to food_cake_2046. fridge_140 is close to food_carrot_2047. fridge_140 is close to character_219. fridge_140 is on floor_22. food_apple_2043 is inside fridge_140. food_dessert_2051 is inside fridge_140. food_noodles_2062 is inside fridge_140. food_donut_2052 is inside fridge_140. food_turkey_2071 is inside fridge_140. fridge_140 is inside dining_room_1. sauce_2101 is inside fridge_140. food_fish_2054 is inside fridge_140. food_pizza_2065 is inside fridge_140. food_cake_2046 is inside fridge_140. food_carrot_2047 is inside fridge_140. food_potato_2066 is inside fridge_140. food_cheese_2049 is inside fridge_140. food_kiwi_2060 is inside fridge_140. food_snack_2069 is inside fridge_140. food_lemon_2061 is inside fridge_140. food_vegetable_2072 is inside fridge_140. food_bacon_2044 is inside fridge_140. food_oatmeal_2063 is inside fridge_140. milk_2074 is inside fridge_140. food_peanut_butter_2064 is inside fridge_140. food_food_2055 is inside fridge_140. food_fruit_2056 is inside fridge_140. food_ice_cream_2058 is inside fridge_140. fridge_140 is OPEN. fridge_140 is CLEAN. fridge_140 is OFF. fridge_140 is PLUGGED_IN.
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot is inside dining_room_1. Robot is close kitchen_counter_128. Robot is close floor_15. Robot is no longer close food_cereal_2048.Robot is no longer close food_cheese_2049.Robot is no longer close food_chicken_2050.Robot is no longer close food_dessert_2051.Robot is no longer close food_donut_2052.Robot is no longer close food_egg_2053.Robot is no longer close food_fish_2054.Robot is no longer close food_food_2055.Robot is no longer close food_fruit_2056.Robot is no longer close food_hamburger_2057.Robot is no longer close food_ice_cream_2058.Robot is no longer close food_jam_2059.Robot is no longer close food_kiwi_2060.Robot is no longer close food_lemon_2061.Robot is no longer close food_noodles_2062.Robot is no longer close food_oatmeal_2063.Robot is no longer close food_peanut_butter_2064.Robot is no longer close food_pizza_2065.Robot is no longer close food_potato_2066.Robot is no longer close food_rice_2067.Robot is no longer close food_salt_2068.Robot is no longer close food_snack_2069.Robot is no longer close food_sugar_2070.Robot is no longer close food_turkey_2071.Robot is no longer close food_vegetable_2072.Robot is no longer close dry_pasta_2073.Robot is no longer close milk_2074.Robot is no longer close floor_22.Robot is no longer close sauce_2101.Robot is no longer close fridge_140.Robot is no longer close food_steak_2042.Robot is no longer close food_apple_2043.Robot is no longer close food_bacon_2044.Robot is no longer close food_banana_2045.Robot is no longer close food_cake_2046.Robot is no longer close food_carrot_2047.
##############################
From agent.py
obs(kitchen_counter_128, Check for the food item around the kitchen counter)
Get this information:  kitchen_counter_128 is inside dining_room_1. spectacles_2106 is on kitchen_counter_128. kitchen_counter_128 is close to cutting_board_2080. kitchen_counter_128 is close to cupboard_130. kitchen_counter_128 is close to kitchen_counter_132. kitchen_counter_128 is close to sink_133. kitchen_counter_128 is close to wall_6. kitchen_counter_128 is close to floor_167. kitchen_counter_128 is close to floor_165. kitchen_counter_128 is close to wall_172. kitchen_counter_128 is close to wall_174. kitchen_counter_128 is close to floor_15. kitchen_counter_128 is close to microwave_149. kitchen_counter_128 is close to food_orange_2008. kitchen_counter_128 is close to spectacles_2106. kitchen_counter_128 is close to ceiling_27. kitchen_counter_128 is close to bookshelf_188. kitchen_counter_128 is close to bookshelf_189. kitchen_counter_128 is close to character_219. food_orange_2008 is on kitchen_counter_128. kitchen_counter_128 is on floor_15. cutting_board_2080 is on kitchen_counter_128. kitchen_counter_128 is CLEAN. kitchen_counter_128 is CLOSED.
##############################
From agent.py
walk_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Robot is no longer close kitchen_counter_128.Robot is no longer close floor_15.
##############################
From agent.py
obs(fridge_140, Check for the food item inside)
Get this information:  food_chicken_2050 is inside fridge_140. food_steak_2042 is inside fridge_140. food_egg_2053 is inside fridge_140. dry_pasta_2073 is inside fridge_140. food_banana_2045 is inside fridge_140. food_cereal_2048 is inside fridge_140. food_rice_2067 is inside fridge_140. food_hamburger_2057 is inside fridge_140. food_salt_2068 is inside fridge_140. food_jam_2059 is inside fridge_140. food_sugar_2070 is inside fridge_140. fridge_140 is close to food_cereal_2048. fridge_140 is close to food_cheese_2049. fridge_140 is close to food_chicken_2050. fridge_140 is close to food_dessert_2051. fridge_140 is close to food_donut_2052. fridge_140 is close to food_egg_2053. fridge_140 is close to food_fish_2054. fridge_140 is close to food_food_2055. fridge_140 is close to food_fruit_2056. fridge_140 is close to food_hamburger_2057. fridge_140 is close to food_ice_cream_2058. fridge_140 is close to food_jam_2059. fridge_140 is close to food_kiwi_2060. fridge_140 is close to food_lemon_2061. fridge_140 is close to food_noodles_2062. fridge_140 is close to food_oatmeal_2063. fridge_140 is close to food_peanut_butter_2064. fridge_140 is close to food_pizza_2065. fridge_140 is close to food_potato_2066. fridge_140 is close to food_rice_2067. fridge_140 is close to food_salt_2068. fridge_140 is close to food_snack_2069. fridge_140 is close to food_sugar_2070. fridge_140 is close to food_turkey_2071. fridge_140 is close to food_vegetable_2072. fridge_140 is close to dry_pasta_2073. fridge_140 is close to milk_2074. fridge_140 is close to cupboard_131. fridge_140 is close to floor_22. fridge_140 is close to ceiling_34. fridge_140 is close to wall_7. fridge_140 is close to wall_8. fridge_140 is close to kitchen_counter_129. fridge_140 is close to sauce_2101. fridge_140 is close to chair_138. fridge_140 is close to toaster_144. fridge_140 is close to food_steak_2042. fridge_140 is close to food_apple_2043. fridge_140 is close to food_bacon_2044. fridge_140 is close to food_banana_2045. fridge_140 is close to food_cake_2046. fridge_140 is close to food_carrot_2047. fridge_140 is close to character_219. fridge_140 is on floor_22. food_apple_2043 is inside fridge_140. food_dessert_2051 is inside fridge_140. food_noodles_2062 is inside fridge_140. food_donut_2052 is inside fridge_140. food_turkey_2071 is inside fridge_140. fridge_140 is inside dining_room_1. sauce_2101 is inside fridge_140. food_fish_2054 is inside fridge_140. food_pizza_2065 is inside fridge_140. food_cake_2046 is inside fridge_140. food_carrot_2047 is inside fridge_140. food_potato_2066 is inside fridge_140. food_cheese_2049 is inside fridge_140. food_kiwi_2060 is inside fridge_140. food_snack_2069 is inside fridge_140. food_lemon_2061 is inside fridge_140. food_vegetable_2072 is inside fridge_140. food_bacon_2044 is inside fridge_140. food_oatmeal_2063 is inside fridge_140. milk_2074 is inside fridge_140. food_peanut_butter_2064 is inside fridge_140. food_food_2055 is inside fridge_140. food_fruit_2056 is inside fridge_140. food_ice_cream_2058 is inside fridge_140. fridge_140 is OPEN. fridge_140 is CLEAN. fridge_140 is OFF. fridge_140 is PLUGGED_IN.
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot is inside dining_room_1. Robot is close kitchen_counter_128. Robot is close floor_15. Robot is no longer close food_cereal_2048.Robot is no longer close food_cheese_2049.Robot is no longer close food_chicken_2050.Robot is no longer close food_dessert_2051.Robot is no longer close food_donut_2052.Robot is no longer close food_egg_2053.Robot is no longer close food_fish_2054.Robot is no longer close food_food_2055.Robot is no longer close food_fruit_2056.Robot is no longer close food_hamburger_2057.Robot is no longer close food_ice_cream_2058.Robot is no longer close food_jam_2059.Robot is no longer close food_kiwi_2060.Robot is no longer close food_lemon_2061.Robot is no longer close food_noodles_2062.Robot is no longer close food_oatmeal_2063.Robot is no longer close food_peanut_butter_2064.Robot is no longer close food_pizza_2065.Robot is no longer close food_potato_2066.Robot is no longer close food_rice_2067.Robot is no longer close food_salt_2068.Robot is no longer close food_snack_2069.Robot is no longer close food_sugar_2070.Robot is no longer close food_turkey_2071.Robot is no longer close food_vegetable_2072.Robot is no longer close dry_pasta_2073.Robot is no longer close milk_2074.Robot is no longer close floor_22.Robot is no longer close sauce_2101.Robot is no longer close fridge_140.Robot is no longer close food_steak_2042.Robot is no longer close food_apple_2043.Robot is no longer close food_bacon_2044.Robot is no longer close food_banana_2045.Robot is no longer close food_cake_2046.Robot is no longer close food_carrot_2047.
##############################
From agent.py
obs(kitchen_counter_128, Check for the food item around the kitchen counter)
Get this information:  kitchen_counter_128 is inside dining_room_1. spectacles_2106 is on kitchen_counter_128. kitchen_counter_128 is close to cutting_board_2080. kitchen_counter_128 is close to cupboard_130. kitchen_counter_128 is close to kitchen_counter_132. kitchen_counter_128 is close to sink_133. kitchen_counter_128 is close to wall_6. kitchen_counter_128 is close to floor_167. kitchen_counter_128 is close to floor_165. kitchen_counter_128 is close to wall_172. kitchen_counter_128 is close to wall_174. kitchen_counter_128 is close to floor_15. kitchen_counter_128 is close to microwave_149. kitchen_counter_128 is close to food_orange_2008. kitchen_counter_128 is close to spectacles_2106. kitchen_counter_128 is close to ceiling_27. kitchen_counter_128 is close to bookshelf_188. kitchen_counter_128 is close to bookshelf_189. kitchen_counter_128 is close to character_219. food_orange_2008 is on kitchen_counter_128. kitchen_counter_128 is on floor_15. cutting_board_2080 is on kitchen_counter_128. kitchen_counter_128 is CLEAN. kitchen_counter_128 is CLOSED.
##############################
From agent.py
walk_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Robot is no longer close kitchen_counter_128.Robot is no longer close floor_15.
##############################
From agent.py
obs(fridge_140, Check for the food item inside)
Get this information:  food_chicken_2050 is inside fridge_140. food_steak_2042 is inside fridge_140. food_egg_2053 is inside fridge_140. dry_pasta_2073 is inside fridge_140. food_banana_2045 is inside fridge_140. food_cereal_2048 is inside fridge_140. food_rice_2067 is inside fridge_140. food_hamburger_2057 is inside fridge_140. food_salt_2068 is inside fridge_140. food_jam_2059 is inside fridge_140. food_sugar_2070 is inside fridge_140. fridge_140 is close to food_cereal_2048. fridge_140 is close to food_cheese_2049. fridge_140 is close to food_chicken_2050. fridge_140 is close to food_dessert_2051. fridge_140 is close to food_donut_2052. fridge_140 is close to food_egg_2053. fridge_140 is close to food_fish_2054. fridge_140 is close to food_food_2055. fridge_140 is close to food_fruit_2056. fridge_140 is close to food_hamburger_2057. fridge_140 is close to food_ice_cream_2058. fridge_140 is close to food_jam_2059. fridge_140 is close to food_kiwi_2060. fridge_140 is close to food_lemon_2061. fridge_140 is close to food_noodles_2062. fridge_140 is close to food_oatmeal_2063. fridge_140 is close to food_peanut_butter_2064. fridge_140 is close to food_pizza_2065. fridge_140 is close to food_potato_2066. fridge_140 is close to food_rice_2067. fridge_140 is close to food_salt_2068. fridge_140 is close to food_snack_2069. fridge_140 is close to food_sugar_2070. fridge_140 is close to food_turkey_2071. fridge_140 is close to food_vegetable_2072. fridge_140 is close to dry_pasta_2073. fridge_140 is close to milk_2074. fridge_140 is close to cupboard_131. fridge_140 is close to floor_22. fridge_140 is close to ceiling_34. fridge_140 is close to wall_7. fridge_140 is close to wall_8. fridge_140 is close to kitchen_counter_129. fridge_140 is close to sauce_2101. fridge_140 is close to chair_138. fridge_140 is close to toaster_144. fridge_140 is close to food_steak_2042. fridge_140 is close to food_apple_2043. fridge_140 is close to food_bacon_2044. fridge_140 is close to food_banana_2045. fridge_140 is close to food_cake_2046. fridge_140 is close to food_carrot_2047. fridge_140 is close to character_219. fridge_140 is on floor_22. food_apple_2043 is inside fridge_140. food_dessert_2051 is inside fridge_140. food_noodles_2062 is inside fridge_140. food_donut_2052 is inside fridge_140. food_turkey_2071 is inside fridge_140. fridge_140 is inside dining_room_1. sauce_2101 is inside fridge_140. food_fish_2054 is inside fridge_140. food_pizza_2065 is inside fridge_140. food_cake_2046 is inside fridge_140. food_carrot_2047 is inside fridge_140. food_potato_2066 is inside fridge_140. food_cheese_2049 is inside fridge_140. food_kiwi_2060 is inside fridge_140. food_snack_2069 is inside fridge_140. food_lemon_2061 is inside fridge_140. food_vegetable_2072 is inside fridge_140. food_bacon_2044 is inside fridge_140. food_oatmeal_2063 is inside fridge_140. milk_2074 is inside fridge_140. food_peanut_butter_2064 is inside fridge_140. food_food_2055 is inside fridge_140. food_fruit_2056 is inside fridge_140. food_ice_cream_2058 is inside fridge_140. fridge_140 is OPEN. fridge_140 is CLEAN. fridge_140 is OFF. fridge_140 is PLUGGED_IN.
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot is inside dining_room_1. Robot is close kitchen_counter_128. Robot is close floor_15. Robot is no longer close food_cereal_2048.Robot is no longer close food_cheese_2049.Robot is no longer close food_chicken_2050.Robot is no longer close food_dessert_2051.Robot is no longer close food_donut_2052.Robot is no longer close food_egg_2053.Robot is no longer close food_fish_2054.Robot is no longer close food_food_2055.Robot is no longer close food_fruit_2056.Robot is no longer close food_hamburger_2057.Robot is no longer close food_ice_cream_2058.Robot is no longer close food_jam_2059.Robot is no longer close food_kiwi_2060.Robot is no longer close food_lemon_2061.Robot is no longer close food_noodles_2062.Robot is no longer close food_oatmeal_2063.Robot is no longer close food_peanut_butter_2064.Robot is no longer close food_pizza_2065.Robot is no longer close food_potato_2066.Robot is no longer close food_rice_2067.Robot is no longer close food_salt_2068.Robot is no longer close food_snack_2069.Robot is no longer close food_sugar_2070.Robot is no longer close food_turkey_2071.Robot is no longer close food_vegetable_2072.Robot is no longer close dry_pasta_2073.Robot is no longer close milk_2074.Robot is no longer close floor_22.Robot is no longer close sauce_2101.Robot is no longer close fridge_140.Robot is no longer close food_steak_2042.Robot is no longer close food_apple_2043.Robot is no longer close food_bacon_2044.Robot is no longer close food_banana_2045.Robot is no longer close food_cake_2046.Robot is no longer close food_carrot_2047.
##############################
From agent.py
obs(kitchen_counter_128, Check for the food item around the kitchen counter)
Get this information:  kitchen_counter_128 is inside dining_room_1. spectacles_2106 is on kitchen_counter_128. kitchen_counter_128 is close to cutting_board_2080. kitchen_counter_128 is close to cupboard_130. kitchen_counter_128 is close to kitchen_counter_132. kitchen_counter_128 is close to sink_133. kitchen_counter_128 is close to wall_6. kitchen_counter_128 is close to floor_167. kitchen_counter_128 is close to floor_165. kitchen_counter_128 is close to wall_172. kitchen_counter_128 is close to wall_174. kitchen_counter_128 is close to floor_15. kitchen_counter_128 is close to microwave_149. kitchen_counter_128 is close to food_orange_2008. kitchen_counter_128 is close to spectacles_2106. kitchen_counter_128 is close to ceiling_27. kitchen_counter_128 is close to bookshelf_188. kitchen_counter_128 is close to bookshelf_189. kitchen_counter_128 is close to character_219. food_orange_2008 is on kitchen_counter_128. kitchen_counter_128 is on floor_15. cutting_board_2080 is on kitchen_counter_128. kitchen_counter_128 is CLEAN. kitchen_counter_128 is CLOSED.
##############################
From agent.py
walk_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Robot is no longer close kitchen_counter_128.Robot is no longer close floor_15.
##############################
From agent.py
obs(fridge_140, Check for the food item inside)
Get this information:  food_chicken_2050 is inside fridge_140. food_steak_2042 is inside fridge_140. food_egg_2053 is inside fridge_140. dry_pasta_2073 is inside fridge_140. food_banana_2045 is inside fridge_140. food_cereal_2048 is inside fridge_140. food_rice_2067 is inside fridge_140. food_hamburger_2057 is inside fridge_140. food_salt_2068 is inside fridge_140. food_jam_2059 is inside fridge_140. food_sugar_2070 is inside fridge_140. fridge_140 is close to food_cereal_2048. fridge_140 is close to food_cheese_2049. fridge_140 is close to food_chicken_2050. fridge_140 is close to food_dessert_2051. fridge_140 is close to food_donut_2052. fridge_140 is close to food_egg_2053. fridge_140 is close to food_fish_2054. fridge_140 is close to food_food_2055. fridge_140 is close to food_fruit_2056. fridge_140 is close to food_hamburger_2057. fridge_140 is close to food_ice_cream_2058. fridge_140 is close to food_jam_2059. fridge_140 is close to food_kiwi_2060. fridge_140 is close to food_lemon_2061. fridge_140 is close to food_noodles_2062. fridge_140 is close to food_oatmeal_2063. fridge_140 is close to food_peanut_butter_2064. fridge_140 is close to food_pizza_2065. fridge_140 is close to food_potato_2066. fridge_140 is close to food_rice_2067. fridge_140 is close to food_salt_2068. fridge_140 is close to food_snack_2069. fridge_140 is close to food_sugar_2070. fridge_140 is close to food_turkey_2071. fridge_140 is close to food_vegetable_2072. fridge_140 is close to dry_pasta_2073. fridge_140 is close to milk_2074. fridge_140 is close to cupboard_131. fridge_140 is close to floor_22. fridge_140 is close to ceiling_34. fridge_140 is close to wall_7. fridge_140 is close to wall_8. fridge_140 is close to kitchen_counter_129. fridge_140 is close to sauce_2101. fridge_140 is close to chair_138. fridge_140 is close to toaster_144. fridge_140 is close to food_steak_2042. fridge_140 is close to food_apple_2043. fridge_140 is close to food_bacon_2044. fridge_140 is close to food_banana_2045. fridge_140 is close to food_cake_2046. fridge_140 is close to food_carrot_2047. fridge_140 is close to character_219. fridge_140 is on floor_22. food_apple_2043 is inside fridge_140. food_dessert_2051 is inside fridge_140. food_noodles_2062 is inside fridge_140. food_donut_2052 is inside fridge_140. food_turkey_2071 is inside fridge_140. fridge_140 is inside dining_room_1. sauce_2101 is inside fridge_140. food_fish_2054 is inside fridge_140. food_pizza_2065 is inside fridge_140. food_cake_2046 is inside fridge_140. food_carrot_2047 is inside fridge_140. food_potato_2066 is inside fridge_140. food_cheese_2049 is inside fridge_140. food_kiwi_2060 is inside fridge_140. food_snack_2069 is inside fridge_140. food_lemon_2061 is inside fridge_140. food_vegetable_2072 is inside fridge_140. food_bacon_2044 is inside fridge_140. food_oatmeal_2063 is inside fridge_140. milk_2074 is inside fridge_140. food_peanut_butter_2064 is inside fridge_140. food_food_2055 is inside fridge_140. food_fruit_2056 is inside fridge_140. food_ice_cream_2058 is inside fridge_140. fridge_140 is OPEN. fridge_140 is CLEAN. fridge_140 is OFF. fridge_140 is PLUGGED_IN.
##############################
From agent.py
walk_executor(kitchen_counter_128)
Robot is inside dining_room_1. Robot is close kitchen_counter_128. Robot is close floor_15. Robot is no longer close food_cereal_2048.Robot is no longer close food_cheese_2049.Robot is no longer close food_chicken_2050.Robot is no longer close food_dessert_2051.Robot is no longer close food_donut_2052.Robot is no longer close food_egg_2053.Robot is no longer close food_fish_2054.Robot is no longer close food_food_2055.Robot is no longer close food_fruit_2056.Robot is no longer close food_hamburger_2057.Robot is no longer close food_ice_cream_2058.Robot is no longer close food_jam_2059.Robot is no longer close food_kiwi_2060.Robot is no longer close food_lemon_2061.Robot is no longer close food_noodles_2062.Robot is no longer close food_oatmeal_2063.Robot is no longer close food_peanut_butter_2064.Robot is no longer close food_pizza_2065.Robot is no longer close food_potato_2066.Robot is no longer close food_rice_2067.Robot is no longer close food_salt_2068.Robot is no longer close food_snack_2069.Robot is no longer close food_sugar_2070.Robot is no longer close food_turkey_2071.Robot is no longer close food_vegetable_2072.Robot is no longer close dry_pasta_2073.Robot is no longer close milk_2074.Robot is no longer close floor_22.Robot is no longer close sauce_2101.Robot is no longer close fridge_140.Robot is no longer close food_steak_2042.Robot is no longer close food_apple_2043.Robot is no longer close food_bacon_2044.Robot is no longer close food_banana_2045.Robot is no longer close food_cake_2046.Robot is no longer close food_carrot_2047.
##############################
From agent.py
obs(kitchen_counter_128, Check for the food item around the kitchen counter)
Get this information:  kitchen_counter_128 is inside dining_room_1. spectacles_2106 is on kitchen_counter_128. kitchen_counter_128 is close to cutting_board_2080. kitchen_counter_128 is close to cupboard_130. kitchen_counter_128 is close to kitchen_counter_132. kitchen_counter_128 is close to sink_133. kitchen_counter_128 is close to wall_6. kitchen_counter_128 is close to floor_167. kitchen_counter_128 is close to floor_165. kitchen_counter_128 is close to wall_172. kitchen_counter_128 is close to wall_174. kitchen_counter_128 is close to floor_15. kitchen_counter_128 is close to microwave_149. kitchen_counter_128 is close to food_orange_2008. kitchen_counter_128 is close to spectacles_2106. kitchen_counter_128 is close to ceiling_27. kitchen_counter_128 is close to bookshelf_188. kitchen_counter_128 is close to bookshelf_189. kitchen_counter_128 is close to character_219. food_orange_2008 is on kitchen_counter_128. kitchen_counter_128 is on floor_15. cutting_board_2080 is on kitchen_counter_128. kitchen_counter_128 is CLEAN. kitchen_counter_128 is CLOSED.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_bread_2016_around_kitchen_counter_129(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==129
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_bread,kitchen_counter_instance)
        else:
            exp(food_bread,kitchen_counter_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_bread]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_food_on_table(food:item, table:item):
    body:
        achieve on(food, table) # Place the food item on the table

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind turkey: item where:
            is_food_turkey(turkey)
        # Select turkey

        bind egg: item where:
            is_food_egg(egg)
        # Select egg

        bind fish: item where:
            is_food_fish(fish)
        # Select fish

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select chicken

        bind dining_room_table: item where:
            is_table(dining_room_table) and surfaces(dining_room_table)
        # Select a table in the dining room that has a surface

        foreach food: item:
            if (food == milk or food == turkey or food == egg or food == fish or food == chicken):
                put_food_on_table(food, dining_room_table)
        # Place all specified food items on the dining room table

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior put_food_on_table(food:item, table:item):
    body:
        achieve on(food, table) # Place the food item on the table

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk)
        # Select milk

        bind turkey: item where:
            is_food_turkey(turkey)
        # Select turkey

        bind egg: item where:
            is_food_egg(egg)
        # Select egg

        bind fish: item where:
            is_food_fish(fish)
        # Select fish

        bind chicken: item where:
            is_food_chicken(chicken)
        # Select chicken

        bind dining_room_table: item where:
            is_table(dining_room_table) and surfaces(dining_room_table)
        # Select a table in the dining room that has a surface

        foreach food: item:
            if (food == milk or food == turkey or food == egg or food == fish or food == chicken):
                put_food_on_table(food, dining_room_table)
        # Place all specified food items on the dining room table

##############################
From agent.py-> find a plan in act()
walk_executor(food_chicken_2050)grab_executor(food_chicken_2050)walk_executor(table_123)put_executor(food_chicken_2050, table_123)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(table_123)put_executor(food_egg_2053, table_123)walk_executor(food_fish_2054)grab_executor(food_fish_2054)walk_executor(table_123)put_executor(food_fish_2054, table_123)walk_executor(food_turkey_2071)grab_executor(food_turkey_2071)walk_executor(table_123)put_executor(food_turkey_2071, table_123)walk_executor(milk_2074)grab_executor(milk_2074)walk_executor(table_123)put_executor(milk_2074, table_123)
##############################
From agent.py
walk_executor(food_chicken_2050)
Robot is inside dining_room_1. Robot is close food_chicken_2050. Robot is close fridge_140. Robot is no longer close kitchen_counter_128.Robot is no longer close floor_15.
##############################
From agent.py
grab_executor(food_chicken_2050)
Robot is inside dining_room_1. Robot is close food_chicken_2050. Robot is close fridge_140. Grabbing food_chicken_2050 by right hand. 
##############################
From agent.py
walk_executor(table_123)
Robot is inside dining_room_1. Robot is close food_chicken_2050. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer close fridge_140.
##############################
From agent.py
put_executor(food_chicken_2050, table_123)
Robot is inside dining_room_1. Robot is close food_chicken_2050. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. food_chicken_2050 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close fridge_140. Robot is close food_egg_2053. Robot is no longer close floor_17.Robot is no longer close food_chicken_2050.Robot is no longer close table_123.Robot is no longer close mat_114.
##############################
From agent.py
grab_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close fridge_140. Robot is close food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(table_123)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer close fridge_140.
##############################
From agent.py
put_executor(food_egg_2053, table_123)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. food_egg_2053 released by right hand. 
##############################
From agent.py
walk_executor(food_fish_2054)
Robot is inside dining_room_1. Robot is close fridge_140. Robot is close food_fish_2054. Robot is no longer close floor_17.Robot is no longer close mat_114.Robot is no longer close table_123.Robot is no longer close food_egg_2053.
##############################
From agent.py
grab_executor(food_fish_2054)
Robot is inside dining_room_1. Robot is close fridge_140. Robot is close food_fish_2054. Grabbing food_fish_2054 by right hand. 
##############################
From agent.py
walk_executor(table_123)
Robot is inside dining_room_1. Robot is close food_fish_2054. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer close fridge_140.
##############################
From agent.py
put_executor(food_fish_2054, table_123)
Robot is inside dining_room_1. Robot is close food_fish_2054. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. food_fish_2054 released by right hand. 
##############################
From agent.py
walk_executor(food_turkey_2071)
Robot is inside dining_room_1. Robot is close fridge_140. Robot is close food_turkey_2071. Robot is no longer close floor_17.Robot is no longer close mat_114.Robot is no longer close table_123.Robot is no longer close food_fish_2054.
##############################
From agent.py
grab_executor(food_turkey_2071)
Robot is inside dining_room_1. Robot is close fridge_140. Robot is close food_turkey_2071. Grabbing food_turkey_2071 by right hand. 
##############################
From agent.py
walk_executor(table_123)
Robot is inside dining_room_1. Robot is close food_turkey_2071. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer close fridge_140.
##############################
From agent.py
put_executor(food_turkey_2071, table_123)
Robot is inside dining_room_1. Robot is close food_turkey_2071. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. food_turkey_2071 released by right hand. 
##############################
From agent.py
walk_executor(milk_2074)
Robot is inside dining_room_1. Robot is close milk_2074. Robot is close fridge_140. Robot is no longer close floor_17.Robot is no longer close mat_114.Robot is no longer close table_123.Robot is no longer close food_turkey_2071.
##############################
From agent.py
grab_executor(milk_2074)
Robot is inside dining_room_1. Robot is close milk_2074. Robot is close fridge_140. Grabbing milk_2074 by right hand. 
##############################
From agent.py
walk_executor(table_123)
Robot is inside dining_room_1. Robot is close milk_2074. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer close fridge_140.
##############################
From agent.py
put_executor(milk_2074, table_123)
Robot is inside dining_room_1. Robot is close milk_2074. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. milk_2074 released by right hand. 
##############################
