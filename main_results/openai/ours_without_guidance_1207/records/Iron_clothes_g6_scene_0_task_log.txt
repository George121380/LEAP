From agent.py
Reset goals: The sub-goals are: 
['1. Iron the shirt and the skirt.  ', '2. Place the shirt and the skirt on the bed.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_shirt_2086_around_closetdrawer_118(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==118
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

behavior find_clothes_skirt_2088_around_closetdrawer_118(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==118
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_skirt,closetdrawer_instance)
        else:
            exp(clothes_skirt,closetdrawer_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(item1:item, item2:item, iron:item, ironing_board:item):
    body:
        achieve_off(is_on(iron)) # Ensure the iron is off before starting
        achieve plugged(iron) # Plug the iron into the power source
        achieve is_on(iron) # Turn the iron on
        achieve inside(item1, ironing_board) # Place the shirt on the ironing board
        achieve inside(item2, ironing_board) # Place the skirt on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt
 
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt
        
        bind iron: item where:
            is_iron(iron)
        # Select the iron
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_clothes(shirt, skirt, iron, ironing_board)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

'Function achieve_off not found. Note that recursive function calls are not supported in the current version.'
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_shirt_2086_around_closetdrawer_118(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==118
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

behavior find_clothes_skirt_2088_around_closetdrawer_118(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==118
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_skirt,closetdrawer_instance)
        else:
            exp(clothes_skirt,closetdrawer_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_skirt]=True
    

#goal_representation
 
behavior iron_clothes(item1:item, item2:item, iron:item, ironing_board:item):
    body:
        achieve is_off(iron) # Ensure the iron is off before starting
        achieve plugged(iron) # Plug the iron into the power source
        achieve is_on(iron) # Turn the iron on
        achieve inside(item1, ironing_board) # Place the shirt on the ironing board
        achieve inside(item2, ironing_board) # Place the skirt on the ironing board

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt
 
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt
        
        bind iron: item where:
            is_iron(iron)
        # Select the iron
        
        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board

        iron_clothes(shirt, skirt, iron, ironing_board)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

behavior find_clothes_shirt_2086_around_closetdrawer_118(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==118
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

behavior find_clothes_skirt_2088_around_closetdrawer_118(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==118
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_skirt,closetdrawer_instance)
        else:
            exp(clothes_skirt,closetdrawer_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_skirt]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes_and_place_on_bed(clothes:item, iron:item, bed:item):
    body:
        achieve clean(clothes) # Ironed clothes are considered clean
        achieve on(clothes, bed) # Place the clothes on the bed after ironing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) # Select the skirt

        bind iron: item where:
            is_iron(iron) # Select the iron

        bind bed: item where:
            is_bed(bed) # Select the bed

        iron_clothes_and_place_on_bed(shirt, iron, bed)
        iron_clothes_and_place_on_bed(skirt, iron, bed)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior iron_clothes_and_place_on_bed(clothes:item, iron:item, bed:item):
    body:
        achieve clean(clothes) # Ironed clothes are considered clean
        achieve on(clothes, bed) # Place the clothes on the bed after ironing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) # Select the skirt

        bind iron: item where:
            is_iron(iron) # Select the iron

        bind bed: item where:
            is_bed(bed) # Select the bed

        iron_clothes_and_place_on_bed(shirt, iron, bed)
        iron_clothes_and_place_on_bed(skirt, iron, bed)

##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_118)exp(clothes_shirt_2086, closetdrawer_118)walk_executor(clothes_shirt_2086)wash_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(bed_105)put_executor(clothes_shirt_2086, bed_105)walk_executor(closetdrawer_118)exp(clothes_skirt_2088, closetdrawer_118)walk_executor(clothes_skirt_2088)wash_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(bed_105)put_executor(clothes_skirt_2088, bed_105)
##############################
From agent.py
walk_executor(closetdrawer_118)
Find hanger_110. Find hanger_140. Find hanger_109. Find mat_173. Find hanger_132. Find hanger_113. Find hanger_112. Find hanger_124. Find hanger_115. Find hanger_128. Find hanger_130. Find hanger_134. Find hanger_136. Find hanger_138. Find hanger_141. Find hanger_142. Find hanger_111. Find hanger_114. Find hanger_126. Robot is inside bedroom_67. Robot is close closetdrawer_121. Robot is close dresser_108. Robot is close closetdrawer_118. Robot is no longer inside bathroom_1.
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_118)
Fail to find clothes_shirt_2086 around closetdrawer_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(hanger_111)exp(clothes_shirt_2086, hanger_111)walk_executor(clothes_shirt_2086)wash_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(bed_105)put_executor(clothes_shirt_2086, bed_105)walk_executor(hanger_111)exp(clothes_skirt_2088, hanger_111)walk_executor(clothes_skirt_2088)wash_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(bed_105)put_executor(clothes_skirt_2088, bed_105)
##############################
From agent.py
walk_executor(hanger_111)
Robot is inside bedroom_67. Robot is close dresser_108. Robot is close hanger_111. Robot is no longer close closetdrawer_121.Robot is no longer close closetdrawer_118.
##############################
From agent.py
exp(clothes_shirt_2086, hanger_111)
Fail to find clothes_shirt_2086 around hanger_111. 
##############################
From agent.py-> find a plan in act()
walk_executor(hanger_113)exp(clothes_shirt_2086, hanger_113)walk_executor(clothes_shirt_2086)wash_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(bed_105)put_executor(clothes_shirt_2086, bed_105)walk_executor(hanger_136)exp(clothes_skirt_2088, hanger_136)walk_executor(clothes_skirt_2088)wash_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(bed_105)put_executor(clothes_skirt_2088, bed_105)
##############################
From agent.py
walk_executor(hanger_113)
Robot is inside bedroom_67. Robot is close dresser_108. Robot is close hanger_113. Robot is no longer close hanger_111.
##############################
From agent.py
exp(clothes_shirt_2086, hanger_113)
Fail to find clothes_shirt_2086 around hanger_113. 
##############################
From agent.py-> find a plan in act()
walk_executor(hanger_136)exp(clothes_shirt_2086, hanger_136)walk_executor(clothes_shirt_2086)wash_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(bed_105)put_executor(clothes_shirt_2086, bed_105)walk_executor(hanger_136)exp(clothes_skirt_2088, hanger_136)walk_executor(clothes_skirt_2088)wash_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(bed_105)put_executor(clothes_skirt_2088, bed_105)
##############################
From agent.py
walk_executor(hanger_136)
Robot is inside bedroom_67. Robot is close hanger_136. Robot is close dresser_123. Robot is no longer close hanger_113.Robot is no longer close dresser_108.
##############################
From agent.py
exp(clothes_shirt_2086, hanger_136)
Fail to find clothes_shirt_2086 around hanger_136. 
##############################
From agent.py-> find a plan in act()
walk_executor(hanger_141)exp(clothes_shirt_2086, hanger_141)walk_executor(clothes_shirt_2086)wash_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(bed_105)put_executor(clothes_shirt_2086, bed_105)walk_executor(ironing_board_2074)exp(clothes_skirt_2088, ironing_board_2074)walk_executor(clothes_skirt_2088)wash_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(bed_105)put_executor(clothes_skirt_2088, bed_105)
##############################
From agent.py
walk_executor(hanger_141)
Robot is inside bedroom_67. Robot is close dresser_123. Robot is close hanger_141. Robot is no longer close hanger_136.
##############################
From agent.py
exp(clothes_shirt_2086, hanger_141)
Fail to find clothes_shirt_2086 around hanger_141. 
##############################
From agent.py-> find a plan in act()
walk_executor(hanger_115)exp(clothes_shirt_2086, hanger_115)walk_executor(clothes_shirt_2086)wash_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(bed_105)put_executor(clothes_shirt_2086, bed_105)walk_executor(closetdrawer_148)exp(clothes_skirt_2088, closetdrawer_148)walk_executor(clothes_skirt_2088)wash_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(bed_105)put_executor(clothes_skirt_2088, bed_105)
##############################
From agent.py
walk_executor(hanger_115)
Robot is inside bedroom_67. Robot is close hanger_115. Robot is close dresser_108. Robot is no longer close dresser_123.Robot is no longer close hanger_141.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2086 ?
Answer: To find the clothes_shirt_2086, go to bathroom_1. Inside bathroom_1, locate the basket_for_clothes_2006. The clothes_shirt_2086 is inside this basket.
Re-decompose: None

##############################
From agent.py
Human Instruction: To find the clothes_shirt_2086, go to bathroom_1. Inside bathroom_1, locate the basket_for_clothes_2006. The clothes_shirt_2086 is inside this basket.

The actions you have taken:
Action 1: Walk to closetdrawer_118.
Action 2: look for clothes_shirt_2086 around closetdrawer_118.
Action 3: Walk to hanger_111.
Action 4: look for clothes_shirt_2086 around hanger_111.
Action 5: Walk to hanger_113.
Action 6: look for clothes_shirt_2086 around hanger_113.
Action 7: Walk to hanger_136.
Action 8: look for clothes_shirt_2086 around hanger_136.
Action 9: Walk to hanger_141.
Action 10: look for clothes_shirt_2086 around hanger_141.
Action 11: Walk to hanger_115.

##############################
From agent.py
exp(clothes_shirt_2086, hanger_115)
Fail to find clothes_shirt_2086 around hanger_115. 
##############################
From agent.py-> find a plan in act()
walk_executor(bathtub_30)exp(clothes_shirt_2086, bathtub_30)walk_executor(clothes_shirt_2086)wash_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(bed_105)put_executor(clothes_shirt_2086, bed_105)walk_executor(washing_machine_2007)open_executor(washing_machine_2007)exp(clothes_skirt_2088, washing_machine_2007)walk_executor(clothes_skirt_2088)wash_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(bed_105)put_executor(clothes_skirt_2088, bed_105)
##############################
From agent.py
walk_executor(bathtub_30)
Find towel_rack_33. Find basket_for_clothes_2006. Robot is inside bathroom_1. Robot is close floor_5. Robot is close bathtub_30. Robot is no longer inside bedroom_67.Robot is no longer close hanger_115.Robot is no longer close dresser_108.
##############################
From agent.py
exp(clothes_shirt_2086, bathtub_30)
Fail to find clothes_shirt_2086 around bathtub_30. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)exp(clothes_shirt_2086, basket_for_clothes_2006)walk_executor(clothes_shirt_2086)wash_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(bed_105)put_executor(clothes_shirt_2086, bed_105)walk_executor(basket_for_clothes_2006)exp(clothes_skirt_2088, basket_for_clothes_2006)walk_executor(clothes_skirt_2088)wash_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(bed_105)put_executor(clothes_skirt_2088, bed_105)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Find clothes_pants_2085. Find clothes_shirt_2086. Find clothes_socks_2087. Find clothes_skirt_2088. Find towel_rack_32. Find towel_rack_34. Find mat_22. Find towel_rack_31. Robot is inside bathroom_1. Robot is close clothes_pants_2085. Robot is close clothes_shirt_2086. Robot is close clothes_socks_2087. Robot is close clothes_skirt_2088. Robot is close basket_for_clothes_2006. Robot is no longer close floor_5.Robot is no longer close bathtub_30.
##############################
From agent.py
exp(clothes_shirt_2086, basket_for_clothes_2006)
Find clothes_shirt_2086. 
##############################
From agent.py-> find a plan in act()
wash_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(bed_105)put_executor(clothes_shirt_2086, bed_105)walk_executor(clothes_skirt_2088)wash_executor(clothes_skirt_2088)grab_executor(clothes_skirt_2088)walk_executor(bed_105)put_executor(clothes_skirt_2088, bed_105)
##############################
From agent.py
wash_executor(clothes_shirt_2086)
Robot is inside bathroom_1. Robot is close clothes_pants_2085. Robot is close clothes_shirt_2086. Robot is close clothes_socks_2087. Robot is close clothes_skirt_2088. Robot is close basket_for_clothes_2006. 
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot is inside bathroom_1. Robot is close clothes_pants_2085. Robot is close clothes_shirt_2086. Robot is close clothes_socks_2087. Robot is close clothes_skirt_2088. Robot is close basket_for_clothes_2006. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(bed_105)
Find drawing_176. Find clothes_dress_2044. Find pillow_182. Find pillow_183. Find chair_106. Find clothes_scarf_2048. Find clothes_underwear_2049. Robot is inside bedroom_67. Robot is close clothes_shirt_2086. Robot is close bed_105. Robot is close mat_173. Robot is close floor_70. Robot is no longer inside bathroom_1.Robot is no longer close clothes_pants_2085.Robot is no longer close clothes_socks_2087.Robot is no longer close clothes_skirt_2088.Robot is no longer close basket_for_clothes_2006.
##############################
From agent.py
put_executor(clothes_shirt_2086, bed_105)
Robot is inside bedroom_67. Robot is close clothes_shirt_2086. Robot is close bed_105. Robot is close mat_173. Robot is close floor_70. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
walk_executor(clothes_skirt_2088)
Robot is inside bathroom_1. Robot is close clothes_skirt_2088. Robot is close basket_for_clothes_2006. Robot is no longer inside bedroom_67.Robot is no longer close floor_70.Robot is no longer close mat_173.Robot is no longer close clothes_shirt_2086.Robot is no longer close bed_105.
##############################
From agent.py
wash_executor(clothes_skirt_2088)
Robot is inside bathroom_1. Robot is close clothes_skirt_2088. Robot is close basket_for_clothes_2006. 
##############################
From agent.py
grab_executor(clothes_skirt_2088)
Robot is inside bathroom_1. Robot is close clothes_skirt_2088. Robot is close basket_for_clothes_2006. Grabbing clothes_skirt_2088 by right hand. 
##############################
From agent.py
walk_executor(bed_105)
Robot is inside bedroom_67. Robot is close clothes_skirt_2088. Robot is close bed_105. Robot is close mat_173. Robot is close floor_70. Robot is no longer inside bathroom_1.Robot is no longer close basket_for_clothes_2006.
##############################
From agent.py
put_executor(clothes_skirt_2088, bed_105)
Robot is inside bedroom_67. Robot is close clothes_skirt_2088. Robot is close bed_105. Robot is close mat_173. Robot is close floor_70. clothes_skirt_2088 released by right hand. 
##############################
From agent.py
Human Instruction: You need to iron both the shirt and the skirt before placing them on the bed.

The actions you have taken:
Action 1: Walk to closetdrawer_118.
Action 2: look for clothes_shirt_2086 around closetdrawer_118.
Action 3: Walk to hanger_111.
Action 4: look for clothes_shirt_2086 around hanger_111.
Action 5: Walk to hanger_113.
Action 6: look for clothes_shirt_2086 around hanger_113.
Action 7: Walk to hanger_136.
Action 8: look for clothes_shirt_2086 around hanger_136.
Action 9: Walk to hanger_141.
Action 10: look for clothes_shirt_2086 around hanger_141.
Action 11: Walk to hanger_115.
Action 12: look for clothes_shirt_2086 around hanger_115.
Action 13: Walk to bathtub_30.
Action 14: look for clothes_shirt_2086 around bathtub_30.
Action 15: Walk to basket_for_clothes_2006.
Action 16: look for clothes_shirt_2086 around basket_for_clothes_2006.
Action 17: Wash clothes_shirt_2086.
Action 18: Grab clothes_shirt_2086.
Action 19: Walk to bed_105.
Action 20: Put clothes_shirt_2086 on bed_105.
Action 21: Walk to clothes_skirt_2088.
Action 22: Wash clothes_skirt_2088.
Action 23: Grab clothes_skirt_2088.
Action 24: Walk to bed_105.
Action 25: Put clothes_skirt_2088 on bed_105.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(clothes:item, iron:item):
    body:
        achieve clean(clothes) # Ensure the clothes are ironed

behavior place_on_bed(clothes:item, bed:item):
    body:
        achieve on(clothes, bed) # Place the clothes on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        # Iron the shirt and skirt
        iron_clothes(shirt, iron)
        iron_clothes(skirt, iron)

        # Place the shirt and skirt on the bed
        place_on_bed(shirt, bed)
        place_on_bed(skirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
 
behavior iron_clothes(shirt:item, skirt:item, iron:item):
    body:
        achieve_once inhand(iron)
        # Temporarily hold the iron for ironing
        achieve clean(shirt) # Ensure the shirt is clean after ironing
        achieve clean(skirt) # Ensure the skirt is clean after ironing

behavior put_on_bed(item1:item, item2:item, bed:item):
    body:
        achieve on(item1, bed)
        achieve on(item2, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        iron_clothes(shirt, skirt, iron)
        put_on_bed(shirt, skirt, bed)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_clothes(shirt:item, skirt:item, iron:item):
    body:
        achieve_once inhand(iron)
        # Temporarily hold the iron for ironing
        achieve clean(shirt) # Ensure the shirt is clean after ironing
        achieve clean(skirt) # Ensure the skirt is clean after ironing

behavior put_on_bed(item1:item, item2:item, bed:item):
    body:
        achieve on(item1, bed)
        achieve on(item2, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind iron: item where:
            is_iron(iron)
        # Select the iron

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        iron_clothes(shirt, skirt, iron)
        put_on_bed(shirt, skirt, bed)

##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)grab_executor(iron_2089)
##############################
From agent.py
walk_executor(ironing_board_2074)
Find iron_2089. Robot is inside bathroom_1. Robot is close ironing_board_2074. Robot is no longer inside bedroom_67.Robot is no longer close clothes_skirt_2088.Robot is no longer close bed_105.Robot is no longer close mat_173.Robot is no longer close floor_70.
##############################
From agent.py
exp(iron_2089, ironing_board_2074)
Find iron_2089. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2089)grab_executor(iron_2089)
##############################
From agent.py
walk_executor(iron_2089)
Robot is inside bathroom_1. Robot is close ironing_board_2074. Robot is close iron_2089. 
##############################
From agent.py
grab_executor(iron_2089)
Robot is inside bathroom_1. Robot is close ironing_board_2074. Robot is close iron_2089. Grabbing iron_2089 by right hand. 
##############################
From agent.py
Human Instruction: You need to iron both the shirt and the skirt before placing them on the bed. Currently, you have only washed and moved the items but have not ironed them yet.

The actions you have taken:
Action 1: Walk to closetdrawer_118.
Action 2: look for clothes_shirt_2086 around closetdrawer_118.
Action 3: Walk to hanger_111.
Action 4: look for clothes_shirt_2086 around hanger_111.
Action 5: Walk to hanger_113.
Action 6: look for clothes_shirt_2086 around hanger_113.
Action 7: Walk to hanger_136.
Action 8: look for clothes_shirt_2086 around hanger_136.
Action 9: Walk to hanger_141.
Action 10: look for clothes_shirt_2086 around hanger_141.
Action 11: Walk to hanger_115.
Action 12: look for clothes_shirt_2086 around hanger_115.
Action 13: Walk to bathtub_30.
Action 14: look for clothes_shirt_2086 around bathtub_30.
Action 15: Walk to basket_for_clothes_2006.
Action 16: look for clothes_shirt_2086 around basket_for_clothes_2006.
Action 17: Wash clothes_shirt_2086.
Action 18: Grab clothes_shirt_2086.
Action 19: Walk to bed_105.
Action 20: Put clothes_shirt_2086 on bed_105.
Action 21: Walk to clothes_skirt_2088.
Action 22: Wash clothes_skirt_2088.
Action 23: Grab clothes_skirt_2088.
Action 24: Walk to bed_105.
Action 25: Put clothes_skirt_2088 on bed_105.
Action 26: Walk to ironing_board_2074.
Action 27: look for iron_2089 around ironing_board_2074.
Action 28: Walk to iron_2089.
Action 29: Grab iron_2089.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_napkin_2005_around_dishwasher_1001(napkin:item):
    goal: not unknown(napkin)
    body:
        assert is_napkin(napkin)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==1001
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(napkin,dishwasher_instance)
        else:
            exp(napkin,dishwasher_instance)
    eff:
        unknown[napkin]=False
        close[napkin,dishwasher_instance]=True
        close[dishwasher_instance,napkin]=True
    

behavior find_cat_2055_around_dishwasher_1001(cat:item):
    goal: not unknown(cat)
    body:
        assert is_cat(cat)
        bind dishwasher_instance:item where:
            is_dishwasher(dishwasher_instance) and id[dishwasher_instance]==1001
        achieve close_char(char,dishwasher_instance)
        if can_open(dishwasher_instance):
            achieve_once open(dishwasher_instance)
            exp(cat,dishwasher_instance)
        else:
            exp(cat,dishwasher_instance)
    eff:
        unknown[cat]=False
        close[cat,dishwasher_instance]=True
        close[dishwasher_instance,cat]=True
    

#exp_behavior_end

#goal_representation
 
def has_plugged_iron(iron:item):
    # Determine whether the iron is plugged in
    symbol is_plugged=exists power: item: is_powersocket(power) and plugged(iron) and close(iron, power)
    return is_plugged

behavior plug_in_iron(iron:item):
    body:
        achieve plugged(iron) # Ensure the iron is plugged in

behavior turn_on_iron(iron:item):
    body:
        achieve is_on(iron) # Turn the iron on

behavior iron_clothes(clothes:item, ironing_board:item):
    body:
        achieve clean(clothes) # Ensure the clothes are clean after ironing

behavior turn_off_iron(iron:item):
    body:
        achieve is_off(iron) # Turn the iron off

behavior unplug_iron(iron:item):
    body:
        achieve unplugged(iron) # Ensure the iron is unplugged

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and clean(clothes_shirt) and id[clothes_shirt] == 2086
        # Select the clean shirt with ID 2086

        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt) and clean(clothes_skirt) and id[clothes_skirt] == 2088
        # Select the clean skirt with ID 2088

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2074
        # Select the ironing board with ID 2074
        
        bind iron: item where:
            is_iron(iron) and id[iron] == 2089
        # Select the iron with ID 2089
        
        if not has_plugged_iron(iron):
            plug_in_iron(iron)
        
        turn_on_iron(iron)
        iron_clothes(clothes_shirt, ironing_board)
        iron_clothes(clothes_skirt, ironing_board)
        turn_off_iron(iron)
        unplug_iron(iron)


#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def has_plugged_iron(iron:item):
    # Determine whether the iron is plugged in
    symbol is_plugged=exists power: item: is_powersocket(power) and plugged(iron) and close(iron, power)
    return is_plugged

behavior plug_in_iron(iron:item):
    body:
        achieve plugged(iron) # Ensure the iron is plugged in

behavior turn_on_iron(iron:item):
    body:
        achieve is_on(iron) # Turn the iron on

behavior iron_clothes(clothes:item, ironing_board:item):
    body:
        achieve clean(clothes) # Ensure the clothes are clean after ironing

behavior turn_off_iron(iron:item):
    body:
        achieve is_off(iron) # Turn the iron off

behavior unplug_iron(iron:item):
    body:
        achieve unplugged(iron) # Ensure the iron is unplugged

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and clean(clothes_shirt) and id[clothes_shirt] == 2086
        # Select the clean shirt with ID 2086

        bind clothes_skirt: item where:
            is_clothes_skirt(clothes_skirt) and clean(clothes_skirt) and id[clothes_skirt] == 2088
        # Select the clean skirt with ID 2088

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and id[ironing_board] == 2074
        # Select the ironing board with ID 2074
        
        bind iron: item where:
            is_iron(iron) and id[iron] == 2089
        # Select the iron with ID 2089
        
        if not has_plugged_iron(iron):
            plug_in_iron(iron)
        
        turn_on_iron(iron)
        iron_clothes(clothes_shirt, ironing_board)
        iron_clothes(clothes_skirt, ironing_board)
        turn_off_iron(iron)
        unplug_iron(iron)


##############################
From agent.py-> find a plan in act()
plugin_executor(iron_2089)switchon_executor(iron_2089)switchoff_executor(iron_2089)plugout_executor(iron_2089)
##############################
From agent.py
plugin_executor(iron_2089)
Robot is inside bathroom_1. Robot is close ironing_board_2074. Robot is close iron_2089. 
##############################
From agent.py
switchon_executor(iron_2089)
Robot is inside bathroom_1. Robot is close ironing_board_2074. Robot is close iron_2089. 
##############################
From agent.py
switchoff_executor(iron_2089)
Robot is inside bathroom_1. Robot is close ironing_board_2074. Robot is close iron_2089. 
##############################
From agent.py
plugout_executor(iron_2089)
Robot is inside bathroom_1. Robot is close ironing_board_2074. Robot is close iron_2089. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_hat_2045_around_clothes_dress_2044(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind clothes_dress_instance:item where:
            is_clothes_dress(clothes_dress_instance) and id[clothes_dress_instance]==2044
        achieve close_char(char,clothes_dress_instance)
        if can_open(clothes_dress_instance):
            achieve_once open(clothes_dress_instance)
            exp(clothes_hat,clothes_dress_instance)
        else:
            exp(clothes_hat,clothes_dress_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,clothes_dress_instance]=True
        close[clothes_dress_instance,clothes_hat]=True
    

behavior find_napkin_2005_around_kitchen_counter_230(napkin:item):
    goal: not unknown(napkin)
    body:
        assert is_napkin(napkin)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(napkin,kitchen_counter_instance)
        else:
            exp(napkin,kitchen_counter_instance)
    eff:
        unknown[napkin]=False
        close[napkin,kitchen_counter_instance]=True
        close[kitchen_counter_instance,napkin]=True
    

behavior find_mat_401_around_shower_36(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==36
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(mat,shower_instance)
        else:
            exp(mat,shower_instance)
    eff:
        unknown[mat]=False
        close[mat,shower_instance]=True
        close[shower_instance,mat]=True
    

#exp_behavior_end

#goal_representation
behavior place_clothes_on_bed(clothes:item, bed:item):
    body:
        achieve on(clothes, bed) # Place the clothes item on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the cleaned shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the cleaned skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_clothes_on_bed(shirt, bed)
        # Place the shirt on the bed

        place_clothes_on_bed(skirt, bed)
        # Place the skirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_hanger_369_around_towel_rack_32(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==32
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(hanger,towel_rack_instance)
        else:
            exp(hanger,towel_rack_instance)
    eff:
        unknown[hanger]=False
        close[hanger,towel_rack_instance]=True
        close[towel_rack_instance,hanger]=True
    

#exp_behavior_end

#goal_representation
behavior place_on_bed(item:item, bed:item):
    body:
        achieve on(item, bed) # Place the item on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_on_bed(shirt, bed)
        # Place the shirt on the bed

        place_on_bed(skirt, bed)
        # Place the skirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2047_around_closetdrawer_146(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==146
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

behavior find_clothes_hat_2045_around_closetdrawer_148(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==148
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_hat,closetdrawer_instance)
        else:
            exp(clothes_hat,closetdrawer_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_hat]=True
    

behavior find_hanger_142_around_hanger_142(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==142
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(hanger,hanger_instance)
        else:
            exp(hanger,hanger_instance)
    eff:
        unknown[hanger]=False
        close[hanger,hanger_instance]=True
        close[hanger_instance,hanger]=True
    

#exp_behavior_end

#goal_representation
behavior place_on_bed(clothes:item, bed:item):
    body:
        achieve on(clothes, bed) # Place the clothes on the bed

behavior __goal__():
    body:
        bind bed: item where:
            is_bed(bed) and id[bed]==105
        # Select the bed with ID 105

        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the shirt that is clean

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the skirt that is clean

        place_on_bed(shirt, bed)
        # Place the shirt on the bed

        place_on_bed(skirt, bed)
        # Place the skirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2047_around_closetdrawer_146(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==146
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

behavior find_clothes_hat_2045_around_clothes_dress_2044(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind clothes_dress_instance:item where:
            is_clothes_dress(clothes_dress_instance) and id[clothes_dress_instance]==2044
        achieve close_char(char,clothes_dress_instance)
        if can_open(clothes_dress_instance):
            achieve_once open(clothes_dress_instance)
            exp(clothes_hat,clothes_dress_instance)
        else:
            exp(clothes_hat,clothes_dress_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,clothes_dress_instance]=True
        close[clothes_dress_instance,clothes_hat]=True
    

behavior find_clothes_gloves_2046_around_washing_machine_2007(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_gloves,washing_machine_instance)
        else:
            exp(clothes_gloves,washing_machine_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,washing_machine_instance]=True
        close[washing_machine_instance,clothes_gloves]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_clothes_on_bed(clothes:item, bed:item):
    body:
        achieve on(clothes, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_clothes_on_bed(shirt, bed)
        put_clothes_on_bed(skirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2047_around_closetdrawer_146(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==146
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

behavior find_hanger_136_around_shower_36(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==36
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(hanger,shower_instance)
        else:
            exp(hanger,shower_instance)
    eff:
        unknown[hanger]=False
        close[hanger,shower_instance]=True
        close[shower_instance,hanger]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_on_bed(clothes:item, bed:item):
    body:
        achieve on(clothes, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_on_bed(shirt, bed)
        place_on_bed(skirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2047_around_closetdrawer_146(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==146
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

behavior find_clothes_hat_2045_around_closetdrawer_148(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==148
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_hat,closetdrawer_instance)
        else:
            exp(clothes_hat,closetdrawer_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_clothes_on_bed(clothes:item, bed:item):
    body:
        achieve on(clothes, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_clothes_on_bed(shirt, bed) 
        # Place the shirt on the bed

        place_clothes_on_bed(skirt, bed) 
        # Place the skirt on the bed
 
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2058_around_towel_rack_32(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==32
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_clothes_jacket_2047_around_closetdrawer_146(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==146
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

behavior find_clothes_hat_2045_around_closetdrawer_146(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==146
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_hat,closetdrawer_instance)
        else:
            exp(clothes_hat,closetdrawer_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
 
behavior put_clothes_on_bed(clothes:item, bed:item):
    body:
        achieve on(clothes, bed) # Place the clothes on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the cleaned shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the cleaned skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_clothes_on_bed(shirt, bed)
        put_clothes_on_bed(skirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pot_2069_around_stove_2065(pot:item):
    goal: not unknown(pot)
    body:
        assert is_pot(pot)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2065
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(pot,stove_instance)
        else:
            exp(pot,stove_instance)
    eff:
        unknown[pot]=False
        close[pot,stove_instance]=True
        close[stove_instance,pot]=True
    

#exp_behavior_end

#goal_representation

behavior place_clothes_on_bed(shirt:item, skirt:item, bed:item):
    body:
        achieve on(shirt, bed) 
        # Place the shirt on the bed
        achieve on(skirt, bed) 
        # Place the skirt on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the shirt that has been ironed and is clean

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the skirt that has been ironed and is clean

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_clothes_on_bed(shirt, skirt, bed)
        # Place both the shirt and skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2047_around_closetdrawer_116(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==116
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

behavior find_clothes_hat_2045_around_clothes_scarf_2048(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind clothes_scarf_instance:item where:
            is_clothes_scarf(clothes_scarf_instance) and id[clothes_scarf_instance]==2048
        achieve close_char(char,clothes_scarf_instance)
        if can_open(clothes_scarf_instance):
            achieve_once open(clothes_scarf_instance)
            exp(clothes_hat,clothes_scarf_instance)
        else:
            exp(clothes_hat,clothes_scarf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,clothes_scarf_instance]=True
        close[clothes_scarf_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
behavior place_clothes_on_bed(clothes:item, bed:item):
    body:
        achieve on(clothes, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt
        
        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt
        
        bind bed: item where:
            is_bed(bed) and id[bed] == 105
        # Select the bed with ID 105
        
        place_clothes_on_bed(shirt, bed)
        place_clothes_on_bed(skirt, bed)
        # Place the shirt and skirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_hanger_115_around_bench_227(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==227
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(hanger,bench_instance)
        else:
            exp(hanger,bench_instance)
    eff:
        unknown[hanger]=False
        close[hanger,bench_instance]=True
        close[bench_instance,hanger]=True
    

#exp_behavior_end

#goal_representation

behavior put_clothes_on_bed(clothes:item, bed:item):
    body:
        achieve on(clothes, bed) # Place the clothes on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        put_clothes_on_bed(shirt, bed)
        put_clothes_on_bed(skirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2047_around_closetdrawer_392(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==392
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

behavior find_clothes_hat_2045_around_closetdrawer_148(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==148
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_hat,closetdrawer_instance)
        else:
            exp(clothes_hat,closetdrawer_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_hat]=True
    

behavior find_hanger_115_around_bench_227(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind bench_instance:item where:
            is_bench(bench_instance) and id[bench_instance]==227
        achieve close_char(char,bench_instance)
        if can_open(bench_instance):
            achieve_once open(bench_instance)
            exp(hanger,bench_instance)
        else:
            exp(hanger,bench_instance)
    eff:
        unknown[hanger]=False
        close[hanger,bench_instance]=True
        close[bench_instance,hanger]=True
    

#exp_behavior_end

#goal_representation
behavior place_clothes_on_bed(clothes:item, bed:item):
    body:
        achieve on(clothes, bed) # Place the clothes item on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the clean skirt

        bind bed: item where:
            is_bed(bed)
        # Select the bed

        place_clothes_on_bed(shirt, bed)
        place_clothes_on_bed(skirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_towel_2057_around_towel_rack_32(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind towel_rack_instance:item where:
            is_towel_rack(towel_rack_instance) and id[towel_rack_instance]==32
        achieve close_char(char,towel_rack_instance)
        if can_open(towel_rack_instance):
            achieve_once open(towel_rack_instance)
            exp(towel,towel_rack_instance)
        else:
            exp(towel,towel_rack_instance)
    eff:
        unknown[towel]=False
        close[towel,towel_rack_instance]=True
        close[towel_rack_instance,towel]=True
    

behavior find_food_dessert_2018_around_kitchen_counter_230(food_dessert:item):
    goal: not unknown(food_dessert)
    body:
        assert is_food_dessert(food_dessert)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_dessert,kitchen_counter_instance)
        else:
            exp(food_dessert,kitchen_counter_instance)
    eff:
        unknown[food_dessert]=False
        close[food_dessert,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_dessert]=True
    

#exp_behavior_end

#goal_representation

behavior place_on_bed(clothing:item, bed:item):
    body:
        achieve on(clothing, bed) # Place the clothing item on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and id[skirt] == 2088
        # Select the skirt

        bind bed: item where:
            is_bed(bed) and id[bed] == 105
        # Select the bed

        place_on_bed(shirt, bed)
        place_on_bed(skirt, bed)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2047_around_closetdrawer_146(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==146
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

behavior find_hanger_128_around_hanger_128(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==128
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(hanger,hanger_instance)
        else:
            exp(hanger,hanger_instance)
    eff:
        unknown[hanger]=False
        close[hanger,hanger_instance]=True
        close[hanger_instance,hanger]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_on_bed(clothes:item, bed:item):
    body:
        achieve on(clothes, bed)

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select a shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select a skirt

        bind bed: item where:
            is_bed(bed)
        # Select a bed

        place_on_bed(shirt, bed)
        # Place the shirt on the bed

        place_on_bed(skirt, bed)
        # Place the skirt on the bed

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2047_around_hanger_114(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==114
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(clothes_jacket,hanger_instance)
        else:
            exp(clothes_jacket,hanger_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,hanger_instance]=True
        close[hanger_instance,clothes_jacket]=True
    

#exp_behavior_end

#goal_representation
behavior place_on_bed(item:item, bed:item):
    body:
        achieve on(item, bed) # Place the item on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind bed: item where:
            is_bed(bed) and id[bed]==105
        # Select the bed with ID 105

        place_on_bed(shirt, bed)
        place_on_bed(skirt, bed)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_hanger_109_around_hanger_109(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==109
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(hanger,hanger_instance)
        else:
            exp(hanger,hanger_instance)
    eff:
        unknown[hanger]=False
        close[hanger,hanger_instance]=True
        close[hanger_instance,hanger]=True
    

#exp_behavior_end

#goal_representation
behavior place_on_bed(clothing:item, bed:item):
    body:
        achieve on(clothing, bed)
        # Ensure the clothing item is placed on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and clean(shirt)
        # Select the clean shirt

        bind skirt: item where:
            is_clothes_skirt(skirt) and clean(skirt)
        # Select the clean skirt

        bind bed: item where:
            is_bed(bed) and id[bed] == 105
        # Select the bed with ID 105

        place_on_bed(shirt, bed)
        place_on_bed(skirt, bed)
        # Place both the shirt and skirt on the bed
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_jacket_2047_around_closetdrawer_116(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==116
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_jacket,closetdrawer_instance)
        else:
            exp(clothes_jacket,closetdrawer_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_jacket]=True
    

behavior find_clothes_hat_2045_around_clothes_scarf_2048(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind clothes_scarf_instance:item where:
            is_clothes_scarf(clothes_scarf_instance) and id[clothes_scarf_instance]==2048
        achieve close_char(char,clothes_scarf_instance)
        if can_open(clothes_scarf_instance):
            achieve_once open(clothes_scarf_instance)
            exp(clothes_hat,clothes_scarf_instance)
        else:
            exp(clothes_hat,clothes_scarf_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,clothes_scarf_instance]=True
        close[clothes_scarf_instance,clothes_hat]=True
    

#exp_behavior_end

#goal_representation
behavior place_clothes_on_bed(clothes:item, bed:item):
    body:
        achieve on(clothes, bed) # Place the clothes on the bed

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt

        bind skirt: item where:
            is_clothes_skirt(skirt)
        # Select the skirt

        bind bed: item where:
            is_bed(bed) and id[bed]==105
        # Select the bed with ID 105

        place_clothes_on_bed(shirt, bed)
        # Place the shirt on the bed

        place_clothes_on_bed(skirt, bed)
        # Place the skirt on the bed
#goal_representation_end

##############################
