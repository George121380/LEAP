From agent.py
Reset goals: The sub-goals are: 
['Prepare a cup of water and place it on the nightstand.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2089_around_nightstand_262(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==262
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(cup,nightstand_instance)
        else:
            exp(cup,nightstand_instance)
    eff:
        unknown[cup]=False
        close[cup,nightstand_instance]=True
        close[nightstand_instance,cup]=True
    

behavior find_cup_2087_around_nightstand_262(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==262
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(cup,nightstand_instance)
        else:
            exp(cup,nightstand_instance)
    eff:
        unknown[cup]=False
        close[cup,nightstand_instance]=True
        close[nightstand_instance,cup]=True
    

#exp_behavior_end

#goal_representation
behavior fill_cup_with_water(cup:item, sink:item):
    body:
        achieve_once inside(cup, sink)
        # Ensure the cup is placed inside the sink

        bind faucet: item where:
            is_faucet(faucet) and close(faucet, sink)
        achieve_once is_on(faucet)
        # Turn on the faucet to fill the cup with water

        achieve has_water(cup)
        # Ensure the cup is filled with water

        achieve_once is_off(faucet)
        # Turn off the faucet after filling the cup

behavior place_cup_on_nightstand(cup:item, nightstand:item):
    body:
        achieve has_water(cup)
        # Ensure the cup is filled with water

        achieve on(cup, nightstand)
        # Place the cup on the nightstand

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select an instance of a cup

        bind sink: item where:
            is_sink(sink)
        # Select an instance of a sink

        fill_cup_with_water(cup, sink)
        # Execute the behavior to fill the cup with water

        bind nightstand: item where:
            is_nightstand(nightstand)
        # Select an instance of a nightstand

        place_cup_on_nightstand(cup, nightstand)
        # Execute the behavior to place the cup on the nightstand
#goal_representation_end

##############################
From agent.py->reset_goal
behavior fill_cup_with_water(cup:item, sink:item):
    body:
        achieve_once inside(cup, sink)
        # Ensure the cup is placed inside the sink

        bind faucet: item where:
            is_faucet(faucet) and close(faucet, sink)
        achieve_once is_on(faucet)
        # Turn on the faucet to fill the cup with water

        achieve has_water(cup)
        # Ensure the cup is filled with water

        achieve_once is_off(faucet)
        # Turn off the faucet after filling the cup

behavior place_cup_on_nightstand(cup:item, nightstand:item):
    body:
        achieve has_water(cup)
        # Ensure the cup is filled with water

        achieve on(cup, nightstand)
        # Place the cup on the nightstand

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select an instance of a cup

        bind sink: item where:
            is_sink(sink)
        # Select an instance of a sink

        fill_cup_with_water(cup, sink)
        # Execute the behavior to fill the cup with water

        bind nightstand: item where:
            is_nightstand(nightstand)
        # Select an instance of a nightstand

        place_cup_on_nightstand(cup, nightstand)
        # Execute the behavior to place the cup on the nightstand
##############################
From agent.py-> find a plan in act()
walk_executor(nightstand_262)exp(cup_2087, nightstand_262)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(sink_133)putin_executor(cup_2087, sink_133)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(nightstand_262)
Find mat_237. Find headset_2086. Find pillow_239. Find drawing_238. Robot is inside bedroom_220. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. Robot is no longer inside home_office_161.
##############################
From agent.py
exp(cup_2087, nightstand_262)
Fail to find cup_2087 around nightstand_262. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_127)exp(cup_2087, table_127)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(sink_133)putin_executor(cup_2087, sink_133)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(table_127)
Find mat_115. Find plate_2105. Find bowl_2097. Find drawing_118. Find console_2027. Find fork_2104. Find bowl_2096. Find crayon_2030. Find napkin_2014. Robot is inside dining_room_1. Robot is close mat_115. Robot is close floor_20. Robot is close table_127. Robot is no longer inside bedroom_220.Robot is no longer close floor_221.Robot is no longer close floor_222.Robot is no longer close nightstand_262.
##############################
From agent.py
exp(cup_2087, table_127)
Fail to find cup_2087 around table_127. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(cup_2087, table_123)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(sink_133)putin_executor(cup_2087, sink_133)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(table_123)
Find mat_114. Find laptop_2015. Find fork_2103. Find bowl_2095. Find cup_2087. Find cup_2088. Find mouse_2003. Find homework_2011. Find shoes_2001. Robot is inside dining_room_1. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer close mat_115.Robot is no longer close floor_20.Robot is no longer close table_127.
##############################
From agent.py
exp(cup_2087, table_123)
Find cup_2087. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(sink_133)putin_executor(cup_2087, sink_133)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(cup_2087)
Robot is inside dining_room_1. Robot is close table_123. Robot is close cup_2087. Robot is no longer close floor_17.Robot is no longer close mat_114.
##############################
From agent.py
grab_executor(cup_2087)
Robot is inside dining_room_1. Robot is close table_123. Robot is close cup_2087. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(sink_133)
Find juice_2034. Find pot_54. Find after_shave_2029. Find cleaning_solution_2098. Find tray_142. Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close sink_133. Robot is no longer close table_123.
##############################
From agent.py
putin_executor(cup_2087, sink_133)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close sink_133. cup_2087 released by right hand. 
##############################
From agent.py
walk_executor(cup_2087)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close sink_133. Robot is no longer close kitchen_counter_132.
##############################
From agent.py
grab_executor(cup_2087)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close sink_133. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close sink_133.
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(nightstand_262)
Robot is inside bedroom_220. Robot is close cup_2087. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
put_executor(cup_2087, nightstand_262)
Robot is inside bedroom_220. Robot is close cup_2087. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. cup_2087 released by right hand. 
##############################
From agent.py
Human Instruction: The cup was placed on the nightstand, but there is no confirmation that the cup was actually filled with water since the faucet was never turned on. You need to ensure that the cup is filled with water by turning on the faucet before placing it on the nightstand.

The actions you have taken:
Action 1: Walk to nightstand_262.
Action 2: look for cup_2087 around nightstand_262.
Action 3: Walk to table_127.
Action 4: look for cup_2087 around table_127.
Action 5: Walk to table_123.
Action 6: look for cup_2087 around table_123.
Action 7: Walk to cup_2087.
Action 8: Grab cup_2087.
Action 9: Walk to sink_133.
Action 10: Put cup_2087 into sink_133.
Action 11: Walk to cup_2087.
Action 12: Grab cup_2087.
Action 13: Walk to faucet_134.
Action 14: Switch off faucet_134.
Action 15: Walk to nightstand_262.
Action 16: Put cup_2087 on nightstand_262.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2092_around_bookshelf_137(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==137
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_cup_2088_around_cup_2088(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2088
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(cup,cup_instance)
        else:
            exp(cup,cup_instance)
    eff:
        unknown[cup]=False
        close[cup,cup_instance]=True
        close[cup_instance,cup]=True
    

behavior find_cup_2087_around_cup_2088(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2088
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(cup,cup_instance)
        else:
            exp(cup,cup_instance)
    eff:
        unknown[cup]=False
        close[cup,cup_instance]=True
        close[cup_instance,cup]=True
    

#exp_behavior_end

#goal_representation
behavior fill_cup_with_water(cup:item, sink:item):
    body:
        achieve_once inside(cup, sink)
        # Place the cup inside the sink

        bind faucet: item where:
            is_faucet(faucet) and close(faucet, sink)
        achieve_once is_on(faucet)
        # Turn on the faucet to fill the cup with water

        achieve has_water(cup)
        # Ensure the cup is filled with water

        achieve_once is_off(faucet)
        # Turn off the faucet after filling the cup

behavior place_cup_on_nightstand(cup:item, nightstand:item):
    body:
        achieve on(cup, nightstand)
        # Place the cup on the nightstand

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup]==2087
        # Select the cup with ID 2087

        bind sink: item where:
            is_sink(sink) and close(sink, cup)
        # Select the sink instance close to the cup

        bind nightstand: item where:
            is_nightstand(nightstand) and id[nightstand]==262
        # Select the nightstand with ID 262

        fill_cup_with_water(cup, sink)
        # Execute the behavior to fill the cup with water

        place_cup_on_nightstand(cup, nightstand)
        # Execute the behavior to place the cup on the nightstand
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior fill_cup_with_water(cup:item, sink:item):
    body:
        achieve_once inside(cup, sink)
        # Place the cup inside the sink

        bind faucet: item where:
            is_faucet(faucet) and close(faucet, sink)
        achieve_once is_on(faucet)
        # Turn on the faucet to fill the cup with water

        achieve has_water(cup)
        # Ensure the cup is filled with water

        achieve_once is_off(faucet)
        # Turn off the faucet after filling the cup

behavior place_cup_on_nightstand(cup:item, nightstand:item):
    body:
        achieve on(cup, nightstand)
        # Place the cup on the nightstand

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup]==2087
        # Select the cup with ID 2087

        bind sink: item where:
            is_sink(sink) and close(sink, cup)
        # Select the sink instance close to the cup

        bind nightstand: item where:
            is_nightstand(nightstand) and id[nightstand]==262
        # Select the nightstand with ID 262

        fill_cup_with_water(cup, sink)
        # Execute the behavior to fill the cup with water

        place_cup_on_nightstand(cup, nightstand)
        # Execute the behavior to place the cup on the nightstand
##############################
From agent.py-> find a plan in act()
grab_executor(cup_2087)walk_executor(sink_133)putin_executor(cup_2087, sink_133)walk_executor(faucet_134)switchon_executor(faucet_134)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
grab_executor(cup_2087)
Robot is inside bedroom_220. Robot is close cup_2087. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(sink_133)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close sink_133. Robot is no longer inside bedroom_220.Robot is no longer close nightstand_262.Robot is no longer close floor_221.Robot is no longer close floor_222.
##############################
From agent.py
putin_executor(cup_2087, sink_133)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close sink_133. cup_2087 released by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close sink_133.Robot is no longer close cup_2087.
##############################
From agent.py
switchon_executor(faucet_134)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(cup_2087)
Robot is inside bedroom_220. Robot is close sink_133. Robot is close cup_2087. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
grab_executor(cup_2087)
Robot is inside bedroom_220. Robot is close sink_133. Robot is close cup_2087. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer inside bedroom_220.Robot is no longer close sink_133.
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(nightstand_262)
Robot is inside bedroom_220. Robot is close cup_2087. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
put_executor(cup_2087, nightstand_262)
Robot is inside bedroom_220. Robot is close cup_2087. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. cup_2087 released by right hand. 
##############################
From agent.py
Human Instruction: Ensure the cup is filled with water by placing it in the sink, turning on the faucet, then filling the cup before proceeding to place it on the nightstand. Currently, the cup has been placed on the nightstand without being filled with water.

The actions you have taken:
Action 1: Walk to nightstand_262.
Action 2: look for cup_2087 around nightstand_262.
Action 3: Walk to table_127.
Action 4: look for cup_2087 around table_127.
Action 5: Walk to table_123.
Action 6: look for cup_2087 around table_123.
Action 7: Walk to cup_2087.
Action 8: Grab cup_2087.
Action 9: Walk to sink_133.
Action 10: Put cup_2087 into sink_133.
Action 11: Walk to cup_2087.
Action 12: Grab cup_2087.
Action 13: Walk to faucet_134.
Action 14: Switch off faucet_134.
Action 15: Walk to nightstand_262.
Action 16: Put cup_2087 on nightstand_262.
Action 17: Grab cup_2087.
Action 18: Walk to sink_133.
Action 19: Put cup_2087 into sink_133.
Action 20: Walk to faucet_134.
Action 21: Switch on faucet_134.
Action 22: Walk to cup_2087.
Action 23: Grab cup_2087.
Action 24: Walk to faucet_134.
Action 25: Switch off faucet_134.
Action 26: Walk to nightstand_262.
Action 27: Put cup_2087 on nightstand_262.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2006_around_sink_307(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==307
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(cup,sink_instance)
        else:
            exp(cup,sink_instance)
    eff:
        unknown[cup]=False
        close[cup,sink_instance]=True
        close[sink_instance,cup]=True
    

behavior find_cup_2087_around_walllamp_44(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind walllamp_instance:item where:
            is_walllamp(walllamp_instance) and id[walllamp_instance]==44
        achieve close_char(char,walllamp_instance)
        if can_open(walllamp_instance):
            achieve_once open(walllamp_instance)
            exp(cup,walllamp_instance)
        else:
            exp(cup,walllamp_instance)
    eff:
        unknown[cup]=False
        close[cup,walllamp_instance]=True
        close[walllamp_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_cup_with_water(cup:item, sink:item):
    body:
        achieve_once inside(cup, sink)
        # Place the cup inside the sink

        bind faucet: item where:
            is_faucet(faucet) and close(faucet, sink)
        achieve_once is_on(faucet)
        # Turn on the faucet to fill the cup with water

        achieve has_water(cup)
        # Ensure the cup is filled with water

        achieve_once is_off(faucet)
        # Turn off the faucet after filling the cup

behavior place_cup_on_nightstand(cup:item, nightstand:item):
    body:
        achieve on(cup, nightstand)
        # Place the cup on the nightstand

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select an instance of a cup

        bind sink: item where:
            is_sink(sink) and close(sink, cup)
        # Select a sink instance close to the cup

        bind nightstand: item where:
            is_nightstand(nightstand)
        # Select an instance of a nightstand

        fill_cup_with_water(cup, sink)
        # Execute the behavior to fill the cup with water

        place_cup_on_nightstand(cup, nightstand)
        # Execute the behavior to place the cup on the nightstand
 
#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_cup_with_water(cup:item, sink:item):
    body:
        achieve_once inside(cup, sink)
        # Place the cup inside the sink

        bind faucet: item where:
            is_faucet(faucet) and close(faucet, sink)
        achieve_once is_on(faucet)
        # Turn on the faucet to fill the cup with water

        achieve has_water(cup)
        # Ensure the cup is filled with water

        achieve_once is_off(faucet)
        # Turn off the faucet after filling the cup

behavior place_cup_on_nightstand(cup:item, nightstand:item):
    body:
        achieve on(cup, nightstand)
        # Place the cup on the nightstand

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select an instance of a cup

        bind sink: item where:
            is_sink(sink) and close(sink, cup)
        # Select a sink instance close to the cup

        bind nightstand: item where:
            is_nightstand(nightstand)
        # Select an instance of a nightstand

        fill_cup_with_water(cup, sink)
        # Execute the behavior to fill the cup with water

        place_cup_on_nightstand(cup, nightstand)
        # Execute the behavior to place the cup on the nightstand
 
##############################
From agent.py-> find a plan in act()
grab_executor(cup_2087)walk_executor(sink_133)putin_executor(cup_2087, sink_133)walk_executor(faucet_134)switchon_executor(faucet_134)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
grab_executor(cup_2087)
Robot is inside bedroom_220. Robot is close cup_2087. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(sink_133)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close sink_133. Robot is no longer inside bedroom_220.Robot is no longer close nightstand_262.Robot is no longer close floor_221.Robot is no longer close floor_222.
##############################
From agent.py
putin_executor(cup_2087, sink_133)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close sink_133. cup_2087 released by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close sink_133.Robot is no longer close cup_2087.
##############################
From agent.py
switchon_executor(faucet_134)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(cup_2087)
Robot is inside bedroom_220. Robot is close sink_133. Robot is close cup_2087. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
grab_executor(cup_2087)
Robot is inside bedroom_220. Robot is close sink_133. Robot is close cup_2087. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer inside bedroom_220.Robot is no longer close sink_133.
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(nightstand_262)
Robot is inside bedroom_220. Robot is close cup_2087. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
put_executor(cup_2087, nightstand_262)
Robot is inside bedroom_220. Robot is close cup_2087. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. cup_2087 released by right hand. 
##############################
