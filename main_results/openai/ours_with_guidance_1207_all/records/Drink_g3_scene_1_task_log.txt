From agent.py
Reset goals: The sub-goals are: 
['1. Get a cup and fill it with water.', '2. Slice the kiwi and add it to the cup with water.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2137_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_cup_2134_around_cupboard_118(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
def has_faucet(sink:item):
    # Determine whether this sink has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet, sink)
    return has_faucet

behavior fill_cup_with_water(cup:item, sink:item):
    body:
        achieve_once inside(cup, sink)
        # Place the cup inside the sink

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            # Turn on the faucet to fill the cup with water

        achieve has_water(cup)
        # Ensure the cup is filled with water

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_off(faucet)
            # Turn off the faucet after filling the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup]==2087
        # Select the cup with ID 2087

        bind sink: item where:
            is_sink(sink) and close(sink, cup)
        # Select the sink instance close to the cup

        fill_cup_with_water(cup, sink)
        # Execute the behavior to fill the cup with water

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2137_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_cup_2133_around_cupboard_118(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
def has_faucet(sink:item):
    # Determine whether this sink has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet, sink)
    return has_faucet

behavior fill_cup_with_water(cup:item, sink:item):
    body:
        achieve_once inside(cup, sink)
        # Place the cup inside the sink

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            # Turn on the faucet to fill the cup with water

        achieve has_water(cup)
        # Ensure the cup is filled with water

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_off(faucet)
            # Turn off the faucet after filling the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select an instance of a cup

        bind sink: item where:
            is_sink(sink)
        # Select an instance of a sink

        fill_cup_with_water(cup, sink)
        # Execute the behavior to fill the cup with water

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_faucet(sink:item):
    # Determine whether this sink has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet, sink)
    return has_faucet

behavior fill_cup_with_water(cup:item, sink:item):
    body:
        achieve_once inside(cup, sink)
        # Place the cup inside the sink

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            # Turn on the faucet to fill the cup with water

        achieve has_water(cup)
        # Ensure the cup is filled with water

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_off(faucet)
            # Turn off the faucet after filling the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select an instance of a cup

        bind sink: item where:
            is_sink(sink)
        # Select an instance of a sink

        fill_cup_with_water(cup, sink)
        # Execute the behavior to fill the cup with water

##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(cup_2132, cupboard_118)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(sink_19)putin_executor(cup_2132, sink_19)walk_executor(faucet_20)switchon_executor(faucet_20)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(cupboard_118)
Find tea_2066. Find knife_2037. Find food_peanut_butter_2077. Find tray_128. Find pot_78. Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. 
##############################
From agent.py
open_executor(cupboard_118)
Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. 
##############################
From agent.py
exp(cup_2132, cupboard_118)
Fail to find cup_2132 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(dishwasher_129)open_executor(dishwasher_129)exp(cup_2132, dishwasher_129)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(sink_19)putin_executor(cup_2132, sink_19)walk_executor(faucet_20)switchon_executor(faucet_20)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(dishwasher_129)
Find detergent_2011. Find measuring_cup_2012. Robot is inside dining_room_41. Robot is close dishwasher_129. Robot is close detergent_2011. Robot is close measuring_cup_2012. Robot is no longer close wall_68.Robot is no longer close tea_2066.Robot is no longer close knife_2037.Robot is no longer close cupboard_118.Robot is no longer close food_peanut_butter_2077.
##############################
From agent.py
open_executor(dishwasher_129)
Robot is inside dining_room_41. Robot is close dishwasher_129. Robot is close detergent_2011. Robot is close measuring_cup_2012. 
##############################
From agent.py
exp(cup_2132, dishwasher_129)
Fail to find cup_2132 around dishwasher_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(cup_2132, kitchen_counter_123)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(sink_19)putin_executor(cup_2132, sink_19)walk_executor(faucet_20)switchon_executor(faucet_20)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Find oil_2149. Find knife_2035. Find food_kiwi_2054. Find food_orange_2027. Find tray_2068. Robot is inside dining_room_41. Robot is close kitchen_counter_123. Robot is close floor_45. Robot is no longer close dishwasher_129.Robot is no longer close detergent_2011.Robot is no longer close measuring_cup_2012.
##############################
From agent.py
exp(cup_2132, kitchen_counter_123)
Fail to find cup_2132 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(cup_2132, kitchen_counter_122)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(sink_19)putin_executor(cup_2132, sink_19)walk_executor(faucet_20)switchon_executor(faucet_20)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Find spectacles_2153. Find fryingpan_2154. Robot is inside dining_room_41. Robot is close kitchen_counter_122. Robot is no longer close kitchen_counter_123.Robot is no longer close floor_45.
##############################
From agent.py
exp(cup_2132, kitchen_counter_122)
Fail to find cup_2132 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(sink_120)exp(cup_2132, sink_120)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(sink_19)putin_executor(cup_2132, sink_19)walk_executor(faucet_20)switchon_executor(faucet_20)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(sink_120)
Find basket_for_clothes_2078. Find soap_2010. Find pot_2138. Find ice_2024. Find soap_2126. Find bowl_2141. Find plate_2152. Find cutting_board_2123. Find food_salt_2041. Find fork_2150. Find bowl_2140. Find bowl_2142. Find fork_2151. Robot is inside dining_room_41. Robot is close sink_120. Robot is close kitchen_counter_119. Robot is no longer close kitchen_counter_122.
##############################
From agent.py
exp(cup_2132, sink_120)
Fail to find cup_2132 around sink_120. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2140)exp(cup_2132, bowl_2140)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(sink_19)putin_executor(cup_2132, sink_19)walk_executor(faucet_20)switchon_executor(faucet_20)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(bowl_2140)
Robot is inside dining_room_41. Robot is close kitchen_counter_119. Robot is close bowl_2140. Robot is no longer close sink_120.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2132 ?
Answer: Go to dining_room_41. Locate table_114. Cup_2132 is on top of table_114. It is in close proximity to the surface of the table.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_41. Locate table_114. Cup_2132 is on top of table_114. It is in close proximity to the surface of the table.

The actions you have taken:
Action 1: Walk to cupboard_118.
Action 2: Open cupboard_118.
Action 3: look for cup_2132 around cupboard_118.
Action 4: Walk to dishwasher_129.
Action 5: Open dishwasher_129.
Action 6: look for cup_2132 around dishwasher_129.
Action 7: Walk to kitchen_counter_123.
Action 8: look for cup_2132 around kitchen_counter_123.
Action 9: Walk to kitchen_counter_122.
Action 10: look for cup_2132 around kitchen_counter_122.
Action 11: Walk to sink_120.
Action 12: look for cup_2132 around sink_120.
Action 13: Walk to bowl_2140.

##############################
From agent.py
exp(cup_2132, bowl_2140)
Fail to find cup_2132 around bowl_2140. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Get a cup and fill it with water.', '2. Slice a kiwi and add the slices to the cup.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_book_2137_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_cup_2133_around_table_114(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==114
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(cup,table_instance)
        else:
            exp(cup,table_instance)
    eff:
        unknown[cup]=False
        close[cup,table_instance]=True
        close[table_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
def has_faucet(sink:item):
    # Determine whether this sink has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet, sink)
    return has_faucet

behavior fill_cup_with_water(cup:item, sink:item):
    body:
        achieve_once inside(cup, sink)
        # Place the cup inside the sink

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            # Turn on the faucet to fill the cup with water

        achieve has_water(cup)
        # Ensure the cup is filled with water

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_off(faucet)
            # Turn off the faucet after filling the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup]==2132
        # Select the cup with the specific ID

        bind sink: item where:
            is_sink(sink)
        # Select the sink instance

        fill_cup_with_water(cup, sink)
        # Execute the behavior to fill the cup with water

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_faucet(sink:item):
    # Determine whether this sink has a faucet
    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet, sink)
    return has_faucet

behavior fill_cup_with_water(cup:item, sink:item):
    body:
        achieve_once inside(cup, sink)
        # Place the cup inside the sink

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_on(faucet)
            # Turn on the faucet to fill the cup with water

        achieve has_water(cup)
        # Ensure the cup is filled with water

        if has_faucet(sink):
            bind faucet: item where:
                is_faucet(faucet) and close(faucet, sink)
            achieve_once is_off(faucet)
            # Turn off the faucet after filling the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup]==2132
        # Select the cup with the specific ID

        bind sink: item where:
            is_sink(sink)
        # Select the sink instance

        fill_cup_with_water(cup, sink)
        # Execute the behavior to fill the cup with water

##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(cup_2132, table_114)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(sink_19)putin_executor(cup_2132, sink_19)walk_executor(faucet_20)switchon_executor(faucet_20)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(table_114)
Find mat_102. Find dry_pasta_2114. Find food_food_2021. Find drawing_110. Find drawing_111. Find knife_2122. Find cup_2133. Find table_cloth_2005. Find food_bread_2084. Find pillow_104. Find cup_2049. Find box_2038. Find clothes_hat_2117. Find clothes_gloves_2118. Find milk_2115. Find pillow_103. Find pillow_105. Find pillow_106. Find lighter_2004. Find lighter_2039. Find cup_2134. Find check_2058. Find cup_2132. Robot is inside dining_room_41. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close bowl_2140.Robot is no longer close kitchen_counter_119.
##############################
From agent.py
exp(cup_2132, table_114)
Find cup_2132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(sink_19)putin_executor(cup_2132, sink_19)walk_executor(faucet_20)switchon_executor(faucet_20)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(faucet_20)switchoff_executor(faucet_20)
##############################
From agent.py
walk_executor(cup_2132)
Robot is inside dining_room_41. Robot is close table_114. Robot is close cup_2132. Robot is no longer close mat_102.Robot is no longer close floor_47.
##############################
From agent.py
grab_executor(cup_2132)
Robot is inside dining_room_41. Robot is close table_114. Robot is close cup_2132. Grabbing cup_2132 by right hand. 
##############################
From agent.py
walk_executor(sink_19)
Find mat_32. Find detergent_2155. Find soap_2125. Find after_shave_2063. Find cleaning_solution_2143. Find drawing_33. Find phone_2029. Robot is inside bathroom_1. Robot is close cup_2132. Robot is close bathroom_counter_18. Robot is close sink_19. Robot is no longer inside dining_room_41.Robot is no longer close table_114.
##############################
From agent.py
putin_executor(cup_2132, sink_19)
Robot is inside bathroom_1. Robot is close cup_2132. Robot is close bathroom_counter_18. Robot is close sink_19. cup_2132 released by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot is inside bathroom_1. Robot is close bathroom_counter_18. Robot is close faucet_20. Robot is no longer close sink_19.Robot is no longer close cup_2132.
##############################
From agent.py
switchon_executor(faucet_20)
Robot is inside bathroom_1. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
From agent.py
walk_executor(cup_2132)
Robot is inside dining_room_41. Robot is close sink_19. Robot is close cup_2132. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_18.Robot is no longer close faucet_20.
##############################
From agent.py
grab_executor(cup_2132)
Robot is inside dining_room_41. Robot is close sink_19. Robot is close cup_2132. Grabbing cup_2132 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Robot is inside bathroom_1. Robot is close cup_2132. Robot is close bathroom_counter_18. Robot is close faucet_20. Robot is no longer inside dining_room_41.Robot is no longer close sink_19.
##############################
From agent.py
switchoff_executor(faucet_20)
Robot is inside bathroom_1. Robot is close cup_2132. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_chicken_2089_around_fridge_126(food_chicken:item):
    goal: not unknown(food_chicken)
    body:
        assert is_food_chicken(food_chicken)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_chicken,fridge_instance)
        else:
            exp(food_chicken,fridge_instance)
    eff:
        unknown[food_chicken]=False
        close[food_chicken,fridge_instance]=True
        close[fridge_instance,food_chicken]=True
    

behavior find_food_kiwi_2099_around_fridge_126(food_kiwi:item):
    goal: not unknown(food_kiwi)
    body:
        assert is_food_kiwi(food_kiwi)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_kiwi,fridge_instance)
        else:
            exp(food_kiwi,fridge_instance)
    eff:
        unknown[food_kiwi]=False
        close[food_kiwi,fridge_instance]=True
        close[fridge_instance,food_kiwi]=True
    

#exp_behavior_end

#goal_representation
 
behavior slice_kiwi(kiwi:item):
    body:
        achieve cut(kiwi)

behavior add_kiwi_slices_to_cup(kiwi:item, cup:item):
    body:
        achieve inside(kiwi, cup)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup] == 2132
        # Select the cup with ID 2132 

        bind kiwi: item where:
            is_food_kiwi(kiwi)
        # Select an instance of a kiwi

        slice_kiwi(kiwi)
        # Execute the behavior to slice the kiwi

        add_kiwi_slices_to_cup(kiwi, cup)
        # Add the sliced kiwi to the cup

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior slice_kiwi(kiwi:item):
    body:
        achieve cut(kiwi)

behavior add_kiwi_slices_to_cup(kiwi:item, cup:item):
    body:
        achieve inside(kiwi, cup)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup] == 2132
        # Select the cup with ID 2132 

        bind kiwi: item where:
            is_food_kiwi(kiwi)
        # Select an instance of a kiwi

        slice_kiwi(kiwi)
        # Execute the behavior to slice the kiwi

        add_kiwi_slices_to_cup(kiwi, cup)
        # Add the sliced kiwi to the cup

##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_kiwi_2099, fridge_126)walk_executor(food_kiwi_2099)grab_executor(food_kiwi_2099)walk_executor(cutting_board_2123)put_executor(food_kiwi_2099, cutting_board_2123)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_kiwi_2099)cut_executor(food_kiwi_2099)grab_executor(food_kiwi_2099)walk_executor(cup_2132)putin_executor(food_kiwi_2099, cup_2132)
##############################
From agent.py
walk_executor(fridge_126)
Find food_onion_2048. Find food_food_2046. Find food_food_2073. Find food_steak_2080. Find food_apple_2081. Find food_bacon_2082. Find food_banana_2083. Find food_cake_2085. Find food_carrot_2086. Find food_cereal_2087. Find food_cheese_2088. Find food_chicken_2089. Find food_dessert_2090. Find food_donut_2091. Find food_egg_2092. Find food_fish_2093. Find food_food_2094. Find food_fruit_2095. Find food_hamburger_2096. Find food_ice_cream_2097. Find food_jam_2098. Find food_kiwi_2099. Find food_lemon_2100. Find food_noodles_2101. Find food_oatmeal_2102. Find food_orange_2103. Find food_onion_2104. Find food_peanut_butter_2105. Find food_pizza_2106. Find food_potato_2107. Find food_rice_2108. Find food_salt_2109. Find food_snack_2110. Find food_sugar_2111. Find food_turkey_2112. Find food_vegetable_2113. Find food_food_2001. Find sauce_2148. Find food_food_1000. Robot is inside dining_room_41. Robot is close cup_2132. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_18.Robot is no longer close faucet_20.
##############################
From agent.py
switchoff_executor(fridge_126)
Find mouse_213. Robot is inside dining_room_41. Robot is close cup_2132. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
open_executor(fridge_126)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
exp(food_kiwi_2099, fridge_126)
Find food_kiwi_2099. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_kiwi_2099)walk_executor(cutting_board_2123)put_executor(food_kiwi_2099, cutting_board_2123)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_kiwi_2099)cut_executor(food_kiwi_2099)grab_executor(food_kiwi_2099)walk_executor(cup_2132)putin_executor(food_kiwi_2099, cup_2132)
##############################
From agent.py
grab_executor(food_kiwi_2099)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. Grabbing food_kiwi_2099 by left hand. 
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close food_kiwi_2099. Robot is close cutting_board_2123. Robot is close kitchen_counter_119. Robot is no longer close food_onion_2048.Robot is no longer close food_food_2046.Robot is no longer close food_food_2073.Robot is no longer close food_steak_2080.Robot is no longer close food_apple_2081.Robot is no longer close food_bacon_2082.Robot is no longer close food_banana_2083.Robot is no longer close food_cake_2085.Robot is no longer close food_carrot_2086.Robot is no longer close food_cereal_2087.Robot is no longer close food_cheese_2088.Robot is no longer close food_chicken_2089.Robot is no longer close food_dessert_2090.Robot is no longer close food_donut_2091.Robot is no longer close food_egg_2092.Robot is no longer close food_fish_2093.Robot is no longer close food_food_2094.Robot is no longer close food_fruit_2095.Robot is no longer close food_hamburger_2096.Robot is no longer close food_ice_cream_2097.Robot is no longer close food_jam_2098.Robot is no longer close food_lemon_2100.Robot is no longer close food_noodles_2101.Robot is no longer close food_oatmeal_2102.Robot is no longer close food_orange_2103.Robot is no longer close food_onion_2104.Robot is no longer close food_peanut_butter_2105.Robot is no longer close food_pizza_2106.Robot is no longer close food_potato_2107.Robot is no longer close food_rice_2108.Robot is no longer close food_salt_2109.Robot is no longer close food_snack_2110.Robot is no longer close food_sugar_2111.Robot is no longer close food_turkey_2112.Robot is no longer close food_vegetable_2113.Robot is no longer close food_food_2001.Robot is no longer close floor_44.Robot is no longer close sauce_2148.Robot is no longer close fridge_126.
##############################
From agent.py
put_executor(food_kiwi_2099, cutting_board_2123)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close food_kiwi_2099. Robot is close cutting_board_2123. Robot is close kitchen_counter_119. food_kiwi_2099 released by left hand. 
##############################
From agent.py
walk_executor(knife_2122)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close knife_2122. Robot is close table_114. Robot is no longer close cutting_board_2123.Robot is no longer close food_kiwi_2099.Robot is no longer close kitchen_counter_119.
##############################
From agent.py
grab_executor(knife_2122)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close knife_2122. Robot is close table_114. Grabbing knife_2122 by left hand. 
##############################
From agent.py
walk_executor(food_kiwi_2099)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close knife_2122. Robot is close cutting_board_2123. Robot is close food_kiwi_2099. Robot is no longer close table_114.
##############################
From agent.py
cut_executor(food_kiwi_2099)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close knife_2122. Robot is close cutting_board_2123. Robot is close food_kiwi_2099. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_food_2074_around_food_food_1000(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==1000
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
 
behavior slice_kiwi(kiwi:item):
    body:
        achieve cut(kiwi)

behavior add_slices_to_cup(kiwi:item, cup:item):
    body:
        achieve inside(kiwi, cup)

behavior __goal__():
    body:
        bind kiwi: item where:
            is_food_kiwi(kiwi) and not cut(kiwi)
        # Select a kiwi that is not yet sliced

        bind cup: item where:
            is_cup(cup) and has_water(cup)
        # Select a cup that is already filled with water

        slice_kiwi(kiwi)
        # Slice the kiwi

        add_slices_to_cup(kiwi, cup)
        # Add the kiwi slices to the cup

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_drawing_111_around_drawing_111(drawing:item):
    goal: not unknown(drawing)
    body:
        assert is_drawing(drawing)
        bind drawing_instance:item where:
            is_drawing(drawing_instance) and id[drawing_instance]==111
        achieve close_char(char,drawing_instance)
        if can_open(drawing_instance):
            achieve_once open(drawing_instance)
            exp(drawing,drawing_instance)
        else:
            exp(drawing,drawing_instance)
    eff:
        unknown[drawing]=False
        close[drawing,drawing_instance]=True
        close[drawing_instance,drawing]=True
    

#exp_behavior_end

#goal_representation
 
behavior slice_kiwi_and_add_to_cup(food_kiwi:item, cup:item):
    body:
        achieve cut(food_kiwi)
        # Ensure the kiwi is sliced

        achieve inside(food_kiwi, cup)
        # Add the sliced kiwi to the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup] == 2132
        # Select the cup with ID 2132

        bind food_kiwi: item where:
            is_food_kiwi(food_kiwi) and id[food_kiwi] == 2099
        # Select the kiwi with ID 2099

        slice_kiwi_and_add_to_cup(food_kiwi, cup)
        # Execute behavior to slice the kiwi and add it to the cup

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior slice_kiwi_and_add_to_cup(food_kiwi:item, cup:item):
    body:
        achieve cut(food_kiwi)
        # Ensure the kiwi is sliced

        achieve inside(food_kiwi, cup)
        # Add the sliced kiwi to the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup] == 2132
        # Select the cup with ID 2132

        bind food_kiwi: item where:
            is_food_kiwi(food_kiwi) and id[food_kiwi] == 2099
        # Select the kiwi with ID 2099

        slice_kiwi_and_add_to_cup(food_kiwi, cup)
        # Execute behavior to slice the kiwi and add it to the cup

##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2078)put_executor(knife_2122, basket_for_clothes_2078)walk_executor(food_kiwi_2099)grab_executor(food_kiwi_2099)walk_executor(cup_2132)putin_executor(food_kiwi_2099, cup_2132)
##############################
From agent.py
walk_executor(basket_for_clothes_2078)
Find clothes_pants_2157. Find clothes_shirt_2158. Find clothes_socks_2159. Find clothes_skirt_2160. Robot is inside dining_room_41. Robot is close cup_2132. Robot is close knife_2122. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close clothes_socks_2159. Robot is close clothes_skirt_2160. Robot is close basket_for_clothes_2078. Robot is no longer close food_kiwi_2099.Robot is no longer close cutting_board_2123.
##############################
From agent.py
put_executor(knife_2122, basket_for_clothes_2078)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close knife_2122. Robot is close clothes_pants_2157. Robot is close clothes_shirt_2158. Robot is close clothes_socks_2159. Robot is close clothes_skirt_2160. Robot is close basket_for_clothes_2078. knife_2122 released by left hand. 
##############################
From agent.py
walk_executor(food_kiwi_2099)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close cutting_board_2123. Robot is close food_kiwi_2099. Robot is no longer close knife_2122.Robot is no longer close clothes_pants_2157.Robot is no longer close clothes_shirt_2158.Robot is no longer close clothes_socks_2159.Robot is no longer close clothes_skirt_2160.Robot is no longer close basket_for_clothes_2078.
##############################
From agent.py
grab_executor(food_kiwi_2099)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close cutting_board_2123. Robot is close food_kiwi_2099. Grabbing food_kiwi_2099 by left hand. 
##############################
From agent.py
walk_executor(cup_2132)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close food_kiwi_2099. Robot is no longer close cutting_board_2123.
##############################
From agent.py
putin_executor(food_kiwi_2099, cup_2132)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close food_kiwi_2099. food_kiwi_2099 released by left hand. 
##############################
